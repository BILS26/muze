{"version":3,"sources":["webpack://muze/webpack/universalModuleDefinition","webpack://muze/webpack/bootstrap","webpack://muze/webpack://DataModel/webpack/universalModuleDefinition","webpack://muze/webpack://DataModel/webpack/bootstrap","webpack://muze/webpack://DataModel/src/index.js","webpack://muze/webpack://DataModel/src/enums/data-format.js","webpack://muze/webpack://DataModel/src/enums/dimension-subtype.js","webpack://muze/webpack://DataModel/src/enums/measure-subtype.js","webpack://muze/webpack://DataModel/src/enums/field-type.js","webpack://muze/webpack://DataModel/src/enums/filtering-mode.js","webpack://muze/webpack://DataModel/src/enums/group-by-functions.js","webpack://muze/webpack://DataModel/src/utils/date-time-formatter.js","webpack://muze/webpack://DataModel/src/utils/column-major.js","webpack://muze/webpack://DataModel/src/utils/extend2.js","webpack://muze/webpack://DataModel/src/utils/helper.js","webpack://muze/webpack://DataModel/src/field-store.js","webpack://muze/webpack://DataModel/src/value.js","webpack://muze/webpack://DataModel/src/operator/row-diffset-iterator.js","webpack://muze/webpack://DataModel/src/invalid-aware-types.js","webpack://muze/webpack://DataModel/src/constants/index.js","webpack://muze/webpack://DataModel/src/operator/get-common-schema.js","webpack://muze/webpack://DataModel/src/operator/cross-product.js","webpack://muze/webpack://DataModel/src/operator/merge-sort.js","webpack://muze/webpack://DataModel/src/operator/sort.js","webpack://muze/webpack://DataModel/src/operator/data-builder.js","webpack://muze/webpack://DataModel/src/operator/difference.js","webpack://muze/webpack://DataModel/src/operator/group-by-function.js","webpack://muze/webpack://DataModel/src/utils/reducer-store.js","webpack://muze/webpack://DataModel/src/operator/natural-join-filter-function.js","webpack://muze/webpack://DataModel/src/operator/union.js","webpack://muze/webpack://DataModel/src/operator/outer-join.js","webpack://muze/webpack://DataModel/src/fields/field/index.js","webpack://muze/webpack://DataModel/src/fields/dimension/index.js","webpack://muze/webpack://DataModel/src/fields/categorical/index.js","webpack://muze/webpack://DataModel/src/fields/temporal/index.js","webpack://muze/webpack://DataModel/src/fields/binned/index.js","webpack://muze/webpack://DataModel/src/fields/measure/index.js","webpack://muze/webpack://DataModel/src/fields/continuous/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/field-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/categorical-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/temporal-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/binned-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/continuous-parser/index.js","webpack://muze/webpack://DataModel/src/fields/partial-field/index.js","webpack://muze/webpack://DataModel/src/field-creator.js","webpack://muze/webpack://DataModel/src/default-config.js","webpack://muze/webpack://DataModel/src/converter/dsv-arr.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/dsv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/csv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/tsv.js","webpack://muze/webpack://DataModel/src/converter/dsv-str.js","webpack://muze/webpack://DataModel/src/converter/flat-json.js","webpack://muze/webpack://DataModel/src/converter/auto-resolver.js","webpack://muze/webpack://DataModel/src/helper.js","webpack://muze/webpack://DataModel/src/relation.js","webpack://muze/webpack://DataModel/src/datamodel.js","webpack://muze/webpack://DataModel/src/operator/group-by.js","webpack://muze/webpack://DataModel/src/operator/bucket-creator.js","webpack://muze/webpack://DataModel/src/stats/index.js","webpack://muze/webpack://DataModel/src/export.js","webpack://muze/webpack://DataModel/src/operator/compose.js","webpack://muze/webpack://DataModel/src/operator/pure-operators.js","webpack://muze/webpack://DataModel/src/operator/natural-join.js","webpack://muze/(webpack)/buildin/module.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/SmartlabelManager.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/lib.js","webpack://muze/webpack://hyperdis/webpack/universalModuleDefinition","webpack://muze/webpack://hyperdis/webpack/bootstrap","webpack://muze/webpack://hyperdis/src/utils/set.js","webpack://muze/webpack://hyperdis/src/utils/index.js","webpack://muze/webpack://hyperdis/src/graph-node.js","webpack://muze/webpack://hyperdis/src/electric-node.js","webpack://muze/webpack://hyperdis/src/graph.js","webpack://muze/webpack://hyperdis/src/model.js","webpack://muze/webpack://hyperdis/src/index.js","webpack://muze/./packages/muze/src/index.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/container-manager.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisector.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisect.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/range.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ticks.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/threshold/sturges.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/map.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/nest.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/set.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/ordinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/band.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/define.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/lab.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/rgb.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/object.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/string.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/value.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/parse.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/date.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/round.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/decompose.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/zoom.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hsl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hcl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/piecewise.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/continuous.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatDecimal.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/exponent.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatSpecifier.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTrim.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatPrefixAuto.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatRounded.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTypes.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatGroup.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatNumerals.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionFixed.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/tickFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionPrefix.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionRound.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/nice.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/log.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/pow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/threshold.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/interval.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/millisecond.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/second.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/minute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/hour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/day.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/week.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/month.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/year.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMinute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcHour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcDay.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcWeek.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMonth.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcYear.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoParse.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/time.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20b.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20c.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/viridis.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/sequential.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/ramp.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack://muze/./packages/muze-utils/src/enums/namespace.js","webpack://muze/./packages/muze-utils/src/enums/reserved-fields.js","webpack://muze/./packages/muze-utils/src/enums/common-props.js","webpack://muze/./packages/muze-utils/src/enums/constants.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/axis.js","webpack://muze/./packages/muze-utils/node_modules/d3-path/src/path.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/arc.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/line.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/area.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/radial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/lineRadial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/diamond.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/star.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/square.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/triangle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/wye.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/noop.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/bundle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRom.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linearClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/monotone.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/natural.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/step.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/stack.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/cubic.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/poly.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/sin.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/bounce.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/back.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/elastic.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/RedBlackTree.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Edge.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Cell.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Beach.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Diagram.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/voronoi.js","webpack://muze/./packages/muze-utils/src/DataSystem/selection.js","webpack://muze/./packages/muze-utils/src/enums/stack-config.js","webpack://muze/./packages/muze-utils/src/common-utils.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/circle.js","webpack://muze/./packages/muze-utils/src/DataSystem/dataSelect.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/diverging.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/expand.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/wiggle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/pie.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespaces.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespace.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/creator.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selector.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selectorAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/matcher.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sparse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/enter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/data.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sort.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/window.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/classed.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/html.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/raise.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/lower.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/insert.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/clone.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/exit.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/join.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/order.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/call.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/nodes.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/node.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/size.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/empty.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/each.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/property.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/append.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/datum.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/local.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/sourceEvent.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/mouse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/touch.js","webpack://muze/./packages/muze-utils/node_modules/d3-dispatch/src/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/noevent.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/nodrag.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/event.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/drag.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timer.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timeout.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/schedule.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/tween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/interpolate.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selection.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attrTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/styleTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/delay.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/ease.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/end.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/interrupt.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/interrupt.js","webpack://muze/./packages/muze-utils/src/renderer-utils.js","webpack://muze/./packages/muze-utils/src/store.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/event-list.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/lifecycle-manager.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/index.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/helper.js","webpack://muze/./packages/muze-utils/src/index.js","webpack://muze/./packages/muze-firebolt/src/enums/actions.js","webpack://muze/./packages/muze-firebolt/src/enums/selection.js","webpack://muze/./packages/muze-firebolt/src/selection-set/index.js","webpack://muze/./packages/muze-firebolt/src/selection-set/selection-set.js","webpack://muze/./packages/muze-firebolt/src/enums/constants.js","webpack://muze/./packages/muze-firebolt/src/helper/index.js","webpack://muze/./packages/muze-firebolt/src/firebolt.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/generic.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/volatile.js","webpack://muze/./packages/muze-firebolt/src/enums/behaviours.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/highlight.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/brush.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/filter.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/persistent.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/select.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-action-config.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-event.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/hover.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/click.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/drag.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/longtouch.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/touch-drag.js","webpack://muze/./packages/muze-firebolt/src/enums/side-effects.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/props.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/generic-sideeffect.js","webpack://muze/./packages/muze-firebolt/src/side-effects/surrogate.js","webpack://muze/./packages/muze-firebolt/src/side-effects/spawnable.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/helper.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/selection-box-drag.js","webpack://muze/./packages/muze-tooltip/src/constants.js","webpack://muze/./packages/muze-tooltip/src/default-config.js","webpack://muze/./packages/muze-tooltip/src/helper.js","webpack://muze/./packages/muze-tooltip/src/content.js","webpack://muze/./packages/muze-tooltip/src/tooltip.js","webpack://muze/./packages/muze-firebolt/src/enums/tooltip-strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/helper/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/crossline/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/strategy.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/filter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/anchors/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/persistent-anchors.js","webpack://muze/./packages/muze-firebolt/src/side-effects/brush-anchors.js","webpack://muze/./packages/muze-firebolt/src/behaviour-effect-map.js","webpack://muze/./packages/visual-layer/src/enums/constants.js","webpack://muze/./packages/visual-layer/src/layers/area/default-config.js","webpack://muze/./packages/visual-layer/src/simple-layer/simple-layer.js","webpack://muze/./packages/visual-layer/src/base-layer/props.js","webpack://muze/./packages/visual-layer/src/enums/props.js","webpack://muze/./packages/muze-axis/src/enums/axis-orientation.js","webpack://muze/./packages/muze-axis/src/enums/scale-type.js","webpack://muze/./packages/muze-axis/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/scale-creator.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/default-config.js","webpack://muze/./packages/muze-axis/src/axis-renderer.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/skip-ticks.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/space-setter.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/helper.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/props.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/simple-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/linear.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/log.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/pow.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/continous-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/band-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/time-axis.js","webpack://muze/./packages/muze-axis/src/color-axis/color-maps.js","webpack://muze/./packages/muze-axis/src/color-axis/defaults.js","webpack://muze/./packages/muze-axis/src/color-axis/props.js","webpack://muze/./packages/muze-axis/src/helper.js","webpack://muze/./packages/muze-axis/src/color-axis/color-strategy.js","webpack://muze/./packages/muze-axis/src/color-axis/color-axis.js","webpack://muze/./packages/muze-axis/src/size-axis/defaults.js","webpack://muze/./packages/muze-axis/src/size-axis/size-strategy.js","webpack://muze/./packages/muze-axis/src/size-axis/props.js","webpack://muze/./packages/muze-axis/src/size-axis/size-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/defaults.js","webpack://muze/./packages/muze-axis/src/shape-axis/props.js","webpack://muze/./packages/muze-axis/src/shape-axis/shape-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/helper.js","webpack://muze/./packages/muze-axis/src/polar-axis/props.js","webpack://muze/./packages/muze-axis/src/polar-axis/angle-axis.js","webpack://muze/./packages/visual-group/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/polar-axis/radius-axis.js","webpack://muze/./packages/muze-axis/src/data-type-scale-map.js","webpack://muze/./packages/transform/src/group-transform/index.js","webpack://muze/./packages/transform/src/identity-transform/index.js","webpack://muze/./packages/transform/src/transform-factory/index.js","webpack://muze/./packages/transform/src/enums/transform-type.js","webpack://muze/./packages/transform/src/stack-transform/index.js","webpack://muze/./packages/visual-layer/src/helpers/index.js","webpack://muze/./packages/visual-layer/src/base-layer/local-options.js","webpack://muze/./packages/visual-layer/src/base-layer/listener-map.js","webpack://muze/./packages/visual-layer/src/base-layer/base-layer.js","webpack://muze/./packages/visual-layer/src/layers/line/renderer.js","webpack://muze/./packages/visual-layer/src/layers/line/default-config.js","webpack://muze/./packages/visual-layer/src/layers/line/line.js","webpack://muze/./packages/visual-layer/src/layers/area/renderer.js","webpack://muze/./packages/visual-layer/src/layers/area/area.js","webpack://muze/./packages/visual-layer/src/layers/arc/default-config.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc-helper.js","webpack://muze/./packages/visual-layer/src/layers/text/renderer.js","webpack://muze/./packages/visual-layer/src/layers/text/default-config.js","webpack://muze/./packages/visual-layer/src/layers/text/text.js","webpack://muze/./packages/visual-layer/src/layers/point/renderer.js","webpack://muze/./packages/visual-layer/src/layers/point/default-config.js","webpack://muze/./packages/visual-layer/src/layers/point/point.js","webpack://muze/./packages/visual-layer/src/layers/bar/renderer.js","webpack://muze/./packages/visual-layer/src/layers/bar/default-config.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar-helper.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar.js","webpack://muze/./packages/visual-layer/src/layers/tick/default-config.js","webpack://muze/./packages/visual-layer/src/layers/tick/renderer.js","webpack://muze/./packages/visual-layer/src/layers/tick/tick.js","webpack://muze/./packages/visual-layer/src/enums/layer-types.js","webpack://muze/./packages/visual-layer/src/layer-factory/layer-factory.js","webpack://muze/./packages/visual-layer/src/layer-factory/index.js","webpack://muze/./packages/visual-layer/src/defaults.js","webpack://muze/./packages/visual-group/src/visual-group/local-options.js","webpack://muze/./packages/visual-group/src/simple-group/simple-group.js","webpack://muze/./packages/visual-unit/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/visual-unit/src/helper/index.js","webpack://muze/./packages/visual-unit/src/enums/constants.js","webpack://muze/./packages/visual-unit/src/helper/grid-lines.js","webpack://muze/./packages/visual-unit/src/listener-map.js","webpack://muze/./packages/visual-unit/src/enums/reactive-props.js","webpack://muze/./packages/visual-unit/src/props.js","webpack://muze/./packages/visual-unit/src/firebolt/payload-generator.js","webpack://muze/./packages/visual-unit/src/firebolt/data-propagator.js","webpack://muze/./packages/visual-unit/src/firebolt/index.js","webpack://muze/./packages/visual-unit/src/firebolt/helper.js","webpack://muze/./packages/visual-unit/src/default-config.js","webpack://muze/./packages/visual-unit/src/local-options.js","webpack://muze/./packages/visual-unit/src/visual-unit.js","webpack://muze/./packages/visual-group/src/variable/variable.js","webpack://muze/./packages/visual-group/src/variable/composed-vars.js","webpack://muze/./packages/visual-group/src/variable/simple-var.js","webpack://muze/./packages/visual-group/src/encoder/field-sanitizer.js","webpack://muze/./packages/visual-group/src/encoder/visual-encoder.js","webpack://muze/./packages/visual-group/src/enums/scale-maps.js","webpack://muze/./packages/visual-group/src/data-type-scale-map.js","webpack://muze/./packages/visual-group/src/encoder/encoder-helper.js","webpack://muze/./packages/visual-group/src/encoder/cartesian-encoder.js","webpack://muze/./packages/visual-group/src/encoder/polar-encoder.js","webpack://muze/./packages/visual-group/src/encoder/retinal-encoder.js","webpack://muze/./packages/visual-group/src/group-helper/group-utils.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-model.js","webpack://muze/./packages/visual-group/src/group-helper/cell-creator.js","webpack://muze/./packages/visual-group/src/group-helper/resolver-props.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-resolver.js","webpack://muze/./packages/visual-group/src/visual-group/value-matrix.js","webpack://muze/./packages/visual-group/src/visual-group/helper.js","webpack://muze/./packages/visual-group/src/visual-group/change-listener.js","webpack://muze/./packages/visual-group/src/visual-group/props.js","webpack://muze/./packages/visual-group/src/visual-group/visual-group.js","webpack://muze/./packages/muze-legend/src/firebolt/behavioural/select.js","webpack://muze/./packages/muze-legend/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/muze-legend/src/firebolt/behaviour-effect-map.js","webpack://muze/./packages/muze-legend/src/enums/behaviours.js","webpack://muze/./packages/muze-legend/src/enums/side-effects.js","webpack://muze/./packages/muze-legend/src/enums/constants.js","webpack://muze/./packages/muze-legend/src/firebolt/helper.js","webpack://muze/./packages/muze-legend/src/firebolt/legend-firebolt.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/drag.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/hover.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/click.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/index.js","webpack://muze/./packages/muze-legend/src/enums/actions.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/selection-box-drag.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/selection-box/index.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/strategies.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/index.js","webpack://muze/./packages/muze-legend/src/legend/props.js","webpack://muze/./packages/muze-legend/src/legend/defaults.js","webpack://muze/./packages/muze-legend/src/legend/legend-helper.js","webpack://muze/./packages/muze-legend/src/legend/simple-legend.js","webpack://muze/./packages/muze-legend/src/legend/position-config.js","webpack://muze/./packages/muze-legend/src/legend/renderer.js","webpack://muze/./packages/muze-legend/src/legend/discrete-legend.js","webpack://muze/./packages/muze-legend/src/legend/gradient-helper.js","webpack://muze/./packages/muze-legend/src/legend/gradient-legend.js","webpack://muze/./packages/muze-legend/src/legend/step-legend.js","webpack://muze/./packages/muze/src/constants.js","webpack://muze/./packages/muze/src/operators.js","webpack://muze/./packages/muze/src/action-model.js","webpack://muze/./packages/muze/src/canvas/defaults.js","webpack://muze/./packages/muze/src/canvas/local-options.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/layoutComponent.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/dummy-component.js","webpack://muze/./packages/muze/src/defaults.js","webpack://muze/./packages/layout/src/tree-layout/constants/defaults.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/definitionModel.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/helper/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/tree/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/layout-model/index.js","webpack://muze/./packages/layout/src/enums/constants.js","webpack://muze/./packages/layout/src/tree-layout/utils/index.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-point.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-parser.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/helper.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/html-data.js","webpack://muze/./packages/layout/src/tree-layout/renderers/renderer.js","webpack://muze/./packages/layout/src/tree-layout/renderers/html-renderer.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/layout-def.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/index.js","webpack://muze/./packages/muze/src/canvas/helper.js","webpack://muze/./packages/muze/src/options.js","webpack://muze/./packages/layout/src/generic-layout/index.js","webpack://muze/./packages/layout/src/grid-layout/defaults.js","webpack://muze/./packages/layout/src/utils/index.js","webpack://muze/./packages/layout/src/visual-matrix/props.js","webpack://muze/./packages/layout/src/visual-matrix/default-config.js","webpack://muze/./packages/layout/src/visual-matrix/visual-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/row-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/column-matrix.js","webpack://muze/./packages/layout/src/grid-layout/computations.js","webpack://muze/./packages/layout/src/grid-layout/view-info-getter.js","webpack://muze/./packages/layout/src/grid-layout/layout.js","webpack://muze/./packages/layout/src/grid-layout/layout-helper.js","webpack://muze/./packages/layout/src/grid-layout/border-helper.js","webpack://muze/./packages/layout/src/grid-layout/span-maker.js","webpack://muze/./packages/muze/src/transaction-support.js","webpack://muze/./packages/muze/src/canvas/component-resolver.js","webpack://muze/./packages/visual-cell/src/enums/constants.js","webpack://muze/./packages/visual-cell/src/enums/cell-type.js","webpack://muze/./packages/visual-cell/src/simple-cell.js","webpack://muze/./packages/visual-cell/src/enums/defaults.js","webpack://muze/./packages/visual-cell/src/props.js","webpack://muze/./packages/visual-cell/src/axis-cell.js","webpack://muze/./packages/visual-cell/src/blank-cell.js","webpack://muze/./packages/visual-cell/src/text-cell.js","webpack://muze/./packages/visual-cell/src/geom-cell.js","webpack://muze/./packages/visual-cell/src/defaults.js","webpack://muze/./packages/visual-cell/src/constants.js","webpack://muze/./packages/visual-cell/src/cell-registry.js","webpack://muze/./packages/muze/src/canvas/title-maker.js","webpack://muze/./packages/muze/src/canvas/legend-maker.js","webpack://muze/./packages/muze/src/canvas/components/muze-chart-component.js","webpack://muze/./packages/muze/src/canvas/components/headerComponent.js","webpack://muze/./packages/muze/src/canvas/components/legendComponent.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/helper.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/props.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-component.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/horizontal-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/vertical-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/matrix-component.js","webpack://muze/./packages/muze/src/canvas/components/grid-component.js","webpack://muze/./packages/muze/src/enums/constants.js","webpack://muze/./packages/muze/src/canvas/components/message-component.js","webpack://muze/./packages/muze/src/canvas/component-wrapper-maker.js","webpack://muze/./packages/muze/src/canvas/scroll-manager.js","webpack://muze/./packages/muze/src/canvas/layout-maker.js","webpack://muze/./packages/muze/src/canvas/firebolt/group-firebolt.js","webpack://muze/./packages/muze/src/canvas/firebolt/index.js","webpack://muze/./packages/muze/src/canvas/app-state.js","webpack://muze/./packages/muze/src/canvas/canvas.js","webpack://muze/./packages/muze/src/default-registry.js","webpack://muze/./packages/visual-layer/src/layer-registry.js","webpack://muze/./packages/muze/src/muze.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","_typeof","DataModel","require","DataFormat","FLAT_JSON","DSV_STR","DSV_ARR","AUTO","DimensionSubtype","CATEGORICAL","TEMPORAL","GEO","BINNED","MeasureSubtype","CONTINUOUS","FieldType","MEASURE","DIMENSION","FilteringMode","NORMAL","INVERSE","ALL","GROUP_BY_FUNCTIONS","SUM","AVG","MIN","MAX","FIRST","LAST","COUNT","STD","convertToNativeDate","date","Date","pad","DateTimeFormatter","format","this","dtParams","nativeDate","RegExp","escape","text","replace","TOKEN_PREFIX","DATETIME_PARAM_SEQUENCE","YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","defaultNumberParser","defVal","val","parsedVal","isFinite","parseInt","defaultRangeParser","range","nVal","toLowerCase","length","getTokenDefinitions","daysDef","short","long","monthsDef","H","index","extract","parser","formatter","getHours","toString","hours","P","M","getMinutes","S","getSeconds","K","getMilliseconds","a","join","day","getDay","A","e","getDate","b","month","getMonth","B","y","result","substring","presentDate","presentYear","Math","trunc","getFullYear","year","Y","getTokenFormalNames","definitions","HOUR_12","AMPM_UPPERCASE","AMPM_LOWERCASE","SHORT_DAY","LONG_DAY","DAY_OF_MONTH","DAY_OF_MONTH_CONSTANT_WIDTH","SHORT_MONTH","LONG_MONTH","MONTH_OF_YEAR","SHORT_YEAR","LONG_YEAR","tokenResolver","defaultResolver","arg","targetParam","arguments","hourFormat24","hourFormat12","ampmLower","ampmUpper","amOrpm","isPM","findTokens","tokenPrefix","tokenLiterals","keys","occurrence","forwardChar","indexOf","push","token","formatAs","nDate","formattedStr","String","formattedVal","parse","dateTimeStamp","options","extractTokenValue","dtParamSeq","noBreak","dtParamArr","args","resolverKey","resolverParams","resolverFn","param","resolvedVal","splice","apply","checkIfOnlyYear","unshift","tokenObj","lastOccurrenceIndex","occObj","occIndex","targetText","regexFormat","tokenArr","map","obj","occurrenceLength","extractValues","match","shift","getNativeDate","Number","len","v","store","fields","Array","forEach","fieldIndex","from","OBJECTSTRING","objectToStrFn","objectToStr","arrayToStr","checkCyclicRef","parentArr","bIndex","extend2","obj1","obj2","skipUndef","merge","tgtArr","srcArr","item","srcVal","tgtVal","str","cRef","isArray","getUniqueId","getTime","round","random","isArrEqual","arr1","arr2","formatNumber","detectDataFormat","data","fieldStore","createNamespace","fieldArr","dataId","fieldsObj","_cachedFieldsObj","field","getMeasure","measureFields","_cachedMeasure","schema","type","getDimension","dimensionFields","_cachedDimension","Value","rawValue","formattedValue","getNumberFormattedVal","defineProperties","_value","configurable","writable","_formattedValue","_internalValue","rowDiffsetIterator","rowDiffset","callback","split","diffStr","diffStsArr","start","end","InvalidAwareTypes","config","assign","_invalidAwareValsMap","invalidAwareVals","NULL","NA","NIL","invalid","nil","null","undefined","DM_DERIVATIVES","SELECT","PROJECT","GROUPBY","COMPOSE","CAL_VAR","BIN","SORT","JOINS","CROSS","LEFTOUTER","RIGHTOUTER","NATURAL","FULLOUTER","getCommonSchema","fs1","fs2","retArr","fs1Arr","defaultFilterFn","crossProduct","dm1","dm2","filterFn","replaceCommonSchema","jointype","applicableFilterFn","dm1FieldStore","getFieldspace","dm2FieldStore","dm1FieldStoreName","dm2FieldStoreName","commonSchemaList","Error","tmpSchema","_rowDiffset","rowAdded","rowPosition","ii","tuple","userArg","partialField","formattedData","dm1Fields","prepareJoinData","dm2Fields","detachedRoot","tupleObj","cellVal","iii","defSortFn","a1","b1","mergeSort","arr","sortFn","sort","lo","hi","mid","floor","mainArr","auxArr","resolveStrSortOrder","fDetails","strSortOrder","sortOrder","dataType","sortType","retFunc","groupData","hashMap","Map","groupedData","datum","fieldVal","has","set","createSortingFnArg","groupedDatum","targetFields","targetFieldDetails","label","reduce","acc","next","idx","applyStandardSort","sortingDetails","fieldName","sortMeta","fieldInSchema","sortingFn","slice","f","makeGroupMapAndSort","depColumns","targetCol","currRow","fVal","u","iterator","done","nMap","dataBuilder","colIdentifier","retObj","uids","addUid","columnWise","reqSorting","tmpDataArr","colName","insertInd","sortData","dataObj","filter","sDetial","groupSortingIdx","findIndex","standardSortingDetails","groupSortingDetails","detail","sortedGroupMap","row","nextMap","pop","tmpData","difference","hashTable","schemaNameArr","dm1FieldStoreFieldObj","dm2FieldStoreFieldObj","_colIdentifier","prepareDataHelper","dm","addData","hashData","schemaName","getFilteredValues","sum","filteredNumber","curr","avg","totalSum","isNaN","fnList","filteredValues","min","max","sqrt","mean","pow","num","defaultReducerName","ReducerStore","defReducer","entries","reducer","__unregister","Function","reducerStore","naturalJoinFilter","commonSchemaArr","retainTuple","internalValue","union","leftOuterJoin","dataModel1","dataModel2","rightOuterJoin","Field","subtype","description","displayName","Dimension","_cachedDomain","calculateDataDomain","Categorical","hash","Set","domain","add","Temporal","__proto__","getPrototypeOf","_cachedMinDiff","sortedData","arrLn","minDiff","POSITIVE_INFINITY","prevDatum","nextDatum","processedCount","dataFormat","isInvalid","parsedDatum","getInvalidType","Binned","binsArr","bins","Measure","unit","defAggFn","numberFormat","Continuous","NEGATIVE_INFINITY","FieldParser","CategoricalParser","trim","TemporalParser","_dtf","BinnedParser","matched","parseFloat","ContinuousParser","PartialField","_sanitize","createFields","dataColumn","headers","headersObj","header","nt","DSVArr","schemaFields","unitSchema","firstRowHeader","columns","columnMajor","headerMap","h","schemaField","headIndex","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","JSON","stringify","inferColumns","rows","columnSet","column","width","pt","delimiter","reFormat","DELIMITER","charCodeAt","parseRows","N","I","eof","eol","j","preformatBody","formatValue","formatRow","formatDate","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","milliseconds","getUTCMilliseconds","getUTCFullYear","getUTCMonth","getUTCDate","test","convert","concat","formatBody","formatRows","csv","dsv","tsv","DSVStr","fieldSeparator","d3Dsv","FlatJSON","insertionIndex","schemaFieldsName","Auto","converters","prepareSelectionData","rawData","resp","wt","persistDerivations","sourceDm","model","operation","persistCurrentDerivation","criteriaFn","_derivation","_t","op","meta","criteria","persistAncestorDerivation","newDm","_ancestorDerivation","selectModeMap","diffIndex","calcDiff","generateRowDiffset","lastInsertedValue","li","selectRowDiffsetIterator","checker","newRowDiffSet","rejRowDiffSet","shouldSelect","shouldReject","checkerResult","rejectRowDiffset","selectHelper","clonedDm","selectFn","cachedStore","cloneProvider","getPartialFieldspace","formattedFieldsData","rawFieldsData","getKey","fn","filterPropagationModel","propModels","fns","filterByMeasure","clonedModel","cloneWithAllFields","clone","partialFieldspace","__calculateFieldspace","calculateFieldsConfig","modelFieldsConfig","getFieldsConfig","keyFn","dataModel","propModel","getData","fieldsConfig","dimensions","dLen","indices","measures","fieldsSpace","valuesMap","present","every","select","saveChild","some","addDiffsetToClonedDm","selectConfig","cloneWithProject","projField","allFields","cloned","projectionSet","actualProjField","sanitizeUnitSchema","sanitizeAndValidateSchema","supportedMeasureSubTypes","supportedDimSubTypes","updateData","relation","defaultConfig","converterFn","converter","dataHeader","fieldNameAs","as","nameSpace","_partialFieldspace","valueObjects","_cachedValueObjects","_","_dataFormat","applyExistingOperationOnModel","selectionModel","getDerivations","derivation","params","groupByString","propagateIdentifiers","propModelInf","nonTraversingModel","excludeModels","handlePropagation","_children","child","propagateToAllDataModels","identifiers","rootModels","propagationInf","propagationNameSpace","propagateToSource","propagationSourceId","sourceId","propagateInterpolatedValues","criterias","persistent","actionCriterias","values","mutableActions","filteredCriteria","entry","action","sourceActionCriterias","actionInf","actionConf","applyOnSource","models","path","getPathToRootModel","_parent","rootModel","propConfig","sourceIdentifiers","rootGroupByModel","groupByModel","inf","propagationModel","filteredModel","reverse","getNormalizedProFields","fieldConfig","normalizedProjField","constructor","search","Relation","source","_fieldStoreName","_propagationNameSpace","immutableActions","_fieldspace","updateFields","fieldStoreName","collID","partialFieldMap","newFields","coll","joinWith","unionWith","differenceWith","defConfig","cloneConfig","extraCloneDm","setOfRowDiffsets","setParent","_fieldConfig","fieldObj","def","removeChild","sibling","parent","_onPropagation","order","withUid","getAllFields","dataGenerated","fieldNames","fmtFieldIdx","elem","fIdx","fmtFn","datumIdx","ids","nn","fill","fieldsArr","reducers","newDataModel","groupBy","existingDataModel","sFieldArr","Ee","reducerObj","defaultReducer","measureName","reducerFn","resolve","fieldStoreObj","dbName","dimensionArr","measureArr","rowCount","dataInCSVArr","sortedDm","colData","rowsCount","serializedData","rowIdx","colIdx","cachedValueObjects","fieldinst","dependency","replaceVar","depVars","retrieveFn","depFieldIndices","fieldSpec","fs","suppliedFields","computedValues","fieldsData","addField","addToNameSpace","isMutableAction","payload","getRootDataModel","getRootGroupByModel","find","addToPropNamespace","sourceNamespace","propagateImmutableActions","filterImmutableAction","criteriaModel","eventName","measureFieldName","binFieldName","measureField","buckets","binsCount","binSize","dMin","dMax","ceil","abs","generateBuckets","bucketRanges","binnedData","findBucketRange","leftIdx","rightIdx","midIdx","binField","serialize","getSchema","rowSplitDiffsetIterator","splitRowDiffset","dimensionMap","dimensionSet","clonedDMs","uniqueFields","commonFields","normalizedProjFieldSets","fieldSet","splitWithProject","projFieldSet","projFields","first","last","count","sd","std","Operators","compose","operations","currentDM","firstChild","derivations","dispose","bin","project","calculateVariable","naturalJoin","fullOuterJoin","version","Stats","enums","webpackPolyfill","deprecate","paths","children","_interopRequireDefault","default","_lib2","_containerManager2","slLib","init","doc","win","document","htmlSplCharSpace"," ","documentSupport","getDocumentSupport","SVG_BBOX_CORRECTION","isWebKit","SmartLabelManager","id","container","useEllipses","wrapper","prop","prevInstance","isBrowserLess","maxCacheLimit","maxDefaultCacheLimit","getElementById","createContainer","innerHTML","testStrAvg","isHeadLess","isIE","offsetHeight","offsetWidth","parentContainerStyle","style","parentContainer","_containerManager","_showNoEllipses","_init","setStyle","textToLines","smartlabel","lines","_calCharDimWithCache","calculateDifference","size","csArr","tw","twi","cachedStyle","asymmetricDifference","maxAdvancedCacheLimit","_container","cache","_advancedCache","advancedCacheKey","_advancedCacheKey","cacheName","fontSize","fontFamily","fontWeight","fontStyle","cacheInitName","repeat","height","_getWidthFn","contObj","_containerObj","svgText","bbox","textContent","getBBox","_styleNotSet","setLineHeight","sCont","node","_context","context","_cache","charCache","_lineHeight","lineHeight","useEllipsesOnOverflow","getSmartText","maxWidth","maxHeight","noWrap","trimStr","tempArr","tmpText","maxWidthWithEll","toolText","oriWidth","oriHeight","newCharIndex","nearestChar","tempChar","getWidth","initialLeft","initialTop","getOriSizeImproveObj","spanArr","x","minWidth","chr","elemRightMostPoint","elemLowestPoint","lastBR","removeFromIndex","removeFromIndexForEllipses","hasHTMLTag","maxStrWidth","lastDash","lastSpace","lastIndexBroken","strWidth","strHeight","oriTextArr","ellipsesStr","ellipsesWidth","dotWidth","characterArr","dashIndex","spaceIndex","lastLineBreak","fastTrim","ws","charAt","smartLabel","oriTextWidth","oriTextHeight","oriText","isTruncated","xmlTagRegEx","ltgtRegex","getOriSize","substr","getNearestBreakIndex","detailObj","tooltext","lastIndexOf","spanAdditionRegx","spanAdditionReplacer","classNameWithTag","classNameWithTagBR","childRetriverFn","childRetriverString","noClassTesting","classNameReg","className","spaceIdx","dashIdx","offsetLeft","offsetTop","parentNode","insertBefore","createElement","classNameBrReg","spanRemovalRegx","error","detailedCalculationFlag","textArr","letter","lSize","cumulativeSize","indiSizeStore","lib","userAgent","navigator","clsNameSpace","containerClass","brReplaceRegex","position","top","whiteSpace","padding","overflow","supportedStyle","font","font-family","font-weight","font-size","line-height","font-style","getElementsByClassName","opera","hasSVG","Boolean","SVGAngle","implementation","hasFeature","containerParent","body","appendChild","setAttribute","getElementsByTagName","sl","charLen","increment","avgWidth","styleObj","fSize","makeEntry","sCon","_classCallCheck","_set","set1","set2","filteredKeys","s1","s2","ForeignSet","isSimpleObject","reqAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","getTimeBasedId","__lastTime","__id","flat","res","scheduler","onFinishCallback","queue","animationFrame","listeners","tempQ","unique","fetch","namedNode","qualifiedName","seed","fetchAggregator","dependencies","getUpstreamNodes","list","rec","qname","placedIndex","preArr","postArr","outgoingEdges","resolver","accumulate","nodeDetails","identity","CustomResolver","utils_classCallCheck","dep","_dep","graph_node_classCallCheck","edges","_seed","requireResolve","retriever","history","electricEdges","_edges","_this","retrieveDetails","edge","head","hist","TypeError","electric_node_classCallCheck","nextFrame","currentFrame","lstnrs","nodes","nFn","_this2","qualifiedNodeMap","graph_node","_wholeSet","_propagate","propagationOverride","currentFrameListeners","nextFrameListeners","_schedule","flushTarget","flush","mount","resolveReqList","objn","perv","addDependencies","_node","getDependencies","getResolvedList","props","fnSpec","eNode","_ref","electric_node","addEdges","addElectricNode","changedSet","upstreamNodes","upstreamNode","append","__execUniqueElectricEdges","cfLstnrs","nfLstnrs","toArray","_this3","repeatHead","resetPropagationOverride","qnames","_this4","update","resolved","resolveDependencyOrder","resolveMap","neighbour","isRoot","model_classCallCheck","_graph","graph","_lockFlag","_reqQ","mountPoint","_addPropInModel","calculationConfig","customResolver","varName","fetchFn","_customResolver","createNodesFrom","instantCall","_graph$stopPropagatio","propsArr","unsub","createElectricNodeOf","stopPropagation","setPropagationOverride","resetNodeValue","_graph$stopPropagatio2","setProp","getNodeValue","getNodeFromQualifiedName","Model","__webpack_exports__","Muze","ContainerManager","maxContainers","svg","containers","rootNode","createElementNS","setAttributeNS","svgRoot","diff","containerObj","keyStr","prev","removeContainer","addContainer","avgCharWidth","display","cObj","ascending","NaN","bisector","compare","ascendingComparator","left","right","ascendingBisect","bisectRight","number","array","src_range","stop","step","e10","e5","e2","src_ticks","ticks","tickIncrement","power","log","LN10","tickStep","step0","step1","quantile","valueof","i0","value0","each","remove","clear","empty","src_nest","sortValues","rollup","nest","sortKeys","depth","createResult","setResult","keyValue","valuesByKey","createObject","setObject","createMap","setMap","sortKey","k","proto","implicit","ordinal","unknown","scale","copy","band","bandwidth","ordinalRange","paddingInner","paddingOuter","align","rescale","sequence","rangeRound","invertExtent","r0","r1","hiIndex","getClosestIndexOf","invert","side","highVal","d1","low","high","extend","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_formatHex","rgb","formatHex","color_formatRgb","formatRgb","color","exec","Rgb","rgbn","rgba","hsla","g","rgbConvert","opacity","rgb_formatHex","hex","rgb_formatRgb","Hsl","hslConvert","hsl","hsl2rgb","m1","m2","channels","displayable","formatHsl","color_formatHsl","brighter","darker","deg2rad","PI","rad2deg","Xn","Yn","Zn","t0","t1","t2","t3","labConvert","Lab","Hcl","hcl2lab","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl","cos","sin","C","D","E","ED","EB","BC_DA","cubehelix","cubehelixConvert","Cubehelix","bl","basis","v0","v1","v2","v3","cosh","sinh","src_constant","linear","hue","constant","gamma","nogamma","exponential","src_rgb","rgbGamma","colorRgb","rgbSpline","spline","colors","rgbBasis","src_number","reA","reB","src_string","am","bm","bs","bi","lastIndex","q","one","zero","cssNode","cssRoot","cssView","svgNode","src_value","value_typeof","string","setTime","nb","na","valueOf","src_round","degrees","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","pxComma","pxParen","degParen","translate","xa","ya","xb","yb","interpolateTransformCss","parseCss","documentElement","defaultView","transform","getComputedStyle","getPropertyValue","interpolateTransformSvg","parseSvg","baseVal","consolidate","matrix","SQRT2","colorHsl","hslLong","colorHcl","cubehelixGamma","colorCubehelix","cubehelixLong","piecewise","interpolate","d3_scale_src_constant","d3_scale_src_number","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","polymap","bisect","target","clamp","continuous","output","input","interpolateValue","deinterpolateClamp","reinterpolateClamp","interpolateRound","formatDecimal","toExponential","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","sign","symbol","comma","precision","prefixExponent","locale","formatPrefix","formatTrim","out","i1","formatRounded","exponent","formatTypes","%","toFixed","toPrecision","X","toUpperCase","src_identity","prefixes","src_locale","group","grouping","thousands","formatGroup","currencyPrefix","currency","currencySuffix","decimal","numerals","formatNumerals","percent","minus","nan","newFormat","prefix","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","Infinity","defaultLocale","formatLocale","src_tickFormat","precisionPrefix","precisionRound","precisionFixed","linearish","tickFormat","nice","interval","x0","x1","pow10","powp","base","exp","logp","log10","log2","reflect","logs","pows","raise","thresholds","threshold","quantiles","quantize","newInterval","floori","offseti","offset","previous","millisecond","durationMinute","durationWeek","second","minute","hour","setHours","setDate","getTimezoneOffset","weekday","sunday","monday","tuesday","wednesday","thursday","friday","saturday","setMonth","setFullYear","utcMinute","setUTCSeconds","utcHour","setUTCMinutes","utcDay","setUTCHours","setUTCDate","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","utcYear","setUTCFullYear","localDate","L","utcDate","UTC","newYear","timeFormat","utcFormat","utcParse","pads","-","0","numberRe","percentRe","requoteRe","requote","formatRe","names","formatLookup","parseWeekdayNumberSunday","w","parseWeekdayNumberMonday","parseWeekNumberSunday","U","parseWeekNumberISO","V","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","timeDay","timeYear","formatMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","timeSunday","formatWeekNumberISO","timeThursday","formatWeekdayNumberSunday","formatWeekNumberMonday","timeMonday","formatYear","formatFullYear","formatZone","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatShortWeekday","formatWeekday","formatShortMonth","formatMonth","formatPeriod","utcFormats","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCPeriod","parses","parseShortWeekday","parseWeekday","parseShortMonth","parseMonth","parseLocaleDateTime","parseSpecifier","parsePeriod","parseLocaleDate","parseLocaleTime","newParse","newDate","week","toISOString","durationSecond","durationHour","durationDay","durationMonth","durationYear","calendar","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickIntervals","tickInterval","src_time","timeMonth","timeWeek","timeHour","timeMinute","timeSecond","timeMillisecond","src_colors","interpolateCubehelixLong","ramp","sequential","interpolator","d3_scale_chromatic_src_colors","src_ramp","scheme","interpolateRgbBasis","warm","cool","sequential_multi_rainbow","ts","magma","inferno","plasma","UNIT_GLOBAL_NAMESPACE","UNIT_LOCAL_NAMESPACE","LAYER_LOCAL_NAMESPACE","LAYER_GLOBAL_NAMESPACE","GROUP_GLOBAL_NAMESPACE","GROUP_LOCAL_NAMESPACE","CANVAS_LOCAL_NAMESPACE","CANVAS_GLOBAL_NAMESPACE","ReservedFields","ROW_ID","CommonProps","ACTION_INF","ON_LAYER_DRAW","MATRIX_CREATED","COORD_TYPES","DATA_TYPE","d3_axis_src_identity","bottom","epsilon","entering","__axis","axis","orient","tickArguments","tickValues","tickTransform","tickSizeInner","tickSizeOuter","tickPadding","spacing","range0","range1","center","selection","selectAll","tick","tickExit","exit","tickEnter","enter","attr","line","insert","transition","getAttribute","tickSize","pi","tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","ccw","dx","dy","cw","da","rect","d3_shape_src_constant","halfPi","asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","x00","y00","d2","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","areaStart","_line","areaEnd","lineStart","_point","lineEnd","point","curve_linear","src_line","pointX","pointY","defined","curve","curveLinear","buffer","defined0","src_area","area","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","src_descending","d3_shape_src_identity","curveRadial","Radial","_curve","radial","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","kr","kx","ky","star","square","sqrt3","triangle","wye","noop","that","Basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","BasisOpen","Bundle","beta","_basis","_beta","_x","_y","custom","bundle","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","CardinalOpen","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","CatmullRomOpen","LinearClosed","slope3","h0","h1","s0","slope2","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","_t0","px","py","Step","curve_step","stepBefore","stepAfter","none","series","order_none","stackValue","order_ascending","sums","cubicInOut","polyIn","polyOut","polyInOut","b2","b3","b4","b5","b6","b7","b8","b9","b0","bounceOut","backIn","overshoot","backOut","backInOut","elasticOut","elasticIn","amplitude","period","d3_voronoi_src_constant","elasticInOut","RedBlackTree","RedBlackNode","R","RedBlackRotateLeft","tree","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","createEdge","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","ax","ay","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","attachCircle","lArc","rArc","lSite","cSite","rSite","bx","by","epsilon2","ha","hc","circle","Circle","before","circles","detachCircle","beachPool","createBeach","beach","Beach","detachBeach","beaches","removeBeach","disappearing","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","sortCellHalfedges","clipEdges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","cover","dc","v00","v01","v11","v10","polygons","polygon","triangles","e1","links","radius","_found","vx","vy","src_voronoi","voronoi","Selection","idGetter","_dataObjects","_updateData","_enterData","_exitData","_idGetter","newData","entryData","exitdata","tempMap","duplicateData","updatedData","newSelection","dataObjects","defaultValue","_mode","mergedObjects","mergedData","newdata","sortSel","sortSelection","kA","kB","_toConsumableArray","objects","STRING","FUNCTION","HTMLElement","common_utils_typeof","sanitizeIP","typeObj","nonExistentKeys","checkExistence","getMax","common_utils_toConsumableArray","getMin","getDomainFromData","fieldType","domArr","_loop","_fields","_slicedToArray","field0","field1","arr0","firstMin","secondMin","firstMax","secondMax","sanitizeDomainWhenEqual","unionDomain","domains","_ref2","dom","symbolFns","symbolCircle","cross","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolWye","symbolTriangle","easeFns","cubic","easeCubic","bounce","easeBounce","elastic","easeElastic","back","easeBack","poly","easePoly","circleInOut","getNearestValue","filterData","getWindow","getQualifiedClassName","cancelAnimationFrame","cls","objectIterator","Voronoi","common_utils_classCallCheck","_voronoi","_voronoiFn","getObjProp","_len","_key","intSanitizer","generateGetterSetters","propInfo","_propInfo$","sanitization","preset","onset","typeChecker","isEqual","oldVal","newVal","arraysEqual","is","ERROR_MSG","INTERFACE_IMPL","mergeRecursive","sink","createSelection","sel","appendObj","idFn","dataSelect","mergedSelection","exitSelection","getObjects","inst","numberInterpolator","interpolateNumber","piecewiseInterpolator","rgbToHsv","detectColor","col","getDataModelFromRange","hasBarLayer","selFields","selFn","fieldValue","isFieldSelected","getDataModelFromIdentifiers","behaviourType","filteredDataModel","dataArr","filteredSchema","include","propField","isValidValue","getSymbol","stackOrders","_defineProperty","_stackOrders","stackOrderNone","stackOrderAscending","stackOffsets","_stackOffsets","yp","yn","stackOffsetNone","si","sij0","s3","sk","stack","orderNone","offsetNone","oz","kz","sz","sij","ki","d3Stack","nestCollection","nestFn","pathInterpolators","curveStepAfter","curveStepBefore","curveStep","curveCatmullRom","Symbols","axisLeft","axisRight","axisTop","axisBottom","pie","descending","arcs","pa","cornerRadius","padRadius","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","p0","p1","oc","intersect","x3","y3","x32","y32","kc","lc","centroid","Scales","scaleBand","getSmallestDiff","points","timeFormats","timeDurations","formatTemporal","nearestInterval","getNearestInterval","getValueParser","retrieveNearestGroupByReducers","_len3","measureFieldNames","_key3","filteredReducers","getAncestorDerivations","nearestReducers","derv","retrieveFieldDisplayName","sortOrderMap","_sortOrderMap","firstVal","secondVal","localeCompare","_accessors","fn1","fn2","xhtml","src_namespaces","xlink","xml","xmlns","src_namespace","namespaces","space","local","creator","fullname","namespace","creatorFixed","ownerDocument","creatorInherit","uri","namespaceURI","src_selector","selector","querySelector","selectorAll","querySelectorAll","matcher","matches","sparse","EnterNode","_next","__data__","keyPrefix","bindIndex","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","src_window","styleValue","classArray","classList","ClassList","_names","classedAdd","classedRemove","contains","textRemove","htmlRemove","nextSibling","lower","previousSibling","constantNull","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","event","mouseenter","mouseleave","filterContextListener","listener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","typename","on","__on","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","sourceEvent","dispatchEvent","CustomEvent","createEvent","initEvent","bubbles","cancelable","groups","parents","_groups","_parents","subgroups","subnode","subgroup","enterGroup","updateGroup","_enter","_exit","onenter","onupdate","onexit","groups0","groups1","m0","merges","group0","group1","compareNode","sortgroups","sortgroup","getAttributeNS","attrRemoveNS","removeAttributeNS","attrRemove","removeAttribute","attrFunctionNS","attrFunction","attrConstantNS","attrConstant","priority","styleRemove","removeProperty","styleFunction","setProperty","styleConstant","propertyRemove","propertyFunction","propertyConstant","classed","classedFunction","classedTrue","classedFalse","textFunction","textConstant","html","htmlFunction","htmlConstant","deep","typenames","parseTypenames","dispatch","dispatchFunction","dispatchConstant","src_select","nextId","Local","current","src_point","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","mouse","changedTouches","src_touch","touches","identifier","touch","Dispatch","T","types","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","__noselect","MozUserSelect","d3_drag_src_constant","DragEvent","subject","active","defaultFilter","ctrlKey","button","defaultContainer","defaultSubject","defaultTouchable","maxTouchPoints","src_drag","mousedownx","mousedowny","mousemoving","touchending","touchable","gestures","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","yesdrag","noclick","clearTimeout","sublisteners","clickDistance","taskHead","taskTail","frame","timeout","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","timer_typeof","now","setFrame","clearNow","Timer","_call","_time","timer","delay","restart","wake","timerFlush","nap","sleep","poke","clearInterval","setInterval","src_timeout","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","duration","ease","schedule","tweenValue","_id","transition_interpolate","interpolateRgb","interpolateString","Transition","_name","newId","selection_prototype","inherit","id0","id1","onFunction","on0","on1","sit","attrTween","string00","string10","interpolate0","string0","string1","value1","attrTweenNS","attrInterpolateNS","attrInterpolate","styleTween","styleNull","styleMaybeRemove","listener0","styleInterpolate","removeFunction","tweenRemove","tween0","tween1","tweenFunction","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","Promise","reject","cancel","interrupt","defaultTiming","easeCubicInOut","selectElement","element","makeElement","elemType","callbacks","SVGElement","selectorVal","selectorType","actualSelector","enterSel","mergeSel","_len2","_key2","exitSel","applyStyle","setElementAttrs","attrs","setAttrs","setStyles","styles","createElements","getClientPoint","pos","clientPoint","getEvent","d3event","getD3Drag","d3drag","getSmartComputedStyle","css","textEl","mandatoryStyle","fill-opacity","renderer_utils_typeof","computedStyle","styleForSmartLabel","hasTouch","initProp","fetchPropValues","propNames","deps","setContexts","contexts","propObj","contextMap","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","depProps","err","registerListener","propList","callBack","_options$","namespaceInf","callbackFn","namespaceVal","commits","_savedCommits","propListenerMap","_propListenerMap","listenersObj","_registeredListeners","_contextMap","contextsObj","commitsObj","subNamespaces","propDeps","nm","fnInf","store_toConsumableArray","registerPropInMaps","registeredListeners","subNamespace","allProps","_fnCount","addListenerToNamespace","_listeners","namespaceListeners","listenerTypes","removePropValue","propInf","sns","Store","store_classCallCheck","_commits","_queuedProps","_locked","store_createClass","lockModel","lock","unlockModel","unlock","lockCommits","locked","unlockCommits","queuedProps","_params","store_slicedToArray","propName","_params2","commit","addSubNamespace","propFns","nsObj","retrieveNamespaces","disableListener","sanitizedVal","savedCommits","disabled","registerChangeListener","registerImmediateListener","_len4","_key4","computed","calculatedProp","_this$model","unsubscribeAll","unsubscribe","listenersMap","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","removeSubNamespace","listenerMap","snsMap","transactor","holder","conf","stateProps","nameSpaceProp","nsProp","_len5","_key5","_ref$takesMultiplePar","takesMultipleParams","prevVal","typeCheck","typeExpected","oldValues","events","EVENT_LIST","composition","resolveFn","notification","hasOwn","LifeCycleManager","lifecycle_manager_classCallCheck","_eventList","_promises","_notifiers","_lifeCycles","_unreleasedLifeCycles","_boot","_preparePromises","promise","_makeNotifierPromise","createPromise","then","prm","formalName","client","_releasePromisesFromCache","_notify","stage","_resolvePromise","retrieve","_callLifeCycleCallback","_cachePromise","_resetTargetPromise","lifeCycles","DRAG","HOVER","SELECTIONDRAG","CLICK","LONGTOUCH","TOUCHDRAG","ALL_ACTIONS","SELECTION_NEW_ENTRY","SELECTION_NEW_EXIT","SELECTION_NULL","SELECTION_OLD_ENTRY","SELECTION_OLD_EXIT","SelectionSet","completeSet","_volatile","selection_set_classCallCheck","_completeSetCount","_lockedSelection","_resetted","entrySet","exitSet","lockedSel","addSet","removeSet","updateSet","DRAG_EVENTS","constants_defineProperty","_D3_DRAG_EVENTS","changeSideEffectAvailability","toEnable","sideEffects","change","enable","disable","getMergedSet","helper_toConsumableArray","conditionsMap","mergedEnter","SELECTION","mergedExit","complete","getSetInfo","selectionSet","propagationData","resetted","getModelFromSet","conditions","condition","Firebolt","actions","behaviourEffectMap","firebolt_classCallCheck","_sideEffectDefinitions","_sideEffects","_propagationInf","_actions","behavioural","physical","_selectionSet","_volatileSelectionSet","_propagationFields","_sourceSideEffects","_propagationBehaviourMap","_sourceBehaviours","_actionBehaviourMap","_config","_behaviourEffectMap","_entryExitSet","_actionHistory","_queuedSideEffects","mapSideEffects","registerBehaviouralActions","registerSideEffects","registerPhysicalBehaviouralMap","physicalBehaviouralMap","registerPhysicalActions","setSideEffectConfig","sideEffect","sideEffectConf","behEffectMap","preventDefaultActions","effectNames","effects","firebolt_toConsumableArray","behaviours","initializeBehaviouralActions","dispatchableBehaviours","Action","prepareSelectionSets","initializeSideEffects","sideEffectStore","actionHistory","queuedSideEffects","combinedSet","unionSets","firebolt","uidSet","behaviour","entryExitSet","_entryExitSet$type","existingModel","aggFns","effect","firebolt_typeof","sideEffectInstance","isEnabled","mutates","dispatchSideEffect","propagationInfo","propagate","getSideEffects","propagationSelectionSet","getPropagationSelectionSet","shouldApplySideEffects","sourceSelectionSet","applicableSideEffects","getApplicableSideEffects","applySideEffects","behaviourConditions","sideEffectConditions","physicalAction","actionBehaviourMap","behaviourMap","mapActionsAndBehaviour","onDataModelPropagation","propValue","dispatchBehaviour","uniqueIds","behaviouralActions","volatileSelectionSet","sideEffectDefinitions","sideEffectsMap","SideEffect","initedActions","initializePhysicalActions","physicalActions","phyAction","initedPhysicalActions","mapObj","getDefaultTargetContainer","bindActionWithBehaviour","targets","behaviourList","propagationSource","applicableSelectionSets","GenericBehaviour","generic_classCallCheck","_enabled","selectionSets","getSelectionSets","_this$getAddSetFromCr","getAddSetFromCriteria","getPropagationInf","setSelectionSet","getEntryExitSet","entryRowIds","getUids","_selectionSet$getSets","getSets","setConfig","getFullData","getSourceFields","VolatileBehaviour","reset","existingAddSet","updateExit","getCompleteSet","BRUSH","HIGHLIGHT","TOOLTIP","FILTER","HighlightBehaviour","BrushBehaviour","layers","BEHAVIOURNAMES","FilterBehaviour","PersistentBehaviour","updateEntry","mergedExitSet","completeSetCount","SelectBehaviour","dragCriteriaRetriever","drag_action_config_defineProperty","_dragCriteriaRetrieve","sourceInfo","startPos","endPos","axes","xAxis","yAxis","axisFields","xField","getMembers","yField","xFieldType","yFieldType","isXDimension","isYDimension","xRange","yRange","selectedDomains","rangeObj","xdom","ydom","getDragActionConfig","getSourceInfo","coordType","coord","attachDragEvent","targetEl","drawingInf","touchStart","d3Drag","getDrawingContext","beh","dragEnd","hover","interaction","tooltip","svgContainer","nearestPoint","getNearestPoint","getAllPoints","showInPosition","generatePayloadFromEvent","click","physical_defineProperty","_physicalActions","ACTIONNAMES","longtouch","touchEnd","touchdrag","ANCHORS","BRUSH_ANCHORS","PERSISTENT_ANCHORS","HIGHLIGHTER","CROSSLINE","PROPS","valueParser","GenericSideEffect","generic_sideeffect_classCallCheck","_strategy","_strategies","SurrogateSideEffect","interactionType","layer","interactive","applyInteractionStyle","SpawnableSideEffect","_drawingContext","changeVisibility","sideEffectGroup","visible","defClassName","classPrefix","SelectionBox","boxConf","box","drawingContext","unitWidth","unitHeight","selectionGroupClassName","hide","sourceInf","_getBoxDimensionsFrom","getBoxDimensionsFromPayload","xDim","yDim","xLinear","yLinear","xCriteria","yCriteria","bandScale","x1Val","x2Val","x1DomainIndex","x2DomainIndex","_sort2","helper_slicedToArray","getScaleValue","getUnitWidth","y1Val","y2Val","y1DomainIndex","y2DomainIndex","_sort4","_xDim","_yDim","dimension","direction","show","selectionBox","selectionBoxDrag","onDrag","boxClassName","INITIAL_STYLE","connectorClassName","margin","content","iconContainerSize","iconScale","iconShape","iconColor","rowMargin","separator","parentClassName","arrow","getArrowPos","dim","measurement","arrowPos","boxHeight","boxWidth","arrowWidth","plotBottom","boxBottom","plotRight","boxRight","placeArrow","tooltipArrow","_tooltipArrow","tooltipBackground","_tooltipBackground","arrowConf","_arrowOrientation","Content","content_classCallCheck","_model","_formatter","ctx","_mount","displayFormat","table","tbody","elemData","el","shape","Tooltip","htmlContainer","tooltip_classCallCheck","connectorContainer","tooltipConf","contentClass","_tooltipContainer","_contentContainer","_contents","_tooltipConnectorContainer","qualifiedClassName","addClass","defConf","contentConfig","reorderContainers","contentConf","render","_target","repositionArrow","arrowDisabled","arrowOrient","outsidePlot","connector","_offset","orientation","_extent","arrowSize","topSpace","dimX","rightSpace","leftSpace","positionTop","positionRight","positionLeft","positionHorizontal","positionVertical","_position","_arrowPos","HIGHLIGHT_SUMMARY","formatters","strategies_defineProperty","getKeyValue","isSelected","removeKey","keyObj","valueObj","margin-left","generateRetinalFieldsValues","valueArr","retinalFields","dimensionMeasureMap","fieldInf","dataLen","colorAxis","shapeAxis","sizeAxis","retField","retIndex","retinalFieldValue","measuresArr","icon","getColor","getShape","getSize","_fieldInf$retField","formattedRetinalValue","hasMultipleMeasures","measure","measureIndex","_fieldInf$measure","dName","formatterFn","strategies_toConsumableArray","buildTooltipData","nestedDataObj","fieldValues","_dataModel$getData","fieldspace","_context$firebolt$con","detailFields","containsDetailField","getFieldInf","timeDiffs","defFormatter","nf","getTabularData","allMeasures","_construct","filteredMeasures","generateTooltipContent","nestedData","_nestedData$i","_fieldInf$field","_loop2","len2","_fieldInf$name","strategies","aggregatedModel","fieldsConf","measureNames","configResolvers","tooltip_defineProperty","_configResolvers","specificConf","_default","_getPrototypeOf2","side_effects_tooltip_classCallCheck","tooltip_possibleConstructorReturn","tooltip_getPrototypeOf","_tooltips","sanitizeConfig","strategyObj","sanitizedConf","setStrategy","totalHeight","totalWidth","isEmpty","tooltips","boundBox","dataModels","fragmented","showVertically","tooltipPos","boxes","tooltip_toConsumableArray","sourceFields","plotDimensions","getPlotPointsFromIdentifiers","strategy","strategyConf","dataTransform","projectFields","plotDim","dt","layoutContainer","parentContainerDimensions","layoutBoundBox","unitBoundBox","tooltipInst","TooltipRenderer","timeDiffsByField","strategyFn","positionRelativeTo","tooltipBoundBox","getContents","spaceOutBoxes","spaceOutIfOverlap","firstBox","secondBox","opposite","highlightSummary","selectionSummary","projectedFields","Crossline","bandWidth","_this$config","bandClass","lineClass","axisIndex","fieldInst","xOffset","plotWidth","crossline_toConsumableArray","getPlotSpan","getPlotPadding","startPx","endPx","dataPoint","parentGroup","fade","fadeFn","focus","highlight","PlotHighlighter","plot_highlighter_classCallCheck","plot_highlighter_possibleConstructorReturn","plot_highlighter_getPrototypeOf","FilterEffect","entryModel","clearCaching","resetData","enableCaching","AnchorEffect","anchors_classCallCheck","anchors_possibleConstructorReturn","anchors_getPrototypeOf","_layersMap","addAnchorLayers","addLayer","layerRegistry","layerDefs","layerDef","mark","layerCls","shouldDrawAnchors","depLayerEncoding","encoding","defaultSizeValue","commonName","groupId","calculateDomain","getTransitionConfig","owner","registry","_linkedLayer$getTrans2","anchors_slicedToArray","getLayerByName","getTransformedDataFromIdentifiers","transformedData","transformedDataModel","PersistentAnchors","BrushAnchors","behaviour_effect_map_defineProperty","BEHAVIOURS","SIZE","COLOR","SHAPE","TEXT","ENCODING","X0","Y0","RADIUS","RADIUS0","ANGLE","ANGLE0","nearestPointThreshold","strokeOpacity","connectNullData","SimpleLayer","props_defineProperty","metaInf","_customConfig","newConf","defaultPolicy","BOTTOM","TOP","LEFT","RIGHT","axisOrientationMap","axis_orientation_defineProperty","_axisOrientationMap","AxisOrientation","LINEAR","BAND","TIME","ORDINAL","QUANTIZE","QUANTILE","LOG","POW","IDENTITY","SEQUENTIAL","THRESHOLD","CONTINOUS","DISCRETE","HIDDEN","DEFAULT_ANGLE_DOMAIN","scaleLinear","scales","scaleThreshold","scaleLog","scalePow","scaleIdentity","scaleOrdinal","scaleSequential","scaleQuantize","scaleQuantile","scaleTime","scaleMap","scale_creator_defineProperty","_scaleMap","ScaleType","createScale","scaleFactory","adjustRange","axisName","axisNamePadding","fixedBaseline","labels","rotation","smartTicks","numberOfTicks","showAxisName","showInnerTicks","showOuterTicks","yOffset","rotateAxis","instance","tickText","labelManager","renderConfig","getTickSize","yShift","xShift","tickLabelDim","quadrant","rotationNormalizer","angleToRadian","angle","changeTickOrientation","selectContainer","axisInstance","_smartTicks","isSmartTicks","registerAnimationDoneHook","setFixedBaseline","setAxisNamePos","textNode","axisNameHeight","availableSpace","longestWord","quarter","halfYearly","mintues","getTickIntervalFnBasedOnNumberOfTicks","possibleTickLevelIndex","maxPossibleTicks","tickIntervalLevelInfo","tickIntervalInfo","numOfPossibleTicks","getActualTickInterval","noOfTicks","minWidthBetweenTicks","_minTickDistance","getTickIntervalBasedOnCurrentLevel","_dependencies","longestWordType","applyTickSkipping","minTickDistance","minTickSpace","_minTickSpace","minTickWidth","maxTicks","getSkippedTicks","actualNumberOfTicks","_minDiff","millisecondInterval","numOfTicksAccordingToMinDiff","adjustHorizontalRange","adjustVerticalRange","rangeAdjustmentMap","space_setter_defineProperty","_rangeAdjustmentMap","setAxisRange","rangeBounds","getAdjustedRange","getAxisOffset","timeDiff","avWidth","bars","spaceSetter","spaceConfig","heightForTicks","_context$availableSpa2","availWidth","availHeight","isOffset","_context$renderConfig2","_context$getAxisDimen","getAxisDimensions","tickDimensions","allTickDimensions","axisNameDimensions","tickDimHeight","tickDimWidth","namePadding","labelConfig","minTickHeight","getTickValues","tickShifter","maxTickSpaces","widthForTicks","totalTickWidth","getRotatedSpaces","rotatedHeight","rotatedWidth","setOffset","logicalSpace","getAxisComponentDimensions","axisTicks","largestTick","largestTickDimensions","smartTick","_context$renderConfig","labelFunc","_tickLabelStyle","originalLabel","getFormattedText","_axisNameStyle","getHorizontalAxisSpace","axisDimensions","_context$config2","axisDimHeight","minTickDiff","getMinTickDifference","cartesian_axis_helper_toConsumableArray","getVerticalAxisSpace","_context$config3","calculateBandSpace","largestDimHeight","_getHorizontalAxisSpa","_getVerticalAxisSpace","getValidDomain","userDom","setContinousAxisDomain","_domain","axisComponentDimensions","oldConfig","mockedOldConfig","shouldAxesScaleUpdate","hasAxesConfigChanged","properties","tickFormatter","sanitizeTickFormatter","_scale","_axis","createAxis","_tickFormatter","resetRenderConfig","_renderConfig","_maxTickSpaces","SimpleAxis","simple_axis_classCallCheck","_range","_domainLock","_axisDimensions","defCon","simpleConfig","bodyElem","dist","_animationDonePromises","domainValue","setAxisComponentDimensions","smartAxisName","axisClass","_objectSpread","setTickConfig","setSmartAxisName","_this$config2","dimType","widthDim","getSmartAxisName","oriSize","domainVal","computeAxisDimensions","_getAxisComponentDime","labelHeight","labelWidth","calculateContinousSpace","_context$renderConfig6","axisNameWidth","_getHorizontalAxisSpa2","_getVerticalAxisSpace2","renderAxis","tickLabelStyle","axisTickFormatter","labelProps","labelOffset","all","LinearInterpolator","LogInterpolator","PowInterpolator","interpolatorMap","continous_axis_defineProperty","_interpolatorMap","ContinousAxis","continous_axis_classCallCheck","continous_axis_possibleConstructorReturn","continous_axis_getPrototypeOf","InterpolatorCls","_interpolator","_this$renderConfig","sanitizeDomain","_get2","_get","_this$renderConfig2","newTickValues","tickSpace","getNumberOfTicks","labelDim","numberOfValues","tickLength","_this$smartTicks$","BandAxis","_this$maxTickSpaces","_getRotatedSpaces","paddingNormalized","formatTickValue","TimeAxis","time_axis_classCallCheck","time_axis_possibleConstructorReturn","time_axis_getPrototypeOf","time_axis_get","rawTicks","resetTickInterval","_context$config8","_context$availableSpa","adjustedRange","x11Colors","Pink","LightPink","HotPink","DeepPink","PaleVioletRed","MediumVioletRed","LightSalmon","Salmon","DarkSalmon","LightCoral","IndianRed","Crimson","FireBrick","DarkRed","Red","OrangeRed","Tomato","Coral","DarkOrange","Orange","Gold","Yellow","LightYellow","LemonChiffon","LightGoldenrodYellow","PapayaWhip","Moccasin","PeachPuff","PaleGoldenrod","Khaki","DarkKhaki","Cornsilk","BlanchedAlmond","Bisque","NavajoWhite","Wheat","BurlyWood","Tan","RosyBrown","SandyBrown","Goldenrod","DarkGoldenrod","Peru","Chocolate","SaddleBrown","Sienna","Brown","Maroon","DarkOliveGreen","Olive","OliveDrab","YellowGreen","LimeGreen","Lime","LawnGreen","Chartreuse","GreenYellow","SpringGreen","MediumSpringGreen","LightGreen","PaleGreen","DarkSeaGreen","MediumSeaGreen","SeaGreen","ForestGreen","Green","DarkGreen","MediumAquamarine","Aqua","Cyan","LightCyan","PaleTurquoise","Aquamarine","Turquoise","MediumTurquoise","DarkTurquoise","LightSeaGreen","CadetBlue","DarkCyan","Teal","LightSteelBlue","PowderBlue","LightBlue","SkyBlue","LightSkyBlue","DeepSkyBlue","DodgerBlue","CornflowerBlue","SteelBlue","RoyalBlue","Blue","MediumBlue","DarkBlue","Navy","MidnightBlue","Lavender","Thistle","Plum","Violet","Orchid","Fuchsia","Magenta","MediumOrchid","MediumPurple","BlueViolet","DarkViolet","DarkOrchid","DarkMagenta","Purple","Indigo","DarkSlateBlue","SlateBlue","MediumSlateBlue","White","Snow","Honeydew","MintCream","Azure","AliceBlue","GhostWhite","WhiteSmoke","Seashell","Beige","OldLace","FloralWhite","Ivory","AntiqueWhite","Linen","LavenderBlush","MistyRose","Gainsboro","LightGray","Silver","DarkGrey","Grey","DimGrey","LightSlateGrey","SlateGrey","DarkSlateGrey","Black","palette","DEFAULT_GRADIENT_COLOR","DEFAULT_CONFIG","stops","getHslString","hslArr","convertToXllString","baseString","getActualHslColor","paletteColor","hexToHsv","props_toConsumableArray","newConfig","uniqueValues","treatNullMeasures","scaledVal","minDomainScaledVal","resolveAxisConfig","propVal","defaultVal","getStops","newStops","color_strategy_toConsumableArray","rangeStops","newStopsLength","newRange","hslInterpolator","interpolateHslLong","indexedDomain","uniqueVals","scaleDomain","indexedDomainMeasure","normalDomain","steppedDomain","_getStops","continousSteppedDomain","_getStops2","uniqueRange","indexedRange","numVal","normalRange","strategyGetter","domainType","rangeType","schemeType","color_strategy_defineProperty","domainRange","ColorAxis","color_axis_classCallCheck","_domainType","_rangeType","_schemeType","getSchemeType","_colorStrategy","setColorStrategy","updateDomain","colorStrategy","getScheme","colorSchemes","hslColorArray","getRawColor","color_axis_toConsumableArray","scaleInfo","domainRangeFn","transformationArr","newH","newS","newL","newA","size_strategy_defineProperty","size_strategy_strategies","pieceWiseRange","size_strategy_toConsumableArray","intervals","newIntervals","discreteRange","SizeAxis","size_axis_classCallCheck","_sizeStrategy","domainInfo","domainFn","generator","ShapeAxis","shape_axis_classCallCheck","_generatedShapes","shapeType","shapeGenerator","generatorFn","generatedShapes","createAngleValues","angleData","_angleFn","_angleValues","AngleAxis","angle_axis_classCallCheck","customDomain","customRange","_this$_range","angle_axis_slicedToArray","ROWS","COLUMNS","COL","ROW","CELL","X_AXES","Y_AXES","ENTRY_CELLS","EXIT_CELLS","PRIMARY","SECONDARY","adjustDomain","minOuterRadius","RadiusAxis","radius_axis_classCallCheck","_radiusFactor","sanitizedRange","rangeVal","DATA_TYPES","group_transform","data_type_scale_map_defineProperty","_dataTypeScaleMap","groupByIndices","identityTransform","transformMap","transform_factory_defineProperty","_transformMap","uniqueField","valueField","normalizedData","normalizeData","uniqueFieldIndex","valueFieldIndex","seriesKeyIndex","seriesKeys","tuples","rowObj","_tuple","seriesKey","newArr","orderBy","orderIndex","groupByIndex","stackData","seriesData","transformFactory","POLAR","CARTESIAN","transformColor","styleType","intensity","stateColor","originalColor","colorInfo","interactionStyles","elements","getPlotElementsFromSet","_d$meta","colorTransform","helpers_slicedToArray","getAxesScales","_map2","_map4","xScale","yScale","encodingFieldInfRetriever","helpers_defineProperty","_encodingFieldInfRetr","encodingInf","getIndividualClassName","individualClassName","classNameStr","dataNormalizers","_dataNormalizers","encodingFieldInf","radiusFieldIndex","angleFieldIndex","radius0FieldIndex","angle0FieldIndex","fieldsLen","pointObj","radius0","angle0","enc","rowId","transformType","xFieldIndex","yFieldIndex","x0FieldIndex","y0FieldIndex","domainCalculator","_domainCalculator","layerInst","angleValues","radius0Field","encodingFieldsInf","xFieldSubType","yFieldSubType","x0Field","y0Field","yEnc","xEnc","attachDataToVoronoi","_ref3","helpers_toConsumableArray","updateStyle","positionPoints","positioner","encodingTransform","getPlotMeasurement","dimensionalValues","fieldInfo","_bandScale","span","groupSpan","offsetValues","actualGroupWidth","dataProps","innerPadding","getGroupSpan","isAxisBandScale","axisPadding","groupPadding","resolveInvalidTransformType","transformResolverPredicates","groupByField","dimensionField","getValidTransformForAggFn","resolvedInvalidTransformType","_context$encodingFiel","isCustomTransformTypeProvided","resolveEncodingValues","transformedValues","getColorMetaInf","colorInf","getHslArray","getCoordValue","trig","coordValueGetter","toCartesianCoordinates","rangePlot","_point$update","_coordValueGetter","axisArr","localOptions","local_options_defineProperty","STATE_NAMESPACES","listener_map_slicedToArray","_cacheEnabled","_cachedData","encodingValue","resolveTransformType","_transformedData","getTransformedData","_normalizedData","getNormalizedData","calculateDomainFromData","layerNs","groupNs","BaseLayer","base_layer_classCallCheck","base_layer_possibleConstructorReturn","base_layer_getPrototypeOf","base_layer_assertThisInitialized","alias","_points","_measurement","_graphicElems","_store","_this$metaInf2","parentNamespace","_encodingFieldsInf","_encodingTransform","_alias","transformData","encodingType","_this$metaInf3","transformedDataArr","_updateLock","_transformType","getValidTransform","_this$metaInf4","unitDom","pointMap","_pointMap","_dataProps","_this$encodingFieldsI","base_layer_slicedToArray","xMeasure","yMeasure","_identifiers$","_identifiers$2","xMeasureIndex","yMeasureIndex","getAllAttrs","filteredPoints","base_layer_toConsumableArray","sizeVal","_identifiers$getData","identifierData","identifierSchema","_this$encodingFieldsI2","tupleArr","transformedVal","graphicElems","elems","_this$metaInf5","rowIndex","unitRowIndex","colIndex","unitColIndex","renderLayer","throwback","_context$metaInf","base_layer_defineProperty","getState","base_layer_construct","userConf","drawLine","curveInterpolatorFn","linepath","LineLayer","line_classCallCheck","line_possibleConstructorReturn","line_getPrototypeOf","isXDim","isYDim","xPx","yPx","resolvedEncodings","stroke","cachePoint","seriesClassName","containerSelection","colorField","colorFieldIndex","animateGroup","groupTransition","groupAnimateStyle","stroke-opacity","getPathStyle","translatePoints","colorValFn","colorVal","getDrawFn","searchRadius","_point$data$data","getIdentifiersFromData","layerId","drawArea","easeEffect","renderer_slicedToArray","enterAreaPath","updateAreaPath","selectionEnter","AreaLayer","area_get","area_getPrototypeOf","_getAxesScales","classNameFn","minYVal","basePos","y0Px","invalidY","invalidY0","resolvedValues","stroke-width","stroke-linejoin","states","fadeout","selected","ArcLayer","arc_classCallCheck","arc_possibleConstructorReturn","arc_getPrototypeOf","_prevPieData","_this$axes","radiusAxis","pieIndex","prevData","angleV","angles","_angles","uid","getOuterRadius","getInnerRadius","startAngle0","endAngle0","_previousInfo","getPreviousPoint","currIndex","prevArc","nextArc","_context$axes$angle$r2","arc_helper_slicedToArray","qualClassName","_arcFn","consecutiveExits","exitCounter","tweenPie","individualClass","tweenExit","exitArr","oldExitCounter","tweenExitPie","consecutiveExitArr","gElem","pieSlices","pieSliceInf","tData","drawText","selectionMerge","backgroundVal","textanchor","textStyle","background","backgroundPadding","_smartLabel$getOriSiz","backgroundEl","alignment-baseline","defaultEncoding","alignmentBaseLine","defRotation","pointTranslators","polar","textEncoding","angleAxis","textFormatter","backgroundEncoding","backgroundValue","cartesian","textField","textFieldIndex","textValue","text_slicedToArray","TextLayer","text-anchor","drawSymbols","createShape","groupElement","Element","newShape","nodeName","src","href","shapeElement","pathStr","checkPath","exitGroup","defColorStyle","fillOpacity","shapes","sizes","PointLayer","point_classCallCheck","point_possibleConstructorReturn","point_getPrototypeOf","_config$offset","offsetX","offsetY","point_slicedToArray","maxSize","generateDataPoints","point_toConsumableArray","drawFn","getMarkId","_maxSize","_getPlotMeasurement2","widthMetrics","heightMetrics","offsetXValues","offsetYValues","measurementConf","getMeasurementConfig","widthSpan","heightSpan","distanceLimit","drawRects","barEnterFn","transitionBars","selTransition","positionRetriever","isNegativeVal","barBasePos","resolveDimByField","axesInfo","spaceType","sizeEncoding","sizeConfig","sizeValue","enterSpace","minVal","maxVal","diffPx","minDomVal","_positionRetriever$ty2","bar_helper_slicedToArray","resolveDimensions","_resolveDimByField","enterWidth","enterX","xPos","_resolveDimByField2","enterHeight","BarLayer","bar_classCallCheck","bar_possibleConstructorReturn","bar_getPrototypeOf","_plotPadding","_plotSpan","bar_get","getTranslatedPoints","normalizedDataArr","clipElement","clipPathElement","bar_slicedToArray","barWidthMetrics","barHeightMetrics","barWidthOffsets","barHeightOffsets","barWidth","barWidthOffset","barHeight","barHeightOffset","uniqueFieldType","pointFound","bar_toConsumableArray","p2","tick_renderer","ticksEnter","angle0Axis","angle0V","angles0","_angles2","_layerInst$encodingFi","_config$span","xSpan","ySpan","x0Px","TickLayer","drawTicks","AREA_LAYER","ARC_LAYER","LINE_LAYER","TEXT_LAYER","POINT_LAYER","BAR_LAYER","TICK_LAYER","SIMPLE_LAYER","BASE_LAYER","sanitizeEncoding","layerFactory","compositeLayers","factoryObj","setLayerRegistry","reg","_layerRegistry","getSerializedConf","serializedDefs","defs","unitLayerDef","sDef","parseLayerDefinition","layerType","strs","layer_factory_toConsumableArray","getLayerInstance","instances","layerObj","layerConstructor","getLayerClass","composeLayers","sanitizeLayerConfig","DEFAULT_LAYERS","defaults_defineProperty","_DEFAULT_LAYERS","LAYER_TYPES","local_options","visual_group_local_options_defineProperty","_CONFIG$ROWS$COLUMNS$","SimpleGroup","action_behaviour_map_defineProperty","ACTIONS","sanitizeLayerDef","sanitizedDefs","sConf","unionDomainFromLayers","layerAxisIndex","getDataDomain","domainValues","layerDomain","fieldDomain","encodingDomain","fieldStr","domain1","renderLayers","_lifeCycleManager","notify","orderedLayers","layerParentGroup","layerDepOrder","getDependencyOrder","dependencyOrder","visited","visit","_layerDepOrder","_timeDiffs","getLayersBy","searchBy","removeLayersBy","createRenderPromise","_renderedPromise","_renderedResolve","radiusAxes","getRadiusRange","isXandYMeasures","_context$fields","src_helper_slicedToArray","xMeasures","yMeasures","GRID_BAND","GRID_LINE","getGridLayerDefinitions","axisType","getDefaultVisibilty","getLayerDefinition","_definition","_axes","_encoding","gridLines","gridBands","gridLineColor","zeroLineColor","gridBandColor","isLinearScale","grid_lines_defineProperty","isNegativeDomain","_context$axes","dimensionSubTypes","getValidSubtype","attachDataToGridLineLayers","_gridLines","_gridBands","gridLayerData","getGridLayerData","gridData","jsonData","_jsonData$push","grid_lines_toConsumableArray","calculateDomainListener","_layerAxisIndex","src_listener_map_slicedToArray","fieldsVal","removeExitLayers","layersMap","markSet","queuedLayerDefs","_queuedLayerDefs","layerDefArr","defFn","listener_map_toConsumableArray","hasPlotSpan","axesObj","temporalFields","filteredFields","_ref5","_ref6","minimumConsecutiveDifference","_ref7","_ref8","_timeDiffsByField","originalData","cachedData","createSelectionSet","attachPropagationListener","_ref9","createGridLineLayer","vuConf","atomicDef","_ref11","_ref12","transformDataModels","transformVal","_ref15","_ref16","layerAxisIndexVal","axesVal","attachDataToLayers","transformedDataModels","dataSource","_dimensionMeasureMap","getDimensionMeasureMap","retinalEncodingsAndMeasures","_layer$encodingFields","sizeField","shapeField","_retinalEncodingsAndM","src_helper_toConsumableArray","attachAxisToLayers","axisInf","src_props_defineProperty","_PROPS","payloadGenerator","brush","selectionDataModel","propPayload","getRangeFromData","propCriteria","fieldMap","isDimension","payload_generator_toConsumableArray","__default","propagateValues","propagationFieldInf","propagationFields","sideEfffects","mergedModel","sourceUnit","sourceCanvas","parentAlias","propagationBehaviour","propFields","facetByFields","getModelWithFacetData","schema1","data1","derivedSchema","dataAtFirstPos","data_propagator_toConsumableArray","behaviourInstance","propagationConf","sourceBehaviour","enabled","propConf","sideEffectPolicy","sourceIdentifierFields","hasCommonCanvas","UnitFireBolt","src_firebolt_classCallCheck","firebolt_possibleConstructorReturn","firebolt_getPrototypeOf","SIDE_EFFECTS","changeSideEffectStateOnPropagation","unitId","aliasName","propagationSourceCanvas","sourceUnitId","sourceSideEffects","sideEffectInstances","actionOnSource","mappedEffects","se","sideEffectCheckers","_getSelectionRejectio","getSelectionRejectionModel","propValuesMap","rejectionModel","_propModel$getData","exitRowIds","rowIdsObj","_cachedValuesMap","enabledFn","sourceBehaviours","trackerClassName","arcLayerClassName","sideEffectClassName","src_local_options","src_local_options_defineProperty","_CONFIG$LAYERDEFS$TRA","getValuesMap","_model$getData","fieldIndices","local_options_toConsumableArray","oldData","unitNs","VisualUnit","visual_unit_classCallCheck","lifeCycleManager","_gridLinesSelection","_gridBandsSelection","_this$_dependencies","fireboltDeps","_firebolt","_rootSvg","class","renderGridLineLayers","gridLineParentGroup","_entry","grid_lines_slicedToArray","parentGroupClass","_sideEffectGroup","createSideEffectGroup","initSideEffects","rootSvg","_this$parentContainer","parentContainerInf","layerDefinition","layerDefinitions","components","layerIndex","layersArr","_layersArr","markId","defArr","getLayerFromDef","existingLayer","instanceArr","instanceValues","visual_unit_toConsumableArray","layerdeps","depArr","resolveEncodingTransform","resolvable","getLayerAxisIndex","_layer$config","specificField","encodingField","_this$_dependencies2","parentModel","dimValue","getNearestDimensionalValue","entryVal","pointInf","getMarkInfFromLayers","markInf","parsedIdentifiers","transposeArray","getPointsFromIdentifiers","localNs","visual_unit_slicedToArray","visual_unit_defineProperty","dispatchQueuedSideEffects","firebolt_helper_toConsumableArray","clearActionHistory","visual_unit_construct","Variable","ComposedVars","composed_vars_classCallCheck","composed_vars_possibleConstructorReturn","composed_vars_getPrototypeOf","vars","_vars","_data","member","getMinDiff","SimpleVariable","simple_var_classCallCheck","simple_var_possibleConstructorReturn","simple_var_getPrototypeOf","oneVar","_oneVar","dtFormat","dateFormat","fieldDef","varInst","convertToVar","datamodel","transformFields","field_sanitizer_slicedToArray","normalizedFields","normalizeFields","norFields","orderFields","fieldArray","temporalArr","categoricalArr","fieldList","numOfMeasures","allDimensions","field_sanitizer_toConsumableArray","temporal","categorical","rowsInfo","columnsInfo","rowDimensions","rowMeasures","rowTemporalFields","rowCategoricalFields","columnDimensions","columnMeasures","columnTemporalFields","columnCategoricalFields","VisualEncoder","_fieldInfo","_axisFrom","_headerFrom","__headerFrom","axisFrom","_getHeaderAxisFrom2","visual_encoder_slicedToArray","getHeaderAxisFrom","rowHeader","rowAxis","_getHeaderAxisFrom4","colHeader","colAxis","headerFrom","scaleMaps","dataTypeScaleMap","generateAxisFromMap","axesCreators","facetFields","axisKey","groupAxes","currentAxes","cacheMaps","commonAxisKey","getAxisKey","axisConfig","getAxisConfig","axisInfo","axisOrientation","columnIndex","rawUserAxisConfig","userAxisConfig","_rotationLock","createSimpleAxis","Cls","sanitizeIndividualLayerConfig","encodingConfigs","getIndex","arrIndex","CartesianEncoder","geomCellAxes","projections","rowFields","columnFields","geomCell","xAxes","yAxes","units","1","rIdx","unitsArr","cIdx","encodingDomains","axisTypeIndex","typeOfField","_resolver$axes","axesArr","adjustedDomain","typeOfAxis","alignZeroLine","getAdjustedDomain","y1ratio","y2ratio","allSameSign","currentFieldName","sortingOrder","sortCategoricalField","sortOrderType","facets","counter","primaryFacets","secondaryFacets","primaryFields","secondaryFields","primaryLen","secondaryLen","projArr","primaryField","secondaryField","facet","existIndex","axisFromIndex","cartesian_encoder_get","cartesian_encoder_getPrototypeOf","groupedModel","encodingObj","retriveDomainFromData","layerArray","serializedLayers","userLayerConfig","layerConfig","retinalConfig","colField","colFieldName","rowField","configs","rowFieldName","rowFieldType","getDefaultMark","colFieldType","defConfigs","layerConfigs","getLayerConfFromFields","colFields","encodingArr","encoder_helper_toConsumableArray","xFields","yFields","colFieldExist","rowFieldExist","layerConf","mergedLayerConf","serializedLayerConfig","cartesian_encoder_toConsumableArray","axesCls","polar_encoder_defineProperty","_axesCls","PolarEncoder","pieAxes","matrixLayers","resolverAxes","varInstances","encType","userConfig","domainProps","matrixInstance","unitDomains","setRadiusFactor","sizeFieldIndex","sizeMultiplier","getSizeMultiplier","sizeAxisDomain","encodingFields","_layers","sanitizedRows","sanitizedColumns","polar_encoder_get","polar_encoder_getPrototypeOf","sanitizedFields","typeIndex","polar_encoder_toConsumableArray","layerEncoding","sanitizedConfig","angleField","angle0Field","RetinalEncoder","newAxes","createRetinalAxis","fieldProps","getAxisType","isDistributionEqual","group_utils_toConsumableArray","rowType","initializeCacheMaps","cellMap","xAxesMap","yAxesMap","entryCellMap","exitCellMap","headerCreator","fieldHeaders","TextCell","getHeaderText","rowLength","getEncoder","encoder","hasPolarEncodings","userAxisFromConfig","group_utils_slicedToArray","firstField","secondField","firstFieldType","secondFieldType","setFacetsAndProjections","_encoder$simpleEncode","simpleEncoder","getFacetsAndProjections","group_utils_defineProperty","getBorders","matrices","showRowBorders","showColBorders","showValueBorders","valueMatrix","_rows","leftRows","rightRows","_columns","topColumns","bottomColumns","_encoder$fieldInfo","allDimensionLength","allMeasuresLength","allTemporalFieldsLength","getRowBorders","borders","getColumnsBorders","getValueBorders","borderTypeRow","borderTypeCol","sortFacetFields","facetNames","sortInfo","sortConfig","facetSortConfig","getSchemaDef","getFieldNames","fieldVar","matrix_model_toConsumableArray","prepareHashMaps","rowKey","joinedRowKey","createJoinedKeys","keyArr","joinedKey","formatKeys","formatterList","formattedKeys","rKeys","createColumnDataModels","colContext","sourceDM","rowFacets","colFacets","rowKeyArr","colKeyObj","newRowIndex","splitModelsHashMap","currentColumnIndex","colKeyArr","colKey","hashMapKey","splitByColumn","optionalProjections","facetInfo","projectionInfo","geomCellCreator","_indices$i","projectionIndexObject","matrix_model_objectSpread","getMatrixModel","globalConfig","currentRowIndex","prepareProjectionInfo","colProjections","rowProjections","rowProj","rIndex","newRIndex","colProj","cIndex","newCIndex","newRowProj","newColProj","prepareFacetInfo","rowFacetNames","colFacetNames","allFacets","_getSplitModelHashMap","getSplitModelHashMap","splitModels","rowKeyHashMap","colKeyHashMap","rowKeys","colKeys","splitContext","splitByRow","generalContext","rowKeyObj","createRowDataModels","rowContext","rowIndexForCurrentKey","_createColumnDataMode","_createColumnDataMode2","_createColumnDataMode3","_createColumnDataMode4","formattedColKeys","facetField","rawFormat","columnKeys","createValueCells","suppliedLayers","GeomCell","horizontalAxis","verticalAxis","datamodelTransform","sortedFields","layerConfigArr","getLayerConfig","normalizedColumns","normalizedRows","cell_creator_toConsumableArray","geomCellKey","getCellKey","columnId","updateCells","facetKey","extractAxisIndex","createAxisCells","currObj","axisInst","_axisInst$config","AxisCell","BlankCell","extractFacetIndex","headerPlaceholderGn","selectionObj","selectionKeys","keySet","textCells","createTextCells","textCell","generatePlaceholders","facetsAndProjections","encoders","valuesMatrix","takeAxisFrom","takeHeaderFrom","axisPlaceholderGn","selObj","axesMatrix","selObjProp","axesForDraw","rowsPrimary","rowPrime","rowsSecondary","rowSec","columnsPrimary","colPrime","columnsSecondary","colSec","_selectionObj","section","hContext","getAxisFields","fieldHolder","ac","transformDataModel","resolvedData","extractFields","layerFields","_ref4","flattenArray","getFieldsFromSuppliedLayers","suppliedLayerConfig","aggregationFns","nearestAggFns","resolvedAggFns","sortDmTemporalFields","computeMatrices","componentRegistry","autoGroupBy","otherEncodings","matrixGnContext","getCellDef","isRowSizeEqual","isColumnSizeEqual","colCells","rowCells","resetSimpleAxes","newCacheMap","valueCellContext","serializeLayerConfig","cellCreator","valueCellsCreator","valueMatrixInfo","removeExitCells","exitCells","qualifiedStateProps","getQualifiedStateProps","placeholder","_mutateAxesFromMap","mutateAxesFromMap","xAxisSet","yAxisSet","axisId","createUnits","_generateMatrices","generateMatrices","leftHeaders","topHeaders","bottomHeaders","rightHeaders","cell_creator_slicedToArray","leftFacets","rightFacets","rowPriority","colPriority","leftMatrix","rightMatrix","topMatrix","bottomMatrix","currentBottomLength","setAvailableSpace","rowMatrix","columnMatrix","RESOLVER_PROPS","MatrixResolver","matrix_resolver_classCallCheck","_registry","_layerConfig","_matrixLayers","_rowMatrix","_columnMatrix","_valueMatrix","_facets","_projections","_datamodelTransform","_units","_cacheMaps","_fireboltDeps","maps","matrix_resolver_toConsumableArray","_horizontalAxis","_verticalAxis","matrixType","matrix_resolver_defineProperty","_this5","sideEffectRegistry","_this$dependencies","unitConfig","extractUnitConfig","_this$getAllFields","retContext","getRetinalFieldsDomain","retinalEncoder","setCommonDomain","_this6","retinalAxes","updateModel","placeholders","bottomLeft","bottomRight","_this$dependencies3","showHeaders","matrix_resolver_slicedToArray","topCols","bottomCols","rowHeaders","blankCellCreator","footers","topLeft","topRight","ValueMatrix","matrixArr","value_matrix_classCallCheck","instancesById","cellValue","_instancesById","_matrix","_filterFn","rowWidth","currentRowWidth","getLogicalSpace","rowHeight","currentRowHeight","setMatrixInstances","_composition","createMatrices","matrixConfig","unsubscribeChangeListeners","sanitizeRetinalConfig","retinalConf","confValue","groupType","fieldSanitizer","setAxisAndHeaders","placeholderInfo","getMatrices","_groupedDataModel","createRetinalAxes","setDomains","cornerMatrices","createHeaders","metaData","border","unionUnitDomains","registerDomainChangeListener","visual_group_props_defineProperty","visual_group_props_PROPS","cellRegistry","VisualGroup","visual_group_classCallCheck","visual_group_possibleConstructorReturn","visual_group_getPrototypeOf","componentSubRegistry","visual_group_assertThisInitialized","_selection","initializeGlobalState","globalState","createUnitState","_VisualUnit$getState2","visual_group_helper_slicedToArray","localState","createLayerState","_BaseLayer$getState2","setupChangeListeners","stores","comp","getListeners","storeInst","listenerInf","variable","findInGroup","channel","group_utils_this","facetType","projType","getRetinalAxes","getSimpleAxes","_this$resolver$getAll","visual_group_defineProperty","info","existingRemoveSet","select_toConsumableArray","firebolt_action_behaviour_map_defineProperty","action_behaviour_map_actionBehaviourMap","propagationBehaviourMap","_propagationBehaviour","firebolt_behaviour_effect_map_defineProperty","firebolt_behaviour_effect_map_behaviourEffectMap","propagationSideEffects","_propagationSideEffec","SCALE_FUNCTIONS","VALUE","canvasAlias","rawVal","check","assembleModelFromIdentifiers","temp","src_firebolt_helper_toConsumableArray","LegendFireBolt","_Firebolt","legend_firebolt_classCallCheck","legend_firebolt_possibleConstructorReturn","legend_firebolt_getPrototypeOf","legend_firebolt_inherits","legend_firebolt_createClass","behaviourName","getCriteriaFromData","firebolt_physical_defineProperty","physical_physicalActions","boundingBox","gradientDimensions","axisScale","rangeShifter","drag_defineProperty","getSelectionCriteria","selectionBoxMeasure","drawingInfMeasure","subjectStartPoint","gradientDimension","legendGradContainer","legendSelGroup","enterFn","getMousePos","boundingClientRect","selection_box_drag_defineProperty","fadeOut","brighten","LegendHighlighter","legend_highlighter_classCallCheck","legend_highlighter_possibleConstructorReturn","legend_highlighter_getPrototypeOf","legendContainer","resetLogicalSpace","title","_title","ALIGN","DEFAULT_MEASUREMENT","LEGEND_TITLE","borderStyle","borderColor","bounds","upper","ICON_MAP","getScaleInfo","scaleType","steps","scaleFn","getInterpolatedArrayData","domainForLegend","scaleParams","requiredWidth","requiredHeight","upperBound","maxTickDiff","alignment","smartLabelCalc","minimumTickSize","_smartLabelCalc$getOr","isInteger","getcomputedArray","computationhelper","requiredMeasure","availableMeasure","currentTickValue","nextTickValue","measureParam","pixelPerTick","getInterpolatedData","recomputeSteps","getTickMeasure","_scaleParams$measures","interpolatedFn","tickValue","getDomainBounds","domainBounds","domainLeg","ele","legend_helper_defineProperty","getScaleFactor","SimpleLegend","simple_legend_classCallCheck","_metaData","_fieldName","_labelManager","_cells","defaultMeasurement","_computedStyle","legendBehaviours","_canvasAlias","getItemMeasures","_labelManager$getOriS","_this$measurement","effPadding","effBorder","effMargin","dataFromScale","titleSpace","getTitleSpace","titleHeight","titleWidth","labelSpaces","getLabelSpaces","_computeItemSpaces","computeItemSpaces","maxItemSpaces","textOrientation","itemSpaces","iconSpaces","maxIconWidth","labelSpace","itemSpace","iconSpace","newLabelWidth","titleSpaces","_this$measurement2","_this$config3","titleCreator","titleContainer","marginPosition","_this$config4","_this$measurement3","renderTitle","simple_legend_defineProperty","legendOrientation","position_config_defineProperty","_legendOrientation","datasets","itemContainerMeasures","getStepSpacesInfo","iconHeight","iconWidth","stepPadding","horizontal","vertical","positionConfig","_positionConfig","alignmentMap","_alignmentMap","itemStack","_itemStack","createLegendSkeleton","gradWidth","gradHeight","maxGradHeight","maxGradWidth","legendBody","legendItem","getItemContainers","legendInstance","positionObj","createItemSkeleton","_context$config","itemSkeleton","alignClass","applyItemStyle","measureType","stepColorCheck","_context$measurement","renderIcon","defaultIcon","DiscreteLegend","_getScaleInfo","discrete_legend_toConsumableArray","_field$schema","discrete_legend_defineProperty","discrete_legend_get","discrete_legend_getPrototypeOf","renderDiscreteItem","_context$measurement2","_item$icon","text-align","getGradientDomain","accumulator","currentValue","MAX_VALUE","MIN_VALUE","legendGradSvg","legendGradCont","linearGradient","makeLinearGradient","legendRect","GradientLegend","gradient_legend_toConsumableArray","gradient_legend_defineProperty","newAxis","axisSpace","axisDomainLength","_legendGradientSvg","gradient_legend_get","gradient_legend_getPrototypeOf","renderGradient","_createLegendSkeleton","StepLegend","step_legend_toConsumableArray","step_legend_defineProperty","lowerBounds","upperBounds","step_legend_get","step_legend_getPrototypeOf","stepData","renderStepItem","_context$measurement3","_item$icon2","_positionConfig$posit","PADDING","BORDER","MARGIN","TITLE_TEMPLATE_NOT_ALLOWED_TAGS","LEGEND_TYPE_MAP","src_constants_defineProperty","_LEGEND_TYPE_MAP","HORIZONTAL_CENTER","VERTICAL_CENTER","share","operators_construct","operators_toConsumableArray","strings","htmlCode","expLn","frag","createDocumentFragment","treeShakeNode","nodeType","Node","ELEMENT_NODE","tagName","childNodes","canvasIterator","canvases","iteratorFn","cFn","canvas","visualGroup","_throwback","listenerFn","registerActions","fnName","_registrableComponents","setFireboltDependencies","actionModel","ActionModel","action_model_classCallCheck","registerPropagationBehaviourMap","dissociateBehaviour","dissociateSideEffect","policy","registrableComponents","mergedPolicy","aliases","*","propagationPayload","propagationCanvas","crossInteractionPolicy","TITLE_CONFIG","SUB_TITLE_CONFIG","maxLines","MESSAGE_CONFIG","canvas_local_options_defineProperty","_localOptions","canvasOptions","_canvasOptions","local_options_slicedToArray","arg1","arg2","local_options_typeof","titleConfig","subtitle","subtitleConfig","sub","LayoutComponent","layoutComponent_classCallCheck","_boundBox","_renderAt","_alignWith","_alignment","_componentName","_className","DummyComponent","newDimensions","renderAt","component","componentName","pagination","scrollBar","thickness","speed","legend","minHeight","minCharacters","verticalAlign","collapse","invalidValues","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_CLASS_NAME","NODE_PREFIX","DefinitionModel","definitionModel_classCallCheck","_host","host","_cut","cut","_ratioWeight","ratioWeight","_preferred","preferred","_lanes","lanes","_remainingHeight","_remainingWidth","remainingHeight","remainingWidth","getNodeId","_uid","yExtraSpace","smallestHeight","getCutType","smallestExtraHeightHorizontally","MAX_SAFE_INTEGER","containerHeight","hostHeight","xExtraSpace","smallestWidth","smallestExtraWidthVertically","containerWidth","hostWidth","createPlaceHolderComponent","placeComponent","definitionModel","leftOvercomponentRationWidth","isPreferred","isGridComponent","componentRatioWidth","leftHeight","leftWidth","_component$getLogical","componentHeight","componentWidth","firstLaneConfig","firstLane","secondLane","tree_classCallCheck","_parentCut","_this$_children","tree_toConsumableArray","parentCut","bound","nodeconfig","searchNode","childNode","nodeId","deleteSearchNode","LayoutModel","measurements","layout_model_classCallCheck","_measurements","_root","createTree","setBoundBox","addChildren","lane","allocateBoundingBox","totalWeight","carry","lastSibling","ratio","setHostSpatialConfig","setHostPosition","negotiateDimension","alteredDim","nonAlteredDim","cumultiveExtraSpaceAmt","childrenLength","extraSpaceAmt","computePosition","determineBoundBox","bb","_lastSibling$boundBox","_top","_left","_height","_width","_instance$parent$boun","setSpatialConfig","VIEW_INDEX","ROW_MATRIX_INDEX","2","COLUMN_MATRIX_INDEX","HEIGHT","ROW_ROOT","COLUMN_ROOT","VERTICAL","HORIZONTAL","Utils","utils_createClass","isDOMElement","getID","getElement","findContainer","coordinate","removeDiv","divId","DataPoint","data_point_classCallCheck","DataParser","data_parser_classCallCheck","data_parser_createClass","defaultDataPointLogic","nodepoints","getnodePoints","datapoint","HTMLDataAdapter","_DataParser","html_data_classCallCheck","html_data_possibleConstructorReturn","html_data_getPrototypeOf","html_data_inherits","html_data_createClass","getCoordinates","html_data_get","Renderer","renderer_classCallCheck","renderer_createClass","initRenderer","__logicalTree","HTMLRenderer","_Renderer","html_renderer_classCallCheck","html_renderer_possibleConstructorReturn","html_renderer_getPrototypeOf","_coordinates","html_renderer_inherits","html_renderer_createClass","createhtml","mainDiv","html_renderer_get","parentDiv","createAndCustomiseParent","hasHost","createAndPositionDiv","html_renderer_objectSpread","div","coordinates","findNode","nodeID","renderer","drawLayout","renderHTML","resolveAligment","componentData","alignWith","componentToAlign","componentMap","refNode","newNodeConfig","setAlignConfig","DrawingManager","drawing_manager_classCallCheck","_componentMap","_layoutClassName","layoutClassName","_renderer","drawing_manager_createClass","drawComponent","DefinitionManager","definition_manager_classCallCheck","_prioritySequence","_totalHeight","_totalWidth","_targetComponentMap","prepareTargetComponentMap","targetComponentMap","canvasComponent","tempDefModel","componentRef","getComponent","placeGridComponent","gridComponents","iscolumnPreffered","_placeComponent","rowpreffred","LayoutDef","layout_def_classCallCheck","_layoutDefinition","layout_def_createClass","addComponent","layoutDefinition","addMultipleComponent","componentArray","sanitizedDefinition","hostObj","hostID","childHost","resetComponentMap","LayoutManager","layout_manager_classCallCheck","_dimension","_skeletonType","skeletonType","_layoutDef","_drawingManager","_rootNodeID","con","resetNode","updateNode","compute","_layout","calLayOutDef","_context$dimension","layoutDef","prioritySequence","generateConfigModel","negotiate","broadcast","layoutComponents","componentArr","compo","elementName","removeElement","elemID","co","deleteElement","setupChangeListener","allOptions","_allOptions","canvas_helper_toConsumableArray","nameSpaceProps","equalityProps","equalityChecker","option","updateProps","updateChecker","dispatchProps","_cachedProps","notifyAnimationEnd","viewInfo","layout","centerMatrix","viewMatricesInfo","promises","cellArr","lifeCycle","animDonePromises","animationDone","applyInteractionPolicy","interactionPolicy","_interactionPolicy","_crossInteractionPolicy","unitFireBolt","changeBehaviourStateOnPropagation","createLayoutManager","src_options","minUnitWidth","minUnitHeight","options_slicedToArray","_ref2$","_auxConfig$reset","oldConf","fixScrollBarConfig","GenericLayout","generic_layout_classCallCheck","_matrices","_centerMatrix","_mountPoint","DEFAULT_CONFIGURATION","grid_layout_defaults_defineProperty","_DEFAULT_CONFIGURATIO","_FieldNames$BORDER","DEFAULT_MEASUREMENTS","_DEFAULT_MEASUREMENTS","findInPage","page","combineMatrices","isTransposed","joinedMatrix","utils_toConsumableArray","rowData","computeLogicalSpace","maxMeasures","_config$isTransposed","unitMeasures","_getMeasureInfo","getMeasureInfo","firstMeasure","secondMeasure","minMeasures","getMinMeasures","_logicalSpace","utils_defineProperty","valueItem","maxMeasure","firstMeasureValue","secondMeasureValue","valueArray","_item$space","fMeasure","sMeasure","minSecondMeasure","createMatrixEachLevel","_arr$i","extraCellsRemover","beg","distribution","extraCellLengths","VisualMatrix","visual_matrix_classCallCheck","_lastLevelKey","_primaryMatrix","_secondaryMatrix","_maxMeasures","_availableSpace","_layoutMatrix","_tree","_createTree2","matrixTree","lastLevelKey","layoutMatrix","primaryMatrix","secondaryMatrix","breakPage","primaryMatrixLength","newMatrix","keyLength","heightMeasures","populateMaxMeasures","widthMeasures","calculateDepth","viewableMatrix","createViewPortMatrix","viewableMeasures","redistributeSpaces","childDepth","createMatrixInstances","matrixInfo","breakPointer","_breakPointer","brokenMatrix","breakMatrix","nextLevel","removeExtraCells","RowVisualMatrix","row_matrix_classCallCheck","row_matrix_possibleConstructorReturn","row_matrix_getPrototypeOf","maxHeights","maxWidths","matrixInst","cellDimOptions","matrixIndex","_this2$getCellDimensi","getCellDimensions","widths","rowHeights","columnWidths","primary","secondary","begCellLen","endCellLen","remainingAvailWidth","cWidths","maxPrioritySpace","availableWidth","currentWidth","prioritySpace","logicalWidths","getPriorityDistribution","mWidth","mHeight","redistributeViewSpaces","computeViewableSpaces","rHeights","gutter","spaceTakenByColumn","spaces","getDistributedHeight","heightWithoutGutter","distSum","gutterSum","availableHeight","colLen","distHeight","borderWidth","colHeight","colWidth","heights","ColumnVisualMatrix","column_matrix_classCallCheck","column_matrix_possibleConstructorReturn","column_matrix_getPrototypeOf","heightDist","divider","spaceTakenByRow","getDistributedWidth","layoutConfig","distWidth","rowLen","oldLogicalSpace","heightDistribution","getMatrixMeasurement","setViewSpaces","pointerType","viewSpaces","pointer","computations_defineProperty","paginationDetailsMap","scrollType","paginationMeasureGetter","relatedMaxMeasure","getMatrixMeasureForPagination","measureDetails","actualMeasure","scrollInfo","getMatrixHeightDetails","columnMatrixWidth","_getHeightRequiredByC","getHeightRequiredByColMatrix","maxColumnMatrixHeight","columnViewSpace","getViewableSpaces","columnPointer","columnMatrixHeight","maxHeightAvailableForRowMatrix","rowMatrixHeight","bufferCondition","isScroll","getActualBufferFromConfig","computations_slicedToArray","getBufferFromCondition","currentBufferType","horizontalBuffer","verticalBuffer","computeLayoutMeasurements","_getMatrixWidthDetail","getMatrixWidthDetails","_layout$config3","rowMatrixWidth","maxRowMatrixWidth","maxWidthAvailableForColumnMatrix","_getMatrixHeightDetai","_getActualBufferFromC","rowViewableSpaces","columnViewableSpaces","setValueMatrixMeasurements","computations_toConsumableArray","rowWidthsPrimary","rowWidthsSecondary","columnHeightsPrimary","columnHeightsSecondary","measureSum","total","GridLayout","layout_classCallCheck","layout_possibleConstructorReturn","layout_getPrototypeOf","_layoutId","_scrollInfo","generateVisualMatrices","begColCells","endColCells","gutterSpace","layout_helper_slicedToArray","_center","_bottom","layout_helper_toConsumableArray","RowMatrix","ColumnMatrix","layout_get","_computeLayoutMeasure","setViewInformation","pageNumber","pageType","totalPages","layout_defineProperty","renderGrid","currentPage","_viewInfo","maxRowHeight","maxColWidth","rowPointer","getViewMatrices","rowMatrices","getViewableMatrices","columnMatrices","centralMatrixPointer","rowMatrixLen","columnMatrixLen","rowPages","columnPages","layoutDimensions","getViewMeasurements","_layout$config","rowSpaces","colSpaces","rightWidth","topHeight","bottomHeight","centerHeight","centerWidth","viewWidth","viewHeight","actualCenterMeasures","totalMeasures","unitHeights","unitWidths","borderMap","border_helper_defineProperty","_borderMap","specificBorderApplier","borderTypes","showBorders","borderInfo","borderType","applySpecificBorder","applyBorders","borderApplierFn","borderApplier","borderMapVal","orderMaker","nestByStack","updateArr","optionalParams","currStack","prevStack","arrVal","stackVal","currElemIndex","newElem","arrElem","returnArr","spanCalculator","isNull","maskCreator","_nestByStack","viewMatrix","hierarchy","_nestByStack2","spanGenerator","spans","ridx","currSpan","getOrder","matrixSpanGeneratorMap","span_maker_defineProperty","_matrixSpanGeneratorM","orderGetter","viewMatrixMaker","spanMaker","matrixSpanGenerator","spanApplier","cellCounter","spaceAllocationDueToSpan","primaryUnitWidth","cumulativeWidth","spanApplierMap","_spanApplierMap","TransactionSupport","INTERFACE_IMPl","CLASSPREFIX","HEADER","DATA","AXES","FACET_BY_FIELDS","FIELDS","TRANSFORM","LAYER_DEF","CONFIG","DETAIL_FIELDS","AXIS","GEOM","BLANK","SimpleCell","simple_cell_classCallCheck","enums_defaults_defineProperty","_DEFAULT_CONFIG","_CONSTANTS$MARGIN","CONSTANTS","DEFAULT_PROPS","minSpacing","visual_cell_src_props_defineProperty","visual_cell_src_props_PROPS","caption","smartText","axis_cell_classCallCheck","axis_cell_possibleConstructorReturn","axis_cell_getPrototypeOf","_availHeight","_availWidth","axis_cell_assertThisInitialized","computeAxisSpace","logicalWidth","logicalHeight","spaceFixer","_axis$getLogicalSpace","actualWidth","actualHeight","_axis$config2","wrapperDiv","blank_cell_classCallCheck","blank_cell_possibleConstructorReturn","blank_cell_getPrototypeOf","blank_cell_assertThisInitialized","setSmartText","_context$minSpacing","minHeightSpace","minWidthSpace","paddedHeight","paddedWidth","text_cell_classCallCheck","text_cell_possibleConstructorReturn","text_cell_getPrototypeOf","text_cell_assertThisInitialized","computeTextSpace","_context$minSpacing2","minText","_minTextSpace","smartSpace","textAlign","vAlign","_this$smartText","translation","middle","geom_cell_classCallCheck","geom_cell_possibleConstructorReturn","geom_cell_getPrototypeOf","_unit","_datamodel","_facetByFields","_transform","_caption","geom_cell_assertThisInitialized","captionSpace","computeGeomSpace","getCaptionSpace","captionDom","DEFAULT_PLACEHOLDERS","src_defaults_defineProperty","_DEFAULT_PLACEHOLDERS","resolveTitleSubTitleContent","rawContent","escapeHTML","htmlEscapes","&","<",">","\"","'","/","createHeading","prevCell","cellType","_minTickDiff","legendInitializer","legendConfig","prevLegends","legends","headerHeight","legendInfo","legendCreator","LegendCls","dataset","scaleProps","_scale$config","stepMapper","dataInfo","legendMeasures","titleText","getGroupByData","setLegendMeasures","MuzeComponent","_this$boundBox","HeaderComponent","headerComponent_classCallCheck","headerComponent_possibleConstructorReturn","headerComponent_getPrototypeOf","setParams","cont","renderHeader","LegendComponent","legendComponent_classCallCheck","legendComponent_possibleConstructorReturn","legendComponent_getPrototypeOf","legendSpace","sectionComponents","_this$params$config","legendMount","legWidth","legHeight","sections","currHeight","currWidth","leg","legendHeight","legendWidth","renderLegend","_defaultAlignmentHelp","defaultAlignmentHelper","arrowSizeMap","getUnitPositions","totalLength","viewLength","currentLen","unitPosition","createScrollBarArrow","createScrollBarRect","mover","applyScrollMouseDownAction","moverRect","scrollMaker","_mover$node$getBoundi","_rect$node$getBoundin","rectX","rectY","changeMoverPosition","registerListenerOnArrow","arrowType","_components","isTouchDevice","registerListeners","applyMoverDrag","moverStartPos","rectStartPos","distanceMoved","actualPosition","pageXOffset","pageYOffset","applyRectClick","emptyScrollAreaClick","manager","unitPositions","ScrollMaker","scroll_maker_classCallCheck","_attachedScrollAction","_unitPositions","scroll_maker_createClass","scrollTo","scrollDeltaTo","createScroll","scrollBarContainer","scrollContainerHelper","attachScrollAction","externalScrollAction","detachScrollAction","scrollMakerMap","_ScrollMaker","HorizontalScrollMaker","horizontal_scroll_maker_classCallCheck","horizontal_scroll_maker_possibleConstructorReturn","horizontal_scroll_maker_getPrototypeOf","horizontal_scroll_maker_inherits","horizontal_scroll_maker_createClass","horizontal_scroll_maker_get","prevArrow","nextArrow","_this$logicalSpace","scrollBarWithouArrowLength","_scrollBarWithouArrowLength","_this$_components$mov","positionAdjuster","newPosition","currentPos","_this$_components$mov2","moverPos","movedViewLength","performAttachedScrollFunction","delta","_this$_components$mov3","scrollPercentage","movement","VerticalScrollMaker","vertical_scroll_maker_classCallCheck","vertical_scroll_maker_possibleConstructorReturn","vertical_scroll_maker_getPrototypeOf","vertical_scroll_maker_inherits","vertical_scroll_maker_createClass","vertical_scroll_maker_get","ScrollComponent","scroll_component_classCallCheck","scrollBarComponentConfig","scroll_component_possibleConstructorReturn","scroll_component_getPrototypeOf","unitIndex","sanitizedUnitIndex","externalAction","MatrixComponent","matrix_component_classCallCheck","matrix_component_possibleConstructorReturn","matrix_component_getPrototypeOf","_this$params$config$s","containerForMatrix","applyScroll","_cellSpanMaker","cellSpanMaker","_matrixSpanGenerator","renderTable","applySpans","applier","renderPlaceholders","renderMatrix","applyScrollAction","scollDistance","GridComponent","grid_component_classCallCheck","grid_component_possibleConstructorReturn","grid_component_getPrototypeOf","_this$component$viewI","matrixDim","matrixName","updateWrapper","matrixWrapper","allComponents","_scrollBarManager","scrollBarManager","wheelDeltaX","wheelDeltaY","preventBrowserScroll","triggerScrollBarAction","movedView","scrollActionApplier","_this$component$0$0$b","sanitizeGrid","attachScrollListener","MessageComponent","message_component_classCallCheck","message_component_possibleConstructorReturn","message_component_getPrototypeOf","_config$dimensions","message","_params$config","headerCell","configType","headerAlignmentMap","component_wrapper_maker_defineProperty","_headerAlignmentMap","isGridPresent","renderDetails","_renderDetails$compon","checkParamsValidation","createHeaderWrapper","headerType","layoutManager","_headerMap$headerType","headerConfig","wrapperParams","component_wrapper_maker_objectSpread","existingComponent","createScrollBarWrapper","scrollBarType","grid","_scrollBarMap$scrollB","scrollBarMap","layoutBasedMeasure","viewMeasure","rowAlign","colAlign","componentWrapperMaker","_layoutManager","createMessageWrapper","_i","_headerValues","defaultDimensions","gridComponent","getBoundBox","createLegendWrapper","legendWrapper","gridLayoutWrapper","verticalScrollBar","horizontalScrollBar","ScrollManager","scroll_manager_classCallCheck","_scrollBarComponents","_attachedComponents","scroll_manager_createClass","scrollBarComponents","attachedComponents","performScrollAction","getRenderDetails","_mount$getBoundingCli","heightAttr","widthAttr","visGroup","_visGroup$placeholder","legendPosition","layoutArrangement","arrangeComponents","_titleLayouts","titleLayouts","component_resolver_defineProperty","legendLayouts","titlePosition","subtitlePosition","availableHeightForCanvas","availableWidthForCanvas","_createHeaders","canvasHeight","canvasWidth","isSubtitle","headerOptions","_createHeading","createLegend","getLegendSpace","mountSpace","componentIndexes","componentNames","3","4","5","6","renderLayout","gridLayout","compWrappers","componentWrappers","createScrollManager","horizontalScrollWrapper","verticalScrollWrapper","gridWrapper","hScrollBar","vScrollBar","componentWrapper","deleteElementName","removeComponent","registerComponents","attachListeners","attachListener","defaultInteractionPolicy","isMeasure","group_firebolt_toConsumableArray","getFieldsFromChannel","colDim","unitColFacets","equals","unitRowFacets","propagateWith","defaultCrossInteractionPolicy","propagationCanvasAlias","propagationUnit","GroupFireBolt","group_firebolt_classCallCheck","group_firebolt_possibleConstructorReturn","group_firebolt_getPrototypeOf","behaviouralAction","validFields","APP_INITIAL_STATE","app","Canvas","globalDependencies","canvas_classCallCheck","canvas_possibleConstructorReturn","canvas_getPrototypeOf","canvas_defineProperty","canvas_assertThisInitialized","initedComponents","initCanvas","createGroupState","_VisualGroup$getState2","canvas_helper_slicedToArray","register","prepareLayout","triggerReflow","setLayoutInfForUnits","getRootNodeId","setLabelRotationForAxes","rotationVal","getAxes","initialSettings","regEntry","COMPONENTS","SUBREGISTRIES","regObj","globalCache","defaultRegistry","overrideRegistryDefinitions","overrideRegistry","muze","_transactor2","muze_slicedToArray","env","globalStore","componentSubRegistryDef","settings","withSettings","enableChainedTransaction","transactionModel","transactionEndpoint","transactionItems","Smartlabel","SideEffects","standards","Behaviours","pkg","operators","utils","lookupWhat","lookupDetails","lookupTarget"],"mappings":"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A,6CACA,mDACA,yDACA,+DACA,sEACA7W,IAAI80C,gCCES6W,gBAZK,IAAI/qD,MAAM,GAAGiW,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA7W,IAAI80C,gCCES6W,kBAZK,IAAI/qD,MAAM,GAAGiW,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA7W,IAAI80C,gCCAS6W,cAVK,IAAI/qD,MAAM,GAAGiW,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA7W,IAAI80C,gCCES6W,cAVK,IAAI/qD,MAAM,GAAGiW,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA7W,IAAI80C,gCCES6W,cAVK,IAAI/qD,MAAM,GAAGiW,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA7W,IAAI80C,gCCES6W,cAVK,IAAI/qD,MAAM,GAAGiW,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA7W,IAAI80C,gCCES6W,gBAVK,IAAI/qD,MAAM,GAAGiW,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA7W,IAAI80C,gCCES6W,cAVK,IAAI/qD,MAAM,GAAGiW,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA7W,IAAI80C,gCCES6W,cAVK,IAAI/qD,MAAM,GAAGiW,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA7W,IAAI80C,gCCES6W,cAVK,IAAI/qD,MAAM,GAAGiW,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA7W,IAAI80C,gCCES6W,gBAVK,IAAI/qD,MAAM,GAAGiW,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA7W,IAAI80C,gCCES6W,cAVK,IAAI/qD,MAAM,GAAGiW,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA7W,IAAI80C,gCCES6W,gBAVK,IAAI/qD,MAAM,GAAGiW,OAC/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","file":"muze.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"muze\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"muze\"] = factory();\n\telse\n\t\troot[\"muze\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"DataModel\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DataModel\"] = factory();\n\telse\n\t\troot[\"DataModel\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","const DataModel = require('./export');\n\nmodule.exports = DataModel.default ? DataModel.default : DataModel;\n","/**\n * DataFormat Enum defines the format of the input data.\n * Based on the format of the data the respective adapter is loaded.\n *\n * @readonly\n * @enum {string}\n */\nconst DataFormat = {\n    FLAT_JSON: 'FlatJSON',\n    DSV_STR: 'DSVStr',\n    DSV_ARR: 'DSVArr',\n    AUTO: 'Auto'\n};\n\nexport default DataFormat;\n","/**\n * DimensionSubtype enum defines the sub types of the Dimensional Field.\n *\n * @readonly\n * @enum {string}\n */\nconst DimensionSubtype = {\n    CATEGORICAL: 'categorical',\n    TEMPORAL: 'temporal',\n    GEO: 'geo',\n    BINNED: 'binned'\n};\n\nexport default DimensionSubtype;\n","/**\n * MeasureSubtype enum defines the sub types of the Measure Field.\n *\n * @readonly\n * @enum {string}\n */\nconst MeasureSubtype = {\n    CONTINUOUS: 'continuous'\n};\n\nexport default MeasureSubtype;\n","/**\n * FieldType enum defines the high level field based on which visuals are controlled.\n * Measure in a high level is numeric field and Dimension in a high level is string field.\n *\n * @readonly\n * @enum {string}\n */\nconst FieldType = {\n    MEASURE: 'measure',\n    DIMENSION: 'dimension'\n};\n\nexport default FieldType;\n","/**\n * Filtering mode enum defines the filering modes of DataModel.\n *\n * @readonly\n * @enum {string}\n */\nconst FilteringMode = {\n    NORMAL: 'normal',\n    INVERSE: 'inverse',\n    ALL: 'all'\n};\n\nexport default FilteringMode;\n","/**\n * Group by function names\n *\n * @readonly\n * @enum {string}\n */\nconst GROUP_BY_FUNCTIONS = {\n    SUM: 'sum',\n    AVG: 'avg',\n    MIN: 'min',\n    MAX: 'max',\n    FIRST: 'first',\n    LAST: 'last',\n    COUNT: 'count',\n    STD: 'std'\n};\n\nexport default GROUP_BY_FUNCTIONS;\n","/**\n * Creates a JS native date object from input\n *\n * @param {string | number | Date} date Input using which date object to be created\n * @return {Date} : JS native date object\n */\nfunction convertToNativeDate (date) {\n    if (date instanceof Date) {\n        return date;\n    }\n\n    return new Date(date);\n}\n/**\n * Apply padding before a number if its less than 1o. This is used when constant digit's number to be returned\n * between 0 - 99\n *\n * @param {number} n Input to be padded\n * @return {string} Padded number\n */\nfunction pad (n) {\n    return (n < 10) ? (`0${n}`) : n;\n}\n/*\n * DateFormatter utility to convert any date format to any other date format\n * DateFormatter parse a date time stamp specified by a user abiding by rules which are defined\n * by user in terms of token. It creates JS native date object from the user specified format.\n * That native date can also be displayed\n * in any specified format.\n * This utility class only takes care of format conversion only\n */\n\n/*\n * Escapes all the special character that are used in regular expression.\n * Like\n * RegExp.escape('sgfd-$') // Output: sgfd\\-\\$\n *\n * @param text {String} : text which is to be escaped\n */\nRegExp.escape = function (text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n};\n\n/**\n * DateTimeFormatter class to convert any user format of date time stamp to any other format\n * of date time stamp.\n *\n * @param {string} format Format of the date given. For the above date,\n * 'year: %Y, month: %b, day: %d'.\n * @class\n */\n/* istanbul ignore next */ function DateTimeFormatter (format) {\n    this.format = format;\n    this.dtParams = undefined;\n    this.nativeDate = undefined;\n}\n\n// The identifier of the tokens\nDateTimeFormatter.TOKEN_PREFIX = '%';\n\n// JS native Date constructor takes the date params (year, month, etc) in a certail sequence.\n// This defines the sequence of the date parameters in the constructor.\nDateTimeFormatter.DATETIME_PARAM_SEQUENCE = {\n    YEAR: 0,\n    MONTH: 1,\n    DAY: 2,\n    HOUR: 3,\n    MINUTE: 4,\n    SECOND: 5,\n    MILLISECOND: 6\n};\n\n/*\n * This is a default number parsing utility. It tries to parse a number in integer, if parsing is unsuccessful, it\n * gives back a default value.\n *\n * @param: defVal {Number} : Default no if the parsing to integer is not successful\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be parsed.\n */\nDateTimeFormatter.defaultNumberParser = function (defVal) {\n    return function (val) {\n        let parsedVal;\n        if (isFinite(parsedVal = parseInt(val, 10))) {\n            return parsedVal;\n        }\n\n        return defVal;\n    };\n};\n\n/*\n * This is a default number range utility. It tries to find an element in the range. If not found it returns a\n * default no as an index.\n *\n * @param: range {Array} : The list which is to be serached\n * @param: defVal {Number} : Default no if the serach and find does not return anything\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be found\n */\nDateTimeFormatter.defaultRangeParser = function (range, defVal) {\n    return (val) => {\n        let i;\n        let l;\n\n        if (!val) { return defVal; }\n\n        const nVal = val.toLowerCase();\n\n        for (i = 0, l = range.length; i < l; i++) {\n            if (range[i].toLowerCase() === nVal) {\n                return i;\n            }\n        }\n\n        if (i === undefined) {\n            return defVal;\n        }\n        return null;\n    };\n};\n\n/*\n * Defines the tokens which are supporter by the dateformatter. Using this definitation a value gets extracted from\n * the user specifed date string. This also formats the value for display purpose from native JS date.\n * The definition of each token contains the following named properties\n * {\n *     %token_name% : {\n *         name: name of the token, this is used in reverse lookup,\n *         extract: a function that returns the regular expression to extract that piece of information. All the\n *                  regex should be gouped by using ()\n *         parser: a function which receives value extracted by the above regex and parse it to get the date params\n *         formatter: a formatter function that takes milliseconds or JS Date object and format the param\n *                  represented by the token only.\n *     }\n * }\n *\n * @return {Object} : Definition of the all the supported tokens.\n */\nDateTimeFormatter.getTokenDefinitions = function () {\n    const daysDef = {\n        short: [\n            'Sun',\n            'Mon',\n            'Tue',\n            'Wed',\n            'Thu',\n            'Fri',\n            'Sat'\n        ],\n        long: [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday'\n        ]\n    };\n    const monthsDef = {\n        short: [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n            'Oct',\n            'Nov',\n            'Dec'\n        ],\n        long: [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December'\n        ]\n    };\n\n    const definitions = {\n        H: {\n            // 24 hours format\n            name: 'H',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n\n                return d.getHours().toString();\n            }\n        },\n        l: {\n            // 12 hours format\n            name: 'l',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours() % 12;\n\n                return (hours === 0 ? 12 : hours).toString();\n            }\n        },\n        p: {\n            // AM or PM\n            name: 'p',\n            index: 3,\n            extract () { return '(AM|PM)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'AM' : 'PM');\n            }\n        },\n        P: {\n            // am or pm\n            name: 'P',\n            index: 3,\n            extract () { return '(am|pm)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'am' : 'pm');\n            }\n        },\n        M: {\n            // Two digit minutes 00 - 59\n            name: 'M',\n            index: 4,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const mins = d.getMinutes();\n\n                return pad(mins);\n            }\n        },\n        S: {\n            // Two digit seconds 00 - 59\n            name: 'S',\n            index: 5,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const seconds = d.getSeconds();\n\n                return pad(seconds);\n            }\n        },\n        K: {\n            // Milliseconds\n            name: 'K',\n            index: 6,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const ms = d.getMilliseconds();\n\n                return ms.toString();\n            }\n        },\n        a: {\n            // Short name of day, like Mon\n            name: 'a',\n            index: 2,\n            extract () { return `(${daysDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.short[day]).toString();\n            }\n        },\n        A: {\n            // Long name of day, like Monday\n            name: 'A',\n            index: 2,\n            extract () { return `(${daysDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.long[day]).toString();\n            }\n        },\n        e: {\n            // 8 of March, 11 of November\n            name: 'e',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return day.toString();\n            }\n        },\n        d: {\n            // 08 of March, 11 of November\n            name: 'd',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return pad(day);\n            }\n        },\n        b: {\n            // Short month, like Jan\n            name: 'b',\n            index: 1,\n            extract () { return `(${monthsDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.short[month]).toString();\n            }\n        },\n        B: {\n            // Long month, like January\n            name: 'B',\n            index: 1,\n            extract () { return `(${monthsDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.long[month]).toString();\n            }\n        },\n        m: {\n            // Two digit month of year like 01 for January\n            name: 'm',\n            index: 1,\n            extract () { return '(\\\\d+)'; },\n            parser (val) { return DateTimeFormatter.defaultNumberParser()(val) - 1; },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return pad(month + 1);\n            }\n        },\n        y: {\n            // Short year like 90 for 1990\n            name: 'y',\n            index: 0,\n            extract () { return '(\\\\d{2})'; },\n            parser (val) {\n                let result;\n                if (val) {\n                    const l = val.length;\n                    val = val.substring(l - 2, l);\n                }\n                let parsedVal = DateTimeFormatter.defaultNumberParser()(val);\n                let presentDate = new Date();\n                let presentYear = Math.trunc((presentDate.getFullYear()) / 100);\n\n                result = `${presentYear}${parsedVal}`;\n\n                if (convertToNativeDate(result).getFullYear() > presentDate.getFullYear()) {\n                    result = `${presentYear - 1}${parsedVal}`;\n                }\n                return convertToNativeDate(result).getFullYear();\n            },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                let year = d.getFullYear().toString();\n                let l;\n\n                if (year) {\n                    l = year.length;\n                    year = year.substring(l - 2, l);\n                }\n\n                return year;\n            }\n        },\n        Y: {\n            // Long year like 1990\n            name: 'Y',\n            index: 0,\n            extract () { return '(\\\\d{4})'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const year = d.getFullYear().toString();\n\n                return year;\n            }\n        }\n    };\n\n    return definitions;\n};\n\n/*\n * The tokens which works internally is not user friendly in terms of memorizing the names. This gives a formal\n * definition to the informal notations.\n *\n * @return {Object} : Formal definition of the tokens\n */\nDateTimeFormatter.getTokenFormalNames = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n\n    return {\n        HOUR: definitions.H,\n        HOUR_12: definitions.l,\n        AMPM_UPPERCASE: definitions.p,\n        AMPM_LOWERCASE: definitions.P,\n        MINUTE: definitions.M,\n        SECOND: definitions.S,\n        SHORT_DAY: definitions.a,\n        LONG_DAY: definitions.A,\n        DAY_OF_MONTH: definitions.e,\n        DAY_OF_MONTH_CONSTANT_WIDTH: definitions.d,\n        SHORT_MONTH: definitions.b,\n        LONG_MONTH: definitions.B,\n        MONTH_OF_YEAR: definitions.m,\n        SHORT_YEAR: definitions.y,\n        LONG_YEAR: definitions.Y\n    };\n};\n\n/*\n * This defines the rules and declares dependencies that resolves a date parameter (year, month etc) from\n * the date time parameter array.\n *\n * @return {Object} : An object that contains dependencies and a resolver function. The dependencies values are fed\n *                  to the resolver function in that particular sequence only.\n */\nDateTimeFormatter.tokenResolver = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const defaultResolver = (...args) => { // eslint-disable-line require-jsdoc\n        let i = 0;\n        let arg;\n        let targetParam;\n        const l = args.length;\n\n        for (; i < l; i++) {\n            arg = args[i];\n            if (args[i]) {\n                targetParam = arg;\n            }\n        }\n\n        if (!targetParam) { return null; }\n\n        return targetParam[0].parser(targetParam[1]);\n    };\n\n    return {\n        YEAR: [definitions.y, definitions.Y,\n            defaultResolver\n        ],\n        MONTH: [definitions.b, definitions.B, definitions.m,\n            defaultResolver\n        ],\n        DAY: [definitions.a, definitions.A, definitions.e, definitions.d,\n            defaultResolver\n        ],\n        HOUR: [definitions.H, definitions.l, definitions.p, definitions.P,\n            function (hourFormat24, hourFormat12, ampmLower, ampmUpper) {\n                let targetParam;\n                let amOrpm;\n                let isPM;\n                let val;\n\n                if (hourFormat12 && (amOrpm = (ampmLower || ampmUpper))) {\n                    if (amOrpm[0].parser(amOrpm[1]) === 'pm') {\n                        isPM = true;\n                    }\n\n                    targetParam = hourFormat12;\n                } else if (hourFormat12) {\n                    targetParam = hourFormat12;\n                } else {\n                    targetParam = hourFormat24;\n                }\n\n                if (!targetParam) { return null; }\n\n                val = targetParam[0].parser(targetParam[1]);\n                if (isPM) {\n                    val += 12;\n                }\n                return val;\n            }\n        ],\n        MINUTE: [definitions.M,\n            defaultResolver\n        ],\n        SECOND: [definitions.S,\n            defaultResolver\n        ]\n    };\n};\n\n/*\n * Finds token from the format rule specified by a user.\n * @param format {String} : The format of the input date specified by the user\n * @return {Array} : An array of objects which contains the available token and their occurence index in the format\n */\nDateTimeFormatter.findTokens = function (format) {\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenLiterals = Object.keys(definitions);\n    const occurrence = [];\n    let i;\n    let forwardChar;\n\n    while ((i = format.indexOf(tokenPrefix, i + 1)) >= 0) {\n        forwardChar = format[i + 1];\n        if (tokenLiterals.indexOf(forwardChar) === -1) { continue; }\n\n        occurrence.push({\n            index: i,\n            token: forwardChar\n        });\n    }\n\n    return occurrence;\n};\n\n/*\n * Format any JS date to a specified date given by user.\n *\n * @param date {Number | Date} : The date object which is to be formatted\n * @param format {String} : The format using which the date will be formatted for display\n */\nDateTimeFormatter.formatAs = function (date, format) {\n    const nDate = convertToNativeDate(date);\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    let formattedStr = String(format);\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    let token;\n    let formattedVal;\n    let i;\n    let l;\n\n    for (i = 0, l = occurrence.length; i < l; i++) {\n        token = occurrence[i].token;\n        formattedVal = definitions[token].formatter(nDate);\n        formattedStr = formattedStr.replace(new RegExp(tokenPrefix + token, 'g'), formattedVal);\n    }\n\n    return formattedStr;\n};\n\n/*\n * Parses the user specified date string to extract the date time params.\n *\n * @return {Array} : Value of date time params in an array [year, month, day, hour, minutes, seconds, milli]\n */\nDateTimeFormatter.prototype.parse = function (dateTimeStamp, options) {\n    const tokenResolver = DateTimeFormatter.tokenResolver();\n    const dtParams = this.extractTokenValue(dateTimeStamp);\n    const dtParamSeq = DateTimeFormatter.DATETIME_PARAM_SEQUENCE;\n    const noBreak = options && options.noBreak;\n    const dtParamArr = [];\n    const args = [];\n    let resolverKey;\n    let resolverParams;\n    let resolverFn;\n    let val;\n    let i;\n    let param;\n    let resolvedVal;\n    let l;\n    let result = [];\n\n    for (resolverKey in tokenResolver) {\n        if (!{}.hasOwnProperty.call(tokenResolver, resolverKey)) { continue; }\n\n        args.length = 0;\n        resolverParams = tokenResolver[resolverKey];\n        resolverFn = resolverParams.splice(resolverParams.length - 1, 1)[0];\n\n        for (i = 0, l = resolverParams.length; i < l; i++) {\n            param = resolverParams[i];\n            val = dtParams[param.name];\n\n            if (val === undefined) {\n                args.push(null);\n            } else {\n                args.push([param, val]);\n            }\n        }\n\n        resolvedVal = resolverFn.apply(this, args);\n\n        if ((resolvedVal === undefined || resolvedVal === null) && !noBreak) {\n            break;\n        }\n\n        dtParamArr[dtParamSeq[resolverKey]] = resolvedVal;\n    }\n\n    if (dtParamArr.length && this.checkIfOnlyYear(dtParamArr.length))\n     {\n        result.unshift(dtParamArr[0], 0, 1); }\n    else {\n        result.unshift(...dtParamArr);\n    }\n\n    return result;\n};\n\n/*\n * Extract the value of the token from user specified date time string.\n *\n * @return {Object} : An key value pair which contains the tokens as key and value as pair\n */\nDateTimeFormatter.prototype.extractTokenValue = function (dateTimeStamp) {\n    const format = this.format;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const tokenObj = {};\n\n    let lastOccurrenceIndex;\n    let occObj;\n    let occIndex;\n    let targetText;\n    let regexFormat;\n\n    let l;\n    let i;\n\n    regexFormat = String(format);\n\n    const tokenArr = occurrence.map(obj => obj.token);\n    const occurrenceLength = occurrence.length;\n    for (i = occurrenceLength - 1; i >= 0; i--) {\n        occIndex = occurrence[i].index;\n\n        if (occIndex + 1 === regexFormat.length - 1) {\n            lastOccurrenceIndex = occIndex;\n            continue;\n        }\n\n        if (lastOccurrenceIndex === undefined) {\n            lastOccurrenceIndex = regexFormat.length;\n        }\n\n        targetText = regexFormat.substring(occIndex + 2, lastOccurrenceIndex);\n        regexFormat = regexFormat.substring(0, occIndex + 2) +\n            RegExp.escape(targetText) +\n            regexFormat.substring(lastOccurrenceIndex, regexFormat.length);\n\n        lastOccurrenceIndex = occIndex;\n    }\n\n    for (i = 0; i < occurrenceLength; i++) {\n        occObj = occurrence[i];\n        regexFormat = regexFormat.replace(tokenPrefix + occObj.token, definitions[occObj.token].extract());\n    }\n\n    const extractValues = dateTimeStamp.match(new RegExp(regexFormat)) || [];\n    extractValues.shift();\n\n    for (i = 0, l = tokenArr.length; i < l; i++) {\n        tokenObj[tokenArr[i]] = extractValues[i];\n    }\n    return tokenObj;\n};\n\n/*\n * Give back the JS native date formed from  user specified date string\n *\n * @return {Date} : Native JS Date\n */\nDateTimeFormatter.prototype.getNativeDate = function (dateTimeStamp) {\n    let date = null;\n    if (Number.isFinite(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    } else if (!this.format && Date.parse(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    }\n    else {\n        const dtParams = this.dtParams = this.parse(dateTimeStamp);\n        if (dtParams.length) {\n            this.nativeDate = new Date(...dtParams);\n            date = this.nativeDate;\n        }\n    }\n    return date;\n};\n\nDateTimeFormatter.prototype.checkIfOnlyYear = function(len) {\n    return len === 1 && this.format.match(/y|Y/g).length;\n};\n\n/*\n * Represents JS native date to a user specified format.\n *\n * @param format {String} : The format according to which the date is to be represented\n * @return {String} : The formatted date string\n */\nDateTimeFormatter.prototype.formatAs = function (format, dateTimeStamp) {\n    let nativeDate;\n\n    if (dateTimeStamp) {\n        nativeDate = this.nativeDate = this.getNativeDate(dateTimeStamp);\n    } else if (!(nativeDate = this.nativeDate)) {\n        nativeDate = this.getNativeDate(dateTimeStamp);\n    }\n\n    return DateTimeFormatter.formatAs(nativeDate, format);\n};\n\nexport { DateTimeFormatter as default };\n","/**\n * The utility function to calculate major column.\n *\n * @param {Object} store - The store object.\n * @return {Function} Returns the push function.\n */\nexport default (store) => {\n    let i = 0;\n    return (...fields) => {\n        fields.forEach((val, fieldIndex) => {\n            if (!(store[fieldIndex] instanceof Array)) {\n                store[fieldIndex] = Array.from({ length: i });\n            }\n            store[fieldIndex].push(val);\n        });\n        i++;\n    };\n};\n","/* eslint-disable */\nconst OBJECTSTRING = 'object';\nconst objectToStrFn = Object.prototype.toString;\nconst objectToStr = '[object Object]';\nconst arrayToStr = '[object Array]';\n\nfunction checkCyclicRef(obj, parentArr) {\n    let i = parentArr.length;\n    let bIndex = -1;\n\n    while (i) {\n        if (obj === parentArr[i]) {\n            bIndex = i;\n            return bIndex;\n        }\n        i -= 1;\n    }\n\n    return bIndex;\n}\n\nfunction merge(obj1, obj2, skipUndef, tgtArr, srcArr) {\n    var item,\n        srcVal,\n        tgtVal,\n        str,\n        cRef;\n    // check whether obj2 is an array\n    // if array then iterate through it's index\n    // **** MOOTOOLS precution\n\n    if (!srcArr) {\n        tgtArr = [obj1];\n        srcArr = [obj2];\n    }\n    else {\n        tgtArr.push(obj1);\n        srcArr.push(obj2);\n    }\n\n    if (obj2 instanceof Array) {\n        for (item = 0; item < obj2.length; item += 1) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (typeof tgtVal !== OBJECTSTRING) {\n                if (!(skipUndef && tgtVal === undefined)) {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                    srcVal = obj1[item] = tgtVal instanceof Array ? [] : {};\n                }\n                cRef = checkCyclicRef(tgtVal, srcArr);\n                if (cRef !== -1) {\n                    srcVal = obj1[item] = tgtArr[cRef];\n                }\n                else {\n                    merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                }\n            }\n        }\n    }\n    else {\n        for (item in obj2) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (tgtVal !== null && typeof tgtVal === OBJECTSTRING) {\n                // Fix for issue BUG: FWXT-602\n                // IE < 9 Object.prototype.toString.call(null) gives\n                // '[object Object]' instead of '[object Null]'\n                // that's why null value becomes Object in IE < 9\n                str = objectToStrFn.call(tgtVal);\n                if (str === objectToStr) {\n                    if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                        srcVal = obj1[item] = {};\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else if (str === arrayToStr) {\n                    if (srcVal === null || !(srcVal instanceof Array)) {\n                        srcVal = obj1[item] = [];\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (skipUndef && tgtVal === undefined) {\n                    continue;\n                }\n                obj1[item] = tgtVal;\n            }\n        }\n    }\n    return obj1;\n}\n\n\nfunction extend2 (obj1, obj2, skipUndef) {\n    //if none of the arguments are object then return back\n    if (typeof obj1 !== OBJECTSTRING && typeof obj2 !== OBJECTSTRING) {\n        return null;\n    }\n\n    if (typeof obj2 !== OBJECTSTRING || obj2 === null) {\n        return obj1;\n    }\n\n    if (typeof obj1 !== OBJECTSTRING) {\n        obj1 = obj2 instanceof Array ? [] : {};\n    }\n    merge(obj1, obj2, skipUndef);\n    return obj1;\n}\n\nexport { extend2 as default };\n","import { DataFormat } from '../enums';\n\n/**\n * Checks whether the value is an array.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an array otherwise returns false.\n */\nexport function isArray (val) {\n    return Array.isArray(val);\n}\n\n/**\n * Checks whether the value is an object.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an object otherwise returns false.\n */\nexport function isObject (val) {\n    return val === Object(val);\n}\n\n/**\n * Checks whether the value is a string value.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is a string value otherwise returns false.\n */\nexport function isString (val) {\n    return typeof val === 'string';\n}\n\n/**\n * Checks whether the value is callable.\n *\n * @param {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is callable otherwise returns false.\n */\nexport function isCallable (val) {\n    return typeof val === 'function';\n}\n\n/**\n * Returns the unique values from the input array.\n *\n * @param {Array} data - The input array.\n * @return {Array} Returns a new array of unique values.\n */\nexport function uniqueValues (data) {\n    return [...new Set(data)];\n}\n\nexport const getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Checks Whether two arrays have same content.\n *\n * @param {Array} arr1 - The first array.\n * @param {Array} arr2 - The 2nd array.\n * @return {boolean} Returns whether two array have same content.\n */\nexport function isArrEqual(arr1, arr2) {\n    if (!isArray(arr1) || !isArray(arr2)) {\n        return arr1 === arr2;\n    }\n\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * It is the default number format function for the measure field type.\n *\n * @param {any} val - The input value.\n * @return {number} Returns a number value.\n */\nexport function formatNumber(val) {\n    return val;\n}\n\n/**\n * Returns the detected data format.\n *\n * @param {any} data - The input data to be tested.\n * @return {string} Returns the data format name.\n */\nexport const detectDataFormat = (data) => {\n    if (isString(data)) {\n        return DataFormat.DSV_STR;\n    } else if (isArray(data) && isArray(data[0])) {\n        return DataFormat.DSV_ARR;\n    } else if (isArray(data) && (data.length === 0 || isObject(data[0]))) {\n        return DataFormat.FLAT_JSON;\n    }\n    return null;\n};\n","import { FieldType } from './enums';\nimport { getUniqueId } from './utils';\n\nconst fieldStore = {\n    data: {},\n\n    createNamespace (fieldArr, name) {\n        const dataId = name || getUniqueId();\n\n        this.data[dataId] = {\n            name: dataId,\n            fields: fieldArr,\n\n            fieldsObj () {\n                let fieldsObj = this._cachedFieldsObj;\n\n                if (!fieldsObj) {\n                    fieldsObj = this._cachedFieldsObj = {};\n                    this.fields.forEach((field) => {\n                        fieldsObj[field.name()] = field;\n                    });\n                }\n                return fieldsObj;\n            },\n            getMeasure () {\n                let measureFields = this._cachedMeasure;\n\n                if (!measureFields) {\n                    measureFields = this._cachedMeasure = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.MEASURE) {\n                            measureFields[field.name()] = field;\n                        }\n                    });\n                }\n                return measureFields;\n            },\n            getDimension () {\n                let dimensionFields = this._cachedDimension;\n\n                if (!this._cachedDimension) {\n                    dimensionFields = this._cachedDimension = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.DIMENSION) {\n                            dimensionFields[field.name()] = field;\n                        }\n                    });\n                }\n                return dimensionFields;\n            },\n        };\n        return this.data[dataId];\n    },\n};\n\nexport default fieldStore;\n","import { getNumberFormattedVal } from './helper';\n\n/**\n * The wrapper class on top of the primitive value of a field.\n *\n * @todo Need to have support for StringValue, NumberValue, DateTimeValue\n * and GeoValue. These types should expose predicate API mostly.\n */\nclass Value {\n\n  /**\n   * Creates new Value instance.\n   *\n   * @param {*} val - the primitive value from the field cell.\n   * @param {string | Field} field - The field from which the value belongs.\n   */\n    constructor (value, rawValue, field) {\n        const formattedValue = getNumberFormattedVal(field, value);\n\n        Object.defineProperties(this, {\n            _value: {\n                enumerable: false,\n                configurable: false,\n                writable: false,\n                value\n            },\n            _formattedValue: {\n                enumerable: false,\n                configurable: false,\n                writable: false,\n                value: formattedValue\n            },\n            _internalValue: {\n                enumerable: false,\n                configurable: false,\n                writable: false,\n                value: rawValue\n            }\n        });\n\n        this.field = field;\n    }\n\n  /**\n   * Returns the field value.\n   *\n   * @return {*} Returns the current value.\n   */\n    get value () {\n        return this._value;\n    }\n\n    /**\n     * Returns the parsed value of field\n     */\n    get formattedValue () {\n        return this._formattedValue;\n    }\n\n    /**\n     * Returns the internal value of field\n     */\n    get internalValue () {\n        return this._internalValue;\n    }\n\n  /**\n   * Converts to human readable string.\n   *\n   * @override\n   * @return {string} Returns a human readable string of the field value.\n   *\n   */\n    toString () {\n        return String(this.value);\n    }\n\n  /**\n   * Returns the value of the field.\n   *\n   * @override\n   * @return {*} Returns the field value.\n   */\n    valueOf () {\n        return this.value;\n    }\n}\n\nexport default Value;\n","/**\n * Iterates through the diffSet array and call the callback with the current\n * index.\n *\n * @param {string} rowDiffset - The row diffset string e.g. '0-4,6,10-13'.\n * @param {Function} callback - The callback function to be called with every index.\n */\nexport function rowDiffsetIterator (rowDiffset, callback) {\n    if (rowDiffset.length > 0) {\n        const rowDiffArr = rowDiffset.split(',');\n        rowDiffArr.forEach((diffStr) => {\n            const diffStsArr = diffStr.split('-');\n            const start = +(diffStsArr[0]);\n            const end = +(diffStsArr[1] || diffStsArr[0]);\n            if (end >= start) {\n                for (let i = start; i <= end; i += 1) {\n                    callback(i);\n                }\n            }\n        });\n    }\n}\n","/**\n * A parser to parser null, undefined, invalid and NIL values.\n *\n * @public\n * @class\n */\nclass InvalidAwareTypes {\n    /**\n     * Static method which gets/sets the invalid value registry.\n     *\n     * @public\n     * @param {Object} config - The custom configuration supplied by user.\n     * @return {Object} Returns the invalid values registry.\n     */\n    static invalidAwareVals (config) {\n        if (!config) {\n            return InvalidAwareTypes._invalidAwareValsMap;\n        }\n        return Object.assign(InvalidAwareTypes._invalidAwareValsMap, config);\n    }\n\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} value - The value of the invalid data type.\n     */\n    constructor (value) {\n        this._value = value;\n    }\n\n    /**\n     * Returns the current value of the instance.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    value () {\n        return this._value;\n    }\n\n    /**\n     * Returns the current value of the instance in string format.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    toString () {\n        return String(this._value);\n    }\n\n    static isInvalid(val) {\n        return (val instanceof InvalidAwareTypes) || !!InvalidAwareTypes.invalidAwareVals()[val];\n    }\n\n    static getInvalidType(val) {\n        return val instanceof InvalidAwareTypes ? val : InvalidAwareTypes.invalidAwareVals()[val];\n    }\n}\n\n/**\n * Enums for Invalid types.\n */\nInvalidAwareTypes.NULL = new InvalidAwareTypes('null');\nInvalidAwareTypes.NA = new InvalidAwareTypes('na');\nInvalidAwareTypes.NIL = new InvalidAwareTypes('nil');\n\n/**\n * Default Registry for mapping the invalid values.\n *\n * @private\n */\nInvalidAwareTypes._invalidAwareValsMap = {\n    invalid: InvalidAwareTypes.NA,\n    nil: InvalidAwareTypes.NIL,\n    null: InvalidAwareTypes.NULL,\n    undefined: InvalidAwareTypes.NA\n};\n\nexport default InvalidAwareTypes;\n","export { DataFormat, FilteringMode } from '../enums';\n/**\n * The event name for data propagation.\n */\nexport const PROPAGATION = 'propagation';\n\n/**\n * The name of the unique row id column in DataModel.\n */\nexport const ROW_ID = '__id__';\n\n/**\n * The enums for operation names performed on DataModel.\n */\nexport const DM_DERIVATIVES = {\n    SELECT: 'select',\n    PROJECT: 'project',\n    GROUPBY: 'group',\n    COMPOSE: 'compose',\n    CAL_VAR: 'calculatedVariable',\n    BIN: 'bin',\n    SORT: 'sort'\n};\n\nexport const JOINS = {\n    CROSS: 'cross',\n    LEFTOUTER: 'leftOuter',\n    RIGHTOUTER: 'rightOuter',\n    NATURAL: 'natural',\n    FULLOUTER: 'fullOuter'\n};\n\nexport const LOGICAL_OPERATORS = {\n    AND: 'and',\n    OR: 'or'\n};\n","/**\n * The helper function that returns an array of common schema\n * from two fieldStore instances.\n *\n * @param {FieldStore} fs1 - The first FieldStore instance.\n * @param {FieldStore} fs2 - The second FieldStore instance.\n * @return {Array} An array containing the common schema.\n */\nexport function getCommonSchema (fs1, fs2) {\n    const retArr = [];\n    const fs1Arr = [];\n    fs1.fields.forEach((field) => {\n        fs1Arr.push(field.schema().name);\n    });\n    fs2.fields.forEach((field) => {\n        if (fs1Arr.indexOf(field.schema().name) !== -1) {\n            retArr.push(field.schema().name);\n        }\n    });\n    return retArr;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { getCommonSchema } from './get-common-schema';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { JOINS } from '../constants';\nimport { prepareJoinData } from '../helper';\n/**\n * Default filter function for crossProduct.\n *\n * @return {boolean} Always returns true.\n */\nfunction defaultFilterFn() { return true; }\n\n/**\n * Implementation of cross product operation between two DataModel instances.\n * It internally creates the data and schema for the new DataModel.\n *\n * @param {DataModel} dataModel1 - The left DataModel instance.\n * @param {DataModel} dataModel2 - The right DataModel instance.\n * @param {Function} filterFn - The filter function which is used to filter the tuples.\n * @param {boolean} [replaceCommonSchema=false] - The flag if the common name schema should be there.\n * @return {DataModel} Returns The newly created DataModel instance from the crossProduct operation.\n */\nexport function crossProduct (dm1, dm2, filterFn, replaceCommonSchema = false, jointype = JOINS.CROSS) {\n    const schema = [];\n    const data = [];\n    const applicableFilterFn = filterFn || defaultFilterFn;\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreName = dm1FieldStore.name;\n    const dm2FieldStoreName = dm2FieldStore.name;\n    const name = `${dm1FieldStore.name}.${dm2FieldStore.name}`;\n    const commonSchemaList = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    if (dm1FieldStoreName === dm2FieldStoreName) {\n        throw new Error('DataModels must have different alias names');\n    }\n    // Here prepare the schema\n    dm1FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1 && !replaceCommonSchema) {\n            tmpSchema.name = `${dm1FieldStore.name}.${tmpSchema.name}`;\n        }\n        schema.push(tmpSchema);\n    });\n    dm2FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1) {\n            if (!replaceCommonSchema) {\n                tmpSchema.name = `${dm2FieldStore.name}.${tmpSchema.name}`;\n                schema.push(tmpSchema);\n            }\n        } else {\n            schema.push(tmpSchema);\n        }\n    });\n\n    // Here prepare Data\n    rowDiffsetIterator(dm1._rowDiffset, (i) => {\n        let rowAdded = false;\n        let rowPosition;\n        rowDiffsetIterator(dm2._rowDiffset, (ii) => {\n            const tuple = [];\n            const userArg = {};\n            userArg[dm1FieldStoreName] = {};\n            userArg[dm2FieldStoreName] = {};\n            dm1FieldStore.fields.forEach((field) => {\n                tuple.push(field.partialField.data[i]);\n                userArg[dm1FieldStoreName][field.name()] = {\n                    rawValue: field.partialField.data[i],\n                    formattedValue: field.formattedData()[i],\n                };\n            });\n            dm2FieldStore.fields.forEach((field) => {\n                if (!(commonSchemaList.indexOf(field.schema().name) !== -1 && replaceCommonSchema)) {\n                    tuple.push(field.partialField.data[ii]);\n                }\n                userArg[dm2FieldStoreName][field.name()] = {\n                    rawValue: field.partialField.data[ii],\n                    formattedValue: field.formattedData()[ii],\n                };\n            });\n\n            let cachedStore = {};\n            let cloneProvider1 = () => dm1.detachedRoot();\n            let cloneProvider2 = () => dm2.detachedRoot();\n\n            const dm1Fields = prepareJoinData(userArg[dm1FieldStoreName]);\n            const dm2Fields = prepareJoinData(userArg[dm2FieldStoreName]);\n            if (applicableFilterFn(dm1Fields, dm2Fields, cloneProvider1, cloneProvider2, cachedStore)) {\n                const tupleObj = {};\n                tuple.forEach((cellVal, iii) => {\n                    tupleObj[schema[iii].name] = cellVal;\n                });\n                if (rowAdded && JOINS.CROSS !== jointype) {\n                    data[rowPosition] = tupleObj;\n                }\n                else {\n                    data.push(tupleObj);\n                    rowAdded = true;\n                    rowPosition = i;\n                }\n            } else if ((jointype === JOINS.LEFTOUTER || jointype === JOINS.RIGHTOUTER) && !rowAdded) {\n                const tupleObj = {};\n                let len = dm1FieldStore.fields.length - 1;\n                tuple.forEach((cellVal, iii) => {\n                    if (iii <= len) {\n                        tupleObj[schema[iii].name] = cellVal;\n                    }\n                    else {\n                        tupleObj[schema[iii].name] = null;\n                    }\n                });\n                rowAdded = true;\n                rowPosition = i;\n                data.push(tupleObj);\n            }\n        });\n    });\n\n    return new DataModel(data, schema, { name });\n}\n","/**\n * The default sort function.\n *\n * @param {*} a - The first value.\n * @param {*} b - The second value.\n * @return {number} Returns the comparison result e.g. 1 or 0 or -1.\n */\nfunction defSortFn (a, b) {\n    const a1 = `${a}`;\n    const b1 = `${b}`;\n    if (a1 < b1) {\n        return -1;\n    }\n    if (a1 > b1) {\n        return 1;\n    }\n    return 0;\n}\n\n/**\n * The helper function for merge sort which creates the sorted array\n * from the two halves of the input array.\n *\n * @param {Array} arr - The target array which needs to be merged.\n * @param {number} lo - The starting index of the first array half.\n * @param {number} mid - The ending index of the first array half.\n * @param {number} hi - The ending index of the second array half.\n * @param {Function} sortFn - The sort function.\n */\nfunction merge (arr, lo, mid, hi, sortFn) {\n    const mainArr = arr;\n    const auxArr = [];\n    for (let i = lo; i <= hi; i += 1) {\n        auxArr[i] = mainArr[i];\n    }\n    let a = lo;\n    let b = mid + 1;\n\n    for (let i = lo; i <= hi; i += 1) {\n        if (a > mid) {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        } else if (b > hi) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else if (sortFn(auxArr[a], auxArr[b]) <= 0) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        }\n    }\n}\n\n/**\n * The helper function for merge sort which would be called\n * recursively for sorting the array halves.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {number} lo - The starting index of the array half.\n * @param {number} hi - The ending index of the array half.\n * @param {Function} sortFn - The sort function.\n * @return {Array} Returns the target array itself.\n */\nfunction sort (arr, lo, hi, sortFn) {\n    if (hi === lo) { return arr; }\n\n    const mid = lo + Math.floor((hi - lo) / 2);\n    sort(arr, lo, mid, sortFn);\n    sort(arr, mid + 1, hi, sortFn);\n    merge(arr, lo, mid, hi, sortFn);\n\n    return arr;\n}\n\n/**\n * The implementation of merge sort.\n * It is used in DataModel for stable sorting as it is not sure\n * what the sorting algorithm used by browsers is stable or not.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {Function} [sortFn=defSortFn] - The sort function.\n * @return {Array} Returns the input array itself in sorted order.\n */\nexport function mergeSort (arr, sortFn = defSortFn) {\n    if (arr.length > 1) {\n        sort(arr, 0, arr.length - 1, sortFn);\n    }\n    return arr;\n}\n","import { DimensionSubtype, MeasureSubtype } from '../enums';\nimport { mergeSort } from './merge-sort';\nimport { fieldInSchema } from '../helper';\nimport { isCallable, isArray } from '../utils';\n\n/**\n * Generates the sorting functions to sort the data of a DataModel instance\n * according to the input data type.\n *\n * @param {string} dataType - The data type e.g. 'measure', 'datetime' etc.\n * @param {string} sortType - The sorting order i.e. 'asc' or 'desc'.\n * @return {Function} Returns the the sorting function.\n */\nfunction getSortFn (dataType, sortType) {\n    let retFunc;\n\n    switch (dataType) {\n    case MeasureSubtype.CONTINUOUS:\n    case DimensionSubtype.TEMPORAL:\n        if (sortType === 'asc') {\n            retFunc = (a, b) => a - b;\n        } else {\n            retFunc = (a, b) => b - a;\n        }\n        break;\n    default:\n        if (sortType === 'asc') {\n            retFunc = (a, b) => {\n                a = `${a}`;\n                b = `${b}`;\n                if (a === b) {\n                    return 0;\n                }\n                return a > b ? 1 : -1;\n            };\n        } else {\n            retFunc = (a, b) => {\n                a = `${a}`;\n                b = `${b}`;\n                if (a === b) {\n                    return 0;\n                }\n                return a > b ? -1 : 1;\n            };\n        }\n    }\n\n    return retFunc;\n}\n\n/**\n * Resolves the actual sorting function based on sorting string value.\n *\n * @param {Object} fDetails - The target field info.\n * @param {string} strSortOrder - The sort order value.\n * @return {Function} Returns the sorting function.\n */\nfunction resolveStrSortOrder (fDetails, strSortOrder) {\n    const sortOrder = String(strSortOrder).toLowerCase() === 'desc' ? 'desc' : 'asc';\n    return getSortFn(fDetails.type, sortOrder);\n}\n\n/**\n * Groups the data according to the specified target field.\n *\n * @param {Array} data - The input data array.\n * @param {number} fieldIndex - The target field index within schema array.\n * @return {Array} Returns an array containing the grouped data.\n */\nfunction groupData (data, fieldIndex) {\n    const hashMap = new Map();\n    const groupedData = [];\n\n    data.forEach((datum) => {\n        const fieldVal = datum[fieldIndex];\n        if (hashMap.has(fieldVal)) {\n            groupedData[hashMap.get(fieldVal)][1].push(datum);\n        } else {\n            groupedData.push([fieldVal, [datum]]);\n            hashMap.set(fieldVal, groupedData.length - 1);\n        }\n    });\n\n    return groupedData;\n}\n\n/**\n * Creates the argument value used for sorting function when sort is done\n * with another fields.\n *\n * @param {Array} groupedDatum - The grouped datum for a single dimension field value.\n * @param {Array} targetFields - An array of the sorting fields.\n * @param {Array} targetFieldDetails - An array of the sorting field details in schema.\n * @return {Object} Returns an object containing the value of sorting fields and the target field name.\n */\nfunction createSortingFnArg (groupedDatum, targetFields, targetFieldDetails) {\n    const arg = {\n        label: groupedDatum[0]\n    };\n\n    targetFields.reduce((acc, next, idx) => {\n        acc[next] = groupedDatum[1].map(datum => datum[targetFieldDetails[idx].index]);\n        return acc;\n    }, arg);\n\n    return arg;\n}\n\n/**\n * Sorts the data by applying the standard sorting mechanism.\n *\n * @param {Array} data - The input data array.\n * @param {Array} schema - The data schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n */\nfunction applyStandardSort (data, schema, sortingDetails) {\n    let fieldName;\n    let sortMeta;\n    let fDetails;\n    let i = sortingDetails.length - 1;\n\n    for (; i >= 0; i--) {\n        fieldName = sortingDetails[i][0];\n        sortMeta = sortingDetails[i][1];\n        fDetails = fieldInSchema(schema, fieldName);\n\n        if (!fDetails) {\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n\n        if (isCallable(sortMeta)) {\n            // eslint-disable-next-line no-loop-func\n            mergeSort(data, (a, b) => sortMeta(a[fDetails.index], b[fDetails.index]));\n        } else if (isArray(sortMeta)) {\n            const groupedData = groupData(data, fDetails.index);\n            const sortingFn = sortMeta[sortMeta.length - 1];\n            const targetFields = sortMeta.slice(0, sortMeta.length - 1);\n            const targetFieldDetails = targetFields.map(f => fieldInSchema(schema, f));\n\n            groupedData.forEach((groupedDatum) => {\n                groupedDatum.push(createSortingFnArg(groupedDatum, targetFields, targetFieldDetails));\n            });\n\n            mergeSort(groupedData, (a, b) => {\n                const m = a[2];\n                const n = b[2];\n                return sortingFn(m, n);\n            });\n\n            // Empty the array\n            data.length = 0;\n            groupedData.forEach((datum) => {\n                data.push(...datum[1]);\n            });\n        } else {\n            const sortFn = resolveStrSortOrder(fDetails, sortMeta);\n            // eslint-disable-next-line no-loop-func\n            mergeSort(data, (a, b) => sortFn(a[fDetails.index], b[fDetails.index]));\n        }\n    }\n}\n\n/**\n * Creates a map based on grouping.\n *\n * @param {Array} depColumns - The dependency columns' info.\n * @param {Array} data - The input data.\n * @param {Array} schema - The data schema.\n * @param {Array} sortingDetails - The sorting details for standard sorting.\n * @return {Map} Returns a map.\n */\nconst makeGroupMapAndSort = (depColumns, data, schema, sortingDetails) => {\n    if (depColumns.length === 0) { return data; }\n\n    const targetCol = depColumns[0];\n    const map = new Map();\n\n    data.reduce((acc, currRow) => {\n        const fVal = currRow[targetCol.index];\n        if (acc.has(fVal)) {\n            acc.get(fVal).push(currRow);\n        } else {\n            acc.set(fVal, [currRow]);\n        }\n        return acc;\n    }, map);\n\n    for (let [key, val] of map) {\n        const nMap = makeGroupMapAndSort(depColumns.slice(1), val, schema, sortingDetails);\n        map.set(key, nMap);\n        if (Array.isArray(nMap)) {\n            applyStandardSort(nMap, schema, sortingDetails);\n        }\n    }\n\n    return map;\n};\n\n/**\n * Sorts the data by retaining the position/order of a particular field.\n *\n * @param {Array} data - The input data array.\n * @param {Array} schema - The data schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n * @param {Array} depColumns - The dependency column list.\n * @return {Array} Returns the sorted data.\n */\nfunction applyGroupSort (data, schema, sortingDetails, depColumns) {\n    sortingDetails = sortingDetails.filter((detail) => {\n        if (detail[1] === null) {\n            depColumns.push(detail[0]);\n            return false;\n        }\n        return true;\n    });\n    if (sortingDetails.length === 0) { return data; }\n\n    depColumns = depColumns.map(c => fieldInSchema(schema, c));\n\n    const sortedGroupMap = makeGroupMapAndSort(depColumns, data, schema, sortingDetails);\n    return data.map((row) => {\n        let i = 0;\n        let nextMap = sortedGroupMap;\n\n        while (!Array.isArray(nextMap)) {\n            nextMap = nextMap.get(row[depColumns[i++].index]);\n        }\n\n        return nextMap.shift();\n    });\n}\n\n/**\n * Sorts the data.\n *\n * @param {Object} dataObj - An object containing the data and schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n */\nexport function sortData (dataObj, sortingDetails) {\n    let { schema, data } = dataObj;\n\n    sortingDetails = sortingDetails.filter(sDetial => !!fieldInSchema(schema, sDetial[0]));\n    if (sortingDetails.length === 0) { return; }\n\n    let groupSortingIdx = sortingDetails.findIndex(sDetial => sDetial[1] === null);\n    groupSortingIdx = groupSortingIdx !== -1 ? groupSortingIdx : sortingDetails.length;\n\n    const standardSortingDetails = sortingDetails.slice(0, groupSortingIdx);\n    const groupSortingDetails = sortingDetails.slice(groupSortingIdx);\n\n    applyStandardSort(data, schema, standardSortingDetails);\n    data = applyGroupSort(data, schema, groupSortingDetails, standardSortingDetails.map(detail => detail[0]));\n\n    dataObj.uids = data.map(row => row.pop());\n    dataObj.data = data;\n}\n","import { rowDiffsetIterator } from './row-diffset-iterator';\nimport { sortData } from './sort';\n\n/**\n * Builds the actual data array.\n *\n * @param {Array} fieldStore - An array of field.\n * @param {string} rowDiffset - A string consisting of which rows to be included eg. '0-2,4,6';\n * @param {string} colIdentifier - A string consisting of the details of which column\n * to be included eg 'date,sales,profit';\n * @param {Object} sortingDetails - An object containing the sorting details of the DataModel instance.\n * @param {Object} options - The options required to create the type of the data.\n * @return {Object} Returns an object containing the multidimensional array and the relative schema.\n */\nexport function dataBuilder (fieldStore, rowDiffset, colIdentifier, sortingDetails, options) {\n    const defOptions = {\n        addUid: false,\n        columnWise: false\n    };\n    options = Object.assign({}, defOptions, options);\n\n    const retObj = {\n        schema: [],\n        data: [],\n        uids: []\n    };\n    const addUid = options.addUid;\n    const reqSorting = sortingDetails && sortingDetails.length > 0;\n    // It stores the fields according to the colIdentifier argument\n    const tmpDataArr = [];\n    // Stores the fields according to the colIdentifier argument\n    const colIArr = colIdentifier.split(',');\n\n    colIArr.forEach((colName) => {\n        for (let i = 0; i < fieldStore.length; i += 1) {\n            if (fieldStore[i].name() === colName) {\n                tmpDataArr.push(fieldStore[i]);\n                break;\n            }\n        }\n    });\n\n    // Inserts the schema to the schema object\n    tmpDataArr.forEach((field) => {\n        /** @todo Need to use extend2 here otherwise user can overwrite the schema. */\n        retObj.schema.push(field.schema());\n    });\n\n    if (addUid) {\n        retObj.schema.push({\n            name: 'uid',\n            type: 'identifier'\n        });\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        retObj.data.push([]);\n        const insertInd = retObj.data.length - 1;\n        let start = 0;\n        tmpDataArr.forEach((field, ii) => {\n            retObj.data[insertInd][ii + start] = field.partialField.data[i];\n        });\n        if (addUid) {\n            retObj.data[insertInd][tmpDataArr.length] = i;\n        }\n        // Creates an array of unique identifiers for each row\n        retObj.uids.push(i);\n\n        // If sorting needed then there is the need to expose the index\n        // mapping from the old index to its new index\n        if (reqSorting) { retObj.data[insertInd].push(i); }\n    });\n\n    // Handles the sort functionality\n    if (reqSorting) {\n        sortData(retObj, sortingDetails);\n    }\n\n    if (options.columnWise) {\n        const tmpData = Array(...Array(retObj.schema.length)).map(() => []);\n        retObj.data.forEach((tuple) => {\n            tuple.forEach((data, i) => {\n                tmpData[i].push(data);\n            });\n        });\n        retObj.data = tmpData;\n    }\n\n    return retObj;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n\n/**\n * Performs the union operation between two dm instances.\n *\n * @todo Fix the conflicts between union and difference terminology here.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function difference (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n   // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     * @param {boolean} addData - If true only tuple will be added to the data.\n     */\n    function prepareDataHelper(dm, fieldsObj, addData) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                if (addData) { data.push(tuple); }\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj, false);\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj, true);\n\n    return new DataModel(data, schema, { name });\n}\n\n","import { isArray } from '../utils';\nimport InvalidAwareTypes from '../invalid-aware-types';\nimport { GROUP_BY_FUNCTIONS } from '../enums';\n\nconst { SUM, AVG, FIRST, LAST, COUNT, STD, MIN, MAX } = GROUP_BY_FUNCTIONS;\n\nfunction getFilteredValues(arr) {\n    return arr.filter(item => !(item instanceof InvalidAwareTypes));\n}\n/**\n * Reducer function that returns the sum of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the sum of the array.\n */\nfunction sum (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const filteredNumber = getFilteredValues(arr);\n        const totalSum = filteredNumber.length ?\n                            filteredNumber.reduce((acc, curr) => acc + curr, 0)\n                            : InvalidAwareTypes.NULL;\n        return totalSum;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that returns the average of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the mean value of the array.\n */\nfunction avg (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const totalSum = sum(arr);\n        const len = arr.length || 1;\n        return (Number.isNaN(totalSum) || totalSum instanceof InvalidAwareTypes) ?\n                 InvalidAwareTypes.NULL : totalSum / len;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the min value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the minimum value of the array.\n */\nfunction min (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.min(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the max value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the maximum value of the array.\n */\nfunction max (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.max(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the first value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the first value of the array.\n */\nfunction first (arr) {\n    return arr[0];\n}\n\n/**\n * Reducer function that gives the last value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the last value of the array.\n */\nfunction last (arr) {\n    return arr[arr.length - 1];\n}\n\n/**\n * Reducer function that gives the count value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the length of the array.\n */\nfunction count (arr) {\n    if (isArray(arr)) {\n        return arr.length;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Calculates the variance of the input array.\n *\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the variance of the input array.\n */\nfunction variance (arr) {\n    let mean = avg(arr);\n    return avg(arr.map(num => (num - mean) ** 2));\n}\n\n/**\n * Calculates the square root of the variance of the input array.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the square root of the variance.\n */\nfunction std (arr) {\n    return Math.sqrt(variance(arr));\n}\n\n\nconst fnList = {\n    [SUM]: sum,\n    [AVG]: avg,\n    [MIN]: min,\n    [MAX]: max,\n    [FIRST]: first,\n    [LAST]: last,\n    [COUNT]: count,\n    [STD]: std\n};\n\nconst defaultReducerName = SUM;\n\nexport {\n    defaultReducerName,\n    sum as defReducer,\n    fnList,\n};\n","import { defReducer, fnList } from '../operator';\n\n/**\n * A page level storage which stores, registers, unregisters reducers for all the datamodel instances. There is only one\n * reducer store available in a page. All the datamodel instances receive same instance of reducer store. DataModel\n * out of the box provides handful of {@link reducer | reducers} which can be used as reducer funciton.\n *\n * @public\n * @namespace DataModel\n */\nclass ReducerStore {\n    constructor () {\n        this.store = new Map();\n        this.store.set('defReducer', defReducer);\n\n        Object.entries(fnList).forEach((key) => {\n            this.store.set(key[0], key[1]);\n        });\n    }\n\n    /**\n     * Changes the `defaultReducer` globally. For all the fields which does not have `defAggFn` mentioned in schema, the\n     * value of `defaultReducer` is used for aggregation.\n     *\n     * @public\n     * @param {string} [reducer='sum'] - The name of the default reducer. It picks up the definition from store by doing\n     * name lookup. If no name is found then it takes `sum` as the default reducer.\n     * @return {ReducerStore} Returns instance of the singleton store in page.\n     */\n    defaultReducer (...params) {\n        if (!params.length) {\n            return this.store.get('defReducer');\n        }\n\n        let reducer = params[0];\n\n        if (typeof reducer === 'function') {\n            this.store.set('defReducer', reducer);\n        } else {\n            reducer = String(reducer);\n            if (Object.keys(fnList).indexOf(reducer) !== -1) {\n                this.store.set('defReducer', fnList[reducer]);\n            } else {\n                throw new Error(`Reducer ${reducer} not found in registry`);\n            }\n        }\n        return this;\n    }\n\n    /**\n     *\n     * Registers a {@link reducer | reducer}.\n     * A {@link reducer | reducer} has to be registered before it is used.\n     *\n     * @example\n     *  // find the mean squared value of a given set\n     *  const reducerStore = DataModel.Reducers();\n     *\n     *  reducers.register('meanSquared', (arr) => {\n     *      const squaredVal = arr.map(item => item * item);\n     *      let sum = 0;\n     *      for (let i = 0, l = squaredVal.length; i < l; i++) {\n     *          sum += squaredVal[i++];\n     *      }\n     *\n     *      return sum;\n     *  })\n     *\n     *  // datamodel (dm) is already prepared with cars.json\n     *  const dm1 = dm.groupBy(['origin'], {\n     *      accleration: 'meanSquared'\n     *  });\n     *\n     * @public\n     *\n     * @param {string} name formal name for a reducer. If the given name already exists in store it is overridden by new\n     *      definition.\n     * @param {Function} reducer definition of {@link reducer} function.\n     *\n     * @return {Function} function for unregistering the reducer.\n     */\n    register (name, reducer) {\n        if (typeof reducer !== 'function') {\n            throw new Error('Reducer should be a function');\n        }\n\n        name = String(name);\n        this.store.set(name, reducer);\n\n        return () => { this.__unregister(name); };\n    }\n\n    __unregister (name) {\n        if (this.store.has(name)) {\n            this.store.delete(name);\n        }\n    }\n\n    resolve (name) {\n        if (name instanceof Function) {\n            return name;\n        }\n        return this.store.get(name);\n    }\n}\n\nconst reducerStore = (function () {\n    let store = null;\n\n    function getStore () {\n        if (store === null) {\n            store = new ReducerStore();\n        }\n        return store;\n    }\n    return getStore();\n}());\n\nexport default reducerStore;\n","import { getCommonSchema } from './get-common-schema';\n\n/**\n * The filter function used in natural join.\n * It generates a function that will have the logic to join two\n * DataModel instances by the process of natural join.\n *\n * @param {DataModel} dm1 - The left DataModel instance.\n * @param {DataModel} dm2 - The right DataModel instance.\n * @return {Function} Returns a function that is used in cross-product operation.\n */\nexport function naturalJoinFilter (dm1, dm2) {\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    // const dm1FieldStoreName = dm1FieldStore.name;\n    // const dm2FieldStoreName = dm2FieldStore.name;\n    const commonSchemaArr = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    return (dm1Fields, dm2Fields) => {\n        let retainTuple = true;\n        commonSchemaArr.forEach((fieldName) => {\n            if (dm1Fields[fieldName].internalValue ===\n                dm2Fields[fieldName].internalValue && retainTuple) {\n                retainTuple = true;\n            } else {\n                retainTuple = false;\n            }\n        });\n        return retainTuple;\n    };\n}\n","import DataModel from '../export';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n/**\n * Performs the union operation between two dm instances.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function union (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n    // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     */\n    function prepareDataHelper (dm, fieldsObj) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                data.push(tuple);\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj);\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj);\n\n    return new DataModel(data, schema, { name });\n}\n","import { crossProduct } from './cross-product';\nimport { JOINS } from '../constants';\nimport { union } from './union';\n\n\nexport function leftOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel1, dataModel2, filterFn, false, JOINS.LEFTOUTER);\n}\n\nexport function rightOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel2, dataModel1, filterFn, false, JOINS.RIGHTOUTER);\n}\n\nexport function fullOuterJoin (dataModel1, dataModel2, filterFn) {\n    return union(leftOuterJoin(dataModel1, dataModel2, filterFn), rightOuterJoin(dataModel1, dataModel2, filterFn));\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\n\n/**\n * In {@link DataModel}, every tabular data consists of column, a column is stored as field.\n * Field contains all the data for a given column in an array.\n *\n * Each record consists of several fields; the fields of all records form the columns.\n * Examples of fields: name, gender, sex etc.\n *\n * In DataModel, each field can have multiple attributes which describes its data and behaviour.\n * A field can have two types of data: Measure and Dimension.\n *\n * A Dimension Field is the context on which a data is categorized and the measure is the numerical values that\n * quantify the data set.\n * In short a dimension is the lens through which you are looking at your measure data.\n *\n * Refer to {@link Schema} to get info about possible field attributes.\n *\n * @public\n * @class\n */\nexport default class Field {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        this.partialField = partialField;\n        this.rowDiffset = rowDiffset;\n    }\n\n    /**\n     * Generates the field type specific domain.\n     *\n     * @public\n     * @abstract\n     */\n    domain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the the field schema.\n     *\n     * @public\n     * @return {string} Returns the field schema.\n     */\n    schema () {\n        return this.partialField.schema;\n    }\n\n    /**\n     * Returns the name of the field.\n     *\n     * @public\n     * @return {string} Returns the name of the field.\n     */\n    name () {\n        return this.partialField.name;\n    }\n\n    /**\n     * Returns the type of the field.\n     *\n     * @public\n     * @return {string} Returns the type of the field.\n     */\n    type () {\n        return this.partialField.schema.type;\n    }\n\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return this.partialField.schema.subtype;\n    }\n\n    /**\n     * Returns the description of the field.\n     *\n     * @public\n     * @return {string} Returns the description of the field.\n     */\n    description () {\n        return this.partialField.schema.description;\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @public\n     * @return {string} Returns the display name of the field.\n     */\n    displayName () {\n        return this.partialField.schema.displayName || this.partialField.schema.name;\n    }\n\n    /**\n     * Returns the data associated with the field.\n     *\n     * @public\n     * @return {Array} Returns the data.\n     */\n    data () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            data.push(this.partialField.data[i]);\n        });\n        return data;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @abstract\n     */\n    formattedData () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import Field from '../field';\n\n/**\n * Represents dimension field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Dimension extends Field {\n    /**\n     * Returns the domain for the dimension field.\n     *\n     * @override\n     * @public\n     * @return {any} Returns the calculated domain.\n     */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @abstract\n     */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n     /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { DimensionSubtype } from '../../enums';\nimport Dimension from '../dimension';\n/**\n * Represents categorical field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Categorical extends Dimension {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return DimensionSubtype.CATEGORICAL;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n        return domain;\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport Dimension from '../dimension';\nimport { DateTimeFormatter } from '../../utils';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents temporal field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Temporal extends Dimension {\n     /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        super(partialField, rowDiffset);\n\n        this._cachedMinDiff = null;\n    }\n\n     /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be\n        // occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n\n        return domain;\n    }\n\n\n    /**\n     * Calculates the minimum consecutive difference from the associated field data.\n     *\n     * @public\n     * @return {number} Returns the minimum consecutive diff in milliseconds.\n     */\n    minimumConsecutiveDifference () {\n        if (this._cachedMinDiff) {\n            return this._cachedMinDiff;\n        }\n\n        const sortedData = this.data().filter(item => !(item instanceof InvalidAwareTypes)).sort((a, b) => a - b);\n        const arrLn = sortedData.length;\n        let minDiff = Number.POSITIVE_INFINITY;\n        let prevDatum;\n        let nextDatum;\n        let processedCount = 0;\n\n        for (let i = 1; i < arrLn; i++) {\n            prevDatum = sortedData[i - 1];\n            nextDatum = sortedData[i];\n\n            if (nextDatum === prevDatum) {\n                continue;\n            }\n\n            minDiff = Math.min(minDiff, nextDatum - sortedData[i - 1]);\n            processedCount++;\n        }\n\n        if (!processedCount) {\n            minDiff = null;\n        }\n        this._cachedMinDiff = minDiff;\n\n        return this._cachedMinDiff;\n    }\n\n    /**\n     * Returns the format specified in the input schema while creating field.\n     *\n     * @public\n     * @return {string} Returns the datetime format.\n     */\n    format () {\n        return this.partialField.schema.format;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data\n     * If data is of type invalid or has missing format use the raw value\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        const data = [];\n        const dataFormat = this.format();\n\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            // If value is of invalid type or format is missing\n            if (InvalidAwareTypes.isInvalid(datum) || (!dataFormat && Number.isFinite(datum))) {\n                // Use the invalid map value or the raw value\n                const parsedDatum = InvalidAwareTypes.getInvalidType(datum) || datum;\n                data.push(parsedDatum);\n            } else {\n                data.push(DateTimeFormatter.formatAs(datum, dataFormat));\n            }\n        });\n        return data;\n    }\n}\n\n","import Dimension from '../dimension';\n\n/**\n * Represents binned field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Binned extends Dimension {\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the last and first values of bins config array.\n     */\n    calculateDataDomain () {\n        const binsArr = this.partialField.schema.bins;\n        return [binsArr[0], binsArr[binsArr.length - 1]];\n    }\n\n    /**\n     * Returns the bins config provided while creating the field instance.\n     *\n     * @public\n     * @return {Array} Returns the bins array config.\n     */\n    bins () {\n        return this.partialField.schema.bins;\n    }\n}\n","import { formatNumber } from '../../utils';\nimport { defaultReducerName } from '../../operator/group-by-function';\nimport Field from '../field';\n\n/**\n * Represents measure field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Measure extends Field {\n  /**\n   * Returns the domain for the measure field.\n   *\n   * @override\n   * @public\n   * @return {any} Returns the calculated domain.\n   */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n  /**\n   * Returns the unit of the measure field.\n   *\n   * @public\n   * @return {string} Returns unit of the field.\n   */\n    unit () {\n        return this.partialField.schema.unit;\n    }\n\n  /**\n   * Returns the aggregation function name of the measure field.\n   *\n   * @public\n   * @return {string} Returns aggregation function name of the field.\n   */\n    defAggFn () {\n        return this.partialField.schema.defAggFn || defaultReducerName;\n    }\n\n  /**\n   * Returns the number format of the measure field.\n   *\n   * @public\n   * @return {Function} Returns number format of the field.\n   */\n    numberFormat () {\n        const { numberFormat } = this.partialField.schema;\n        return numberFormat instanceof Function ? numberFormat : formatNumber;\n    }\n\n  /**\n   * Calculates the corresponding field domain.\n   *\n   * @public\n   * @abstract\n   */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { MeasureSubtype } from '../../enums';\nimport Measure from '../measure';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents continuous field subtype.\n *\n * @public\n * @class\n * @extends Measure\n */\nexport default class Continuous extends Measure {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return MeasureSubtype.CONTINUOUS;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the min and max values.\n     */\n    calculateDataDomain () {\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum instanceof InvalidAwareTypes) {\n                return;\n            }\n\n            if (datum < min) {\n                min = datum;\n            }\n            if (datum > max) {\n                max = datum;\n            }\n        });\n\n        return [min, max];\n    }\n}\n","/**\n * A interface to represent a parser which is responsible to parse the field.\n *\n * @public\n * @interface\n */\nexport default class FieldParser {\n    /**\n     * Parses a single value of a field and return the sanitized form.\n     *\n     * @public\n     * @abstract\n     */\n    parse () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the categorical values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class CategoricalParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the stringified form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the stringified value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            result = String(val).trim();\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import { DateTimeFormatter } from '../../../utils';\nimport FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the temporal values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class TemporalParser extends FieldParser {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {Object} schema - The schema object for the corresponding field.\n     */\n    constructor (schema) {\n        super();\n        this.schema = schema;\n        this._dtf = new DateTimeFormatter(this.schema.format);\n    }\n\n    /**\n     * Parses a single value of a field and returns the millisecond value.\n     *\n     * @public\n     * @param {string|number} val - The value of the field.\n     * @return {number} Returns the millisecond value.\n     */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let nativeDate = this._dtf.getNativeDate(val);\n            result = nativeDate ? nativeDate.getTime() : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the binned values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class BinnedParser extends FieldParser {\n  /**\n   * Parses a single binned value of a field and returns the sanitized value.\n   *\n   * @public\n   * @param {string} val - The value of the field.\n   * @return {string} Returns the sanitized value.\n   */\n    parse (val) {\n        const regex = /^\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*-\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*$/;\n        val = String(val);\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let matched = val.match(regex);\n            result = matched ? `${Number.parseFloat(matched[1])}-${Number.parseFloat(matched[2])}`\n                             : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the continuous values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class ContinuousParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the number form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the number value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let parsedVal = parseFloat(val, 10);\n            result = Number.isNaN(parsedVal) ? InvalidAwareTypes.NA : parsedVal;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","/**\n * Stores the full data and the metadata of a field. It provides\n * a single source of data from which the future Field\n * instance can get a subset of it with a rowDiffset config.\n *\n * @class\n * @public\n */\nexport default class PartialField {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} name - The name of the field.\n     * @param {Array} data - The data array.\n     * @param {Object} schema - The schema object of the corresponding field.\n     * @param {FieldParser} parser - The parser instance corresponding to that field.\n     */\n    constructor (name, data, schema, parser) {\n        this.name = name;\n        this.schema = schema;\n        this.parser = parser;\n        this.data = this._sanitize(data);\n    }\n\n    /**\n     * Sanitizes the field data.\n     *\n     * @private\n     * @param {Array} data - The actual input data.\n     * @return {Array} Returns the sanitized data.\n     */\n    _sanitize (data) {\n        return data.map(datum => this.parser.parse(datum));\n    }\n}\n","import { FieldType, DimensionSubtype, MeasureSubtype } from './enums';\nimport {\n    Categorical,\n    Temporal,\n    Binned,\n    Continuous,\n    CategoricalParser,\n    TemporalParser,\n    BinnedParser,\n    ContinuousParser,\n    PartialField\n} from './fields';\n\n/**\n * Creates a field instance according to the provided data and schema.\n *\n * @param {Array} data - The field data array.\n * @param {Object} schema - The field schema object.\n * @return {Field} Returns the newly created field instance.\n */\nfunction createUnitField(data, schema) {\n    data = data || [];\n    let partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.TEMPORAL:\n            partialField = new PartialField(schema.name, data, schema, new TemporalParser(schema));\n            return new Temporal(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.BINNED:\n            partialField = new PartialField(schema.name, data, schema, new BinnedParser());\n            return new Binned(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        }\n    default:\n        partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n        return new Categorical(partialField, `0-${data.length - 1}`);\n    }\n}\n\n\n/**\n * Creates a field instance from partialField and rowDiffset.\n *\n * @param {PartialField} partialField - The corresponding partial field.\n * @param {string} rowDiffset - The data subset config.\n * @return {Field} Returns the newly created field instance.\n */\nexport function createUnitFieldFromPartial(partialField, rowDiffset) {\n    const { schema } = partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            return new Continuous(partialField, rowDiffset);\n        default:\n            return new Continuous(partialField, rowDiffset);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            return new Categorical(partialField, rowDiffset);\n        case DimensionSubtype.TEMPORAL:\n            return new Temporal(partialField, rowDiffset);\n        case DimensionSubtype.BINNED:\n            return new Binned(partialField, rowDiffset);\n        default:\n            return new Categorical(partialField, rowDiffset);\n        }\n    default:\n        return new Categorical(partialField, rowDiffset);\n    }\n}\n\n/**\n * Creates the field instances with input data and schema.\n *\n * @param {Array} dataColumn - The data array for fields.\n * @param {Array} schema - The schema array for fields.\n * @param {Array} headers - The array of header names.\n * @return {Array.<Field>} Returns an array of newly created field instances.\n */\nexport function createFields(dataColumn, schema, headers) {\n    const headersObj = {};\n\n    if (!(headers && headers.length)) {\n        headers = schema.map(item => item.name);\n    }\n\n    headers.forEach((header, i) => {\n        headersObj[header] = i;\n    });\n\n    return schema.map(item => createUnitField(dataColumn[headersObj[item.name]], item));\n}\n","import { DataFormat } from './enums';\n\nexport default {\n    dataFormat: DataFormat.AUTO\n};\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in DSV array to a manageable internal format.\n *\n * @param {Array.<Array>} arr - A 2D array containing of the DSV data.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv data is header or not.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    [\"a\", \"b\", \"c\"],\n *    [1, 2, 3],\n *    [4, 5, 6],\n *    [7, 8, 9]\n * ];\n */\nfunction DSVArr(arr, schema, options) {\n    if (!Array.isArray(schema)) {\n        throw new Error('Schema missing or is in an unsupported format');\n    }\n    const defaultOption = {\n        firstRowHeader: true,\n    };\n    const schemaFields = schema.map(unitSchema => unitSchema.name);\n    options = Object.assign({}, defaultOption, options);\n\n    const columns = [];\n    const push = columnMajor(columns);\n\n    let headers = schemaFields;\n    if (options.firstRowHeader) {\n        // If header present then remove the first header row.\n        // Do in-place mutation to save space.\n        headers = arr.splice(0, 1)[0];\n    }\n    // create a map of the headers\n    const headerMap = headers.reduce((acc, h, i) => (\n        Object.assign(acc, { [h]: i })\n    ), {});\n\n    arr.forEach((fields) => {\n        const field = [];\n        schemaFields.forEach((schemaField) => {\n            const headIndex = headerMap[schemaField];\n            field.push(fields[headIndex]);\n        });\n        return push(...field);\n    });\n    return [schemaFields, columns];\n}\n\nexport default DSVArr;\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nfunction pad(value, width) {\n  var s = value + \"\", length = s.length;\n  return length < width ? new Array(width - length + 1).join(0) + s : s;\n}\n\nfunction formatYear(year) {\n  return year < 0 ? \"-\" + pad(-year, 6)\n    : year > 9999 ? \"+\" + pad(year, 6)\n    : pad(year, 4);\n}\n\nfunction formatDate(date) {\n  var hours = date.getUTCHours(),\n      minutes = date.getUTCMinutes(),\n      seconds = date.getUTCSeconds(),\n      milliseconds = date.getUTCMilliseconds();\n  return isNaN(date) ? \"Invalid Date\"\n      : formatYear(date.getUTCFullYear(), 4) + \"-\" + pad(date.getUTCMonth() + 1, 2) + \"-\" + pad(date.getUTCDate(), 2)\n      + (milliseconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \".\" + pad(milliseconds, 3) + \"Z\"\n      : seconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \"Z\"\n      : minutes || hours ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \"Z\"\n      : \"\");\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function preformatBody(rows, columns) {\n    return rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    });\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n  }\n\n  function formatBody(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return preformatBody(rows, columns).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(value) {\n    return value == null ? \"\"\n        : value instanceof Date ? formatDate(value)\n        : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : value;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatBody: formatBody,\n    formatRows: formatRows\n  };\n}\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatBody = csv.formatBody;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatBody = tsv.formatBody;\nexport var tsvFormatRows = tsv.formatRows;\n","import { dsvFormat as d3Dsv } from 'd3-dsv';\nimport DSVArr from './dsv-arr';\n\n/**\n * Parses and converts data formatted in DSV string to a manageable internal format.\n *\n * @todo Support to be given for https://tools.ietf.org/html/rfc4180.\n * @todo Sample implementation https://github.com/knrz/CSV.js/.\n *\n * @param {string} str - The input DSV string.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv string data is header or not.\n * @param {string} [options.fieldSeparator=\",\"] - The separator of two consecutive field.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = `\n * a,b,c\n * 1,2,3\n * 4,5,6\n * 7,8,9\n * `\n */\nfunction DSVStr (str, schema, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n        fieldSeparator: ','\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    const dsv = d3Dsv(options.fieldSeparator);\n    return DSVArr(dsv.parseRows(str), schema, options);\n}\n\nexport default DSVStr;\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in JSON to a manageable internal format.\n *\n * @param {Array.<Object>} arr - The input data formatted in JSON.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    {\n *      \"a\": 1,\n *      \"b\": 2,\n *      \"c\": 3\n *    },\n *    {\n *      \"a\": 4,\n *      \"b\": 5,\n *      \"c\": 6\n *    },\n *    {\n *      \"a\": 7,\n *      \"b\": 8,\n *      \"c\": 9\n *    }\n * ];\n */\nfunction FlatJSON (arr, schema) {\n    if (!Array.isArray(schema)) {\n        throw new Error('Schema missing or is in an unsupported format');\n    }\n\n    const header = {};\n    let i = 0;\n    let insertionIndex;\n    const columns = [];\n    const push = columnMajor(columns);\n    const schemaFieldsName = schema.map(unitSchema => unitSchema.name);\n\n    arr.forEach((item) => {\n        const fields = [];\n        schemaFieldsName.forEach((unitSchema) => {\n            if (unitSchema in header) {\n                insertionIndex = header[unitSchema];\n            } else {\n                header[unitSchema] = i++;\n                insertionIndex = i - 1;\n            }\n            fields[insertionIndex] = item[unitSchema];\n        });\n        push(...fields);\n    });\n\n    return [Object.keys(header), columns];\n}\n\nexport default FlatJSON;\n","import FlatJSON from './flat-json';\nimport DSVArr from './dsv-arr';\nimport DSVStr from './dsv-str';\nimport { detectDataFormat } from '../utils';\n\n/**\n * Parses the input data and detect the format automatically.\n *\n * @param {string|Array} data - The input data.\n * @param {Object} options - An optional config specific to data format.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n */\nfunction Auto (data, schema, options) {\n    const converters = { FlatJSON, DSVStr, DSVArr };\n    const dataFormat = detectDataFormat(data);\n\n    if (!dataFormat) {\n        throw new Error('Couldn\\'t detect the data format');\n    }\n\n    return converters[dataFormat](data, schema, options);\n}\n\nexport default Auto;\n","import { FieldType, FilteringMode, DimensionSubtype, MeasureSubtype, DataFormat } from './enums';\nimport fieldStore from './field-store';\nimport Value from './value';\nimport {\n    rowDiffsetIterator\n} from './operator';\nimport { DM_DERIVATIVES, LOGICAL_OPERATORS } from './constants';\nimport { createFields, createUnitFieldFromPartial } from './field-creator';\nimport defaultConfig from './default-config';\nimport * as converter from './converter';\nimport { extend2, detectDataFormat } from './utils';\n\n/**\n * Prepares the selection data.\n */\nfunction prepareSelectionData (fields, formattedData, rawData, i) {\n    const resp = {};\n\n    for (const [key, field] of fields.entries()) {\n        resp[field.name()] = new Value(formattedData[key][i], rawData[key][i], field);\n    }\n    return resp;\n}\n\nexport function prepareJoinData (fields) {\n    const resp = {};\n\n    for (const key in fields) {\n        resp[key] = new Value(fields[key].formattedValue, fields[key].rawValue, key);\n    }\n    return resp;\n}\n\nexport const updateFields = ([rowDiffset, colIdentifier], partialFieldspace, fieldStoreName) => {\n    let collID = colIdentifier.length ? colIdentifier.split(',') : [];\n    let partialFieldMap = partialFieldspace.fieldsObj();\n    let newFields = collID.map(coll => createUnitFieldFromPartial(partialFieldMap[coll].partialField, rowDiffset));\n    return fieldStore.createNamespace(newFields, fieldStoreName);\n};\n\nexport const persistCurrentDerivation = (model, operation, config = {}, criteriaFn) => {\n    if (operation === DM_DERIVATIVES.COMPOSE) {\n        model._derivation.length = 0;\n        model._derivation.push(...criteriaFn);\n    } else {\n        model._derivation.push({\n            op: operation,\n            meta: config,\n            criteria: criteriaFn\n        });\n    }\n};\nexport const persistAncestorDerivation = (sourceDm, newDm) => {\n    newDm._ancestorDerivation.push(...sourceDm._ancestorDerivation, ...sourceDm._derivation);\n};\n\nexport const persistDerivations = (sourceDm, model, operation, config = {}, criteriaFn) => {\n    persistCurrentDerivation(model, operation, config, criteriaFn);\n    persistAncestorDerivation(sourceDm, model);\n};\n\nconst selectModeMap = {\n    [FilteringMode.NORMAL]: {\n        diffIndex: ['rowDiffset'],\n        calcDiff: [true, false]\n    },\n    [FilteringMode.INVERSE]: {\n        diffIndex: ['rejectRowDiffset'],\n        calcDiff: [false, true]\n    },\n    [FilteringMode.ALL]: {\n        diffIndex: ['rowDiffset', 'rejectRowDiffset'],\n        calcDiff: [true, true]\n    }\n};\n\nconst generateRowDiffset = (rowDiffset, i, lastInsertedValue) => {\n    if (lastInsertedValue !== -1 && i === (lastInsertedValue + 1)) {\n        const li = rowDiffset.length - 1;\n\n        rowDiffset[li] = `${rowDiffset[li].split('-')[0]}-${i}`;\n    } else {\n        rowDiffset.push(`${i}`);\n    }\n};\n\nexport const selectRowDiffsetIterator = (rowDiffset, checker, mode) => {\n    let lastInsertedValueSel = -1;\n    let lastInsertedValueRej = -1;\n    const newRowDiffSet = [];\n    const rejRowDiffSet = [];\n\n    const [shouldSelect, shouldReject] = selectModeMap[mode].calcDiff;\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        const checkerResult = checker(i);\n        checkerResult && shouldSelect && generateRowDiffset(newRowDiffSet, i, lastInsertedValueSel);\n        !checkerResult && shouldReject && generateRowDiffset(rejRowDiffSet, i, lastInsertedValueRej);\n    });\n    return {\n        rowDiffset: newRowDiffSet.join(','),\n        rejectRowDiffset: rejRowDiffSet.join(',')\n    };\n};\n\n\nexport const rowSplitDiffsetIterator = (rowDiffset, checker, mode, dimensionArr, fieldStoreObj) => {\n    let lastInsertedValue = {};\n    const splitRowDiffset = {};\n    const dimensionMap = {};\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        if (checker(i)) {\n            let hash = '';\n\n            let dimensionSet = { keys: {} };\n\n            dimensionArr.forEach((_) => {\n                const data = fieldStoreObj[_].partialField.data[i];\n                hash = `${hash}-${data}`;\n                dimensionSet.keys[_] = data;\n            });\n\n            if (splitRowDiffset[hash] === undefined) {\n                splitRowDiffset[hash] = [];\n                lastInsertedValue[hash] = -1;\n                dimensionMap[hash] = dimensionSet;\n            }\n\n            generateRowDiffset(splitRowDiffset[hash], i, lastInsertedValue[hash]);\n            lastInsertedValue[hash] = i;\n        }\n    });\n\n    return {\n        splitRowDiffset,\n        dimensionMap\n    };\n};\n\n\nexport const selectHelper = (clonedDm, selectFn, config, sourceDm, iterator) => {\n    let cachedStore = {};\n    let cloneProvider = () => sourceDm.detachedRoot();\n    const { mode } = config;\n    const rowDiffset = clonedDm._rowDiffset;\n    const fields = clonedDm.getPartialFieldspace().fields;\n    const formattedFieldsData = fields.map(field => field.formattedData());\n    const rawFieldsData = fields.map(field => field.data());\n\n    const selectorHelperFn = index => selectFn(\n        prepareSelectionData(fields, formattedFieldsData, rawFieldsData, index),\n        index,\n        cloneProvider,\n        cachedStore\n    );\n\n    return iterator(rowDiffset, selectorHelperFn, mode);\n};\n\nexport const cloneWithAllFields = (model) => {\n    const clonedDm = model.clone(false);\n    const partialFieldspace = model.getPartialFieldspace();\n    clonedDm._colIdentifier = partialFieldspace.fields.map(f => f.name()).join(',');\n\n    // flush out cached namespace values on addition of new fields\n    partialFieldspace._cachedFieldsObj = null;\n    partialFieldspace._cachedDimension = null;\n    partialFieldspace._cachedMeasure = null;\n    clonedDm.__calculateFieldspace().calculateFieldsConfig();\n\n    return clonedDm;\n};\n\nconst getKey = (arr, data, fn) => {\n    let key = fn(arr, data, 0);\n\n    for (let i = 1, len = arr.length; i < len; i++) {\n        key = `${key},${fn(arr, data, i)}`;\n    }\n    return key;\n};\n\nexport const filterPropagationModel = (model, propModels, config = {}) => {\n    let fns = [];\n    const operation = config.operation || LOGICAL_OPERATORS.AND;\n    const filterByMeasure = config.filterByMeasure || false;\n    const clonedModel = cloneWithAllFields(model);\n    const modelFieldsConfig = clonedModel.getFieldsConfig();\n\n    if (!propModels.length) {\n        fns = [() => false];\n    } else {\n        fns = propModels.map(propModel => ((dataModel) => {\n            let keyFn;\n            const dataObj = dataModel.getData();\n            const fieldsConfig = dataModel.getFieldsConfig();\n            const dimensions = Object.keys(dataModel.getFieldspace().getDimension())\n                .filter(d => d in modelFieldsConfig);\n            const dLen = dimensions.length;\n            const indices = dimensions.map(d =>\n                fieldsConfig[d].index);\n            const measures = Object.keys(dataModel.getFieldspace().getMeasure())\n                .filter(d => d in modelFieldsConfig);\n            const fieldsSpace = dataModel.getFieldspace().fieldsObj();\n            const data = dataObj.data;\n            const domain = measures.reduce((acc, v) => {\n                acc[v] = fieldsSpace[v].domain();\n                return acc;\n            }, {});\n            const valuesMap = {};\n\n            keyFn = (arr, row, idx) => row[arr[idx]];\n            if (dLen) {\n                data.forEach((row) => {\n                    const key = getKey(indices, row, keyFn);\n                    valuesMap[key] = 1;\n                });\n            }\n\n            keyFn = (arr, fields, idx) => fields[arr[idx]].internalValue;\n            return data.length ? (fields) => {\n                const present = dLen ? valuesMap[getKey(dimensions, fields, keyFn)] : true;\n\n                if (filterByMeasure) {\n                    return measures.every(field => fields[field].internalValue >= domain[field][0] &&\n                        fields[field].internalValue <= domain[field][1]) && present;\n                }\n                return present;\n            } : () => false;\n        })(propModel));\n    }\n\n    let filteredModel;\n    if (operation === LOGICAL_OPERATORS.AND) {\n        filteredModel = clonedModel.select(fields => fns.every(fn => fn(fields)), {\n            saveChild: false\n        });\n    } else {\n        filteredModel = clonedModel.select(fields => fns.some(fn => fn(fields)), {\n            saveChild: false\n        });\n    }\n\n    return filteredModel;\n};\n\n\nexport const splitWithSelect = (sourceDm, dimensionArr, reducerFn = val => val, config) => {\n    const {\n        saveChild,\n    } = config;\n    const fieldStoreObj = sourceDm.getFieldspace().fieldsObj();\n\n    const {\n        splitRowDiffset,\n        dimensionMap\n    } = selectHelper(\n        sourceDm.clone(saveChild),\n        reducerFn,\n        config,\n        sourceDm,\n        (...params) => rowSplitDiffsetIterator(...params, dimensionArr, fieldStoreObj)\n        );\n\n    const clonedDMs = [];\n    Object.keys(splitRowDiffset).sort().forEach((e) => {\n        if (splitRowDiffset[e]) {\n            const cloned = sourceDm.clone(saveChild);\n            const derivation = dimensionMap[e];\n            cloned._rowDiffset = splitRowDiffset[e].join(',');\n            cloned.__calculateFieldspace().calculateFieldsConfig();\n\n            const derivationFormula = fields => dimensionArr.every(_ => fields[_].internalValue === derivation.keys[_]);\n            // Store reference to child model and selector function\n            if (saveChild) {\n                persistDerivations(sourceDm, cloned, DM_DERIVATIVES.SELECT, config, derivationFormula);\n            }\n            cloned._derivation[cloned._derivation.length - 1].meta = dimensionMap[e];\n\n            clonedDMs.push(cloned);\n        }\n    });\n\n\n    return clonedDMs;\n};\nexport const addDiffsetToClonedDm = (clonedDm, rowDiffset, sourceDm, selectConfig, selectFn) => {\n    clonedDm._rowDiffset = rowDiffset;\n    clonedDm.__calculateFieldspace().calculateFieldsConfig();\n    persistDerivations(\n        sourceDm,\n        clonedDm,\n        DM_DERIVATIVES.SELECT,\n         { config: selectConfig },\n          selectFn\n    );\n};\n\n\nexport const cloneWithSelect = (sourceDm, selectFn, selectConfig, cloneConfig) => {\n    let extraCloneDm = {};\n\n    let { mode } = selectConfig;\n\n    const cloned = sourceDm.clone(cloneConfig.saveChild);\n    const setOfRowDiffsets = selectHelper(\n        cloned,\n        selectFn,\n        selectConfig,\n        sourceDm,\n        selectRowDiffsetIterator\n    );\n    const diffIndex = selectModeMap[mode].diffIndex;\n\n    addDiffsetToClonedDm(cloned, setOfRowDiffsets[diffIndex[0]], sourceDm, selectConfig, selectFn);\n\n    if (diffIndex.length > 1) {\n        extraCloneDm = sourceDm.clone(cloneConfig.saveChild);\n        addDiffsetToClonedDm(extraCloneDm, setOfRowDiffsets[diffIndex[1]], sourceDm, selectConfig, selectFn);\n        return [cloned, extraCloneDm];\n    }\n\n    return cloned;\n};\n\nexport const cloneWithProject = (sourceDm, projField, config, allFields) => {\n    const cloned = sourceDm.clone(config.saveChild);\n    let projectionSet = projField;\n    if (config.mode === FilteringMode.INVERSE) {\n        projectionSet = allFields.filter(fieldName => projField.indexOf(fieldName) === -1);\n    }\n    // cloned._colIdentifier = sourceDm._colIdentifier.split(',')\n    //                         .filter(coll => projectionSet.indexOf(coll) !== -1).join();\n    cloned._colIdentifier = projectionSet.join(',');\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n\n    persistDerivations(\n        sourceDm,\n        cloned,\n        DM_DERIVATIVES.PROJECT,\n        { projField, config, actualProjField: projectionSet },\n        null\n    );\n\n    return cloned;\n};\n\n\nexport const splitWithProject = (sourceDm, projFieldSet, config, allFields) =>\n    projFieldSet.map(projFields =>\n        cloneWithProject(sourceDm, projFields, config, allFields));\n\nexport const sanitizeUnitSchema = (unitSchema) => {\n    // Do deep clone of the unit schema as the user might change it later.\n    unitSchema = extend2({}, unitSchema);\n    if (!unitSchema.type) {\n        unitSchema.type = FieldType.DIMENSION;\n    }\n\n    if (!unitSchema.subtype) {\n        switch (unitSchema.type) {\n        case FieldType.MEASURE:\n            unitSchema.subtype = MeasureSubtype.CONTINUOUS;\n            break;\n        default:\n        case FieldType.DIMENSION:\n            unitSchema.subtype = DimensionSubtype.CATEGORICAL;\n            break;\n        }\n    }\n\n    return unitSchema;\n};\n\nexport const validateUnitSchema = (unitSchema) => {\n    const supportedMeasureSubTypes = [MeasureSubtype.CONTINUOUS];\n    const supportedDimSubTypes = [\n        DimensionSubtype.CATEGORICAL,\n        DimensionSubtype.BINNED,\n        DimensionSubtype.TEMPORAL,\n        DimensionSubtype.GEO\n    ];\n    const { type, subtype, name } = unitSchema;\n\n    switch (type) {\n    case FieldType.DIMENSION:\n        if (supportedDimSubTypes.indexOf(subtype) === -1) {\n            throw new Error(`DataModel doesn't support dimension field subtype ${subtype} used for ${name} field`);\n        }\n        break;\n    case FieldType.MEASURE:\n        if (supportedMeasureSubTypes.indexOf(subtype) === -1) {\n            throw new Error(`DataModel doesn't support measure field subtype ${subtype} used for ${name} field`);\n        }\n        break;\n    default:\n        throw new Error(`DataModel doesn't support field type ${type} used for ${name} field`);\n    }\n};\n\nexport const sanitizeAndValidateSchema = schema => schema.map((unitSchema) => {\n    unitSchema = sanitizeUnitSchema(unitSchema);\n    validateUnitSchema(unitSchema);\n    return unitSchema;\n});\n\nexport const resolveFieldName = (schema, dataHeader) => {\n    schema.forEach((unitSchema) => {\n        const fieldNameAs = unitSchema.as;\n        if (!fieldNameAs) { return; }\n\n        const idx = dataHeader.indexOf(unitSchema.name);\n        dataHeader[idx] = fieldNameAs;\n        unitSchema.name = fieldNameAs;\n        delete unitSchema.as;\n    });\n};\n\nexport const updateData = (relation, data, schema, options) => {\n    schema = sanitizeAndValidateSchema(schema);\n    options = Object.assign(Object.assign({}, defaultConfig), options);\n    const converterFn = converter[options.dataFormat];\n\n    if (!(converterFn && typeof converterFn === 'function')) {\n        throw new Error(`No converter function found for ${options.dataFormat} format`);\n    }\n\n    const [header, formattedData] = converterFn(data, schema, options);\n    resolveFieldName(schema, header);\n    const fieldArr = createFields(formattedData, schema, header);\n\n    // This will create a new fieldStore with the fields\n    const nameSpace = fieldStore.createNamespace(fieldArr, options.name);\n    relation._partialFieldspace = nameSpace;\n\n    // If data is provided create the default colIdentifier and rowDiffset\n    relation._rowDiffset = formattedData.length && formattedData[0].length ? `0-${formattedData[0].length - 1}` : '';\n\n    // This stores the value objects which is passed to the filter method when selection operation is done.\n    const valueObjects = [];\n    const { fields } = nameSpace;\n    const rawFieldsData = fields.map(field => field.data());\n    const formattedFieldsData = fields.map(field => field.formattedData());\n    rowDiffsetIterator(relation._rowDiffset, (i) => {\n        valueObjects[i] = prepareSelectionData(fields, formattedFieldsData, rawFieldsData, i);\n    });\n    nameSpace._cachedValueObjects = valueObjects;\n\n    relation._colIdentifier = (schema.map(_ => _.name)).join();\n    relation._dataFormat = options.dataFormat === DataFormat.AUTO ? detectDataFormat(data) : options.dataFormat;\n    return relation;\n};\n\nexport const fieldInSchema = (schema, field) => {\n    let i = 0;\n\n    for (; i < schema.length; ++i) {\n        if (field === schema[i].name) {\n            return {\n                name: field,\n                type: schema[i].subtype || schema[i].type,\n                index: i,\n            };\n        }\n    }\n    return null;\n};\n\nexport const getDerivationArguments = (derivation) => {\n    let params = [];\n    let operation;\n    operation = derivation.op;\n    switch (operation) {\n    case DM_DERIVATIVES.SELECT:\n        params = [derivation.criteria];\n        break;\n    case DM_DERIVATIVES.PROJECT:\n        params = [derivation.meta.actualProjField];\n        break;\n    case DM_DERIVATIVES.SORT:\n        params = [derivation.criteria];\n        break;\n    case DM_DERIVATIVES.GROUPBY:\n        operation = 'groupBy';\n        params = [derivation.meta.groupByString.split(','), derivation.criteria];\n        break;\n    default:\n        operation = null;\n    }\n\n    return {\n        operation,\n        params\n    };\n};\n\nconst applyExistingOperationOnModel = (propModel, dataModel) => {\n    const derivations = dataModel.getDerivations();\n    let selectionModel = propModel;\n\n    derivations.forEach((derivation) => {\n        if (!derivation) {\n            return;\n        }\n\n        const { operation, params } = getDerivationArguments(derivation);\n        if (operation) {\n            selectionModel = selectionModel[operation](...params, {\n                saveChild: false\n            });\n        }\n    });\n\n    return selectionModel;\n};\n\nconst getFilteredModel = (propModel, path) => {\n    for (let i = 0, len = path.length; i < len; i++) {\n        const model = path[i];\n        propModel = applyExistingOperationOnModel(propModel, model);\n    }\n    return propModel;\n};\n\nconst propagateIdentifiers = (dataModel, propModel, config = {}, propModelInf = {}) => {\n    const nonTraversingModel = propModelInf.nonTraversingModel;\n    const excludeModels = propModelInf.excludeModels || [];\n\n    if (dataModel === nonTraversingModel) {\n        return;\n    }\n\n    const propagate = excludeModels.length ? excludeModels.indexOf(dataModel) === -1 : true;\n\n    propagate && dataModel.handlePropagation(propModel, config);\n\n    const children = dataModel._children;\n    children.forEach((child) => {\n        const selectionModel = applyExistingOperationOnModel(propModel, child);\n        propagateIdentifiers(child, selectionModel, config, propModelInf);\n    });\n};\n\nexport const getRootGroupByModel = (model) => {\n    while (model._parent && model._derivation.find(d => d.op !== DM_DERIVATIVES.GROUPBY)) {\n        model = model._parent;\n    }\n    return model;\n};\n\nexport const getRootDataModel = (model) => {\n    while (model._parent) {\n        model = model._parent;\n    }\n    return model;\n};\n\nexport const getPathToRootModel = (model, path = []) => {\n    while (model._parent) {\n        path.push(model);\n        model = model._parent;\n    }\n    return path;\n};\n\nexport const propagateToAllDataModels = (identifiers, rootModels, propagationInf, config) => {\n    let criteria;\n    let propModel;\n    const { propagationNameSpace, propagateToSource } = propagationInf;\n    const propagationSourceId = propagationInf.sourceId;\n    const propagateInterpolatedValues = config.propagateInterpolatedValues;\n    const filterFn = (entry) => {\n        const filter = config.filterFn || (() => true);\n        return filter(entry, config);\n    };\n\n    let criterias = [];\n\n    if (identifiers === null && config.persistent !== true) {\n        criterias = [{\n            criteria: []\n        }];\n        criteria = [];\n    } else {\n        let actionCriterias = Object.values(propagationNameSpace.mutableActions);\n        if (propagateToSource !== false) {\n            actionCriterias = actionCriterias.filter(d => d.config.sourceId !== propagationSourceId);\n        }\n\n        const filteredCriteria = actionCriterias.filter(filterFn).map(action => action.config.criteria);\n\n        const excludeModels = [];\n\n        if (propagateToSource !== false) {\n            const sourceActionCriterias = Object.values(propagationNameSpace.mutableActions);\n\n            sourceActionCriterias.forEach((actionInf) => {\n                const actionConf = actionInf.config;\n                if (actionConf.applyOnSource === false && actionConf.action === config.action &&\n                        actionConf.sourceId !== propagationSourceId) {\n                    excludeModels.push(actionInf.model);\n                    criteria = sourceActionCriterias.filter(d => d !== actionInf).map(d => d.config.criteria);\n                    criteria.length && criterias.push({\n                        criteria,\n                        models: actionInf.model,\n                        path: getPathToRootModel(actionInf.model)\n                    });\n                }\n            });\n        }\n\n\n        criteria = [].concat(...[...filteredCriteria, identifiers]).filter(d => d !== null);\n        criterias.push({\n            criteria,\n            excludeModels: [...excludeModels, ...config.excludeModels || []]\n        });\n    }\n\n    const rootModel = rootModels.model;\n\n    const propConfig = Object.assign({\n        sourceIdentifiers: identifiers,\n        propagationSourceId\n    }, config);\n\n    const rootGroupByModel = rootModels.groupByModel;\n    if (propagateInterpolatedValues && rootGroupByModel) {\n        propModel = filterPropagationModel(rootGroupByModel, criteria, {\n            filterByMeasure: propagateInterpolatedValues\n        });\n        propagateIdentifiers(rootGroupByModel, propModel, propConfig);\n    }\n\n    criterias.forEach((inf) => {\n        const propagationModel = filterPropagationModel(rootModel, inf.criteria);\n        const path = inf.path;\n\n        if (path) {\n            const filteredModel = getFilteredModel(propagationModel, path.reverse());\n            inf.models.handlePropagation(filteredModel, propConfig);\n        } else {\n            propagateIdentifiers(rootModel, propagationModel, propConfig, {\n                excludeModels: inf.excludeModels,\n                nonTraversingModel: propagateInterpolatedValues && rootGroupByModel\n            });\n        }\n    });\n};\n\nexport const propagateImmutableActions = (propagationNameSpace, rootModels, propagationInf) => {\n    const immutableActions = propagationNameSpace.immutableActions;\n\n    for (const action in immutableActions) {\n        const actionInf = immutableActions[action];\n        const actionConf = actionInf.config;\n        const propagationSourceId = propagationInf.config.sourceId;\n        const filterImmutableAction = propagationInf.propConfig.filterImmutableAction ?\n            propagationInf.propConfig.filterImmutableAction(actionConf, propagationInf.config) : true;\n        if (actionConf.sourceId !== propagationSourceId && filterImmutableAction) {\n            const criteriaModel = actionConf.criteria;\n            propagateToAllDataModels(criteriaModel, rootModels, {\n                propagationNameSpace,\n                propagateToSource: false,\n                sourceId: propagationSourceId\n            }, actionConf);\n        }\n    }\n};\n\nexport const addToPropNamespace = (propagationNameSpace, config = {}, model) => {\n    let sourceNamespace;\n    const isMutableAction = config.isMutableAction;\n    const criteria = config.criteria;\n    const key = `${config.action}-${config.sourceId}`;\n\n    if (isMutableAction) {\n        sourceNamespace = propagationNameSpace.mutableActions;\n    } else {\n        sourceNamespace = propagationNameSpace.immutableActions;\n    }\n\n    if (criteria === null) {\n        delete sourceNamespace[key];\n    } else {\n        sourceNamespace[key] = {\n            model,\n            config\n        };\n    }\n\n    return this;\n};\n\n\nexport const getNormalizedProFields = (projField, allFields, fieldConfig) => {\n    const normalizedProjField = projField.reduce((acc, field) => {\n        if (field.constructor.name === 'RegExp') {\n            acc.push(...allFields.filter(fieldName => fieldName.search(field) !== -1));\n        } else if (field in fieldConfig) {\n            acc.push(field);\n        }\n        return acc;\n    }, []);\n    return Array.from(new Set(normalizedProjField)).map(field => field.trim());\n};\n\n/**\n * Get the numberFormatted value if numberFormat present,\n * else returns the supplied value.\n * @param {Object} field Field Instance\n * @param {Number|String} value\n * @return {Number|String}\n */\nexport const getNumberFormattedVal = (field, value) => {\n    if (field.numberFormat) {\n        return field.numberFormat()(value);\n    }\n    return value;\n};\n","import { FilteringMode } from './enums';\nimport { getUniqueId } from './utils';\nimport {\n    updateFields,\n    cloneWithSelect,\n    cloneWithProject,\n    updateData,\n    getNormalizedProFields\n} from './helper';\nimport { crossProduct, difference, naturalJoinFilter, union } from './operator';\n\n/**\n * Relation provides the definitions of basic operators of relational algebra like *selection*, *projection*, *union*,\n * *difference* etc.\n *\n * It is extended by {@link DataModel} to inherit the functionalities of relational algebra concept.\n *\n * @class\n * @public\n * @module Relation\n * @namespace DataModel\n */\nclass Relation {\n\n    /**\n     * Creates a new Relation instance by providing underlying data and schema.\n     *\n     * @private\n     *\n     * @param {Object | string | Relation} data - The input tabular data in dsv or json format or\n     * an existing Relation instance object.\n     * @param {Array} schema - An array of data schema.\n     * @param {Object} [options] - The optional options.\n     */\n    constructor (...params) {\n        let source;\n\n        this._parent = null;\n        this._derivation = [];\n        this._ancestorDerivation = [];\n        this._children = [];\n\n        if (params.length === 1 && ((source = params[0]) instanceof Relation)) {\n            // parent datamodel was passed as part of source\n            this._colIdentifier = source._colIdentifier;\n            this._rowDiffset = source._rowDiffset;\n            this._dataFormat = source._dataFormat;\n            this._parent = source;\n            this._partialFieldspace = this._parent._partialFieldspace;\n            this._fieldStoreName = getUniqueId();\n            this.__calculateFieldspace().calculateFieldsConfig();\n        } else {\n            updateData(this, ...params);\n            this._fieldStoreName = this._partialFieldspace.name;\n            this.__calculateFieldspace().calculateFieldsConfig();\n            this._propagationNameSpace = {\n                mutableActions: {},\n                immutableActions: {}\n            };\n        }\n    }\n\n    /**\n     * Retrieves the {@link Schema | schema} details for every {@link Field | field} as an array.\n     *\n     * @public\n     *\n     * @return {Array.<Schema>} Array of fields schema.\n     *      ```\n     *      [\n     *          { name: 'Name', type: 'dimension' },\n     *          { name: 'Miles_per_Gallon', type: 'measure', numberFormat: (val) => `${val} miles / gallon` },\n     *          { name: 'Cylinder', type: 'dimension' },\n     *          { name: 'Displacement', type: 'measure', defAggFn: 'max' },\n     *          { name: 'HorsePower', type: 'measure', defAggFn: 'max' },\n     *          { name: 'Weight_in_lbs', type: 'measure', defAggFn: 'avg',  },\n     *          { name: 'Acceleration', type: 'measure', defAggFn: 'avg' },\n     *          { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *          { name: 'Origin' }\n     *      ]\n     *      ```\n     */\n    getSchema () {\n        return this.getFieldspace().fields.map(d => d.schema());\n    }\n\n    /**\n     * Returns the name of the {@link DataModel} instance. If no name was specified during {@link DataModel}\n     * initialization, then it returns a auto-generated name.\n     *\n     * @public\n     *\n     * @return {string} Name of the DataModel instance.\n     */\n    getName() {\n        return this._fieldStoreName;\n    }\n\n    getFieldspace () {\n        return this._fieldspace;\n    }\n\n    __calculateFieldspace () {\n        this._fieldspace = updateFields([this._rowDiffset, this._colIdentifier],\n             this.getPartialFieldspace(), this._fieldStoreName);\n        return this;\n    }\n\n    getPartialFieldspace () {\n        return this._partialFieldspace;\n    }\n\n    /**\n     * Performs {@link link_of_cross_product | cross-product} between two {@link DataModel} instances and returns a\n     * new {@link DataModel} instance containing the results. This operation is also called theta join.\n     *\n     * Cross product takes two set and create one set where each value of one set is paired with each value of another\n     * set.\n     *\n     * This method takes an optional predicate which filters the generated result rows. If the predicate returns true\n     * the combined row is included in the resulatant table.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.join(originDM)));\n     *\n     *  console.log(carsDM.join(originDM,\n     *      obj => obj.[originDM.getName()].Origin === obj.[carsDM.getName()].Origin));\n     *\n     * @text\n     * This is chained version of `join` operator. `join` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel to be joined with the current instance DataModel.\n     * @param {SelectionPredicate} filterFn - The predicate function that will filter the result of the crossProduct.\n     *\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    join (joinWith, filterFn) {\n        return crossProduct(this, joinWith, filterFn);\n    }\n\n    /**\n     * {@link natural_join | Natural join} is a special kind of cross-product join where filtering of rows are performed\n     * internally by resolving common fields are from both table and the rows with common value are included.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.naturalJoin(originDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel with which the current instance of DataModel on which the method is\n     *      called will be joined.\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    naturalJoin (joinWith) {\n        return crossProduct(this, joinWith, naturalJoinFilter(this, joinWith), true);\n    }\n\n    /**\n     * {@link link_to_union | Union} operation can be termed as vertical stacking of all rows from both the DataModel\n     * instances, provided that both of the {@link DataModel} instances should have same column names.\n     *\n     * @example\n     * console.log(EuropeanMakerDM.union(USAMakerDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} unionWith - DataModel instance for which union has to be applied with the instance on which\n     *      the method is called\n     *\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    union (unionWith) {\n        return union(this, unionWith);\n    }\n\n    /**\n     * {@link link_to_difference | Difference } operation only include rows which are present in the datamodel on which\n     * it was called but not on the one passed as argument.\n     *\n     * @example\n     * console.log(highPowerDM.difference(highExpensiveDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} differenceWith - DataModel instance for which difference has to be applied with the instance\n     *      on which the method is called\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    difference (differenceWith) {\n        return difference(this, differenceWith);\n    }\n\n    /**\n     * {@link link_to_selection | Selection} is a row filtering operation. It expects a predicate and an optional mode\n     * which control which all rows should be included in the resultant DataModel instance.\n     *\n     * {@link SelectionPredicate} is a function which returns a boolean value. For selection operation the selection\n     * function is called for each row of DataModel instance with the current row passed as argument.\n     *\n     * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n     * of rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resultant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  // with selection mode NORMAL:\n     *  const normDt = dt.select(fields => fields.Origin.value === \"USA\")\n     *  console.log(normDt));\n     *\n     * // with selection mode INVERSE:\n     * const inverDt = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.INVERSE })\n     * console.log(inverDt);\n     *\n     * // with selection mode ALL:\n     * const dtArr = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.ALL })\n     * // print the selected parts\n     * console.log(dtArr[0]);\n     * // print the inverted parts\n     * console.log(dtArr[1]);\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Function} selectFn - The predicate function which is called for each row with the current row.\n     * ```\n     *  function (row, i, cloneProvider, store)  { ... }\n     * ```\n     * @param {Object} config - The configuration object to control the inclusion exclusion of a row in resultant\n     * DataModel instance.\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection.\n     * @return {DataModel} Returns the new DataModel instance(s) after operation.\n     */\n    select (selectFn, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n        config.mode = config.mode || defConfig.mode;\n\n        const cloneConfig = { saveChild: config.saveChild };\n        return cloneWithSelect(\n            this,\n            selectFn,\n            config,\n            cloneConfig\n        );\n    }\n\n    /**\n     * Retrieves a boolean value if the current {@link DataModel} instance has data.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'CarName', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     * const data = [];\n     *\n     * const dt = new DataModel(data, schema);\n     * console.log(dt.isEmpty());\n     *\n     * @public\n     *\n     * @return {Boolean} True if the datamodel has no data, otherwise false.\n     */\n    isEmpty () {\n        return !this._rowDiffset.length || !this._colIdentifier.length;\n    }\n\n    /**\n     * Creates a clone from the current DataModel instance with child parent relationship.\n     *\n     * @private\n     * @param {boolean} [saveChild=true] - Whether the cloned instance would be recorded in the parent instance.\n     * @return {DataModel} - Returns the newly cloned DataModel instance.\n     */\n    clone (saveChild = true) {\n        const clonedDm = new this.constructor(this);\n        if (saveChild) {\n            clonedDm.setParent(this);\n        } else {\n            clonedDm.setParent(null);\n        }\n        return clonedDm;\n    }\n\n    /**\n     * {@link Projection} is filter column (field) operation. It expects list of fields' name and either include those\n     * or exclude those based on {@link FilteringMode} on the resultant variable.\n     *\n     * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n     * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resulatant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *\n     *  // with projection mode NORMAL:\n     *  const normDt = dt.project([\"Name\", \"HorsePower\"]);\n     *  console.log(normDt.getData());\n     *\n     *  // with projection mode INVERSE:\n     *  const inverDt = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.INVERSE })\n     *  console.log(inverDt.getData());\n     *\n     *  // with selection mode ALL:\n     *  const dtArr = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.ALL })\n     *  // print the normal parts\n     *  console.log(dtArr[0].getData());\n     *  // print the inverted parts\n     *  console.log(dtArr[1].getData());\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n     * @param {Object} [config] - An optional config to control the creation of new DataModel\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n     *\n     * @return {DataModel} Returns the new DataModel instance after operation.\n     */\n    project (projField, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n        const fieldConfig = this.getFieldsConfig();\n        const allFields = Object.keys(fieldConfig);\n        const { mode } = config;\n        const normalizedProjField = getNormalizedProFields(projField, allFields, fieldConfig);\n\n        let dataModel;\n\n        if (mode === FilteringMode.ALL) {\n            let projectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.NORMAL,\n                saveChild: config.saveChild\n            }, allFields);\n            let rejectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.INVERSE,\n                saveChild: config.saveChild\n            }, allFields);\n            dataModel = [projectionClone, rejectionClone];\n        } else {\n            let projectionClone = cloneWithProject(this, normalizedProjField, config, allFields);\n            dataModel = projectionClone;\n        }\n\n        return dataModel;\n    }\n\n    getFieldsConfig () {\n        return this._fieldConfig;\n    }\n\n    calculateFieldsConfig () {\n        this._fieldConfig = this._fieldspace.fields.reduce((acc, fieldObj, i) => {\n            acc[fieldObj.name()] = {\n                index: i,\n                def: fieldObj.schema(),\n            };\n            return acc;\n        }, {});\n        return this;\n    }\n\n\n    /**\n     * Frees up the resources associated with the current DataModel instance and breaks all the links instance has in\n     * the DAG.\n     *\n     * @public\n     */\n    dispose () {\n        this._parent && this._parent.removeChild(this);\n        this._parent = null;\n        this._children.forEach((child) => {\n            child._parent = null;\n        });\n        this._children = [];\n    }\n\n    /**\n     * Removes the specified child {@link DataModel} from the child list of the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\")\n     * dt.removeChild(dt2);\n     *\n     * @private\n     *\n     * @param {DataModel} child - Delegates the parent to remove this child.\n     */\n    removeChild (child) {\n        let idx = this._children.findIndex(sibling => sibling === child);\n        idx !== -1 ? this._children.splice(idx, 1) : true;\n    }\n\n    /**\n     * Sets the specified {@link DataModel} as a parent for the current {@link DataModel} instance.\n     *\n     * @param {DataModel} parent - The datamodel instance which will act as parent.\n     */\n    setParent (parent) {\n        this._parent && this._parent.removeChild(this);\n        this._parent = parent;\n        parent && parent._children.push(this);\n    }\n\n    /**\n     * Returns the parent {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const parentDm = dt2.getParent();\n     *\n     * @return {DataModel} Returns the parent DataModel instance.\n     */\n    getParent () {\n        return this._parent;\n    }\n\n    /**\n     * Returns the immediate child {@link DataModel} instances.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const childDm1 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const childDm2 = dt.select(fields => fields.Origin.value === \"Japan\");\n     * const childDm3 = dt.groupBy([\"Origin\"]);\n     *\n     * @return {DataModel[]} Returns the immediate child DataModel instances.\n     */\n    getChildren () {\n        return this._children;\n    }\n\n    /**\n     * Returns the in-between operation meta data while creating the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const derivations = dt3.getDerivations();\n     *\n     * @return {Any[]} Returns the derivation meta data.\n     */\n    getDerivations () {\n        return this._derivation;\n    }\n\n    /**\n     * Returns the in-between operation meta data happened from root {@link DataModel} to current instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const ancDerivations = dt3.getAncestorDerivations();\n     *\n     * @return {Any[]} Returns the previous derivation meta data.\n     */\n    getAncestorDerivations () {\n        return this._ancestorDerivation;\n    }\n}\n\nexport default Relation;\n","/* eslint-disable default-case */\n\nimport { FieldType, DimensionSubtype, DataFormat, FilteringMode } from './enums';\nimport {\n    persistDerivations,\n    getRootGroupByModel,\n    propagateToAllDataModels,\n    getRootDataModel,\n    propagateImmutableActions,\n    addToPropNamespace,\n    sanitizeUnitSchema,\n    splitWithSelect,\n    splitWithProject,\n    getNormalizedProFields\n} from './helper';\nimport { DM_DERIVATIVES, PROPAGATION } from './constants';\nimport {\n    dataBuilder,\n    rowDiffsetIterator,\n    groupBy\n} from './operator';\nimport { createBinnedFieldData } from './operator/bucket-creator';\nimport Relation from './relation';\nimport reducerStore from './utils/reducer-store';\nimport { createFields } from './field-creator';\nimport InvalidAwareTypes from './invalid-aware-types';\nimport Value from './value';\n\n/**\n * DataModel is an in-browser representation of tabular data. It supports\n * {@link https://en.wikipedia.org/wiki/Relational_algebra | relational algebra} operators as well as generic data\n * processing opearators.\n * DataModel extends {@link Relation} class which defines all the relational algebra opreators. DataModel gives\n * definition of generic data processing operators which are not relational algebra complient.\n *\n * @public\n * @class\n * @extends Relation\n * @memberof Datamodel\n */\nclass DataModel extends Relation {\n    /**\n     * Creates a new DataModel instance by providing data and schema. Data could be in the form of\n     * - Flat JSON\n     * - DSV String\n     * - 2D Array\n     *\n     * By default DataModel finds suitable adapter to serialize the data. DataModel also expects a\n     * {@link Schema | schema} for identifying the variables present in data.\n     *\n     * @constructor\n     * @example\n     * const data = loadData('cars.csv');\n     * const schema = [\n     *      { name: 'Name', type: 'dimension' },\n     *      { name: 'Miles_per_Gallon', type: 'measure', unit : 'cm', scale: '1000', numberformat: val => `${val}G`},\n     *      { name: 'Cylinders', type: 'dimension' },\n     *      { name: 'Displacement', type: 'measure' },\n     *      { name: 'Horsepower', type: 'measure' },\n     *      { name: 'Weight_in_lbs', type: 'measure' },\n     *      { name: 'Acceleration', type: 'measure' },\n     *      { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *      { name: 'Origin', type: 'dimension' }\n     * ];\n     * const dm = new DataModel(data, schema, { name: 'Cars' });\n     * table(dm);\n     *\n     * @public\n     *\n     * @param {Array.<Object> | string | Array.<Array>} data Input data in any of the mentioned formats\n     * @param {Array.<Schema>} schema Defination of the variables. Order of the variables in data and order of the\n     *      variables in schema has to be same.\n     * @param {object} [options] Optional arguments to specify more settings regarding the creation part\n     * @param {string} [options.name] Name of the datamodel instance. If no name is given an auto generated name is\n     *      assigned to the instance.\n     * @param {string} [options.fieldSeparator=','] specify field separator type if the data is of type dsv string.\n     */\n    constructor (...args) {\n        super(...args);\n\n        this._onPropagation = [];\n    }\n\n    /**\n     * Reducers are simple functions which reduces an array of numbers to a representative number of the set.\n     * Like an array of numbers `[10, 20, 5, 15]` can be reduced to `12.5` if average / mean reducer function is\n     * applied. All the measure fields in datamodel (variables in data) needs a reducer to handle aggregation.\n     *\n     * @public\n     *\n     * @return {ReducerStore} Singleton instance of {@link ReducerStore}.\n     */\n    static get Reducers () {\n        return reducerStore;\n    }\n\n    /**\n     * Configure null, undefined, invalid values in the source data\n     *\n     * @public\n     *\n     * @param {Object} [config] - Configuration to control how null, undefined and non-parsable values are\n     * represented in DataModel.\n     * @param {string} [config.undefined] - Define how an undefined value will be represented.\n     * @param {string} [config.null] - Define how a null value will be represented.\n     * @param {string} [config.invalid] - Define how a non-parsable value will be represented.\n     */\n    static configureInvalidAwareTypes (config) {\n        return InvalidAwareTypes.invalidAwareVals(config);\n    }\n\n    /**\n     * Retrieve the data attached to an instance in JSON format.\n     *\n     * @example\n     * // DataModel instance is already prepared and assigned to dm variable\n     *  const data = dm.getData({\n     *      order: 'column',\n     *      formatter: {\n     *          origin: (val) => val === 'European Union' ? 'EU' : val;\n     *      }\n     *  });\n     *  console.log(data);\n     *\n     * @public\n     *\n     * @param {Object} [options] Options to control how the raw data is to be returned.\n     * @param {string} [options.order='row'] Defines if data is retieved in row order or column order. Possible values\n     *      are `'rows'` and `'columns'`\n     * @param {Function} [options.formatter=null] Formats the output data. This expects an object, where the keys are\n     *      the name of the variable needs to be formatted. The formatter function is called for each row passing the\n     *      value of the cell for a particular row as arguments. The formatter is a function in the form of\n     *      `function (value, rowId, schema) => { ... }`\n     *      Know more about {@link Fomatter}.\n     *\n     * @return {Array} Returns a multidimensional array of the data with schema. The return format looks like\n     *      ```\n     *          {\n     *              data,\n     *              schema\n     *          }\n     *      ```\n     */\n    getData (options) {\n        const defOptions = {\n            order: 'row',\n            formatter: null,\n            withUid: false,\n            getAllFields: false,\n            sort: []\n        };\n        options = Object.assign({}, defOptions, options);\n        const fields = this.getPartialFieldspace().fields;\n\n        const dataGenerated = dataBuilder.call(\n            this,\n            this.getPartialFieldspace().fields,\n            this._rowDiffset,\n            options.getAllFields ? fields.map(d => d.name()).join() : this._colIdentifier,\n            options.sort,\n            {\n                columnWise: options.order === 'column',\n                addUid: !!options.withUid\n            }\n        );\n\n        if (!options.formatter) {\n            return dataGenerated;\n        }\n\n        const { formatter } = options;\n        const { data, schema, uids } = dataGenerated;\n        const fieldNames = schema.map((e => e.name));\n        const fmtFieldNames = Object.keys(formatter);\n        const fmtFieldIdx = fmtFieldNames.reduce((acc, next) => {\n            const idx = fieldNames.indexOf(next);\n            if (idx !== -1) {\n                acc.push([idx, formatter[next]]);\n            }\n            return acc;\n        }, []);\n\n        if (options.order === 'column') {\n            fmtFieldIdx.forEach((elem) => {\n                const fIdx = elem[0];\n                const fmtFn = elem[1];\n\n                data[fIdx].forEach((datum, datumIdx) => {\n                    data[fIdx][datumIdx] = fmtFn.call(\n                        undefined,\n                        datum,\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        } else {\n            data.forEach((datum, datumIdx) => {\n                fmtFieldIdx.forEach((elem) => {\n                    const fIdx = elem[0];\n                    const fmtFn = elem[1];\n\n                    datum[fIdx] = fmtFn.call(\n                        undefined,\n                        datum[fIdx],\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        }\n\n        return dataGenerated;\n    }\n\n    /**\n     * Returns the unique ids in an array.\n     *\n     * @return {Array} Returns an array of ids.\n     */\n    getUids () {\n        const rowDiffset = this._rowDiffset;\n        const ids = [];\n\n        if (rowDiffset.length) {\n            const diffSets = rowDiffset.split(',');\n\n            diffSets.forEach((set) => {\n                let [start, end] = set.split('-').map(Number);\n\n                end = end !== undefined ? end : start;\n                ids.push(...Array(end - start + 1).fill().map((_, idx) => start + idx));\n            });\n        }\n\n        return ids;\n    }\n    /**\n     * Groups the data using particular dimensions and by reducing measures. It expects a list of dimensions using which\n     * it projects the datamodel and perform aggregations to reduce the duplicate tuples. Refer this\n     * {@link link_to_one_example_with_group_by | document} to know the intuition behind groupBy.\n     *\n     * DataModel by default provides definition of few {@link reducer | Reducers}.\n     * {@link ReducerStore | User defined reducers} can also be registered.\n     *\n     * This is the chained implementation of `groupBy`.\n     * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n     *\n     * @example\n     * const groupedDM = dm.groupBy(['Year'], { horsepower: 'max' } );\n     * console.log(groupedDm);\n     *\n     * @public\n     *\n     * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n     * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n     *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n     *      schema of the variable.\n     *\n     * @return {DataModel} Returns a new DataModel instance after performing the groupby.\n     */\n    groupBy (fieldsArr, reducers = {}, config = { saveChild: true }) {\n        const groupByString = `${fieldsArr.join()}`;\n        let params = [this, fieldsArr, reducers];\n        const newDataModel = groupBy(...params);\n\n        persistDerivations(\n            this,\n            newDataModel,\n            DM_DERIVATIVES.GROUPBY,\n            { fieldsArr, groupByString, defaultReducer: reducerStore.defaultReducer() },\n            reducers\n        );\n\n        if (config.saveChild) {\n            newDataModel.setParent(this);\n        } else {\n            newDataModel.setParent(null);\n        }\n\n        return newDataModel;\n    }\n\n    /**\n     * Performs sorting operation on the current {@link DataModel} instance according to the specified sorting details.\n     * Like every other operator it doesn't mutate the current DataModel instance on which it was called, instead\n     * returns a new DataModel instance containing the sorted data.\n     *\n     * DataModel support multi level sorting by listing the variables using which sorting needs to be performed and\n     * the type of sorting `ASC` or `DESC`.\n     *\n     * In the following example, data is sorted by `Origin` field in `DESC` order in first level followed by another\n     * level of sorting by `Acceleration` in `ASC` order.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * let sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\"] // Default value is ASC\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * // Sort with a custom sorting function\n     * sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\", (a, b) => a - b] // Custom sorting function\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @text\n     * DataModel also provides another sorting mechanism out of the box where sort is applied to a variable using\n     * another variable which determines the order.\n     * Like the above DataModel contains three fields `Origin`, `Name` and `Acceleration`. Now, the data in this\n     * model can be sorted by `Origin` field according to the average value of all `Acceleration` for a\n     * particular `Origin` value.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * const sortedDm = dm.sort([\n     *     ['Origin', ['Acceleration', (a, b) => avg(...a.Acceleration) - avg(...b.Acceleration)]]\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @public\n     *\n     * @param {Array.<Array>} sortingDetails - Sorting details based on which the sorting will be performed.\n     * @return {DataModel} Returns a new instance of DataModel with sorted data.\n     */\n    sort (sortingDetails, config = { saveChild: false }) {\n        const rawData = this.getData({\n            order: 'row',\n            sort: sortingDetails\n        });\n        const header = rawData.schema.map(field => field.name);\n        const dataInCSVArr = [header].concat(rawData.data);\n\n        const sortedDm = new this.constructor(dataInCSVArr, rawData.schema, { dataFormat: 'DSVArr' });\n\n        persistDerivations(\n            this,\n            sortedDm,\n            DM_DERIVATIVES.SORT,\n            config,\n            sortingDetails\n        );\n\n        if (config.saveChild) {\n            sortedDm.setParent(this);\n        } else {\n            sortedDm.setParent(null);\n        }\n\n        return sortedDm;\n    }\n\n    /**\n     * Performs the serialization operation on the current {@link DataModel} instance according to the specified data\n     * type. When an {@link DataModel} instance is created, it de-serializes the input data into its internal format,\n     * and during its serialization process, it converts its internal data format to the specified data type and returns\n     * that data regardless what type of data is used during the {@link DataModel} initialization.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance.\n     * const csvData = dm.serialize(DataModel.DataFormat.DSV_STR, { fieldSeparator: \",\" });\n     * console.log(csvData); // The csv formatted data.\n     *\n     * const jsonData = dm.serialize(DataModel.DataFormat.FLAT_JSON);\n     * console.log(jsonData); // The json data.\n     *\n     * @public\n     *\n     * @param {string} type - The data type name for serialization.\n     * @param {Object} options - The optional option object.\n     * @param {string} options.fieldSeparator - The field separator character for DSV data type.\n     * @return {Array|string} Returns the serialized data.\n     */\n    serialize (type, options) {\n        type = type || this._dataFormat;\n        options = Object.assign({}, { fieldSeparator: ',' }, options);\n\n        const fields = this.getFieldspace().fields;\n        const colData = fields.map(f => f.formattedData());\n        const rowsCount = colData[0].length;\n        let serializedData;\n        let rowIdx;\n        let colIdx;\n\n        if (type === DataFormat.FLAT_JSON) {\n            serializedData = [];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = {};\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row[fields[colIdx].name()] = colData[colIdx][rowIdx];\n                }\n                serializedData.push(row);\n            }\n        } else if (type === DataFormat.DSV_STR) {\n            serializedData = [fields.map(f => f.name()).join(options.fieldSeparator)];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row.join(options.fieldSeparator));\n            }\n            serializedData = serializedData.join('\\n');\n        } else if (type === DataFormat.DSV_ARR) {\n            serializedData = [fields.map(f => f.name())];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row);\n            }\n        } else {\n            throw new Error(`Data type ${type} is not supported`);\n        }\n\n        return serializedData;\n    }\n\n    addField (field) {\n        const fieldName = field.name();\n        this._colIdentifier += `,${fieldName}`;\n        const partialFieldspace = this._partialFieldspace;\n        const cachedValueObjects = partialFieldspace._cachedValueObjects;\n        const formattedData = field.formattedData();\n        const rawData = field.partialField.data;\n\n        if (!partialFieldspace.fieldsObj()[field.name()]) {\n            partialFieldspace.fields.push(field);\n            cachedValueObjects.forEach((obj, i) => {\n                obj[field.name()] = new Value(formattedData[i], rawData[i], field);\n            });\n        } else {\n            const fieldIndex = partialFieldspace.fields.findIndex(fieldinst => fieldinst.name() === fieldName);\n            fieldIndex >= 0 && (partialFieldspace.fields[fieldIndex] = field);\n        }\n\n        // flush out cached namespace values on addition of new fields\n        partialFieldspace._cachedFieldsObj = null;\n        partialFieldspace._cachedDimension = null;\n        partialFieldspace._cachedMeasure = null;\n\n        this.__calculateFieldspace().calculateFieldsConfig();\n        return this;\n    }\n\n    /**\n    * Creates a new variable calculated from existing variables. This method expects the definition of the newly created\n    * variable and a function which resolves the value of the new variable from existing variables.\n    *\n    * Can create a new measure based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const newDm = dataModel.calculateVariable({\n    *      name: 'powerToWeight',\n    *      type: 'measure'\n    *  }, ['horsepower', 'weight_in_lbs', (hp, weight) => hp / weight ]);\n    *\n    *\n    * Can create a new dimension based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const child = dataModel.calculateVariable(\n    *     {\n    *       name: 'Efficiency',\n    *       type: 'dimension'\n    *     }, ['horsepower', (hp) => {\n    *      if (hp < 80) { return 'low'; },\n    *      else if (hp < 120) { return 'moderate'; }\n    *      else { return 'high' }\n    *  }]);\n    *\n    * @public\n    *\n    * @param {Object} schema - The schema of newly defined variable.\n    * @param {Array.<string|function>} dependency - An array containing the dependency variable names and a resolver\n    * function as the last element.\n    * @param {Object} config - An optional config object.\n    * @param {boolean} [config.saveChild] - Whether the newly created DataModel will be a child.\n    * @param {boolean} [config.replaceVar] - Whether the newly created variable will replace the existing variable.\n    * @return {DataModel} Returns an instance of DataModel with the new field.\n    */\n    calculateVariable (schema, dependency, config) {\n        schema = sanitizeUnitSchema(schema);\n        config = Object.assign({}, { saveChild: true, replaceVar: false }, config);\n\n        const fieldsConfig = this.getFieldsConfig();\n        const depVars = dependency.slice(0, dependency.length - 1);\n        const retrieveFn = dependency[dependency.length - 1];\n\n        if (fieldsConfig[schema.name] && !config.replaceVar) {\n            throw new Error(`${schema.name} field already exists in datamodel`);\n        }\n\n        const depFieldIndices = depVars.map((field) => {\n            const fieldSpec = fieldsConfig[field];\n            if (!fieldSpec) {\n                // @todo dont throw error here, use warning in production mode\n                throw new Error(`${field} is not a valid column name.`);\n            }\n            return fieldSpec.index;\n        });\n\n        const clone = this.clone(config.saveChild);\n\n        const fs = clone.getFieldspace().fields;\n        const suppliedFields = depFieldIndices.map(idx => fs[idx]);\n\n        let cachedStore = {};\n        let cloneProvider = () => this.detachedRoot();\n\n        const computedValues = [];\n        rowDiffsetIterator(clone._rowDiffset, (i) => {\n            const fieldsData = suppliedFields.map(field => field.partialField.data[i]);\n            computedValues[i] = retrieveFn(...fieldsData, i, cloneProvider, cachedStore);\n        });\n        const [field] = createFields([computedValues], [schema], [schema.name]);\n        clone.addField(field);\n\n        persistDerivations(\n            this,\n            clone,\n            DM_DERIVATIVES.CAL_VAR,\n            { config: schema, fields: depVars },\n            retrieveFn\n        );\n\n        return clone;\n    }\n\n    /**\n     * Propagates changes across all the connected DataModel instances.\n     *\n     * @param {Array} identifiers - A list of identifiers that were interacted with.\n     * @param {Object} payload - The interaction specific details.\n     *\n     * @return {DataModel} DataModel instance.\n     */\n    propagate (identifiers, config = {}, addToNameSpace, propConfig = {}) {\n        const isMutableAction = config.isMutableAction;\n        const propagationSourceId = config.sourceId;\n        const payload = config.payload;\n        const rootModel = getRootDataModel(this);\n        const propagationNameSpace = rootModel._propagationNameSpace;\n        const rootGroupByModel = getRootGroupByModel(this);\n        const rootModels = {\n            groupByModel: rootGroupByModel,\n            model: rootModel\n        };\n\n        addToNameSpace && addToPropNamespace(propagationNameSpace, config, this);\n        propagateToAllDataModels(identifiers, rootModels, { propagationNameSpace, sourceId: propagationSourceId },\n            Object.assign({\n                payload\n            }, config));\n\n        if (isMutableAction) {\n            propagateImmutableActions(propagationNameSpace, rootModels, {\n                config,\n                propConfig\n            }, this);\n        }\n\n        return this;\n    }\n\n    /**\n     * Associates a callback with an event name.\n     *\n     * @param {string} eventName - The name of the event.\n     * @param {Function} callback - The callback to invoke.\n     * @return {DataModel} Returns this current DataModel instance itself.\n     */\n    on (eventName, callback) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation.push(callback);\n            break;\n        }\n        return this;\n    }\n\n    /**\n     * Unsubscribes the callbacks for the provided event name.\n     *\n     * @param {string} eventName - The name of the event to unsubscribe.\n     * @return {DataModel} Returns the current DataModel instance itself.\n     */\n    unsubscribe (eventName) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation = [];\n            break;\n\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to invoke the method associated with propagation.\n     *\n     * @param {Object} payload The interaction payload.\n     * @param {DataModel} identifiers The propagated DataModel.\n     * @memberof DataModel\n     */\n    handlePropagation (propModel, payload) {\n        let propListeners = this._onPropagation;\n        propListeners.forEach(fn => fn.call(this, propModel, payload));\n    }\n\n    /**\n     * Performs the binning operation on a measure field based on the binning configuration. Binning means discretizing\n     * values of a measure. Binning configuration contains an array; subsequent values from the array marks the boundary\n     * of buckets in [inclusive, exclusive) range format. This operation does not mutate the subject measure field,\n     * instead, it creates a new field (variable) of type dimension and subtype binned.\n     *\n     * Binning can be configured by\n     * - providing custom bin configuration with non-uniform buckets,\n     * - providing bins count,\n     * - providing each bin size,\n     *\n     * When custom `buckets` are provided as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', buckets: [30, 80, 100, 110] }\n     *  const binnedDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binsCount` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', binsCount: 5, start: 0, end: 100 }\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binSize` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHorsepower', binSize: 20, start: 5}\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @public\n     *\n     * @param {string} measureFieldName - The name of the target measure field.\n     * @param {Object} config - The config object.\n     * @param {string} [config.name] - The name of the new field which will be created.\n     * @param {string} [config.buckets] - An array containing the bucket ranges.\n     * @param {string} [config.binSize] - The size of each bin. It is ignored when buckets are given.\n     * @param {string} [config.binsCount] - The total number of bins to generate. It is ignored when buckets are given.\n     * @param {string} [config.start] - The start value of the bucket ranges. It is ignored when buckets are given.\n     * @param {string} [config.end] - The end value of the bucket ranges. It is ignored when buckets are given.\n     * @return {DataModel} Returns a new {@link DataModel} instance with the new field.\n     */\n    bin (measureFieldName, config) {\n        const fieldsConfig = this.getFieldsConfig();\n\n        if (!fieldsConfig[measureFieldName]) {\n            throw new Error(`Field ${measureFieldName} doesn't exist`);\n        }\n\n        const binFieldName = config.name || `${measureFieldName}_binned`;\n\n        if (fieldsConfig[binFieldName]) {\n            throw new Error(`Field ${binFieldName} already exists`);\n        }\n\n        const measureField = this.getFieldspace().fieldsObj()[measureFieldName];\n        const { binnedData, bins } = createBinnedFieldData(measureField, this._rowDiffset, config);\n\n        const binField = createFields([binnedData], [\n            {\n                name: binFieldName,\n                type: FieldType.DIMENSION,\n                subtype: DimensionSubtype.BINNED,\n                bins\n            }], [binFieldName])[0];\n\n        const clone = this.clone(config.saveChild);\n        clone.addField(binField);\n\n        persistDerivations(\n            this,\n            clone,\n            DM_DERIVATIVES.BIN,\n             { measureFieldName, config, binFieldName },\n             null\n        );\n\n        return clone;\n    }\n\n    /**\n     * Creates a new {@link DataModel} instance with completely detached root from current {@link DataModel} instance,\n     * the new {@link DataModel} instance has no parent-children relationship with the current one, but has same data as\n     * the current one.\n     * This API is useful when a completely different {@link DataModel} but with same data as the current instance is\n     * needed.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *  const detachedDm = dm.detachedRoot();\n     *\n     * // has different namespace\n     * console.log(dm.getPartialFieldspace().name);\n     * console.log(detachedDm.getPartialFieldspace().name);\n     *\n     * // has same data\n     * console.log(dm.getData());\n     * console.log(detachedDm.getData());\n     *\n     * @public\n     *\n     * @return {DataModel} Returns a detached {@link DataModel} instance.\n     */\n    detachedRoot () {\n        const data = this.serialize(DataFormat.FLAT_JSON);\n        const schema = this.getSchema();\n\n        return new DataModel(data, schema);\n    }\n\n    /**\n     * Creates a set of new {@link DataModel} instances by splitting the set of rows in the source {@link DataModel}\n     * instance based on a set of dimensions.\n     *\n     * For each unique dimensional value, a new split is created which creates a unique {@link DataModel} instance for\n     *  that split\n     *\n     * If multiple dimensions are provided, it splits the source {@link DataModel} instance with all possible\n     * combinations of the dimensional values for all the dimensions provided\n     *\n     * Additionally, it also accepts a predicate function to reduce the set of rows provided. A\n     * {@link link_to_selection | Selection} is performed on all the split {@link DataModel} instances based on\n     * the predicate function\n     *\n     * @example\n     *  // without predicate function:\n     *  const splitDt = dt.splitByRow(['Origin'])\n     *  console.log(splitDt));\n     * // This should give three unique DataModel instances, one each having rows only for 'USA',\n     * // 'Europe' and 'Japan' respectively\n     *\n     * @example\n     *  // without predicate function:\n     *  const splitDtMulti = dt.splitByRow(['Origin', 'Cylinders'])\n     *  console.log(splitDtMulti));\n     * // This should give DataModel instances for all unique combinations of Origin and Cylinder values\n     *\n     * @example\n     * // with predicate function:\n     * const splitWithPredDt = dt.select(['Origin'], fields => fields.Origin.value === \"USA\")\n     * console.log(splitWithPredDt);\n     * // This should not include the DataModel for the Origin : 'USA'\n     *\n     *\n     * @public\n     *\n     * @param {Array} dimensionArr - Set of dimensions based on which the split should occur\n     * @param {Object} config - The configuration object\n     * @param {string} [config.saveChild] - Configuration to save child or not\n     * @param {string}[config.mode=FilteringMode.NORMAL] -The mode of the selection.\n     * @return {Array}  Returns the new DataModel instances after operation.\n     */\n    splitByRow (dimensionArr, reducerFn, config) {\n        const fieldsConfig = this.getFieldsConfig();\n\n        dimensionArr.forEach((fieldName) => {\n            if (!fieldsConfig[fieldName]) {\n                throw new Error(`Field ${fieldName} doesn't exist in the schema`);\n            }\n        });\n\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n\n        config = Object.assign({}, defConfig, config);\n\n        return splitWithSelect(this, dimensionArr, reducerFn, config);\n    }\n\n    /**\n     * Creates a set of new {@link DataModel} instances by splitting the set of fields in the source {@link DataModel}\n     * instance based on a set of common and unique field names provided.\n     *\n     * Each DataModel created contains a set of fields which are common to all and a set of unique fields.\n     * It also accepts configurations such as saveChild and mode(inverse or normal) to include/exclude the respective\n     * fields\n     *\n     * @example\n     *  // without predicate function:\n     *  const splitDt = dt.splitByColumn( [['Acceleration'], ['Horsepower']], ['Origin'])\n     *  console.log(splitDt));\n     * // This should give two unique DataModel instances, both having the field 'Origin' and\n     * // one each having 'Acceleration' and 'Horsepower' fields respectively\n     *\n     * @example\n     *  // without predicate function:\n     *  const splitDtInv = dt.splitByColumn( [['Acceleration'], ['Horsepower'],['Origin', 'Cylinders'],\n     *                           {mode: 'inverse'})\n     *  console.log(splitDtInv));\n     * // This should give DataModel instances in the following way:\n     * // All DataModel Instances do not have the fields 'Origin' and 'Cylinders'\n     * // One DataModel Instance has rest of the fields except 'Acceleration' and the other DataModel instance\n     * // has rest of the fields except 'Horsepower'\n     *\n     *\n     *\n     * @public\n     *\n     * @param {Array} uniqueFields - Set of unique fields included in each datamModel instance\n     * @param {Array} commonFields - Set of common fields included in all datamModel instances\n     * @param {Object} config - The configuration object\n     * @param {string} [config.saveChild] - Configuration to save child or not\n     * @param {string}[config.mode=FilteringMode.NORMAL] -The mode of the selection.\n     * @return {Array}  Returns the new DataModel instances after operation.\n     */\n    splitByColumn (uniqueFields = [], commonFields = [], config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        const fieldConfig = this.getFieldsConfig();\n        const allFields = Object.keys(fieldConfig);\n        const normalizedProjFieldSets = [[commonFields]];\n\n        config = Object.assign({}, defConfig, config);\n        uniqueFields = uniqueFields.length ? uniqueFields : [[]];\n\n\n        uniqueFields.forEach((fieldSet, i) => {\n            normalizedProjFieldSets[i] = getNormalizedProFields(\n                [...fieldSet, ...commonFields],\n                allFields,\n                fieldConfig);\n        });\n\n        return splitWithProject(this, normalizedProjFieldSets, config, allFields);\n    }\n\n\n}\n\nexport default DataModel;\n","import { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport DataModel from '../export';\nimport reducerStore from '../utils/reducer-store';\nimport { defaultReducerName } from './group-by-function';\nimport { FieldType } from '../enums';\n\n/**\n * This function sanitize the user given field and return a common Array structure field\n * list\n * @param  {DataModel} dataModel the dataModel operating on\n * @param  {Array} fieldArr  user input of field Array\n * @return {Array}           arrays of field name\n */\nfunction getFieldArr (dataModel, fieldArr) {\n    const retArr = [];\n    const fieldStore = dataModel.getFieldspace();\n    const dimensions = fieldStore.getDimension();\n\n    Object.entries(dimensions).forEach(([key]) => {\n        if (fieldArr && fieldArr.length) {\n            if (fieldArr.indexOf(key) !== -1) {\n                retArr.push(key);\n            }\n        } else {\n            retArr.push(key);\n        }\n    });\n\n    return retArr;\n}\n\n/**\n * This sanitize the reducer provide by the user and create a common type of object.\n * user can give function Also\n * @param  {DataModel} dataModel     dataModel to worked on\n * @param  {Object|function} [reducers={}] reducer provided by the users\n * @return {Object}               object containing reducer function for every measure\n */\nfunction getReducerObj (dataModel, reducers = {}) {\n    const retObj = {};\n    const fieldStore = dataModel.getFieldspace();\n    const measures = fieldStore.getMeasure();\n    const defReducer = reducerStore.defaultReducer();\n\n    Object.keys(measures).forEach((measureName) => {\n        if (typeof reducers[measureName] !== 'string') {\n            reducers[measureName] = measures[measureName].defAggFn();\n        }\n        const reducerFn = reducerStore.resolve(reducers[measureName]);\n        if (reducerFn) {\n            retObj[measureName] = reducerFn;\n        } else {\n            retObj[measureName] = defReducer;\n            reducers[measureName] = defaultReducerName;\n        }\n    });\n    return retObj;\n}\n\n/**\n * main function which perform the group-by operations which reduce the measures value is the\n * fields are common according to the reducer function provided\n * @param  {DataModel} dataModel the dataModel to worked\n * @param  {Array} fieldArr  fields according to which the groupby should be worked\n * @param  {Object|Function} reducers  reducers function\n * @param {DataModel} existingDataModel Existing datamodel instance\n * @return {DataModel} new dataModel with the group by\n */\nfunction groupBy (dataModel, fieldArr, reducers, existingDataModel) {\n    const sFieldArr = getFieldArr(dataModel, fieldArr);\n    const reducerObj = getReducerObj(dataModel, reducers);\n    const fieldStore = dataModel.getFieldspace();\n    const fieldStoreObj = fieldStore.fieldsObj();\n    const dbName = fieldStore.name;\n    const dimensionArr = [];\n    const measureArr = [];\n    const schema = [];\n    const hashMap = {};\n    const data = [];\n    let newDataModel;\n\n    // Prepare the schema\n    Object.entries(fieldStoreObj).forEach(([key, value]) => {\n        if (sFieldArr.indexOf(key) !== -1 || reducerObj[key]) {\n            schema.push(extend2({}, value.schema()));\n\n            switch (value.schema().type) {\n            case FieldType.MEASURE:\n                measureArr.push(key);\n                break;\n            default:\n            case FieldType.DIMENSION:\n                dimensionArr.push(key);\n            }\n        }\n    });\n    // Prepare the data\n    let rowCount = 0;\n    rowDiffsetIterator(dataModel._rowDiffset, (i) => {\n        let hash = '';\n        dimensionArr.forEach((_) => {\n            hash = `${hash}-${fieldStoreObj[_].partialField.data[i]}`;\n        });\n        if (hashMap[hash] === undefined) {\n            hashMap[hash] = rowCount;\n            data.push({});\n            dimensionArr.forEach((_) => {\n                data[rowCount][_] = fieldStoreObj[_].partialField.data[i];\n            });\n            measureArr.forEach((_) => {\n                data[rowCount][_] = [fieldStoreObj[_].partialField.data[i]];\n            });\n            rowCount += 1;\n        } else {\n            measureArr.forEach((_) => {\n                data[hashMap[hash]][_].push(fieldStoreObj[_].partialField.data[i]);\n            });\n        }\n    });\n\n    // reduction\n    let cachedStore = {};\n    let cloneProvider = () => dataModel.detachedRoot();\n    data.forEach((row) => {\n        const tuple = row;\n        measureArr.forEach((_) => {\n            tuple[_] = reducerObj[_](row[_], cloneProvider, cachedStore);\n        });\n    });\n    if (existingDataModel) {\n        existingDataModel.__calculateFieldspace();\n        newDataModel = existingDataModel;\n    }\n    else {\n        newDataModel = new DataModel(data, schema, { name: dbName });\n    }\n    return newDataModel;\n}\n\nexport { groupBy, getFieldArr, getReducerObj };\n","import { rowDiffsetIterator } from './row-diffset-iterator';\nimport InvalidAwareTypes from '../invalid-aware-types';\n\nconst generateBuckets = (binSize, start, end) => {\n    const buckets = [];\n    let next = start;\n\n    while (next < end) {\n        buckets.push(next);\n        next += binSize;\n    }\n    buckets.push(next);\n\n    return buckets;\n};\n\nconst findBucketRange = (bucketRanges, value) => {\n    let leftIdx = 0;\n    let rightIdx = bucketRanges.length - 1;\n    let midIdx;\n    let range;\n\n    // Here use binary search as the bucketRanges is a sorted array\n    while (leftIdx <= rightIdx) {\n        midIdx = leftIdx + Math.floor((rightIdx - leftIdx) / 2);\n        range = bucketRanges[midIdx];\n\n        if (value >= range.start && value < range.end) {\n            return range;\n        } else if (value >= range.end) {\n            leftIdx = midIdx + 1;\n        } else if (value < range.start) {\n            rightIdx = midIdx - 1;\n        }\n    }\n\n    return null;\n};\n\n /**\n  * Creates the bin data from input measure field and supplied configs.\n  *\n  * @param {Measure} measureField - The Measure field instance.\n  * @param {string} rowDiffset - The datamodel rowDiffset values.\n  * @param {Object} config - The config object.\n  * @return {Object} Returns the binned data and the corresponding bins.\n  */\nexport function createBinnedFieldData (measureField, rowDiffset, config) {\n    let { buckets, binsCount, binSize, start, end } = config;\n    const [dMin, dMax] = measureField.domain();\n\n    if (!buckets) {\n        start = (start !== 0 && (!start || start > dMin)) ? dMin : start;\n        end = (end !== 0 && (!end || end < dMax)) ? (dMax + 1) : end;\n\n        if (binsCount) {\n            binSize = Math.ceil(Math.abs(end - start) / binsCount);\n        }\n\n        buckets = generateBuckets(binSize, start, end);\n    }\n\n    if (buckets[0] > dMin) {\n        buckets.unshift(dMin);\n    }\n    if (buckets[buckets.length - 1] <= dMax) {\n        buckets.push(dMax + 1);\n    }\n\n    const bucketRanges = [];\n    for (let i = 0; i < buckets.length - 1; i++) {\n        bucketRanges.push({\n            start: buckets[i],\n            end: buckets[i + 1]\n        });\n    }\n\n    const binnedData = [];\n    rowDiffsetIterator(rowDiffset, (i) => {\n        const datum = measureField.partialField.data[i];\n        if (datum instanceof InvalidAwareTypes) {\n            binnedData.push(datum);\n            return;\n        }\n\n        const range = findBucketRange(bucketRanges, datum);\n        binnedData.push(`${range.start}-${range.end}`);\n    });\n\n    return { binnedData, bins: buckets };\n}\n","import { fnList } from '../operator/group-by-function';\n\nexport const { sum, avg, min, max, first, last, count, std: sd } = fnList;\n","import DataModel from './datamodel';\nimport {\n  compose,\n  bin,\n  select,\n  project,\n  groupby as groupBy,\n  calculateVariable,\n  sort,\n  crossProduct,\n  difference,\n  naturalJoin,\n  leftOuterJoin,\n  rightOuterJoin,\n  fullOuterJoin,\n  union\n} from './operator';\nimport * as Stats from './stats';\nimport * as enums from './enums';\nimport { DateTimeFormatter } from './utils';\nimport { DataFormat, FilteringMode, DM_DERIVATIVES } from './constants';\nimport InvalidAwareTypes from './invalid-aware-types';\nimport pkg from '../package.json';\n\nconst Operators = {\n    compose,\n    bin,\n    select,\n    project,\n    groupBy,\n    calculateVariable,\n    sort,\n    crossProduct,\n    difference,\n    naturalJoin,\n    leftOuterJoin,\n    rightOuterJoin,\n    fullOuterJoin,\n    union\n};\n\nconst version = pkg.version;\nObject.assign(DataModel, {\n    Operators,\n    Stats,\n    DM_DERIVATIVES,\n    DateTimeFormatter,\n    DataFormat,\n    FilteringMode,\n    InvalidAwareTypes,\n    version\n}, enums);\n\nexport default DataModel;\n","import { persistDerivations } from '../helper';\nimport { DM_DERIVATIVES } from '../constants';\n\n/**\n * DataModel's opearators are exposed as composable functional operators as well as chainable operators. Chainable\n * operators are called on the instances of {@link Datamodel} and {@link Relation} class.\n *\n * Those same operators can be used as composable operators from `DataModel.Operators` namespace.\n *\n * All these operators have similar behaviour. All these operators when called with the argument returns a function\n * which expects a DataModel instance.\n *\n * @public\n * @module Operators\n * @namespace DataModel\n */\n\n/**\n * This is functional version of selection operator. {@link link_to_selection | Selection} is a row filtering operation.\n * It takes {@link SelectionPredicate | predicate} for filtering criteria and returns a function.\n * The returned function is called with the DataModel instance on which the action needs to be performed.\n *\n * {@link SelectionPredicate} is a function which returns a boolean value. For selection opearation the selection\n * function is called for each row of DataModel instance with the current row passed as argument.\n *\n * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n * of rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * [Warn] Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * [Error] `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @example\n * const select = DataModel.Operators.select;\n * usaCarsFn = select(fields => fields.Origin.value === 'USA');\n * usaCarsDm = usaCarsFn(dm);\n * console.log(usaCarsDm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {SelectionPredicate} selectFn - Predicate funciton which is called for each row with the current row\n *      ```\n *          function (row, i)  { ... }\n *      ```\n * @param {Object} [config] - The configuration object to control the inclusion exclusion of a row in resultant\n *      DataModel instance\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const select = (...args) => dm => dm.select(...args);\n\n/**\n * This is functional version of projection operator. {@link link_to_projection | Projection} is a column filtering\n * operation.It expects list of fields name and either include those or exclude those based on {@link FilteringMode} on\n * the  resultant variable.It returns a function which is called with the DataModel instance on which the action needs\n * to be performed.\n *\n * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n * @param {Object} [config] - An optional config to control the creation of new DataModel\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const project = (...args) => dm => dm.project(...args);\n\n/**\n * This is functional version of binnig operator. Binning happens on a measure field based on a binning configuration.\n * Binning in DataModel does not aggregate the number of rows present in DataModel instance after binning, it just adds\n * a new field with the binned value. Refer binning {@link example_of_binning | example} to have a intuition of what\n * binning is and the use case.\n *\n * Binning can be configured by\n * - providing custom bin configuration with non uniform buckets\n * - providing bin count\n * - providing each bin size\n *\n * When custom buckets are provided as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const buckets = {\n *      start: 30\n *      stops: [80, 100, 110]\n *  };\n *  const config = { buckets, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(dm);\n *\n * @text\n * When `binCount` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binCount: 5, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @text\n * When `binSize` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binSize: 200, name: 'binnedHorsepower' }\n *  const binnedDm = dataModel.bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {String} name Name of measure which will be used to create bin\n * @param {Object} config Config required for bin creation\n * @param {Array.<Number>} config.bucketObj.stops Defination of bucket ranges. Two subsequent number from arrays\n *      are picked and a range is created. The first number from range is inclusive and the second number from range\n *      is exclusive.\n * @param {Number} [config.bucketObj.startAt] Force the start of the bin from a particular number.\n *      If not mentioned, the start of the bin or the lower domain of the data if stops is not mentioned, else its\n *      the first value of the stop.\n * @param {Number} config.binSize Bucket size for each bin\n * @param {Number} config.binCount Number of bins which will be created\n * @param {String} config.name Name of the new binned field to be created\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const bin = (...args) => dm => dm.bin(...args);\n\n/**\n * This is functional version of `groupBy` operator.Groups the data using particular dimensions and by reducing\n * measures. It expects a list of dimensions using which it projects the datamodel and perform aggregations to reduce\n * the duplicate tuples. Refer this {@link link_to_one_example_with_group_by | document} to know the intuition behind\n * groupBy.\n *\n * DataModel by default provides definition of few {@link reducer | Reducers}.\n * {@link ReducerStore | User defined reducers} can also be registered.\n *\n * This is the chained implementation of `groupBy`.\n * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n *\n * @example\n * const groupBy = DataModel.Operators.groupBy;\n * const groupedFn = groupBy(['Year'], { horsepower: 'max' } );\n * groupedDM = groupByFn(dm);\n *\n * @public\n *\n * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n *      schema of the variable.\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const groupBy = (...args) => dm => dm.groupBy(...args);\n\n/**\n * Enables composing operators to run multiple operations and save group of operataion as named opration on a DataModel.\n * The resulting DataModel will be the result of all the operation provided. The operations provided will be executed in\n * a serial manner ie. result of one operation will be the input for the next operations (like pipe operator in unix).\n *\n * Suported operations in compose are\n * - `select`\n * - `project`\n * - `groupBy`\n * - `bin`\n * - `compose`\n *\n * @example\n * const compose = DataModel.Operators.compose;\n * const select = DataModel.Operators.select;\n * const project = DataModel.Operators.project;\n *\n * let composedFn = compose(\n *    select(fields => fields.netprofit.value <= 15),\n *    project(['netprofit', 'netsales']));\n *\n * const dataModel = new DataModel(data1, schema1);\n *\n * let composedDm = composedFn(dataModel);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<Operators>} operators: An array of operation that will be applied on the\n * datatable.\n *\n * @returns {DataModel} Instance of resultant DataModel\n */\nexport const compose = (...operations) =>\n    (dm, config = { saveChild: true }) => {\n        let currentDM = dm;\n        let firstChild;\n        const derivations = [];\n\n        operations.forEach((operation) => {\n            currentDM = operation(currentDM);\n            derivations.push(...currentDM._derivation);\n            if (!firstChild) {\n                firstChild = currentDM;\n            }\n        });\n\n        if (firstChild && firstChild !== currentDM) {\n            firstChild.dispose();\n        }\n\n        // reset all ancestorDerivation saved in-between compose\n        currentDM._ancestorDerivation = [];\n        persistDerivations(\n            dm,\n            currentDM,\n            DM_DERIVATIVES.COMPOSE,\n            null,\n            derivations\n        );\n\n        if (config.saveChild) {\n            currentDM.setParent(dm);\n        } else {\n            currentDM.setParent(null);\n        }\n\n        return currentDM;\n    };\n","/**\n * Wrapper on calculateVariable() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const calculateVariable = (...args) => dm => dm.calculateVariable(...args);\n\n/**\n * Wrapper on sort() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const sort = (...args) => dm => dm.sort(...args);\n","import { crossProduct } from './cross-product';\nimport { naturalJoinFilter } from './natural-join-filter-function';\n\nexport function naturalJoin (dataModel1, dataModel2) {\n    return crossProduct(dataModel1, dataModel2, naturalJoinFilter(dataModel1, dataModel2), true);\n}\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar _containerManager = require('./container-manager');\n\nvar _containerManager2 = _interopRequireDefault(_containerManager);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    M = slLib.win.Math,\n    max = M.max,\n    round = M.round,\n    BLANK = '',\n    htmlSplCharSpace = { ' ': '&nbsp;' },\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\n/*\n * Create new instance of SmartLabelManager.\n *\n * SmartLabelManager controls the lifetime of the execution space where the text's metrics will be calculated.\n * This takes a string for a given style and returns the height, width.\n * If a bound box is defined it wraps the text and returns the wrapped height and width.\n * It allows to append ellipsis at the end if the text is truncated.\n *\n * @param {String | Number} id - Id of the instance. If the same id is passed, it disposes the old instance and\n *                              save the new one;\n * @param {String | HTMLElement} container - The id or the instance of the container where the intermediate dom\n *                              elements are to be attached. If not passed, it appends in div\n *\n * @param {Boolean} useEllipses - This decides if a ellipses to be appended if the text is truncated.\n * @param {Object} options - Control options\n *                          {\n *                              maxCacheLimit: No of letter to be cached. Default: 500.\n *                          }\n * @constructor\n */\nfunction SmartLabelManager(id, container, useEllipses, options) {\n    var wrapper,\n        prop,\n        max,\n        prevInstance,\n        isBrowserLess = false,\n        store = SmartLabelManager.store;\n\n    if (typeof id === 'undefined' || typeof id === 'object') {\n        return;\n    }\n\n    if (prevInstance = store[id]) {\n        prevInstance.dispose();\n    }\n\n    store[id] = this;\n    options = options || {};\n    options.maxCacheLimit = isFinite(max = options.maxCacheLimit) ? max : slLib.maxDefaultCacheLimit;\n\n    if (typeof container === 'string') {\n        container = doc.getElementById(container);\n    }\n\n    wrapper = slLib.createContainer(container);\n    wrapper.innerHTML = slLib.testStrAvg;\n\n    if (documentSupport.isHeadLess || !documentSupport.isIE && !wrapper.offsetHeight && !wrapper.offsetWidth) {\n        isBrowserLess = true;\n    }\n\n    wrapper.innerHTML = '';\n    for (prop in slLib.parentContainerStyle) {\n        wrapper.style[prop] = slLib.parentContainerStyle[prop];\n    }\n\n    this.id = id;\n    this.parentContainer = wrapper;\n\n    this._containerManager = new _containerManager2['default'](wrapper, isBrowserLess, 10);\n    this._showNoEllipses = !useEllipses;\n    this._init = true;\n    this.style = {};\n    this.options = options;\n\n    this.setStyle();\n}\n\n/*\n * getSmartText returns the text separated by <br/> whenever a break is necessary. This is to recgonize one\n * generalized format independent of the implementation (canvas based solution, svg based solution). This method\n * converts the output of getSmartText().text to array of lines if the text is wrapped. It sets a named property\n * `lines` on the object passed as parameter.\n *\n * @param {Object} smartlabel - the object returned by getSmartText based on which line arr which to be formed.\n *\n * @return {Object} - The same object which was passed in the arguments. Also a named property `lines` is set.\n */\nSmartLabelManager.textToLines = function (smartlabel) {\n    smartlabel = smartlabel || {};\n\n    if (!smartlabel.text) {\n        smartlabel.text = '';\n    } else if (typeof smartlabel.text !== 'string') {\n        smartlabel.text = smartlabel.text.toString();\n    }\n\n    smartlabel.lines = smartlabel.text.split(/\\n|<br\\s*?\\/?>/ig);\n    return smartlabel;\n};\n\n// Saves all the instance created so far\nSmartLabelManager.store = {};\n\n// Calculates space taken by a character with an approximation value which is calculated by repeating the\n// character by string length times.\nSmartLabelManager.prototype._calCharDimWithCache = function (text, calculateDifference, length) {\n    if (!this._init) {\n        return false;\n    }\n\n    var size,\n        csArr,\n        tw,\n        twi,\n        cachedStyle,\n        asymmetricDifference,\n        maxAdvancedCacheLimit = this.options.maxCacheLimit,\n        container = this._container,\n        style = this.style || {},\n        cache = this._advancedCache || (this._advancedCache = {}),\n        advancedCacheKey = this._advancedCacheKey || (this._advancedCacheKey = []),\n        cacheName = text + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK),\n        cacheInitName = text + 'init' + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK);\n\n    htmlSplCharSpace[text] && (text = htmlSplCharSpace[text]);\n\n    if (!calculateDifference) {\n        asymmetricDifference = 0;\n    } else {\n        if ((asymmetricDifference = cache[cacheInitName]) === undefined) {\n            container.innerHTML = text.repeat ? text.repeat(length) : Array(length + 1).join(text); // jshint ignore:line\n            tw = container.offsetWidth;\n\n            container.innerHTML = text;\n            twi = container.offsetWidth;\n\n            asymmetricDifference = cache[cacheInitName] = (tw - length * twi) / (length + 1);\n            advancedCacheKey.push(cacheInitName);\n            if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n                delete cache[advancedCacheKey.shift()];\n            }\n        }\n    }\n\n    if (cachedStyle = cache[cacheName]) {\n        csArr = cachedStyle.split(',');\n        return {\n            width: parseFloat(csArr[0], 10),\n            height: parseFloat(csArr[1], 10)\n        };\n    }\n\n    container.innerHTML = text;\n\n    size = {\n        height: container.offsetHeight,\n        width: container.offsetWidth + asymmetricDifference\n    };\n\n    cache[cacheName] = size.width + ',' + size.height;\n    advancedCacheKey.push(cacheName);\n    if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n        delete cache[advancedCacheKey.shift()];\n    }\n\n    return size;\n};\n\n// Provide function to calculate the height and width based on the environment and available support from dom.\nSmartLabelManager.prototype._getWidthFn = function () {\n    var contObj = this._containerObj,\n        container = this._container,\n        svgText = contObj.svgText;\n\n    if (svgText) {\n        return function (str) {\n            var bbox, width;\n\n            svgText.textContent = str;\n            bbox = svgText.getBBox();\n            width = bbox.width - SVG_BBOX_CORRECTION;\n            if (width < 1) {\n                width = bbox.width;\n            }\n\n            return width;\n        };\n    } else {\n        return function (str) {\n            container.innerHTML = str;\n            return container.offsetWidth;\n        };\n    }\n};\n\n/*\n * Sets the style based on which the text's metrics to be calculated.\n *\n * @param {Object} style - The style object which affects the text size\n *                      {\n *                          fontSize / 'font-size' : MUST BE FOLLOWED BY PX (10px, 11px)\n *                          fontFamily / 'font-family'\n *                          fontWeight / 'font-weight'\n *                          fontStyle / 'font-style'\n *                      }\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.setStyle = function (style) {\n    if (!this._init) {\n        return this;\n    }\n\n    var sCont;\n\n    if (style === this.style && !this._styleNotSet) {\n        return;\n    }\n\n    if (!style) {\n        style = this.style;\n    }\n\n    slLib.setLineHeight(style);\n    this.style = style;\n\n    this._containerObj = sCont = this._containerManager.get(style);\n\n    if (this._containerObj) {\n        this._container = sCont.node;\n        this._context = sCont.context;\n        this._cache = sCont.charCache;\n        this._lineHeight = sCont.lineHeight;\n        this._styleNotSet = false;\n    } else {\n        this._styleNotSet = true;\n    }\n\n    return this;\n};\n\n/*\n * Decides whether ellipses to be shown if the node is truncated\n *\n * @param {Boolean} useEllipses - decides if a ellipses to be appended if the text is truncated. Default: false\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.useEllipsesOnOverflow = function (useEllipses) {\n    if (!this._init) {\n        return this;\n    }\n    this._showNoEllipses = !useEllipses;\n    return this;\n};\n\n/*\n * Get wrapped or truncated text if a bound box is defined around it. The result text would be separated by <br/>\n * if wrapped\n *\n * @param {String} text - the subject text\n * @param {Number} maxWidth - width in px of the the bound box\n * @param {Number} maxHeight - height in px of the the bound box\n * @param {Boolean} noWrap - whether the text to be wrapped. Default false.\n *\n * @return {Object} - The metrics of the text bounded by the box\n *                  {\n *                      height : height of the wrapped text\n *                      width : width of the wrapped text\n *                      isTruncated : whether the text is truncated\n *                      maxHeight : Maximum height given\n *                      maxWidth : Maximum width given\n *                      oriText : Original text sent\n *                      oriTextHeight : Original text height\n *                      oriTextWidth : Original text width\n *                      text : SMART TEXT\n *                  }\n */\nSmartLabelManager.prototype.getSmartText = function (text, maxWidth, maxHeight, noWrap) {\n    if (!this._init) {\n        return false;\n    }\n\n    if (text === undefined || text === null) {\n        text = '';\n    } else if (typeof text !== 'string') {\n        text = text.toString();\n    }\n\n    var len,\n        trimStr,\n        tempArr,\n        tmpText,\n        maxWidthWithEll,\n        toolText,\n        oriWidth,\n        oriHeight,\n        newCharIndex,\n        nearestChar,\n        tempChar,\n        getWidth,\n        initialLeft,\n        initialTop,\n        getOriSizeImproveObj,\n        spanArr,\n        x,\n        y,\n        minWidth,\n        elem,\n        chr,\n        elemRightMostPoint,\n        elemLowestPoint,\n        lastBR,\n        removeFromIndex,\n        removeFromIndexForEllipses,\n        hasHTMLTag = false,\n        maxStrWidth = 0,\n        lastDash = -1,\n        lastSpace = -1,\n        lastIndexBroken = -1,\n        strWidth = 0,\n        strHeight = 0,\n        oriTextArr = [],\n        i = 0,\n        ellipsesStr = this._showNoEllipses ? '' : '...',\n        lineHeight = this._lineHeight,\n        context = this._context,\n        container = this._container,\n        sCont = this._containerObj,\n        ellipsesWidth = sCont.ellipsesWidth,\n        dotWidth = sCont.dotWidth,\n        characterArr = [],\n        dashIndex = -1,\n        spaceIndex = -1,\n        lastLineBreak = -1,\n        fastTrim = function fastTrim(str) {\n        str = str.replace(/^\\s\\s*/, '');\n        var ws = /\\s/,\n            i = str.length;\n        while (ws.test(str.charAt(i -= 1))) {/* jshint noempty:false */}\n        return str.slice(0, i + 1);\n    },\n        smartLabel = {\n        text: text,\n        maxWidth: maxWidth,\n        maxHeight: maxHeight,\n        width: null,\n        height: null,\n        oriTextWidth: null,\n        oriTextHeight: null,\n        oriText: text,\n        isTruncated: false\n    };\n\n    getWidth = this._getWidthFn();\n\n    // In some browsers, offsetheight of a single-line text is getting little (1 px) heigher value of the\n    // lineheight. As a result, smartLabel is unable to return single-line text.\n    // To fix this, increase the maxHeight a little amount. Hence maxHeight =  lineHeight * 1.2\n    if (maxHeight === lineHeight) {\n        maxHeight *= 1.2;\n    }\n\n    if (container) {\n        if (!documentSupport.isBrowserLess) {\n            hasHTMLTag = slLib.xmlTagRegEx.test(text);\n            if (!hasHTMLTag) {\n                // Due to support of <,> for xml we convert &lt;, &gt; to <,> respectively so to get the correct\n                // width it is required to convert the same before calculation for the new improve version of the\n                // get text width.\n                tmpText = text.replace(slLib.ltgtRegex, function (match) {\n                    return match === '&lt;' ? '<' : '>';\n                });\n                getOriSizeImproveObj = this.getOriSize(tmpText, true);\n\n                smartLabel.oriTextWidth = oriWidth = getOriSizeImproveObj.width;\n                smartLabel.oriTextHeight = oriHeight = getOriSizeImproveObj.height;\n            } else {\n                container.innerHTML = text;\n                smartLabel.oriTextWidth = oriWidth = container.offsetWidth;\n                smartLabel.oriTextHeight = oriHeight = container.offsetHeight;\n            }\n\n            if (oriHeight <= maxHeight && oriWidth <= maxWidth) {\n                smartLabel.width = smartLabel.oriTextWidth = oriWidth;\n                smartLabel.height = smartLabel.oriTextHeight = oriHeight;\n                return smartLabel;\n            }\n\n            if (lineHeight > maxHeight) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = 0;\n                smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            }\n        }\n\n        // Calculate width with ellipses\n        text = fastTrim(text).replace(/(\\s+)/g, ' ');\n        maxWidthWithEll = this._showNoEllipses ? maxWidth : maxWidth - ellipsesWidth;\n\n        if (!hasHTMLTag) {\n            oriTextArr = text.split('');\n            len = oriTextArr.length;\n            trimStr = '', tempArr = [];\n            tempChar = oriTextArr[0];\n\n            if (this._cache[tempChar]) {\n                minWidth = this._cache[tempChar].width;\n            } else {\n                minWidth = getWidth(tempChar);\n                this._cache[tempChar] = { width: minWidth };\n            }\n\n            if (maxWidthWithEll > minWidth) {\n                tempArr = text.substr(0, slLib.getNearestBreakIndex(text, maxWidthWithEll, this)).split('');\n                i = tempArr.length;\n            } else if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            } else if (ellipsesStr) {\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            strWidth = getWidth(tempArr.join(''));\n            strHeight = this._lineHeight;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                            smartLabel.tooltext = smartLabel.oriText;\n                            smartLabel.width = getWidth(smartLabel.text);\n                            smartLabel.height = this._lineHeight;\n                            return smartLabel;\n                        }\n                    }\n                }\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = strWidth;\n                smartLabel.height = this._lineHeight;\n                return smartLabel;\n            } else {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (tempChar === ' ' && !context) {\n                        tempChar = '&nbsp;';\n                    }\n\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            /** @todo use regular expressions for better performance. */\n                            lastSpace = text.substr(0, tempArr.length).lastIndexOf(' ');\n                            lastDash = text.substr(0, tempArr.length).lastIndexOf('-');\n                            if (lastSpace > lastIndexBroken) {\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                tempArr.splice(lastSpace, 1, '<br/>');\n                                lastIndexBroken = lastSpace;\n                                newCharIndex = lastSpace + 1;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === tempArr.length - 1) {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '<br/>-');\n                                } else {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '-<br/>');\n                                }\n                                lastIndexBroken = lastDash;\n                                newCharIndex = lastDash + 1;\n                            } else {\n                                tempArr.splice(tempArr.length - 1, 1, '<br/>' + oriTextArr[i]);\n                                lastLineBreak = tempArr.length - 2;\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastLineBreak + 1).join(''));\n                                lastIndexBroken = lastLineBreak;\n                                newCharIndex = i;\n                            }\n                            strHeight += this._lineHeight;\n                            if (strHeight > maxHeight) {\n                                smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                                smartLabel.tooltext = smartLabel.oriText;\n                                // The max width among all the lines will be the width of the string.\n                                smartLabel.width = maxWidth;\n                                smartLabel.height = strHeight - this._lineHeight;\n                                return smartLabel;\n                            } else {\n                                maxStrWidth = max(maxStrWidth, strWidth);\n                                trimStr = null;\n                                nearestChar = slLib.getNearestBreakIndex(text.substr(newCharIndex), maxWidthWithEll, this);\n                                strWidth = getWidth(text.substr(newCharIndex, nearestChar || 1));\n                                if (tempArr.length < newCharIndex + nearestChar) {\n                                    tempArr = tempArr.concat(text.substr(tempArr.length, newCharIndex + nearestChar - tempArr.length).split(''));\n                                    i = tempArr.length - 1;\n                                }\n                            }\n                        }\n                    }\n                }\n\n                maxStrWidth = max(maxStrWidth, strWidth);\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = maxStrWidth;\n                smartLabel.height = strHeight;\n                return smartLabel;\n            }\n        } else {\n            toolText = text.replace(slLib.spanAdditionRegx, '$2');\n            text = text.replace(slLib.spanAdditionRegx, slLib.spanAdditionReplacer);\n            text = text.replace(/(<br\\s*\\/*\\>)/g, '<span class=\"' + [slLib.classNameWithTag, ' ', slLib.classNameWithTagBR].join('') + '\">$1</span>');\n\n            container.innerHTML = text;\n\n            spanArr = container[documentSupport.childRetriverFn](documentSupport.childRetriverString);\n\n            for (x = 0, y = spanArr.length; x < y; x += 1) {\n                elem = spanArr[x];\n                //chech whether this span is temporary inserted span from it's class\n                if (documentSupport.noClassTesting || slLib.classNameReg.test(elem.className)) {\n                    chr = elem.innerHTML;\n                    if (chr !== '') {\n                        if (chr === ' ') {\n                            spaceIndex = characterArr.length;\n                        } else if (chr === '-') {\n                            dashIndex = characterArr.length;\n                        }\n\n                        characterArr.push({\n                            spaceIdx: spaceIndex,\n                            dashIdx: dashIndex,\n                            elem: elem\n                        });\n                        oriTextArr.push(chr);\n                    }\n                }\n            }\n\n            i = 0;\n            len = characterArr.length;\n            minWidth = characterArr[0].elem.offsetWidth;\n\n            if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n\n                return smartLabel;\n            } else if (minWidth > maxWidthWithEll && !this._showNoEllipses) {\n\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            initialLeft = characterArr[0].elem.offsetLeft;\n            initialTop = characterArr[0].elem.offsetTop;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n                        if (container.offsetWidth > maxWidth) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            } else {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemLowestPoint = elem.offsetHeight + (elem.offsetTop - initialTop);\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    lastBR = null;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n\n                        if (elemRightMostPoint > maxWidth) {\n                            lastSpace = characterArr[i].spaceIdx;\n                            lastDash = characterArr[i].dashIdx;\n                            if (lastSpace > lastIndexBroken) {\n                                characterArr[lastSpace].elem.innerHTML = '<br/>';\n                                lastIndexBroken = lastSpace;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === i) {\n                                    // in case the overflowing character itself is the '-'\n                                    characterArr[lastDash].elem.innerHTML = '<br/>-';\n                                } else {\n                                    characterArr[lastDash].elem.innerHTML = '-<br/>';\n                                }\n                                lastIndexBroken = lastDash;\n                            } else {\n                                elem.parentNode.insertBefore(lastBR = doc.createElement('br'), elem);\n                            }\n\n                            //check whether this break made current element outside the area height\n                            if (elem.offsetHeight + elem.offsetTop > maxHeight) {\n                                //remove the lastly inserted line break\n                                if (lastBR) {\n                                    lastBR.parentNode.removeChild(lastBR);\n                                } else if (lastIndexBroken === lastDash) {\n                                    characterArr[lastDash].elem.innerHTML = '-';\n                                } else {\n                                    characterArr[lastSpace].elem.innerHTML = ' ';\n                                }\n                                removeFromIndex = i;\n                                //break the looping condition\n                                i = len;\n                            } else {\n                                removeFromIndexForEllipses = null;\n                            }\n                        }\n                    } else {\n                        //check whether this break made current element outside the area height\n                        if (elemLowestPoint > maxHeight) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            }\n\n            if (removeFromIndex < len) {\n                //set the trancated property of the smartlabel\n                smartLabel.isTruncated = true;\n\n                /** @todo is this really needed? */\n                removeFromIndexForEllipses = removeFromIndexForEllipses ? removeFromIndexForEllipses : removeFromIndex;\n\n                for (i = len - 1; i >= removeFromIndexForEllipses; i -= 1) {\n                    elem = characterArr[i].elem;\n                    //chech whether this span is temporary inserted span from it's class\n                    elem.parentNode.removeChild(elem);\n                }\n\n                for (; i >= 0; i -= 1) {\n                    elem = characterArr[i].elem;\n                    if (slLib.classNameBrReg.test(elem.className)) {\n                        //chech whether this span is temporary inserted span from it's class\n                        elem.parentNode.removeChild(elem);\n                    } else {\n                        i = 0;\n                    }\n                }\n            }\n\n            //get the smart text\n            smartLabel.text = container.innerHTML.replace(slLib.spanRemovalRegx, '$1').replace(/\\&amp\\;/g, '&');\n            if (smartLabel.isTruncated) {\n                smartLabel.text += ellipsesStr;\n                smartLabel.tooltext = toolText;\n            }\n        }\n\n        smartLabel.height = container.offsetHeight;\n        smartLabel.width = container.offsetWidth;\n\n        return smartLabel;\n    } else {\n        smartLabel.error = new Error('Body Tag Missing!');\n        return smartLabel;\n    }\n};\n\n/*\n * Get the height and width of a text.\n *\n * @param {String} text - Text whose metrics to be measured\n * @param {Boolean} Optional detailedCalculationFlag - this flag if set it calculates per letter position\n *                          information and returns it. Ideally you dont need it unless you want to post process the\n *                          string. And its an EXPENSIVE OPERATION.\n *\n * @return {Object} - If detailedCalculationFlag is set to true the returned object would be\n *                  {\n *                      height: height of the text\n *                      width: width of the text\n *                      detailObj: detail calculation of letters in the format {lettername: width}\n *                  }\n *                  If detailedCalculationFlag is set to false the returned object wont have the detailObj prop.\n */\nSmartLabelManager.prototype.getOriSize = function (text, detailedCalculationFlag) {\n    if (!this._init) {\n        return false;\n    }\n\n    var textArr,\n        letter,\n        lSize,\n        i,\n        l,\n        cumulativeSize = 0,\n        height = 0,\n        indiSizeStore = {};\n\n    if (!detailedCalculationFlag) {\n        return this._calCharDimWithCache(text);\n    }\n\n    // Calculate the width of every letter with an approximation\n    textArr = text.split('');\n    for (i = 0, l = textArr.length; i < l; i++) {\n        letter = textArr[i];\n        lSize = this._calCharDimWithCache(letter, true, textArr.length);\n        height = max(height, lSize.height);\n        cumulativeSize += lSize.width;\n        indiSizeStore[letter] = lSize.width;\n    }\n\n    return {\n        width: round(cumulativeSize),\n        height: height,\n        detailObj: indiSizeStore\n    };\n};\n\n/*\n * Dispose the container and object allocated by the smartlabel\n */\nSmartLabelManager.prototype.dispose = function () {\n    if (!this._init) {\n        return this;\n    }\n\n    this._containerManager && this._containerManager.dispose && this._containerManager.dispose();\n\n    delete this._container;\n    delete this._context;\n    delete this._cache;\n    delete this._containerManager;\n    delete this._containerObj;\n    delete this.id;\n    delete this.style;\n    delete this.parentContainer;\n    delete this._showNoEllipses;\n\n    return this;\n};\n\nexports['default'] = SmartLabelManager;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\nvar lib = {\n\tinit: function init(win) {\n\t\tvar doc = win.document,\n\t\t    nav = win.navigator,\n\t\t    userAgent = nav.userAgent,\n\t\t    DIV = 'DIV',\n\t\t    ceil = Math.ceil,\n\t\t    floor = Math.floor,\n\t\t    containerInstanceCount = 0,\n\t\t    clsNameSpace = 'fusioncharts-smartlabel-',\n\t\t    containerClass = clsNameSpace + 'container',\n\t\t    classNameWithTag = clsNameSpace + 'tag',\n\t\t    classNameWithTagBR = clsNameSpace + 'br';\n\n\t\tlib = {\n\t\t\twin: win,\n\n\t\t\tcontainerClass: containerClass,\n\n\t\t\tclassNameWithTag: classNameWithTag,\n\n\t\t\tclassNameWithTagBR: classNameWithTagBR,\n\n\t\t\tmaxDefaultCacheLimit: 500,\n\n\t\t\tclassNameReg: new RegExp('\\b' + classNameWithTag + '\\b'),\n\n\t\t\tclassNameBrReg: new RegExp('\\b' + classNameWithTagBR + '\\b'),\n\n\t\t\tspanAdditionRegx: /(<[^<\\>]+?\\>)|(&(?:[a-z]+|#[0-9]+);|.)/ig,\n\n\t\t\tspanAdditionReplacer: '$1<span class=\"' + classNameWithTag + '\">$2</span>',\n\n\t\t\tspanRemovalRegx: new RegExp('\\\\<span[^\\\\>]+?' + classNameWithTag + '[^\\\\>]{0,}\\\\>(.*?)\\\\<\\\\/span\\\\>', 'ig'),\n\n\t\t\txmlTagRegEx: new RegExp('<[^>][^<]*[^>]+>', 'i'),\n\n\t\t\tltgtRegex: /&lt;|&gt;/g,\n\n\t\t\tbrReplaceRegex: /<br\\/>/ig,\n\n\t\t\ttestStrAvg: 'WgI',\n\n\t\t\t// This style is applied over the parent smartlabel container. The container is kept hidden from the viewport\n\t\t\tparentContainerStyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: '-9999em',\n\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\tpadding: '0px',\n\t\t\t\twidth: '1px',\n\t\t\t\theight: '1px',\n\t\t\t\toverflow: 'hidden'\n\t\t\t},\n\n\t\t\t// All the style which might affect the text metrics\n\t\t\tsupportedStyle: {\n\t\t\t\tfont: 'font',\n\t\t\t\tfontFamily: 'font-family',\n\t\t\t\t'font-family': 'font-family',\n\t\t\t\tfontWeight: 'font-weight',\n\t\t\t\t'font-weight': 'font-weight',\n\t\t\t\tfontSize: 'font-size',\n\t\t\t\t'font-size': 'font-size',\n\t\t\t\tlineHeight: 'line-height',\n\t\t\t\t'line-height': 'line-height',\n\t\t\t\tfontStyle: 'font-style',\n\t\t\t\t'font-style': 'font-style'\n\t\t\t},\n\n\t\t\t// Get the support list for html the document where the text calcution is to be done.\n\t\t\tgetDocumentSupport: function getDocumentSupport() {\n\t\t\t\tvar childRetriverFn, childRetriverString, noClassTesting;\n\n\t\t\t\tif (doc.getElementsByClassName) {\n\t\t\t\t\tchildRetriverFn = 'getElementsByClassName';\n\t\t\t\t\tchildRetriverString = classNameWithTag;\n\t\t\t\t\tnoClassTesting = true;\n\t\t\t\t} else {\n\t\t\t\t\tchildRetriverFn = 'getElementsByTagName';\n\t\t\t\t\tchildRetriverString = 'span';\n\t\t\t\t\tnoClassTesting = false;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tisIE: /msie/i.test(userAgent) && !win.opera,\n\t\t\t\t\thasSVG: Boolean(win.SVGAngle || doc.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1')),\n\t\t\t\t\tisHeadLess: new RegExp(' HtmlUnit').test(userAgent),\n\t\t\t\t\tisWebKit: new RegExp(' AppleWebKit/').test(userAgent),\n\t\t\t\t\tchildRetriverFn: childRetriverFn,\n\t\t\t\t\tchildRetriverString: childRetriverString,\n\t\t\t\t\tnoClassTesting: noClassTesting\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/*\n    * Create a html div element and attach it with a parent. All the subsequent operations are performed\n    * by upding this dom tree only.\n    *\n    * @param {HTMLElement} - The html element where the newly created div is to be attached. If not passed,\n    *                      the new div is appended on the body.\n    */\n\t\t\tcreateContainer: function createContainer(containerParent) {\n\t\t\t\tvar body, container;\n\n\t\t\t\tif (containerParent && (containerParent.offsetWidth || containerParent.offsetHeight)) {\n\t\t\t\t\tif (containerParent.appendChild) {\n\t\t\t\t\t\tcontainerParent.appendChild(container = doc.createElement(DIV));\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbody = doc.getElementsByTagName('body')[0];\n\n\t\t\t\t\tif (body && body.appendChild) {\n\t\t\t\t\t\tcontainer = doc.createElement(DIV);\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\tcontainerInstanceCount += 1;\n\t\t\t\t\t\tbody.appendChild(container);\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Finds a approximate position where the text is to be broken\n\t\t\tgetNearestBreakIndex: function getNearestBreakIndex(text, maxWidth, sl) {\n\t\t\t\tif (!text || !text.length) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tvar difference,\n\t\t\t\t    getWidth = sl._getWidthFn(),\n\t\t\t\t    charLen = 0,\n\t\t\t\t    increment = 0,\n\t\t\t\t    oriWidth = getWidth(text),\n\t\t\t\t    avgWidth = oriWidth / text.length;\n\n\t\t\t\tdifference = maxWidth;\n\t\t\t\tcharLen = ceil(maxWidth / avgWidth);\n\n\t\t\t\tif (oriWidth < maxWidth) {\n\t\t\t\t\treturn text.length - 1;\n\t\t\t\t}\n\n\t\t\t\tif (charLen > text.length) {\n\t\t\t\t\tdifference = maxWidth - oriWidth;\n\t\t\t\t\tcharLen = text.length;\n\t\t\t\t}\n\n\t\t\t\twhile (difference > 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twhile (difference < 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn charLen;\n\t\t\t},\n\n\t\t\t/*\n    * Determine lineheight of a text for a given style. It adds propery lineHeight to the style passed\n    *\n    * @param {Object} - The style based on which the text's metric needs to be calculated. The calculation happens\n    *                  based on fontSize property, if its not present a default font size is assumed.\n    *\n    * @return {Object} - The style that was passed with lineHeight as a named propery set on the object.\n    */\n\t\t\tsetLineHeight: function setLineHeight(styleObj) {\n\t\t\t\tvar fSize = styleObj.fontSize = styleObj.fontSize || '12px';\n\t\t\t\tstyleObj.lineHeight = styleObj.lineHeight || styleObj['line-height'] || parseInt(fSize, 10) * 1.2 + 'px';\n\t\t\t\treturn styleObj;\n\t\t\t}\n\t\t};\n\n\t\treturn lib;\n\t}\n};\n\nexports['default'] = lib;\nmodule.exports = exports['default'];","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"hyperdis\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hyperdis\"] = factory();\n\telse\n\t\troot[\"hyperdis\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const makeEntry = (arr, sCon) => {\n    arr.forEach((elem) => {\n        if (elem === undefined || elem === null) {\n            return;\n        }\n        sCon[elem] = 1;\n    });\n};\n\nexport default class ForeignSet {\n    constructor (arr) {\n        this._set = {};\n        makeEntry(arr, this._set);\n    }\n\n    append (arr) {\n        makeEntry(arr, this._set);\n        return this;\n    }\n\n    toArray () {\n        return Object.keys(this._set);\n    }\n\n    static difference (set1, set2) {\n        let key;\n        const filteredKeys = [],\n            s1 = set1._set,\n            s2 = set2._set;\n        for (key in s1) {\n            if (!({}).hasOwnProperty.call(s1, key)) {\n                continue;\n            }\n            if (key in s2) {\n                continue;\n            }\n            filteredKeys.push(key);\n        }\n        return new ForeignSet(filteredKeys);\n    }\n}\n","/* global window */\n\nimport ForeignSet from './set';\n\nconst\n    isSimpleObject = (obj) => {\n        let token;\n        if (typeof obj === 'object') {\n            if (obj === null) { return false; }\n            token = Object.prototype.toString.call(obj);\n            if (token === '[object Object]') {\n                return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n            }\n        }\n        return false;\n    },\n    minMsThreshold = 16,\n    /* istanbul ignore next */win = typeof window === 'undefined' ? (this || {}) : window,\n    /* istanbul ignore next */ reqAnimFrame = win.requestAnimationFrame || win.webkitRequestAnimationFrame ||\n        win.mozRequestAnimationFrame || win.oRequestAnimationFrame ||\n        win.msRequestAnimationFrame ||\n        function (callback) {\n            setTimeout(callback, minMsThreshold);\n        },\n\n    getTimeBasedId = () => {\n        if (getTimeBasedId.__lastTime === new Date().getTime()) {\n            return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n        }\n\n        getTimeBasedId.__id = 0;\n        getTimeBasedId.__lastTime = new Date().getTime();\n        return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n    },\n    pullableRecent = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const\n                    hist = node.history,\n                    l = hist.length - 1;\n                return [hist[l - 1 < 0 ? 0 : l - 1], hist[l]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    pullableEnd = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const hist = node.history;\n                return [hist[0], hist[hist.length - 1]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    unique = fns => fns\n                    .reduce((store, fn) => {\n                // @warn function with side effect, it mutates the store passed during initialization\n                        if (fn.__id in store.map) {\n                            return store;\n                        }\n\n                        store.map[fn.__id] = 1;\n                        store.unique.push(fn);\n\n                        return store;\n                    }, { map: {}, unique: [] })\n                    .unique,\n    compose = fns => () => {\n        fns.forEach(fn => fn());\n    },\n    flat = (...params) => {\n        const res = [];\n        params.forEach(param => res.push(...param));\n        return res;\n    },\n    identityMap = arrays => arrays,\n    splitPathProp = (path) => {\n        const pathArr = path.split('.'),\n            len = pathArr.length;\n        return [pathArr.slice(0, len - 1), pathArr[len - 1]];\n    },\n    scheduler = (onFinishCallback) => {\n        let queue = [],\n            animationFrame = null;\n\n        onFinishCallback = onFinishCallback &&\n            typeof onFinishCallback === 'function' && onFinishCallback || (() => { });\n\n        return (listeners, payload) => {\n            [].push.apply(queue, listeners);\n            if (animationFrame === null) {\n                animationFrame = reqAnimFrame(() => {\n                    const tempQ = queue.slice(0);\n                    queue.length = 0;\n                    animationFrame = null;\n\n                    unique(tempQ).forEach(fn => fn());\n                    onFinishCallback(payload);\n                });\n            }\n        };\n    },\n    fetch = namedNode => (...params) => params.map((param) => {\n        const node = namedNode[param];\n        return {\n            name: node.name,\n            qualifiedName: node.qualifiedName,\n            value: node.seed\n        };\n    }),\n    fetchAggregator = (...params) => ({\n        dependencies: params.slice(0, params.length - 1),\n        fn: params[params.length - 1]\n    }),\n    getUpstreamNodes = (list) => {\n        let res = [];\n        const map = {};\n        list.forEach(node => map[node.qualifiedName] = -1);\n        function rec (arr) {\n            arr.forEach((node) => {\n                let qname,\n                    placedIndex,\n                    preArr,\n                    postArr;\n                if (!((qname = node.qualifiedName) in map)) {\n                    map[qname] = res.push(node) - 1;\n                } else {\n                    placedIndex = map[qname];\n                    if (placedIndex !== -1 && placedIndex !== res.length - 1) {\n                        // If not the last element, readjust the array so that the later dependency position is saved\n                        preArr = res.slice(0, placedIndex);\n                        postArr = res.slice(placedIndex + 1);\n                        res = preArr.concat(postArr);\n\n                        // reset the index in map\n                        postArr.forEach((elem, i) => map[elem.qualifiedName] = i + preArr.length);\n                        map[qname] = res.push(node) - 1;\n                    }\n                }\n                rec(node.outgoingEdges);\n            });\n        }\n        rec(list);\n        return res;\n    },\n    resolver = {\n        accumulate: (...params) => {\n            const resp = {};\n            params.forEach((nodeDetails) => {\n                Object.assign(resp, { [nodeDetails.name]: nodeDetails.value });\n            });\n            return resp;\n        },\n        identity: nodeDetails => nodeDetails.value\n    };\n\nfunction resolveDependencyOrder (node, resolved, resolveMap) {\n    let qname;\n    node.edges.forEach((neighbour) => {\n        resolveDependencyOrder(neighbour, resolved, resolveMap);\n    });\n\n    if (node.isRoot() || (qname = node.qualifiedName) in resolveMap) {\n        return;\n    }\n    resolved.push(node);\n    resolveMap[qname] = 1;\n}\n\nclass CustomResolver {\n    constructor (resolver) {\n        this.fn = resolver;\n        this.dep = [];\n    }\n\n    addDependencies(...dep) {\n        this.dep.push(...dep);\n        return this;\n    }\n\n    getDependencies () {\n        return this.dep;\n    }\n\n    get () {\n        return this.fn;\n    }\n}\n\nexport {\n    isSimpleObject,\n    scheduler,\n    compose,\n    flat,\n    identityMap,\n    pullableEnd,\n    pullableRecent,\n    unique,\n    splitPathProp,\n    resolver,\n    ForeignSet,\n    resolveDependencyOrder,\n    fetch,\n    fetchAggregator,\n    CustomResolver,\n    getUpstreamNodes\n};\n","export default class GraphNode {\n    constructor (name, qualifiedName, options) {\n        /* istanbul ignore next */options = options || {};\n        this.name = name;\n        this.qualifiedName = qualifiedName;\n        this.edges = [];\n        this.outgoingEdges = [];\n        this._seed = null;\n        this.requireResolve = true;\n        this.retriever = options.retriever;\n        this.history = [];\n        this.resolver = null;\n        this.electricEdges = [];\n    }\n\n    addDependencies (...dep) {\n        this.edges.push(...dep);\n        dep.forEach(entry => entry.outgoingEdges.push(this));\n        return this;\n    }\n\n    addElectricNode (node) {\n        this.electricEdges.push(node);\n        return this;\n    }\n\n    get seed () {\n        return this._seed;\n    }\n\n    set seed (value) {\n        this._seed = value;\n        this.requireResolve = true;\n        return this;\n    }\n\n    resolve () {\n        this.seed = this.resolver(...this.retrieveDetails());\n        this.history.push(this.seed);\n        this.requireResolve = false;\n        return this;\n    }\n\n    retrieveDetails () {\n        if (this.edges.length === 0) {\n            return [{\n                name: this.name,\n                qualifiedName: this.qualifiedName,\n                value: this.seed\n            }];\n        }\n        return this.retriever(...this.edges.map(edge => edge.qualifiedName));\n    }\n\n    repeatHead () {\n        const\n            history = this.history,\n            head = history[history.length - 1];\n        // @todo- Akash, write test case if history.length === 0 to pass code coverage\n        if (history.length === 0) {\n            return this;\n        }\n        history.push(head);\n        return this;\n    }\n\n    flush () {\n        const hist = this.history,\n            head = hist[hist.length - 1];\n        hist.length = 0;\n        hist.push(head);\n        return this;\n    }\n\n    isRoot () {\n        return this.name === null;\n    }\n}\n","import {\n    pullableRecent,\n    pullableEnd\n} from './utils';\n\nexport default class ElectricNode {\n    constructor () {\n        this.edges = [];\n        this.listeners = {\n            nextFrame: [],\n            currentFrame: []\n        };\n    }\n\n    addEdges (...nodes) {\n        this.edges.push(...nodes);\n        return this;\n    }\n\n    regListenerForCurrFrame (fn) {\n        const lstnrs = this.listeners.currentFrame;\n        let index = lstnrs.push(pullableRecent(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.currentFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    regListenerForNextFrame (fn) {\n        const lstnrs = this.listeners.nextFrame;\n        let index = lstnrs.push(pullableEnd(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.nextFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    hasNextFrameListener () {\n        return !!this.listeners.nextFrame.length;\n    }\n}\n","import {\n    isSimpleObject,\n    resolver,\n    // upstreamNodes,\n    flat,\n    resolveDependencyOrder,\n    getUpstreamNodes,\n    ForeignSet,\n    fetch,\n    CustomResolver,\n    scheduler\n} from './utils';\nimport Node from './graph-node';\nimport ElectricNode from './electric-node';\n\nexport default class Graph {\n    constructor () {\n        this.qualifiedNodeMap = {};\n        this.retriever = fetch(this.qualifiedNodeMap);\n        this.root = new Node(null, null, { retriever: this.retriever });\n        this.root.resolver = resolver.accumulate;\n\n        this._wholeSet = null;\n        this._propagate = true;\n        this.propagationOverride = {\n            currentFrameListeners: false,\n            nextFrameListeners: false\n        };\n\n        this._schedule = scheduler((payload) => {\n            let qname;\n            for (qname in payload.flushTarget) {\n                if (!({}).hasOwnProperty.call(this.qualifiedNodeMap, qname)) {\n                    return;\n                }\n                this.qualifiedNodeMap[qname].flush();\n            }\n        });\n    }\n\n    createNodesFrom (obj, mount) {\n        let val,\n            resolveReqList;\n        const qualifiedNodeMap = this.qualifiedNodeMap,\n            root = this.root,\n            retriever = this.retriever;\n\n        (function rec (objn, qualifiedName, history) {\n            let key,\n                qname,\n                perv,\n                node;\n\n            for (key in objn) {\n                if (!({}).hasOwnProperty.call(objn, key)) {\n                    continue;\n                }\n                qname = `${qualifiedName}${key}`;\n                node = new Node(key, qname, { retriever });\n                qualifiedNodeMap[qname] = node;\n\n                if ((perv = history.perv) !== undefined) {\n                    perv.addDependencies(node);\n                } else {\n                    // top most level entries\n                    root.addDependencies(node);\n                }\n\n                if (isSimpleObject(val = objn[key])) {\n                    rec(val, `${qualifiedName}${key}.`, { perv: node });\n                    node.resolver = resolver.accumulate;\n                } else if (val instanceof CustomResolver) {\n                    node.resolver = val.get();\n                    node.addDependencies(...val.getDependencies().map(qname => qualifiedNodeMap[qname]));\n                } else {\n                    node.resolver = resolver.identity;\n                    node.seed = val;\n                    // node.resolve();\n                }\n            }\n        }(obj, mount === null ? '' : `${mount}.`, {\n            perv: qualifiedNodeMap[mount]\n        }));\n\n        this._wholeSet = new ForeignSet(Object.keys(this.qualifiedNodeMap));\n\n        // Recalculate the model without firing the listeners\n        // @todo selective branch resolve. Currently resolve gets called even for a branch which was updated\n        resolveReqList = this.constructor.getResolvedList(root).concat(root).filter(node => node.requireResolve);\n        resolveReqList.forEach(node => node.resolve());\n        getUpstreamNodes(resolveReqList).forEach(node => node.resolve());\n        return this;\n    }\n\n    getNodeValue (prop) {\n        if (prop in this.qualifiedNodeMap) {\n            return this.qualifiedNodeMap[prop].seed;\n        }\n        return undefined;\n    }\n\n    createElectricNodeOf (props, fnSpec) {\n        const nodes = props.map(prop => this.qualifiedNodeMap[prop]),\n            eNode = new ElectricNode().addEdges(...nodes);\n\n        nodes.forEach(node => node.addElectricNode(eNode));\n        return eNode[`regListenerFor${fnSpec.type}`](fnSpec.fn);\n    }\n\n    update (...params) {\n        let changedSet,\n            upstreamNodes;\n        const\n            electricEdges = [],\n            nodes = params.map((entry) => {\n                entry[0].seed = entry[1];\n                return entry[0];\n            });\n        nodes.forEach(node => node.resolve());\n        electricEdges.push(...flat(...nodes.map(node => node.electricEdges)));\n        changedSet = new ForeignSet(nodes.map(node => node.qualifiedName));\n\n        if (!this._propagate) {\n            this.__execUniqueElectricEdges(electricEdges);\n            this._propagate = true;\n            return this;\n        }\n\n        upstreamNodes = getUpstreamNodes(nodes);\n        upstreamNodes.forEach(upstreamNode => upstreamNode.resolve());\n        changedSet.append(upstreamNodes.map(node => node.qualifiedName));\n        electricEdges.push(...flat(...upstreamNodes.map(node => node.electricEdges)));\n\n        this.__execUniqueElectricEdges(Array.from(new Set(electricEdges)), changedSet);\n        return this;\n    }\n\n    __execUniqueElectricEdges (electricEdges, changedSet) {\n        const\n            cfLstnrs = [], // current frame listeners\n            nfLstnrs = []; // next frame listeners\n        if (changedSet) {\n            const\n                differenceSet = ForeignSet.difference(this._wholeSet, changedSet),\n                entries = differenceSet.toArray();\n\n            entries.forEach(entry => this.qualifiedNodeMap[entry].repeatHead());\n        }\n\n        electricEdges.forEach((e) => {\n            cfLstnrs.push(...e.listeners.currentFrame);\n        });\n        electricEdges.forEach((e) => {\n            nfLstnrs.push(...e.listeners.nextFrame);\n        });\n\n        !this.propagationOverride.currentFrameListeners && cfLstnrs.forEach(fn => fn());\n        !this.propagationOverride.nextFrameListeners && this._schedule(nfLstnrs, { flushTarget: changedSet });\n        this.resetPropagationOverride();\n        return this;\n    }\n\n    resetNodeValue (...qnames) {\n        const nodes = qnames.map(qname => this.qualifiedNodeMap[qname]),\n            args = nodes.map(node => [node, node.seed]);\n        this.update(...args);\n        return this;\n    }\n\n    static getResolvedList (node) {\n        const resolved = [];\n        resolveDependencyOrder(node, resolved, {});\n        return resolved;\n    }\n\n    stopPropagation () {\n        this._propagate = false;\n        return this;\n    }\n\n    resetPropagationOverride () {\n        this.propagationOverride.currentFrameListeners = false;\n        this.propagationOverride.nextFrameListeners = false;\n        return this;\n    }\n\n    setPropagationOverride (key) {\n        this.propagationOverride[`${key}Listeners`] = true;\n        return this;\n    }\n\n    getNodeFromQualifiedName (qname) {\n        return this.qualifiedNodeMap[qname];\n    }\n}\n","import Graph from './graph';\nimport { CustomResolver, fetchAggregator } from './utils';\n\n/**\n * The container class for Hyperdis. Hyperdis is an enabler for observable object with few interesting features like,\n * calculated property, next frame and same frame listeners, multiple listeners etc with a dependency resolving system.\n * It internally uses a graph to hold the hierarchial relationship of a object. Model is merely a container which\n * ties all the components together.\n *\n * @todo Circular dependency detection is not present\n *\n * @example check src/index.spec.js\n * @class\n */\nclass Model {\n    constructor () {\n        this._graph = new Graph();\n        this._lockFlag = false;\n        this._reqQ = [];\n    }\n\n    /**\n     * Static method to create and init the model with an observable seed\n     *\n     * @param {Object} obj The target object which is required to be made observable\n     * @return {Model} instance of the observable object model\n     */\n    static create (obj) {\n        return new Model()._addPropInModel(null, obj);\n    }\n\n    /**\n     * Appends more observable property on the already observable instance. This mutates the original model.\n     *\n     * This function works in two mode. One being\n     * @param {String} mountPoint the property on which the new set of properties will be mounted. If its a nested\n     *                          property then the mountPoint has to be written such a way so it feels like you are\n     *                          accessing the object. If the mount point is not found then he obeservables are added in\n     *                          the root.\n     * @param {Object} The target object which is required to be made observable\n     *\n     * Another being\n     * @param {Object} The target object which is required to be made observable\n     *\n     * @return {Model} instance of the observable object model\n     */\n    append (...params) {\n        let mountPoint,\n            obj;\n\n        if (params.length === 1) {\n            mountPoint = null;\n            obj = params[0];\n        } else {\n            mountPoint = params[0];\n            obj = params[1];\n        }\n\n        this._addPropInModel(mountPoint, obj);\n        return this;\n    }\n\n    /**\n     * Creates a calculated variable from existing variable. This variable can't be updated from outside.\n     * @param {string} mountpoint property path on which the new variable will be placed\n     * @param {string} name name of the variable. If the variable could have hierarchy like `limits.start`\n     * @param {Function} fn funtion where the dependent variables are injected based on the dependency requirement\n     */\n    calculatedProp (...params) {\n        let calculationConfig,\n            customResolver,\n            varName,\n            mount,\n            fetchFn;\n\n        if (params.length > 2) {\n            mount = params[0];\n            varName = params[1];\n            fetchFn = params[2];\n        } else {\n            mount = null;\n            varName = params[0];\n            fetchFn = params[1];\n        }\n\n        calculationConfig = fetchFn(fetchAggregator);\n        customResolver = new CustomResolver(calculationConfig.fn);\n        customResolver.addDependencies(...calculationConfig.dependencies);\n\n        this._addPropInModel(mount, { [varName]: customResolver });\n        return this;\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    _addPropInModel (mountPoint, obj) {\n        this._graph.createNodesFrom(obj, mountPoint);\n        return this;\n    }\n\n    /**\n     * Register a listener in the current frame when a property or group of properties is changed.\n     *\n     * @example\n     * This function takes a single or group of property and handler which is called when any of the properties are\n     * changed.\n     * When a single property is changed the handler is called with two parameter, what was the old value of the state\n     * property and what is the new value.\n     * myState.on('range.start', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 9);\n     * // Output\n     * Value before prop change 1\n     * Value after prop change 9\n     *\n     * If a handler is registered on change of a property which has another state property as value, then the handler\n     * gets called whenever any state property connected to it gets changed\n     *\n     * myState.on('range', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 10);\n     * myState.prop('range.type.absolute', false);\n     *\n     * // Output\n     * Value before prop change\n     * range {\n     *      start: 9,\n     *      end: 5,\n     *      type: {\n     *          absolute: true\n     *      }\n     * }\n     * Value after prop change\n     * range: {\n     *      start: 10,\n     *      end: 5,\n     *      type: {\n     *          absolute: false\n     *      }\n     * }\n     * If a handler is registered with more than one property change then, the handler is called when any of the\n     * properties gets changed. In this cast the handler is called with more than one parameter: each for one state\n     * property which is registered for listening. Each parameter is of type array containing [oldValue, newValue]\n     *\n     * myState.on('range.start', 'range.end', (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * myState.prop('range.start', 12);\n     *\n     * // Output\n     * Start [10, 12]\n     * End [5, 5]\n     *\n     * myState.prop('range.end', 7);\n     *\n     * // Output\n     * Start [12, 12]\n     * End [5, 7]\n     *\n     * The on returns a function which is when called the listener registered gets unregistered\n     *\n     * let unsub = myState.on(['range.start', 'range.end'], (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * // Unsubscribe\n     * unsub()\n     *\n     * On takes an optional boolean value as the last parameter, which if passed as a true value the handler gets called\n     * during registration itself.\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    on (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed in the current stack frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'CurrFrame',\n                fn\n            });\n\n        if (instantCall) {\n            // Bar current next frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('nextFrame').resetNodeValue(...props);\n        }\n        return unsub;\n    }\n\n    /**\n     * Register a listener for the next frame when a property or group of properties is changed.\n     *\n     * @example\n     * See the examples for the on listener\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties. Here the oldvalue is last value of the last frame\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    next (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed at the tick of next animation frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'NextFrame',\n                fn\n            });\n\n        // @todo check support for this from the graph side\n        if (instantCall) {\n            // Bar current frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('currentFrame').resetNodeValue(...props);\n        }\n\n        return unsub;\n    }\n\n    /**\n     * Lock queues the request of property change and releases the change when unlock is called. This is helpful when\n     * multiple property is getting called and the model listeners are to be fired once at the end of update.\n     *\n     * @return {Model} instance of the model\n     */\n    lock () {\n        this._lockFlag = true;\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * Unlock unleashes the change done after the lock was called.\n\n     * @return {Model} instance of the model\n     */\n    unlock () {\n        this._lockFlag = false;\n        this.setProp(...this._reqQ);\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * This acts as getter and setter. If the function is called by passing only one argument, it retrieve the value\n     * associated with the property. If the same function is called using two parameters, first one being the property\n     * and second one being the value, then the value is set for the property and the handlers are called (if any)\n     * which got registered using the on function\n     *\n     * Getter\n     * @param {string} prop property path whose value to be retrieved\n     * @return {Object} value of the property at the time of call\n     *\n     * Setter\n     * @param {string} property property path whose value to be ser\n     * @return {Model} instance of the model\n     */\n    prop (...params) {\n        let prop,\n            val,\n            len;\n\n        switch (len = params.length) {\n        case 1:\n            prop = params[0];\n            break;\n\n        case 2:\n            prop = params[0];\n            val = params[1];\n            break;\n\n        default:\n            return this;\n        }\n\n        if (len === 2) {\n            this._lockFlag ? this._reqQ.push([prop, val]) : this.setProp([prop, val]);\n            return this;\n        }\n\n        return this._graph.getNodeValue(prop);\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    setProp (...props) {\n        // Filter out the calculated variables, so that it cant be changed from outside\n        // @todo if a node is not leafValue, and change is called, ignore it too\n        // props = props.filter(prop => !(VirtualObj.walkTill(prop[0].split('.'), this._vObj).leafValue()\n        //     instanceof CalculatedVar));\n\n        if (props.length === 0) {\n            return this;\n        }\n\n        this._graph.update(...props.map(prop => [this._graph.getNodeFromQualifiedName(prop[0]), prop[1]]));\n        return this;\n    }\n\n    /**\n     * Retrieves the graph representation of the object\n     * @return {Graph} instance of the graph associated to the model\n     */\n    graph () {\n        return this._graph;\n    }\n\n    /**\n     * Get serialized data from the model\n     *\n     * @return {Object} Serialized data\n     */\n    serialize () {\n        return this._graph.root.seed;\n    }\n}\n\nexport default Model;\n","import Model from './model';\n\nexport default Model;\n","const Muze = require('./muze');\n\nmodule.exports = Muze.default ? Muze.default : Muze;\n","'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\nfunction ContainerManager(parentContainer, isBrowserLess, maxContainers) {\n    var svg;\n\n    maxContainers = maxContainers > 5 ? maxContainers : 5;\n    maxContainers = maxContainers < 20 ? maxContainers : 20;\n\n    this.maxContainers = maxContainers;\n    this.first = null;\n    this.last = null;\n    this.containers = {};\n    this.length = 0;\n    this.rootNode = parentContainer;\n\n    if (isBrowserLess) {\n        svg = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'xlink', 'http://www.w3.org/1999/xlink');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'height', '0');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'width', '0');\n        this.svgRoot = svg;\n        this.rootNode.appendChild(svg);\n    }\n}\n\nContainerManager.prototype.get = function (style) {\n    var diff,\n        key,\n        containerObj,\n        containers = this.containers,\n        len = this.length,\n        max = this.maxContainers,\n        keyStr = '';\n\n    for (key in slLib.supportedStyle) {\n        if (style[key] !== undefined) {\n            keyStr += slLib.supportedStyle[key] + ':' + style[key] + ';';\n        }\n    }\n\n    if (!keyStr) {\n        return false;\n    }\n\n    if (containerObj = containers[keyStr]) {\n        if (this.first !== containerObj) {\n            containerObj.prev && (containerObj.prev.next = containerObj.next);\n            containerObj.next && (containerObj.next.prev = containerObj.prev);\n            containerObj.next = this.first;\n            containerObj.next.prev = containerObj;\n            this.last === containerObj && (this.last = containerObj.prev);\n            containerObj.prev = null;\n            this.first = containerObj;\n        }\n    } else {\n        if (len >= max) {\n            diff = len - max + 1;\n            // +1 is to remove an extra entry to make space for the new container to be added.\n            while (diff--) {\n                this.removeContainer(this.last);\n            }\n        }\n        containerObj = this.addContainer(keyStr);\n    }\n\n    return containerObj;\n};\n\nContainerManager.prototype.addContainer = function (keyStr) {\n    var node, container;\n\n    this.containers[keyStr] = container = {\n        next: null,\n        prev: null,\n        node: null,\n        ellipsesWidth: 0,\n        lineHeight: 0,\n        dotWidth: 0,\n        avgCharWidth: 4,\n        keyStr: keyStr,\n        charCache: {}\n    };\n\n    // Since the container objects are arranged from most recent to least recent order, we need to add the new\n    // object at the beginning of the list.\n    container.next = this.first;\n    container.next && (container.next.prev = container);\n    this.first = container;\n    if (!this.last) {\n        this.last = container;\n    }\n    this.length += 1;\n\n    node = container.node = doc.createElement('div');\n    this.rootNode.appendChild(node);\n\n    if (documentSupport.isIE && !documentSupport.hasSVG) {\n        node.style.setAttribute('cssText', keyStr);\n    } else {\n        node.setAttribute('style', keyStr);\n    }\n\n    node.setAttribute('aria-hidden', 'true');\n    node.setAttribute('role', 'presentation');\n    node.style.display = 'inline-block';\n\n    node.innerHTML = slLib.testStrAvg; // A test string.\n    container.lineHeight = node.offsetHeight;\n    container.avgCharWidth = node.offsetWidth / 3;\n\n    if (documentSupport.isBrowserLess) {\n        node = container.svgText = doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n        node.setAttribute('style', keyStr);\n        this.svgRoot.appendChild(node);\n\n        node.textContent = slLib.testStrAvg; // A test string.\n        container.lineHeight = node.getBBox().height;\n        container.avgCharWidth = (node.getBBox().width - SVG_BBOX_CORRECTION) / 3;\n\n        node.textContent = '...';\n        container.ellipsesWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n        node.textContent = '.';\n        container.dotWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n    } else {\n        node.innerHTML = '...';\n        container.ellipsesWidth = node.offsetWidth;\n        node.innerHTML = '.';\n        container.dotWidth = node.offsetWidth;\n        node.innerHTML = '';\n    }\n\n    return container;\n};\n\nContainerManager.prototype.removeContainer = function (cObj) {\n    var keyStr = cObj.keyStr;\n\n    if (!keyStr || !this.length || !cObj) {\n        return;\n    }\n    this.length -= 1;\n\n    cObj.prev && (cObj.prev.next = cObj.next);\n    cObj.next && (cObj.next.prev = cObj.prev);\n    this.first === cObj && (this.first = cObj.next);\n    this.last === cObj && (this.last = cObj.prev);\n\n    cObj.node.parentNode.removeChild(cObj.node);\n\n    delete this.containers[keyStr];\n};\n\nContainerManager.prototype.dispose = function () {\n    var key,\n        containers = this.containers;\n\n    this.maxContainers = null;\n    for (key in containers) {\n        this.removeContainer(containers[key]);\n    }\n\n    this.rootNode.parentNode.removeChild(this.rootNode);\n\n    this.rootNode = null;\n    this.first = null;\n    this.last = null;\n};\n\nmodule.exports = ContainerManager;","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  scale.invertExtent = function(r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1, a, b, t,\n        hiIndex;\n    values.push(values[n] + this.step());\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo));\n    hiIndex = getClosestIndexOf(values, hi);\n    b = lo===hi ? a : Math.max(a, hiIndex - 1);\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    if (reverse) t = a, a = n - b, b = n - t; // map + swap\n    return (a > b) ? undefined : domain().slice(a, b+1);\n  };\n\n  scale.invert = function (r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1,\n        a,\n        t;\n\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo, 'left'));\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    return domain()[reverse ? n - a : a];\n  }\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n\nfunction getClosestIndexOf (arr, value, side) {\n  var low = 0,\n      arrLen = arr.length,\n      high = arrLen - 1,\n      highVal,\n      mid,\n      d1,\n      d2;\n\n  while (low < high) {\n      mid = Math.floor((low + high) / 2);\n      d1 = Math.abs(arr[mid] - value);\n      d2 = Math.abs(arr[mid + 1] - value);\n\n      if (d2 <= d1) {\n          low = mid + 1;\n      }\n      else {\n          high = mid;\n      }\n  }\n\n  if (!side) {\n      return high;\n  }\n\n  highVal = arr[high];\n  if (highVal === value) {\n      return high;\n  } else if (highVal > value) {\n      if (high === 0) { return high; }\n      return side === 'left'? high - 1 : high;\n  } else {\n      if (high === arr.length - 1) { return high; }\n      return side === 'left'? high : high + 1;\n  }\n}","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy: function(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n}\n\nfunction rgb_formatRgb() {\n  var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n  return (a === 1 ? \"rgb(\" : \"rgba(\")\n      + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n      + (a === 1 ? \")\" : \", \" + a + \")\");\n}\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"hsl(\" : \"hsla(\")\n        + (this.h || 0) + \", \"\n        + (this.s || 0) * 100 + \"%, \"\n        + (this.l || 0) * 100 + \"%\"\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) return hcl2lab(o);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\nfunction hcl2lab(o) {\n  if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n  var h = o.h * deg2rad;\n  return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return hcl2lab(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal.js\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nexport function FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n  this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n  this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n  this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width === undefined ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal.js\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"],\n  minus: \"-\"\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal.js\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto.js\";\nimport formatRounded from \"./formatRounded.js\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent.js\";\nimport formatGroup from \"./formatGroup.js\";\nimport formatNumerals from \"./formatNumerals.js\";\nimport formatSpecifier from \"./formatSpecifier.js\";\nimport formatTrim from \"./formatTrim.js\";\nimport formatTypes from \"./formatTypes.js\";\nimport {prefixExponent} from \"./formatPrefixAuto.js\";\nimport identity from \"./identity.js\";\n\nvar map = Array.prototype.map,\n    prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping === undefined || locale.thousands === undefined ? identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + \"\"),\n      currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n      currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n      decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n      numerals = locale.numerals === undefined ? identity : formatNumerals(map.call(locale.numerals, String)),\n      percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n      minus = locale.minus === undefined ? \"-\" : locale.minus + \"\",\n      nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision === undefined ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : minus) : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(date - date.getMilliseconds());\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationSecond} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration\";\n\nvar hour = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","export default function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n}\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"./colors\";\n\nexport default colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n","import colors from \"./colors\";\n\nexport default colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}\n","import colors from \"./colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors.js\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors.js\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors.js\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors.js\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors.js\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors.js\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors.js\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors.js\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import colors from \"../colors.js\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export const UNIT_GLOBAL_NAMESPACE = 'app.units';\nexport const UNIT_LOCAL_NAMESPACE = 'local.units';\nexport const LAYER_LOCAL_NAMESPACE = 'local.layers';\nexport const LAYER_GLOBAL_NAMESPACE = 'app.layers';\nexport const GROUP_GLOBAL_NAMESPACE = 'app.group';\nexport const GROUP_LOCAL_NAMESPACE = 'local.group';\nexport const CANVAS_LOCAL_NAMESPACE = 'local.canvas';\nexport const CANVAS_GLOBAL_NAMESPACE = 'app.canvas';\n\n","const ReservedFields = {\n    ROW_ID: '__id__'\n};\n\nexport default ReservedFields;\n","const CommonProps = {\n    ACTION_INF: 'actionInf',\n    ON_LAYER_DRAW: 'onLayerDraw',\n    MATRIX_CREATED: 'matrixCreated'\n};\n\nexport default CommonProps;\n","export const COORD_TYPES = {\n    POLAR: 'polar',\n    CARTESIAN: 'cartesian'\n};\nexport const DATA_TYPE = {\n    FUNCTION: 'function',\n    STRING: 'string',\n    NUMBER: 'number',\n    BOOLEAN: 'Boolean'\n};\nexport const SORT_ORDER_ASCENDING = 'asc';\nexport const SORT_ORDER_DESCENDING = 'desc';\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickTransform = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"))\n        .style('transform', tickTransform);\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.tickTransform = function(_) {\n    return arguments.length ? (tickTransform = _, axis) : tickTransform;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {\n          var ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","export var slice = Array.prototype.slice;\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","import { defaultValue } from '../common-utils';\n\nconst sortSelection = (dataObjects, updateData, sortFn) =>\n    (a, b) => {\n        const kA = a[0];\n        const kB = b[0];\n        return sortFn([a[0], dataObjects.get(kA), updateData.get(kA)], [kB, dataObjects.get(kB), updateData.get(kB)]);\n    };\n\n/**\n * This class represents a selection applied on a data array.\n *\n * @class Selection\n */\nclass Selection {\n    /**\n     * Creates an instance of Selection.\n     * @param {Array<DataObject>} data Array of DataObjects.\n     * @memberof Selection\n     */\n    constructor (idGetter) {\n        this._dataObjects = new Map();\n        this._updateData = new Map();\n        this._enterData = new Map();\n        this._exitData = new Map();\n        this._idGetter = idGetter;\n    }\n\n    /**\n     * This method is used to supply seed data to a selection.\n     *\n     * @param {Array} newData Seed data to create the enter selection.\n     * @param {Functon | undefined } idGetter This function is used to uniqely identify a data entry.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    data (newData) {\n        const entryData = new Map();\n        const exitdata = new Map();\n        const tempMap = new Map();\n        const duplicateData = new Map();\n        const updatedData = this._updateData;\n        const idGetter = this._idGetter;\n\n        newData.forEach((...params) => {\n            const key = idGetter ? idGetter(...params) : params[1];\n            if (!tempMap.has(key)) {\n                tempMap.set(key, params[0]);\n            } else {\n                duplicateData.push(key, params[0]);\n            }\n        });\n\n        let val;\n        // prepare enter data\n        let entries = tempMap.entries();\n        while (val = entries.next().value) {\n            if (!updatedData.has(val[0])) {\n                entryData.set(val[0], val[1]);\n            } else {\n                updatedData.set(val[0], val[1]);\n            }\n        }\n        // prepare exit data\n        entries = updatedData.entries();\n        while (val = entries.next().value) {\n            if (!tempMap.has(val[0])) {\n                exitdata.set(val[0], val[1]);\n            }\n        }\n\n        // put duplicate data to exit list\n        entries = duplicateData.entries();\n        while (val = entries.next().value) {\n            exitdata.set(val[0], val[1]);\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updateData = updatedData;\n        newSelection._dataObjects = this._dataObjects;\n        newSelection._enterData = entryData;\n        newSelection._exitData = exitdata;\n\n        return newSelection;\n    }\n\n    /**\n     * Applies the supplied callback to each data element\n     * and returns a new selection.\n     *\n     * @param {Function} callback Callback to execute on each item.\n     * @return {Selection} New selection with data created using callback.\n     * @memberof Selection\n     */\n    append (callback) {\n        let val;\n        const dataObjects = new Map();\n        const data = new Map();\n        const mode = defaultValue(this._mode, 'update');\n        const currentData = this[`_${mode}Data`];\n        const entries = currentData.entries();\n\n        while (val = entries.next().value) {\n            dataObjects.set(val[0], callback(val[1]));\n            data.set(val[0], val[1]);\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updateData = data;\n        newSelection._dataObjects = dataObjects;\n\n        return newSelection;\n    }\n\n     /**\n     * This method returns an enter selection that\n     * allows or update operations.\n     *\n     * @return {Selection} Instance of enter selection.\n     * @memberof Selection\n     */\n    enter () {\n        this._mode = 'enter';\n        return this;\n    }\n\n    /**\n     * Returns a selection with exit data.\n     *\n     * @return {Selection} Instance of selection.\n     * @memberof Selection\n     */\n    exit () {\n        this._mode = 'exit';\n        return this;\n    }\n\n     /**\n     * This method merges the data of one selection with another.\n     *\n     * @param {Selection} selection Instance of selection.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    merge (target) {\n        const mergedObjects = new Map();\n        const mergedData = new Map();\n        let val;\n        let entries;\n\n        // merge Object and data present in this selection\n        entries = this._updateData.entries();\n        while (val = entries.next().value) {\n            if (!this._exitData.has(val[0])) {\n                mergedData.set(val[0], val[1]);\n                mergedObjects.set(val[0], this._dataObjects.get(val[0]));\n            }\n        }\n\n        // merge object from target selection\n        entries = target._updateData.entries();\n        while (val = entries.next().value) {\n            if (!(mergedData.has(val[0]) || target._exitData.has(val[0]))) {\n                mergedData.set(val[0], val[1]);\n                mergedObjects.set(val[0], target._dataObjects.get(val[0]));\n            }\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updateData = mergedData;\n        newSelection._dataObjects = mergedObjects;\n\n        return newSelection;\n    }\n\n    each (fn) {\n        let val;\n        const entries = this._dataObjects.entries();\n\n        while (val = entries.next().value) {\n            fn(val[1], this._updateData.get(val[0]), val[0]);\n        }\n    }\n\n    map (fn) {\n        const newdata = new Map();\n        let val;\n        const entries = this._dataObjects.entries();\n\n        while (val = entries.next().value) {\n            newdata.set(val[0], fn(val[1], this._updateData.get(val[0]), val[0]));\n        }\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updateData = this._updateData;\n        newSelection._dataObjects = newdata;\n\n        return newSelection;\n    }\n\n    remove () {\n        const mode = defaultValue(this._mode, 'update');\n        const currentData = this[`_${mode}Data`];\n\n        currentData.clear();\n\n        return this;\n    }\n\n    sort (sortFn) {\n        const updateData = this._updateData;\n        const dataObjects = this._dataObjects;\n        const sortSel = sortSelection(dataObjects, updateData, sortFn);\n\n        this._updateData = new Map([...updateData.entries()].sort(sortSel));\n        this._dataObjects = new Map([...dataObjects.entries()].sort(sortSel));\n        return this;\n    }\n\n    /**\n     *  Gets the object bound to a class\n     *\n     * @return {Object} current data set bound to the class\n     * @memberof Selection\n     */\n    getObjects () {\n        let val;\n        const objects = [];\n        const dataObjects = this._dataObjects;\n        // select the data to create object\n        const mode = defaultValue(this._mode, 'update');\n        const currentData = this[`_${mode}Data`];\n        const entries = currentData.entries();\n\n        while (val = entries.next().value) {\n            if (dataObjects.has(val[0])) {\n                objects.push(dataObjects.get(val[0]));\n            }\n        }\n\n        return objects;\n    }\n}\n\nexport default Selection;\n","export const ORDER_ASCENDING = 'ascending';\nexport const ORDER_DESCENDING = 'descending';\nexport const ORDER_NONE = 'none';\nexport const OFFSET_DIVERGING = 'diverging';\nexport const OFFSET_NONE = 'none';\nexport const OFFSET_EXPAND = 'expand';\nexport const OFFSET_WIGGLE = 'wiggle';\n","/* global window, requestAnimationFrame, cancelAnimationFrame */\nimport { FieldType, DimensionSubtype, DateTimeFormatter, DM_DERIVATIVES, default as DataModel } from 'datamodel';\nimport {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom\n} from 'd3-axis';\nimport {\n    symbolCircle,\n    symbolCross,\n    symbolDiamond,\n    symbolSquare,\n    symbolStar,\n    symbolWye,\n    symbolTriangle,\n    symbol,\n    stack as d3Stack,\n    stackOffsetDiverging,\n    stackOrderNone,\n    stackOrderAscending,\n    stackOrderDescending,\n    stackOffsetNone,\n    stackOffsetExpand,\n    stackOffsetWiggle,\n    pie,\n    arc,\n    line,\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    area\n} from 'd3-shape';\nimport { scaleBand } from 'd3-scale';\nimport { nest } from 'd3-collection';\nimport {\n    interpolate,\n    interpolateRgb,\n    piecewise,\n    interpolateNumber,\n    interpolateHslLong\n} from 'd3-interpolate';\nimport {\n    easeCubic,\n    easeBounce,\n    easePoly,\n    easeBack,\n    easeCircle,\n    easeLinear,\n    easeElastic\n} from 'd3-ease';\nimport {\n   color,\n   rgb,\n   hsl\n} from 'd3-color';\nimport { voronoi } from 'd3-voronoi';\nimport { dataSelect } from './DataSystem';\nimport { DATA_TYPE, SORT_ORDER_ASCENDING, SORT_ORDER_DESCENDING } from './enums';\nimport * as STACK_CONFIG from './enums/stack-config';\n\nconst { CATEGORICAL, TEMPORAL } = DimensionSubtype;\nconst { STRING, FUNCTION } = DATA_TYPE;\nconst { InvalidAwareTypes } = DataModel;\nconst HTMLElement = window.HTMLElement;\n\nconst isSimpleObject = (obj) => {\n    let token;\n    if (typeof obj === 'object') {\n        if (obj === null) { return false; }\n        token = Object.prototype.toString.call(obj);\n        if (token === '[object Object]') {\n            return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n        }\n    }\n    return false;\n};\n\n/**\n * Returns unique id\n * @return {string} Unique id string\n */\nconst\n    getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Deep copies an object and returns a new object.\n * @param {Object} o Object to clone\n * @return {Object} New Object.\n */\nconst clone = (o) => {\n    const output = {};\n    let v;\n    for (const key in o) {\n        if ({}.hasOwnProperty.call(o, key)) {\n            v = o[key];\n            output[key] = isSimpleObject(v) ? clone(v) : v;\n        }\n    }\n    return output;\n};\n\n/**\n* Checks the existence of keys in an object\n* @param {Array} keys Set of keys which are to be checked\n* @param {Object} obj whose keys are checked from the set of keys provided\n* @return {Object} Error if the keys are absent, or the object itself\n*/\nconst checkExistence = (keys, obj) => {\n    const nonExistentKeys = [];\n    keys.forEach((key) => {\n        if (key in obj) {\n            return;\n        }\n        nonExistentKeys.push(key);\n    });\n    return nonExistentKeys;\n};\n\nconst sanitizeIP = {\n    typeObj: (keys, obj) => {\n        if (typeof obj !== 'object') {\n            return Error('Argument type object expected');\n        }\n\n        const nonExistentKeys = checkExistence(keys, obj);\n        if (nonExistentKeys.length) {\n            return Error(`Missing keys from parameter ${nonExistentKeys.join(', ')}`);\n        }\n        return obj;\n    },\n\n    /* istanbul ignore next */ htmlElem: (elem) => {\n        if (!(elem instanceof HTMLElement)) {\n            return Error('HTMLElement required');\n        }\n        return elem;\n    }\n};\n\n/**\n * Gets the maximum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Maximum value\n */\nconst getMax = (data, field) => Math.max(...data.map(d => d[field]));\n\n/**\n * Gets the minimum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Minimum value\n */\nconst getMin = (data, field) => Math.min(...data.map(d => d[field]));\n\n/**\n * Gets the domain from the data based on the field name and type of field\n * @param  {Array.<Object> | Array.<Array>} data       Data Array\n * @param  {Array.<string>} fields    Array of fields from where the domain will be calculated\n * @param {string} fieldType Type of field - nominal, quantitiative, temporal.\n * @return {Array} Usually contains a min and max value if field is quantitative or\n * an array of values if field type is nominal or ordinal\n */\nconst getDomainFromData = (data, fields, fieldType) => {\n    let domain;\n    const domArr = [];\n    data = data[0] instanceof Array ? data : [data];\n    switch (fieldType) {\n    case CATEGORICAL:\n        domain = [].concat(...data.map(arr => arr.map(d => d[fields[0]]).filter(d => d !== undefined)));\n        break;\n    default:\n        for (let i = 0, len = data.length; i < len; i++) {\n            const arr = data[i];\n            const [field0, field1] = fields;\n            const arr0 = arr.filter(d => !isNaN(d[field0]));\n            const arr1 = arr.filter(d => !isNaN(d[field1]));\n            if (arr0.length || arr1.length) {\n                const firstMin = getMin(arr0, field0);\n                const secondMin = getMin(arr1, field1);\n                const firstMax = getMax(arr0, field0);\n                const secondMax = getMax(arr1, field1);\n                domArr.push([Math.min(firstMin, secondMin), Math.max(firstMax, secondMax)]);\n            }\n        }\n        domain = domArr.length ? [Math.min(...domArr.map(d => d[0])), Math.max(...domArr.map(d => d[1]))] : [];\n        break;\n    }\n    return domain;\n};\n\nconst sanitizeDomainWhenEqual = (domain) => {\n    if (domain[0] === domain[1]) {\n        domain[0] = domain[0] > 0 ? 0 : domain[0];\n        domain[1] = domain[1] > 0 ? domain[1] : 0;\n    }\n    return domain;\n};\n\n/**\n * Union Domain values\n * @param {Array.<Array>} domains Array of domain values\n * @param {string} fieldType type of field - dimension,measure or datetime.\n * @return {Array} Unioned domain of all domain values.\n */\nconst unionDomain = (domains, fieldType) => {\n    let domain = [];\n    domains = domains.filter(dom => dom && dom.length);\n    if (domains.length) {\n        if (fieldType === CATEGORICAL) {\n            domain = [].concat(...domains);\n        } else {\n            domain = [Math.min(...domains.map(d => d[0])), Math.max(...domains.map(d => d[1]))];\n        }\n    }\n\n    return domain;\n};\n\nconst symbolFns = {\n    circle: symbolCircle,\n    cross: symbolCross,\n    diamond: symbolDiamond,\n    square: symbolSquare,\n    star: symbolStar,\n    wye: symbolWye,\n    triangle: symbolTriangle\n};\n\nconst easeFns = {\n    cubic: easeCubic,\n    bounce: easeBounce,\n    linear: easeLinear,\n    elastic: easeElastic,\n    back: easeBack,\n    poly: easePoly,\n    circle: easeCircle\n};\n\n/**\n * Returns the maximum or minimum points of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @param {string} minOrMax minimum or maximum.\n * @return {Object} Minimum or maximum point.\n */\nconst getExtremePoint = (points, compareValue, minOrMax) => {\n    let extremePoint;\n    let point;\n    const len = points.length;\n    let minOrMaxVal = minOrMax === 'max' ? -Infinity : Infinity;\n    let val;\n\n    for (let i = 0; i < len; i++) {\n        point = points[i];\n        val = point[compareValue];\n        if (minOrMax === 'min' ? val < minOrMaxVal : val > minOrMaxVal) {\n            minOrMaxVal = val;\n            extremePoint = point;\n        }\n    }\n\n    return extremePoint;\n};\n\n/**\n * Returns the minimum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Minimum point.\n */\nconst getMinPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'min');\n\n/**\n * Returns the maximum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Maximum point.\n */\nconst getMaxPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'max');\n\n/**\n * Gets the index of the closest value of the given value from the array.\n * @param {Array} arr Array of values\n * @param {number} value Value from which the nearest value will be calculated.\n * @param {string} side side property.\n * @return {number} index of the closest value\n */\n/* istanbul ignore next */const getClosestIndexOf = (arr, value, side) => {\n    let low = 0;\n    const arrLen = arr.length;\n    let high = arrLen - 1;\n\n    let mid;\n    let d1;\n    let d2;\n\n    while (low < high) {\n        mid = Math.floor((low + high) / 2);\n        d1 = Math.abs(arr[mid] - value);\n        d2 = Math.abs(arr[mid + 1] - value);\n\n        if (d2 <= d1) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n\n    if (!side) {\n        return high;\n    }\n\n    const highVal = arr[high];\n    if (highVal === value) {\n        return high;\n    } else if (highVal > value) {\n        if (high === 0) { return high; }\n        return side === 'left' ? high - 1 : high;\n    }\n    if (high === arr.length - 1) { return high; }\n    return side === 'left' ? high : high + 1;\n};\n\nconst getNearestValue = (data, key) => {\n    const filterData = data.filter(d => typeof d === 'number');\n    return filterData[getClosestIndexOf(filterData, key)];\n};\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst getWindow = () => window;\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst reqAnimFrame = (() => requestAnimationFrame)();\n\nconst cancelAnimFrame = (() => cancelAnimationFrame)();\n\n/**\n * Capitalizes the first letter of the word\n * @param {string} text word\n * @return {string} Capitalized word\n */\nconst capitalizeFirst = (text) => {\n    text = text.toLowerCase();\n\n    return text.replace(/\\w\\S*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1));\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst unique = arr => ([...new Set(arr)]);\n\n/**\n * Gets the minimum difference between two consecutive numbers  in an array.\n * @param {Array} arr Array of numbers\n * @param {number} index index of the value\n * @return {number} minimum difference between values\n */\n/* istanbul ignore next */ const getMinDiff = (arr, index) => {\n    let diff;\n    let uniqueVals;\n    if (index !== undefined) {\n        uniqueVals = unique(arr.map(d => d[index]));\n    } else {\n        uniqueVals = unique(arr);\n    }\n    if (uniqueVals.length > 1) {\n        diff = Math.abs(uniqueVals[1] - uniqueVals[0]);\n        for (let i = 2, len = uniqueVals.length; i < len; i++) {\n            diff = Math.min(diff, Math.abs(uniqueVals[i] - uniqueVals[i - 1]));\n        }\n    } else {\n        diff = uniqueVals[0];\n    }\n\n    return diff;\n};\n\n/**\n * Returns the class name appended with a given id.\n * @param {string} cls class name\n * @param {string} id unique identifier\n * @param {string} prefix string needed to add before the classname\n * @return {string} qualified class name\n */\n/* istanbul ignore next */const getQualifiedClassName = (cls, id, prefix) => {\n    cls = cls.replace(/^\\.*/, '');\n    return [`${prefix}-${cls}`, `${prefix}-${cls}-${id}`];\n};\n\n/**\n * This method is used to set the default value for variables\n * without sullying the code with conditional statements.\n *\n * @export\n * @param {any} param The parameter to test.\n * @param {any} value The default value to assign.\n * @return {any} The value.\n */\n/* istanbul ignore next */ const defaultValue = (param, value) => {\n    if (typeof param === 'undefined' || (typeof param === 'object' && !param)) {\n        return value;\n    }\n    return param;\n};\n\n/**\n * DESCRIPTION TODO\n *\n * @export\n * @param {Object} graph graph whose dependency order has to be generated\n * @return {Object}\n */\nconst getDependencyOrder = (graph) => {\n    const dependencyOrder = [];\n    const visited = {};\n    const keys = Object.keys(graph);\n    /**\n     * DESCRIPTION TODO\n     *\n     * @export\n     * @param {Object} name\n     * @return {Object}\n     */\n    const visit = (name) => {\n        if (dependencyOrder.length === keys.length) {\n            return true;\n        }\n        visited[name] = true;\n        const edges = graph[name];\n        for (let e = 0; e < edges.length; e++) {\n            const dep = edges[e];\n            if (!visited[dep]) {\n                visit(dep);\n            }\n        }\n\n        dependencyOrder.push(name);\n        return false;\n    };\n\n    for (let i = 0; i < keys.length; i++) {\n        if (visit(keys[i], i)) break;\n    }\n\n    return dependencyOrder;\n};\n\n/**\n * Iterates over the properties of an object and applies the function\n *\n * @param {any} obj object to be iterated upon\n * @param {any} fn  function to be applied on it\n */\nconst objectIterator = (obj, fn) => {\n    for (const key in obj) {\n        if (Object.hasOwnProperty.call(obj, key)) {\n            fn(key, obj);\n        }\n    }\n};\n\n/**\n * This class creates a d3 voronoi for retrieving the nearest neighbour of any point from a set of two\n * dimensional points\n * @class Voronoi\n */\n/* istanbul ignore next */ class Voronoi {\n    /**\n     * Initialize the voronoi with the data given.\n     * @param {Array.<Object>} data Array of points.\n     */\n    constructor (data = []) {\n        this._voronoi = voronoi().x(d => d.x).y(d => d.y);\n        this.data(data);\n    }\n\n    /**\n     * Sets the data to voronoi\n     * @param {Array.<Object>} data Array of objects.\n     * @return {Voronoi} Instance of voronoi.\n     */\n    data (data) {\n        if (data) {\n            this._voronoiFn = this._voronoi(data);\n        }\n        return this;\n    }\n\n    /**\n     * Finds the closest point to the x and y position given.\n     * @param {number} x x value\n     * @param {number} y y value\n     * @param {number} radius search radius.\n     * @return {Object} Details of the nearest point.\n     */\n    find (x, y, radius) {\n        return this._voronoiFn.find(x, y, radius);\n    }\n}\n\nconst getObjProp = (obj, ...fields) => {\n    if (obj === undefined || obj === null) {\n        return obj;\n    }\n    let retObj = obj;\n    for (let i = 0, len = fields.length; i < len; i++) {\n        retObj = retObj[fields[i]];\n        if (retObj === undefined || retObj === null) {\n            break;\n        }\n    }\n    return retObj;\n};\n\n/**\n * Sanitize an input number / string mixed number. Currently dot in the no is not supported.\n *\n * @param {number | string} val pure number or string mixed number\n * @return {number | null}  Number if it can be extracted. Otherwise null\n */\nconst intSanitizer = (val) => {\n    const arr = val.toString().match(/(\\d+)(px)*/g);\n    if (!arr) {\n        // If only characters are passed\n        return null;\n    }\n\n    return parseInt(arr[0], 10);\n};\n\nconst generateGetterSetters = (context, props) => {\n    Object.entries(props).forEach((propInfo) => {\n        const prop = propInfo[0];\n        const { sanitization, preset, onset, typeChecker, defaultValue: defVal } = propInfo[1];\n        const prototype = context.constructor.prototype;\n        if (!(Object.hasOwnProperty.call(prototype, prop))) {\n            if (defVal) {\n                context[`_${prop}`] = defVal;\n            }\n            context[prop] = (...params) => {\n                if (params.length) {\n                    let value = params[0];\n                    if (sanitization) {\n                        value = sanitization(context, params[0], context[`_${prop}`]);\n                    }\n                    if (preset) {\n                        preset(context, value);\n                    }\n                    if (typeChecker && !typeChecker(value)) {\n                        return context[`_${prop}`];\n                    }\n                    context[`_${prop}`] = value;\n                    if (onset) {\n                        onset(context, value);\n                    }\n                    return context;\n                } return context[`_${prop}`];\n            };\n        }\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} prop\n */\nconst getArraySum = (arr, prop) => arr.reduce((total, elem) => {\n    total += prop ? elem[prop] : elem;\n    return total;\n}, 0);\n\n/**\n *\n *\n * @param {*} arr1\n * @param {*} arr2\n *\n */\nconst arraysEqual = (arr1, arr2) => {\n    if (arr1.length !== arr2.length) { return false; }\n    for (let i = arr1.length; i >= 0; i--) {\n        if (arr1[i] !== arr2[i]) { return false; }\n    }\n\n    return true;\n};\n\n/* eslint valid-typeof:0 */\n/**\n * Returns a validation function which can be used to validate variables against a type and value\n *\n * @param {any} type type of value that the object should have\n * @return {Object} validation function\n */\nconst isEqual = type => (oldVal, newVal) => {\n    if (type === 'Array') {\n        if (!oldVal) {\n            return false;\n        }\n        return arraysEqual(oldVal, newVal);\n    } else if (type === 'Object') {\n        return Object.is(oldVal, newVal);\n    } return oldVal === newVal;\n};\n\n/**\n * Description @todo\n *\n * @param {any} transactionModel @todo\n * @param {any} transactionEndpoint @todo\n * @param {any} transactionItems @todo\n * @return {any} @todo\n */\nconst enableChainedTransaction = (transactionModel, transactionEndpoint, transactionItems) =>\n    transactionItems.forEach(item => transactionModel\n        .registerImmediateListener(item, ([, newVal]) => transactionEndpoint[item](newVal)));\n\n/**\n * Chceks if the element is istanceof HTMLElement\n *\n * @param {Object} elem any JS Object\n */\nconst isHTMLElem = elem => elem instanceof HTMLElement;\n\nconst ERROR_MSG = {\n    INTERFACE_IMPL: 'Method not implemented'\n};\n\n/**\n * Merges the sink object in the source by recursively iterating through the object properties\n * @param {Object} source Source Object\n * @param {Object} sink Sink Object\n * @return {Object} Merged object\n */\nconst mergeRecursive = (source, sink) => {\n    for (const prop in sink) {\n        if (isSimpleObject(source[prop]) && isSimpleObject(sink[prop])) {\n            mergeRecursive(source[prop], sink[prop]);\n        } else if (sink[prop] instanceof Object && sink[prop].constructor === Object) {\n            source[prop] = {};\n            mergeRecursive(source[prop], sink[prop]);\n        } else {\n            source[prop] = sink[prop];\n        }\n    }\n    return source;\n};\n\n/**\n * Creates a selection set from a data set with corresponding attributes\n *\n * @export\n * @param {Selection} sel contains previous selection\n * @param {Object} appendObj Object to be appended\n * @param {Array} data Data based on which the selection is entered/updated/removed\n * @param {Object} [attrs={}] Attributes to be set on the data\n * @return {Selection} Merged selection\n */\nconst createSelection = (sel, appendObj, data, idFn) => {\n    let selection = sel || dataSelect(idFn);\n\n    selection = selection.data(data);\n\n    const enter = selection.enter().append(appendObj);\n    const mergedSelection = enter.merge(selection);\n\n    const exitSelection = selection.exit();\n    exitSelection.getObjects().forEach(inst => inst.remove());\n    exitSelection.remove();\n    return mergedSelection;\n};\n\nconst interpolateArray = (data, fitCount) => {\n    const linearInterpolate = function (before, after, atPoint) {\n        return before + (after - before) * atPoint;\n    };\n    const newData = [];\n    const springFactor = ((data.length - 1) / (fitCount - 1));\n    newData[0] = data[0]; // for new allocation\n    for (let i = 1; i < fitCount - 1; i++) {\n        const tmp = i * springFactor;\n        const before = (Math.floor(tmp)).toFixed();\n        const after = (Math.ceil(tmp)).toFixed();\n        const atPoint = tmp - before;\n        newData[i] = linearInterpolate(data[before], data[after], atPoint);\n    }\n    newData[fitCount - 1] = data[data.length - 1]; // for new allocation\n    return newData;\n};\n\n/**\n *\n *\n * @param {*} fn\n */\nconst nextFrame = (fn) => {\n    setTimeout(() => {\n        fn();\n    }, 0);\n};\n\n/**\n *\n *\n * @param {*} angle\n */\nconst angleToRadian = angle => angle * Math.PI / 180;\n\n/**\n *\n *\n * @param {*} newName\n * @param {*} oldName\n */\nconst replaceCSSPrefix = () => {\n    // @todo\n};\n\n/**\n * Gets the  interpolator function from d3 color\n *\n */\nconst interpolator = () => interpolate;\n\n/**\n * Gets the number interpolator from d3 color\n *\n */\nconst numberInterpolator = () => interpolateNumber;\n\n/**\n * Gets the rgb interpolator from d3 color\n *\n */\nconst colorInterpolator = () => interpolateRgb;\n\n/**\n * Gets the hsl interpolator from d3 color\n *\n */\nconst hslInterpolator = () => interpolateHslLong;\n\nconst transformColors = () => ({\n    color,\n    rgb,\n    hsl\n});\n\n/**\n * Gets the piecewise interpolator from d3 color\n *\n */\nconst piecewiseInterpolator = () => piecewise;\n\nfunction hue2rgb (p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n\n  /**\n   * Converts an HSL color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n   * Assumes h, s, and l are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  l       The lightness\n   * @return  Array           The RGB representation\n   */\nconst hslToRgb = (h, s, l, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    if (s === 0) {\n        r = g = b = l; // achromatic\n    } else {\n        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const p = 2 * l - q;\n\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\n  /**\n   * Converts an RGB color value to HSV. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes r, g, and b are contained in the set [0, 255] and\n   * returns h, s, and v in the set [0, 1].\n   *\n   * @param   Number  r       The red color value\n   * @param   Number  g       The green color value\n   * @param   Number  b       The blue color value\n   * @return  Array           The HSV representation\n   */\nconst rgbToHsv = (r, g, b, a = 1) => {\n    r = +r; g = +g; b = +b; a = +a;\n    r /= 255; g /= 255; b /= 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let h;\n    let s;\n    const l = (max + min) / 2;\n\n    if (max === min) {\n        h = s = 0; // achromatic\n    } else {\n        const d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n        case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n        case g: h = (b - r) / d + 2; break;\n        case b: h = (r - g) / d + 4; break;\n        default: break;\n        }\n        h /= 6;\n    }\n    return [h, s, l, a];\n};\n\n  /**\n   * Converts an HSV color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes h, s, and v are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  v       The value\n   * @return  Array           The RGB representation\n   */\nconst hsvToRgb = (h, s, v, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    const i = Math.floor(h * 6);\n    const f = h * 6 - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n    case 0: r = v; g = t; b = p; break;\n    case 1: r = q; g = v; b = p; break;\n    case 2: r = p; g = v; b = t; break;\n    case 3: r = p; g = q; b = v; break;\n    case 4: r = t; g = p; b = v; break;\n    case 5: r = v; g = p; b = q; break;\n    default: break;\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\nconst hexToHsv = (hex) => {\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    hex = hex.replace(shorthandRegex, (m, r, g, b) => r + r + g + g + b + b);\n\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? rgbToHsv(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) : '';\n};\n\nconst detectColor = (col) => {\n    const matchRgb = /rgb\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})\\)/;\n    const matchHsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g;\n\n    // Source :  https://gist.github.com/sethlopezme/d072b945969a3cc2cc11\n     // eslint-disable-next-line\n    const matchRgba = /rgba?\\(((25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,\\s*?){2}(25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,?\\s*([01]\\.?\\d*?)?\\)/;\n     // eslint-disable-next-line\n    const matchHsla = /^hsla\\(([\\d.]+),\\s*([\\d.]+)%,\\s*([\\d.]+)%,\\s*(\\d*(?:\\.\\d+)?)\\)$/;\n    const matchHex = /^#([0-9a-f]{3}){1,2}$/i;\n\n    if (matchRgb.test(col) || matchRgba.test(col)) {\n        return 'rgb';\n    } else if (matchHsl.test(col) || matchHsla.test(col)) {\n        return 'hsl';\n    } else if (matchHex.test(col)) {\n        return 'hex';\n    } return col;\n};\n\nconst assembleModelFromIdentifiers = (model, identifiers) => {\n    let schema = [];\n    let data;\n    const fieldMap = model.getFieldsConfig();\n    if (identifiers.length) {\n        const fields = identifiers[0];\n        const len = fields.length;\n        for (let i = 0; i < len; i++) {\n            const field = fields[i];\n            const fieldObj = fieldMap[field] && Object.assign({}, fieldMap[field].def);\n            if (fieldObj) {\n                schema.push(Object.assign(fieldObj));\n            }\n        }\n\n        data = [];\n        const header = identifiers[0];\n        for (let i = 1; i < identifiers.length; i += 1) {\n            const vals = identifiers[i];\n            const temp = {};\n            vals.forEach((fieldVal, cIdx) => {\n                temp[header[cIdx]] = fieldVal;\n            });\n            data.push(temp);\n        }\n    } else {\n        data = [];\n        schema = [];\n    }\n\n    return new model.constructor(data, schema);\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} criteria\n *\n */\nconst getDataModelFromRange = (dataModel, criteria, mode, hasBarLayer) => {\n    if (criteria === null) return null;\n\n    const selFields = Object.keys(criteria);\n    const selFn = fields => selFields.every((field) => {\n        const fieldValue = fields[field].internalValue;\n        const range = criteria[field][0] instanceof Array ? criteria[field][0] : criteria[field];\n\n        if (typeof range[0] === STRING) {\n            return range.find(d => d === fieldValue) !== undefined;\n        }\n\n        if (range) {\n            let isFieldSelected = fieldValue >= range[0] && fieldValue <= range[1];\n            // For bar layer check if the selection box has been drawn within a bar\n            if (hasBarLayer && !isFieldSelected) {\n                isFieldSelected = fieldValue >= range[1];\n            }\n            return isFieldSelected;\n        }\n        return true;\n    });\n\n    return dataModel.select(selFn, {\n        saveChild: false,\n        mode\n    });\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} identifiers\n *\n */\nconst getDataModelFromIdentifiers = (dataModel, identifiers, mode, behaviourType) => {\n    let filteredDataModel;\n    if (identifiers instanceof Array) {\n        const fieldsConfig = dataModel.getFieldsConfig();\n\n        const dataArr = identifiers.slice(1, identifiers.length);\n        if (identifiers instanceof Function) {\n            filteredDataModel = identifiers(dataModel, {}, false);\n        } else if (identifiers instanceof Array && identifiers[0].length) {\n            const filteredSchema = identifiers[0].filter(d => d in fieldsConfig);\n            filteredDataModel = dataModel.select((fields) => {\n                let include = true;\n                filteredSchema.forEach((propField, idx) => {\n                    const value = fields[propField].internalValue;\n                    const index = dataArr.findIndex(d => d[idx] === value);\n                    include = include && index !== -1;\n                });\n                return include;\n            }, {\n                saveChild: false,\n                mode\n            });\n        } else {\n            filteredDataModel = dataModel.select(() => false, {\n                saveChild: false,\n                mode\n            });\n        }\n    } else {\n        filteredDataModel = getDataModelFromRange(dataModel, identifiers, mode, behaviourType);\n    }\n    return filteredDataModel;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} listenerMap\n */\nconst registerListeners = (context, listenerMap, ...params) => {\n    const propListenerMap = listenerMap(context, ...params);\n    for (const key in propListenerMap) {\n        if ({}.hasOwnProperty.call(propListenerMap, key)) {\n            const { namespace } = params[1];\n            let ns = null;\n            if (namespace) {\n                ns = namespace;\n            }\n            const mapObj = propListenerMap[key];\n            const propType = mapObj.type;\n            const props = mapObj.props;\n            const listenerFn = mapObj.listener;\n            context.store()[propType](props, listenerFn, false, {\n                namespace: ns\n            });\n        }\n    }\n};\n\nconst isValidValue = value => !isNaN(value) && value !== -Infinity && value !== Infinity;\n/**\n *\n *\n * @param {*} str\n *\n */\nconst escapeHTML = (str) => {\n    const htmlEscapes = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#x27;',\n        '/': '&#x2F;'\n    };\n    const htmlEscaper = /[&<>\"'/]/g;\n    return (`${str}`).replace(htmlEscaper, match => htmlEscapes[match]);\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst transposeArray = arr => arr[0].map((col, i) => arr.map(row => row[i]));\nconst toArray = arr => (arr instanceof Array ? arr : [arr]);\nconst extendsClass = (cls, extendsFrom, found) => {\n    if (!cls) {\n        return false;\n    }\n    const prototype = cls.prototype;\n    if (prototype instanceof extendsFrom) {\n        found = true;\n    } else {\n        found = extendsClass(prototype, extendsFrom, found);\n    }\n    return found;\n};\n\n/**\n *\n * @param {*} dm1\n * @param {*} dm2\n */\nconst concatModels = (dm1, dm2) => {\n    const dataObj1 = dm1.getData();\n    const dataObj2 = dm2.getData();\n    const data1 = dataObj1.data;\n    const data2 = dataObj2.data;\n    const schema1 = dataObj1.schema;\n    const schema2 = dataObj2.schema;\n    const tuples1 = {};\n    const tuples2 = {};\n    const commonTuples = {};\n    for (let i = 0; i < data1.length; i++) {\n        for (let ii = 0; ii < data2.length; ii++) {\n            const row1 = data1[i];\n            const row2 = data2[ii];\n            const dim1Values = row1.filter((d, idx) => schema1[idx].type === FieldType.DIMENSION);\n            const dim2Values = row2.filter((d, idx) => schema2[idx].type === FieldType.DIMENSION);\n            const allDimSame = dim1Values.every(value => dim2Values.indexOf(value) !== -1);\n            if (allDimSame) {\n                const key = dim1Values.join();\n                !commonTuples[key] && (commonTuples[key] = {});\n                row1.forEach((value, idx) => {\n                    commonTuples[key][schema1[idx].name] = value;\n                });\n                row2.forEach((value, idx) => {\n                    commonTuples[key][schema2[idx].name] = value;\n                });\n            } else {\n                const dm1Key = dim1Values.join();\n                const dm2Key = dim2Values.join();\n                if (!commonTuples[dm1Key] && !commonTuples[dm2Key]) {\n                    !tuples1[dm1Key] && (tuples1[dm1Key] = {});\n                    !tuples2[dm2Key] && (tuples2[dm2Key] = {});\n                    row1.forEach((value, idx) => {\n                        tuples1[dm1Key][schema1[idx].name] = value;\n                    });\n                    row2.forEach((value, idx) => {\n                        tuples2[dm2Key][schema2[idx].name] = value;\n                    });\n                }\n            }\n        }\n    }\n\n    const commonSchema = [...schema1, ...schema2.filter(s2 => schema1.findIndex(s1 => s1.name === s2.name) === -1)];\n    const data = [...Object.values(tuples1), ...Object.values(tuples2), ...Object.values(commonTuples)];\n    return [data, commonSchema];\n};\n\nconst getSymbol = type => symbol().type(symbolFns[type]);\n\nconst stackOrders = {\n    [STACK_CONFIG.ORDER_NONE]: stackOrderNone,\n    [STACK_CONFIG.ORDER_ASCENDING]: stackOrderAscending,\n    [STACK_CONFIG.ORDER_DESCENDING]: stackOrderDescending\n};\nconst stackOffsets = {\n    [STACK_CONFIG.OFFSET_DIVERGING]: stackOffsetDiverging,\n    [STACK_CONFIG.OFFSET_NONE]: stackOffsetNone,\n    [STACK_CONFIG.OFFSET_EXPAND]: stackOffsetExpand,\n    [STACK_CONFIG.OFFSET_WIGGLE]: stackOffsetWiggle\n};\n\n// eslint-disable-next-line require-jsdoc\nconst stack = params => d3Stack().keys(params.keys).offset(stackOffsets[params.offset])\n                .order(stackOrders[params.order])(params.data);\n\n/**\n * Groups the data into a hierarchical tree structure based on one or more fields.\n * @param { Object } params Configuration properties for nesting data\n * @param { Array.<Array> } params.data Data which needs to be grouped\n * @param { Array.<number> } params.keys Field indices by which the data will be grouped\n * @return { Array.<Object> } Grouped data array\n */\nconst nestCollection = (params) => {\n    const nestFn = nest();\n    params.keys.forEach(key => nestFn.key(d => d[key]));\n    return nestFn.entries(params.data);\n};\n\nconst pathInterpolators = {\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    stepAfter: curveStepAfter,\n    catmullRom: curveCatmullRom,\n    step: curveStep,\n    stepBefore: curveStepBefore,\n    linear: curveLinear\n};\n\nconst Symbols = {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom,\n    line,\n    area,\n    pie,\n    arc,\n    nest\n};\n\nconst Scales = {\n    band: scaleBand\n};\n\nconst getSmallestDiff = (points) => {\n    points = points.sort((a, b) => a - b);\n    let minDiff = points[1] - points[0];\n    for (let i = 2; i < points.length; i++) {\n        minDiff = Math.min(minDiff, points[i] - points[i - 1]);\n    }\n\n    return minDiff;\n};\n\nconst timeFormats = {\n    millisecond: '%A, %b %e, %H:%M:%S.%L',\n    second: '%A, %b %e, %H:%M:%S',\n    minute: '%A, %b %e, %H:%M',\n    hour: '%A, %b %e, %H:%M',\n    day: '%A, %b %e, %Y',\n    month: '%B %Y',\n    year: '%Y'\n};\n\nconst timeDurations = [\n    ['millisecond', 'second', 'minute', 'hour', 'day', 'month', 'year'],\n    [1, 1000, 60000, 3600000, 86400000, 2592000000, 31536000000]\n];\n\nconst getNearestInterval = (interval) => {\n    const index = getClosestIndexOf(timeDurations[1], interval);\n    return timeDurations[0][index];\n};\n\nconst formatTemporal = (value, interval) => {\n    const nearestInterval = getNearestInterval(interval);\n    return DateTimeFormatter.formatAs(value, timeFormats[nearestInterval]);\n};\n\nconst temporalFields = (dataModel) => {\n    const filteredFields = {};\n    Object.entries(dataModel.getFieldspace().getDimension()).forEach(([fieldName, fieldObj]) => {\n        if (fieldObj.subtype() === TEMPORAL) {\n            filteredFields[fieldName] = fieldObj;\n        }\n    });\n    return filteredFields;\n};\n\nconst require = (lookupWhat, lookupDetails) => ({\n    resolvable: (store) => {\n        const lookupTarget = store[lookupWhat];\n        const depArr = lookupDetails.slice(0, lookupDetails.length - 1);\n        const fn = lookupDetails[lookupDetails.length - 1]; // fn\n\n        const deps = depArr.map(str => lookupTarget[str]);\n        return {\n            fn: fn(...deps),\n            depArr\n        };\n    }\n});\n\nconst nextAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||\n    function (callback) {\n        setTimeout(callback, 16);\n    };\n\nconst getValueParser = config => (val) => {\n    if (val instanceof InvalidAwareTypes) {\n        return val in config ? config[val] : `${val}`;\n    }\n    return val;\n};\n\nconst retrieveNearestGroupByReducers = (dataModel, ...measureFieldNames) => {\n    const filteredReducers = {};\n    if (dataModel instanceof DataModel) {\n        const derivations = [...dataModel.getDerivations().reverse(), ...dataModel.getAncestorDerivations().reverse()];\n        const nearestReducers = defaultValue(\n            getObjProp(derivations.find(derv => derv.op === DM_DERIVATIVES.GROUPBY), 'criteria'), {});\n\n        const measures = dataModel.getFieldspace().getMeasure();\n        measureFieldNames = measureFieldNames.length ? measureFieldNames : Object.keys(measures);\n        measureFieldNames.forEach((measureName) => {\n            if (nearestReducers[measureName]) {\n                filteredReducers[measureName] = nearestReducers[measureName];\n            } else {\n                const measureField = measures[measureName];\n                if (measureField) {\n                    filteredReducers[measureName] = measureField.defAggFn();\n                }\n            }\n        });\n    }\n    return filteredReducers;\n};\n\nconst retrieveFieldDisplayName = (dm, fieldName) => dm.getFieldspace().fieldsObj()[fieldName].displayName();\n/**\n * Fetches the nearest sort operation details by traversing the chain of parent DataModels\n * @param {Object} dataModel Instance of DataModel\n *\n * @return {Array|null} sort criteria, null if no sort operation found\n */\nconst nearestSortingDetails = (dataModel) => {\n    const allDerivations = [...dataModel.getAncestorDerivations(), ...dataModel.getDerivations()];\n    const nearestSortDerivation = allDerivations.reverse().find(derivation => derivation.op === DM_DERIVATIVES.SORT);\n\n    return nearestSortDerivation ? nearestSortDerivation.criteria : null;\n};\n\n/**\n * Map containing key, value sortingOrder pairs\n */\nconst sortOrderMap = {\n    [SORT_ORDER_ASCENDING]: (firstVal, secondVal) => firstVal.localeCompare(secondVal),\n    [SORT_ORDER_DESCENDING]: (firstVal, secondVal) => secondVal.localeCompare(firstVal)\n};\n\n/**\n * Sort categorical field based on it's sorting order\n * @param {string} sortOrder Order by which field is to be sorted (asc or desc or func)\n * @param {string} firstVal First sort parameter\n * @param {string} secondVal Second sort parameter\n * @return {number} position|null if sort order is invalid\n*/\nconst sortCategoricalField = (sortOrder, firstVal, secondVal) => {\n    const sortOrderType = typeof sortOrder;\n\n    if (sortOrderType === FUNCTION) {\n        return sortOrder(firstVal, secondVal);\n    } else if (sortOrderType === STRING) {\n        if (!sortOrderMap[sortOrder]) return null;\n        return sortOrderMap[sortOrder](firstVal, secondVal);\n    }\n    return null;\n};\n\nconst intersect = (arr1, arr2, accessors = [v => v, v => v]) => {\n    const [fn1, fn2] = accessors;\n    const set = new Set(arr2.map(v => fn2(v)));\n    return arr1.filter(value => set.has(fn1(value)));\n};\n\nexport {\n    getValueParser,\n    require,\n    intersect,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    stack,\n    nestCollection,\n    getSymbol,\n    transformColors,\n    detectColor,\n    hexToHsv,\n    hslToRgb,\n    rgbToHsv,\n    hsvToRgb,\n    concatModels,\n    toArray,\n    angleToRadian,\n    escapeHTML,\n    generateGetterSetters,\n    getArraySum,\n    interpolator,\n    piecewiseInterpolator,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    colorInterpolator,\n    numberInterpolator,\n    ERROR_MSG,\n    reqAnimFrame,\n    nextAnimFrame,\n    transposeArray,\n    cancelAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    symbolFns,\n    easeFns,\n    clone,\n    isEqual,\n    interpolateArray,\n    getMinPoint,\n    defaultValue,\n    getMaxPoint,\n    getClosestIndexOf,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    enableChainedTransaction,\n    isHTMLElem,\n    isSimpleObject,\n    nextFrame,\n    registerListeners,\n    replaceCSSPrefix,\n    getObjProp,\n    extendsClass,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    hslInterpolator,\n    getSmallestDiff,\n    getNearestValue,\n    retrieveNearestGroupByReducers,\n    nearestSortingDetails,\n    createSelection,\n    formatTemporal,\n    temporalFields,\n    retrieveFieldDisplayName,\n    sanitizeDomainWhenEqual,\n    sortCategoricalField\n};\n","export function linear(t) {\n  return +t;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","import Selection from './selection';\n/**\n * This function applies a selection operation on a data array.\n *\n * @export\n * @param {Array} [data=[]] The data array to be observed.\n * @return {Selection} Instance of a selection.\n */\nexport default function dataSelect (idFn) {\n    return new Selection(idFn);\n}\n\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","export default function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n}\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_join from \"./join\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  join: selection_join,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","export default function(onenter, onupdate, onexit) {\n  var enter = this.enter(), update = this, exit = this.exit();\n  enter = typeof onenter === \"function\" ? onenter(enter) : enter.append(onenter + \"\");\n  if (onupdate != null) update = onupdate(update);\n  if (onexit == null) exit.remove(); else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent.js\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag.js\";\nimport noevent, {nopropagation} from \"./noevent.js\";\nimport constant from \"./constant.js\";\nimport DragEvent from \"./event.js\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.ctrlKey && !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"cancel\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTED) throw new Error(\"too late; already running\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions.\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(node, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {set} from \"./schedule\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleNull(name, interpolate) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        string1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, string10 = string1);\n  };\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = style(this, name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        value1 = value(this),\n        string1 = value1 + \"\";\n    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction styleMaybeRemove(id, name) {\n  var on0, on1, listener0, key = \"style.\" + name, event = \"end.\" + key, remove;\n  return function() {\n    var schedule = set(this, id),\n        on = schedule.on,\n        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n      .styleTween(name, styleNull(name, i))\n      .on(\"end.style.\" + name, styleRemove(name))\n    : typeof value === \"function\" ? this\n      .styleTween(name, styleFunction(name, i, tweenValue(this, \"style.\" + name, value)))\n      .each(styleMaybeRemove(this._id, name))\n    : this\n      .styleTween(name, styleConstant(name, i, value), priority)\n      .on(\"end.style.\" + name, null);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\nimport transition_end from \"./end\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease,\n  end: transition_end\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttribute(name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttributeNS(fullname.space, fullname.local);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttribute(name);\n    string0 = this.getAttribute(name);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    string0 = this.getAttributeNS(fullname.space, fullname.local);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrInterpolate(name, i) {\n  return function(t) {\n    this.setAttribute(name, i(t));\n  };\n}\n\nfunction attrInterpolateNS(fullname, i) {\n  return function(t) {\n    this.setAttributeNS(fullname.space, fullname.local, i(t));\n  };\n}\n\nfunction attrTweenNS(fullname, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","function styleInterpolate(name, i, priority) {\n  return function(t) {\n    this.style.setProperty(name, i(t), priority);\n  };\n}\n\nfunction styleTween(name, value, priority) {\n  var t, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\n    return t;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {set} from \"./schedule\";\n\nexport default function() {\n  var on0, on1, that = this, id = that._id, size = that.size();\n  return new Promise(function(resolve, reject) {\n    var cancel = {value: reject},\n        end = {value: function() { if (--size === 0) resolve(); }};\n\n    that.each(function() {\n      var schedule = set(this, id),\n          on = schedule.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) {\n        on1 = (on0 = on).copy();\n        on1._.cancel.push(cancel);\n        on1._.interrupt.push(cancel);\n        on1._.end.push(end);\n      }\n\n      schedule.on = on1;\n    });\n  });\n}\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    schedule.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import { select, event as d3event, selection, clientPoint } from 'd3-selection';\nimport { drag as d3drag } from 'd3-drag';\nimport 'd3-transition';\nimport { mergeRecursive } from './common-utils';\n/**\n * This function takes a raw DOM element or\n * a string and returns a d3 selection of that element.\n *\n * @param {HTMLElement | string} element The element to wrap in d3 selection.\n * @return {Selection} Instance of d3 selection.\n */\nconst selectElement = element => select(element);\n\n/**\n * It creates a new d3 element on the parent element\n * @param  {Selection} parent Element to which the element is to be appended\n * @param  {Object} elemType Type of the new element\n * @param  {Array} data Data for the new element\n * @param  {Object} selector classname/id/tagname for the element\n * @return {HTMLElement} Newly Created Element\n */\nconst makeElement = (parent, elemType, data, selector, callbacks = {}, keyFn) => {\n    if ((parent instanceof HTMLElement || parent instanceof SVGElement)) {\n        parent = selectElement(parent);\n    }\n\n    const selectorVal = selector ? selector[0] : null;\n    let selectorType = null;\n    let actualSelector = null;\n    let element = null;\n    let enterSel = null;\n    let mergeSel = null;\n    let filter;\n    if (selectorVal) {\n        if (selectorVal === '#') {\n            selectorType = 'id';\n            actualSelector = selector;\n        } else {\n            selectorType = 'class';\n            actualSelector = selector[0] === '.' ? selector : `.${selector}`;\n        }\n    } else {\n        actualSelector = elemType;\n        filter = true;\n    }\n    element = parent.selectAll(actualSelector);\n\n    filter && (element = element.filter(function () {\n        return this.parentNode === parent.node();\n    }));\n    element = element.data(data, keyFn);\n\n    enterSel = element.enter()\n                            .append(elemType || 'div');\n    callbacks.enter && enterSel.each(function (...params) {\n        callbacks.enter(selectElement(this), ...params);\n    });\n\n    mergeSel = enterSel.merge(element);\n    callbacks.update && mergeSel.each(function (...params) {\n        callbacks.update(selectElement(this), ...params);\n    });\n    if (selectorType === 'class') {\n        mergeSel.classed(selectorVal === '.' ? selector.substring(1, selector.length) : selector, true);\n    } else if (selectorType === 'id') {\n        mergeSel.attr('id', selector.substring(1, selector.length));\n    }\n    const exitSel = element.exit();\n\n    if (callbacks.exit) {\n        exitSel.each(function (...params) {\n            callbacks.exit(selectElement(this), ...params);\n        });\n    } else {\n        exitSel.remove();\n    }\n    return mergeSel;\n};\n\n/**\n * This function applies styles to an element\n *  @param  {Object} elem Element Selection\n * @param  {Object} styleObj Style Object to be applied\n * @return {Element} Newly Created Element\n*/\nconst applyStyle = (elem, styleObj) => {\n    Object.entries(styleObj).forEach((d) => {\n        elem.style(d[0], d[1]);\n    }, this);\n    return elem;\n};\n\n/**\n * This function appends a dom element in another element.\n * @param {HTMLElement | SVGElement} element1 The element in which to append the second element\n * @param {HTMLElement | SVGElement} element2 The element which will be appended.\n */\nconst appendElement = (element1, element2) => {\n    element1.appendChild(element2);\n};\n\n/**\n * Sets the attributes to the element.\n * @param {HTMLElement | SVGElement} element Element on which attributes will be applied\n * @param {Object} attrs Attributes which need to be applied\n */\nconst setElementAttrs = (element, attrs) => {\n    for (const key in attrs) {\n        if ({}.hasOwnProperty.call(attrs, key)) {\n            element.attr(key, attrs[key]);\n        }\n    }\n};\n\n/**\n * Sets attributes in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which attrs will be applied\n * @param {Array.<Object>} attrs Array of attributes\n * @param {string} className className of elements to select.\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setAttrs = (element, attrs, className) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    className !== undefined ? element.selectAll(`.${className}`).each(function () {\n        setElementAttrs(select(this), attrs);\n    }) : setElementAttrs(element, attrs);\n    return element;\n};\n\n/**\n * Adds a css class to elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst addClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, true) :\n                elem.classed(className, true);\n    });\n};\n\n/**\n * Removes the css class from elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst removeClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, false) :\n                elem.classed(className, false);\n    });\n};\n\n/**\n * Sets styles in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which styles will be applied\n * @param {Array.<Object>} styles Array of style attributes\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setStyles = (element, styles) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            element.style(key, styles[key]);\n        }\n    }\n    return element;\n};\n\n/**\n * Creates svg or html elements by binding data to the selection.Removes extra elements\n * on exit.\n * @param {Object} params Parameter object\n * @param {SVGElement | HTMLElement} params.container Container element where all elements will be appended\n * @param {string} params.selector Selector by which elements will be selected from dom\n * @param {string} params.append Append tag\n * @param {Function} params.each Function which will be executed for each data point and element.\n */\nconst createElements = (params) => {\n    const container = select(params.container);\n    let data;\n    let sel;\n\n    data = params.data;\n    if (typeof data === 'number') {\n        data = Array(data).fill().map((d, i) => i);\n    }\n    sel = container.selectAll(params.selector).data(data);\n\n    sel = container.selectAll(params.selector).filter(function () {\n        return this.parentNode === container.node();\n    }).data(params.data);\n\n    const selectionMerge = sel.enter().append(params.append).merge(sel).each(function (d, i) {\n        params.each(d, select(this), i);\n    });\n\n    selectionMerge.attr('class', params.className || '');\n    sel.exit().remove();\n};\n\n/**\n * Clips an element with given measurement. Basically it is used to hide overflowing portions\n * of any element.\n * @param {SVGElement} container svg element which needs to be clipped.\n * @param {Object} measurement Dimensions of the clipped rectangle.\n * @param {string} id Unique id of the clip element\n */\nconst clipElement = (container, measurement, id) => {\n    const clipPathElement = makeElement(select(container), 'clipPath', [1], `#${id}`);\n    const clipPathRect = makeElement(clipPathElement, 'rect', [1]);\n    clipPathRect.attr('x', measurement.x)\n                    .attr('y', measurement.x)\n                    .attr('width', measurement.width)\n                    .attr('height', measurement.height);\n    clipPathElement.attr('clip-path', `url(#${id})`);\n};\n\n/**\n * Returns the element of the corresponding classname.\n * @param {HTMLElement | SVGElement} node html or svg node element.\n * @param {string} className css class to be applied.\n * @return {HTMLElement | SVGElement} html or svg element.\n */\nconst getElementsByClassName = (node, className) => select(node).selectAll(className).nodes();\n\n/**\n * Gets the mouse position relative to an svg type of element\n * @param {SVGElement} element Any svg element like rect, circle, etc.\n * @param {Event} event Event object.\n * @return {Object} x and y position relative to the container element passed.\n */\nconst getMousePos = (element, event) => {\n    const boundingClientRect = element.getBoundingClientRect();\n    return {\n        x: event.x - boundingClientRect.x,\n        y: event.y - boundingClientRect.y\n    };\n};\n\nconst getClientPoint = (...params) => {\n    const pos = clientPoint(...params);\n    return {\n        x: pos[0],\n        y: pos[1]\n    };\n};\n\n/** This function appends a dom element in another element.\n * @param {Object} tag The tag name of the element to append\n * @param {Object} mount Mount point fo the element\n * @return {Object} selection of the appended element\n */\nconst createElement = (tag, mount) => select(mount).append(tag).node();\n\n/**\n * Gets the d3 event function\n * @return {Object} d3 event\n */\nconst getEvent = () => d3event;\n\n/**\n * Gets the d3 drag function\n * @return {Object} d3 drag\n */\nconst getD3Drag = () => d3drag;\n\nconst getSmartComputedStyle = (group, css) => {\n    let textEl;\n    const testText = 'W';\n    const mandatoryStyle = {\n        'fill-opacity': 0\n    };\n    const className = typeof css === 'string' ? css : (css instanceof Array ? css.join(' ') : undefined);\n\n    if (group.node() instanceof HTMLElement) {\n        textEl = group.append('div').html(testText);\n    } else {\n        textEl = group.append('text').text(testText);\n    }\n\n    if (className) {\n        textEl.attr('class', className);\n    } else if (typeof css === 'object') {\n        delete css['fill-opacity'];\n        mergeRecursive(mandatoryStyle, css);\n    }\n\n    textEl.style(mandatoryStyle);\n    const computedStyle = window.getComputedStyle(textEl.node());\n    const styleForSmartLabel = {\n        fontSize: computedStyle.fontSize,\n        fontFamily: computedStyle.fontFamily,\n        fontWeight: computedStyle.fontWeight,\n        fontStyle: computedStyle.fontStyle\n    };\n\n    textEl.remove();\n\n    return styleForSmartLabel;\n};\n\nconst hasTouch = () => 'ontouchstart' in document.documentElement;\n\nexport {\n    hasTouch,\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint\n};\n","import Model from 'hyperdis';\nimport { defaultValue, getObjProp, toArray } from './common-utils';\n\nconst initProp = (obj, props, val = () => ({})) => {\n    props.forEach((prop) => {\n        if (!obj[prop]) {\n            obj[prop] = val();\n        }\n        obj = obj[prop];\n    });\n    return obj;\n};\n\nconst fetchPropValues = (propNames, params, deps) => params.map((param, i) => {\n    const prop = propNames[i];\n\n    return param.map(val => (val === undefined || val === null ? val : val[deps[prop]]));\n});\n\nconst addListenerToNamespace = (namespaceInf, fn, context) => {\n    let key = namespaceInf.key;\n    const namespace = namespaceInf.id;\n    const listeners = context._listeners;\n\n    if (namespace) {\n        !listeners.get(namespace) && (listeners.set(namespace, new Map()));\n        const namespaceListeners = listeners.get(namespace);\n\n        if (!key) {\n            key = namespaceListeners.size;\n        }\n        namespaceListeners.set(key, fn);\n    } else {\n        key = key || listeners.size;\n        listeners.set(key, fn);\n    }\n};\n\nconst setContexts = (contexts, propObj, contextMap) => {\n    for (const key of propObj.keys()) {\n        contexts[key] = {\n            context: contextMap[key],\n            deps: propObj.get(key).depProps\n        };\n    }\n    return contexts;\n};\n\nconst registerPropInMaps = (store, props, namespaceInf, type) => {\n    const {\n        _registeredListeners: registeredListeners,\n        _propListenerMap: propListenerMap\n    } = store;\n    const {\n        subNamespace,\n        namespace: ns\n    } = namespaceInf;\n\n    initProp(registeredListeners, [ns]);\n    props.forEach((prop) => {\n        const subNamespaces = defaultValue(getObjProp(registeredListeners, ns, prop, 'subNamespace'), []);\n        let fns = defaultValue(getObjProp(propListenerMap, prop, type, 'fns'), 0);\n\n        fns++;\n        subNamespace && subNamespaces.push(subNamespace);\n        registeredListeners[ns][prop] = {\n            subNamespace: subNamespaces,\n            allProps: props,\n            subNamespaces: {}\n        };\n        initProp(propListenerMap, [prop, type]);\n        propListenerMap[prop][type] = {\n            fns,\n            _fnCount: fns\n        };\n    });\n};\n\nconst registerListener = (context, type, ...options) => {\n    const [propList, callBack, instantCall, namespaceInf = {}] = options;\n    let props = propList;\n\n    if (!Array.isArray(propList)) {\n        props = [propList];\n    }\n\n    const { namespace: ns } = namespaceInf;\n    const callbackFn = ((propNames, namespaceVal) => (...params) => {\n        const { _savedCommits: commits, _propListenerMap: propListenerMap } = context;\n\n        if (!propNames.some(prop => getObjProp(propListenerMap, prop, 'disabled'))) {\n            if (namespaceVal) {\n                const listenersObj = context._registeredListeners[namespaceVal];\n                const contextMap = context._contextMap[namespaceVal];\n                const contextsObj = {};\n\n                propNames.forEach((prop) => {\n                    const commitsObj = defaultValue(getObjProp(commits, prop, type), {});\n                    const listeners = listenersObj[prop].subNamespaces;\n                    const propDeps = propListenerMap[prop][type];\n\n                    for (const nm in commitsObj) {\n                        const fnInf = defaultValue(propDeps[nm], { fns: 0 });\n                        let { fns } = fnInf;\n\n                        if (fns > 0) {\n                            setContexts(contextsObj, listeners[nm], contextMap);\n                            fns--;\n                        }\n\n                        if (fns <= 0) {\n                            delete commitsObj[nm];\n                        }\n                        fnInf.fns = fns;\n                    }\n                });\n                for (const key in contextsObj) {\n                    const obj = contextsObj[key];\n\n                    callBack(obj.context, ...fetchPropValues(propNames, params, obj.deps));\n                }\n            } else {\n                callBack(...params);\n            }\n        }\n    })(props, ns, type);\n\n    const fn = context.model[type](props, callbackFn, instantCall);\n\n    if (ns) {\n        registerPropInMaps(context, props, namespaceInf, type);\n    }\n    addListenerToNamespace(namespaceInf, fn, context);\n};\n\nconst retrieveNamespaces = (names, key) => {\n    if (names instanceof Object) {\n        return [names[key]];\n    } else if (names instanceof Array) {\n        return names;\n    }\n    return [names];\n};\n\nconst createMap = () => new Map();\n\nconst listenerTypes = ['next', 'on'];\n\nconst removePropValue = (context, map, propInf) => {\n    const { subNamespace: sns, prop, propListenerMap } = propInf;\n    const propObj = propListenerMap[prop];\n\n    listenerTypes.forEach((type) => {\n        if (type in propObj) {\n            delete propObj[type][sns];\n        }\n    });\n    if (map.has(sns)) {\n        const value = context.get(prop);\n\n        if (value instanceof Object && sns in value) {\n            delete value[sns];\n        }\n        map.delete(sns);\n    }\n};\n\n/**\n * Methods to handle changes to table configuration and reactivity are handled by this\n * class.\n */\n/**\n *  Common store class\n *\n * @class Store\n */\nexport class Store {\n    /**\n     * Creates an instance of Store.\n     * @param {Object} config The object to create the state store with.\n     * @memberof Store\n     */\n    constructor (config) {\n        // create reactive model\n        this.model = Model.create(config);\n        this._listeners = new Map();\n        this._registeredListeners = {};\n        this._contextMap = {};\n        this._commits = {};\n        this._savedCommits = {};\n        this._queuedProps = {};\n        this._propListenerMap = {};\n        this._locked = false;\n    }\n\n    lockModel () {\n        this.model.lock();\n        this._locked = true;\n        return this;\n    }\n\n    unlockModel () {\n        this._locked = false;\n        this.model.unlock();\n        return this;\n    }\n\n    /**\n     * This method returns a plain JSON object\n     * with all the fields in the state store.\n     *\n     * @return {Object} Serialized representation of state store.\n     * @memberof Store\n     */\n    serialize () {\n        return this.model.serialize();\n    }\n\n    lockCommits (props) {\n        props.forEach((prop) => {\n            this._commits[prop] = {\n                locked: true,\n                queue: []\n            };\n        });\n        return this;\n    }\n\n    unlockCommits (props) {\n        const commitsObj = this._commits;\n\n        this.lockModel();\n        props.forEach((prop) => {\n            commitsObj[prop].locked = false;\n            const queuedProps = {};\n            const { queue } = commitsObj[prop];\n\n            queue.forEach((params) => {\n                const [propName, value, namespace] = params;\n\n                if (namespace) {\n                    const propObj = initProp(queuedProps, [propName, namespace]);\n\n                    Object.assign(propObj, value);\n                }\n            });\n            queue.forEach((params) => {\n                const [propName, value, namespace] = params;\n\n                this.commit(propName, propName in queuedProps ? queuedProps[propName][namespace] : value,\n                    namespace);\n            });\n            delete commitsObj[prop];\n        });\n        this.unlockModel();\n        return this;\n    }\n\n    addSubNamespace (sns, namespace, context) {\n        // Get all the listeners registered by the component\n        const listeners = this._registeredListeners[namespace];\n        const propListenerMap = this._propListenerMap;\n\n        initProp(this._contextMap, [namespace]);\n        this._contextMap[namespace][sns] = context;\n        for (const key in listeners) {\n            const obj = listeners[key];\n            const propObj = propListenerMap[key];\n            const propFns = listenerTypes.reduce((acc, type) => {\n                const val = defaultValue(getObjProp(propObj, type, 'fns'), 0);\n                val && (acc[type] = val);\n                return acc;\n            }, {});\n            const { allProps, subNamespaces, subNamespace } = obj;\n            const snsArr = subNamespace.length ? subNamespace : [sns];\n\n            snsArr.forEach((ns) => {\n                const nsObj = ns instanceof Function ? ns(context) : ns;\n                const names = retrieveNamespaces(nsObj, key);\n                const depProps = allProps.reduce((acc, prop) => {\n                    acc[prop] = ns instanceof Function ? nsObj[prop] : ns;\n                    return acc;\n                }, {});\n\n                names.forEach((nm) => {\n                    initProp(subNamespaces, [nm], createMap).set(sns, {\n                        depProps\n                    });\n\n                    for (const type in propFns) {\n                        initProp(propObj, [type, nm]);\n                        const fns = propFns[type];\n\n                        propObj[type][nm] = {\n                            fns,\n                            _fnCount: fns\n                        };\n                    }\n                });\n            });\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to update the value of a property in the state store.\n     *\n     * @param {string} propName The name of the property.\n     * @param {number} value The new value of the property.\n     * @memberof Store\n     */\n    commit (propName, value, namespace, disableListener = false) {\n        let sanitizedVal = value;\n        const commits = this._commits;\n        const savedCommits = this._savedCommits;\n        const locked = getObjProp(commits, propName, 'locked');\n        const propListenerMap = this._propListenerMap[propName] || {};\n\n        propListenerMap.disabled = disableListener;\n\n        if (locked) {\n            commits[propName].queue.push([propName, value, namespace]);\n            return this;\n        }\n\n        if (namespace) {\n            if (this._locked) {\n                const queuedProps = initProp(this._queuedProps, [propName]);\n                queuedProps[namespace] = value;\n                sanitizedVal = queuedProps;\n            } else {\n                sanitizedVal = defaultValue(this.get(propName), {});\n                sanitizedVal[namespace] = value;\n            }\n\n            listenerTypes.forEach((type) => {\n                initProp(savedCommits, [propName, type]);\n                savedCommits[propName][type][namespace] = true;\n                if (getObjProp(propListenerMap, type, namespace)) {\n                    propListenerMap[type][namespace].fns = propListenerMap[type][namespace]._fnCount;\n                }\n            });\n        }\n\n        this.model.prop(propName, sanitizedVal);\n        return this;\n    }\n\n    /**\n     * This method is used to register a callback that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */registerChangeListener (...params) {\n        registerListener(this, 'next', ...params);\n        return this;\n    }\n\n    /**\n     * This method is used to register a callback that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */ registerImmediateListener (...params) {\n        registerListener(this, 'on', ...params);\n    }\n\n    /**\n     * This method is used to get the name of the property\n     * from the state store.\n     *\n     * @param {string} propName The name of the field in state store.\n     * @return {any} The value of the field.\n     * @memberof Store\n     */\n    get (propName, subNamespace) {\n        const value = this.model.prop(propName);\n        return subNamespace ? value && value[subNamespace] : value;\n    }\n\n    /**\n     * This method is used to register a computed property that is computed every time\n     * the store value changes.\n     *\n     * @param {string} propName The name of the property to create.\n     * @param {Function} callBack The function to execute when depemdent props change.\n     * @memberof Store\n     */\n    computed (propName, callBack) {\n        return this.model.calculatedProp(propName, callBack);\n    }\n\n    append (...params) {\n        this.model.append(...params);\n        return this;\n    }\n\n    unsubscribeAll () {\n        Object.values(this._listeners).forEach(fn => fn());\n        return this;\n    }\n\n    unsubscribe (namespaceInf = {}) {\n        const { id, key } = namespaceInf;\n        const listenersMap = this._listeners;\n        const listeners = listenersMap.get(id);\n\n        if (key) {\n            const fn = listenersMap.get(key);\n\n            fn && fn();\n        } else {\n            for (const fn of listeners.values()) {\n                fn();\n            }\n            listenersMap.set(id, []);\n        }\n        return this;\n    }\n\n    removeSubNamespace (subNamespace, namespace) {\n        const {\n            _registeredListeners: listenerMap,\n            _contextMap: contextMap,\n            _propListenerMap: propListenerMap\n        } = this;\n        const listenersObj = listenerMap[namespace];\n\n        for (const prop in listenersObj) {\n            const { subNamespaces } = listenersObj[prop];\n            const propInf = {\n                subNamespace,\n                prop,\n                propListenerMap\n            };\n\n            if (subNamespaces[subNamespace]) {\n                removePropValue(this, subNamespaces[subNamespace], propInf);\n                delete subNamespaces[subNamespace];\n            } else {\n                for (const ns in subNamespaces) {\n                    const snsMap = subNamespaces[ns];\n\n                    removePropValue(this, snsMap, propInf);\n                    if (!snsMap.size) {\n                        delete subNamespaces[ns];\n                    }\n                }\n            }\n        }\n        delete contextMap[namespace][subNamespace];\n        return this;\n    }\n}\n\n/**\n * Setter getter creator from config\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args. (Optional)\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitization: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @param {Object} holder an empty object on which the getters and setters will be mounted\n * @param {Object} options options config based on which the getters and setters are determined.\n * @param {Hyperdis} model optional model to attach the property. If not sent new moel is created.\n * @return {Array}\n */\nexport const transactor = (holder, options, model, namespaceInf = {}) => {\n    let conf;\n    const store = model instanceof Store ? model : new Store({});\n    const stateProps = {};\n    const { namespace, subNamespace } = namespaceInf;\n\n    for (const prop in options) {\n        if ({}.hasOwnProperty.call(options, prop)) {\n            conf = options[prop];\n            const nameSpaceProp = namespace ? `${namespace}.${prop}` : prop;\n\n            if (subNamespace) {\n                const value = defaultValue(store.get(nameSpaceProp), {});\n                value[subNamespace] = conf.value;\n                stateProps[nameSpaceProp] = value;\n            } else {\n                stateProps[prop] = conf.value;\n            }\n\n            holder[prop] = ((context, meta, nsProp) => (...params) => {\n                const paramsLen = params.length;\n                if (paramsLen) {\n                    const { takesMultipleParams = false } = meta || {};\n                    // If parameters are passed then it's a setter\n                    let val = takesMultipleParams ? params : params[0];\n\n                    if (meta) {\n                        let values;\n                        const prevVal = context.get(nsProp, subNamespace);\n                        const { sanitization, typeCheck, typeExpected } = meta;\n                        if (typeof sanitization === 'function') {\n                            // Sanitize if required\n                            val = sanitization(val, prevVal, holder);\n                        }\n\n                        // Checking if a setter is valid\n                        if (typeof typeCheck === 'function') {\n                            const typeCheckResult = typeCheck(val);\n\n                            if (typeCheckResult) {\n                                values = val;\n                            }\n                        } else if (typeof typeCheck === 'string' && typeCheck === 'constructor') {\n                            if (val && val.constructor.name === typeExpected) {\n                                values = val;\n                            }\n                        } else {\n                            values = val;\n                        }\n\n                        const preset = meta.preset;\n                        const oldValues = toArray(context.get(nsProp, subNamespace));\n                        preset && preset(values, holder);\n                        if (takesMultipleParams) {\n                            oldValues.forEach((value, i) => {\n                                if (values[i] === undefined) {\n                                    values[i] = value;\n                                }\n                            });\n                        }\n                        values && context.commit(nsProp, values, subNamespace);\n                    } else {\n                        context.commit(nsProp, val, subNamespace);\n                    }\n                    return holder;\n                }\n                // No parameters are passed hence its a getter\n                return context.get(nsProp, subNamespace);\n            })(store, conf.meta, nameSpaceProp, Array.isArray(conf.value));\n        }\n    }\n\n    if (subNamespace) {\n        for (const key in stateProps) {\n            store.commit(key, stateProps[key][subNamespace], subNamespace);\n        }\n    } else if (namespace === undefined) {\n        store.append(stateProps);\n    } else {\n        store.append(namespace, stateProps);\n    }\n\n    return [holder, store];\n};\n","const events = [\n    'initialized',\n    'beforeupdate',\n    'updated',\n    'beforedraw',\n    'drawn',\n    'beforeremove',\n    'removed',\n    'animationend'\n];\n\nconst compositions = [\n    'canvas',\n    'unit',\n    'layer',\n    'axis',\n    'facet-headers',\n    'legend',\n    'caption'\n];\n\nconst EVENT_LIST = [];\n\ncompositions.forEach((composition) => {\n    events.forEach((event) => {\n        EVENT_LIST.push(`${composition}.${event}`);\n    });\n});\n\nexport default EVENT_LIST;\n","import EVENT_LIST from './event-list';\nimport { createPromise } from './helper';\n\n/**\n * At first call it accepts one function\n * calling it second time accepts notification object.\n * notification object then called with first accepted function\n *\n * @param {Function} resolveFn a promise's resolve function\n * @return {Function} a function to accept notification object\n */\nconst resolver = resolveFn => notification => resolveFn(notification);\n\n/**\n * Checks if the property string is present in the source object\n *\n * @param {Object} source source object whom you want to check the property\n * @param {string} property key name that need to be checked\n * @return {boolean} returns true if the property found in the source object\n */\nconst hasOwn = (source, property) => Object.prototype.hasOwnProperty.call(source, property);\n\n/**\n * LifeCycleManager which goes as a dependendecy to a muze\n * it accepts notification from the entire library throughout\n * the exeecution life\n *\n * @export\n * @class LifeCycleManager\n */\nexport default class LifeCycleManager {\n\n    /**\n     * Creates an instance of LifeCycleManager.\n     * @memberof LifeCycleManager\n     */\n    constructor () {\n        this._eventList = EVENT_LIST;\n        this._promises = new Map();\n        this._notifiers = {};\n        this._lifeCycles = {};\n        this._unreleasedLifeCycles = {};\n        this._boot();\n    }\n\n    /**\n     * Fills all the notifiers with resolver callback\n     *\n     * @memberof LifeCycleManager\n     */\n    _boot () {\n        this._notifiers = this._eventList.reduce((acc, name) => {\n            acc[name] = resolver;\n            return acc;\n        }, {});\n        this._preparePromises();\n    }\n\n    /**\n     * Public method which gives the promise corresponding\n     * to the event name\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    retrieve (eventName) {\n        return this._promises.get(eventName);\n    }\n\n    /**\n     * Creates a promise that will be passed to user's callback\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} a pending promise waiting for resolve to be called\n     * @memberof LifeCycleManager\n     */\n    _makeNotifierPromise (eventName) {\n        return new Promise((resolve) => {\n            this._notifiers[eventName] = resolver(resolve);\n        });\n    }\n\n    /**\n     * Prepares the promise map with pending promises\n     * all the promises are in a pending state where their's\n     * resolve function waiting to be called with notification object\n     * @memberof LifeCycleManager\n     */\n    _preparePromises () {\n        this._eventList.forEach((eventName) => {\n            const promise = this._makeNotifierPromise(eventName);\n            this._promises.set(eventName, promise);\n            createPromise(promise, eventName, this);\n        });\n    }\n\n    /**\n     * Resolves the promise with notification object\n     *\n     * @param {string} eventName name of the event in the system\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     *\n     * @memberof LifeCycleManager\n     */\n    _resolvePromise (eventName, notification) {\n        this._notifiers[eventName](notification);\n    }\n\n    /**\n     * Public method which is being called by different\n     * subcompoents of the system at different execution atages\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    notify (notification) {\n        // get the composition name from notification\n        // or from static formalName() method\n        const composition = notification.formalName || notification.client.constructor.formalName();\n        notification.formalName = composition;\n        this._releasePromisesFromCache();\n        this._notify(composition, notification);\n    }\n\n    /**\n     * Notify user the with promsie in a callback\n     * if callback not found then cache it\n     *\n     * @param {string} composition\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    _notify (composition, notification) {\n        const stage = notification.action;\n        const eventName = `${composition}.${stage}`;\n\n        // resolves promise with the notification object\n        this._resolvePromise(eventName, notification);\n\n        // get the promise from the promise map\n        const promise = this.retrieve(eventName);\n\n        if (this._lifeCycles[composition]) {\n            if (this._lifeCycles[composition][stage]) {\n                // if user given call back exists, then call with promise\n                this._callLifeCycleCallback(composition, stage, promise);\n            } else {\n                // otherwise cache the promise\n                this._cachePromise(composition, stage, promise);\n            }\n        } else {\n            this._cachePromise(composition, stage, promise);\n        }\n    }\n\n    /**\n     * Calls the user's callback with callback\n     *\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _callLifeCycleCallback (composition, stage, promise) {\n        const eventName = `${composition}.${stage}`;\n        this._lifeCycles[composition][stage](promise);\n        this._resetTargetPromise(eventName);\n    }\n\n    /**\n     * Try to clear the cached promsies once we have\n     * macthed callbacks from the user\n     *\n     * @memberof LifeCycleManager\n     */\n    _releasePromisesFromCache () {\n        const compositions = Object.keys(this._unreleasedLifeCycles);\n        compositions.forEach((composition) => {\n            const stages = Object.keys(this._unreleasedLifeCycles[composition]);\n            stages.forEach((stage) => {\n                if (this._lifeCycles[composition]) {\n                    if (this._lifeCycles[composition][stage]) {\n                        // take the promise from unreleased lifeCycles\n                        const promise = this._unreleasedLifeCycles[composition][stage];\n                        // call the user given callback with that promise\n                        this._callLifeCycleCallback(composition, stage, promise);\n                        // delete promise from unreleased lifeCycles\n                        delete this._unreleasedLifeCycles[composition][stage];\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * Cache the promise in the map. This cache\n     * then get consumed if we get user callbacks\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _cachePromise (composition, stage, promise) {\n        if (!hasOwn(this._unreleasedLifeCycles, composition)) {\n            this._unreleasedLifeCycles[composition] = {};\n        }\n\n        if (!hasOwn(this._unreleasedLifeCycles[composition], stage)) {\n            this._unreleasedLifeCycles[composition][stage] = {};\n        }\n        this._unreleasedLifeCycles[composition][stage] = promise;\n    }\n\n    /**\n     * It register's the callbacks gievn the user\n     *\n     * @param {Object} [lifeCycles={}] a object with list of callbacks\n     * @memberof LifeCycleManager\n     */\n    register (lifeCycles = {}) {\n        this._lifeCycles = lifeCycles;\n        // as we get all the callbacks, try to call them\n        // from unreleased promise map\n        this._releasePromisesFromCache();\n    }\n\n    /**\n     * Reset the promise into pending state\n     *\n     * @param {string} eventName name of the event happening\n     * @memberof LifeCycleManager\n     */\n    _resetTargetPromise (eventName) {\n        setTimeout(() => {\n            this._notifiers[eventName] = resolver;\n            this._promises.set(eventName, this._makeNotifierPromise(eventName));\n        }, 0);\n    }\n}\n","import LifeCycleManager from './lifecycle-manager';\n\nexport default LifeCycleManager;\n","/**\n * Creates a new promise when the given promise is resolved. This needs to be done so that after the lifecycle event\n * is completed, then again when the event gets completed, then a new promise gets resolved.\n *\n * @param {Promise} promise Instance of promise\n * @param {string} eventName name of event\n * @param {LifeCycleManager} context Instance of lifecyclemanager\n */\nexport const createPromise = (promise, eventName, context) => {\n    promise.then(() => {\n        const prm = context._makeNotifierPromise(eventName);\n        context._promises.set(eventName, prm);\n        createPromise(prm, eventName, context);\n    });\n};\n","import { default as DataModel } from 'datamodel';\nimport * as scales from './scales';\nimport * as colorSchemes from './color-schemes';\nimport * as STATE_NAMESPACES from './enums/namespace';\n\nconst InvalidAwareTypes = DataModel.InvalidAwareTypes;\n\nexport {\n    InvalidAwareTypes,\n    DataModel\n};\n\nexport {\n    ReservedFields,\n    CommonProps,\n    COORD_TYPES\n} from './enums';\n\nexport { STATE_NAMESPACES };\n\nexport {\n    scales,\n    colorSchemes\n};\n\nexport {\n    getNearestValue,\n    getValueParser,\n    transformColors,\n    detectColor,\n    hslToRgb,\n    rgbToHsv,\n    hexToHsv,\n    hsvToRgb,\n    escapeHTML,\n    angleToRadian,\n    generateGetterSetters,\n    getArraySum,\n    ERROR_MSG,\n    interpolator,\n    colorInterpolator,\n    numberInterpolator,\n    piecewiseInterpolator,\n    reqAnimFrame,\n    cancelAnimFrame,\n    nextAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    replaceCSSPrefix,\n    symbolFns,\n    defaultValue,\n    easeFns,\n    clone,\n    interpolateArray,\n    getMinPoint,\n    getMaxPoint,\n    getClosestIndexOf,\n    registerListeners,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    enableChainedTransaction,\n    isHTMLElem,\n    isEqual,\n    isSimpleObject,\n    nextFrame,\n    getObjProp,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    transposeArray,\n    toArray,\n    extendsClass,\n    concatModels,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    nestCollection,\n    stack,\n    getSymbol,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    hslInterpolator,\n    getSmallestDiff,\n    require,\n    formatTemporal,\n    nearestSortingDetails,\n    createSelection,\n    temporalFields,\n    retrieveNearestGroupByReducers,\n    retrieveFieldDisplayName,\n    sanitizeDomainWhenEqual,\n    sortCategoricalField,\n    intersect\n} from './common-utils';\n\nexport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint,\n    hasTouch\n} from './renderer-utils';\n\nexport {\n    Store,\n    transactor\n} from './store';\n\nexport {\n    timeMillisecond,\n    timeSecond,\n    timeMinute,\n    timeHour,\n    timeDay,\n    timeWeek,\n    timeMonth,\n    timeYear\n} from 'd3-time';\n\nexport { default as Smartlabel } from 'fusioncharts-smartlabel';\nexport { dataSelect } from './DataSystem';\n\nexport { default as LifeCycleManager } from './lifecycle-manager';\n\nexport {\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    DateTimeFormatter,\n    DM_DERIVATIVES,\n    GROUP_BY_FUNCTIONS\n} from 'datamodel';\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\nexport const LONGTOUCH = 'longtouch';\nexport const TOUCHDRAG = 'touchdrag';\nexport const ALL_ACTIONS = '*';\n","const SELECTION_NEW_ENTRY = 1;\nconst SELECTION_NEW_EXIT = -1;\nconst SELECTION_NULL = 0;\nconst SELECTION_OLD_ENTRY = 2;\nconst SELECTION_OLD_EXIT = -2;\n\nexport {\n    SELECTION_NEW_ENTRY,\n    SELECTION_NEW_EXIT,\n    SELECTION_NULL,\n    SELECTION_OLD_ENTRY,\n    SELECTION_OLD_EXIT\n};\n","import SelectionSet from './selection-set';\n\nexport default SelectionSet;\n","import {\n    SELECTION_NEW_ENTRY, SELECTION_NEW_EXIT, SELECTION_NULL, SELECTION_OLD_ENTRY, SELECTION_OLD_EXIT\n} from '../enums/selection';\n/* eslint-disable guard-for-in */\n\n/**\n * This component is used to keep track of the row tuples of the data which gets added and removed. This keeps\n * information of which rows are in previous and new entry set and previous and new exit set. This is initialized by\n * {@link Firebolt}.\n *\n * @public\n *\n * @class SelectionSet\n */\nclass SelectionSet {\n    /**\n     * Creates an instance of selection set\n     *\n     * @param {Array.<string>} completeSet Set of unique ids.\n     */\n    constructor (completeSet, _volatile) {\n        this.completeSet = completeSet;\n        this._set = completeSet.reduce((obj, key) => {\n            obj[key] = SELECTION_NULL;\n            return obj;\n        }, {});\n        this._volatile = _volatile;\n        this._completeSetCount = completeSet.length;\n        this._lockedSelection = {};\n        this._resetted = true;\n    }\n\n    /**\n     * Adds a set of ids to the selection set. This also moves the other rows to exit set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    add (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_ENTRY;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_ENTRY && set[key] !== SELECTION_OLD_ENTRY) {\n                set[key] = set[key] < 0 ? SELECTION_OLD_EXIT : SELECTION_NEW_EXIT;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Adds an array of ids to the old entry set.\n     *\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    update (ids) {\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_OLD_ENTRY;\n        });\n\n        return this;\n    }\n\n    /**\n     * Moves all ids which in new entry set  to old entry set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateEntry () {\n        const set = this._set;\n\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_ENTRY ? SELECTION_OLD_ENTRY : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Moves an array of ids which are in new exit set to old exit set.\n     *\n     * @public\n     *\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateExit () {\n        const set = this._set;\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_EXIT ? SELECTION_OLD_EXIT : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Removes an array of ids from the selection set. It also moves the remaining row ids to entry set.\n     *\n     * @public\n     * @param {Array.<string>} ids Array of unique ids\n     *\n     * @return {SelectionSet}  Instance of selection set\n     */\n    remove (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_EXIT;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_EXIT && set[key] !== SELECTION_OLD_EXIT) {\n                set[key] = set[key] === 0 ? SELECTION_NEW_ENTRY : SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n\n    getSets () {\n        const set = this._set;\n        const retObj = {\n            entrySet: [[], []],\n            exitSet: [[], []],\n            completeSet: []\n        };\n\n        for (const key in set) {\n            if (set[key] > 0) {\n                set[key] === SELECTION_OLD_ENTRY && retObj.entrySet[0].push(key);\n                set[key] === SELECTION_NEW_ENTRY && retObj.entrySet[1].push(key);\n            } else if (set[key] < 0) {\n                set[key] === SELECTION_OLD_EXIT && retObj.exitSet[0].push(key);\n                set[key] === SELECTION_NEW_EXIT && retObj.exitSet[1].push(key);\n            }\n            retObj.completeSet.push(key);\n        }\n\n        ['entrySet', 'exitSet'].forEach((type) => {\n            retObj[type] = retObj[type].map(e => e.map(Number));\n        });\n        retObj.completeSet = retObj.completeSet.map(Number);\n\n        return retObj;\n    }\n\n    /**\n     * Resets an array of ids in the selection set to initial state. It sets the value of every unique id value to\n     * null in the selection set which means they are neither in entry set nor in exit set. If no ids are passed,\n     * then it resets all the ids to null.\n     *\n     * @public\n     *\n     * @param {Array} ids Array of unique ids.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    reset (ids) {\n        const set = this._set;\n        if (ids) {\n            ids.forEach((i) => {\n                set[i] = SELECTION_NULL;\n            });\n        } else {\n            const lockedSel = this._lockedSelection;\n            for (const key in set) {\n                if (!(key in lockedSel)) {\n                    set[key] = SELECTION_NULL;\n                }\n            }\n        }\n        this._resetted = true;\n        return this;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     *\n     * @public\n     *\n     * @return {Array.<string>} Array of unique ids\n     */\n    getEntrySet () {\n        const set = this._set;\n        const addSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_ENTRY && addSet.push(key);\n        }\n\n        return addSet;\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in entry set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old entry set or new entry set\n     */\n    getExistingEntrySet (addSet) {\n        const set = this._set;\n        return addSet.filter(d => set[d] === SELECTION_NEW_ENTRY || set[d] === SELECTION_OLD_ENTRY);\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old exit set or new exit set\n     */\n    getExistingExitSet (removeSet) {\n        const set = this._set;\n        return removeSet.filter(d => set[d] === SELECTION_NEW_EXIT || set[d] === SELECTION_OLD_EXIT);\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldEntry () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_ENTRY && updateSet.push(key);\n        }\n        return updateSet;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldExit () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_EXIT && updateSet.push(key);\n        }\n\n        return updateSet;\n    }\n\n    /**\n     * Gets the array of ids which are in the exit set.\n     *\n     * @public\n     * @return {Array.<string>} Array of unique ids\n     */\n    getExitSet () {\n        const set = this._set;\n        const removeSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_EXIT && removeSet.push(key);\n        }\n        return removeSet;\n    }\n\n    /**\n     * Gets all the ids which are either in exit or entry set.\n     *\n     * @public\n     * @return {Array} Array of unique ids\n     */\n    getCompleteSet () {\n        const set = this._set;\n        const completeSet = [];\n\n        for (const key in set) {\n            completeSet.push(key);\n        }\n\n        return completeSet;\n    }\n\n    getCompleteSetCount () {\n        return this._completeSetCount;\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Swaps the add set and remove set in the selection set.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    toggle () {\n        const set = this._set;\n\n        for (const key in set) {\n            if (set[key] === SELECTION_NEW_ENTRY) {\n                set[key] = SELECTION_NEW_EXIT;\n            } else if (set[key] === SELECTION_NEW_EXIT) {\n                set[key] = SELECTION_NEW_ENTRY;\n            } else if (set[key] === SELECTION_OLD_ENTRY) {\n                set[key] = SELECTION_OLD_EXIT;\n            } else {\n                set[key] = SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n}\n\nexport default SelectionSet;\n","export const CLASSPREFIX = 'muze';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\n\nexport const DRAG_EVENTS = {\n    START: 'dragstart',\n    END: 'dragend',\n    DRAG: 'drag'\n};\n\nexport const D3_DRAG_EVENTS = {\n    [DRAG_EVENTS.START]: 'start',\n    [DRAG_EVENTS.END]: 'end',\n    [DRAG_EVENTS.DRAG]: 'drag'\n};\n","import { clone, retrieveNearestGroupByReducers, getEvent, getD3Drag } from 'muze-utils';\nimport * as SELECTION from '../enums/selection';\nimport { D3_DRAG_EVENTS } from '../enums/constants';\n\nexport const initializeSideEffects = (context, sideEffects) => {\n    const sideEffectsMap = context._sideEffects;\n    sideEffects = sideEffects instanceof Array ? sideEffects : Object.values(sideEffects);\n    sideEffects.forEach((SideEffect) => {\n        const formalName = SideEffect.formalName();\n        const sideEffectInstance = sideEffectsMap[formalName];\n        sideEffectsMap[formalName] = sideEffectInstance || new SideEffect(context);\n    });\n    return sideEffectsMap;\n};\n\nexport const setSideEffectConfig = (sideEffects, config) => {\n    for (const key in sideEffects) {\n        const sideEffect = sideEffects[key];\n        const formalName = sideEffect.constructor.formalName();\n        const sideEffectConf = config[formalName];\n\n        sideEffectConf && sideEffect.config(sideEffectConf);\n    }\n};\n\nexport const initializeBehaviouralActions = (context, actions) => {\n    const dispatchableBehaviours = {};\n\n    actions = actions instanceof Array ? actions : Object.values(actions);\n    actions.forEach((Action) => {\n        dispatchableBehaviours[Action.formalName()] = new Action(context);\n    });\n    return dispatchableBehaviours;\n};\n\nexport const initializePhysicalActions = (context, actions) => {\n    const physicalActions = {};\n\n    for (const name in actions) {\n        if (!({}).hasOwnProperty.call(name, actions)) {\n            physicalActions[name] = actions[name](context);\n        }\n    }\n    return physicalActions;\n};\n\nexport const changeSideEffectAvailability = (context, fn, toEnable) => {\n    const sideEffects = context.sideEffects();\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            let change = true;\n            if (fn && fn(key) === false) {\n                change = false;\n            }\n            if (change) {\n                toEnable ? sideEffects[key].enable() : sideEffects[key].disable();\n            }\n        }\n    }\n};\n\nexport const getMergedSet = set => [...new Set([...set[0], ...set[1]])];\n\nexport const getSourceFields = (propagationInf, criteria = {}) => {\n    const sourceIdentifiers = propagationInf.sourceIdentifiers;\n    let sourceFields;\n    if (sourceIdentifiers) {\n        sourceFields = sourceIdentifiers.getSchema().map(d => d.name);\n    } else if (criteria instanceof Array) {\n        sourceFields = criteria[0];\n    } else {\n        sourceFields = Object.keys(criteria || {});\n    }\n    return sourceFields;\n};\n\nconst conditionsMap = {\n    mergedEnter: [SELECTION.SELECTION_NEW_ENTRY, SELECTION.SELECTION_OLD_ENTRY],\n    mergedExit: [SELECTION.SELECTION_NEW_EXIT, SELECTION.SELECTION_OLD_EXIT],\n    complete: []\n};\n\nexport const getModelFromSet = (type, model, set) => {\n    const conditions = conditionsMap[type];\n    if (model && conditions) {\n        return model.select((fields, i) =>\n           (conditions.some(condition => set[i] === condition)), {\n               saveChild: false\n           });\n    }\n    return null;\n};\n\nexport const getSetInfo = (type, set, config) => {\n    let model = null;\n    const filteredDataModel = config.filteredDataModel;\n    const selectionSet = config.selectionSet;\n    if (!config.propagationData) {\n        if (selectionSet.resetted()) {\n            model = null;\n        } else if (type === 'mergedEnter') {\n            model = getModelFromSet(type, config.dataModel, config.selectionSet._set);\n        }\n    } else if (filteredDataModel) {\n        model = type === 'mergedEnter' ? filteredDataModel[0] : filteredDataModel[1];\n    }\n    return {\n        uids: set,\n        length: set.length,\n        model\n    };\n};\n\nexport const getSideEffects = (behaviour, behaviourEffectMap) => {\n    const sideEffects = [];\n    for (const key in behaviourEffectMap) {\n        const behaviours = key.split(',');\n        const found = behaviours.some(d => d === behaviour);\n        if (found) {\n            sideEffects.push({\n                effects: behaviourEffectMap[key],\n                behaviours\n            });\n        }\n    }\n    return sideEffects;\n};\n\nexport const unionSets = (firebolt, behaviours) => {\n    let combinedSet = {};\n    const models = {\n        mergedEnter: null,\n        mergedExit: null\n    };\n    const uidSet = {\n        mergedEnter: [],\n        mergedExit: []\n    };\n\n    const { context } = firebolt;\n    behaviours.forEach((behaviour) => {\n        const entryExitSet = firebolt._entryExitSet[behaviour];\n        if (entryExitSet) {\n            combinedSet = Object.assign(combinedSet, clone(entryExitSet));\n            ['mergedEnter', 'mergedExit'].forEach((type) => {\n                const { model, uids } = entryExitSet[type];\n                let existingModel = models[type];\n\n                if (!existingModel) {\n                    existingModel = models[type] = model;\n                    uidSet[type] = uids;\n                } else if (`${model.getSchema().map(d => d.name).sort()}` ===\n                    `${existingModel.getSchema().map(d => d.name).sort()}`) {\n                    uidSet[type] = [...uidSet[type], ...uids];\n                } else {\n                    existingModel = model;\n                    uidSet[type] = uids;\n                }\n                combinedSet[type].uids = [...new Set(uidSet[type])];\n            });\n        }\n    });\n\n    ['mergedEnter', 'mergedExit'].forEach((type) => {\n        if (behaviours.length > 1) {\n            const uids = combinedSet[type].uids.reduce((acc, v) => {\n                acc[v] = true;\n                return acc;\n            }, {});\n            combinedSet[type].model = context.data().select((f, i) => uids[i], { saveChild: false });\n        }\n        combinedSet[type].aggFns = retrieveNearestGroupByReducers(combinedSet[type].model);\n    });\n    return combinedSet;\n};\n\nexport const attachEventListeners = (firebolt, eventListeners, targetElements) => {\n    const { context } = firebolt;\n    const d3Drag = getD3Drag()();\n\n    targetElements.forEach((targetEl) => {\n        let isDragEvent = true;\n\n        for (const event in eventListeners) {\n            const handler = eventListeners[event];\n            const dragEvent = /drag/.test(event);\n\n            isDragEvent = isDragEvent && dragEvent;\n\n            const fn = (data) => {\n                const e = getEvent();\n                const pos = context.getRelativePositionFromEvent(e);\n\n                handler({\n                    originalEvent: e,\n                    pos,\n                    elemData: data\n                });\n            };\n            isDragEvent ? d3Drag.on(D3_DRAG_EVENTS[event], fn) : targetEl.on(event, fn);\n        }\n        isDragEvent && targetEl.call(d3Drag);\n    });\n};\n","import {\n    mergeRecursive,\n    hasTouch,\n    selectElement,\n    isSimpleObject\n} from 'muze-utils';\nimport { ALL_ACTIONS } from './enums/actions';\nimport SelectionSet from './selection-set';\nimport {\n    initializeBehaviouralActions,\n    initializeSideEffects,\n    changeSideEffectAvailability,\n    initializePhysicalActions,\n    unionSets,\n    getSideEffects,\n    setSideEffectConfig\n} from './helper';\n\n/**\n * This class is responsible for dispatching behavioural actions and side effects. It also keeps the information of\n * registered physical actions, behavioural actions and side effects. Also, it keeps the map of physical and behavioural\n * actions and behavioural actions and side effects. Whenever any behavioural action is dispatched, it also propagates\n * the rows which got affected to the other datamodels. This class is initialized by {@link VisualUnit} and legend to\n * manage it's interaction.\n *\n * @public\n * @class Firebolt\n * @module Firebolt\n */\nexport default class Firebolt {\n    constructor (context, actions, sideEffects, behaviourEffectMap) {\n        this.context = context;\n        this._sideEffectDefinitions = {};\n        this._sideEffects = {};\n        this._propagationInf = {};\n        this._actions = {\n            behavioural: {},\n            physical: {}\n        };\n        this._selectionSet = {};\n        this._volatileSelectionSet = {};\n        this._propagationFields = {};\n        this._sourceSideEffects = {};\n        this._propagationBehaviourMap = {};\n        this._sourceBehaviours = {};\n        this._actionBehaviourMap = {};\n        this._config = {};\n        this._behaviourEffectMap = {};\n        this._entryExitSet = {};\n        this._actionHistory = {};\n        this._queuedSideEffects = {};\n\n        this.mapSideEffects(behaviourEffectMap);\n        this.registerBehaviouralActions(actions.behavioural);\n        this.registerSideEffects(sideEffects);\n        this.registerPhysicalBehaviouralMap(actions.physicalBehaviouralMap);\n        this.registerPhysicalActions(actions.physical);\n    }\n\n    config (...config) {\n        if (config.length) {\n            this._config = mergeRecursive(this._config, config[0]);\n            setSideEffectConfig(this.sideEffects(), this._config);\n            return this;\n        }\n        return this._config;\n    }\n\n    mapSideEffects (behEffectMap) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        for (const key in behEffectMap) {\n            if ({}.hasOwnProperty.call(behEffectMap, key)) {\n                const sideEffects = behEffectMap[key] || [];\n                let preventDefaultActions = false;\n                let effectNames;\n                if (isSimpleObject(sideEffects)) {\n                    effectNames = sideEffects.effects;\n                    preventDefaultActions = sideEffects.preventDefaultActions;\n                } else {\n                    effectNames = sideEffects;\n                }\n                !behaviourEffectMap[key] && (behaviourEffectMap[key] = []);\n                this._behaviourEffectMap[key] = [...new Set(preventDefaultActions ? effectNames :\n                    [...behaviourEffectMap[key], ...effectNames])];\n            }\n        }\n        return this;\n    }\n\n    registerBehaviouralActions (actions) {\n        const behaviours = initializeBehaviouralActions(this, actions);\n        this.prepareSelectionSets(behaviours);\n        Object.assign(this._actions.behavioural, behaviours);\n        return this;\n    }\n\n    prepareSelectionSets () {\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        this.initializeSideEffects();\n        return this;\n    }\n\n    applySideEffects (sideEffects, selectionSet, payload) {\n        const sideEffectStore = this.sideEffects();\n        const actionHistory = this._actionHistory;\n        const queuedSideEffects = this._queuedSideEffects;\n        sideEffects.forEach((sideEffect) => {\n            let options;\n            let name;\n            const effects = sideEffect.effects;\n            const behaviours = sideEffect.behaviours;\n            const combinedSet = unionSets(this, behaviours, selectionSet);\n            effects.forEach((effect) => {\n                if (typeof effect === 'object') {\n                    name = effect.name;\n                    options = effect.options;\n                } else {\n                    name = effect;\n                }\n\n                const sideEffectInstance = sideEffectStore[name];\n                if (sideEffectInstance.isEnabled()) {\n                    if (!sideEffectInstance.constructor.mutates() &&\n                        Object.values(actionHistory).some(d => d.isMutableAction)) {\n                        queuedSideEffects[`${name}-${behaviours.join()}`] = {\n                            name,\n                            params: [combinedSet, payload, options]\n                        };\n                    } else {\n                        this.dispatchSideEffect(name, combinedSet, payload, options);\n                    }\n                }\n            });\n        });\n        return this;\n    }\n\n    dispatchSideEffect (name, selectionSet, payload, options = {}) {\n        const sideEffectStore = this.sideEffects();\n        const sideEffect = sideEffectStore[name];\n        let disable = false;\n        if (options.filter && options.filter(sideEffect)) {\n            disable = true;\n        }\n        !disable && sideEffectStore[name].apply(selectionSet, payload, options);\n    }\n\n    registerPropagationBehaviourMap (map) {\n        this._propagationBehaviourMap = Object.assign(this._propagationBehaviourMap, map || {});\n        return this;\n    }\n\n    dispatchBehaviour (behaviour, payload, propagationInfo = {}) {\n        const propagate = propagationInfo.propagate !== undefined ? propagationInfo.propagate : true;\n        const behaviouralActions = this._actions.behavioural;\n        const action = behaviouralActions[behaviour];\n        const behaviourEffectMap = this._behaviourEffectMap;\n        const sideEffects = getSideEffects(behaviour, behaviourEffectMap);\n        this._propagationInf = propagationInfo;\n\n        if (action) {\n            const selectionSet = action.dispatch(payload);\n            const propagationSelectionSet = this.getPropagationSelectionSet(selectionSet);\n            this._entryExitSet[behaviour] = propagationSelectionSet;\n            const shouldApplySideEffects = this.shouldApplySideEffects(propagate);\n\n            if (propagate) {\n                this.propagate(behaviour, payload, selectionSet.find(d => d.sourceSelectionSet), sideEffects);\n            }\n            if (shouldApplySideEffects) {\n                const applicableSideEffects = this.getApplicableSideEffects(sideEffects, payload, propagationInfo);\n                this.applySideEffects(applicableSideEffects, propagationSelectionSet, payload);\n            }\n        }\n\n        return this;\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet.find(d => !d.sourceSelectionSet);\n    }\n\n    shouldApplySideEffects () {\n        return true;\n    }\n\n    changeBehaviourStateOnPropagation (behaviour, value, key = 'default') {\n        const behaviourConditions = this._sourceBehaviours[behaviour] || (this._sourceBehaviours[behaviour] = {});\n        if (value instanceof Function) {\n            behaviourConditions[key] = value;\n        } else {\n            behaviourConditions[key] = () => value;\n        }\n        return this;\n    }\n\n    changeSideEffectStateOnPropagation (sideEffect, value, key = 'default') {\n        const sideEffectConditions = this._sourceSideEffects[sideEffect] || (this._sourceSideEffects[sideEffect] = {});\n        if (value instanceof Function) {\n            sideEffectConditions[key] = value;\n        } else {\n            sideEffectConditions[key] = () => value;\n        }\n    }\n\n    removeSideEffectPolicy (sideEffect, key) {\n        delete this._sourceSideEffects[sideEffect][key];\n        return this;\n    }\n\n    removeBehaviourPolicy (behaviour, key) {\n        delete this._sourceBehaviours[behaviour][key];\n        return this;\n    }\n\n    propagate () {\n        return this;\n    }\n\n    sideEffects (...sideEffects) {\n        if (sideEffects.length) {\n            this._sideEffects = sideEffects[0];\n            return this;\n        }\n        return this._sideEffects;\n    }\n\n    enableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, true);\n        return this;\n    }\n\n    disableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, false);\n        return this;\n    }\n\n    dissociateBehaviour (behaviour, physicalAction) {\n        const actionBehaviourMap = this._actionBehaviourMap;\n        for (const key in actionBehaviourMap) {\n            if (key === physicalAction) {\n                const behaviourMap = actionBehaviourMap[key];\n                behaviourMap.behaviours = behaviourMap.behaviours.filter(d => d !== behaviour);\n                this.mapActionsAndBehaviour(key);\n            }\n        }\n\n        return this;\n    }\n\n    dissociateSideEffect (sideEffect, behaviour) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        behaviourEffectMap[behaviour] = behaviourEffectMap[behaviour].filter(d => (d.name || d) !== sideEffect);\n        return this;\n    }\n\n    getApplicableSideEffects (sideEffects) {\n        return sideEffects;\n    }\n\n    attachPropagationListener (dataModel) {\n        dataModel.unsubscribe('propagation');\n        dataModel.on('propagation', this.onDataModelPropagation());\n        return this;\n    }\n\n    onDataModelPropagation () {\n        return (propValue) => {\n            const payload = propValue.payload;\n            const action = payload.action;\n\n            this.dispatchBehaviour(action, payload, {\n                propagate: false\n            });\n        };\n    }\n\n    createSelectionSet (uniqueIds, behaviouralActions) {\n        const behaviours = behaviouralActions || this._actions.behavioural;\n        const selectionSet = this._selectionSet;\n        const volatileSelectionSet = this._volatileSelectionSet;\n\n        for (const key in behaviours) {\n            if ({}.hasOwnProperty.call(behaviours, key)) {\n                selectionSet[key] = new SelectionSet(uniqueIds);\n                volatileSelectionSet[key] = new SelectionSet(uniqueIds, true);\n                this._entryExitSet[key] = null;\n            }\n        }\n        this._volatileSelectionSet = volatileSelectionSet;\n        this.selectionSet(selectionSet);\n        return this;\n    }\n\n    selectionSet (...selectionSet) {\n        if (selectionSet.length) {\n            this._selectionSet = selectionSet[0];\n            return this;\n        }\n        return this._selectionSet;\n    }\n\n    initializeSideEffects () {\n        const sideEffectDefinitions = this._sideEffectDefinitions;\n        this.sideEffects(initializeSideEffects(this, sideEffectDefinitions));\n        return this;\n    }\n\n    registerPhysicalActions (actions) {\n        const initedActions = initializePhysicalActions(this, actions);\n        Object.assign(this._actions.physical, initedActions);\n        return this;\n    }\n\n    /**\n     * Allows to propagate the datamodel with only the supplied fields. When propagation is done, then the fields\n     * which are supplied for the specified behavioural action is propagated.\n     *\n     * @public\n     *\n     * @param {string} action Name of behavioural action. If '*' is specified, then for all behavioural actions it is\n     * applied.\n     * @param {Array} fields Array of field names which will be propagated.\n     * @param {boolean} append If true, then it is appended to the existing propagation data model fields else only\n     * those fields are projected from propagation data model and propagated.\n     *\n     * @return {Firebolt} Instance of firebolt\n     */\n    propagateWith (action, fields, append = false) {\n        const behaviouralActions = this._actions.behavioural;\n        if (action === ALL_ACTIONS) {\n            for (const key in behaviouralActions) {\n                this._propagationFields[key] = {\n                    fields,\n                    append\n                };\n            }\n        } else {\n            this._propagationFields[action] = {\n                fields,\n                append\n            };\n        }\n        return this;\n    }\n\n    /**\n     * Map actions and behaviours\n     * @return {Firebolt} Firebolt instance\n     */\n    mapActionsAndBehaviour (phyAction) {\n        const initedPhysicalActions = this._actions.physical;\n        const map = this._actionBehaviourMap;\n\n        for (const action in map) {\n            if (!({}).hasOwnProperty.call(action, map) && action === (phyAction || action)) {\n                let target;\n                const mapObj = map[action];\n                target = mapObj.target;\n                const touch = mapObj.touch;\n                if (!target) {\n                    target = this.context.getDefaultTargetContainer();\n                }\n                const bind = hasTouch() ? touch === true || touch === undefined : !touch;\n                bind && this.bindActionWithBehaviour(initedPhysicalActions[action],\n                    target, mapObj.behaviours);\n            }\n        }\n        return this;\n    }\n\n    registerPhysicalBehaviouralMap (map) {\n        this._actionBehaviourMap = mergeRecursive(this._actionBehaviourMap, map);\n        return this;\n    }\n\n    /**\n     * Binds a target element with an action.\n     *\n     * @param {Function} action Action method\n     * @param {string} target Class name of element\n     * @param {Array} behaviourList Array of behaviours\n     * @return {FireBolt} Instance of firebolt\n     */\n    bindActionWithBehaviour (action, targets, behaviourList) {\n        if (typeof (targets) === 'string') {\n            targets = [targets];\n        }\n        targets.forEach((target) => {\n            const mount = this.context.mount();\n            const nodes = target.node instanceof Function ? target : selectElement(mount).selectAll(target);\n            if (!nodes.empty()) {\n                if (nodes instanceof Array) {\n                    nodes.forEach((node) => {\n                        action(selectElement(node), behaviourList);\n                    });\n                } else {\n                    action(nodes, behaviourList);\n                }\n            }\n        });\n        return this;\n    }\n\n    getPropagationInf () {\n        return this._propagationInf;\n    }\n\n    getSelectionSets (action) {\n        const sourceId = this.context.id();\n        const propagationInf = this._propagationInf || {};\n        const propagationSource = propagationInf.sourceId;\n        let applicableSelectionSets = [];\n        if (propagationSource !== sourceId) {\n            applicableSelectionSets = [this._volatileSelectionSet[action]];\n        }\n\n        if (propagationSource) {\n            applicableSelectionSets.push(this.selectionSet()[action]);\n        }\n        return applicableSelectionSets;\n    }\n\n    getFullData () {\n        return this.context.data();\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Returns the entry and exit set information of the specified behavioural action.\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of behavioural action.\n     *\n     * @return {Object} Entry exit set information.\n     */\n    getEntryExitSet (behaviour) {\n        return this._entryExitSet[behaviour];\n    }\n}\n","import { getSetInfo, getMergedSet, getSourceFields } from '../../helper';\n\n/**\n * This is the base class has all the common functionalities needed for all behavioural actions. Any other behavioural\n * action needs to extend this class.\n *\n * @public\n * @class GenericBehaviour\n * @module GenericBehaviour\n */\nexport default class GenericBehaviour {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n    }\n\n    /**\n     * Returns entry and exit set information. This method is called by firebolt when ```dispatchBehaviour``` is called\n     * dynamically or when any physical action is triggered on the chart.\n     *\n     * @param {Object} payload Payload information.\n     * @param {Object|Array} payload.criteria Identifiers of data interacted with.\n     *\n     * @return {Array} Entry and exit set information.\n     */\n    dispatch (payload) {\n        const criteria = payload.criteria;\n        const firebolt = this.firebolt;\n        const formalName = this.constructor.formalName();\n        const selectionSets = firebolt.getSelectionSets(formalName);\n        const {\n            model: filteredDataModel,\n            uids\n        } = this.getAddSetFromCriteria(criteria, this.firebolt.getPropagationInf());\n        const entryExitSets = selectionSets.map((selectionSet) => {\n            this.setSelectionSet(uids, selectionSet);\n            return this.getEntryExitSet(selectionSet, filteredDataModel, payload);\n        });\n\n        return entryExitSets;\n    }\n\n    getAddSetFromCriteria (criteria, propagationInf = {}) {\n        const context = this.firebolt.context;\n        const filteredDataModel = propagationInf.data ? propagationInf.data :\n            context.getDataModelFromIdentifiers(criteria, 'all');\n\n        return {\n            model: filteredDataModel,\n            uids: criteria ? (propagationInf.data ? propagationInf.entryRowIds :\n                filteredDataModel[0].getUids()) : null\n        };\n    }\n\n    /**\n     * Updates the selection set by adding uids to the instance of {@link SelectionSet} or removing them.\n     * {@link SelectionSet} keeps the information of which rows are in the entry set and exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of row ids which got affected during interaction.\n     * @param {SelectionSet} selectionSet Instance of selection set.\n     *\n     * @return {GenericBehaviour} Instance of behaviour.\n     */\n    setSelectionSet () {\n        return this;\n    }\n\n    getEntryExitSet (selectionSet, filteredDataModel, payload) {\n        const {\n            entrySet,\n            exitSet,\n            completeSet\n        } = selectionSet.getSets();\n        const propagationInf = this.firebolt.getPropagationInf();\n        const dataModel = this.firebolt.getFullData();\n        const setConfig = {\n            dataModel,\n            filteredDataModel,\n            propagationData: propagationInf.data,\n            selectionSet\n        };\n\n        return {\n            entrySet: [getSetInfo('oldEntry', entrySet[0], setConfig),\n                getSetInfo('newEntry', entrySet[1], setConfig)],\n            exitSet: [getSetInfo('oldEntry', exitSet[0], setConfig),\n                getSetInfo('newExit', exitSet[1], setConfig)],\n            mergedEnter: getSetInfo('mergedEnter', getMergedSet(entrySet), setConfig),\n            mergedExit: getSetInfo('mergedExit', getMergedSet(exitSet), setConfig),\n            completeSet: getSetInfo('complete', completeSet, setConfig),\n            fields: getSourceFields(propagationInf, payload.criteria),\n            sourceSelectionSet: selectionSet._volatile === true\n        };\n    }\n\n    static mutates () {\n        return false;\n    }\n\n    enable () {\n        this._enabled = true;\n    }\n\n    disable () {\n        this._enabled = false;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n}\n\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class VolatileBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n                // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                    || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            selectionSet.updateExit();\n            const { entrySet } = selectionSet.getSets();\n            selectionSet.reset(getMergedSet(entrySet));\n            selectionSet.add(addSet);\n            selectionSet.update(existingAddSet);\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n    }\n}\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n","import VolatileBehaviour from './volatile';\nimport { HIGHLIGHT } from '../../enums/behaviours';\n\nexport default class HighlightBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return HIGHLIGHT;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport * as BEHAVIOURNAMES from '../../enums/behaviours';\n\n/**\n * This is the behaviour for brushing a region on the chart. It accepts a payload\n * which contains the x and y range of the data and other configuration. It will then\n * create a selection box from the range and select the points which fall within the range.\n */\nexport default class BrushBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return BEHAVIOURNAMES.BRUSH;\n    }\n\n    getAddSetFromCriteria (criteria, propagationInf = {}) {\n        const context = this.firebolt.context;\n        const hasBarLayer = !!context.layers().find(f => f.constructor.name === 'BarLayer');\n        const filteredDataModel = propagationInf.data ? propagationInf.data :\n            context.getDataModelFromIdentifiers(criteria, 'all', undefined, hasBarLayer);\n\n        return {\n            model: filteredDataModel,\n            uids: criteria ? (propagationInf.data ? propagationInf.entryRowIds :\n                filteredDataModel[0].getUids()) : null\n        };\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport { FILTER } from '../../enums/behaviours';\n\nexport default class FilterBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return FILTER;\n    }\n\n    static mutates () {\n        return true;\n    }\n}\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class PersistentBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            const propagationInf = this.firebolt.getPropagationInf();\n            // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            if (propagationInf.propagate === false) {\n                selectionSet.updateExit();\n                const { entrySet } = selectionSet.getSets();\n                selectionSet.reset(getMergedSet(entrySet));\n                selectionSet.add(addSet);\n                selectionSet.update(existingAddSet);\n            } else {\n                // existing add set\n                if (existingAddSet.length) {\n                    selectionSet.updateExit();\n                    selectionSet.remove(existingAddSet);\n                } else {\n                    selectionSet.updateEntry();\n                    selectionSet.add(addSet);\n                }\n                const { exitSet } = selectionSet.getSets();\n                const mergedExitSet = getMergedSet(exitSet);\n                const completeSetCount = selectionSet.getCompleteSet().length;\n                if (mergedExitSet.length === completeSetCount) {\n                    selectionSet.reset();\n                }\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n\n        return this;\n    }\n}\n","import PersistentBehaviour from './persistent';\nimport { SELECT } from '../../enums/behaviours';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return SELECT;\n    }\n}\n\n","import { DimensionSubtype, COORD_TYPES } from 'muze-utils';\n\nconst dragCriteriaRetriever = {\n    [COORD_TYPES.CARTESIAN]: (context, sourceInfo, { startPos, endPos }) => {\n        const fieldsConfig = context.data().getFieldsConfig();\n        const axes = sourceInfo.axes;\n        const xAxis = axes.x[0];\n        const yAxis = axes.y[0];\n        const axisFields = sourceInfo.fields;\n        const xField = axisFields.x[0].getMembers()[0];\n        const yField = axisFields.y[0].getMembers()[0];\n        const xFieldType = fieldsConfig[xField].def.subtype;\n        const yFieldType = fieldsConfig[yField].def.subtype;\n        const dimensions = {};\n\n        const isXDimension = xFieldType === DimensionSubtype.CATEGORICAL;\n        const isYDimension = yFieldType === DimensionSubtype.CATEGORICAL;\n        const xRange = xAxis.invertExtent(startPos.x, endPos.x);\n        const yRange = yAxis.invertExtent(startPos.y, endPos.y);\n        const selectedDomains = {\n            x: isXDimension ? xRange : xRange.sort((a, b) => a - b),\n            y: isYDimension ? yRange : yRange.sort((a, b) => a - b)\n        };\n        const rangeObj = {};\n\n        rangeObj[xField] = selectedDomains.x;\n        rangeObj[yField] = selectedDomains.y;\n\n        if (xField === yField) {\n            const xdom = selectedDomains.x;\n            const ydom = selectedDomains.y;\n            const min = xdom[0] > ydom[0] ? ydom : xdom;\n            const max = min === ydom ? xdom : ydom;\n            if (min[1] < max[0]) {\n                rangeObj[xField] = [];\n            } else {\n                rangeObj[xField] = [max[0], min[1] < max[1] ? min[1] : max[1]];\n            }\n        }\n\n        dimensions.x = [startPos.x, endPos.x];\n        dimensions.y = [startPos.y, endPos.y];\n\n        return {\n            criteria: rangeObj,\n            dimensions\n        };\n    },\n    [COORD_TYPES.POLAR]: () => ({\n        criteria: null\n    })\n};\n\n/**\n * Gets the drag action configuration\n * @param {VisualUnit} instance instance of visual unit\n * @param {Object} config x y positions\n * @return {Object} Payload of behaviour\n*/\n/* istanbul ignore next */ const getDragActionConfig = (context, config) => {\n    const sourceInfo = context.getSourceInfo();\n    const { startPos, endPos } = config;\n    const coordType = context.coord();\n\n    if (startPos.x === endPos.x && startPos.y === endPos.y) {\n        return {\n            criteria: null\n        };\n    }\n\n    return dragCriteriaRetriever[coordType](context, sourceInfo, config);\n};\n\nexport default getDragActionConfig;\n","import {\n    getEvent,\n    getD3Drag\n} from 'muze-utils';\nimport getDragActionConfig from './drag-action-config';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const attachDragEvent = (targetEl, behaviours, firebolt, touch) => {\n    let startPos = {};\n    let endPos = {};\n    let drawingInf;\n\n    const d3Drag = getD3Drag();\n    let touchStart;\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n        drawingInf = firebolt.context.getDrawingContext();\n        touchStart = new Date().getTime();\n    }).on('drag', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        if (touch && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context, {\n            startPos,\n            endPos\n        });\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }).on('end', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        const duration = new Date().getTime() - touchStart;\n\n        if (touch && duration > 100 && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context, {\n            startPos,\n            endPos\n        });\n        payload.dragEnd = true;\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }));\n};\n\n","import { getClientPoint, getEvent } from 'muze-utils';\nimport { CONSOLIDATED, FRAGMENTED } from '../../enums/constants';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} instance instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const context = firebolt.context;\n        const tooltipConf = context.config().interaction.tooltip;\n        const mode = tooltipConf.mode;\n        const pos = getClientPoint(context.getDrawingContext().svgContainer, event);\n        const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n            getAllPoints: mode === CONSOLIDATED || mode === FRAGMENTED,\n            data: args,\n            event\n        });\n        const payload = {\n            criteria: nearestPoint ? nearestPoint.id : null,\n            showInPosition: nearestPoint.showInPosition,\n            target: nearestPoint.target,\n            position: pos,\n            mode\n        };\n\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                            criteria: null\n                        }));\n                    });\n};\n\nexport default hover;\n","import { getClientPoint } from 'muze-utils';\n\nexport const generatePayloadFromEvent = function (args, event, firebolt) {\n    const context = firebolt.context;\n    const pos = getClientPoint(context.getDrawingContext().svgContainer, event.touches ? event.touches[0] : event);\n    const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n        data: args,\n        event\n    });\n    return {\n        criteria: nearestPoint ? nearestPoint.id : null,\n        showInPosition: nearestPoint.showInPosition,\n        target: nearestPoint.target,\n        position: pos\n    };\n};\n","import { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport { longtouch } from './longtouch';\nimport { touchdrag } from './touch-drag';\nimport * as ACTIONNAMES from '../../enums/actions';\nimport click from './click';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click,\n    [ACTIONNAMES.LONGTOUCH]: longtouch,\n    [ACTIONNAMES.TOUCHDRAG]: touchdrag\n};\n\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt);\n};\n\nexport default drag;\n","/* global setTimeout */\nimport { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nexport const longtouch = firebolt => (targetEl, behaviours) => {\n    let event;\n    let touchEnd;\n    const dispatchBehaviour = function (args) {\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    touchEnd = false;\n    event = getEvent();\n    targetEl.on('touchstart', (args) => {\n        event = getEvent();\n        touchEnd = false;\n        setTimeout(() => {\n            if (!touchEnd) {\n                dispatchBehaviour(args);\n            } else {\n                behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                    criteria: null\n                }));\n            }\n        }, 100);\n    }).on('touchend', () => {\n        touchEnd = true;\n    });\n};\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const touchdrag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt, true);\n};\n\n","const ANCHORS = 'anchors';\nconst TOOLTIP = 'tooltip';\nconst BRUSH_ANCHORS = 'brush-anchors';\nconst PERSISTENT_ANCHORS = 'persistent-anchors';\nconst FILTER = 'filter';\nconst HIGHLIGHTER = 'highlighter';\nconst CROSSLINE = 'crossline';\n\nexport {\n    ANCHORS,\n    BRUSH_ANCHORS,\n    PERSISTENT_ANCHORS,\n    FILTER,\n    HIGHLIGHTER,\n    CROSSLINE,\n    TOOLTIP\n};\n","export const PROPS = {\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import GenericSideEffect from './generic-sideeffect';\n\nexport default GenericSideEffect;\n","import { mergeRecursive, getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { PROPS } from './props';\n\n/**\n * This is the base class of all side effects. It contains all common methods like setting configuration, disabling,\n * enabling side effect, etc. Every new side effect has to inherit this class or {@link SpawnableSideEffect} or\n * {@link SurrogateSideEffect} class. All side effects are initialized by firebolt. The instance of firebolt is\n * passed on initialization. The firebolt instance contains ```context``` which is the instance of visual unit with\n * which the firebolt is attached.\n *\n * @public\n * @class\n * @module GenericSideEffect\n */\nexport default class GenericSideEffect {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n        this._strategy = 'default';\n        this._config = {};\n        this._id = getUniqueId();\n        this._strategies = {};\n        generateGetterSetters(this, PROPS);\n        this.config(this.constructor.defaultConfig());\n    }\n\n    /**\n     * Returns the default configuration of the side effect.\n     *\n     * @public\n     * @return {Object} Default configuration of side effect.\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the formal name of a side effect. This method must be implemented by all side effects which changes\n     * or adds any element in the visualization.\n     *\n     * @return {string} Formal name of side effect.\n     */\n    static formalName () {\n        return 'generic';\n    }\n\n    static target () {\n        return 'all';\n    }\n\n    /**\n     * Returns true if the side effects mutates the data of chart.\n     *\n     * @public\n     *\n     * @return {boolean} If the side effect mutates the data of chart.\n     */\n    static mutates () {\n        return false;\n    }\n\n    /**\n     * Sets or gets the configuration of side effect.\n     *\n     * When setter,\n     * @param {Object} config Configuration of side effect.\n     * @return {GenericSideEffect} Side effect instance.\n     *\n     * When getter,\n     * @return {Object} Side effect configuration.\n     */\n    config (...params) {\n        if (params.length) {\n            this._config = mergeRecursive(this._config, params[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    disable () {\n        this._enabled = false;\n        return this;\n    }\n\n    enable () {\n        this._enabled = true;\n        return this;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n\n    /**\n     * Applies the interaction effect on the chart. This is where the implemntation of the side effect is defined.\n     *\n     * @param {Object} selectionSet Contains the entry and exit set of data which got affected during interaction.\n     * @param {Object} selectionSet.mergedEnter Combined previous entry and new entry set.\n     * @param {DataModel} selectionSet.mergedEnter.model Instance of data model containing all rows which got\n     * affected during interaction.\n     * @param {Array} selectionSet.mergedEnter.uids Ids of all rows which were affected during interaction.\n     * @param {Object} selectionSet.mergedExit Combined previous exit and new exit set.\n     * @param {DataModel} selectionSet.mergedExit.model Instance of data model containing rows which were not affected\n     * during interaction.\n     * @param {Array} selectionSet.mergedExit.uids Ids of all rows which were not affected during interaction.\n     * @param {Object} selectionSet.entrySet Entry set information.\n     * @param {Array} selectionSet.entrySet[0].uids All row ids which got affected during previous interaction.\n     * @param {Array} selectionSet.entrySet[1].uids All row ids which got affected during current interaction.\n     * @param {Array} selectionSet.exitSet[0].uids All row ids which were not affected during previous interaction.\n     * @param {Array} selectionSet.exitSet[1].uids All row ids which were not affected during current interaction.\n     * @param {Object} payload Payload information of the behavioural action on trigger of which this side effect\n     * is applied.\n     * @param {Object} options Optional information for side effect like strategy, etc.\n     */\n    apply () {\n        return this;\n    }\n\n    /**\n     * Adds a new strategy method for this side effect. The strategy method is implemented by side effect class.\n     *\n     * @param {string} name Name of the strategy.\n     * @param {Function} fn Strategy method.\n     *\n     * @return {GenericSideEffect} Instance of side effect.\n     */\n    setStrategy (name, fn) {\n        if (fn) {\n            this._strategies[name] = fn;\n        }\n        return this;\n    }\n}\n","import GenericSideEffect from './generic';\n\n/**\n * This class is inherited by all side effects which changes the look of any existing elements in the visualization.\n * For example, if a side effect wants to change the color of bar plots, then it is a surrogate side effect.\n *\n * To use this,\n * ```\n *      const SurrogateSideEffect = muze.SideEffects.standards.SurrogateSideEffect;\n *\n *      class BarColorChanger extends SurrogateSideEffect {\n *          static formalName () {\n *              return 'colorChanger';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n *\n * @module SurrogateSideEffect\n * @class\n * @extends GenericSideEffect\n */\nexport default class SurrogateSideEffect extends GenericSideEffect {\n    /**\n     * Applies or removes interaction styles from plot elements. An array of row ids needs to be passed\n     * which identifies the plot elements and applies styles to them.\n     *\n     * To apply the interaction style,\n     * ```\n     *      const entryRowIds = entrySet[0].uids;\n     *      const interactionStyle = [{\n     *          type: 'fill',\n     *          intensity: [0, 0, 15, 0] // hsla configuration\n     *      }];\n     *\n     *      this.applyInteractionStyle(entryRowIds, interactionStyle, 'brighten', true);\n     * ```\n     * @public\n     * @param {Array} set Array of row ids.\n     * @param {Array} config Style configuration.\n     * @param {Object} config[0] fill or stroke configuration.\n     * @param {string} config[0].type Type of style - fill or stroke.\n     * @param {Array} config[0].intensity hsla configuration.\n     * @param {string} interactionType Type of interaction. This is needed for storing the styles for\n     * each type of interaction in the plot elements.\n     * @param {boolean} apply Whether to apply or remove the interaction style.\n     *\n     * @return {SurrogateSideEffect} Instance of surrogate side effect.\n     */\n    applyInteractionStyle (set, config = {}, interactionType, apply) {\n        const layers = this.firebolt.context.layers();\n        layers.forEach(layer => layer.config().interactive !== false &&\n            layer.applyInteractionStyle(interactionType, set.uids, apply));\n        return this;\n    }\n}\n","import { makeElement } from 'muze-utils';\n\nimport GenericSideEffect from './generic';\n\n/**\n * Any side effect which will add any new element to the chart like drawing a rectangular box or any annotation over\n * the chart needs to inherit this class. This class has methods which returns the container where the dom elements\n * needs to be created.\n *\n * To use this,\n * ```\n *      const SpawnableSideEffect = muze.SideEffects.standards.SpawnableSideEffect;\n *\n *      class SelectionBox extends SpawnableSideEffect {\n *          static formalName () {\n *              return 'selectionBox';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n * @class\n * @extends GenericSideEffect\n * @module SpawnableSideEffect\n */\nexport default class SpawnableSideEffect extends GenericSideEffect {\n    /**\n     * Creates a html or svg element in the container.\n     *\n     * @public\n     * @param {SVGElement|HTMLElement} container Container where the dom element will be rendered.\n     * @param {string} elemType Type of dom element.\n     * @param {Array} data Array of objects with which the dom elements will be binded.\n     * @param {string} className class name of the element.\n     *\n     * @return {Selection} D3 Selection of the element.\n     */\n    createElement (container, elemType, data, className, callbacks) {\n        return makeElement(container, elemType, data, className, callbacks);\n    }\n\n    /**\n     * Returns the drawing information for side effect like svg container, dimensions of the visual unit.\n     *\n     * @public\n     * @return {Object} Drawing information for side effect.\n     * ```\n     *      sideEffectGroup: // svg container where the side effect needs to be appended.\n     *      svgContainer: // svg container of the {@link VisualUnit}.\n     *      htmlContainer: // html div container of the {@link VisualUnit}.\n     *      width: // Width of the {@link VisualUnit}\n     *      height: // Height of the {@link VisualUnit}\n     * ```\n     */\n    drawingContext (...drawingContext) {\n        if (drawingContext.length) {\n            this._drawingContext = drawingContext[0];\n            return this;\n        }\n        return this._drawingContext();\n    }\n\n    show () {\n        return this;\n    }\n\n    hide () {\n        return this;\n    }\n}\n","import { selectElement } from 'muze-utils';\n\nexport const getBoxDimensionsFromPayload = (payload, axes, axisFields) => {\n    let x1;\n    let x2;\n    let y1;\n    let y2;\n    let xRange;\n    let yRange;\n    const criteria = payload.criteria;\n    const dimensions = payload.dimensions || {};\n    const { x: xDim, y: yDim } = dimensions;\n\n    if (!criteria) return null;\n\n    if (axes.x && axes.y) {\n        const xAxis = axes.x[0];\n        const yAxis = axes.y[0];\n        const xLinear = xAxis.constructor.type() === 'linear';\n        const yLinear = yAxis.constructor.type() === 'linear';\n        const xField = `${axisFields.x[0]}`;\n        const yField = `${axisFields.y[0]}`;\n        const xCriteria = criteria[xField];\n        const yCriteria = criteria[yField];\n\n        if (xCriteria && xCriteria[0] instanceof Array) {\n            xRange = xCriteria[0];\n            yRange = xCriteria[1];\n        } else {\n            xRange = xCriteria || [];\n            yRange = yCriteria || [];\n        }\n\n        if (xRange && xRange.length) {\n            const domain = xAxis.domain();\n            const bandScale = xAxis.constructor.type() === 'band';\n            let x1Val = xRange[0];\n            let x2Val = xRange[xRange.length - 1];\n\n            if (bandScale) {\n                let x1DomainIndex = domain.indexOf(xRange[0]);\n                let x2DomainIndex = domain.indexOf(xRange[xRange.length - 1]);\n                [x1DomainIndex, x2DomainIndex] = [x1DomainIndex, x2DomainIndex].sort((a, b) => a - b);\n                x1Val = domain[x1DomainIndex];\n                x2Val = domain[x2DomainIndex];\n            }\n\n            x1 = xAxis.getScaleValue(x1Val);\n            x2 = xAxis.getScaleValue(x2Val);\n            x2 += bandScale ? xAxis.getUnitWidth() : 0;\n        }\n\n        if (yRange && yRange.length) {\n            const domain = yAxis.domain();\n            const bandScale = yAxis.constructor.type() === 'band';\n            let y1Val = yRange[0];\n            let y2Val = yRange[yRange.length - 1];\n\n            if (bandScale) {\n                let y1DomainIndex = domain.indexOf(yRange[0]);\n                let y2DomainIndex = domain.indexOf(yRange[yRange.length - 1]);\n                [y1DomainIndex, y2DomainIndex] = [y1DomainIndex, y2DomainIndex].sort(((a, b) => b - a));\n                y1Val = domain[y1DomainIndex];\n                y2Val = domain[y2DomainIndex];\n            }\n\n            y1 = yAxis.getScaleValue(y1Val);\n            y2 = yAxis.getScaleValue(y2Val);\n            y2 += yAxis.constructor.type() === 'band' ? yAxis.getUnitWidth() : 0;\n        }\n\n        if ((yLinear && xLinear) || !payload.dragEnd) {\n            if (xDim) {\n                [x1, x2] = xDim;\n            }\n            if (yDim) {\n                [y1, y2] = yDim;\n            }\n        }\n    }\n\n    return {\n        dimension: {\n            x1,\n            x2,\n            y1,\n            y2\n        },\n        direction: 'both'\n    };\n};\n\nexport const changeVisibility = (context, sideEffectGroup, visible) => {\n    const config = context.config();\n    const className = config.defClassName;\n    const classPrefix = config.classPrefix;\n    selectElement(sideEffectGroup).selectAll(`.${classPrefix}-${className}`)\n                    .style('display', visible ? 'block' : 'none');\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    isValidValue\n} from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport './styles.scss';\nimport SpawnableSideEffect from '../spawnable';\nimport { selectionBoxDrag } from '../../actions/physical/selection-box-drag';\nimport { getBoxDimensionsFromPayload, changeVisibility } from './helper';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\nclass SelectionBox extends SpawnableSideEffect {\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            defClassName: 'selection-box-group',\n            className: '',\n            classPrefix: CLASSPREFIX,\n            box: {\n                defClassName: 'selection-box',\n                className: ''\n            },\n            transition: {\n                duration: 200\n            }\n        };\n    }\n\n    static formalName () {\n        return 'selectionBox';\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     * @param {Object} dimension Dimensions of the selection box.\n     * @param {number} dimension.x1 Starting x position\n     * @param {number} dimension.x2 Ending x position\n     * @param {number} dimension.y1 Starting y position\n     * @param {number} dimension.y2 Ending y position\n     * @param {Object} conf Configuration needed to draw the selection box\n     * @param {number} unitWidth Width of the visual unit.\n     * @param {number} unitHeight Height of the visual unit.\n     */\n    apply (selectionSet, payload) {\n        let x = 0;\n        let y = 0;\n        let width;\n        let height;\n        const config = this._config;\n        const boxConf = config.box;\n        const firebolt = this.firebolt;\n        const drawingInf = this.drawingContext();\n        const mountPoint = drawingInf.sideEffectGroup;\n        const unitWidth = drawingInf.width;\n        const unitHeight = drawingInf.height;\n        const classPrefix = config.classPrefix;\n        const selectionGroupClassName = config.defClassName;\n\n        width = unitWidth;\n        height = unitHeight;\n\n        // Hide selection-box on dragEnd or when criteria is empty\n        if (!payload.criteria || payload.dragEnd) {\n            this.hide(drawingInf);\n            return this;\n        }\n\n        const sourceInf = firebolt.context.getSourceInfo();\n        const { dimension, direction } =\n            getBoxDimensionsFromPayload(payload, sourceInf.axes, sourceInf.fields);\n        const transition = payload.dragEnd && config.transition;\n\n        if (direction === 'both') {\n            x = Math.min(dimension.x1, dimension.x2);\n            y = Math.min(dimension.y1, dimension.y2);\n            width = Math.abs(dimension.x2 - dimension.x1);\n            height = Math.abs(dimension.y2 - dimension.y1);\n        }\n\n        this.show(drawingInf);\n        // Create the data array for drawing the rectangle\n        const points = [\n            {\n                x,\n                y,\n                width,\n                height\n            }\n        ];\n        // Create the container group for selection box.\n        const selectionGroup = makeElement(selectElement(mountPoint), 'g', [1],\n            `.${classPrefix}-${selectionGroupClassName}`);\n        const sideEffect = this;\n        const selection = selectionGroup.selectAll('rect').data(points);\n        const selectionBox = selection.enter().append('rect')\n                        .each(function () {\n                            selectionBoxDrag(firebolt)(selectElement(this), ['brush'], sideEffect);\n                        })\n                        .merge(selection)\n                        .each(function (attrs) {\n                            let element = selectElement(this);\n                            transition && (element = element.transition().duration(transition.duration));\n                            for (const key in attrs) {\n                                if ({}.hasOwnProperty.call(attrs, key)) {\n                                    isValidValue(attrs[key]) && element.attr(key, attrs[key]);\n                                }\n                            }\n                        });\n        // Get the qualified class name for selection box rectangle\n        const boxClassName = getQualifiedClassName(boxConf.defClassName, this._id, classPrefix);\n        selectionBox.classed(boxClassName.join(' '), true);\n        selectionBox.classed(boxConf.className, true);\n\n        return this;\n    }\n\n    hide (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, false);\n    }\n\n    show (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, true);\n    }\n}\n\nexport default SelectionBox;\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './helpers/drag-action-config';\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let subject;\n    let drawingInf;\n    const context = firebolt.context;\n    const onDrag = (payload) => {\n        behaviours.forEach(action => firebolt.dispatchBehaviour(action, payload));\n    };\n    const d3Drag = getD3Drag();\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        drawingInf = context.getDrawingContext();\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        subject.x += event.dx;\n        subject.y += event.dy;\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context, {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                }\n            });\n            onDrag(payload);\n        }\n    }).on('end', () => {\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context, {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                }\n            });\n            payload.dragEnd = true;\n            onDrag(payload);\n        }\n    }));\n};\n","export const CLASSPREFIX = 'muze';\nexport const ARROW_RIGHT = 'right';\nexport const ARROW_TOP = 'top';\nexport const ARROW_BOTTOM = 'bottom';\nexport const ARROW_LEFT = 'left';\nexport const TOOLTIP_LEFT = 'left';\nexport const TOOLTIP_RIGHT = 'right';\nexport const TOOLTIP_BOTTOM = 'bottom';\nexport const TOOLTIP_TOP = 'top';\nexport const INITIAL_STYLE = {\n    position: 'absolute',\n    width: 0,\n    height: 0\n};\nexport const TABLE_FORMAT = 'table';\n","import { CLASSPREFIX } from './constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'tooltip-box',\n    connectorClassName: 'tooltip-connectors',\n    className: '',\n    row: {\n        margin: 0\n    },\n    content: {\n        spacing: 5,\n        iconContainerSize: 10,\n        iconScale: 1,\n        iconShape: 'circle',\n        iconColor: '#ff0000',\n        rowMargin: '4px 0 4px 0',\n        margin: 10,\n        separator: ':',\n        className: 'tooltip-content-container',\n        parentClassName: 'tooltip-content-parent-container'\n    },\n    arrow: {\n        size: 10,\n        disabled: false,\n        defClassName: 'tooltip-arrow',\n        className: '',\n        color: 'rgba(195,195,195,0.85)'\n    }\n};\n","import { getQualifiedClassName } from 'muze-utils';\nimport { TOOLTIP_LEFT, TOOLTIP_RIGHT, ARROW_RIGHT, ARROW_LEFT, TOOLTIP_BOTTOM } from './constants';\n\nexport const getArrowPos = (orient, dim, measurement, config) => {\n    let arrowPos;\n    const { x, y, boxHeight, boxWidth } = measurement;\n    const arrowDisabled = config.arrow.disabled;\n    const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n\n    if (orient === ARROW_LEFT || orient === ARROW_RIGHT) {\n        let start = 0;\n        let diff = boxHeight / 2;\n        const plotBottom = dim.y + dim.height;\n        const boxBottom = y + boxHeight;\n\n        if (dim.y > y) {\n            start = dim.y - y;\n            diff = (plotBottom >= boxBottom ? (boxBottom - dim.y) : dim.height) / 2;\n        } else if (boxBottom > plotBottom) {\n            diff = Math.abs(y - (dim.y + dim.height)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    } else {\n        let start = 0;\n        let diff = boxWidth / 2;\n        const plotRight = dim.x + dim.width;\n        const boxRight = x + boxWidth;\n\n        if (dim.x > x) {\n            start = dim.x - x;\n            diff = (plotRight >= boxRight ? (boxRight - dim.x) : dim.width) / 2;\n        } else if (boxRight > plotRight) {\n            diff = Math.abs(x - (dim.x + dim.width)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    }\n    return arrowPos;\n};\n\n/**\n * Places the arrow in the specified arrow position. It also applies appropriate arrow\n * class name to the arrow element.\n * @param {string} position Left, bottom or right position of the arrow;\n * @param {number} arrowPos position of arrow in pixels\n * @return {Tooltip} Instance of tooltip.\n */\nexport const placeArrow = (context, position, arrowPos) => {\n    const tooltipArrow = context._tooltipArrow;\n    const tooltipBackground = context._tooltipBackground;\n    const config = context._config;\n    const classPrefix = config.classPrefix;\n    const arrowConf = config.arrow;\n    const className = getQualifiedClassName(arrowConf.defClassName, context._id, config.classPrefix);\n\n    tooltipArrow.style('display', 'block');\n    tooltipArrow.attr('class', `${className.join(' ')}`);\n    if (position === TOOLTIP_LEFT || position === TOOLTIP_RIGHT) {\n        tooltipArrow.style('top', `${arrowPos}px`);\n        tooltipArrow.style('left', '');\n        tooltipBackground.style('top', `${arrowPos}px`);\n        tooltipBackground.style('left', '');\n    } else {\n        position === TOOLTIP_BOTTOM ? tooltipArrow.style('top', '100%') : tooltipArrow.style('top',\n            `-${arrowConf.size}px`);\n        tooltipArrow.style('left', `${arrowPos}px`);\n        position === TOOLTIP_BOTTOM ? tooltipBackground.style('top', '100%') : tooltipBackground.style('top',\n            `-${arrowConf.size + 3}px`);\n        tooltipBackground.style('left', `${arrowPos}px`);\n    }\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow`, true);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${context._arrowOrientation}`, false);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${position}`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${context._arrowOrientation}`, false);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${position}`, true);\n    return this;\n};\n\nexport const reorderContainers = (parentContainer, className) => {\n    parentContainer.selectAll(className).sort((a, b) => a - b);\n};\n","import {\n    selectElement,\n    mergeRecursive,\n    makeElement,\n    setAttrs,\n    setStyles,\n    getSymbol,\n    isSimpleObject\n} from 'muze-utils';\nimport { TABLE_FORMAT } from './constants';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class is used to manage the content of tooltip.\n */\nexport default class Content {\n    /**\n     * Creates an instance of content.\n     */\n    constructor () {\n        this._model = null;\n        this._formatter = null;\n        this._config = this.constructor.defaultConfig();\n    }\n   /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        const config = defaultConfig.content;\n        config.classPrefix = defaultConfig.classPrefix;\n        return config;\n    }\n\n    config (...c) {\n        if (c.length > 0) {\n            this._config = mergeRecursive(this._config, c[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Update model. The format contains presentation strategy which determines how to show the content.\n     * If no strategy is mentioned then default is to show key value pair\n    */\n    update (item) {\n        this._model = item.model;\n        this._formatter = item.formatter;\n        return this;\n    }\n\n    context (ctx) {\n        this._context = ctx;\n        return this;\n    }\n\n    render (mount) {\n        let data;\n        const config = this._config;\n        const iconContainerSize = config.iconContainerSize;\n        const formatter = this._formatter;\n        const rowMargin = config.rowMargin;\n        const model = this._model;\n        const { classPrefix } = config;\n\n        this._mount = mount;\n        if (model instanceof Array) {\n            data = model;\n        } else {\n            data = formatter(this._model, this.config(), this._context);\n        }\n\n        if (data instanceof Function) {\n            const mountHtmlTooltip = makeElement(mount, 'div', [1], `${classPrefix}-tooltip-html-container`);\n            mountHtmlTooltip.html(data());\n        } else {\n            let content = data;\n            let displayFormat = 'default';\n\n            if (isSimpleObject(data)) {\n                content = data.content;\n                displayFormat = data.displayFormat;\n            }\n\n            const body = makeElement(mount, 'div', [displayFormat], `${classPrefix}-tooltip-content`, {},\n                d => d);\n\n            if (displayFormat === TABLE_FORMAT) {\n                const table = makeElement(body, 'table', [1], `${classPrefix}-tooltip-table`);\n                const tbody = makeElement(table, 'tbody', [1], `${classPrefix}-tooltip-table-tbody`);\n                const rows = makeElement(tbody, 'tr', content, `${classPrefix}-tooltip-table-row`);\n                rows.each(function (d, i) {\n                    selectElement(this).classed(`${classPrefix}-tooltip-table-row-${i}`, true);\n                });\n                const cells = makeElement(rows, 'td', d => d, `${classPrefix}-tooltip-table-cell`);\n                cells.each(function (d) {\n                    selectElement(this).html(d);\n                });\n            } else {\n                const rows = makeElement(body, 'div', content, '', {\n                    update: (elem, elemData) => elem.attr('class', elemData.className)\n                });\n                const cells = makeElement(rows, 'span', d => d.data, `${classPrefix}-tooltip-content`);\n                cells.attr('class', `${classPrefix}-tooltip-content`);\n                setStyles(rows, {\n                    margin: rowMargin\n                });\n                setStyles(cells, {\n                    display: 'inline-block' // 'margin-right': `${config.spacing}px`\n                });\n\n                cells.each(function (d) {\n                    const el = selectElement(this);\n                    el.html('');\n                    if (d instanceof Object) {\n                        if (d.type === 'icon') {\n                            const svg = makeElement(el, 'svg', [1]);\n                            const path = makeElement(svg, 'path', [1]);\n                            const shape = d.shape instanceof Function ? d.shape : getSymbol(d.shape);\n\n                            setAttrs(svg, {\n                                x: 0,\n                                y: 0,\n                                width: iconContainerSize,\n                                height: iconContainerSize\n                            });\n                            setAttrs(path, {\n                                d: shape.size(d.size)(),\n                                transform: `translate(${iconContainerSize / 2}, ${iconContainerSize / 2})`\n                            });\n                            setStyles(path, {\n                                fill: d.color\n                            });\n                            setStyles(svg, {\n                                width: `${iconContainerSize}px`,\n                                height: `${iconContainerSize}px`\n                            });\n                        } else {\n                            el.html(d.value);\n                            d.className && el.classed(d.className, true);\n                            setStyles(el, d.style);\n                        }\n                    } else {\n                        el.html(d);\n                    }\n                });\n            }\n        }\n        return this;\n    }\n\n    clear () {\n        this._model = null;\n        return this;\n    }\n}\n","import {\n    mergeRecursive,\n    getQualifiedClassName,\n    getUniqueId,\n    selectElement,\n    setStyles,\n    makeElement\n} from 'muze-utils';\nimport { ARROW_BOTTOM, ARROW_LEFT, ARROW_RIGHT, TOOLTIP_LEFT, TOOLTIP_RIGHT, TOOLTIP_BOTTOM, TOOLTIP_TOP,\n    INITIAL_STYLE } from './constants';\nimport { defaultConfig } from './default-config';\nimport { getArrowPos, placeArrow, reorderContainers } from './helper';\nimport './styles.scss';\nimport Content from './content';\n\n/**\n * This component is responsible for creating a tooltip element. It appends the tooltip\n * in the body element.\n * @class Tooltip\n */\nexport default class Tooltip {\n    /**\n     * Initializes the tooltip with the container element and configuration\n     * @param {HTMLElement} container container where the tooltip will be mounted.\n     * @param {string} className Class name of the tooltip.\n     */\n    constructor (htmlContainer, svgContainer) {\n        let connectorContainer = svgContainer;\n        this._id = getUniqueId();\n        this._config = {};\n        this.config({});\n        const tooltipConf = this._config;\n        const classPrefix = tooltipConf.classPrefix;\n        const contentClass = tooltipConf.content.parentClassName;\n        const container = makeElement(htmlContainer, 'div', [1], `${classPrefix}-tooltip-container`);\n        this._container = container;\n        this._tooltipContainer = container.append('div').style('position', 'absolute');\n        this._contentContainer = this._tooltipContainer.append('div').attr('class', `${classPrefix}-${contentClass}`);\n        this._tooltipBackground = this._tooltipContainer.append('div').style('position', 'relative');\n        this._tooltipArrow = this._tooltipContainer.append('div');\n\n        if (!svgContainer) {\n            connectorContainer = htmlContainer.append('svg').style('pointer-events', 'none');\n        }\n        this._contents = {};\n        this._tooltipConnectorContainer = selectElement(connectorContainer)\n            .append('g')\n            .attr('class', `${tooltipConf.classPrefix}-${tooltipConf.connectorClassName}`);\n        const id = this._id;\n        const defClassName = tooltipConf.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, id, tooltipConf.classPrefix);\n\n        setStyles(this._tooltipArrow, INITIAL_STYLE);\n        setStyles(this._tooltipBackground, INITIAL_STYLE);\n        this.addClass(qualifiedClassName.join(' '));\n        this.addClass(tooltipConf.className);\n        this.hide();\n    }\n\n    /**\n     * Sets the configuration of tooltip.\n     * @param {Object} config Configuration of tooltip\n     * @return {Tooltip} Instance of tooltip\n     */\n    config (...config) {\n        if (config.length > 0) {\n            const defConf = mergeRecursive({}, this.constructor.defaultConfig());\n            this._config = mergeRecursive(defConf, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n    /**\n     * Sets the class name of tooltip\n     * @param {string} className tooltip class name\n     * @return {Tooltip} Instance of tooltip.\n     */\n    addClass (className) {\n        this._tooltipContainer.classed(className, true);\n        return this;\n    }\n\n    context (...ctx) {\n        if (ctx.length) {\n            this._context = ctx[0];\n            return this;\n        }\n        return this._context;\n    }\n\n    content (name, data, contentConfig = {}) {\n        const config = this.config();\n        const { classPrefix } = config;\n        const contentClass = config.content.className;\n        const formatter = config.formatter;\n        const className = contentConfig.className || `${classPrefix}-${contentClass}-${name}`;\n        const content = this._contents[name] = this._contents[name] || new Content();\n        const container = makeElement(this._contentContainer, 'div', [contentConfig.order], className);\n        container.attr('class', `${classPrefix}-${contentClass} ${className}`);\n        reorderContainers(this._contentContainer, `.${classPrefix}-${contentClass}`);\n        const contentConf = config.content;\n        contentConfig.classPrefix = this._config.classPrefix;\n        content.config(contentConf);\n\n        if (data === null) {\n            content.clear();\n            container.remove();\n            delete this._contents[name];\n        } else {\n            content.update({\n                model: data,\n                formatter: contentConfig.formatter || formatter\n            });\n            content.context(this._context);\n            content.render(container);\n        }\n\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n        }\n        return this;\n    }\n\n    getContents () {\n        return Object.values(this._contents);\n    }\n\n    /**\n     * Positions the tooltip at the given x and y position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Tooltip} Instance of tooltip.\n     */\n    position (x, y, conf = {}) {\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n            return this;\n        }\n        this.show();\n        const target = this._target;\n        const repositionArrow = conf.repositionArrow;\n\n        if (target && repositionArrow) {\n            const node = this._tooltipContainer.node();\n            const config = this._config;\n            const arrowDisabled = config.arrow.disabled;\n            const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n            const arrowOrient = this._arrowOrientation;\n            const outsidePlot = arrowOrient === ARROW_LEFT || arrowOrient === ARROW_RIGHT ?\n                (y + node.offsetHeight - arrowWidth) < target.y || y > (target.y + target.height) :\n                (x + node.offsetWidth - arrowWidth) < target.x || x > (target.x + target.width);\n\n            if (!arrowDisabled) {\n                if (outsidePlot) {\n                    let path;\n                    this._tooltipArrow.style('display', 'none');\n                    this._tooltipBackground.style('display', 'none');\n                    this._tooltipConnectorContainer.style('display', 'block');\n                    const connector = this._tooltipConnectorContainer.selectAll('path').data([1]);\n                    const enter = connector.enter().append('path');\n                    if (arrowOrient === ARROW_LEFT) {\n                        path = `M ${x} ${y + node.offsetHeight / 2} L ${target.x + target.width}`\n                            + ` ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_RIGHT) {\n                        path = `M ${x + node.offsetWidth} ${y + node.offsetHeight / 2}`\n                                + ` L ${target.x} ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_BOTTOM) {\n                        path = `M ${x + node.offsetWidth / 2} ${y + node.offsetHeight}`\n                            + ` L ${target.x + target.width / 2} ${target.y}`;\n                    }\n                    enter.merge(connector).attr('d', path).style('display', 'block');\n                } else {\n                    const arrowPos = getArrowPos(arrowOrient, target, {\n                        x,\n                        y,\n                        boxHeight: node.offsetHeight,\n                        boxWidth: node.offsetWidth\n                    }, this._config);\n\n                    placeArrow(this, this._arrowOrientation, arrowPos);\n                    this._tooltipConnectorContainer.style('display', 'none');\n                }\n            }\n        }\n\n        const offset = this._offset || {\n            x: 0,\n            y: 0\n        };\n        this._tooltipContainer.style('left', `${offset.x + x}px`).style('top',\n            `${offset.y + y}px`);\n\n        return this;\n    }\n\n    /**\n     * Positions the tooltip relative to a rectangular box. It takes care of tooltip overflowing the\n     * boundaries.\n     * @param {Object} dim Dimensions of the plot.\n     */\n    positionRelativeTo (dim, tooltipConf = {}) {\n        let obj;\n        let orientation = tooltipConf.orientation;\n        this.show();\n        if (!dim) {\n            this.hide();\n            return this;\n        }\n\n        const extent = this._extent;\n        const node = this._tooltipContainer.node();\n\n        this._tooltipContainer.style('top', '0px')\n                        .style('left', '0px');\n        const offsetWidth = node.offsetWidth + 2;\n        const offsetHeight = node.offsetHeight + 2;\n        const config = this._config;\n        const offset = this._offset;\n        const arrowDisabled = config.arrow.disabled;\n        const arrowSize = arrowDisabled ? 0 : config.arrow.size;\n        const draw = tooltipConf.draw !== undefined ? tooltipConf.draw : true;\n        const topSpace = dim.y;\n        // When there is no space in right\n        const dimX = dim.x + dim.width + offset.x;\n        const rightSpace = extent.width - dimX;\n        const leftSpace = dim.x + offset.x - extent.x;\n        const positionTop = topSpace > (offsetHeight + arrowSize);\n        const positionRight = rightSpace >= offsetWidth + arrowSize;\n        const positionLeft = leftSpace >= offsetWidth + arrowSize;\n\n        const positionHorizontal = () => {\n            let position;\n            let x = dim.x + dim.width;\n            let y = dim.y;\n\n            if (positionRight) {\n                position = TOOLTIP_LEFT;\n                x += arrowSize;\n            } else if (positionLeft) {\n                x = dim.x - offsetWidth;\n                position = TOOLTIP_RIGHT;\n                x -= arrowSize;\n            } else {\n                position = 'left';\n                x += arrowSize;\n            }\n            if (dim.height < offsetHeight) {\n                y = Math.max(0, dim.y + dim.height / 2 - offsetHeight / 2);\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        const positionVertical = () => {\n            let position;\n            let y;\n            // Position tooltip at the center of plot\n            let x = dim.x - offsetWidth / 2 + dim.width / 2;\n\n            // Overflows to the right\n            if ((extent.width - (dim.x + offset.x)) < offsetWidth) {\n                x = extent.width - offsetWidth - offset.x;\n            } else if ((x + offset.x) < extent.x) { // Overflows to the left\n                x = extent.x;\n            }\n\n            if (positionTop) {\n                y = dim.y - offsetHeight - arrowSize;\n                position = TOOLTIP_BOTTOM;\n            } else {\n                y = dim.y + dim.height + arrowSize;\n                position = TOOLTIP_TOP;\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        this._target = dim;\n        if (!orientation) {\n            if (positionTop) {\n                orientation = 'vertical';\n            } else if (positionRight || positionLeft) {\n                orientation = 'horizontal';\n            } else {\n                orientation = 'vertical';\n            }\n        }\n\n        if (orientation === 'horizontal') {\n            obj = positionHorizontal();\n        } else if (orientation === 'vertical') {\n            obj = positionVertical();\n        }\n\n        this._position = {\n            x: obj.x,\n            y: obj.y\n        };\n\n        this._arrowPos = obj.arrowPos;\n        if (!arrowDisabled) {\n            placeArrow(this, obj.position, obj.arrowPos);\n        } else {\n            this._tooltipArrow.style('display', 'none');\n            this._tooltipBackground.style('display', 'none');\n        }\n        this._arrowOrientation = obj.position;\n        draw && this.position(obj.x, obj.y);\n        return this;\n    }\n\n    /**\n     * Hides the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    hide () {\n        this._tooltipContainer.style('display', 'none');\n        this._tooltipConnectorContainer.style('display', 'none');\n        return this;\n    }\n\n    /**\n     * Shows the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    show () {\n        this._tooltipContainer.style('display', 'block');\n        return this;\n    }\n\n    extent (extent) {\n        this._extent = extent;\n        return this;\n    }\n\n    offset (offset) {\n        this._offset = offset;\n        return this;\n    }\n\n    remove () {\n        this._tooltipContainer.remove();\n        this._tooltipBackground.remove();\n        this._tooltipConnectorContainer.remove();\n        return this;\n    }\n}\n","export const SELECTION_SUMMARY = 'selectionSummary';\nexport const HIGHLIGHT_SUMMARY = 'highlightSummary';\n","import {\n    FieldType,\n    GROUP_BY_FUNCTIONS,\n    formatTemporal,\n    DimensionSubtype,\n    MeasureSubtype,\n    DataModel,\n    defaultValue,\n    retrieveFieldDisplayName,\n    nestCollection,\n    getObjProp,\n    intersect\n} from 'muze-utils';\nimport { TABLE_FORMAT } from '@chartshq/muze-tooltip';\nimport { SELECTION_SUMMARY, HIGHLIGHT_SUMMARY } from '../../enums/tooltip-strategies';\n\nconst { SUM, COUNT } = GROUP_BY_FUNCTIONS;\nconst { InvalidAwareTypes } = DataModel;\nconst FIRST_VALUE_MARGIN = '10px';\nconst SINGLE_DATA_MARGIN = 10;\n\nconst formatters = (formatter, interval, valueParser) => ({\n    [DimensionSubtype.TEMPORAL]: value => (value instanceof InvalidAwareTypes ? valueParser(value) :\n        formatTemporal(Number(value), interval)),\n    [MeasureSubtype.CONTINUOUS]: value => (value instanceof InvalidAwareTypes ? valueParser(value) :\n        formatter(value.toFixed(2))),\n    [DimensionSubtype.CATEGORICAL]: value => valueParser(value)\n});\n\nconst getTabularData = (dataObj, fieldInf) => {\n    const rows = [];\n    const { data, schema } = dataObj;\n    rows.push(schema.map(d => fieldInf[d.name].displayName));\n\n    data.forEach((d) => {\n        const row = [];\n        schema.forEach((fieldObj, i) => {\n            const value = fieldInf[fieldObj.name].fn(d[i]);\n            row.push(value);\n        });\n        rows.push(row);\n    });\n    return rows;\n};\n\nconst getKeyValue = (params) => {\n    const { field, value, classPrefix, margin, isSelected, removeKey } = params;\n\n    if (!removeKey) {\n        const keyObj = {\n            value: field,\n            className: `${classPrefix}-tooltip-key`\n        };\n        const valueObj = {\n            value,\n            className: `${classPrefix}-tooltip-value`\n        };\n        if (margin !== undefined) {\n            keyObj.style = {\n                'margin-left': `${margin}px`\n            };\n            valueObj.style = {\n                'margin-left': `${margin}px`\n            };\n        }\n\n        return ({\n            className: isSelected ? `${classPrefix}-tooltip-row ${classPrefix}-tooltip-selected-row`\n                : `${classPrefix}-tooltip-row`,\n            data: [keyObj, valueObj]\n        }\n        );\n    }\n    return ({\n        data: [{\n            className: '',\n            value,\n            style: {\n                'margin-left': FIRST_VALUE_MARGIN\n            }\n        }],\n        className: `${classPrefix}-tooltip-first`\n    });\n};\n\nconst generateRetinalFieldsValues = (valueArr, retinalFields, content, context) => {\n    const { fieldsConfig, dimensionMeasureMap, axes, config, fieldInf, dataLen, target } = context;\n    const { classPrefix, margin, separator } = config;\n    const colorAxis = axes.color[0];\n    const shapeAxis = axes.shape[0];\n    const sizeAxis = axes.size[0];\n    const REF_VALUES_INDEX = 1;\n    const REF_KEYS_INDEX = 0;\n\n    for (const retField in retinalFields) {\n        const retIndex = fieldsConfig[retField].index;\n        const retinalFieldValue = valueArr[retIndex];\n        const measuresArr = dimensionMeasureMap[retField];\n        const icon = {\n            type: 'icon',\n            color: colorAxis.getColor(retinalFieldValue),\n            shape: shapeAxis.getShape(retinalFieldValue),\n            size: sizeAxis.getSize(retinalFieldValue) * config.iconScale\n        };\n        const { displayName, fn } = fieldInf[retField];\n        const formattedRetinalValue = fn(retinalFieldValue);\n\n        if (dataLen === 1) {\n            content.push(getKeyValue({\n                field: displayName,\n                value: formattedRetinalValue,\n                classPrefix,\n                margin: SINGLE_DATA_MARGIN\n            }));\n        } else {\n            const hasMultipleMeasures = measuresArr.length > 1;\n            hasMultipleMeasures && (content.push({ data: [icon, formattedRetinalValue] }));\n            const selectedContext = target[REF_VALUES_INDEX][target[REF_KEYS_INDEX].indexOf(retField)];\n            const isSelected = selectedContext === retinalFieldValue;\n            measuresArr.forEach((measure) => {\n                const measureIndex = fieldsConfig[measure].index;\n                const { displayName: dName, fn: formatterFn } = fieldInf[measure];\n                const value = formatterFn(valueArr[measureIndex]);\n                const keyValue = getKeyValue({\n                    field: hasMultipleMeasures ? `${dName}${separator}` : formattedRetinalValue,\n                    value,\n                    classPrefix,\n                    margin: hasMultipleMeasures ? margin : undefined,\n                    isSelected\n                });\n                if (!hasMultipleMeasures) {\n                    keyValue.data = [icon, ...keyValue.data];\n                }\n                content.push(keyValue);\n            });\n        }\n    }\n};\n\nconst getFieldInf = (schema, dataModel, context) => {\n    const { valueParser, timeDiffs } = context;\n    const fieldsObj = dataModel.getFieldspace().fieldsObj();\n    const defFormatter = formatters(null, null, valueParser)[DimensionSubtype.CATEGORICAL];\n\n    return schema.reduce((inf, field) => {\n        const { subtype, name, type } = field;\n        const interval = subtype === DimensionSubtype.TEMPORAL ? timeDiffs[name] : 0;\n        const nf = type === FieldType.MEASURE ? fieldsObj[name].numberFormat() : val => val;\n        inf[name] = {\n            fn: defaultValue(formatters(nf, interval, valueParser)[subtype], defFormatter),\n            displayName: `${retrieveFieldDisplayName(dataModel, name)}`\n        };\n        return inf;\n    }, {});\n};\n\nexport const buildTooltipData = (dataModel, config = {}, context) => {\n    let nestedDataObj;\n    let fieldValues = [];\n    const { data, schema } = dataModel.getData();\n    const fieldspace = dataModel.getFieldspace();\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const { color, shape, size } = context.firebolt.context.retinalFields();\n    const detailFields = context.detailFields || [];\n    const dimensions = schema.filter(d => d.type === FieldType.DIMENSION);\n    const measures = schema.filter(d => d.type === FieldType.MEASURE);\n    const containsDetailField = !!intersect(schema, detailFields).length;\n    const dataLen = data.length;\n    const {\n        dimensionMeasureMap,\n        axes\n    } = context;\n    const fieldInf = getFieldInf(schema, dataModel, context);\n\n    let displayFormat;\n    if (dataLen > 1 && containsDetailField) {\n        fieldValues = getTabularData({\n            data,\n            schema,\n            fieldspace\n        }, fieldInf);\n        displayFormat = TABLE_FORMAT;\n    } else {\n        const retinalFields = [color.field, shape.field, size.field].reduce((acc, field) => {\n            field && fieldsConfig[field].def.type === FieldType.DIMENSION && (acc[field] = 1);\n            return acc;\n        }, {});\n        const filteredDimensions = dimensions.filter(field => !retinalFields[field.name]);\n        const indices = filteredDimensions.map(dim => fieldsConfig[dim.name].index);\n        const allMeasures = [...new Set(...Object.values(dimensionMeasureMap))];\n        const filteredMeasures = dataLen > 1 ? measures.filter(d => allMeasures.indexOf(d.name) === -1) : measures;\n\n        nestedDataObj = nestCollection({\n            data,\n            keys: indices\n        });\n        nestedDataObj = !getObjProp(nestedDataObj[0], 'key') ? [{\n            values: nestedDataObj\n        }] : nestedDataObj;\n\n        const generateTooltipContent = (nestedData, index = 0, content = []) => {\n            const { classPrefix, separator } = config;\n            for (let i = 0, len = nestedData.length; i < len; i++) {\n                const { values, key } = nestedData[i];\n                const field = getObjProp(schema, indices[index], 'name');\n                const margin = dataLen === 1 || Object.keys(retinalFields).length === 0\n                ? SINGLE_DATA_MARGIN : undefined;\n                if (field) {\n                    const { displayName, fn } = fieldInf[field];\n                    const formattedValue = fn(key);\n                    const removeKey = values.length > 1;\n                    content.push(getKeyValue({\n                        field: `${displayName}${separator}`,\n                        value: formattedValue,\n                        classPrefix,\n                        margin,\n                        isSelected: undefined,\n                        removeKey\n                    }));\n                }\n\n                if (values[0] && values[0].key) {\n                    generateTooltipContent(values, index + 1, content);\n                } else {\n                    for (let j = 0, len2 = values.length; j < len2; j++) {\n                        const valueArr = values[j];\n                        generateRetinalFieldsValues(valueArr, retinalFields, content, {\n                            fieldInf,\n                            axes,\n                            config,\n                            fieldsConfig,\n                            dimensionMeasureMap,\n                            dataLen,\n                            target: context.payload.target\n                        });\n\n                        filteredMeasures.forEach((measure) => {\n                            const { name } = measure;\n                            const { displayName, fn } = fieldInf[name];\n                            content.push(getKeyValue({\n                                field: `${displayName}${separator}`,\n                                value: fn(valueArr[fieldsConfig[name].index]),\n                                classPrefix,\n                                margin: SINGLE_DATA_MARGIN\n                            }));\n                        });\n                    }\n                }\n            }\n        };\n        generateTooltipContent(nestedDataObj, 0, fieldValues);\n    }\n\n    return {\n        content: fieldValues,\n        displayFormat\n    };\n};\n\nexport const strategies = {\n    [SELECTION_SUMMARY]: (dm, config, context) => {\n        const { selectionSet } = context;\n        const aggFns = selectionSet.mergedEnter.aggFns;\n        const dataObj = dm.getData();\n        const measures = dataObj.schema.filter(d => d.type === FieldType.MEASURE);\n        const aggregatedModel = dm.groupBy([''], measures.reduce((acc, v) => {\n            acc[v.name] = aggFns[v.name] === COUNT ? SUM : aggFns[v.name];\n            return acc;\n        }, {\n            saveChild: false\n        }));\n        const fieldsConf = aggregatedModel.getFieldsConfig();\n        let values = [[{\n            value: `${dataObj.data.length}`,\n            style: {\n                'font-weight': 'bold'\n            }\n        }, 'Items Selected']];\n        const measureNames = measures.map(d => d.name);\n        const data = aggregatedModel.getData().data;\n        measureNames.forEach((measure) => {\n            const value = data[0][fieldsConf[measure].index];\n            value instanceof InvalidAwareTypes ? values.push([]) : values.push([`(${aggFns[measure].toUpperCase()})`,\n                `${retrieveFieldDisplayName(dm, measure)}`,\n                {\n                    value: `${value.toFixed(2)}`,\n                    style: {\n                        'font-weight': 'bold'\n                    }\n                }]);\n        });\n        if (measureNames.length === 1) {\n            values = [[...values[0], ...values[1]]];\n        }\n        return ([{\n            data: values[0]\n        }]);\n    },\n    [HIGHLIGHT_SUMMARY]: (data, config, context) => buildTooltipData(data, config, context)\n};\n","import { Tooltip as TooltipRenderer } from '@chartshq/muze-tooltip';\nimport { FieldType, mergeRecursive, defaultValue } from 'muze-utils';\nimport { spaceOutBoxes } from '../helper';\nimport { strategies } from './strategies';\nimport { FRAGMENTED } from '../../enums/constants';\nimport { TOOLTIP } from '../../enums/side-effects';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\nimport { HIGHLIGHT_SUMMARY } from '../../enums/tooltip-strategies';\n\nconst configResolvers = {\n    [HIGHLIGHT_SUMMARY]: (specificConf, config) => defaultValue(specificConf, config),\n    default: specificConf => defaultValue(specificConf, {})\n};\n\nconst sanitizeConfig = (config, context) => {\n    const strategyObj = context._strategies;\n    const sanitizedConf = Object.assign({}, config);\n    for (const key in strategyObj) {\n        sanitizedConf[key] = defaultValue(configResolvers[key], configResolvers.default)(config[key], config);\n    }\n    return sanitizedConf;\n};\n\nexport default class Tooltip extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._tooltips = {};\n        this._strategies = mergeRecursive({}, strategies);\n        this._strategy = HIGHLIGHT_SUMMARY;\n    }\n\n    static defaultConfig () {\n        return {\n            padding: 5,\n            offset: {\n                x: 0,\n                y: 0\n            },\n            highlightSummary: {\n                dataTransform: (dt, fields) => (fields ? dt.project(fields, { saveChild: false }) : dt\n                )\n            },\n            selectionSummary: {\n                dataTransform: (dt, fields) => {\n                    const fieldspace = dt.getFieldspace();\n                    const dimensions = Object.keys(fieldspace.getDimension());\n                    const measures = Object.keys(fieldspace.getMeasure());\n                    const projectedFields = defaultValue(fields, measures.length ? [measures[0]] : []);\n                    return dt.project([...dimensions, ...projectedFields], {\n                        saveChild: false\n                    });\n                }\n            }\n        };\n    }\n\n    static formalName () {\n        return TOOLTIP;\n    }\n\n    config (...params) {\n        if (params.length) {\n            const config = this._config = mergeRecursive(this._config, sanitizeConfig(params[0], this));\n            const strategyObj = this._strategies;\n            for (const key in strategyObj) {\n                const formatter = config[key].formatter;\n                this.setStrategy(key, formatter);\n            }\n            return this;\n        }\n        return this._config;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        let totalHeight = 0;\n        let totalWidth = 0;\n        const dataModel = selectionSet.mergedEnter.model;\n        const context = this.firebolt.context;\n        const drawingInf = this.drawingContext();\n        if ((dataModel.isEmpty() || payload.criteria === null)) {\n            this.hide(options, null);\n            return this;\n        }\n\n        const tooltips = this._tooltips;\n        const config = this.config();\n        const boundBox = {\n            width: drawingInf.width,\n            height: drawingInf.height\n        };\n        const showInPosition = payload.showInPosition;\n        const pad = config.padding;\n        const dataModels = [];\n        const fragmented = config.mode === FRAGMENTED;\n        const sourceInf = context.getSourceInfo();\n        const fields = sourceInf.fields;\n        const xFieldDim = fields.x[0] ? fields.x[0].type() === FieldType.DIMENSION : false;\n        const showVertically = !!xFieldDim;\n        const tooltipPos = payload.position;\n        const boxes = [];\n        const enter = {};\n        const uids = dataModel.getData().uids;\n        if (fragmented) {\n            dataModels.push(...uids.map(d => dataModel.select((fieldsArr, i) => i === d, {\n                saveChild: false\n            })));\n        } else {\n            dataModels.push(dataModel);\n        }\n\n        let target = payload.target;\n        let targetFields = [];\n        if (target) {\n            targetFields = target[0] || [];\n            const sourceFields = payload.sourceFields;\n            const indices = [];\n            for (let i = 0, len = targetFields.length; i < len; i++) {\n                if (sourceFields.indexOf(targetFields[i]) !== -1) {\n                    indices.push(i);\n                }\n            }\n            target = target.map(d => d.filter((v, i) => indices.indexOf(i) !== -1));\n        }\n\n        const plotDimensions = context.getPlotPointsFromIdentifiers(target || payload.criteria, {\n            getBBox: true\n        });\n\n        const strategy = defaultValue(options.strategy, this._strategy);\n        const strategyConf = config[strategy];\n        const { dataTransform, fields: projectFields } = strategyConf;\n        const strategyObj = this._strategies;\n        // Show tooltip for each datamodel\n        for (let i = 0; i < dataModels.length; i++) {\n            let plotDim = plotDimensions[i];\n            if (fragmented) {\n                const dimensions = dataModels[i].getData().schema.filter(d => d.type === FieldType.DIMENSION)\n                    .map(d => d.name);\n                plotDim = context.getPlotPointsFromIdentifiers(dataModels[i].project(dimensions), { getBBox: true });\n                plotDim = plotDim && plotDim[0];\n            }\n\n            const dt = dataTransform(dataModels[i], projectFields, this);\n\n            enter[i] = true;\n            const { parentContainer: layoutContainer, parentContainerDimensions } = drawingInf;\n            const layoutBoundBox = layoutContainer.getBoundingClientRect();\n            const unitBoundBox = drawingInf.htmlContainer.getBoundingClientRect();\n\n            const offsetLeft = unitBoundBox.left - layoutBoundBox.left;\n            const offsetTop = unitBoundBox.top - layoutBoundBox.top;\n            const tooltipInst = tooltips[i] = tooltips[i] || new TooltipRenderer(layoutContainer,\n                    drawingInf.svgContainer);\n\n            sourceInf.payload = payload;\n            sourceInf.firebolt = this.firebolt;\n            sourceInf.detailFields = context.detailFields();\n            sourceInf.timeDiffs = context.timeDiffsByField();\n            sourceInf.valueParser = context.valueParser();\n            sourceInf.selectionSet = selectionSet;\n            tooltipInst.context(sourceInf);\n            const strategyFn = strategyObj[strategy];\n            tooltipInst.content(strategy, dt, {\n                formatter: strategyFn,\n                order: options.order\n            })\n                            .config(this.config())\n                            .extent({\n                                x: 0,\n                                y: 0,\n                                width: parentContainerDimensions.width,\n                                height: parentContainerDimensions.height\n                            })\n                            .offset({\n                                x: offsetLeft + (config.offset.x || 0),\n                                y: offsetTop + (config.offset.y || 0)\n                            });\n\n            if (showInPosition) {\n                tooltipInst.position(tooltipPos.x + pad, tooltipPos.y + pad);\n            } else if (plotDim) {\n                tooltipInst.positionRelativeTo({\n                    x: plotDim.x,\n                    y: plotDim.y,\n                    width: plotDim.width || 0,\n                    height: plotDim.height || 0\n                }, {\n                    orientation: fragmented ?\n                        (showVertically ? 'horizontal' : 'vertical') : undefined\n                });\n            } else {\n                tooltipInst.hide();\n                break;\n            }\n\n            if (fragmented) {\n                const position = tooltipInst._position;\n                const tooltipBoundBox = tooltipInst._tooltipContainer.node().getBoundingClientRect();\n\n                totalHeight += tooltipBoundBox.height + pad;\n                totalWidth += tooltipBoundBox.width + pad;\n                if (showVertically ? totalHeight > drawingInf.height : totalWidth > drawingInf.width) {\n                    break;\n                }\n                boxes.push({\n                    x: position.x,\n                    y: position.y,\n                    width: tooltipBoundBox.width,\n                    height: tooltipBoundBox.height,\n                    tooltip: tooltipInst\n                });\n            }\n        }\n\n        for (const key in tooltips) {\n            if (!enter[key]) {\n                const tooltip = tooltips[key];\n                tooltip.content(payload.action, null);\n                if (!tooltip.getContents().length) {\n                    tooltip.remove();\n                    delete tooltips[key];\n                }\n            }\n        }\n        if (fragmented) {\n            spaceOutBoxes(boxes, boundBox, showVertically);\n            boxes.forEach(box => box.tooltip.position(box.x, box.y, {\n                repositionArrow: true\n            }));\n        }\n        return this;\n    }\n\n    hide (options) {\n        const tooltips = this._tooltips;\n        for (const key in tooltips) {\n            if ({}.hasOwnProperty.call(tooltips, key)) {\n                const strategy = options.strategy || this._strategy;\n                tooltips[key].content(strategy, null);\n                tooltips[key].hide();\n            }\n        }\n    }\n}\n","export const spaceOutBoxes = (boxes, extent, showVertically) => {\n    let y;\n    let height;\n    let x;\n    let width;\n    let i;\n    const pad = 5;\n    const len = boxes.length;\n    const spaceOutIfOverlap = (firstBox, secondBox, opposite) => {\n        x = firstBox.x;\n        width = firstBox.width;\n        y = firstBox.y;\n        height = firstBox.height;\n        const bottom = y + height;\n        const right = x + width;\n\n        if (showVertically) {\n            if (opposite ? y < (secondBox.y + secondBox.height) : bottom > secondBox.y) {\n                secondBox.y = opposite ? firstBox.y - secondBox.height - pad :\n                        bottom + pad;\n            }\n        } else if (opposite ? x < (secondBox.x + secondBox.width) : right > secondBox.x) {\n            secondBox.x = opposite ? firstBox.x - secondBox.width - pad :\n                    right + pad;\n        }\n    };\n\n    boxes.sort((a, b) => (showVertically ? a.y - b.y : a.x - b.x));\n    i = 0;\n\n    for (i = 0; i < len - 1; i++) {\n        spaceOutIfOverlap(boxes[i], boxes[i + 1]);\n    }\n\n    if ((boxes[i].y + boxes[i].height) > extent.height ||\n            (boxes[i].x + boxes[i].width) > extent.width) {\n        if (showVertically) {\n            boxes[i].y -= (boxes[i].height + boxes[i].y) - extent.height;\n        } else {\n            boxes[i].x -= (boxes[i].width + boxes[i].x) - extent.width;\n        }\n        for (i = len - 1; i > 0; i--) {\n            spaceOutIfOverlap(boxes[i], boxes[i - 1], true);\n        }\n    }\n    return boxes;\n};\n","import { selectElement, FieldType } from 'muze-utils';\n\nimport './styles.scss';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport { CROSSLINE } from '../../enums/side-effects';\nimport SpawnableSideEffect from '../spawnable';\n\nexport default class Crossline extends SpawnableSideEffect {\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-crossline-group`,\n            bandClass: `${CLASSPREFIX}-crossband`,\n            lineClass: `${CLASSPREFIX}-crossline`\n        };\n    }\n\n    static formalName () {\n        return CROSSLINE;\n    }\n\n    apply (selectionSet, payload) {\n        let height;\n        let bandWidth;\n        let px;\n        let width;\n        const {\n            className,\n            bandClass,\n            lineClass\n        } = this.config();\n        const dataModel = selectionSet.mergedEnter.model;\n        const drawingInf = this.drawingContext();\n        if (payload.criteria && dataModel && dataModel.isEmpty()) {\n            return this;\n        }\n        if (payload.criteria === null || !dataModel) {\n            this.hide();\n            return this;\n        }\n\n        const dataObj = dataModel.getData();\n        const sourceInf = this.firebolt.context.getSourceInfo();\n        const axes = sourceInf.axes;\n        const axisFields = sourceInf.fields;\n        const fields = selectionSet.fields;\n        const data = dataObj.data;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const svgContainer = drawingInf.sideEffectGroup;\n\n        const elemData = [];\n        fields.forEach((field) => {\n            const fieldIndex = fieldsConfig[field] && fieldsConfig[field].index;\n            const dataArr = data.map(d => d[fieldIndex]);\n            const axisIndex = [['x', 0], ['x', 1], ['y', 0], ['y', 1]].find((arr) => {\n                const fieldInst = axisFields[arr[0]][arr[1]];\n                return fieldInst && fieldInst.type() === FieldType.DIMENSION &&\n                    fieldInst.getMembers().indexOf(field) !== -1;\n            });\n            if (axisIndex !== undefined && data.length) {\n                const type = axisIndex[0];\n                const axis = axes[type][axisIndex[1]];\n                const value = dataArr[0];\n                bandWidth = axis.getUnitWidth() || 0;\n                px = axis.getScaleValue(value) + bandWidth / 2 + drawingInf.xOffset;\n                const layers = this.firebolt.context.layers();\n                const plotWidth = Math.max(...layers.map(layer => layer.getPlotSpan()[type]));\n                const pad = Math.max(...layers.map(layer => layer.getPlotPadding()[type]));\n                height = drawingInf.height;\n                width = drawingInf.width;\n                const startPx = px - plotWidth / 2 - pad / 2;\n                const endPx = px + plotWidth / 2 + pad / 2;\n                const dataPoint = {};\n                if (type === 'y') {\n                    dataPoint.d = `M 0 ${startPx} L 0 ${endPx} L ${width} ${endPx} L ${width} ${startPx} Z`;\n                } else {\n                    dataPoint.d = `M ${startPx} 0 L ${endPx} 0 L ${endPx} ${height} L ${startPx} ${height} Z`;\n                }\n                dataPoint.className = plotWidth ? bandClass : lineClass;\n                !isNaN(px) && elemData.push(dataPoint);\n            }\n        });\n        if (elemData.length) {\n            const parentGroup = this.createElement(svgContainer, 'g', [1], className);\n            const elem = this.createElement(parentGroup, 'path', elemData);\n            elem.attr('d', d => d.d).style('pointer-events', 'none')\n                            .attr('class', d => d.className);\n        }\n        return this;\n    }\n\n    hide () {\n        const className = this.config().className;\n        const drawingInf = this.drawingContext();\n        selectElement(drawingInf.sideEffectGroup).selectAll(`.${className}`).remove();\n    }\n}\n","const fadeFn = (set, context, strategy) => {\n    const {\n        mergedEnter,\n        mergedExit,\n        exitSet,\n        completeSet\n    } = set;\n\n    if (!mergedEnter.length && !mergedExit.length) {\n        context.applyInteractionStyle(completeSet, {}, strategy, false);\n    } else {\n        context.applyInteractionStyle(exitSet[1], {}, strategy, true);\n        context.applyInteractionStyle(mergedEnter, {}, strategy, false);\n    }\n};\n\nexport const strategies = {\n    fade: fadeFn,\n    focus: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'focus', false);\n        } else {\n            context.applyInteractionStyle(mergedExit, {}, 'focus', true);\n            context.applyInteractionStyle(mergedEnter, {}, 'focus', false);\n        }\n    },\n    highlight: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            entrySet,\n            exitSet,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'highlight', false);\n        } else {\n            context.applyInteractionStyle(entrySet[1], {}, 'highlight', true);\n            context.applyInteractionStyle(exitSet[1], {}, 'highlight', false);\n        }\n    }\n};\n","import SurrogateSideEffect from '../surrogate';\nimport { strategies } from './strategy';\nimport { HIGHLIGHTER } from '../../enums/side-effects';\n\nexport default class PlotHighlighter extends SurrogateSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategy = 'highlight';\n        this._strategies = strategies;\n    }\n\n    static formalName () {\n        return HIGHLIGHTER;\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        strategy(selectionSet, this, options.strategy || this._strategy);\n\n        return this;\n    }\n}\n","import SurrogateSideEffect from '../surrogate';\n\nexport default class FilterEffect extends SurrogateSideEffect {\n    static formalName () {\n        return 'filter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static mutates () {\n        return true;\n    }\n\n    apply (selectionSet, payload) {\n        const context = this.firebolt.context;\n        const entryModel = selectionSet.mergedEnter.model;\n        if (payload.criteria === null) {\n            context.clearCaching().resetData();\n        } else {\n            context.enableCaching().data(entryModel);\n        }\n        return this;\n    }\n}\n","import { DataModel, getObjProp } from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport { ANCHORS } from '../../enums/side-effects';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nconst addLayer = (layerRegistry, context, sideEffect) => {\n    context.addLayer((layerDefs) => {\n        const layers = [];\n\n        if (layerDefs) {\n            layerDefs.forEach((layerDef) => {\n                const mark = layerDef.mark;\n                const layerCls = layerRegistry[mark];\n\n                if (layerCls && layerCls.shouldDrawAnchors()) {\n                    const depLayerEncoding = layerDef.def.encoding;\n                    const encoding = {\n                        x: getObjProp(depLayerEncoding, 'x', 'field'),\n                        y: getObjProp(depLayerEncoding, 'y', 'field'),\n                        color: getObjProp(depLayerEncoding, 'color', 'field'),\n                        size: {\n                            field: getObjProp(depLayerEncoding, 'size', 'field'),\n                            value: sideEffect.defaultSizeValue()\n                        }\n                    };\n                    const commonName = sideEffect.constructor.formalName();\n                    const name = `${layerDef.def.name}-${commonName}`;\n\n                    layers.push({\n                        name,\n                        mark: 'point',\n                        groupId: commonName,\n                        className: sideEffect.constructor.defaultConfig().className,\n                        encoding,\n                        transform: {\n                            type: 'identity'\n                        },\n                        calculateDomain: false,\n                        transition: sideEffect.getTransitionConfig(),\n                        source: dm => dm.select(() => false, {\n                            saveChild: false\n                        }),\n                        interactive: false,\n                        owner: layerDef.def.name\n                    });\n                }\n            });\n        }\n        return layers;\n    });\n};\n\nexport default class AnchorEffect extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._layersMap = {};\n        this.addAnchorLayers();\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-anchors-group`\n        };\n    }\n\n    static formalName () {\n        return ANCHORS;\n    }\n\n    addAnchorLayers () {\n        const context = this.firebolt.context;\n        const layerRegistry = context.registry().layerRegistry;\n\n        addLayer(layerRegistry, context, this);\n        return this;\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n\n    /**\n     * Returns the default area value of the anchor point.\n     * @return { number } Default area value of anchor.\n     */\n    defaultSizeValue () {\n        return 100;\n    }\n\n    apply (selectionSet) {\n        const dataModel = selectionSet.mergedEnter.model;\n        const formalName = this.constructor.formalName();\n\n        const context = this.firebolt.context;\n        const layers = context.layers().filter(layer => layer.config().groupId === formalName);\n\n        layers.forEach((layer) => {\n            const linkedLayer = context.getLayerByName(layer.config().owner);\n            const [transformedData, schema] = linkedLayer.getTransformedDataFromIdentifiers(dataModel);\n            const transformedDataModel = new DataModel(transformedData, schema);\n\n            layer.data(transformedDataModel);\n        });\n        return this;\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\nimport { PERSISTENT_ANCHORS } from '../enums/side-effects';\n\nexport default class PersistentAnchors extends AnchorEffect {\n    static formalName () {\n        return PERSISTENT_ANCHORS;\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-persistent-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\nimport { BRUSH_ANCHORS } from '../enums/side-effects';\n\nexport default class BrushAnchors extends AnchorEffect {\n    static formalName () {\n        return BRUSH_ANCHORS;\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-brush-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import * as BEHAVIOURS from './enums/behaviours';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: ['selectionBox', {\n        name: 'highlighter',\n        options: {\n            strategy: 'fade'\n        }\n    }, 'brush-anchors'],\n    [`${BEHAVIOURS.BRUSH},${BEHAVIOURS.SELECT}`]: [{\n        name: 'tooltip',\n        options: {\n            strategy: 'selectionSummary',\n            order: 0,\n            filter: context => context.config().mode === 'fragmented'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'highlight'\n        }\n    }, 'crossline', {\n        name: 'tooltip',\n        options: {\n            order: 9999\n        }\n    }, 'anchors'],\n    [BEHAVIOURS.FILTER]: ['filter'],\n    [BEHAVIOURS.SELECT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'focus'\n        }\n    }, 'persistent-anchors']\n};\n","export const CLASSPREFIX = 'muze';\nexport const STACK = 'stack';\nexport const GROUP = 'group';\nexport const IDENTITY = 'identity';\nexport const ANGLE = 'angle';\nexport const RADIUS = 'radius';\nexport const SIZE = 'size';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const TEXT = 'text';\nexport const OUTER_RADIUS_VALUE = 'outerRadiusValue';\nexport const TEXT_ANCHOR_MIDDLE = 'middle';\nexport const ENCODING = {\n    X: 'x',\n    Y: 'y',\n    X0: 'x0',\n    Y0: 'y0',\n    RADIUS: 'radius',\n    RADIUS0: 'radius0',\n    ANGLE: 'angle',\n    ANGLE0: 'angle0'\n};\n\nexport const ASCENDING = 'asc';\n\nexport const AGG_FN_SUM = 'sum';\n\nexport const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { CLASSPREFIX, STACK } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-area',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: STACK\n    },\n    interaction: {\n\n    },\n    nearestPointThreshold: 10,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        y0: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * This is an interface class which any new layer class has to extend.\n *\n * @example\n * class BarLayer extends BaseLayer {\n *   update (params) {\n *       // super.update(params);\n *       // Update the bar layer\n *   }\n * }\n * @class\n */\nexport default class SimpleLayer {\n\n    formalName () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets or gets the dependencies.\n     * @param {Object} dependencies Dependencies needed by layer\n     * @return {BaseLayer} Instance of base layer.\n     */\n    dependencies () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the config of the layer\n     *\n     * @param {Object} config Configuration of layer\n     * @return {Object} configuration of layer\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Acts as a getter or setter function\n     * When setter\n     * Returns the datamodel of the layer\n     * @param { DataModel } dataModel instance of DataModel\n     * @return { DataModel } DataModel instance of the layer\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized schema of the layer\n     * @return {Object} Serialized schema\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the unique identifier of this layer\n     * @return {string} id of the layer\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n    /*\n     * This method resolves the x, y, x0 and y0 values from the transformed data.\n     * It also checks the type of transformed data for example, if it is a stacked data\n     * then it fetches the y and y0 values from the stacked data.\n     * @param {Array.<Array>} transformedData transformed data\n     * @param {Object} fieldMap field definitions\n     * @param {string} transformType type of transformed data - stack, group or identity.\n     * @return {Array.<Object>} Normalized data\n     * @private\n     */\n    normalizeTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of dataModel\n     * @param {Object} config configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     * @private\n     */\n    getTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a nominal field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @return {Array} Domain values array.\n     */\n    _calculateDomainFromData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, color, etc.\n     * @return {Object} Axis domains\n     */\n    getDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for getting nearest point\n     * @return {BaseLayer} Instance of base layer\n     */\n    getNearestPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for highlighting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    highlightPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for deselecting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    dehighlightPoint () {\n        return this;\n    }\n\n    linkLayerStore () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets the container element for the layer to be renderered.\n     * @param {SVGElement} mountPoint SVG element or group element.\n     */\n    mount () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n","import { COORD_TYPES, mergeRecursive } from 'muze-utils';\nimport * as PROPS from '../enums/props';\n\nconst { CARTESIAN } = COORD_TYPES;\nexport const props = {\n    axes: {},\n    mount: {},\n    measurement: {},\n    metaInf: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    coord: {\n        defaultValue: CARTESIAN\n    },\n    [PROPS.CONFIG]: {\n        value: null,\n        sanitization: (context, config) => {\n            context._customConfig = config;\n            const constructor = context.constructor;\n            const newConf = mergeRecursive({}, constructor.defaultConfig());\n\n            return constructor.defaultPolicy(newConf, config);\n        }\n    }\n};\n","export const DATA = 'data';\nexport const CONFIG = 'config';\nexport const MEASUREMENT = 'measurement';\nexport const DOMAIN = 'domain';\nexport const MOUNT = 'mount';\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { Symbols } from 'muze-utils';\nimport * as AxisOrientation from '../enums/axis-orientation';\n\n/**\n * @module Axis\n * This file exports constants that are used to reference axis orientations\n * in a consistent manner.\n */\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\n\n/**\n  * This object is used to associate the axis orientation with the d3 class\n  * used to represent that axis.\n  */\nexport const axisOrientationMap = {\n    [AxisOrientation.LEFT]: Symbols.axisLeft,\n    [AxisOrientation.BOTTOM]: Symbols.axisBottom,\n    [AxisOrientation.RIGHT]: Symbols.axisRight,\n    [AxisOrientation.TOP]: Symbols.axisTop\n};\n","/**\n * @module axis\n * This file exports constants used to reference scale type\n * consistently throughout the project.\n */\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const TIME = 'temporal';\nexport const COLOR = 'color';\nexport const ORDINAL = 'ordinal';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\nexport const LOG = 'log';\nexport const POW = 'pow';\nexport const IDENTITY = 'identity';\nexport const SEQUENTIAL = 'sequential';\nexport const THRESHOLD = 'threshold';\n","export const CLASSPREFIX = 'muze';\n\nexport const CONTINOUS = 'continous';\nexport const DISCRETE = 'discrete';\nexport const SEQUENTIAL = 'sequential';\nexport const ORDINAL = 'ordinal';\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const THRESHOLD = 'threshold';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\n\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\n\nexport const DOMAIN = 'domain';\nexport const HIDDEN = 'hidden';\nexport const NUMBER = 'number';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\n\nexport const RGB = 'rgb';\nexport const HEX = 'hex';\nexport const HSLA = 'hsla';\nexport const HSL = 'hsl';\n\nexport const DEFAULT_ANGLE_DOMAIN = [1];\nexport const MIN_NO_OF_TICKS = 2;\nexport const DEFAULT_NO_OF_TICKS = 10;\n\n","import { scales, colorSchemes } from 'muze-utils';\n\nimport {\n    SEQUENTIAL,\n    ORDINAL,\n    LINEAR,\n    CONTINOUS,\n    THRESHOLD,\n    QUANTIZE\n} from './enums/constants';\n\nimport * as ScaleType from './enums/scale-type';\n\nconst {\n    scaleLinear,\n    scaleThreshold,\n    scaleLog,\n    scalePow,\n    scaleIdentity,\n    scaleOrdinal,\n    scaleSequential,\n    scaleQuantize,\n    scaleQuantile,\n    schemeCategory10,\n    schemeCategory20,\n    schemeCategory20b,\n    scaleBand,\n    scaleTime\n} = scales;\nexport const scaleMap = {\n    [ScaleType.LINEAR]: scaleLinear,\n    [ScaleType.BAND]: scaleBand,\n    [ScaleType.QUANTIZE]: scaleQuantize,\n    [ScaleType.QUANTILE]: scaleQuantile,\n    [ScaleType.THRESHOLD]: scaleThreshold,\n    [ScaleType.SEQUENTIAL]: scaleSequential,\n    [ScaleType.LOG]: scaleLog,\n    [ScaleType.POW]: scalePow,\n    [ScaleType.IDENTITY]: scaleIdentity,\n    [ScaleType.TIME]: scaleTime,\n    [ScaleType.COLOR]: scaleLinear,\n    [ScaleType.ORDINAL]: scaleOrdinal\n};\nexport const SCHEMES = {\n    SCHEME1: schemeCategory10,\n    SCHEME2: schemeCategory20,\n    SCHEME3: schemeCategory20b\n};\n\n/**\n * Accepts a scheme in a string format and returns the scale from d3-scale-chromatic\n *\n * @export\n * @param {string} scheme a string representing the kind of scheme for the color axis\n * @return {Object} The corresponding scale from a scheme type from d3 chromatic scale\n */\nexport function getScheme (scheme) {\n    if (scheme[0] === 'i') {\n        return scaleSequential(colorSchemes[scheme]);\n    }\n    return scaleOrdinal(colorSchemes[scheme]);\n}\n\n/**\n *\n *\n * @export\n * @param {*} scheme\n *\n */\nexport function getSchemeType (scheme) {\n    let schemeType = '';\n    if (scheme && typeof (scheme) === 'string') {\n        schemeType = scheme[0] === 'i' ? SEQUENTIAL : ORDINAL;\n    } else {\n        schemeType = ORDINAL;\n    }\n    return schemeType;\n}\n\n/**\n * This function is used to create a scale that is assigned to\n * an instance of axis.\n *\n * @export\n * @param {Object} params the input parameters to create a Scale object\n * @param {string} params.type the type of scale\n * @param {Array} params.range the range of scale\n * @return {Object} instance of scale\n */\nexport function createScale (params) {\n    if (!params.type || !scaleMap[params.type]) {\n        throw new Error(`${params.type} is not a valid scale type`);\n    }\n    if (!Array.isArray(params.range)) {\n        throw new Error('range parameter must be an array');\n    }\n    let scaleFactory = null;\n    const range = params.range;\n    // @todo: do it using scale decorator\n    if (params.type === LINEAR && params.interpolator) {\n        scaleFactory = scaleMap[params.interpolator];\n        if (params.interpolator === ScaleType.POW) {\n            return scaleFactory().range(range).exponent(params.exponent);\n        } else if (params.interpolator === ScaleType.LOG) {\n            return scaleFactory().range(range).base([params.base]);\n        }\n    } else {\n        scaleFactory = scaleMap[params.type];\n    }\n\n    if (params.type === QUANTIZE) {\n        scaleFactory().nice();\n    }\n    return scaleFactory().range(range);\n}\n\n/**\n * This method is used to update the range of a scale\n * so that the core module can remain agnostic of the d3\n * scale api.\n *\n * @export\n * @param {Scale} scale Instance of d3 Scale.\n * @param {Array} range new range of the scale.\n * @return {Scale} Updated scale.\n */\nexport function updateScaleRange (scale, range) {\n    return scale.range(range);\n}\n\n/**\n *\n *\n * @export\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} steps\n *\n */\nexport function getScaleType (domainType, rangeType, steps) {\n    if (rangeType === CONTINOUS) {\n        return LINEAR;\n    }\n    if (domainType === CONTINOUS) {\n        if (steps instanceof Array) {\n            return THRESHOLD;\n        }\n        return QUANTIZE;\n    }\n    return ORDINAL;\n}\n","import { getUniqueId } from 'muze-utils';\nimport { CLASSPREFIX } from '../enums/constants';\n\n/**\n *\n *\n */\nexport const defaultConfig = {\n    id: getUniqueId(),\n    adjustRange: false,\n    axisName: {\n        defClassName: 'axis-name'\n    },\n    axisNamePadding: 12,\n    base: 10,\n    classPrefix: CLASSPREFIX,\n    className: `${CLASSPREFIX}-axis`,\n    exponent: 1,\n    interpolator: 'linear',\n    fixedBaseline: true,\n    labels: {\n        rotation: null,\n        smartTicks: null\n    },\n    orientation: 'left',\n    numberFormat: val => val,\n    padding: 0.3,\n    nice: true,\n    numberOfTicks: null,\n    rotate: false,\n    show: true,\n    showAxisName: true,\n    showInnerTicks: true,\n    showOuterTicks: true,\n    style: {},\n    type: 'linear',\n    tickFormat: null,\n    tickValues: null,\n    xOffset: 0,\n    yOffset: 0\n};\n\n","/**\n * This file exports functionality that is used to render axis.\n */\nimport { selectElement, makeElement, angleToRadian } from 'muze-utils';\nimport * as AxisOrientation from './enums/axis-orientation';\nimport { LINEAR, HIDDEN, BOTTOM, TOP } from './enums/constants';\n\n/**\n *\n *\n * @param {*} instance\n * @param {*} container\n * @param {*} labelManager\n * @param {*} config\n */\nconst rotateAxis = (instance, tickText, labelManager) => {\n    let rotation;\n    const axis = instance.axis();\n    const config = instance.config();\n    const renderConfig = instance.renderConfig();\n    const smartTicks = instance.smartTicks();\n    const scale = axis.scale();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n    const ticks = labelFunc();\n    const {\n        orientation,\n        fixedBaseline,\n        type\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n\n    rotation = labels.rotation;\n\n    const tickSize = instance.getTickSize();\n    tickText.each(function (d, index) {\n        let yShift;\n        let xShift;\n        let datum = smartTicks[index] ? smartTicks[index].text : d;\n\n        datum = datum.toString();\n\n        const tickLabelDim = labelManager.getOriSize(datum);\n\n        const width = tickLabelDim.width * 0.5;\n        const height = tickLabelDim.height * 0.5;\n\n        if (rotation < 0) {\n            rotation = 360 + rotation;\n        }\n\n        const quadrant = 4 - Math.floor(rotation / 90);\n        const rotationNormalizer = ((quadrant % 2 === 0) ? rotation : 180 * Math.ceil(rotation / 180) - rotation) % 180;\n\n        yShift = Math.sqrt(height ** 2 + width ** 2) * Math.sin(angleToRadian(rotationNormalizer));\n\n        if ((quadrant === 3 || quadrant === 2) && !(rotationNormalizer > 67.5 && rotationNormalizer <= 90)) {\n            yShift += height * 2;\n        }\n        xShift = width;\n\n        if (rotation === 90) {\n            xShift = height;\n        } else if (rotation === 270) {\n            xShift = -height;\n        } else {\n            xShift = 0;\n        }\n\n        if (orientation === AxisOrientation.TOP) {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift + xShift / 2 : xShift;\n            selectElement(this)\n                            .attr('transform', `translate(${-xShift + tickSize}\n                                ${-yShift - tickSize}) rotate(${rotation})`);\n        } else {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift - xShift / 2 : xShift;\n\n            selectElement(this)\n                            .attr('transform', `translate(${xShift - tickSize}\n                                ${yShift + tickSize}) rotate(${rotation})`);\n        }\n        selectElement(this).transition()\n                        .duration(1000).text(datum);\n    });\n    return tickText;\n};\n\n/**\n *\n *\n * @param {*} tickText\n * @param {*} axisInstance\n */\nconst changeTickOrientation = (selectContainer, axisInstance, tickSize) => {\n    const {\n        _smartTicks\n    } = axisInstance;\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const {\n        orientation,\n        classPrefix\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n    const {\n        rotation,\n        smartTicks: isSmartTicks\n    } = labels;\n\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.selectAll('tspan').remove();\n\n    // rotate labels if not enough space is available\n    if (rotation && (orientation === TOP || orientation === BOTTOM)) {\n        rotateAxis(axisInstance, tickText, labelManager);\n    } else if (!rotation && !isSmartTicks) {\n        tickText.attr('transform', '');\n    } else {\n        tickText.text('');\n        if (orientation === TOP || orientation === BOTTOM) {\n            tickText.attr('y', 0)\n                            .attr('x', 0)\n                            .attr('transform', '')\n                            .text('');\n            const tspan = makeElement(tickText, 'tspan', (d, i) => {\n                if (_smartTicks[i]) {\n                    return _smartTicks[i].lines;\n                } return [];\n            }, `${classPrefix}-smart-text`);\n\n            tspan.attr('dy', '0')\n                            .style('opacity', '0')\n\n                            .transition()\n                            .duration(1000)\n                            .on('end', axisInstance.registerAnimationDoneHook())\n                            .attr('dy', (d, i) => {\n                                if (orientation === BOTTOM || i !== 0) {\n                                    return _smartTicks[0].oriTextHeight;\n                                }\n                                return -_smartTicks[0].oriTextHeight * (_smartTicks[0].lines.length - 1) - tickSize;\n                            })\n                            .style('opacity', 1)\n                            .text(e => e)\n                            .attr('x', 0);\n        } else {\n            const tspan = makeElement(tickText, 'tspan', (d, i) => _smartTicks[i].lines, `${classPrefix}-smart-text`);\n            tspan.text(e => e);\n        }\n    }\n\n    return tickText;\n};\n\nconst setFixedBaseline = (axisInstance) => {\n    const {\n        fixedBaseline\n    } = axisInstance.config();\n    const {\n        showInnerTicks\n    } = axisInstance.renderConfig();\n    const domain = axisInstance.domain();\n    if (fixedBaseline && domain.length && showInnerTicks) {\n        axisInstance.setFixedBaseline();\n    }\n};\n\n/**\n *\n *\n * @param {*} textNode\n * @param {*} orientation\n * @param {*} measures\n */\nconst setAxisNamePos = (textNode, orientation, measures) => {\n    const {\n        axisNameHeight,\n        availableSpace\n    } = measures;\n\n    switch (orientation) {\n    case AxisOrientation.LEFT:\n        textNode.attr('transform',\n            `translate(${-(availableSpace.width - axisNameHeight)},${availableSpace.height / 2})rotate(-90)`);\n        break;\n    case AxisOrientation.RIGHT:\n        textNode.attr('transform',\n             `translate(${(availableSpace.width - axisNameHeight)},${availableSpace.height / 2})rotate(90)`);\n        break;\n    case AxisOrientation.TOP:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${-availableSpace.height + axisNameHeight})`);\n        break;\n    case AxisOrientation.BOTTOM:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${availableSpace.height - axisNameHeight / 2})`);\n        break;\n    default:\n    }\n    return textNode;\n};\n\n/**\n * This method is used to render the axis inside an\n * svg container.\n *\n * @export\n * @param {Object} axisInstance the nput object required to render axis\n * @param {string} axisInstance.orientation the orientation of axis\n * @param {Object} axisInstance.scale instance of d3 scale\n * @param {SVGElement} axisInstance.container the container in which to render\n */\nexport function renderAxis (axisInstance) {\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const mount = axisInstance.mount();\n    const range = axisInstance.range();\n    const axis = axisInstance.axis();\n    const scale = axisInstance.scale();\n    const {\n        _tickLabelStyle: tickLabelStyle,\n        _tickFormatter: axisTickFormatter\n     } = axisInstance;\n    const {\n        orientation,\n        axisNamePadding,\n        className,\n        id,\n        classPrefix\n     } = config;\n    const {\n        show,\n        xOffset,\n        yOffset,\n        showAxisName,\n        labels,\n        smartAxisName\n    } = renderConfig;\n\n    if (!show) {\n        return;\n    }\n\n    const tickSize = axisInstance.getTickSize();\n\n    const selectContainer = makeElement(selectElement(mount), 'g', [axisInstance], `${className}`, {},\n        key => key.config().id);\n\n    // Set style for tick labels\n    labelManager.setStyle(tickLabelStyle);\n\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    const ticks = axis.tickValues() || labelFunc();\n\n    axis.tickFormat(axisTickFormatter(ticks));\n\n    // Get range(length of range)\n    const availableSpace = Math.abs(range[0] - range[1]);\n\n    // Get width and height taken by axis labels\n    const labelProps = axisInstance.axisComponentDimensions().largestTickDimensions;\n\n    // Draw axis ticks\n    selectContainer.attr('transform', `translate(${xOffset},${yOffset})`);\n    setFixedBaseline(axisInstance);\n    if (labels.smartTicks === false || tickSize === 0) {\n        selectContainer.transition()\n                        .duration(1000)\n                        .on('end', axisInstance.registerAnimationDoneHook())\n                        .call(axis);\n    } else {\n        selectContainer.call(axis);\n    }\n    selectContainer.selectAll('.tick').classed(`${classPrefix}-ticks`, true);\n    selectContainer.selectAll('.tick line').classed(`${classPrefix}-tick-lines`, true);\n\n    // Set classes for ticks\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.classed(`${classPrefix}-ticks`, true)\n                    .classed(`${classPrefix}-ticks-${id}`, true);\n\n    changeTickOrientation(selectContainer, axisInstance, tickSize);\n\n    // Create axis name\n    const textNode = makeElement(selectContainer, 'text', [smartAxisName], `${classPrefix}-axis-name`)\n                    .attr('text-anchor', 'middle')\n                    .classed(`${classPrefix}-axis-name-${id}`, true)\n                    .text(d => d.text);\n\n    // Hide axis name if show is off\n    textNode.classed(HIDDEN, !showAxisName);\n\n    // render labels based on orientation of axis\n    const labelOffset = availableSpace / 2;\n\n    const measures = {\n        labelProps,\n        tickSize,\n        axisNamePadding,\n        axisNameHeight: smartAxisName.height,\n        yOffset,\n        xOffset,\n        labelOffset,\n        availableSpace: axisInstance.availableSpace()\n    };\n    // Set position for axis name\n    setAxisNamePos(textNode, orientation, measures);\n}\n","import {\n    timeMillisecond,\n    timeSecond,\n    timeMinute,\n    timeHour,\n    timeDay,\n    timeWeek,\n    timeMonth,\n    timeYear\n} from 'muze-utils';\n\nconst durationSecond = 1000;\nconst durationMinute = durationSecond * 60;\nconst durationHour = durationMinute * 60;\nconst durationDay = durationHour * 24;\nconst durationWeek = durationDay * 7;\nconst durationMonth = durationDay * 30;\nconst durationYear = durationDay * 365;\n\n// Longest Word for each level based on which tick skipping is decided\nconst longestWord = {\n    month: 'September',\n    quarter: 'October',\n    halfYearly: 'July',\n    year: 9999,\n    day: 'September',\n    hour: '24 AM',\n    mintues: '60:60',\n    seconds: ':60',\n    week: 'Wed 31'\n};\n\n// These are the various levels of ticks that can be shown by Muze.\n// Each level is described as how frequently the ticks appear\n// The format is as follows:\n// [Frequency, Milliseconds, Name of Seconds, Tick Generator, Level Type]\nconst tickIntervals = [\n    [1, 1, 'milliseconds', timeMillisecond.every(1), 'seconds'],\n    [1, durationSecond, 'seconds', timeSecond.every(1), 'seconds'],\n    [5, 5 * durationSecond, 'five seconds', timeSecond.every(5), 'seconds'],\n    [10, 10 * durationSecond, 'ten seconds', timeSecond.every(10), 'seconds'],\n    [15, 15 * durationSecond, 'fifteen seconds', timeSecond.every(15), 'seconds'],\n    [30, 30 * durationSecond, 'thirty seconds', timeSecond.every(30), 'seconds'],\n    [1, durationMinute, 'minute', timeMinute.every(1), 'minutes'],\n    [5, 5 * durationMinute, 'five minutes', timeMinute.every(5), 'minutes'],\n    [10, 10 * durationMinute, 'ten minutes', timeMinute.every(10), 'minutes'],\n    [15, 15 * durationMinute, 'fifteen minutes', timeMinute.every(15), 'minutes'],\n    [30, 30 * durationMinute, 'thirty minutes', timeMinute.every(30), 'minutes'],\n    [1, durationHour, 'hour', timeHour.every(1), 'hour'],\n    [3, 3 * durationHour, 'three hours', timeHour.every(3), 'hour'],\n    [6, 6 * durationHour, 'six hours', timeHour.every(6), 'hour'],\n    [12, 12 * durationHour, 'twelve hours', timeHour.every(12), 'hour'],\n    [1, durationDay, 'daily', timeDay.every(1), 'day'],\n    [1, durationWeek, 'weekly', timeWeek.every(1), 'week'],\n    [1, durationMonth, 'monthly', timeMonth.every(1), 'week'],\n    [3, 3 * durationMonth, 'quaterly', timeMonth.every(3), 'quarter'],\n    [6, 6 * durationMonth, 'half yearly', timeMonth.every(6), 'halfYearly'],\n    [1, durationYear, 'yearly', timeYear.every(1), 'year'],\n    [2, 2 * durationYear, '2 year', timeYear.every(2), 'year'],\n    [3, 3 * durationYear, '3 year', timeYear.every(3), 'year'],\n    [5, 5 * durationYear, '5 year', timeYear.every(5), 'year'],\n    [10, 10 * durationYear, 'decade', timeYear.every(10), 'year'],\n    [100, 100 * durationYear, 'century', timeYear.every(100), 'year'],\n    [1000, 1000 * durationYear, 'millenium', timeYear.every(1000), 'year']\n];\n/**\n * Get the actual tick interval based on the available width, number of ticks\n * and the distance between two ticks\n *\n * @param {Object} context Axis Context\n * @param {number} noOfTicks Number of Ticks based on which interval is calculated\n * @return {number} The width for the tick interval\n */\nconst getActualTickInterval = (context, noOfTicks) => {\n    const minTickDistance = context._minTickDistance;\n    const minWidthBetweenTicks = minTickDistance.width;\n\n    const { width } = context.availableSpace();\n    const actualTickInterval = Math.floor(((width - (noOfTicks - 1) * (minWidthBetweenTicks)) / noOfTicks));\n\n    return actualTickInterval;\n};\n\n/**\n * Get the tick interval based on the current level of ticks. Levels are decided on\n * the number of ticks that are possible to show\n *\n * @param {Object} context Axis Context\n * @param {string} type Type of level (yearly, monthly, etc)\n * @return {number} The width for the tick interval\n */\nconst getTickIntervalBasedOnCurrentLevel = (context, type) => {\n    const labelManager = context._dependencies.labelManager;\n    const longestWordType = longestWord[type];\n    const measure = labelManager.getOriSize(longestWordType);\n\n    return measure.width;\n};\n\nconst getTickIntervalFnBasedOnNumberOfTicks = (interval, count, context) => {\n    let possibleTickLevelIndex = tickIntervals.length - 1;\n    let maxPossibleTicks = 1;\n    let tickIntervalLevelInfo = null;\n\n    // Decide possible tick level based on min tick width (with ellipses)\n    for (let i = tickIntervals.length - 1; i >= 0; i--) {\n        const tickIntervalInfo = tickIntervals[i];\n        const numOfPossibleTicks = Math.floor(interval / tickIntervalInfo[1]);\n        if (numOfPossibleTicks <= count) {\n            possibleTickLevelIndex = i;\n            maxPossibleTicks = numOfPossibleTicks;\n        }\n    }\n\n    tickIntervalLevelInfo = tickIntervals[possibleTickLevelIndex];\n\n    // Get actual tick interval based on the level of ticks generated\n    const actualTickInterval = getActualTickInterval(context, maxPossibleTicks);\n\n    // Maximum Possible tick Interval for a particular level based on a pre decided set of values\n    const maxTickInterval = getTickIntervalBasedOnCurrentLevel(context, tickIntervalLevelInfo[4]);\n\n    // Display the next level involving tick skipping if current level does not meet the requirement\n    // for displaying max tick\n    if (actualTickInterval < maxTickInterval && possibleTickLevelIndex < tickIntervals.length - 1) {\n        tickIntervalLevelInfo = tickIntervals[possibleTickLevelIndex + 1];\n    }\n    return tickIntervalLevelInfo[3];\n};\n\nexport const getSkippedTicks = (context, maxPossibleTicks) => {\n    let actualNumberOfTicks = maxPossibleTicks;\n    const domain = context.domain();\n    const minDiff = context._minDiff;\n    // Get the interval in ms from the domain\n    const millisecondInterval = domain[1] - domain[0];\n    // Get number of ticks based on the minimum difference in the data\n    const numOfTicksAccordingToMinDiff = Math.floor(millisecondInterval / minDiff);\n\n    // Show ticks according to min diff if possible\n    if (maxPossibleTicks >= numOfTicksAccordingToMinDiff) {\n        actualNumberOfTicks = numOfTicksAccordingToMinDiff;\n    }\n\n    return getTickIntervalFnBasedOnNumberOfTicks(millisecondInterval, actualNumberOfTicks, context);\n};\n","import { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { getSkippedTicks } from './skip-ticks';\nimport { TIME, LINEAR, BAND } from '../enums/scale-type';\n\nexport const applyTickSkipping = (context) => {\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minWidthBetweenTicks = minTickDistance.width;\n    const minTickWidth = minTickSpace.width;\n\n    const { width } = context.availableSpace();\n\n    const maxTicks = Math.floor((width + minWidthBetweenTicks) / (minTickWidth + minWidthBetweenTicks));\n\n    const ticks = context.scale().ticks(getSkippedTicks(context, maxTicks));\n\n    context.renderConfig({\n        tickValues: ticks\n    });\n};\n\nconst adjustHorizontalRange = (range, diff) => {\n    range[0] += diff;\n    range[1] -= diff;\n    return range;\n};\n\nconst adjustVerticalRange = (range, diff) => {\n    range[0] -= diff;\n    range[1] += diff;\n    return range;\n};\n\nconst rangeAdjustmentMap = {\n    [TOP]: adjustHorizontalRange,\n    [BOTTOM]: adjustHorizontalRange,\n    [LEFT]: adjustVerticalRange,\n    [RIGHT]: adjustVerticalRange\n};\n\nexport const setAxisRange = (context, type, rangeBounds, offset) => {\n    context.range(rangeBounds);\n    offset && context.renderConfig({ [`${type}Offset`]: offset });\n};\n\nconst getAxisOffset = (timeDiff, range, domain) => {\n    const avWidth = Math.abs(range[1] - range[0]);\n    const pvr = avWidth / (domain[1] - domain[0]);\n    const width = (pvr * timeDiff);\n    const bars = avWidth / width;\n    const barWidth = avWidth / (bars + 1);\n    const diff = avWidth - barWidth * bars;\n\n    return diff / 2;\n};\n\nexport const getAdjustedRange = (minDiff, range, domain, config) => {\n    const {\n        orientation,\n        adjustRange\n    } = config;\n    const diff = getAxisOffset(minDiff, range, domain);\n\n    if (adjustRange) {\n        return rangeAdjustmentMap[orientation](range, diff);\n    }\n    return range;\n};\n\nexport const spaceSetter = (context, spaceConfig) => {\n    let tickInterval;\n    let heightForTicks;\n    const config = context.config();\n    const {\n        width: availWidth,\n        height: availHeight,\n        padding\n    } = context.availableSpace();\n    const {\n        top,\n        left,\n        bottom,\n        right\n    } = padding;\n    const {\n        isOffset\n    } = spaceConfig;\n    const {\n        showAxisName,\n        labels\n    } = context.renderConfig();\n    const {\n        rotation\n    } = labels;\n    const {\n        fixedBaseline,\n        axisNamePadding,\n        tickValues\n    } = config;\n    const {\n        tickDimensions,\n        allTickDimensions,\n        axisNameDimensions,\n        tickSize\n    } = context.getAxisDimensions();\n    const {\n        height: tickDimHeight,\n        width: tickDimWidth\n    } = tickDimensions;\n\n    const namePadding = showAxisName ? axisNamePadding : 0;\n    const labelConfig = { smartTicks: true, rotation: labels.rotation };\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minDiff = context._minDiff;\n    const domain = context.domain();\n    const axisNameHeight = axisNameDimensions.height;\n    const minWidthBetweenTicks = minTickDistance.width;\n    const minTickWidth = Math.min(minTickSpace.width, tickDimWidth);\n    const minTickHeight = Math.min(minTickSpace.height, tickDimHeight);\n\n    return {\n        [TIME]: {\n            x: () => {\n                !tickValues && context.applyTickSkipping();\n                const noOfTicks = context.getTickValues().length;\n\n                // Get the Tick Interval\n                tickInterval = ((availWidth - (noOfTicks - 1) * (minWidthBetweenTicks)) / noOfTicks);\n\n                // Get height for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickWidth && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = rotation;\n                    // Remove ticks if not enough height\n                    if (tickInterval < minTickHeight) {\n                        heightForTicks = availHeight;\n                        tickInterval = minTickHeight;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n\n                const tickShifter = Math.min(tickInterval, tickDimWidth);\n                // set range for axis\n                setAxisRange(context, 'y', getAdjustedRange(minDiff, [tickShifter / 2,\n                    availWidth - left - right - tickShifter / 2], domain, config),\n                        isOffset ? availHeight : null);\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n\n                return labelConfig;\n            },\n            y: () => {\n                let widthForTicks = availWidth;\n                const tickShifter = tickDimHeight / 2;\n\n                setAxisRange(context, 'x', getAdjustedRange(minDiff,\n                    [availHeight - top - bottom - tickShifter, tickShifter], domain, config),\n                        isOffset ? availWidth : null);\n\n                if ((availWidth - axisNameHeight - namePadding) <= minWidthBetweenTicks) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        [BAND]: {\n            x: () => {\n                setAxisRange(context, 'y', [0, availWidth - left - right], isOffset ? availHeight : null);\n                const range = context.range();\n\n                // Get Tick Interval\n                tickInterval = ((range[1] - range[0]) / (tickValues || domain).length) - minWidthBetweenTicks;\n\n                // Get height available for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickWidth && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = rotation === null ? -90 : rotation;\n                    labelConfig.smartTicks = false;\n\n                    tickInterval = Math.max(heightForTicks, minTickWidth);\n\n                    if (heightForTicks < minTickWidth) {\n                        context.renderConfig({ showAxisName: false });\n                    }\n                } else if (tickValues) {\n                    const interval = (availWidth / domain.length) - minWidthBetweenTicks;\n                    if (interval < minTickWidth) {\n                        context.range([minTickHeight / 2, availWidth - minTickHeight / 2]);\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n                return labelConfig;\n            },\n            y: () => {\n                setAxisRange(context, 'x', [availHeight - bottom, top], isOffset ? availWidth : null);\n\n                let widthForTicks = availWidth - axisNameHeight - tickSize - namePadding;\n                if (widthForTicks <= minWidthBetweenTicks) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        [LINEAR]: {\n            x: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimWidth / 2;\n\n                const baseline = fixedBaseline ? 0 : tickShifter;\n\n                setAxisRange(context, 'y', [baseline + left, availWidth - right - tickShifter],\n                    isOffset ? availHeight : null);\n\n                const range = context.range();\n\n                // Get Tick widths and available space\n                const totalTickWidth = allTickDimensions.length * (tickDimWidth + minWidthBetweenTicks);\n                const availableWidth = range[1] - range[0];\n\n                 // Rotate labels if not enough width\n                if (availableWidth < totalTickWidth && labels.rotation !== null) {\n                    if (availHeight - tickDimWidth - namePadding - tickSize > axisNameHeight) {\n                        labelConfig.rotation = null;\n                        context.renderConfig({\n                            showInnerTicks: true,\n                            showAxisName: true\n                        });\n                    } else {\n                        labelConfig.rotation = -90;\n                        context.renderConfig({\n                            showInnerTicks: true,\n                            showAxisName: false\n\n                        });\n                    }\n                }\n\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            },\n            y: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimensions.height / 2;\n                const baseline = fixedBaseline ? 1 : tickShifter;\n\n                setAxisRange(context, 'x', [availHeight - bottom - baseline, tickShifter + top],\n                    isOffset ? availWidth : null);\n\n                // Remove display of ticks if no space is left\n                if (availWidth < tickDimWidth + axisNameHeight + namePadding) {\n                    context.renderConfig({ showInnerTicks: false });\n                    if (availWidth < axisNameHeight) {\n                        context.renderConfig({ show: false });\n                    }\n                }\n                return labelConfig;\n            }\n        }\n    };\n};\n","import { defaultValue } from 'muze-utils';\nimport { TOP, LEFT, BOTTOM } from '../enums/axis-orientation';\nimport { MIN_NO_OF_TICKS, DEFAULT_NO_OF_TICKS } from '../enums/constants';\nimport { setAxisRange, getAdjustedRange } from './space-setter';\n\nexport const getRotatedSpaces = (rotation = 0, width, height) => {\n    let rotatedHeight = height;\n    let rotatedWidth = width;\n    if (rotation) {\n        const angle = ((rotation || 0) * Math.PI) / 180;\n        rotatedWidth = Math.abs(height * Math.sin(angle)) + Math.abs(width * Math.cos(angle));\n        rotatedHeight = Math.abs(width * Math.sin(angle)) + Math.abs(height * Math.cos(angle));\n    }\n    return { width: rotatedWidth, height: rotatedHeight };\n};\n\nexport const setOffset = (context) => {\n    let x = 0;\n    let y = 0;\n    const logicalSpace = context.logicalSpace();\n    const config = context.config();\n    const {\n        orientation,\n        xOffset,\n        yOffset\n    } = config;\n    if (orientation === LEFT) {\n        x = xOffset === undefined ? logicalSpace.width : xOffset;\n    }\n    if (orientation === TOP) {\n        y = yOffset === undefined ? logicalSpace.height : yOffset;\n    }\n    context.renderConfig({ xOffset: x, yOffset: y });\n};\n\nexport const getNumberOfTicks = (availableSpace, labelDim, axis, axisInstance) => {\n    let numberOfValues = 0;\n    let tickValues = [];\n    let { numberOfTicks } = axisInstance.config();\n    const ticks = axis.scale().ticks();\n    const tickLength = ticks.length;\n    const minTickDistance = axisInstance._minTickDistance.width;\n\n    numberOfValues = tickLength;\n\n    if (tickLength * (labelDim + minTickDistance) > availableSpace) {\n        numberOfValues = Math.floor(availableSpace / (labelDim + minTickDistance));\n    }\n\n    numberOfTicks = numberOfTicks || numberOfValues;\n    numberOfValues = Math.min(numberOfTicks, Math.max(MIN_NO_OF_TICKS, numberOfValues));\n\n    tickValues = axis.scale().ticks(numberOfValues);\n\n    if (tickValues.length > numberOfValues) {\n        tickValues = tickValues.filter((e, i) => i % 2 === 0);\n    }\n\n    if (numberOfValues === MIN_NO_OF_TICKS) {\n        tickValues = axis.scale().ticks(DEFAULT_NO_OF_TICKS);\n        tickValues = [tickValues[0], tickValues[tickValues.length - 1]];\n    }\n    return tickValues;\n};\n\nexport const getAxisComponentDimensions = (context) => {\n    let largestTick = '';\n    let largestTickDimensions = { width: 0, height: 0 };\n    let smartTick = {};\n    let axisTicks;\n    const allTickDimensions = [];\n    const scale = context.scale();\n    const { tickValues, showAxisName } = context.renderConfig();\n    const { name } = context.config();\n    const { labelManager } = context.dependencies();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    // set the style on the shared label manager instance\n    labelManager.setStyle(context._tickLabelStyle);\n\n    // get the values along the domain\n    axisTicks = tickValues || labelFunc();\n\n    // Get the tick labels\n    axisTicks = axisTicks.map((originalLabel, i) => {\n        const label = context.getFormattedText(originalLabel, i, axisTicks);\n\n    // convert to string for quant values\n        const tickDimensions = labelManager.getOriSize(label);\n\n    // Get spaces for all labels\n        allTickDimensions.push(tickDimensions);\n\n    // Getting largest label\n        if (tickDimensions.width > largestTickDimensions.width) {\n            largestTick = label;\n            smartTick = context.smartTicks() ? context.smartTicks()[i] : {};\n\n            largestTickDimensions = tickDimensions;\n            smartTick = smartTick || tickDimensions;\n        }\n        return label;\n    });\n\n    labelManager.setStyle(context._axisNameStyle);\n    const axisNameDimensions = showAxisName ? labelManager.getOriSize(name) : { width: 0, height: 0 };\n\n    return {\n        axisNameDimensions,\n        largestTick,\n        largestTickDimensions,\n        allTickDimensions,\n        axisTicks,\n        smartTick,\n        tickSize: context.getTickSize()\n    };\n};\n\nexport const computeAxisDimensions = (context) => {\n    let tickDimensions = {};\n    const { labels } = context.renderConfig();\n    const { smartTicks, rotation } = labels;\n    const {\n        largestTickDimensions,\n        axisTicks,\n        smartTick,\n        axisNameDimensions,\n        allTickDimensions,\n        tickSize\n    } = getAxisComponentDimensions(context);\n    const { height: labelHeight, width: labelWidth } = largestTickDimensions;\n\n    // get the domain of axis\n    const domain = context.domain();\n    // const angle = ((rotation || 0) * Math.PI) / 180;\n\n    if (domain.length === 0) {\n        return null;\n    }\n\n    if (smartTicks) {\n        tickDimensions = smartTick;\n    } else {\n        tickDimensions = { width: labelWidth, height: labelHeight };\n    }\n    tickDimensions = getRotatedSpaces(rotation, tickDimensions.width, tickDimensions.height);\n\n    if (tickSize === 0) {\n        tickDimensions = { width: 0, height: 0 };\n    }\n    return {\n        allTickDimensions,\n        tickSize,\n        tickDimensions,\n        axisNameDimensions,\n        largestTickDimensions,\n        axisTicks\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getHorizontalAxisSpace = (context, axisDimensions, range) => {\n    let width;\n    let height;\n    const domain = context.domain();\n    const minTickDistance = context._minTickDistance.width;\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    width = range && range.length ? range[1] - range[0] : ((tickDimWidth + minTickDistance) * 3);\n\n    height = 0;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        width = ((max - min) / Math.abs(minTickDiff)) * (tickDimWidth + context._minTickDistance.width);\n    }\n    if (!range || !range.length) {\n        height = Math.max(tickDimWidth, tickDimHeight);\n    } else {\n        height = tickDimHeight;\n    }\n\n    height += (showAxisName ? axisDimHeight + axisNamePadding : 0) + tickSize;\n\n    return {\n        width,\n        height\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getVerticalAxisSpace = (context, axisDimensions) => {\n    let height;\n    let width;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    height = 0;\n    width = tickDimWidth;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        height = ((max - min) / Math.abs(minTickDiff)) * tickDimHeight;\n    }\n    width += (showAxisName ? axisDimHeight : 0) + tickSize + axisNamePadding;\n\n    return {\n        height,\n        width\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateBandSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n\n    const { orientation } = context.config();\n    const { show } = context.renderConfig();\n    const { largestTickDimensions, axisTicks, allTickDimensions } = axisDimensions;\n    const { height: largestDimHeight } = largestTickDimensions;\n    const minTickWidth = context._minTickDistance.width;\n    if (orientation === TOP || orientation === BOTTOM) {\n        let {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n\n        if (!range || !range.length) {\n            width = allTickDimensions.reduce((t, n) =>\n                t + Math.min(n.width, n.height) + minTickWidth, 0);\n        }\n\n        if (show === false) {\n            height = 0;\n            width = 0;\n        }\n        return {\n            width,\n            height\n        };\n    }\n\n    let {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    if (!height || height === 0) {\n        height = axisTicks.length * (largestDimHeight + context._minTickDistance.height);\n    }\n    if (show === false) {\n        width = 0;\n    }\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateContinousSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n    const { orientation } = context.config();\n    const { show, showAxisName } = context.renderConfig();\n    const { axisNameDimensions } = axisDimensions;\n\n    if (show === false) {\n        return {\n            width: 0,\n            height: 0\n        };\n    }\n\n    const { width: axisNameWidth } = axisNameDimensions;\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        const {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n        const axisWidth = Math.max(width, axisNameWidth);\n\n        return {\n            width: axisWidth,\n            height\n        };\n    }\n    const {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    const effHeight = Math.max(height, showAxisName ? axisNameWidth : 0);\n\n    return {\n        width,\n        height: effHeight\n    };\n};\n\n/**\n * Overwrites domain with user defined domain (if present)\n * @param {Object} context reference to current axes\n * @param {Array} domain default domain\n *\n * @return {Array} domain\n */\nexport const getValidDomain = (context, domain) => {\n    const { domain: userDom } = context.config();\n\n    if (userDom) {\n        domain = userDom;\n    }\n\n    return defaultValue(domain, []);\n};\n\nexport const setContinousAxisDomain = (context, domain) => {\n    const { nice } = context.config();\n    const scale = context.scale.bind(context);\n\n    scale().domain(domain);\n    nice && scale().nice();\n    context._domain = scale().domain();\n};\n\n/**\n * Checks if any of the properties have changed between two objects\n * @param {Object} obj first object\n * @param {Object} obj1 second object\n * @param {Array} properties properties to be compared between two objects\n *\n * @return {Boolean} boolean value\n */\nexport const hasAxesConfigChanged = (obj = {}, obj1 = {}, properties) => {\n    if (!Object.keys(obj).length || !Object.keys(obj1).length) {\n        return false;\n    }\n    return properties.some(key => obj[key] !== obj1[key]);\n};\n\nexport const resetTickInterval = (context, domain) => {\n    const {\n        orientation,\n        isOffset\n    } = context.config();\n\n    const minDiff = context._minDiff;\n     // Set available space on interaction\n    if (context.range().length && (orientation === TOP || orientation === BOTTOM)) {\n        context.applyTickSkipping();\n        const {\n            largestTickDimensions\n        } = context.getAxisDimensions();\n\n        const noOfTicks = context.getTickValues().length;\n\n        const { width, height, padding } = context.availableSpace();\n        const {\n            left,\n            right\n        } = padding;\n        // Get the Tick Interval\n        const tickInterval = Math.min(largestTickDimensions.width,\n            ((width - (noOfTicks - 1) * (context._minTickDistance.width)) / noOfTicks));\n\n        context.maxTickSpaces({\n            width: tickInterval\n        });\n\n        const adjustedRange = getAdjustedRange(minDiff, [tickInterval / 2,\n            width - left - right - tickInterval / 2], domain, context.config());\n\n         // set range for axis\n        setAxisRange(context, 'y', adjustedRange, isOffset ? height : null);\n\n        context.setTickConfig();\n    }\n};\n\nexport const getSmartAxisName = (name, width, labelManager) => {\n    const oriSize = labelManager.getOriSize(name);\n\n    labelManager.useEllipsesOnOverflow(true);\n\n    return labelManager.getSmartText(name, width, oriSize.height, true);\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { hasAxesConfigChanged } from './helper';\n\nexport const PROPS = {\n    availableSpace: {},\n    axisDimensions: {},\n    axisComponentDimensions: {},\n    config: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._config || {});\n            const mockedOldConfig = mergeRecursive({}, oldConfig);\n            value = mergeRecursive(mockedOldConfig, value);\n\n            value.axisNamePadding = Math.max(value.axisNamePadding, 0);\n            const shouldAxesScaleUpdate = hasAxesConfigChanged(\n                value, oldConfig, ['interpolator', 'exponent', 'base', 'orientation']\n            );\n            const tickFormatter = context.sanitizeTickFormatter(value);\n\n            if (shouldAxesScaleUpdate) {\n                context._scale = context.createScale(value);\n                context._axis = context.createAxis(value);\n            }\n\n            context._tickFormatter = ticks => tickFormatter(ticks);\n\n            context.resetRenderConfig(value);\n            return value;\n        }\n    },\n    renderConfig: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._renderConfig || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    logicalSpace: {},\n    mount: {\n    },\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.logicalSpace(null);\n            return value;\n        }\n    },\n\n    smartTicks: {},\n    tickSize: {},\n    maxTickSpaces: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._maxTickSpaces || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import {\n    mergeRecursive,\n    getSmartComputedStyle,\n    selectElement,\n    generateGetterSetters,\n    getUniqueId\n} from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { defaultConfig } from './default-config';\nimport { renderAxis } from '../axis-renderer';\nimport { spaceSetter } from './space-setter';\nimport {\n    getAxisComponentDimensions,\n    computeAxisDimensions,\n    calculateContinousSpace,\n    setOffset,\n    getValidDomain,\n    getSmartAxisName\n} from './helper';\nimport { PROPS } from './props';\n\nexport default class SimpleAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @memberof SimpleAxis\n     */\n    constructor (config, dependencies) {\n        this._id = getUniqueId();\n\n        this._dependencies = dependencies;\n        this._mount = null;\n        this._range = [];\n        this._domain = [];\n        this._domainLock = false;\n        this._axisDimensions = {};\n        this._smartTicks = [];\n\n        const defCon = mergeRecursive({}, this.constructor.defaultConfig());\n        const simpleConfig = mergeRecursive(defCon, config);\n\n        const bodyElem = selectElement('body');\n        const classPrefix = simpleConfig.classPrefix;\n        this._tickLabelStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-ticks`);\n        this._axisNameStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-axis-name`);\n\n        dependencies.labelManager.setStyle(this._tickLabelStyle);\n        const dist = dependencies.labelManager.getOriSize('w');\n\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n        this._minTickSpace = dependencies.labelManager.getOriSize('www...');\n\n        generateGetterSetters(this, PROPS);\n        this.config(simpleConfig);\n\n        this._scale = this.createScale(this._config);\n        this._axis = this.createAxis(this._config);\n        this._animationDonePromises = [];\n    }\n\n    /**\n     * Returns the default configuration of simple axis\n     *  @return {Object} default configurations\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    scale (...params) {\n        if (params.length) {\n            this._scale = params[0];\n            return this;\n        }\n        return this._scale;\n    }\n\n    resetDomain () {\n        this._domain = [];\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    axis (...params) {\n        if (params.length) {\n            this._axis = params[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            this.scale().domain(domainValue);\n            this._domain = this.scale().domain();\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    setAxisComponentDimensions () {\n        this.axisComponentDimensions(getAxisComponentDimensions(this));\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const scale = createScale({\n            padding,\n            interpolator,\n            exponent,\n            base,\n            range,\n            type: this.constructor.type()\n        });\n\n        return scale;\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat, numberFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(numberFormat(val), val, i, ticks);\n        }\n\n        return () => val => numberFormat(val);\n    }\n\n    resetRenderConfig (config) {\n        const {\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName,\n            xOffset,\n            yOffset,\n            tickValues,\n            smartAxisName\n        } = config;\n        this.renderConfig({\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName,\n            xOffset,\n            yOffset,\n            tickValues,\n            smartAxisName\n        });\n        return this;\n    }\n\n    resetLogicalSpace () {\n        this.logicalSpace(null);\n        this.range([]);\n\n        this.resetRenderConfig(this.config());\n    }\n\n    getFormattedText (text, index, axisTicks) {\n        const formatter = this._tickFormatter;\n\n        return formatter(axisTicks)(text, index);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const { orientation } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            const axis = axisClass(this.scale());\n            return axis;\n        }\n        return null;\n    }\n\n    setTickValues (tickValues) {\n        const renderConfig = this.renderConfig();\n        this.config({ ...renderConfig, tickValues });\n        this.tickValues = tickValues;\n        this.axis().tickValues(tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n        const type = this.constructor.type();\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset })[type].x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset })[type].y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.setSmartAxisName();\n        return this;\n    }\n\n    setSmartAxisName () {\n        const { orientation, name } = this.config();\n        const dimType = (orientation === TOP || orientation === BOTTOM) ? 'width' : 'height';\n        const widthDim = this.availableSpace()[dimType];\n        const labelManager = this.dependencies().labelManager;\n        labelManager.setStyle(this._axisNameStyle);\n        this.renderConfig({\n            smartAxisName: getSmartAxisName(name, widthDim, labelManager)\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        return this;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this.scale()(domainVal);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        return this.axis().tickSize();\n    }\n\n    /**\n     * Gets the space occupied by the parts of an axis\n     *\n     * @return {Object} object with details about sizes of the axis.\n     * @memberof SimpleAxis\n     */\n    getAxisDimensions (...params) {\n        this.axisDimensions(computeAxisDimensions(this, ...params));\n        return this.axisDimensions();\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateContinousSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    /**\n     * Returns the value from the domain when given a value from the range.\n     * @param {number} value Value from the range.\n     * @return {number} Value\n     */\n    invert (value) {\n        return this.scale().invert(value);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     *\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        return [v1, v2];\n    }\n\n    invertExtent (v1, v2) {\n        return [this.invert(v1), this.invert(v2)];\n    }\n\n    getMinTickDifference () {\n        return this.domain();\n    }\n\n    getFormattedTickValues (tickValues) {\n        return tickValues;\n    }\n\n    /**\n     * This method returns the width in pixels for one\n     * unit along the axis. It is only applicable to band scale\n     * and returns undefined for other scale type.\n     *\n     * @return {number} the width of one band along band scale axis\n     * @memberof SimpleAxis\n     */\n    getUnitWidth () {\n        return 0;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof SimpleAxis\n     */\n    serialize () {\n        return {\n            name: this.name,\n            type: this.type,\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to render the axis inside\n     * the supplied svg container.\n     *\n     * @param {SVGElement} svg the svg element in which to render the path\n     * @memberof SimpleAxis\n     */\n    /* istanbul ignore next */render () {\n        if (this.mount()) {\n            this.setTickConfig();\n            renderAxis(this);\n        }\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    remove () {\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    unsubscribe () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    isReverse () {\n        const range = this.range();\n        return range[0] > range[1];\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getPixelToValueRatio () {\n        const scale = this.scale();\n        const range = scale.range();\n        const domain = scale.domain();\n\n        return Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    }\n\n     /**\n     * Notifies when all animations/transitions of the axis are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n}\n\n","import { sanitizeDomainWhenEqual } from 'muze-utils';\nimport { scaleMap } from '../../scale-creator';\n\nexport default class LinearInterpolator {\n\n    createScale (config) {\n        const {\n            range\n        } = config;\n        const scaleFactory = scaleMap.linear;\n        this._scale = scaleFactory().range(range);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain.length) {\n            domain = sanitizeDomainWhenEqual(domain);\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LogInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            base\n        } = config;\n        const scaleFactory = scaleMap.log;\n        this._scale = scaleFactory().range(range).base(base);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        const scale = this._scale;\n        if (domainVal <= 0) {\n            return scale(scale.domain()[0]);\n        }\n\n        return scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain[0] <= 0) {\n            domain[0] = Math.max(1, domain[0]);\n        }\n        if (domain[1] <= 0) {\n            domain[1] = Math.max(1, domain[1]);\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class PowInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            exponent\n        } = config;\n        const scaleFactory = scaleMap.pow;\n        this._scale = scaleFactory().range(range).exponent(exponent);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        return domain;\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { LINEAR, LOG, POW } from '../enums/scale-type';\nimport { LogInterpolator, PowInterpolator, LinearInterpolator } from './interpolators';\nimport {\n    getNumberOfTicks,\n    getValidDomain,\n    setContinousAxisDomain\n} from './helper';\n\nexport const interpolatorMap = {\n    [LOG]: LogInterpolator,\n    [POW]: PowInterpolator,\n    [LINEAR]: LinearInterpolator\n};\n\nexport default class ContinousAxis extends SimpleAxis {\n    constructor (config, dependencies) {\n        config.tickFormat = config.tickFormat || (val => val);\n        super(config, dependencies);\n    }\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const InterpolatorCls = interpolatorMap[interpolator];\n\n        this._interpolator = new InterpolatorCls();\n        let scale = this._interpolator.createScale({\n            padding,\n            exponent,\n            base,\n            range\n        });\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ContinousAxis\n     */\n    static type () {\n        return LINEAR;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this._interpolator.getScaleValue(domainVal);\n    }\n /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n\n        return axis.tickSize();\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainVal = this._interpolator.sanitizeDomain(getValidDomain(this, domain[0]));\n            setContinousAxisDomain(this, domainVal);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (...params) {\n        super.setAvailableSpace(...params);\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} tickValues\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        const {\n            tickValues,\n            showInnerTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        if (!showInnerTicks) {\n            axis.tickValues([]);\n            return this;\n        }\n\n        if (tickValues) {\n            tickValues instanceof Array && this.axis().tickValues(tickValues);\n        }\n        const newTickValues = this.getTickValues();\n\n        axis.tickValues(newTickValues);\n        const smartLabel = this.dependencies().labelManager;\n        smartLabel.setStyle(this._tickLabelStyle);\n        const formatter = this._tickFormatter(newTickValues);\n        const smartTicks = newTickValues.map((val, i) => {\n            const text = formatter(val, i);\n            const tickSpace = smartLabel.getOriSize(text);\n\n            tickSpace.text = text;\n            return tickSpace;\n        });\n\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickValues () {\n        let labelDim = 0;\n        const {\n            orientation\n\n        } = this.config();\n        const {\n            tickValues\n        } = this.renderConfig();\n        const range = this.range();\n        const axis = this.axis();\n\n        const availableSpace = Math.abs(range[0] - range[1]);\n\n        const labelProps = this.axisComponentDimensions().largestTickDimensions;\n\n        if (tickValues) {\n            return tickValues;\n        }\n        labelDim = labelProps[orientation === BOTTOM || orientation === TOP ? 'width' : 'height'];\n\n        return getNumberOfTicks(availableSpace, labelDim, axis, this);\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.renderConfig().tickValues);\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline (tickText) {\n        const {\n            orientation\n        } = this.config();\n        const {\n            labels\n        } = this.renderConfig();\n\n        const {\n            rotation\n        } = labels;\n        const axis = this.axis();\n        const ticks = axis.tickValues();\n        const smartTicks = this.smartTicks();\n\n        if (smartTicks && smartTicks.length) {\n            const { width, height } = this.smartTicks()[0];\n\n            axis.tickTransform((d) => {\n                if (d === ticks[0]) {\n                    if ((orientation === LEFT || orientation === RIGHT)) {\n                        return `translate(0, -${(height) / 3}px)`;\n                    }\n\n                    if ((orientation === TOP || orientation === BOTTOM) && !rotation) {\n                        return `translate(${width / 2}px,  ${0}px)`;\n                    }\n                } return '';\n            });\n        }\n        return tickText;\n    }\n\n}\n","import SimpleAxis from './simple-axis';\nimport { BAND } from '../enums/scale-type';\nimport { calculateBandSpace, setOffset, getRotatedSpaces } from './helper';\n\nexport default class BandAxis extends SimpleAxis {\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BandAxis\n     */\n    static type () {\n        return BAND;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks = '';\n        let smartlabel;\n        const domain = this.domain();\n        const { labelManager } = this._dependencies;\n        const { padding } = this.config();\n        const { labels, tickValues } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        tickValues && this.axis().tickValues(tickValues);\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        // Update padding between plots\n        if (typeof padding === 'number') {\n            const paddingNormalized = Math.min(1, Math.max(0, padding));\n            this.scale().padding(paddingNormalized);\n        }\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    /**\n     *\n     *\n     * @memberof BandAxis\n     */\n    getTickValues () {\n        return this.axis().scale().domain();\n    }\n\n    formatTickValue (val) {\n        return this.valueParser()(val);\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(this.formatTickValue(val), val, i, ticks);\n        }\n        return () => val => this.formatTickValue(val);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    getUnitWidth () {\n        return this.scale().bandwidth();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        axis.tickSizeInner(showInnerTicks ? 6 : 0);\n        axis.tickSizeOuter(showOuterTicks ? 6 : 0);\n        return axis.tickSize();\n    }\n\n    invertExtent (v1, v2) {\n        return this.scale().invertExtent(v1, v2);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        const scale = this.scale();\n        const range = scale.range();\n        const reverse = range[0] > range[1];\n\n        const extent = this.invertExtent(v1, v2);\n        const p1 = scale(reverse ? extent[extent.length - 1] : extent[0]);\n        const p2 = scale(reverse ? extent[0] : extent[extent.length - 1]) + scale.bandwidth();\n        return [p1, p2];\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { TIME } from '../enums/scale-type';\nimport { calculateBandSpace, getRotatedSpaces, getValidDomain, setContinousAxisDomain, setOffset,\n    resetTickInterval } from './helper';\nimport { applyTickSkipping } from './space-setter';\n\n/**\n *\n *\n * @export\n * @class TimeAxis\n * @extends {SimpleAxis}\n */\nexport default class TimeAxis extends SimpleAxis {\n\n    constructor (...params) {\n        super(...params);\n        this._minDiff = Infinity;\n    }\n\n    /**\n     *\n     *\n     * @param {*} range\n     *\n     * @memberof TimeAxis\n     */\n    createScale (range) {\n        let scale = super.createScale(range);\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TimeAxis\n     */\n    static type () {\n        return TIME;\n    }\n\n    formatTickValue (val) {\n        return this.scale().tickFormat()(val);\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return (ticks) => {\n                const rawTicks = ticks.map(t => t.getTime());\n                return (val, i) => tickFormat(this.formatTickValue(val), val.getTime(), i, rawTicks);\n            };\n        }\n        return () => val => this.formatTickValue(val);\n    }\n\n     /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n        return super.getTickSize();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TimeAxis\n     */\n    getTickValues () {\n        return this.renderConfig().tickValues || this.scale().ticks();\n    }\n\n    /**\n     *\n     *\n     * @param {*} diff\n     *\n     * @memberof TimeAxis\n     */\n    minDiff (diff) {\n        this._minDiff = Math.min(this._minDiff, diff);\n        return this;\n    }\n\n    applyTickSkipping () {\n        applyTickSkipping(this);\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            setContinousAxisDomain(this, domainValue);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n\n            resetTickInterval(this, domainValue);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (...params) {\n        super.setAvailableSpace(...params);\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks;\n        let smartlabel;\n\n        const { labels, tickValues } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { labelManager } = this._dependencies;\n        const domain = this.getTickValues();\n\n        tickValues && this.axis().tickValues(tickValues);\n\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n\n        this.smartTicks(smartTicks);\n        return this;\n    }\n}\n","export const x11Colors = {\n    Pink: { hex: 'ffc0cb', rgb: '255,192,203' },\n    LightPink: { hex: 'ffb6c1', rgb: '255,182,193' },\n    HotPink: { hex: 'ff69b4', rgb: '255,105,180' },\n    DeepPink: { hex: 'ff1493', rgb: '255,20,147' },\n    PaleVioletRed: { hex: 'db7093', rgb: '219,112,147' },\n    MediumVioletRed: { hex: 'c71585', rgb: '199,21,133' },\n    LightSalmon: { hex: 'ffa07a', rgb: '255,160,122' },\n    Salmon: { hex: 'fa8072', rgb: '250,128,114' },\n    DarkSalmon: { hex: 'e9967a', rgb: '233,150,122' },\n    LightCoral: { hex: 'f08080', rgb: '240,128,128' },\n    IndianRed: { hex: 'cd5c5c', rgb: '205,92,92' },\n    Crimson: { hex: 'dc143c', rgb: '220,20,60' },\n    FireBrick: { hex: 'b22222', rgb: '178,34,34' },\n    DarkRed: { hex: '8b0000', rgb: '139,0,0' },\n    Red: { hex: 'ff0000', rgb: '255,0,0' },\n    OrangeRed: { hex: 'ff4500', rgb: '255,69,0' },\n    Tomato: { hex: 'ff6347', rgb: '255,99,71' },\n    Coral: { hex: 'ff7f50', rgb: '255,127,80' },\n    DarkOrange: { hex: 'ff8c00', rgb: '255,140,0' },\n    Orange: { hex: 'ffa500', rgb: '255,165,0' },\n    Gold: { hex: 'ffd700', rgb: '255,215,0' },\n    Yellow: { hex: 'ffff00', rgb: '255,255,0' },\n    LightYellow: { hex: 'ffffe0', rgb: '255,255,224' },\n    LemonChiffon: { hex: 'fffacd', rgb: '255,250,205' },\n    LightGoldenrodYellow: { hex: 'fafad2', rgb: '250,250,210' },\n    PapayaWhip: { hex: 'ffefd5', rgb: '255,239,213' },\n    Moccasin: { hex: 'ffe4b5', rgb: '255,228,181' },\n    PeachPuff: { hex: 'ffdab9', rgb: '255,218,185' },\n    PaleGoldenrod: { hex: 'eee8aa', rgb: '238,232,170' },\n    Khaki: { hex: 'f0e68c', rgb: '240,230,140' },\n    DarkKhaki: { hex: 'bdb76b', rgb: '189,183,107' },\n    Cornsilk: { hex: 'fff8dc', rgb: '255,248,220' },\n    BlanchedAlmond: { hex: 'ffebcd', rgb: '255,235,205' },\n    Bisque: { hex: 'ffe4c4', rgb: '255,228,196' },\n    NavajoWhite: { hex: 'ffdead', rgb: '255,222,173' },\n    Wheat: { hex: 'f5deb3', rgb: '245,222,179' },\n    BurlyWood: { hex: 'deb887', rgb: '222,184,135' },\n    Tan: { hex: 'd2b48c', rgb: '210,180,140' },\n    RosyBrown: { hex: 'bc8f8f', rgb: '188,143,143' },\n    SandyBrown: { hex: 'f4a460', rgb: '244,164,96' },\n    Goldenrod: { hex: 'daa520', rgb: '218,165,32' },\n    DarkGoldenrod: { hex: 'b8860b', rgb: '184,134,11' },\n    Peru: { hex: 'cd853f', rgb: '205,133,63' },\n    Chocolate: { hex: 'd2691e', rgb: '210,105,30' },\n    SaddleBrown: { hex: '8b4513', rgb: '139,69,19' },\n    Sienna: { hex: 'a0522d', rgb: '160,82,45' },\n    Brown: { hex: 'a52a2a', rgb: '165,42,42' },\n    Maroon: { hex: '800000', rgb: '128,0,0' },\n    DarkOliveGreen: { hex: '556b2f', rgb: '85,107,47' },\n    Olive: { hex: '808000', rgb: '128,128,0' },\n    OliveDrab: { hex: '6b8e23', rgb: '107,142,35' },\n    YellowGreen: { hex: '9acd32', rgb: '154,205,50' },\n    LimeGreen: { hex: '32cd32', rgb: '50,205,50' },\n    Lime: { hex: '00ff00', rgb: '0,255,0' },\n    LawnGreen: { hex: '7cfc00', rgb: '124,252,0' },\n    Chartreuse: { hex: '7fff00', rgb: '127,255,0' },\n    GreenYellow: { hex: 'adff2f', rgb: '173,255,47' },\n    SpringGreen: { hex: '00ff7f', rgb: '0,255,127' },\n    MediumSpringGreen: { hex: '00fa9a', rgb: '0,250,154' },\n    LightGreen: { hex: '90ee90', rgb: '144,238,144' },\n    PaleGreen: { hex: '98fb98', rgb: '152,251,152' },\n    DarkSeaGreen: { hex: '8fbc8f', rgb: '143,188,143' },\n    MediumSeaGreen: { hex: '3cb371', rgb: '60,179,113' },\n    SeaGreen: { hex: '2e8b57', rgb: '46,139,87' },\n    ForestGreen: { hex: '228b22', rgb: '34,139,34' },\n    Green: { hex: '008000', rgb: '0,128,0' },\n    DarkGreen: { hex: '006400', rgb: '0,100,0' },\n    MediumAquamarine: { hex: '66cdaa', rgb: '102,205,170' },\n    Aqua: { hex: '00ffff', rgb: '0,255,255' },\n    Cyan: { hex: '00ffff', rgb: '0,255,255' },\n    LightCyan: { hex: 'e0ffff', rgb: '224,255,255' },\n    PaleTurquoise: { hex: 'afeeee', rgb: '175,238,238' },\n    Aquamarine: { hex: '7fffd4', rgb: '127,255,212' },\n    Turquoise: { hex: '40e0d0', rgb: '64,224,208' },\n    MediumTurquoise: { hex: '48d1cc', rgb: '72,209,204' },\n    DarkTurquoise: { hex: '00ced1', rgb: '0,206,209' },\n    LightSeaGreen: { hex: '20b2aa', rgb: '32,178,170' },\n    CadetBlue: { hex: '5f9ea0', rgb: '95,158,160' },\n    DarkCyan: { hex: '008b8b', rgb: '0,139,139' },\n    Teal: { hex: '008080', rgb: '0,128,128' },\n    LightSteelBlue: { hex: 'b0c4de', rgb: '176,196,222' },\n    PowderBlue: { hex: 'b0e0e6', rgb: '176,224,230' },\n    LightBlue: { hex: 'add8e6', rgb: '173,216,230' },\n    SkyBlue: { hex: '87ceeb', rgb: '135,206,235' },\n    LightSkyBlue: { hex: '87cefa', rgb: '135,206,250' },\n    DeepSkyBlue: { hex: '00bfff', rgb: '0,191,255' },\n    DodgerBlue: { hex: '1e90ff', rgb: '30,144,255' },\n    CornflowerBlue: { hex: '6495ed', rgb: '100,149,237' },\n    SteelBlue: { hex: '4682b4', rgb: '70,130,180' },\n    RoyalBlue: { hex: '4169e1', rgb: '65,105,225' },\n    Blue: { hex: '0000ff', rgb: '0,0,255' },\n    MediumBlue: { hex: '0000cd', rgb: '0,0,205' },\n    DarkBlue: { hex: '00008b', rgb: '0,0,139' },\n    Navy: { hex: '000080', rgb: '0,0,128' },\n    MidnightBlue: { hex: '191970', rgb: '25,25,112' },\n    Lavender: { hex: 'e6e6fa', rgb: '230,230,250' },\n    Thistle: { hex: 'd8bfd8', rgb: '216,191,216' },\n    Plum: { hex: 'dda0dd', rgb: '221,160,221' },\n    Violet: { hex: 'ee82ee', rgb: '238,130,238' },\n    Orchid: { hex: 'da70d6', rgb: '218,112,214' },\n    Fuchsia: { hex: 'ff00ff', rgb: '255,0,255' },\n    Magenta: { hex: 'ff00ff', rgb: '255,0,255' },\n    MediumOrchid: { hex: 'ba55d3', rgb: '186,85,211' },\n    MediumPurple: { hex: '9370db', rgb: '147,112,219' },\n    BlueViolet: { hex: '8a2be2', rgb: '138,43,226' },\n    DarkViolet: { hex: '9400d3', rgb: '148,0,211' },\n    DarkOrchid: { hex: '9932cc', rgb: '153,50,204' },\n    DarkMagenta: { hex: '8b008b', rgb: '139,0,139' },\n    Purple: { hex: '800080', rgb: '128,0,128' },\n    Indigo: { hex: '4b0082', rgb: '75,0,130' },\n    DarkSlateBlue: { hex: '483d8b', rgb: '72,61,139' },\n    SlateBlue: { hex: '6a5acd', rgb: '106,90,205' },\n    MediumSlateBlue: { hex: '7b68ee', rgb: '123,104,238' },\n    White: { hex: 'ffffff', rgb: '255,255,255' },\n    Snow: { hex: 'fffafa', rgb: '255,250,250' },\n    Honeydew: { hex: 'f0fff0', rgb: '240,255,240' },\n    MintCream: { hex: 'f5fffa', rgb: '245,255,250' },\n    Azure: { hex: 'f0ffff', rgb: '240,255,255' },\n    AliceBlue: { hex: 'f0f8ff', rgb: '240,248,255' },\n    GhostWhite: { hex: 'f8f8ff', rgb: '248,248,255' },\n    WhiteSmoke: { hex: 'f5f5f5', rgb: '245,245,245' },\n    Seashell: { hex: 'fff5ee', rgb: '255,245,238' },\n    Beige: { hex: 'f5f5dc', rgb: '245,245,220' },\n    OldLace: { hex: 'fdf5e6', rgb: '253,245,230' },\n    FloralWhite: { hex: 'fffaf0', rgb: '255,250,240' },\n    Ivory: { hex: 'fffff0', rgb: '255,255,240' },\n    AntiqueWhite: { hex: 'faebd7', rgb: '250,235,215' },\n    Linen: { hex: 'faf0e6', rgb: '250,240,230' },\n    LavenderBlush: { hex: 'fff0f5', rgb: '255,240,245' },\n    MistyRose: { hex: 'ffe4e1', rgb: '255,228,225' },\n    Gainsboro: { hex: 'dcdcdc', rgb: '220,220,220' },\n    LightGray: { hex: 'd3d3d3', rgb: '211,211,211' },\n    Silver: { hex: 'c0c0c0', rgb: '192,192,192' },\n    DarkGrey: { hex: 'a9a9a9', rgb: '169,169,169' },\n    Grey: { hex: '808080', rgb: '128,128,128' },\n    DimGrey: { hex: '696969', rgb: '105,105,105' },\n    LightSlateGrey: { hex: '778899', rgb: '119,136,153' },\n    SlateGrey: { hex: '708090', rgb: '112,128,144' },\n    DarkSlateGrey: { hex: '2f4f4f', rgb: '47,79,79' },\n    Black: { hex: '000000', rgb: '0,0,0' }\n};\n","import {\n    LINEAR\n} from '../enums/constants';\n/**\n * Set of default colors\n */\nexport const palette = [\n    '#086bb6',\n    '#f37d45',\n    '#f5ce02',\n    '#67bda0',\n    '#c54e4e',\n    '#ae70af'\n];\n\nexport const DEFAULT_GRADIENT_COLOR = '#eaeaea';\n\nexport const DEFAULT_CONFIG = {\n    range: palette,\n    value: palette[0],\n    step: false,\n    stops: 5,\n    type: LINEAR\n};\n","import { mergeRecursive, detectColor, hexToHsv, rgbToHsv, defaultValue } from 'muze-utils';\nimport { x11Colors } from './color-maps';\nimport { palette, DEFAULT_GRADIENT_COLOR } from './defaults';\nimport { LINEAR, RGB, HEX, HSL, HSLA } from '../enums/constants';\n\nexport const getHslString = hslArr => `hsla(${hslArr[0] * 360},${hslArr[1] * 100}%,${hslArr[2] * 100}%,\\\n${hslArr[3] || 1})`;\n\nexport const convertToXllString = baseString => (baseString.split(' ') || [])\n                .reduce((x, e) => `${x}${e.charAt(0).toUpperCase()}${e.slice(1)}`, '');\n\nexport const getActualHslColor = (e, paletteColor) => {\n    let color = '';\n    if (typeof e === 'string') {\n        e = e.replace(/ /g, '');\n        e = e.toLowerCase();\n        if (detectColor(e) === HSL || detectColor(e) === HSLA) {\n            color = e.match(/(\\d+(\\.\\d+)?)/g);\n            color = [color[0] / 360, color[1] / 100, color[2] / 100, defaultValue(Number(color[3]), 1)];\n        } else if (detectColor(e) === HEX) {\n            color = hexToHsv(e);\n        } else if (detectColor(e) === RGB) {\n            const col = e.substring(e.indexOf('(') + 1, e.lastIndexOf(')')).split(/,\\s*/);\n            color = rgbToHsv(...col);\n        } else if (x11Colors[convertToXllString(e)]) {\n            color = rgbToHsv(...x11Colors[convertToXllString(e)].rgb.split(','));\n        }\n    } else if (!(e instanceof Array)) {\n        color = rgbToHsv(paletteColor);\n    } else {\n        color = e;\n    }\n    return color;\n};\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => {\n            const defCon = mergeRecursive({}, context.constructor.defaultConfig());\n            if (config.type === LINEAR) {\n                config.range = config.range || [defCon.range[0]];\n                config.range = config.range.length > 1 ? config.range : [DEFAULT_GRADIENT_COLOR, ...config.range];\n            }\n            const oldConfig = mergeRecursive(defCon, context.config());\n            const newConfig = mergeRecursive(oldConfig, config);\n\n            if (newConfig.range instanceof Array) {\n                newConfig.range = newConfig.range.map((e, i) => getActualHslColor(e, palette[i]));\n                newConfig.stops = config.stops || newConfig.range.length;\n            }\n            newConfig.value = getActualHslColor(newConfig.value, newConfig.value);\n            return newConfig;\n        }\n    },\n    domain: {},\n    scale: {},\n    uniqueValues: {}\n};\n","import { InvalidAwareTypes, getObjProp } from 'muze-utils';\n\nexport const treatNullMeasures = (domainVal, scaledVal, minDomainScaledVal) => {\n    if (domainVal instanceof InvalidAwareTypes) {\n        return minDomainScaledVal;\n    }\n    return scaledVal;\n};\n\nexport const resolveAxisConfig = (propVal, defaultVal, context) => {\n    const constructor = getObjProp(propVal, 'constructor');\n    switch (constructor) {\n    case Function:\n        return propVal(defaultVal, context);\n    case Array:\n        return propVal;\n    default:\n        return defaultVal;\n    }\n};\n","import { numberInterpolator, piecewiseInterpolator, hslInterpolator, sanitizeDomainWhenEqual } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, SEQUENTIAL, ORDINAL, QUANTILE } from '../enums/scale-type';\nimport { getHslString } from './props';\nimport { treatNullMeasures } from '../helper';\n\nconst getStops = (domain, stops) => {\n    let newStops = [];\n\n    if (stops instanceof Array) {\n        newStops = stops.slice().sort();\n        newStops = [...new Set([domain[0], ...stops, domain[1]])].sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i <= stops; i++) {\n            newStops[i] = interpolator(i / stops);\n        }\n    }\n\n    if (newStops[0] < domain[0]) {\n        newStops.shift();\n    }\n    return { domain, newStops };\n};\n\nconst rangeStops = (newStopsLength, range) => {\n    let newRange = [];\n    const maxRangeLength = Math.min(range.length, 18);\n\n    if (newStopsLength > maxRangeLength) {\n        const interpolator = piecewiseInterpolator()(hslInterpolator(), range.map(e => getHslString(e)));\n        for (let i = 0; i < newStopsLength; i++) {\n            newRange[i] = interpolator(i / (newStopsLength - 1));\n        }\n    } else {\n        newRange = range.slice(0, newStopsLength);\n    }\n    return { newRange };\n};\n\n/**\n*\n*\n* @param {*} domain\n*\n*/\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomainMeasure = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { domain, uniqueVals, scaleDomain: [0, 1], range };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain, nice: true, range };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} stops\n *\n */\nconst steppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, stops);\n    const { newRange } = rangeStops(newStops.length - 1, range);\n\n    return { uniqueVals, domain: newStops, nice: true, range: newRange };\n};\n\nconst continousSteppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(sanitizeDomainWhenEqual(domain), range.length - 1);\n    const hslRange = range.map(e => getHslString(e));\n    return { uniqueVals, domain: newStops, nice: true, range: hslRange };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst uniqueRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    return scale(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst indexedRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n\n    return treatNullMeasures(domainValue, scale(numVal), scale(0));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) => treatNullMeasures(domainValue, scale(domainValue),\n    scale(domain[0]));\n\n/**\n *\n *\n * @param {*} stops\n */\nconst strategies = () => ({\n    [`${CONTINOUS}-${CONTINOUS}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomain,\n        value: () => uniqueRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${ORDINAL}`]: {\n        scale: ORDINAL,\n        domainRange: () => normalDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}-${ORDINAL}`]: {\n        scale: LINEAR,\n        domainRange: () => continousSteppedDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${ORDINAL}`]: {\n        scale: QUANTILE,\n        domainRange: () => steppedDomain,\n        value: () => normalRange\n\n    }\n});\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} stops\n */\nexport const strategyGetter = (domainType, rangeType, schemeType) =>\n    strategies()[`${domainType}-${rangeType}-${schemeType || ''}`];\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters, rgbToHsv, defaultValue } from 'muze-utils';\nimport { createScale, getScheme, getSchemeType } from '../scale-creator';\nimport { CONTINOUS, DISCRETE, COLOR } from '../enums/constants';\nimport { strategyGetter } from './color-strategy';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { PROPS, getHslString, getActualHslColor } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ColorAxis {\n\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} config input parameters.\n    * @param {Object | undefined} params.range Type of color range.\n    * @param {string} params.name the label to show on axis.\n    * @param {string} params.type The type of scale to handle.\n    * @memberof ColorAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n        this.config(config);\n\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = (this._config.type === 'linear' && !this._config.step) ? CONTINOUS : DISCRETE;\n\n        this._schemeType = getSchemeType(this._config.range);\n\n        this._colorStrategy = this.setColorStrategy(this._domainType, this._rangeType, this._schemeType);\n        this._scale = this.createScale(this._colorStrategy);\n\n        this._id = getUniqueId();\n\n        this.updateDomain(config.domain);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return COLOR;\n    }\n\n    /**\n     *\n     *\n     * @param {*} colorStrategy\n     *\n     * @memberof ColorAxis\n     */\n    createScale (colorStrategy) {\n        const { range } = this.config();\n        if (range && typeof (range) === 'string') {\n            return getScheme(range);\n        }\n        return createScale({\n            type: colorStrategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setColorStrategy (domainType, rangeType, schemeType) {\n        return strategyGetter(domainType, rangeType, schemeType);\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getHslString (hslColorArray) {\n        return getHslString(hslColorArray);\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getColor (domainVal) {\n        return this.getHslString(this.getRawColor(domainVal));\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getRawColor (domainVal) {\n        if (this.domain() && domainVal !== undefined) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const color = this._colorStrategy.value(range)(domainVal, scale, this.domain(), this.uniqueValues());\n            if (color) {\n                if (typeof color === 'string') {\n                    const col = color.substring(color.indexOf('(') + 1, color.lastIndexOf(')')).split(/,\\s*/);\n                    return rgbToHsv(...col);\n                }\n                return [...color];\n            }\n        }\n        return [...this.config().value];\n    }\n\n    /**\n     *\n     *\n     * @param {*} [domain=[]]\n     *\n     * @memberof ColorAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const domainRangeFn = this._colorStrategy.domainRange();\n            const scaleInfo = domainRangeFn(domain, this.config().stops, range);\n\n            this.domain(scaleInfo.domain);\n            scaleInfo.range && this.scale().range(scaleInfo.range);\n            this.uniqueValues(scaleInfo.uniqueVals);\n            this.scale().domain(scaleInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            config: this.config()\n        };\n    }\n\n    transformColor (color, transformationArr) {\n        const h = color[0] * 360;\n        const s = color[1] * 100;\n        const l = color[2] * 100;\n        const a = Math.min(defaultValue(color[3], 0), 1);\n        const newH = h + transformationArr[0];\n        const newS = s + transformationArr[1];\n        const newL = l + transformationArr[2];\n        const newA = Math.min(a + transformationArr[3] || 0, 1);\n\n        return { color: `hsla(${newH},${newS}%,${newL}%,${newA})`, hsla: [newH / 360, newS / 100, newL / 100, newA] };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n\n    getHslArray (color) {\n        return getActualHslColor(color);\n    }\n\n}\n","export const DEFAULT_CONFIG = {\n    value: 36,\n    range: [36, 1000]\n};\n","import { numberInterpolator, piecewiseInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, THRESHOLD } from '../enums/scale-type';\nimport { treatNullMeasures } from '../helper';\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} intervals\n *\n */\nconst steppedDomain = (domain, intervals) => {\n    let newIntervals = [];\n    if (intervals instanceof Array) {\n        newIntervals = intervals.slice().sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i < intervals; i++) {\n            newIntervals[i] = interpolator(i / (intervals - 1));\n        }\n    }\n    if (newIntervals[0] < domain[0]) {\n        newIntervals.shift();\n    }\n    const retDomain = newIntervals;\n    return { uniqueVals: newIntervals, domain: retDomain, nice: true };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst discreteRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n    const interpolator = numberInterpolator()(...scale.range());\n    return treatNullMeasures(domainValue, interpolator(numVal), interpolator(domain[0]));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst pieceWiseRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    const fn = piecewiseInterpolator()(numberInterpolator(), [...scale.range()]);\n    return fn(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) =>\n    treatNullMeasures(domainValue, scale(domainValue), scale(domain[0]));\n\n/**\n *\n *\n * @param {*} intervals\n */\nconst strategies = {\n    [`${DISCRETE}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: indexedDomain,\n        range: pieceWiseRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: normalDomain,\n        range: normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}`]: {\n        scale: THRESHOLD,\n        domain: steppedDomain,\n        range: discreteRange\n    }\n};\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} intervals\n */\nexport const strategyGetter = (domainType, rangeType) =>\n     strategies[`${domainType}-${rangeType}`];\n","export const PROPS = {\n    config: {},\n    domain: {\n        sanitization: (context, value) => {\n            context.scale().domain(value);\n            return value;\n        }\n    },\n    range: {},\n    scale: {},\n    uniqueValues: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SIZE, CONTINOUS, DISCRETE } from '../enums/constants';\nimport { strategyGetter } from './size-strategy';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class SizeAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @param {Object} config input parameters.\n     * @memberof SizeAxis\n     */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig(), config);\n        // @todo: Will use configuration override using scale decorator\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = CONTINOUS;\n\n        this._sizeStrategy = this.setStrategy(this._domainType, this._rangeType);\n        this._scale = this.createScale(this._sizeStrategy);\n        this._range = this._config.range;\n\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setStrategy (domainType, rangeType) {\n        return strategyGetter(domainType, rangeType);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SizeAxis\n     */\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SIZE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof SizeAxis\n     */\n    getSize (domainVal = 0) {\n        let sizeVal = 1;\n        const {\n            value\n        } = this.config();\n        const scale = this.scale();\n        const domain = this.domain() || [1, 1];\n\n        if (!scale || domain[0] === domain[1]) {\n            sizeVal = value;\n        } else {\n            return this._sizeStrategy.range(domainVal, scale, this.domain(), this.uniqueValues());\n        }\n        return sizeVal;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof SizeAxis\n     */\n    updateDomain (domain) {\n        if (domain) {\n            const domainFn = this._sizeStrategy.domain;\n\n            const domainInfo = domainFn(domain, this.config().intervals);\n\n            this.domain(domainInfo.domain);\n            this.uniqueValues(domainInfo.uniqueVals);\n\n            this.scale().domain(domainInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","export const DEFAULT_CONFIG = {\n    generator: null,\n    value: 'circle',\n    range: ['circle', 'diamond', 'star', 'cross', 'square', 'wye', 'triangle']\n};\n","export const PROPS = {\n    config: {},\n    domain: {},\n    scale: {},\n    uniqueValues: {},\n    generator: {}\n};\n\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, getSymbol, generateGetterSetters, mergeRecursive, InvalidAwareTypes } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SHAPE } from '../enums/constants';\nimport { shapeGenerator } from './helper';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ShapeAxis {\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} params input parameters.\n    * @param {Object | undefined} params.range Type of color scheme.\n    * @memberof ShapeAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(this._config, config);\n\n        this._scale = createScale({\n            type: 'ordinal',\n            range: this._config.range\n        });\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SHAPE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} value\n     *\n     * @memberof ShapeAxis\n     */\n    getShape (value) {\n        if (!this.scale() || !this.domain() || !value || value instanceof InvalidAwareTypes) {\n            return this.config().value;\n        }\n\n        if (this._generatedShapes) {\n            return this._generatedShapes[value];\n        }\n\n        const shapeType = this.scale()(value);\n        if (shapeType === 'string') {\n            return getSymbol(shapeType);\n        }\n\n        return shapeType;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof ShapeAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            this.uniqueValues(domain);\n            this.domain(domain);\n            this.scale().domain(domain);\n\n            if (this.config().generator) {\n                this._generatedShapes = shapeGenerator(domain, this.config().generator);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.config().range,\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","/**\n *\n *\n * @param {*} domain\n * @param {*} generatorFn\n *\n */\nexport const shapeGenerator = (domain, generatorFn) => {\n    const generatedShapes = {};\n    domain.forEach((value) => {\n        generatedShapes[value] = generatorFn(value);\n    });\n    return generatedShapes;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => mergeRecursive(context.config(), config),\n        preset: (context, config) => {\n            const { range, domain } = config;\n            range && context.range(range);\n            domain && context.domain(domain);\n        }\n    },\n    domain: {},\n    range: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, Symbols, mergeRecursive, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_ANGLE_DOMAIN } from '../enums/constants';\nimport { PROPS } from './props';\nimport { resolveAxisConfig } from '../helper';\n\nconst { pie } = Symbols;\n\nconst createAngleValues = (context) => {\n    const angleData = context._angleFn(context._domain);\n    angleData.forEach((v) => {\n        v.startAngle -= Math.PI / 2;\n        v.endAngle -= Math.PI / 2;\n    });\n    context._angleValues = angleData.reduce((values, d) => {\n        const key = d.data;\n        !values[key] && (values[key] = []);\n        values[key].push(d);\n        return values;\n    }, {});\n};\n\n/**\n* This class is used to instantiate a AngleAxis.\n* @class AngleAxis\n*/\nexport default class AngleAxis {\n\n    /**\n     * Creates an instance of AngleAxis.\n     * @param {Object} config input parameters.\n     * @memberof AngleAxis\n     */\n    constructor (config = {}) {\n        this._id = getUniqueId();\n        generateGetterSetters(this, PROPS);\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n        this.config(config);\n        this._range = [0, 360];\n        this._angleFn = pie()\n                .value(d => (typeof d === 'string' ? 1 : d))\n                .sortValues(null);\n        this._angleValues = {};\n    }\n\n    static defaultConfig () {\n        return {};\n    }\n\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    getScaleValue (domainVal) {\n        return this._angleValues[domainVal];\n    }\n\n    padAngle (angle) {\n        this._angleFn = this._angleFn.padAngle(angle);\n    }\n\n    domain (...domainVal) {\n        if (domainVal.length) {\n            const { domain: customDomain } = this.config();\n            const domain = domainVal[0].length ? domainVal[0] : DEFAULT_ANGLE_DOMAIN;\n            this._domain = resolveAxisConfig(customDomain, domain, this);\n            createAngleValues(this);\n            return this;\n        }\n        return this._domain;\n    }\n\n    range (...range) {\n        if (range.length) {\n            const { range: customRange } = this.config();\n            this._range = resolveAxisConfig(customRange, range[0], this);\n            const domain = this.domain();\n            const [startAngle, endAngle] = this._range;\n            this._angleFn\n                    .startAngle((startAngle / 180) * Math.PI)\n                    .endAngle(Math.PI * endAngle / 180);\n            if (domain && domain.length) {\n                createAngleValues(this);\n            }\n            return this;\n        }\n        return this._range;\n    }\n}\n","/**\n * This file exports constants that are used as enums in the\n *  crosstab group implementation.\n */\n/**\n * Width of the crosstab.\n */\nexport const X = 'x';\n/**\n * Width of the crosstab.\n */\nexport const Y = 'y';\n/**\n * Width of the crosstab.\n */\nexport const WIDTH = 'width';\n\n/**\n * Height of the crosstab.\n */\nexport const HEIGHT = 'height';\n\n/**\n * Field referring to object storing measurement configuration.\n */\nexport const MEASUREMENT = 'measurement';\n\n/**\n * Field referring to object storing configuration properties.\n */\nexport const CONFIG = 'config';\n\n/**\n * Width of visual unit in crosstab.\n */\nexport const MIN_UNIT_WIDTH = 'minUnitWidth';\n\n/**\n * Height of visual unit.\n */\nexport const MIN_UNIT_HEIGHT = 'minUnitHeight';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSIONS = 'dimensions';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURES = 'measures';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSION = 'dimension';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURE = 'measure';\n\n/**\n * Flag to specify if model should be pivoted.\n */\nexport const PIVOT = 'pivot';\n\n/**\n * Flag to specify format\n */\nexport const FORMAT = 'format';\n\n/**\n * Mount point where the variable will be hosted\n */\nexport const MOUNT = 'mount';\n\n/**\n * Data update flag\n */\nexport const HAS_DATA_UPDATED = 'hasDataUpdated';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROWS = 'rows';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMNS = 'columns';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COL = 'col';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROW = 'row';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMN = 'column';\n\n/**\n * Field referring to object storing color field\n */\nexport const COLOR = 'color';\n\n/**\n * Field referring to object storing shape field\n */\nexport const SHAPE = 'shape';\n\n/**\n * Field referring to object storing size field\n */\nexport const SIZE = 'size';\n\n/**\n * Field referring to object storing detail field\n */\nexport const DETAIL = 'detail';\n\n/**\n * Field referring to object storing set of layers\n */\nexport const LAYERS = 'layers';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const TRANSFORM = 'transform';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const ORDINAL = 'ordinal';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const LINEAR = 'linear';\n/**\n * Field referring to object storing the transforms\n */\nexport const LEFT = 'left';\n/**\n * Field referring to object storing the transforms\n */\nexport const RIGHT = 'right';\n/**\n * Field referring to object storing the transforms\n */\nexport const TOP = 'top';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTTOM = 'bottom';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const RETINAL = 'retinal';\n/**\n * Field referring to object storing the transforms\n */\nexport const CELL = 'cell';\n/**\n * Field referring to object storing the transforms\n */\nexport const X_AXES = 'xAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const Y_AXES = 'yAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const ENTRY_CELLS = 'entryCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const INITIALIZED = 'initialized';\n/**\n * Field referring to object storing the transforms\n */\nexport const EXIT_CELLS = 'exitCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const AXIS = 'axis';\n/**\n * Field referring to object storing the transforms\n */\nexport const UNIT = 'unit';\n/**\n * Field referring to object storing the transforms\n */\nexport const UPDATED = 'updated';\n/**\n * Field referring to object storing the transforms\n */\nexport const BEFORE_UPDATE = 'beforeupdate';\n/**\n * Field referring to object storing the transforms\n */\nexport const VALUE_MATRIX = 'valueMatrix';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET_HEADERS = 'facet-headers';\n/**\n * Field referring to object storing the transforms\n */\nexport const RADIUS = 'radius';\n/**\n * Field referring to object storing the transforms\n */\nexport const ANGLE = 'angle';\n\nexport const ANGLE0 = 'angle0';\n/**\n * Field referring to object storing the transforms\n */\nexport const ARC = 'arc';\n/**\n * Field referring to object storing the transforms\n */\nexport const CATEGORICAL = 'categorical';\n/**\n * Field referring to object storing the transforms\n */\nexport const TEMPORAL = 'temporal';\n/**\n * Field referring to object storing the transforms\n */\nexport const BAR = 'bar';\n/**\n * Field referring to object storing the transforms\n */\nexport const LINE = 'line';\n/**\n * Field referring to object storing the transforms\n */\nexport const POINT = 'point';\n/**\n * Field referring to object storing the transforms\n */\nexport const PRIMARY = 'Primary';\n/**\n * Field referring to object storing the transforms\n */\nexport const SECONDARY = 'Secondary';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTH = 'both';\n/**\n * Field referring to object storing the transforms\n */\nexport const INTERACTION = 'interaction';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_LINES = 'gridLines';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_BANDS = 'gridBands';\n/**\n * Field referring to object storing the transforms\n */\nexport const HEADER = 'header';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET = 'facet';\n/**\n * Ordering type\n */\nexport const ASCENDING = 'asc';\n/**\n * Ordering type\n */\nexport const DESCENDING = 'desc';\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, mergeRecursive, generateGetterSetters, sanitizeDomainWhenEqual } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { LINEAR } from '../../../visual-group/src/enums/constants';\nimport { PROPS } from './props';\nimport { resolveAxisConfig } from '../helper';\n\nconst adjustDomain = (context) => {\n    const minOuterRadius = context.config().minOuterRadius;\n    const domain = context._domain;\n    if (context._range.length) {\n        const scale = context._scale;\n        const value = scale.invert(minOuterRadius) - scale.invert(0);\n        context._domain = [domain[0] - value, domain[1]];\n        scale.domain(context._domain);\n    }\n};\n\n/**\n* This class is used to instantiate a RadiusAxis.\n* @class RadiusAxis\n*/\nexport default class RadiusAxis {\n\n    /**\n     * Creates an instance of RadiusAxis.\n     * @param {Object} config input parameters.\n     * @memberof RadiusAxis\n     */\n    constructor (config = {}) {\n        this._id = getUniqueId();\n        generateGetterSetters(this, PROPS);\n        this._range = [];\n        this._radiusFactor = 1;\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n        this.config(config);\n        this._scale = this.createScale({\n            scale: LINEAR\n        });\n    }\n\n    static defaultConfig () {\n        return {\n            padding: [0, 1],\n            minOuterRadius: 10\n        };\n    }\n\n    config (...params) {\n        if (params.length) {\n            const config = mergeRecursive(this.config(), params[0]);\n            this._config = config;\n            return this;\n        }\n        return this._config;\n    }\n\n    createScale (strategy) {\n        return createScale({\n            type: strategy.scale,\n            range: this.range()\n        });\n    }\n\n    domain (...domainVal) {\n        if (domainVal.length) {\n            const { domain: customDomain } = this.config();\n            let domain = resolveAxisConfig(customDomain, domainVal[0], this);\n            domain = sanitizeDomainWhenEqual(domain);\n            this._scale.domain(domain);\n            this._domain = domain;\n            adjustDomain(this);\n        }\n        return this._domain;\n    }\n\n    getInnerRadius (domainVal) {\n        if (domainVal === undefined) {\n            return this.range()[0];\n        }\n        return this._scale(domainVal);\n    }\n\n    getOuterRadius (domainVal) {\n        if (domainVal === undefined) {\n            return this.range()[1];\n        }\n        const radius = this._scale(domainVal) * this._radiusFactor;\n        return radius;\n    }\n\n    range (...range) {\n        if (range.length) {\n            const { padding, range: customRange } = this.config();\n            const sanitizedRange = range[0].map((v, i) => v + (i ? -padding[i] : padding[i]));\n            const rangeVal = resolveAxisConfig(customRange, sanitizedRange, this);\n            this._range = rangeVal;\n            this._scale.range(rangeVal);\n            adjustDomain(this);\n        }\n        return this._range;\n    }\n\n    setRadiusFactor (val) {\n        this._radiusFactor = val;\n        return this;\n    }\n}\n","import * as ScaleType from './enums/scale-type';\n\nconst DATA_TYPES = {\n    DIMENSION: 'dimension',\n    CATEGORICAL: 'categorical',\n    MEASURE: 'measure',\n    TEMPORAL: 'temporal'\n};\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    [DATA_TYPES.DIMENSION]: ScaleType.BAND,\n    [DATA_TYPES.MEASURE]: ScaleType.LINEAR,\n    [DATA_TYPES.TEMPORAL]: ScaleType.TIME\n};\n\n","import { nestCollection, InvalidAwareTypes } from 'muze-utils';\n\n/**\n * Create multiple datasets from a single dataset by grouping the data using\n * a dimensional field.\n * @param {Array} schema Name and type of fields are stored in schema\n * @param {Array} data Data array\n * @param {Object} config Configuration object\n * @return {Array} Grouped data array\n */\nexport default (schema, data, config) => {\n    const groupBy = config.groupBy instanceof Array ? config.groupBy : [config.groupBy];\n    const groupByIndices = groupBy.map(fieldName => schema.findIndex(d => d.name === fieldName));\n\n    if (groupByIndices.find(d => d === -1) !== undefined) {\n        throw new Error(`Groupby field ${groupBy} not found in schema`);\n    }\n\n    const groupedData = nestCollection({\n        keys: groupByIndices,\n        data\n    });\n\n    groupedData.forEach((d) => {\n        const key = d.key;\n        if (InvalidAwareTypes.isInvalid(key)) {\n            d.key = InvalidAwareTypes.getInvalidType(key);\n        }\n    });\n    return groupedData;\n};\n","/**\n * @module Transform\n * This file exports a function that is used to implement\n * the identity transform\n */\n /* eslint no-unused-vars: 0 */\n /**\n  * This function accepts data and returns the data unchanged.\n  * @param {Object} schema The schema.\n  * @param {Array} data The data array.\n  * @param {Object} config The config object.\n  * @return {Array} The unchanged data.\n  */\n function identityTransform (schema, data, config) {\n     return data;\n }\n\n export default identityTransform;\n","/**\n * @module Transform\n * This file exports the transform factory.\n */\nimport * as TransformType from '../enums/transform-type';\nimport identity from '../identity-transform';\nimport group from '../group-transform';\nimport stack from '../stack-transform';\n\n/* istanbul ignore next */\nconst transformMap = {\n    [TransformType.IDENTITY]: identity,\n    [TransformType.GROUP]: group,\n    [TransformType.STACK]: stack\n};\n\n/**\n * This function is used to retirn a transform associated\n * with the given type.\n *\n * @param {string} type The type of the transform.\n * @return {Function} The transform function.\n */\nfunction transformFactory (type) {\n    const transform = transformMap[type];\n    if (typeof transform !== 'function') {\n        throw new Error('Invalid transform type supplied.');\n    }\n    return transform;\n}\n\nexport default transformFactory;\n","/**\n * @module Transform\n * This module exports constants that are used to reference transforms in\n * a consistent manner throughout the project.\n */\n/* eslint one-var: 0 */\n export const IDENTITY = 'identity';\n export const GROUP = 'group';\n export const STACK = 'stack';\n export const FRACTURE = 'fracture';\n","import { stack } from 'muze-utils';\n\nimport group from '../group-transform';\n/*\n    Normalize the data to a form which can be given to d3 stack for stacking the data\n    ['Product', 'Sales', 'Region'],\n    0 ['A', 2000, 'North'],\n    1 ['A', 3000, 'South'],\n    2 ['B', 3000, 'South'],\n    3 ['B', 2000, 'North'],\n    4 ['C', 3000, 'South'],\n    5 ['C', 2000, 'North']\n            |\n            |\n    ['Product', 'North', 'South'],\n    ['A', 2000, 3000],\n    ['B', 2000, 3000],\n    ['C', 2000, 3000]\n*/\n// eslint-disable-next-line require-jsdoc\nconst normalizeData = (data, schema, valueField, uniqueField, groupBy) => {\n    const groupedData = group(schema, data, {\n        groupBy: uniqueField\n    });\n    const uniqueFieldIndex = schema.findIndex(d => d.name === uniqueField);\n    const valueFieldIndex = schema.findIndex(d => d.name === valueField);\n    const seriesKeyIndex = schema.findIndex(d => d.name === groupBy);\n    const seriesKeys = data.map(d => d[seriesKeyIndex]).filter((item, pos, arr) => arr.indexOf(item) === pos).sort();\n    const fieldNames = schema.reduce((acc, obj, i) => {\n        acc[i] = obj.name;\n        return acc;\n    }, {});\n    const dataArr = groupedData.map((arr) => {\n        const tuples = {};\n        const rowObj = arr.values.reduce((acc, row) => {\n            acc = row.reduce((obj, value, i) => {\n                if (i === seriesKeyIndex) {\n                    obj[value] = row[valueFieldIndex];\n                    tuples[value] = row;\n                } else if (i !== valueFieldIndex) {\n                    obj[fieldNames[i]] = value;\n                }\n                return obj;\n            }, acc);\n            return acc;\n        }, {});\n        rowObj._tuple = tuples;\n            // Set missing values field to zero value\n        seriesKeys.forEach((seriesKey) => {\n            if (rowObj[seriesKey] === undefined) {\n                rowObj[seriesKey] = 0;\n                const newArr = new Array(arr.values[0].length);\n                newArr[uniqueFieldIndex] = arr.key;\n                newArr[seriesKeyIndex] = seriesKey;\n                rowObj._tuple[seriesKey] = newArr;\n            }\n        });\n        return rowObj;\n    });\n\n    return {\n        data: dataArr,\n        keys: seriesKeys\n    };\n};\n/**\n * Generate a stacked representation of data\n * @param {Array} schema schema Array\n * @param {Array} data data array\n * @param {Object} config Configuration object\n * @return {Array} stacked data\n */\nexport default (schema, data, config) => {\n    const uniqueField = config.uniqueField;\n    const valueField = config.value;\n    const groupBy = config.groupBy;\n    const sort = config.sort || 'descending';\n    const normalizedData = normalizeData(data, schema, valueField, uniqueField, groupBy);\n    const keys = normalizedData.keys;\n    const map = {};\n    const orderBy = config.orderBy;\n    const orderIndex = schema.findIndex(d => d.name === orderBy);\n    const groupByIndex = schema.findIndex(d => d.name === groupBy);\n    if (orderIndex !== -1) {\n        keys.forEach((key) => {\n            const name = data.find(d => d[groupByIndex] === key);\n            map[key] = name[orderIndex];\n        });\n        normalizedData.keys.sort((a, b) => map[a].localeCompare(map[b]));\n    }\n\n    const stackData = stack({\n        keys: normalizedData.keys,\n        offset: config.offset || 'diverging',\n        order: sort,\n        data: normalizedData.data\n    });\n    stackData.forEach((seriesData) => {\n        seriesData.forEach((dataObj) => {\n            dataObj.data = dataObj.data._tuple[seriesData.key];\n        });\n    });\n    return stackData;\n};\n\n","import {\n    FieldType,\n    getDomainFromData,\n    setStyles,\n    easeFns,\n    selectElement,\n    DimensionSubtype,\n    retrieveNearestGroupByReducers,\n    getObjProp,\n    COORD_TYPES,\n    CommonProps,\n    defaultValue\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { transformFactory } from '@chartshq/transform';\nimport { IDENTITY, STACK, GROUP, COLOR, SHAPE, SIZE, ENCODING, AGG_FN_SUM, ASCENDING, TEXT } from '../enums/constants';\n\nconst BAND = ScaleType.BAND;\nconst { POLAR, CARTESIAN } = COORD_TYPES;\n\nconst transformColor = (colorAxis, datum, styleType, intensity) => {\n    const meta = datum.meta;\n    const stateColor = defaultValue(meta.stateColor[styleType], meta.originalColor[styleType]);\n    const colorInfo = colorAxis.transformColor(stateColor, intensity);\n\n    meta.stateColor[styleType] = colorInfo.hsla;\n    return colorInfo;\n};\n\nexport const applyInteractionStyle = (context, selectionSet, interactionStyles, config) => {\n    const elements = context.getPlotElementsFromSet(selectionSet);\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const apply = config.apply;\n    const interactionType = config.interactionType;\n    interactionStyles.forEach((style) => {\n        const styleType = style.type;\n        elements.forEach((elem) => {\n            elem.style(styleType, ((d) => {\n                const { colorTransform, stateColor, originalColor } = d.meta;\n                colorTransform[interactionType] = colorTransform[interactionType] || {};\n                if (apply && !colorTransform[interactionType][styleType]) {\n                    // fade selections\n                    colorTransform[interactionType][styleType] = style.intensity;\n                    const color = transformColor(colorAxis, d, styleType, style.intensity).color;\n                    return color;\n                }\n                if (!apply && colorTransform[interactionType][styleType]) {\n                    // unfade selections\n                    colorTransform[interactionType][styleType] = null;\n                    return transformColor(colorAxis, d, styleType, style.intensity.map(e => -e)).color;\n                }\n                const [h, s, l, a] = stateColor[styleType] ? stateColor[styleType] : originalColor[styleType];\n                return `hsla(${h * 360},${s * 100}%,${l * 100}%, ${a})`;\n            }));\n        });\n    });\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const fadeUnfadeSelection = (context, selectionSet, hasFaded, interaction) => {\n    const interactionConfig = { interaction, apply: hasFaded };\n    applyInteractionStyle(context, selectionSet, 'fade', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const focusUnfocusSelection = (context, selectionSet, isFocussed, interaction) => {\n    const interactionConfig = { interaction, apply: isFocussed };\n    applyInteractionStyle(context, selectionSet, 'focus', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} axes\n *\n */\nexport const getAxesScales = (axes) => {\n    const [xAxis, yAxis] = [ENCODING.X, ENCODING.Y].map(e => axes[e]);\n    const [xScale, yScale] = [xAxis, yAxis].map(e => e && e.scale());\n    return {\n        xAxis,\n        yAxis,\n        xScale,\n        yScale\n    };\n};\n\nexport const encodingFieldInfRetriever = {\n    [POLAR]: (encoding, fieldsConfig) => {\n        const encodingInf = {};\n        [ENCODING.RADIUS, ENCODING.RADIUS0, ENCODING.ANGLE, ENCODING.ANGLE0, COLOR, SHAPE, SIZE, TEXT]\n            .forEach((e) => {\n                const field = getObjProp(encoding, e, 'field');\n                encodingInf[`${e}Field`] = field;\n                encodingInf[`${e}FieldIndex`] = getObjProp(fieldsConfig, field, 'index');\n            });\n        return encodingInf;\n    },\n    [CARTESIAN]: (encoding, fieldsConfig) => {\n        const encodingInf = {};\n        [ENCODING.X, ENCODING.Y, ENCODING.X0, ENCODING.Y0, COLOR, SHAPE, SIZE, TEXT].forEach((e) => {\n            const field = getObjProp(encoding, e, 'field');\n            encodingInf[`${e}Field`] = field;\n            encodingInf[`${e}FieldIndex`] = getObjProp(fieldsConfig, field, 'index');\n            encodingInf[`${e}FieldType`] = getObjProp(fieldsConfig, field, 'def', 'type');\n            encodingInf[`${e}FieldSubType`] = getObjProp(fieldsConfig, field, 'def', 'subtype');\n        });\n\n        return encodingInf;\n    }\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} config\n * @param {*} transformType\n *\n */\nexport const transformData = (dataModel, config, transformType, encodingFieldInf) => {\n    const data = dataModel.getData({ withUid: true });\n    const schema = data.schema;\n    const transform = config.transform;\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = encodingFieldInf;\n    const uniqueField = xFieldType === FieldType.MEASURE ? yField : xField;\n\n    return transformFactory(transformType)(schema, data.data, {\n        groupBy: transform.groupBy,\n        uniqueField,\n        sort: transform.sort || 'none',\n        offset: transform.offset,\n        orderBy: transform.orderBy,\n        value: yFieldType === FieldType.MEASURE ? yField : xField\n    }, data.uids);\n};\n\nexport const getIndividualClassName = (d, i, data, context) => {\n    const className = context.config().individualClassName;\n    let classNameStr = '';\n    if (className instanceof Function) {\n        classNameStr = className(d, i, data, context);\n    }\n    return classNameStr;\n};\n\nconst dataNormalizers = {\n    [POLAR]: (transformedData, encodingFieldInf, fieldsConfig) => {\n        const {\n            radiusFieldIndex,\n            angleFieldIndex,\n            radius0FieldIndex,\n            angle0FieldIndex\n        } = encodingFieldInf;\n        const fieldsLen = Object.keys(fieldsConfig).length;\n\n        /**\n         * Returns normalized data from transformed data. It recursively traverses through\n         * the transformed data if there it is nested.\n         */\n        return transformedData.map(data => data.map((d) => {\n            const pointObj = {\n                radius: d[radiusFieldIndex],\n                angle: angleFieldIndex !== undefined ? d[angleFieldIndex] : 1,\n                radius0: d[radius0FieldIndex],\n                angle0: d[angle0FieldIndex]\n            };\n            [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                pointObj[enc] = d[encodingFieldInf[`${enc}FieldIndex`]];\n            });\n            pointObj.source = d;\n            pointObj.rowId = d[fieldsLen];\n            return pointObj;\n        })).filter(d => d.length);\n    },\n    [CARTESIAN]: (transformedData, encodingFieldInf, fieldsConfig, transformType) => {\n        const {\n            xFieldType,\n            xFieldIndex,\n            yFieldIndex,\n            x0FieldIndex,\n            y0FieldIndex\n        } = encodingFieldInf;\n        const fieldsLen = Object.keys(fieldsConfig).length;\n        /**\n         * Returns normalized data from transformed data. It recursively traverses through\n         * the transformed data if there it is nested.\n         */\n        return transformedData.map((data) => {\n            const values = transformType === GROUP ? data.values : data;\n            return values.map((d) => {\n                let pointObj = {};\n                let tuple;\n                if (transformType === STACK) {\n                    tuple = d.data || [];\n                    let y;\n                    let y0;\n                    let x;\n                    let x0;\n                    if (d[1] >= d[0]) {\n                        y = x0 = d[1];\n                        x = y0 = d[0];\n                    } else {\n                        y = x0 = d[0];\n                        x = y0 = d[1];\n                    }\n\n                    pointObj = xFieldType === FieldType.MEASURE ? {\n                        x,\n                        x0,\n                        y: tuple[yFieldIndex],\n                        y0: tuple[yFieldIndex]\n                    } : {\n                        x: tuple[xFieldIndex],\n                        x0: tuple[xFieldIndex],\n                        y,\n                        y0\n                    };\n                    pointObj.source = tuple;\n                    pointObj.rowId = tuple[fieldsLen];\n                    [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                        pointObj[enc] = tuple[encodingFieldInf[`${enc}FieldIndex`]];\n                    });\n                } else {\n                    pointObj = {\n                        x: d[xFieldIndex],\n                        y: d[yFieldIndex],\n                        x0: d[x0FieldIndex],\n                        y0: d[y0FieldIndex]\n                    };\n                    pointObj.source = d;\n                    pointObj.rowId = d[fieldsLen];\n                    [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                        pointObj[enc] = d[encodingFieldInf[`${enc}FieldIndex`]];\n                    });\n                }\n                return pointObj;\n            });\n        }).filter(d => d.length);\n    }\n};\n/*\n * This method resolves the x, y, x0 and y0 values from the transformed data.\n * It also checks the type of transformed data for example, if it is a stacked data\n * then it fetches the y and y0 values from the stacked data.\n * @param {Array.<Array>} transformedData transformed data\n * @param {Object} fieldsConfig field definitions\n * @param {string} transformType type of transformed data - stack, group or identity.\n * @return {Array.<Object>} Normalized data\n*/\nexport const getNormalizedData = (transformedData, context) => {\n    const transformType = context.transformType();\n    const transformedDataArr = transformType === IDENTITY ? [transformedData] : transformedData;\n    const encodingFieldInf = context.encodingFieldsInf();\n    const fieldsConfig = context.data().getFieldsConfig();\n    return dataNormalizers[context.coord()](transformedDataArr, encodingFieldInf, fieldsConfig, transformType);\n};\n\nexport const domainCalculator = {\n    [POLAR]: (data, layerInst) => {\n        const config = layerInst.config();\n        const { sort } = config;\n        let angleValues = data[0];\n        const radius0Field = getObjProp(config.encoding.radius0, 'field');\n        if (sort) {\n            angleValues = angleValues.sort((a, b) => (sort === ASCENDING ? a.radius - b.radius : b.radius - a.radius));\n        }\n        const radiusDomain = getDomainFromData(data, [ENCODING.RADIUS, radius0Field ?\n            ENCODING.RADIUS0 : ENCODING.RADIUS]);\n        return {\n            radius: radiusDomain,\n            angle: angleValues.map(d => d.angle),\n            angle0: angleValues.map(d => d.angle0)\n        };\n    },\n    [CARTESIAN]: (data, layerInst) => {\n        const transformType = layerInst.transformType();\n        const encodingFieldInf = layerInst.encodingFieldsInf();\n        const {\n            xFieldSubType,\n            yFieldSubType,\n            xField,\n            yField,\n            x0Field,\n            y0Field\n        } = encodingFieldInf;\n        const domains = {};\n        const yEnc = ENCODING.Y;\n        const xEnc = ENCODING.X;\n        if (xField) {\n            domains.x = getDomainFromData(data, x0Field || transformType === STACK ? [xEnc, ENCODING.X0] : [xEnc, xEnc],\n                xFieldSubType);\n        }\n        if (yField) {\n            domains.y = getDomainFromData(data, y0Field || transformType === STACK ? [ENCODING.Y0, ENCODING.Y] :\n                [yEnc, yEnc], yFieldSubType);\n        }\n\n        return domains;\n    }\n};\n\nexport const attachDataToVoronoi = (voronoi, points) => {\n    voronoi.data([].concat(...points).filter(d => d.rowId !== undefined).map((d) => {\n        const point = d.update;\n        return {\n            x: point.x,\n            y: point.y,\n            data: d\n        };\n    }));\n};\n\n/**\n *\n *\n * @param {*} target\n * @param {*} styles\n * @param {*} remove\n */\nexport const updateStyle = (target, styles, remove) => {\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            target.style(key, remove ? null : styles[key]);\n        }\n    }\n};\n\n/**\n *\n *\n * @param {*} mount\n * @param {*} context\n */\nexport const animateGroup = (mount, context) => {\n    let groupTransition;\n    let update;\n    const { transition, groupAnimateStyle } = context;\n    const { duration, effect, disabled } = transition;\n    if (groupAnimateStyle) {\n        setStyles(mount.node(), groupAnimateStyle.enter);\n        update = groupAnimateStyle.update;\n        if (!disabled) {\n            groupTransition = mount.transition()\n                .ease(easeFns[effect])\n                .duration(duration)\n                .on('end', function () {\n                    updateStyle(selectElement(this), update, true);\n                });\n        } else {\n            groupTransition = mount;\n        }\n        updateStyle(groupTransition, update);\n    }\n};\n\nexport const positionPoints = (context, points) => {\n    const positioner = context.encodingTransform();\n    if (positioner) {\n        return positioner(points, context, { smartLabel: context._dependencies.smartLabel });\n    }\n    return points;\n};\n\n/**\n  * Gets the width of each group. It gets the width from axis if it is available for\n  * example when the scale is nominal else it calculates the width from the\n  * range of the axis and number of data points.\n  *\n  * @param {SimpleAxis} axis instance of axis\n  * @param {number} minDiff Minimum difference between data points\n  * @return {number} width of each bar\n  * @private\n*/\nexport const getGroupSpan = (axis, minDiff) => {\n    let groupSpan;\n    const width = axis.getUnitWidth();\n    const scale = axis.scale();\n    const range = scale.range();\n    const domain = scale.domain();\n    !width ? groupSpan = (Math.abs(range[1] - range[0]) / Math.abs(domain[1] - domain[0])) * minDiff :\n        (groupSpan = width);\n\n    return groupSpan;\n};\n\nexport const getPlotMeasurement = (context, dimensionalValues) => {\n    const fieldInfo = context.encodingFieldsInf();\n    const axes = context.axes();\n    const transformType = context.transformType();\n    const config = context.config();\n    const bandScale = context._bandScale;\n\n    return ['x', 'y'].map((type) => {\n        let span = 0;\n        let groupSpan = 0;\n        let padding = 0;\n        let offsetValues = [];\n        if (fieldInfo[`${type}FieldType`] === FieldType.DIMENSION) {\n            let actualGroupWidth;\n            const isTemporal = fieldInfo[`${type}FieldSubType`] === DimensionSubtype.TEMPORAL;\n            const timeDiff = isTemporal ? context.dataProps().timeDiffs[type] : 0;\n            const axis = axes[type];\n            const pad = config[`pad${type.toUpperCase()}`];\n            const innerPadding = config.innerPadding;\n            const keys = dimensionalValues;\n            const scale = axis.scale();\n            groupSpan = getGroupSpan(axis, timeDiff);\n            const isAxisBandScale = axis.constructor.type() === BAND;\n            const axisPadding = axis.config().padding;\n            // If it is a grouped bar then the width of each bar in a grouping is retrieved from\n            // a band scale. The band scale will have range equal to width of one group of bars and\n            // the domain is set to series keys.\n            if (transformType === 'group') {\n                const groupPadding = isAxisBandScale ? 0 : axisPadding * groupSpan / 2;\n                bandScale.range([groupPadding, groupSpan - groupPadding]).domain(keys).paddingInner(innerPadding);\n                span = bandScale.bandwidth();\n                actualGroupWidth = groupSpan - (isAxisBandScale ? 0 : axisPadding * groupSpan);\n                offsetValues = keys.map(key => bandScale(key) - (isAxisBandScale ? 0 : (groupSpan / 2)));\n            } else if (pad !== undefined) {\n                let offset;\n                if (isAxisBandScale) {\n                    const step = scale.step();\n                    offset = scale.padding() * step;\n                    span = scale.bandwidth() + offset;\n                } else {\n                    span = groupSpan;\n                }\n                offsetValues = keys.map(() => (isAxisBandScale ? -(offset / 2) : -(span / 2)));\n            } else {\n                padding = isAxisBandScale ? 0 : axisPadding * groupSpan;\n                span = groupSpan - padding;\n                actualGroupWidth = span;\n                offsetValues = keys.map(() => (isAxisBandScale ? 0 : -(span / 2)));\n            }\n\n            groupSpan = actualGroupWidth;\n            padding = isAxisBandScale ? axisPadding * axis.scale().step() : axisPadding * groupSpan;\n        }\n\n        return {\n            span,\n            offsetValues,\n            groupSpan,\n            padding\n        };\n    });\n};\n\nexport const renderLayer = (context) => {\n    const mount = context.mount();\n    if (mount) {\n        context.render(mount);\n        context.dependencies().throwback.commit(CommonProps.ON_LAYER_DRAW, true, context.metaInf().parentNamespace);\n    }\n};\n\nconst transformResolverPredicates = (encodingFieldInf, context, groupByField) => {\n    const fieldsConfig = context.data().getFieldsConfig();\n    const { xField, yField, xFieldType, yFieldType } = encodingFieldInf;\n    const dimensionField = ['xField', 'yField'].find(type =>\n        encodingFieldInf[`${type}Type`] === FieldType.DIMENSION);\n\n    return [\n        !xField,\n        !yField,\n        !groupByField,\n        getObjProp(fieldsConfig[groupByField], 'def', 'type') === FieldType.MEASURE,\n        xFieldType === FieldType.DIMENSION && yFieldType === FieldType.DIMENSION,\n        dimensionField && encodingFieldInf[dimensionField] === groupByField\n    ];\n};\n\nexport const resolveInvalidTransformType = (context) => {\n    const encodingFieldInf = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n\n    if (transformResolverPredicates(encodingFieldInf, context, groupByField).some(value => value)) {\n        return IDENTITY;\n    }\n    return null;\n};\n\nexport const getValidTransform = context => resolveInvalidTransformType(context) || context.config().transform.type;\n\nexport const getValidTransformForAggFn = (context) => {\n    const resolvedInvalidTransformType = resolveInvalidTransformType(context);\n    if (resolvedInvalidTransformType) {\n        return resolvedInvalidTransformType;\n    }\n\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n    const isCustomTransformTypeProvided = !!getObjProp(context._customConfig, 'transform', 'type');\n    let transformType = context.config().transform.type;\n\n    if (!isCustomTransformTypeProvided && groupByField && xFieldType !== yFieldType) {\n        const measureField = xFieldType === FieldType.MEASURE ? xField : yField;\n        const { [measureField]: aggFn } = retrieveNearestGroupByReducers(context.data(), measureField);\n        transformType = aggFn === AGG_FN_SUM ? STACK : GROUP;\n    }\n\n    return transformType;\n};\n\nexport const getMarkId = (source, schema) => source.filter((val, i) => schema[i] &&\n    schema[i].type === FieldType.DIMENSION).join();\n\nexport const resolveEncodingValues = (data, i, dataArr, layerInst) => {\n    const transformedValues = {};\n    const values = data.values;\n    const encoding = layerInst.config().encoding;\n    for (const key in values) {\n        const value = getObjProp(encoding[key], 'value');\n        if (value instanceof Function) {\n            transformedValues[key] = value(values, i, dataArr, layerInst);\n        } else {\n            transformedValues[key] = values[key];\n        }\n    }\n    return transformedValues;\n};\n\nexport const getColorMetaInf = (colorInf, colorAxis) => ({\n    originalColor: Object.keys(colorInf).reduce((acc, key) => {\n        if (colorInf[key]) {\n            acc[key] = colorAxis.getHslArray(colorInf[key]);\n        }\n        return acc;\n    }, {}),\n    stateColor: {},\n    colorTransform: {}\n});\n\nconst getCoordValue = (radius, trig, angle, offset) => radius * Math[trig](angle) + offset;\n\nconst coordValueGetter = (radius, angle, xOffset, yOffset) => ({\n    x: getCoordValue(radius, 'cos', angle, xOffset),\n    y: getCoordValue(radius, 'sin', angle, yOffset)\n});\n\nexport const toCartesianCoordinates = (points, measurement, rangePlot = false) => {\n    const xOffset = measurement.width / 2;\n    const yOffset = measurement.height / 2;\n    for (let i = 0, len = points.length; i < len; i++) {\n        const point = points[i];\n        const { angle, radius, radius0, angle0 } = point.update;\n        point.update = coordValueGetter(radius, angle, xOffset, yOffset);\n        if (rangePlot) {\n            const update = point.update = coordValueGetter(radius0, angle0, xOffset, yOffset);\n            const { x: x0, y: y0 } = coordValueGetter(radius, angle, xOffset, yOffset);\n            update.x0 = x0;\n            update.y0 = y0;\n        }\n    }\n    return points;\n};\n\nexport const sortData = (data, axes) => {\n    const { x: xAxis, y: yAxis } = axes;\n    const axisArr = [xAxis, yAxis];\n    for (let i = 0, len = axisArr.length; i < len; i++) {\n        const axis = axisArr[i];\n        if (axis.constructor.type() === BAND) {\n            const key = i ? 'y' : 'x';\n            const dom = axis.domain();\n            const indices = dom.reduce((acc, v, idx) => {\n                acc[v] = idx;\n                return acc;\n            }, {});\n            data.sort((a, b) => indices[a[key]] - indices[b[key]]);\n            break;\n        }\n    }\n    return data;\n};\n","import * as PROPS from '../enums/props';\n\nexport const localOptions = {\n    [PROPS.DATA]: {\n        value: null\n    }\n};\n","import { STATE_NAMESPACES } from 'muze-utils';\nimport * as PROPS from '../enums/props';\nimport { encodingFieldInfRetriever } from '../helpers';\n\nexport const listenerMap = [\n    {\n        props: [`${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${PROPS.DATA}`],\n        type: 'registerImmediateListener',\n        listener: (context, [, data]) => {\n            const config = context.config();\n            if (data && config) {\n                if (context._cacheEnabled) {\n                    context._cachedData.push(data);\n                } else {\n                    context._cachedData = [data];\n                }\n                const encodingValue = config.encoding;\n                if (encodingValue) {\n                    const fieldsConfig = data.getFieldsConfig();\n                    const encodingFieldsInf = encodingFieldInfRetriever[context.coord()](encodingValue, fieldsConfig);\n                    context.encodingFieldsInf(encodingFieldsInf);\n                    context.resolveTransformType();\n                    context._transformedData = context.getTransformedData(data, config,\n                        context.transformType(), encodingFieldsInf);\n                    context._normalizedData = context.getNormalizedData(context._transformedData, fieldsConfig);\n                    if (config.calculateDomain !== false) {\n                        const domain = context.calculateDomainFromData(context._normalizedData,\n                            context.encodingFieldsInf(), context.data().getFieldsConfig());\n                        context.domain(domain);\n                    }\n                }\n            }\n        },\n        namespace: context => context.metaInf().namespace\n    }\n];\n","import {\n    getUniqueId,\n    mergeRecursive,\n    FieldType,\n    selectElement,\n    ReservedFields,\n    DataModel,\n    clone,\n    generateGetterSetters,\n    STATE_NAMESPACES,\n    COORD_TYPES,\n    transactor,\n    defaultValue,\n    getObjProp\n} from 'muze-utils';\nimport { SimpleLayer } from '../simple-layer';\nimport * as PROPS from '../enums/props';\nimport { props } from './props';\nimport {\n    transformData,\n    getNormalizedData,\n    applyInteractionStyle,\n    getValidTransform,\n    domainCalculator,\n    renderLayer\n} from '../helpers';\nimport { localOptions } from './local-options';\nimport { listenerMap } from './listener-map';\n\nconst layerNs = [STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE, STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE];\nconst groupNs = STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE;\n\n/**\n * An abstract class which gives definition of common layer functionality like\n * - transforming data for various modes. Supported modes: identity, group and stack.\n * - calculating data domain\n * - linking dependent layers\n * - merging policy of configuration\n * - interaction sideffect helpers\n * - retrieving dom elements from data using id\n * - retrieving the physical dimensions of marks\n * - disposing layer\n *\n * Every layer has to extend base layer and give concrete definition.\n * This layer does not have any default visual. A new layer has to define the logic of `render` for rendering the\n * visuals\n *\n * @public\n * @class\n * @module BaseLayer\n */\nexport default class BaseLayer extends SimpleLayer {\n\n    /**\n     * Creates a layer using a configuration and data.\n     *\n     * @public\n     * @constructor\n     * @param {DataModel} data Instance of DataModel to be used. This DataModel instance serves as the data for a layer.\n     * @param {Object} axes Axes instances to be used for rendering the layer. Axes are used for mapping data from\n     *      value to px.\n     * @param {SimpleAxis} axes.x X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {SimpleAxis} axes.y X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {ColorAxis} axes.color Axis for coloring a layer using color interpolators\n     * @param {ShapeAxis} axes.shape Axis for providing a shape\n     * @param {SizeAxis} axes.size Axis for determining size of a mark using size interpolator\n     * @param {LayerConfig} config Configuration of the layer\n     * @param {Object} dependencies Dependencies of the layer\n     * @param {SmartLabel} dependencies.smartLabel Smartlabel singleton instance\n     */\n    constructor (data, axes, config, dependencies = {}) {\n        super();\n\n        generateGetterSetters(this, props);\n        this.axes(axes);\n        this.alias(this.constructor.formalName() + getUniqueId());\n        this.dependencies(dependencies);\n        this._points = [];\n        this._cachedData = [];\n        this._id = getUniqueId();\n        this._measurement = {};\n        this._animationDonePromises = [];\n        this._graphicElems = {};\n        this._customConfig = null;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: null\n            },\n            Object.keys(localOptions).reduce((acc, v) => {\n                acc[v] = localOptions[v].value;\n                return acc;\n            }, {})\n        ];\n    }\n\n    static getListeners () {\n        return {\n            store: [...listenerMap, {\n                type: 'registerChangeListener',\n                props: [`${layerNs[1]}.${PROPS.DATA}`,\n                    ...['x', 'y', 'radius'].map(type => `${groupNs}.domain.${type}`)],\n                listener: (context) => {\n                    renderLayer(context);\n                },\n                subNamespace: (context) => {\n                    const { unitRowIndex, unitColIndex, namespace } = context.metaInf();\n                    return {\n                        [`${layerNs[1]}.${PROPS.DATA}`]: namespace,\n                        [`${groupNs}.domain.x`]: `${unitColIndex}0`,\n                        [`${groupNs}.domain.y`]: `${unitRowIndex}0`,\n                        [`${groupNs}.domain.radius`]: `${unitRowIndex}-${unitColIndex}`\n                    };\n                }\n            }],\n            throwback: []\n        };\n    }\n\n    static getQualifiedStateProps () {\n        const layerState = BaseLayer.getState();\n        return layerState.map((state, i) => Object.keys(state).map(prop => `${layerNs[i]}.${prop}`));\n    }\n\n    store (...params) {\n        if (params.length) {\n            const store = this._store = params[0];\n            const { namespace } = this.metaInf();\n            store.addSubNamespace(namespace, BaseLayer.formalName(), this);\n\n            transactor(this, localOptions, store, {\n                subNamespace: namespace,\n                namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}`\n            });\n            return this;\n        }\n        return this._store;\n    }\n\n    domain (...dom) {\n        const prop = `${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}`;\n        const store = this.store();\n        if (dom.length) {\n            const { parentNamespace, namespace } = this.metaInf();\n            const domain = defaultValue(store.get(prop, parentNamespace), {});\n            domain[namespace] = dom[0];\n            this.store().commit(prop, domain, parentNamespace);\n            return this;\n        }\n        return this.store().get(prop, this.metaInf().namespace);\n    }\n\n    /**\n     * Creates a layer instance\n     * @return {BaseLayer} Instance of a layer\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Default configuration of the layer. This configuration gets merged to the user passed configuration using a\n     * plolicy. Base layer only returns part of configuraion, any layer overridding base layer should return its own\n     * configuration.\n     *\n     * @public\n     * @static\n     *\n     * @return {Object} Default configuration\n     */\n    static defaultConfig () {\n        return {\n            transform: {\n                type: 'identity'\n            }\n        };\n    }\n\n    /**\n     * Policy defines how user config gets merged to default config. The default policy here does a deep copy\n     * operation.\n     * Any policy which does more than deep copying should define the policy as a static member.\n     *\n     * @static\n     * @public\n     *\n     * @param {LayerConfig} conf Configuration with which the user config will be merged\n     * @param {LayerConfig} userConf Configuration given by the user\n     *\n     * @return {LayerConfig} Merged layer configuration\n     */\n    static defaultPolicy (conf, userConf) {\n        return mergeRecursive(conf, userConf);\n    }\n\n    /**\n     * Determines a name for a layer. This name of the layer is used in the input data to refer to this layer.\n     * ```\n     *  .layers([\n     *      mark: 'bar',\n     *      encoding: { ... }\n     *  ])\n     * ```\n     *\n     * @static\n     * @public\n     *\n     * @return {string} name of layer\n     */\n    static formalName () {\n        return 'base';\n    }\n\n    encodingFieldsInf (...fieldsInf) {\n        if (fieldsInf.length) {\n            this._encodingFieldsInf = fieldsInf[0];\n            return this;\n        }\n        return this._encodingFieldsInf;\n    }\n\n    encodingTransform (...encodingTransform) {\n        if (encodingTransform.length) {\n            this._encodingTransform = encodingTransform[0];\n            return this;\n        }\n        return this._encodingTransform;\n    }\n\n    /**\n     * Provides a alias for a layer. Like it's possible to have same layer (like bar) multiple times, but among multiple\n     * layers of same type if one layer has to be referred, alias is used. If no alias is given then `formalName` is set\n     * as the alias name.\n     *\n     *\n     * If used as setter\n     * @param  {string} alias Name of the alias\n     * @return {BaseLayer} Instance of current base layer\n     *\n     * If used as getter\n     * @return {string} Alias of the current layer\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            this._alias = params[0];\n            return this;\n        }\n        return this._alias || this.constructor.formalName();\n    }\n\n    dependencies (...params) {\n        if (params.length) {\n            this._dependencies = params[0];\n            return this;\n        }\n        return this._dependencies;\n    }\n\n    enableCaching () {\n        this._cacheEnabled = true;\n        return this;\n    }\n\n    clearCaching () {\n        this._cacheEnabled = false;\n        return this.data(this._cachedData[0]);\n    }\n\n    /**\n     * Serialize the schema. Merge config is used for serialization.\n     *\n     * @public\n     *\n     * @return {LayerConfig} Serialized schema\n     */\n    serialize () {\n        return this.config();\n    }\n\n    /**\n     * Returns the unique identifier of this layer. Id is auto generated during the creation proceess of a schema.\n     *\n     * @public\n     *\n     * @return {string} id of the layer\n     */\n    id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the transformed data based on given transform type.\n     * It first gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of DataModel\n     * @param {Object} config Configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     */\n    getTransformedData (dataModel, config, transformType, encodingFieldsInf) {\n        return transformData(dataModel, config, transformType, encodingFieldsInf);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a categorical field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @param {Object} fieldsConfig Configuration of fields\n     * @return {Array} Domain values array.\n     */\n    calculateDomainFromData (data) {\n        let domains = {};\n        const isEmpty = this.data().isEmpty();\n\n        if (!isEmpty) {\n            domains = domainCalculator[this.coord()](data, this);\n        }\n        return domains;\n    }\n\n    static shouldDrawAnchors () {\n        return false;\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getDataDomain (encodingType) {\n        const { parentNamespace, namespace } = this.metaInf();\n        const domains = getObjProp(this.store()\n            .get(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}`, parentNamespace), namespace);\n        return encodingType !== undefined ? domains[encodingType] || [] : domains;\n    }\n\n    /**\n     * Normalizes the transformed data and returns it.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getNormalizedData (transformedData) {\n        return getNormalizedData(transformedData, this);\n    }\n\n    /**\n     * Gets the nearest point closest to the given x and y coordinate. If no nearest point is found, then it returns\n     * null.\n     *\n     * @public\n     *\n     * @param {number} x X Coordinate.\n     * @param {number} y Y Coordinate.\n     *\n     * @return {Object} Information of the nearest point.\n     * ```\n     *      {\n     *          // id property contains the field names and their corresponding values in a 2d array. This is the data\n     *          // associated with the nearest point.\n     *          id: // Example data: [['Origin'], ['USA']],\n     *          dimensions: // Physical dimensions of the point.\n     *          layerId: // Id of the layer instance.\n     *      }\n     * ```\n     */\n    getNearestPoint () {\n        return null;\n    }\n\n    applyInteractionStyle (interactionType, selectionSet, apply, styles) {\n        const interactionConfig = this.config().interaction || {};\n\n        let interactionStyles = interactionConfig[interactionType];\n        interactionStyles = styles || interactionStyles;\n        if (interactionStyles) {\n            applyInteractionStyle(this, selectionSet, interactionStyles, {\n                apply,\n                interactionType\n            });\n        }\n    }\n\n    disableUpdate () {\n        this._updateLock = true;\n        return this;\n    }\n\n    enableUpdate () {\n        this._updateLock = false;\n        return this;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransform(this);\n    }\n\n    transformType () {\n        return this._transformType;\n    }\n\n    /**\n     * Renders the layer\n     * @return {BaseLayer} Instance of the layer.\n     */\n    render () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BaseLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Disposes the entire layer.\n     *\n     * @return {BaseLayer} Instance of layer.\n     */\n    remove () {\n        const { namespace, parentNamespace } = this.metaInf();\n        const store = this.store();\n        store.removeSubNamespace(namespace, BaseLayer.formalName());\n        const layersDomain = store.get(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.domain`);\n        const unitDom = layersDomain[parentNamespace];\n        unitDom && (delete unitDom[namespace]);\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     * Stores point in an object with key as the categorical value or temporal value\n     *\n     * @param {string} key categorical value or temporal value\n     * @param {Object} data Information of the data point\n     * @return {BarLayer} Instance of bar layer\n     */\n    cachePoint (key, data) {\n        if (key === null) {\n            return this;\n        }\n        const pointMap = this._pointMap;\n        !pointMap[key] && (pointMap[key] = []);\n        pointMap[key].push(data);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} dataProps\n     *\n     * @memberof BaseLayer\n     */\n    dataProps (...dataProps) {\n        if (dataProps.length) {\n            this._dataProps = dataProps[0];\n            return this;\n        }\n        return this._dataProps;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} id\n     *\n     * @memberof BaseLayer\n     */\n    getIdentifiersFromData (data) {\n        const schema = this.data().getSchema();\n        const fieldsConfig = this.data().getFieldsConfig();\n        const identifiers = [[], []];\n        const {\n                xFieldType,\n                yFieldType,\n                xField,\n                yField\n            } = this.encodingFieldsInf();\n\n        const [xMeasure, yMeasure] = [xFieldType, yFieldType].map(type => type === FieldType.MEASURE);\n        schema.forEach((d, i) => {\n            const name = d.name;\n            if (fieldsConfig[name].def.type === FieldType.DIMENSION) {\n                identifiers[0].push(name);\n                identifiers[1].push(data[i]);\n            }\n        });\n\n        if (xMeasure && yMeasure) {\n            const xMeasureIndex = fieldsConfig[xField].index;\n            const yMeasureIndex = fieldsConfig[yField].index;\n            identifiers[0].push(...[xField, yField]);\n            identifiers[1].push(...[data[xMeasureIndex], data[yMeasureIndex]]);\n        }\n        return identifiers;\n    }\n\n    hasPlotSpan () {\n        return false;\n    }\n\n    getPlotSpan () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    getPlotPadding () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    /**\n     * Returns the information of the marks corresponding to the supplied identifiers. Identifiers are a set of field\n     * names and their corresponding values in an array. It can also be an instance of datamodel.\n     *\n     * For example,\n     * ```\n     *  const identifiers = [\n     *      ['Origin', 'Cylinders'],\n     *      ['USA', '8']\n     *  ];\n     *  const points = barLayer.getPointsFromIdentifiers(identifiers);\n     * ```\n     * @public\n     * @param {Array|DataModel} identifiers Identifiers of the marks.\n     * @param {Object} config Optional configuration which describes how to get the information.\n     * @param {boolean} config.getAllAttrs If true, then returns all the information of the points, else returns only\n     * the positions of the points.\n     * @param {boolean} config.getBBox If true, then returns the bounding box of all the marks.\n     *\n     * @return {Array} Array of points contains\n     */\n    getPointsFromIdentifiers (identifiers, config = {}) {\n        const getAllAttrs = config.getAllAttrs;\n        const getBBox = config.getBBox;\n        if (!this.data()) {\n            return [];\n        }\n        let fieldNames;\n        let values;\n        if (identifiers instanceof DataModel) {\n            const dataObj = identifiers.getData();\n            fieldNames = dataObj.schema.map(d => d.name);\n            values = dataObj.data;\n        } else {\n            fieldNames = identifiers[0];\n            values = identifiers.slice(1, identifiers.length);\n        }\n\n        const points = this._points;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPoints = [].concat(...points).filter((point) => {\n            const { source, rowId } = point;\n\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === source[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === rowId) !== -1;\n                } return true;\n            });\n        });\n        return getAllAttrs ? filteredPoints : filteredPoints.map((d) => {\n            const obj = clone(d);\n            if (getBBox) {\n                const update = obj.update || obj;\n                if (obj.size !== undefined) {\n                    const sizeVal = Math.sqrt(obj.size / Math.PI) * 2;\n                    update.width = sizeVal;\n                    update.height = sizeVal;\n                    update.x -= sizeVal / 2;\n                    update.y -= sizeVal / 2;\n                } else {\n                    if (update.width === undefined) {\n                        update.width = 2;\n                    }\n                    if (update.height === undefined) {\n                        update.height = 2;\n                    }\n                }\n            }\n\n            return obj.update || obj;\n        }).sort((a, b) => a.y - b.y);\n    }\n\n    getTransformedDataFromIdentifiers (identifiers) {\n        const { data: identifierData, schema: identifierSchema } = identifiers.getData();\n        const normalizedData = this._normalizedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            yField,\n            xField,\n            yFieldType,\n            xFieldType\n        } = this.encodingFieldsInf();\n        let measureIndex;\n        let enc;\n        if (xFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[xField].index;\n            enc = 'x';\n        } else if (yFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[yField].index;\n            enc = 'y';\n        }\n\n        const transformedData = [];\n        normalizedData.forEach((dataArr) => {\n            dataArr.forEach((dataObj) => {\n                const tupleArr = dataObj.source;\n                const exist = identifierSchema.every((obj, i) =>\n                    identifierData.findIndex(d => tupleArr[fieldsConfig[obj.name].index] === d[i]) !== -1);\n                if (exist) {\n                    const transformedVal = dataObj[enc];\n                    const row = dataObj.source;\n                    const tuple = {};\n                    for (const key in fieldsConfig) {\n                        const index = fieldsConfig[key].index;\n                        tuple[key] = row[index];\n                        if (index === measureIndex) {\n                            tuple[key] = transformedVal;\n                        }\n                    }\n                    transformedData.push(tuple);\n                }\n            });\n        });\n\n        return [transformedData, this.data().getSchema()];\n    }\n\n    /**\n     * Returns the dom elements associated with the supplied set of row ids.\n     * Each element in the layer is mapped with a row of the datamodel. When given an array of row ids, it returns all\n     * the elements which is mapped with those row ids.\n     *\n     * @public\n     * @param {Array} set Array of row ids\n     *\n     * @return {Selection} D3 Selection of dom elements.\n     */\n    getPlotElementsFromSet (set) {\n        const graphicElems = this._graphicElems;\n        const elems = [];\n        for (let i = 0, len = set.length; i < len; i++) {\n            const elem = graphicElems[set[i]];\n            if (elem) {\n                elems.push(elem);\n            }\n        }\n        return elems;\n    }\n\n    /**\n     * Notifies when all animations/transitions of the layer are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n\n    getRenderProps () {\n        if (this.coord() === COORD_TYPES.POLAR) {\n            return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.radius`];\n        }\n        const { unitRowIndex: rowIndex, unitColIndex: colIndex } = this.metaInf();\n        return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${rowIndex}0`,\n            `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${colIndex}0`];\n    }\n}\n","import {\n    selectElement,\n    makeElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\nimport { updateStyle } from '../../helpers';\n\nconst line = Symbols.line;\n\nconst filterFn = (d) => {\n    const { update } = d;\n    return update.y !== null && update.x !== null;\n};\n\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nexport const drawLine = (context) => {\n    let filteredPoints;\n    const { layer, container, points, interpolate, connectNullData, className, style, transition } = context;\n    const mount = selectElement(container).attr('class', className);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const linepath = line()\n                .curve(curveInterpolatorFn)\n                .x(d => d.update.x)\n                .y(d => d.update.y)\n                .defined(filterFn);\n\n    filteredPoints = points;\n    if (connectNullData) {\n        filteredPoints = points.filter(filterFn);\n    }\n\n    updateStyle(mount, style);\n    let element = makeElement(mount, 'path', points.length ? [points[0].className] : []);\n    element.attr('class', d => d);\n    if (!transition.disabled) {\n        element = element.transition()\n        .duration(transition.duration)\n        .on('end', layer.registerAnimationDoneHook());\n    }\n    element.attr('d', linepath(filteredPoints))\n                    .style('fill-opacity', 0);\n    return element;\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-line',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: 'group'\n    },\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    nearestPointThreshold: 20,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n\n","import {\n    Voronoi,\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    FieldType,\n    InvalidAwareTypes,\n    getObjProp\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawLine } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    animateGroup,\n    positionPoints,\n    getIndividualClassName,\n    getColorMetaInf,\n    resolveEncodingValues,\n    sortData\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to render straight or smoothed line paths. The mark type of this layer is ```line```.\n *\n * @public\n *\n * @class\n * @module LineLayer\n * @extends BaseLayer\n */\nexport default class LineLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of LineLayer.\n     * @param {*} args\n     * @memberof LineLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n    }\n\n    static formalName () {\n        return 'line';\n    }\n\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Default configuration of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField && !transform.groupBy) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     * Returns the draw method for line\n     * @return {Function} Draw method of line layer\n     */\n    getDrawFn () {\n        return drawLine;\n    }\n\n    static shouldDrawAnchors () {\n        return true;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @param {number} seriesIndex index of series\n     * @return {Array} Array of points\n     */\n    translatePoints (data) {\n        let points = [];\n        const axes = this.axes();\n        const xAxis = axes.x;\n        const yAxis = axes.y;\n        const colorAxis = axes.color;\n        const { xFieldType, yFieldType } = this.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        sortData(data, axes);\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y) + yAxis.getUnitWidth() / 2;\n            const color = colorAxis.getColor(d.color);\n\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    color\n                },\n                data: d\n            }, i, data, this);\n\n            const point = {\n                enter: {},\n                update: {\n                    x: d.x instanceof InvalidAwareTypes ? null : resolvedEncodings.x,\n                    y: d.y instanceof InvalidAwareTypes ? null : resolvedEncodings.y\n                },\n                style: {\n                    stroke: resolvedEncodings.color,\n                    'fill-opacity': 0\n                },\n                rowId: d.rowId,\n                source: d.source,\n                meta: getColorMetaInf({\n                    stroke: resolvedEncodings.color\n                }, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n\n        points = points.filter((point) => {\n            const { update } = point;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n\n    /**\n     * Renders the line plot\n     * @param {SVGElement} container svg element\n     * @return {LineLayer} instance of line layer\n     */\n    render (container) {\n        let points;\n        let seriesClassName;\n        let style;\n\n        const config = this.config();\n        const {\n            encoding,\n            interpolate,\n            className,\n            defClassName,\n            transition\n        } = config;\n        const normalizedData = this._normalizedData;\n        const transformedData = this._transformedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const keys = transformedData.map(d => d.key);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n        const colorField = encoding.color.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n        this._points = [];\n        this._pointMap = {};\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        makeElement(container, 'g', normalizedData, null, {\n            enter: (group) => {\n                animateGroup(group, {\n                    transition,\n                    groupAnimateStyle: {\n                        enter: {\n                            'stroke-opacity': 0,\n                            'fill-opacity': this.getPathStyle()['fill-opacity']\n                        },\n                        update: {\n                            'stroke-opacity': encoding.strokeOpacity.value\n                        }\n                    }\n                });\n            },\n            update: (group, dataArr, i) => {\n                points = this.translatePoints(dataArr);\n                this._points.push(points);\n                seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n\n                let color;\n                const colorValFn = encoding.color.value;\n                const colorVal = points.find(d => d.source[colorFieldIndex] !== null &&\n                        d.source[colorFieldIndex] !== undefined);\n\n                if (colorValFn) {\n                    color = colorValFn(dataArr, i, normalizedData);\n                } else {\n                    color = axes.color.getColor(colorVal && colorVal.source[colorFieldIndex]);\n                }\n\n                style = this.getPathStyle(color);\n                this.getDrawFn()({\n                    layer: this,\n                    container: group.node(),\n                    interpolate,\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: style || {},\n                    connectNullData: config.connectNullData\n                });\n            }\n        }, d => d[0].source[colorFieldIndex] || d[0].rowId);\n\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            stroke: color,\n            'fill-opacity': '0'\n        };\n    }\n\n    /**\n     * Gets the nearest point closest to the given position\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point information\n     */\n    getNearestPoint (x, y, config) {\n        let searchRadius = config.searchRadius;\n        const data = this.data();\n\n        if (!data || (data && data.isEmpty())) {\n            return null;\n        }\n\n        searchRadius = searchRadius !== undefined ? searchRadius : this.config().nearestPointThreshold;\n        const point = this._voronoi.find(x, y, searchRadius);\n        const dimensions = getObjProp(point, 'data', 'data', 'update');\n\n        if (point) {\n            const { source, rowId } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(source, rowId);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: 2,\n                    height: 2\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import {\n    easeFns,\n    selectElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\n\nconst area = Symbols.area;\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nconst /* istanbul ignore next */ drawArea = (params) => {\n    let filteredPoints;\n    const { layer, container, points, style, transition, className, connectNullData, interpolate } = params;\n\n    const { effect: easeEffect, duration } = transition;\n    const mount = selectElement(container);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const selection = mount.selectAll('path').data(points.length ? [points[0].className] : []);\n    const [enterAreaPath, updateAreaPath] = ['enter', 'update'].map(e => area().curve(curveInterpolatorFn)\n                    .x(d => d[e].x)\n                    .y1(d => d[e].y)\n                    .y0(d => d[e].y0)\n                    .defined(d => d[e].y !== null\n            ));\n\n    filteredPoints = points;\n    mount.attr('class', className);\n    if (connectNullData) {\n        filteredPoints = points.filter(d => d.update.y !== null);\n    }\n    const selectionEnter = selection.enter().append('path').attr('d', enterAreaPath(filteredPoints));\n    selection.merge(selectionEnter).transition().ease(easeFns[easeEffect])\n                    .duration(duration)\n                    .on('end', layer.registerAnimationDoneHook())\n                    .attr('d', updateAreaPath(filteredPoints))\n                    .each(function (d) {\n                        const element = selectElement(this);\n                        element.attr('class', d);\n                        Object.keys(style).forEach(key => element.style(key, style[key]));\n                    });\n};\n\nexport default drawArea;\n","import { FieldType, InvalidAwareTypes, getObjProp } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { LineLayer } from '../line';\nimport drawArea from './renderer';\nimport './styles.scss';\nimport { STACK, ENCODING } from '../../enums/constants';\nimport {\n    getAxesScales,\n    positionPoints,\n    getIndividualClassName,\n    getValidTransformForAggFn,\n    getColorMetaInf,\n    resolveEncodingValues,\n    sortData\n} from '../../helpers';\n\n/**\n * Area layer renders a closed path. The mark type of this layer is ```area```. This layer can be used\n * to create stacked or multi-series areas and vertical range area plots by using the encoding properties.\n *\n * To create this layer using layer configuration from canvas,\n * ```\n *      canvas.layers([{\n *          mark: 'area',\n *          transform: {\n *              type: 'stack' // Produces a stacked area.\n *          }\n *      }]);\n * ```\n *\n * @public\n *\n * @class\n * @module AreaLayer\n * @extends LineLayer\n */\nexport default class AreaLayer extends LineLayer {\n    /** oation of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof AreaLayer\n     */\n    static formalName () {\n        return 'area';\n    }\n\n    /**\n     * Calculates the domain from data. It calls its parent class's method which is line layer\n     * to get the domain and overwrites the domain according to its need.\n     * @return {Array} Domain values\n     */\n    calculateDomainFromData (data, encodingFieldsInf, fieldsConfig) {\n        const domains = super.calculateDomainFromData(data, fieldsConfig);\n        [ENCODING.X, ENCODING.Y].forEach((type) => {\n            const { [`${type}FieldType`]: fieldType } = encodingFieldsInf;\n            if (fieldType === FieldType.MEASURE && getObjProp(domains[type], 'length')) {\n                domains[type][0] = Math.min(domains[type][0], 0);\n                domains[type][1] = Math.max(0, domains[type][1]);\n            }\n        });\n        return domains;\n    }\n\n    /**\n     * Returns the drawing method of this layer\n     * @return {Function} Draw method\n     */\n    getDrawFn () {\n        return drawArea;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @return {Array} Array of points\n     */\n    translatePoints (data) {\n        let points = [];\n        const transformType = this.transformType();\n        const axes = this.axes();\n        const colorAxis = axes.color;\n        const config = this.config();\n        const fieldsConfig = this.data().getFieldsConfig();\n        const { xField, yField, y0Field } = this.encodingFieldsInf();\n        const {\n            xAxis,\n            yAxis\n       } = getAxesScales(axes);\n        const classNameFn = config.individualClassName;\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n        const minYVal = yAxis.domain()[0];\n        const basePos = minYVal < 0 ? yAxis.getScaleValue(0) : yAxis.getScaleValue(minYVal);\n        sortData(data, axes);\n        points = data.map((d, i) => {\n            let color;\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y);\n            const y0Px = (y0Field || transformType === STACK) ? yAxis.getScaleValue(d.y0) : basePos;\n            color = colorAxis.getColor(d.color);\n            const invalidY = d.y instanceof InvalidAwareTypes;\n            const invalidY0 = d.y0 instanceof InvalidAwareTypes;\n            const resolvedValues = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    y0: y0Px,\n                    color\n                },\n                data: d\n            }, i, data, this);\n            color = resolvedValues.color;\n            const style = {\n                fill: color\n            };\n\n            const point = {\n                enter: {\n                    x: xPx,\n                    y: invalidY ? null : basePos,\n                    y0: invalidY0 ? null : basePos\n                },\n                update: {\n                    x: xPx,\n                    y: invalidY ? null : resolvedValues.y,\n                    y0: invalidY0 ? null : resolvedValues.y0\n                },\n                source: d.source,\n                rowId: d.rowId,\n                className: classNameFn ? classNameFn(d, i, data, this) : '',\n                style,\n                meta: getColorMetaInf(style, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        points = points.filter((point) => {\n            const update = point.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            fill: color\n        };\n    }\n}\n\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-arc',\n    padding: { top: 1, bottom: 1, left: 1, right: 1 },\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    height: 100,\n    width: 100,\n    sort: '',\n    colors: ['#F44336', 'blue', 'green', 'yellow', 'orange', 'purple'],\n    transform: {\n        type: 'identity'\n    },\n    encoding: {\n        'stroke-width': {\n            value: '2px'\n        },\n        'stroke-linejoin': {\n            value: 'round'\n        },\n        angle: {\n            value: '1'\n        },\n        radius: {\n            value: '1'\n        },\n        opacity: {\n            value: '1'\n        },\n        color: {\n            value: '1'\n        },\n        shape: {\n            value: '1'\n        },\n        size: {\n            value: '1'\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 500\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-arc-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-arc-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-arc-selected`\n        }\n    }\n};\n\n","import {\n    makeElement,\n    selectElement,\n    getQualifiedClassName,\n    isSimpleObject,\n    Symbols,\n    FieldType,\n    ReservedFields\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { BaseLayer } from '../../base-layer';\nimport { getIndividualClassName, resolveEncodingValues, getColorMetaInf } from '../../helpers';\nimport { tweenPie, tweenExitPie, getPreviousPoint } from './arc-helper';\nimport './styles.scss';\n\nconst arc = Symbols.arc;\n\n/**\n * Arc Layer creates a plot with polar coordinates.\n *\n * @public\n *\n * @class\n * @module ArcLayer\n * @extends BaseLayer\n */\nexport default class ArcLayer extends BaseLayer {\n\n    constructor (data, axes, config, dependencies) {\n        super(data, axes, config, dependencies);\n        this._prevPieData = {};\n    }\n\n    /**\n     * returns the default configuration of the layer\n     *\n     * @static\n     * @return {Object} Default configuration for arc layer\n     * @memberof ArcLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'arc';\n    }\n\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     *\n     *\n     * @param {Object} x\n     * @param {Object} y\n     * @return {}\n     * @memberof ArcLayer\n     */\n    getNearestPoint (x, y, config = {}) {\n        const dataPoint = selectElement(config.event.target).data()[0];\n        if (isSimpleObject(dataPoint)) {\n            const { source, rowId } = dataPoint;\n            return {\n                id: this.getIdentifiersFromData(source, rowId),\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n\n    translatePoints (data) {\n        const { angle, color: colorAxis, radius: radiusAxis } = this.axes();\n        const pieIndex = {};\n        const prevData = this._points[0] || [];\n        const points = [];\n        const angleV = {};\n\n        this._prevPieData = {};\n        prevData.forEach((e, index) => {\n            this._prevPieData[e.rowId] = [e, index];\n            pieIndex[e.index] = e;\n        });\n        data.forEach((d, i) => {\n            const angles = angle.getScaleValue(d.angle);\n            if (angles) {\n                !angleV[d.angle] && (angleV[d.angle] = 0);\n                const { startAngle, endAngle } = angles[angleV[d.angle]++];\n                const uid = d.rowId;\n                const resolvedEncodings = resolveEncodingValues({\n                    values: {\n                        radius: radiusAxis.getOuterRadius(d.radius),\n                        radius0: radiusAxis.getInnerRadius(d.radius0),\n                        color: colorAxis.getColor(d.color),\n                        angle0: startAngle,\n                        angle: endAngle,\n                        startAngle,\n                        endAngle,\n                        startAngle0: startAngle,\n                        endAngle0: endAngle\n                    },\n                    data: d\n                }, i, data, this);\n                const color = resolvedEncodings.color;\n                points.push({\n                    source: d.source,\n                    index: i,\n                    enter: {},\n                    update: {\n                        angle0: resolvedEncodings.angle0,\n                        angle: resolvedEncodings.angle,\n                        radius0: resolvedEncodings.radius0,\n                        radius: resolvedEncodings.radius\n                    },\n                    color,\n                    meta: getColorMetaInf({\n                        fill: color\n                    }, colorAxis),\n                    rowId: uid,\n                    _previousInfo: this._prevPieData[uid] ? this._prevPieData[uid][0] :\n                        getPreviousPoint(pieIndex, i, this)\n                });\n            }\n        });\n        return points;\n    }\n\n    /**\n     *\n     *\n     * @param {Object} container\n     * @return {}\n     * @memberof ArcLayer\n     */\n    render (container) {\n        const measurement = this.measurement();\n        const {\n            classPrefix,\n            defClassName,\n            cornerRadius,\n            padAngle,\n            padRadius,\n            transition\n       } = this.config();\n        const qualClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        // This returns a function that generates the arc path based on the datum provided\n        const path = this._arcFn = arc()\n                .cornerRadius(cornerRadius)\n                .startAngle(d => d.update.angle0 + Math.PI / 2)\n                .endAngle(d => d.update.angle + Math.PI / 2)\n                .padAngle(padAngle)\n                .padRadius(padRadius)\n                .outerRadius(d => d.update.radius)\n                .innerRadius(d => d.update.radius0);\n\n        this._points = this._normalizedData.map(arr => this.translatePoints(arr));\n        const graphicElems = this._graphicElems = {};\n        // Creating the group that holds all the arcs\n        const g = makeElement(selectElement(container), 'g', this._points, `${qualClassName[0]}-group`)\n                .classed(`${qualClassName[1]}-group`, true)\n                .attr('transform', `translate(${measurement.width / 2},\n                    ${measurement.height / 2})`);\n        const tween = (elem) => {\n            makeElement(elem, 'path', d => [d], `${qualClassName[0]}-path`)\n                .style('fill', d => d.color)\n                .each(function (d) {\n                    graphicElems[d.rowId] = selectElement(this);\n                })\n                .transition()\n                .duration(transition.duration)\n                .on('end', this.registerAnimationDoneHook())\n                .attrTween('d', (...params) => tweenPie(path, params))\n                .attr('class', (d, i) => {\n                    const individualClass = getIndividualClassName(d, i, this._points, this);\n                    return `${qualClassName[0]}-path ${qualClassName[1]}-path-${d.index}\n                        ${individualClass}`;\n                });\n        };\n        const consecutiveExits = [];\n        let exitCounter = 0;\n        const tweenExit = (elem, d) => {\n            let exitArr = consecutiveExits[exitCounter];\n            const oldExitCounter = exitCounter;\n            if (!exitArr) {\n                exitArr = [{ elem, datum: d }];\n            } else if (exitArr[exitArr.length - 1].datum.index === d.index - 1) {\n                exitArr.push({ elem, datum: d });\n            } else {\n                exitCounter++;\n            }\n            consecutiveExits[oldExitCounter] = exitArr;\n        };\n        // Creating groups for all the arcs present individually\n        makeElement(g, 'g', d => d, `${qualClassName[0]}`,\n            {\n                update: tween,\n                exit: tweenExit\n            })\n                        .attr('class', (d, i) => `${qualClassName[0]} ${qualClassName[1]}-${i}`);\n        tweenExitPie(consecutiveExits, transition, path);\n        return this;\n    }\n\n    getPointsFromIdentifiers (identifiers) {\n        if (!this.data()) {\n            return [];\n        }\n        const fieldNames = identifiers[0];\n        const values = identifiers.slice(1, identifiers.length);\n        const pieSlices = selectElement(this.mount()).selectAll('path').data();\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPies = pieSlices.filter((tData) => {\n            const { source, rowId } = tData;\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === source[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === rowId) !== -1;\n                } return true;\n            });\n        });\n\n        const pieSliceInf = filteredPies[0];\n        if (pieSliceInf) {\n            const measurement = this.measurement();\n            const centroid = this._arcFn.centroid(pieSliceInf);\n            return [{\n                x: centroid[0] + measurement.width / 2,\n                y: centroid[1] + measurement.height / 2,\n                width: 2,\n                height: 2\n            }];\n        }\n        return [];\n    }\n}\n","import { getObjProp, interpolator, FieldType, selectElement } from 'muze-utils';\nimport { ANGLE, RADIUS, SIZE, COLOR } from '../../enums/constants';\n\nexport const getPreviousPoint = (prevData, currIndex, context) => {\n    const prevArc = prevData[currIndex - 1];\n    const nextArc = prevData[currIndex];\n    const [startAngle, endAngle] = context.axes().angle.range();\n    if (prevArc && nextArc) {\n        return {\n            update: {\n                angle0: getObjProp(prevArc, 'update', 'angle'),\n                angle: getObjProp(nextArc, 'update', 'angle0')\n            }\n        };\n    } else if (!nextArc) {\n        return {\n            update: {\n                angle0: (endAngle - 90) * Math.PI * 2 / 360,\n                angle: (endAngle - 90) * Math.PI * 2 / 360\n            }\n        };\n    }\n    return {\n        update: {\n            angle0: (startAngle - 90) * Math.PI * 2 / 360,\n            angle: (startAngle - 90) * Math.PI * 2 / 360\n        }\n    };\n};\n\nexport const tweenPie = (path, b) => {\n    const datum = b[0];\n    return function (t) {\n        return path(interpolator()(datum._previousInfo, datum)(t));\n    };\n};\n\nexport const tweenExitPie = (consecutiveExits, transition, path) => {\n    if (consecutiveExits.length > 0) {\n        consecutiveExits.forEach((consecutiveExitArr) => {\n            const startAngle = consecutiveExitArr[0].datum.update.angle0;\n            const endAngle = consecutiveExitArr[consecutiveExitArr.length - 1].datum.update.angle;\n            const mid = (Math.PI * 2 * startAngle) / ((Math.PI * 2) + startAngle - endAngle);\n\n            consecutiveExitArr.forEach((e) => {\n                const { elem, datum } = e;\n\n                elem.each(function () {\n                    const gElem = selectElement(this);\n                    gElem.selectAll('path')\n                                    .transition()\n                                    .duration(transition.duration)\n                                    .attrTween('d', () => function (t) {\n                                        return path(interpolator()(datum, {\n                                            update: {\n                                                angle0: mid,\n                                                angle: mid,\n                                                radius: datum.radius,\n                                                radius0: datum.radius0\n                                            }\n                                        })(t));\n                                    })\n                                    .remove();\n                    gElem.remove();\n                });\n            });\n        });\n    }\n};\n\nexport const getFieldIndices = (encoding, fieldsConfig) => {\n    const [angleField, radiusField, colorField, sizeField] = [ANGLE, RADIUS, COLOR, SIZE]\n            .map(e => encoding[e].field);\n    const [angleIndex, sizeIndex, radiusIndex] = [angleField, sizeField, radiusField]\n        .map((e) => {\n            const conf = fieldsConfig[e];\n            if (conf && conf.def.type === FieldType.MEASURE) {\n                return conf.index;\n            }\n            return null;\n        });\n    const colorIndex = getObjProp(fieldsConfig, colorField, 'index');\n    return {\n        angleIndex,\n        sizeIndex,\n        radiusIndex,\n        colorIndex\n    };\n};\n","import {\n    setAttrs,\n    setStyles,\n    selectElement,\n    makeElement,\n    getSmartComputedStyle\n} from 'muze-utils';\n\n/**\n * Draws svg text in the specified container.\n * @param {SVGElement} container Container where labels will be appended.\n * @param {Array.<Object>} data Data of the elements.\n * @return {Selection} d3 selection of the elements.\n */\nconst drawText = (container, data, config, layerInst) => {\n    const selection = selectElement(container).selectAll('g').data(data);\n    const { smartLabel } = layerInst._dependencies;\n    const graphicElems = layerInst._graphicElems;\n\n    const selectionMerge = selection.enter().append('g')\n        .each(function (dataObj) {\n            setAttrs(this, dataObj.enter);\n        })\n        .merge(selection);\n    const style = getSmartComputedStyle(selectElement(container), config.className);\n    const fontSize = parseInt(style.fontSize, 10);\n\n    smartLabel.setStyle(style);\n    selectionMerge.each(function (dataObj) {\n        const element = selectElement(this);\n        graphicElems[dataObj.rowId] = element;\n        const { update, text, color, textanchor, style: textStyle } = dataObj;\n        const background = dataObj.background;\n        let backgroundVal;\n        if (backgroundVal = background.value) {\n            const backgroundPadding = background.padding;\n            let diff;\n            const { width, height } = smartLabel.getOriSize(dataObj.text);\n            const backgroundEl = makeElement(element, 'rect', [1]);\n\n            if (textanchor === 'end') {\n                diff = width;\n            } else if (textanchor === 'start') {\n                diff = 0;\n            } else {\n                diff = width / 2;\n            }\n\n            setAttrs(backgroundEl.node(), {\n                x: update.x - diff - backgroundPadding / 2,\n                y: update.y - fontSize - backgroundPadding / 2,\n                width: width + backgroundPadding,\n                height: height + backgroundPadding\n            });\n            background && setStyles(backgroundEl, {\n                background: backgroundVal\n            });\n        }\n        const textEl = makeElement(element, 'text', d => [d]).text(text);\n        const textNode = textEl.node();\n        textStyle && setStyles(textNode, textStyle);\n        color && setStyles(textNode, {\n            fill: color\n        });\n        dataObj.className && textEl.classed(dataObj.className, true);\n        setAttrs(textNode, update);\n        textEl.attr('text-anchor', textanchor);\n        textEl.attr('alignment-baseline', dataObj['alignment-baseline']);\n        textEl.attr('transform', `rotate(${dataObj.rotation} ${update.x} ${update.y})`);\n    });\n    selection.exit().remove();\n    return selection;\n};\n\nexport default drawText;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-text',\n    classPrefix: CLASSPREFIX,\n    className: '',\n    transform: {\n        type: 'identity'\n    },\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: {},\n        size: {},\n        radius: {},\n        angle: {},\n        text: {\n            value: '',\n            formatter: (val, i, data, context) => {\n                const valueParser = context.valueParser();\n                return valueParser(val);\n            },\n            background: {\n                padding: 10\n            }\n        },\n        rotation: {\n            value: 0\n        },\n        'alignment-baseline': {\n            value: 'middle'\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-text-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-text-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-text-selected`\n        }\n    }\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    setStyles,\n    createElements\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawText from './renderer';\nimport { defaultConfig } from './default-config';\nimport { positionPoints, getIndividualClassName, resolveEncodingValues, getColorMetaInf, toCartesianCoordinates }\n    from '../../helpers';\nimport { TEXT_ANCHOR_MIDDLE, ENCODING } from '../../enums/constants';\n\nimport './styles.scss';\n\nconst defaultEncoding = defaultConfig.encoding;\nconst alignmentBaseLine = defaultEncoding['alignment-baseline'].value;\nconst defRotation = defaultEncoding.rotation.value;\n\nconst pointTranslators = {\n    polar: (data, config, layerInst) => {\n        let points = [];\n        const axes = layerInst.axes();\n        const encoding = layerInst.config().encoding;\n        const textEncoding = encoding.text;\n        const { radius: radiusAxis, color: colorAxis, angle: angleAxis } = axes;\n        const { formatter: textFormatter } = textEncoding;\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const angleV = {};\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const source = d.source;\n            const text = d.text;\n\n            const color = colorAxis.getColor(d.color);\n            const radius = radiusAxis.getOuterRadius(d.radius);\n            const angles = angleAxis.getScaleValue(d.angle);\n            !angleV[d.angle] && (angleV[d.angle] = 0);\n            const { startAngle, endAngle } = angles[angleV[d.angle]++];\n\n            const angle = (startAngle + endAngle) / 2;\n            const resolvedVal = resolveEncodingValues({\n                values: {\n                    angle,\n                    radius,\n                    color,\n                    text,\n                    startAngle,\n                    endAngle,\n                    rotation: defRotation,\n                    'alignment-baseline': alignmentBaseLine\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    angle: resolvedVal.angle,\n                    radius: resolvedVal.radius\n                },\n                text: textFormatter ? textFormatter(text, i, data, layerInst) : resolvedVal.text,\n                color: resolvedVal.color,\n                rotation: resolvedVal.rotation,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, layerInst) : null,\n                    padding: backgroundPadding\n                },\n                'alignment-baseline': resolvedVal['alignment-baseline'],\n                meta: getColorMetaInf({\n                    fill: resolvedVal.color\n                }, colorAxis),\n                style: {},\n                source,\n                rowId: d.rowId\n            };\n\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n\n        points = toCartesianCoordinates(positionPoints(layerInst, points), layerInst.measurement());\n\n        points = points.filter((d) => {\n            const update = d.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    },\n    cartesian: (data, config, layerInst) => {\n        let points = [];\n        const axes = layerInst.axes();\n        const colorAxis = axes.color;\n        const encoding = layerInst.config().encoding;\n        const textEncoding = encoding.text;\n        const { field: textField, value, formatter: textFormatter } = textEncoding;\n        const fieldsConfig = layerInst.data().getFieldsConfig();\n\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const textFieldIndex = textField ? fieldsConfig[textField] && fieldsConfig[textField].index : -1;\n        const xEnc = ENCODING.X;\n        const yEnc = ENCODING.Y;\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d.source;\n            const textValue = textField ? row[textFieldIndex] : value;\n\n            const [xPx, yPx] = [xEnc, yEnc].map(type => (axes[type] ? axes[type].getScaleValue(d[type]) +\n                    axes[type].getUnitWidth() / 2 : 0));\n\n            const color = colorAxis.getColor(d.color, colorAxis);\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    text: textValue,\n                    color,\n                    rotation: defRotation,\n                    'alignment-baseline': alignmentBaseLine\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    x: resolvedEncodings.x,\n                    y: resolvedEncodings.y\n                },\n                text: textFormatter(resolvedEncodings.text, i, data, layerInst),\n                color: resolvedEncodings.color,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, layerInst) : null,\n                    padding: backgroundPadding\n                },\n                'alignment-baseline': resolvedEncodings['alignment-baseline'],\n                rotation: resolvedEncodings.rotation,\n                meta: getColorMetaInf({\n                    fill: resolvedEncodings.color\n                }, colorAxis),\n                style: {},\n                source: d.source,\n                rowId: d.rowId\n            };\n\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n\n        points = positionPoints(layerInst, points);\n        points = points.filter((d) => {\n            const update = d.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n};\n\n/**\n * This layer is used to create labels for each data point. It has an encoding property ```text```\n * which determines from which field's data the value of the label will be taken. The text encoding\n * property is necessary for the layer to render the text.The mark type of this layer is ```text```.\n *\n * @public\n *\n * @class\n * @module TextLayer\n * @extends BaseLayer\n */\nexport default class TextLayer extends BaseLayer {\n    /**\n     * Returns the default configuration of the text layer\n     * @return {Object} Default configuration of the text layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'text';\n    }\n\n    elemType () {\n        return 'text';\n    }\n\n    getPointTranslator (val) {\n        return pointTranslators[val];\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config = {}) {\n        return pointTranslators[this.coord()](data, config, this);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {textLayer} Instance of text layer\n     */\n    render (container) {\n        const config = this.config();\n        const normalizedData = this._normalizedData;\n        const className = config.className;\n        const qualifiedClassName = getQualifiedClassName(config.defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n\n        containerSelection.classed(`${qualifiedClassName.join(' ')} ${className}`, true);\n        this._graphicElems = {};\n\n        createElements({\n            data: normalizedData,\n            append: 'g',\n            selector: 'g',\n            container,\n            each: (dataArr, group) => {\n                const node = group.node();\n                const points = this.translatePoints(dataArr, {}, this);\n                setStyles(node, {\n                    'text-anchor': TEXT_ANCHOR_MIDDLE\n                });\n                drawText(node, points, {\n                    className: qualifiedClassName[0]\n                }, this);\n            }\n        });\n        return this;\n    }\n}\n","/* global Element, document  */\nimport {\n    makeElement,\n    selectElement,\n    easeFns,\n    objectIterator,\n    getSymbol\n} from 'muze-utils';\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, groupElement) {\n    const { shape, size, update } = d;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            createShape(d, groupElement);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        if (newShape.nodeName === 'path' || newShape.nodeName === 'image') {\n            shapeElement.attr('transform', `scale(${size / 100})`);\n        } else {\n            shapeElement.attr('height', size);\n            shapeElement.attr('width', size);\n        }\n        shapeElement.attr('x', -size / 2);\n        shapeElement.attr('y', -size / 2);\n        makeElement(groupElement, () => newShape, [1]);\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = getSymbol(shape).size(size)(update);\n        }\n        makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    } else {\n        d.shape = 'circle';\n        createShape(d, groupElement);\n    }\n};\n\n/**\n * Draws symbols using d3 symbol api\n * @param {Object} params Contains the svg container, points and other symbol related attributes.\n */\n/* istanbul ignore next */ const drawSymbols = (params) => {\n    const { layer, container, points, transition, className } = params;\n    const { duration, effect, disabled } = transition;\n    const mount = selectElement(container);\n    const graphicElems = layer._graphicElems;\n    mount.attr('class', className);\n    return makeElement(mount, 'g', points, null, {\n        enter: (group, d) => {\n            const { enter } = d;\n            group.attr('transform', `translate(${enter.x},${enter.y})`);\n        },\n        update: (group, d) => {\n            createShape(d, group);\n            graphicElems[d.rowId] = group;\n            const { update, style } = d;\n            objectIterator(style, key => group.style(key, style[key]));\n            group.attr('class', className);\n            group.classed(d.className, true);\n            if (!disabled) {\n                group = group.transition()\n                    .duration(transition.duration)\n                    .on('end', layer.registerAnimationDoneHook());\n            }\n            group.attr('transform', `translate(${update.x},${update.y})`);\n        },\n        exit: (exitGroup) => {\n            if (!disabled) {\n                exitGroup.transition().ease(easeFns[effect])\n                .duration(duration)\n                .on('end', () => exitGroup.remove())\n                .style('fill-opacity', 0)\n                .style('stroke-opacity', 0);\n            } else {\n                exitGroup.remove();\n            }\n        }\n    }, params.keyFn);\n};\n\nexport default drawSymbols;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-point',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    defColorStyle: 'stroke',\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, 0, +1]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }\n        ]\n    },\n    innerPadding: 0.1,\n    nearestPointThreshold: 10,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        size: {\n            value: 30\n        },\n        color: {},\n        stroke: {\n            value: 'hsla(0,0%,0%,0)'\n        },\n        fill: {},\n        shape: {\n            value: 'circle'\n        },\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    shapes: ['circle', 'cross', 'diamond', 'square', 'star', 'wye', 'triangle'],\n    sizes: [20, 30, 40, 50, 60, 70]\n};\n","import {\n    Voronoi,\n    selectElement,\n    getQualifiedClassName,\n    makeElement,\n    FieldType,\n    Scales\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawSymbols from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    positionPoints,\n    getPlotMeasurement,\n    getIndividualClassName,\n    getMarkId,\n    getColorMetaInf,\n    resolveEncodingValues\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to create various symbols for each data point. This is commonly used in\n * scatterplot visualizations. The mark type of this layer is ```point```.\n *\n * @public\n *\n * @class\n * @module PointLayer\n * @extends BaseLayer\n */\nexport default class PointLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of PointLayer.\n     * @param {*} args\n     * @memberof PointLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n        this._bandScale = Scales.band();\n    }\n\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Returns the default configuration of the point layer\n     * @return {Object} Default configuration of the point layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    static formalName () {\n        return 'point';\n    }\n\n    static drawFn () {\n        return drawSymbols;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config = {}) {\n        let points = [];\n        const encoding = this.config().encoding;\n        const axes = this.axes();\n        const {\n            x,\n            y\n        } = encoding;\n        const xField = x.field;\n        const yField = y.field;\n        const { size: sizeAxis, shape: shapeAxis } = axes;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const measurement = this.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n        const stroke = encoding.stroke.value;\n\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const size = sizeAxis.getSize(d.size);\n            const shape = shapeAxis.getShape(d.shape);\n\n            let [xPx, yPx] = [ENCODING.X, ENCODING.Y].map((type) => {\n                const value = d[type] === null ? undefined : d[type];\n                const measure = type === ENCODING.X ? measurement.width : measurement.height;\n                return !encoding[type].field ? measure / 2 : axes[type].getScaleValue(value);\n            });\n\n            xPx += offsetX;\n            yPx += offsetY;\n\n            let color = colorAxis.getColor(d.color);\n\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    color,\n                    shape,\n                    size,\n                    data: d\n                },\n                data: d\n            }, i, data, this);\n            color = resolvedEncodings.color;\n\n            const style = {\n                fill: color,\n                stroke\n            };\n            const pos = {\n                x: resolvedEncodings.x,\n                y: resolvedEncodings.y\n            };\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: pos,\n                    update: pos,\n                    shape: resolvedEncodings.shape,\n                    size: Math.abs(resolvedEncodings.size),\n                    meta: getColorMetaInf(style, colorAxis),\n                    style,\n                    source: d.source,\n                    rowId: d.rowId\n                };\n                point.className = getIndividualClassName(d, i, data, this);\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container.\n     *\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {BarLayer} Instance of bar layer\n     */\n    render (container) {\n        let maxSize = 0;\n        let seriesClassName;\n        const config = this.config();\n        const keys = this._transformedData.map(d => d.key);\n        const { transition, className, defClassName, classPrefix } = config;\n        const normalizedData = this._normalizedData;\n        const containerSelection = selectElement(container);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        this._points = [];\n        this._pointMap = {};\n\n        containerSelection.classed(qualifiedClassName.join(' '), true).classed(className, true);\n\n        this._points = this.generateDataPoints(normalizedData, keys);\n        this._graphicElems = {};\n\n        const schema = this.data().getSchema();\n        makeElement(container, 'g', this._points, null, {\n            update: (group, points) => {\n                maxSize = Math.max(maxSize, ...points.map(d => d.size));\n                seriesClassName = `${qualifiedClassName[0]}`;\n                this.constructor.drawFn()({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    interpolate: config.interpolate,\n                    className: seriesClassName,\n                    transition,\n                    keyFn: v => getMarkId(v.source, schema)\n                });\n            }\n        }, data => data[0].rowId);\n        this._maxSize = Math.sqrt(maxSize / Math.PI) * 2;\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    generateDataPoints (normalizedData, keys) {\n        const [widthMetrics, heightMetrics] = getPlotMeasurement(this, keys);\n        const offsetXValues = widthMetrics.offsetValues || [];\n        const offsetYValues = heightMetrics.offsetValues || [];\n        return normalizedData.map((dataArr, i) => {\n            const measurementConf = this.getMeasurementConfig(offsetXValues[i], offsetYValues[i], widthMetrics.span,\n                heightMetrics.span);\n            return this.translatePoints(dataArr, measurementConf);\n        }).filter(d => d.length);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0) + widthSpan / 2,\n                y: (offsetY || 0) + heightSpan / 2\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n\n    /**\n     * Gets the nearest point from a position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Point details\n     */\n    getNearestPoint (x, y) {\n        const distanceLimit = Math.max(this._maxSize, this.config().nearestPointThreshold);\n\n        if (!this.data()) {\n            return null;\n        }\n\n        const point = this._voronoi.find(x, y, distanceLimit);\n        const dimensions = point && point.data.data.update;\n        const radius = point ? Math.sqrt(point.data.data.size / Math.PI) : 0;\n\n        if (point) {\n            const { source, rowId } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(source, rowId);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: radius,\n                    height: radius\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import { makeElement, easeFns } from 'muze-utils';\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} datum\n * @param {*} index\n * @param {*} context\n */\nconst transitionBars = (layer, elem, datum, index, context) => {\n    const { transition } = context;\n    const { duration, disabled, effect } = transition;\n    const selection = elem;\n\n    const selTransition = disabled ? selection :\n        selection.transition()\n        .duration(duration)\n        .ease(easeFns[effect])\n        .on('end', layer.registerAnimationDoneHook());\n    const update = datum.update || datum;\n    const updateStyle = datum.style || {};\n    datum.className && selection.classed(datum.className, true);\n    Object.entries(update).forEach(attr => (!isNaN(attr[1]) && selTransition.attr(attr[0], attr[1])));\n    Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n};\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} d\n */\nconst barEnterFn = (elem, d) => {\n    const selection = elem;\n    const enter = d.enter || {};\n    Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n};\n\n/**\n * Draws rectangles by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Bar Selection\n */\n/* istanbul ignore next */ export const drawRects = (params) => {\n    const { layer, points, container, keyFn } = params;\n    const graphicElems = layer._graphicElems;\n    const updateFns = {\n        enter (elem, d) { barEnterFn(elem, d); },\n        update (elem, d, i) {\n            graphicElems[d.rowId] = elem;\n            transitionBars(layer, elem, d, i, params);\n        }\n    };\n    return makeElement(container, 'rect', points, null, updateFns, keyFn);\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-bar',\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transform: {\n        type: 'stack'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    innerPadding: 0.1,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        x0: {},\n        y0: {}\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-bar-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-bar-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-bar-selected`\n        }\n    }\n};\n\n","import { MeasureSubtype, DimensionSubtype } from 'muze-utils';\nimport { STACK } from '../../enums/constants';\nimport { positionPoints, getIndividualClassName, getColorMetaInf, resolveEncodingValues } from '../../helpers';\n\nconst positionRetriever = {\n    x: (xPx, isNegativeVal, barBasePos) => (isNegativeVal ? [xPx, barBasePos] : [barBasePos, xPx]),\n    y: (yPx, isNegativeVal, barBasePos) => (isNegativeVal ? [barBasePos, yPx] : [yPx, barBasePos])\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fieldInfo\n * @param {*} config\n * @param {*} data\n *\n */\nconst resolveDimByField = (type, axesInfo, config, data) => {\n    const spaceType = type === 'x' ? 'width' : 'height';\n    const [fieldType, axis] = [config[`${type}FieldType`], axesInfo[`${type}Axis`]];\n    const {\n        transformType,\n        sizeEncoding,\n        sizeConfig,\n        measurement\n    } = config;\n\n    const sizeValue = sizeEncoding.value;\n    let enter = 0;\n    let pos;\n    let space = 0;\n    let enterSpace = 0;\n    if (fieldType !== undefined) {\n        if (config[`${type}0Field`]) {\n            const minVal = data[type];\n            const maxVal = data[`${type}0`];\n            let min;\n            let max;\n            if (minVal === null || maxVal === null) {\n                return {\n                    enterSpace: undefined,\n                    enter: undefined,\n                    pos: undefined,\n                    space: undefined\n                };\n            } else if (fieldType === MeasureSubtype.CONTINUOUS || fieldType === DimensionSubtype.TEMPORAL) {\n                min = Math.min(minVal, maxVal);\n                max = Math.max(minVal, maxVal);\n            } else {\n                min = minVal;\n                max = maxVal;\n            }\n            const scales = type === 'x' ? [min, max] : [max, min];\n            pos = axis.getScaleValue(scales[0]) + axis.getUnitWidth() / 2;\n            space = Math.abs(axis.getScaleValue(scales[1]) - pos) + axis.getUnitWidth() / 2;\n\n            enter = pos;\n            enterSpace = 0;\n        } else if (fieldType === DimensionSubtype.CATEGORICAL || fieldType === DimensionSubtype.TEMPORAL) {\n            pos = axis.getScaleValue(data[type]) +\n                (sizeConfig[type === 'x' ? 'barWidthOffset' : 'barHeightOffset'] || 0);\n\n            space = sizeConfig[type === 'x' ? 'barWidth' : 'barHeight'];\n            if (sizeValue !== undefined) {\n                const diffPx = sizeValue * space;\n                space -= diffPx;\n                pos += diffPx / 2;\n            }\n            enter = pos;\n            enterSpace = space;\n        } else {\n            const minDomVal = axis.domain()[0];\n            const barBasePos = minDomVal < 0 ? axis.getScaleValue(0) : axis.getScaleValue(minDomVal);\n            pos = axis.getScaleValue(data[type]);\n            let endPos = axis.getScaleValue(data[`${type}0`]);\n\n            enterSpace = 0;\n            const isNegativeVal = data[type] < 0;\n            if (transformType !== STACK) {\n                [pos, endPos] = positionRetriever[type](pos, isNegativeVal, barBasePos);\n            }\n            space = Math.abs(pos - endPos);\n            enter = barBasePos;\n        }\n    } else {\n        pos = 0;\n        space = measurement[spaceType];\n    }\n\n    return {\n        enterSpace,\n        enter,\n        pos,\n        space\n    };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} config\n * @param {*} axes\n *\n */\nconst resolveDimensions = (data, config, axes) => {\n    const axesInfo = {\n        xAxis: axes.x,\n        yAxis: axes.y\n    };\n    const {\n        enterSpace: enterWidth,\n        enter: enterX,\n        pos: xPos,\n        space: width\n    } = resolveDimByField('x', axesInfo, config, data);\n\n    const {\n        enterSpace: enterHeight,\n        enter: enterY,\n        pos: yPos,\n        space: height\n    } = resolveDimByField('y', axesInfo, config, data);\n    return {\n        enter: {\n            x: enterX,\n            y: enterY,\n            width: enterWidth,\n            height: enterHeight\n        },\n        update: {\n            x: xPos,\n            y: yPos,\n            width,\n            height\n        }\n    };\n};\n\n/**\n * Generates an array of objects containing x, y, width and height of the bars from the data\n * @param  {Array.<Array>} data Data Array\n * @param  {Object} encoding  Config\n * @param  {Object} axes     Axes object\n * @param {Object} conf config object for point generation\n * @return {Array.<Object>}  Array of points\n */\nexport const getTranslatedPoints = (context, data, sizeConfig) => {\n    let points = [];\n    const encoding = context.config().encoding;\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const sizeEncoding = encoding.size || {};\n    const {\n            x0Field,\n            y0Field,\n            xFieldSubType,\n            yFieldSubType\n        } = context.encodingFieldsInf();\n    const measurement = context.measurement();\n    const isXDim = xFieldSubType === DimensionSubtype.CATEGORICAL || xFieldSubType === DimensionSubtype.TEMPORAL;\n    const isYDim = yFieldSubType === DimensionSubtype.CATEGORICAL || yFieldSubType === DimensionSubtype.TEMPORAL;\n    const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n    const transformType = context.transformType();\n\n    for (let i = 0, len = data.length; i < len; i++) {\n        const d = data[i];\n        const dimensions = resolveDimensions(d, {\n            xFieldType: xFieldSubType,\n            yFieldType: yFieldSubType,\n            x0Field,\n            y0Field,\n            transformType,\n            measurement,\n            sizeConfig,\n            sizeEncoding\n        }, axes);\n\n        let color = colorAxis.getColor(d.color);\n\n        const update = dimensions.update;\n        const resolvedEncodings = resolveEncodingValues({\n            values: {\n                x: update.x,\n                y: update.y,\n                width: update.width,\n                height: update.height,\n                color\n            },\n            data: d\n        }, i, data, context);\n        color = resolvedEncodings.color;\n        const { x, y, width, height } = resolvedEncodings;\n        const style = {\n            fill: color\n        };\n\n        if (!isNaN(x) && !isNaN(y) && d.rowId !== undefined) {\n            let point = null;\n            point = {\n                enter: dimensions.enter,\n                update: {\n                    x,\n                    y,\n                    width,\n                    height\n                },\n                source: d.source,\n                rowId: d.rowId,\n                style,\n                meta: getColorMetaInf(style, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, context);\n            points.push(point);\n            // Store each point in a hashmap with key as the dimensional or temporal field value\n            context.cachePoint(d[key], point);\n        }\n    }\n\n    points = positionPoints(context, points);\n    return points;\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    createElements,\n    clipElement,\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    Scales,\n    getNearestValue,\n    getObjProp\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawRects } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getPlotMeasurement, getValidTransformForAggFn } from '../../helpers';\nimport './styles.scss';\nimport { getTranslatedPoints } from './bar-helper';\n\nconst MEASURE = FieldType.MEASURE;\nconst scaleBand = Scales.band;\n\n/**\n * Bar layer creates rectangle marks. The mark type of this layer is ```bar```. This layer can be used\n * to create stacked or grouped bars, range bars, heatmap plots and also reference bands by using\n * the encoding properties.\n *\n * @public\n *\n * @class\n * @module BarLayer\n * @extends BaseLayer\n */\nexport default class BarLayer extends BaseLayer {\n    /**\n     * Creates an instance of bar layer\n     */\n    constructor (...params) {\n        super(...params);\n        this._bandScale = scaleBand();\n        this._plotPadding = {\n            x: 0,\n            y: 0\n        };\n        this._plotSpan = {\n            x: 0,\n            y: 0\n        };\n        this._pointMap = {};\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BarLayer\n     */\n    elemType () {\n        return 'rect';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BarLayer\n     */\n    static formalName () {\n        return 'bar';\n    }\n\n    /**\n     * Returns the default configuration of the bar layer\n     * @return {Object} Default configuration of the bar layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     *\n     * @memberof BarLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const colorField = encoding.color.field;\n        const transform = config.transform;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} fieldsConfig\n     *\n     * @memberof BarLayer\n     */\n    calculateDomainFromData (data, encodingFieldInf, fieldsConfig) {\n        const domain = super.calculateDomainFromData(data, encodingFieldInf, fieldsConfig);\n        ['x', 'y'].forEach((d) => {\n            if (encodingFieldInf[`${d}FieldType`] === MEASURE && getObjProp(domain[d], 'length')) {\n                if (encodingFieldInf[`${d}0Field`]) {\n                    domain[d] = domain[d].sort((a, b) => a - b);\n                } else {\n                    domain[d][0] = Math.min(domain[d][0], 0);\n                    domain[d][1] = Math.max(0, domain[d][1]);\n                }\n            }\n        });\n        return domain;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the bars from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @param {Object} conf config object for point generation\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, sizeConfig) {\n        return getTranslatedPoints(this, data, sizeConfig);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGGroup} container SVGGroup where plot will be rendered.\n     * @return {BarLayer} Instance of bar layer.\n     */\n    render (container) {\n        const config = this.config();\n        const transition = config.transition;\n        const normalizedDataArr = this._normalizedData;\n        const transformedData = this._transformedData;\n        const keys = transformedData.map(d => d.key);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const height = axes.y && axes.y.scale().range()[0];\n        const width = axes.x && axes.x.scale().range()[1];\n        const defClassName = config.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const className = config.className;\n        const containerSelection = selectElement(container);\n        const dimensions = Object.values(fieldsConfig).filter(e => e.def.type === FieldType.DIMENSION)\n            .map(e => e.index);\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        clipElement(container, {\n            x: 0,\n            y: 0,\n            width,\n            height\n        }, `id-${this.id()}`);\n\n        this._points = this.generateDataPoints(normalizedDataArr, keys);\n        this._graphicElems = {};\n\n        createElements({\n            data: this._points,\n            container,\n            selector: 'g',\n            append: 'g',\n            each: (points, group, i) => {\n                const seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n                group.style('display', 'block');\n                drawRects({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: {},\n                    keyFn: d => dimensions.map(key => d.source[key]).join('-')\n                });\n            }\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} normalizedData\n     * @param {*} keys\n     *\n     * @memberof BarLayer\n     */\n    generateDataPoints (normalizedData, keys) {\n        const [barWidthMetrics, barHeightMetrics] = getPlotMeasurement(this, keys);\n        const barWidthOffsets = barWidthMetrics.offsetValues || [];\n        const barHeightOffsets = barHeightMetrics.offsetValues || [];\n        this._plotSpan = {\n            x: barWidthMetrics.groupSpan || 0,\n            y: barHeightMetrics.groupSpan || 0\n        };\n        this._plotPadding = {\n            x: barWidthMetrics.padding || 0,\n            y: barHeightMetrics.padding || 0\n        };\n\n        this._pointMap = {};\n        return normalizedData.map((data, i) => this.translatePoints(data,\n            {\n                barWidth: barWidthMetrics.span,\n                barWidthOffset: barWidthOffsets[i] || 0,\n                barHeight: barHeightMetrics.span,\n                barHeightOffset: barHeightOffsets[i] || 0\n            }));\n    }\n\n    getPlotPadding () {\n        return this._plotPadding;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Gets the nearest point of the position passed.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point.\n     */\n    getNearestPoint (x, y) {\n        if (!this.data()) {\n            return null;\n        }\n        let axis;\n        let value;\n        let points;\n        let uniqueFieldType;\n        let uniqueFieldIndex;\n        let filterData;\n        let identifiers;\n        let pointFound = null;\n        const dataModel = this.data();\n        const dataObj = dataModel.getData();\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const axes = this.axes();\n        const data = dataObj.data;\n        const pointMap = this._pointMap;\n        const {\n                xField,\n                yField,\n                xFieldSubType,\n                yFieldSubType\n            } = this.encodingFieldsInf();\n\n        if (xFieldSubType === MeasureSubtype.CONTINUOUS) {\n            axis = axes.y;\n            value = axis.invert(y);\n            uniqueFieldIndex = fieldsConfig[yField].index;\n            uniqueFieldType = yFieldSubType;\n        } else {\n            axis = axes.x;\n            value = axis.invert(x);\n            uniqueFieldIndex = fieldsConfig[xField].index;\n            uniqueFieldType = xFieldSubType;\n        }\n\n        if (uniqueFieldType === DimensionSubtype.CATEGORICAL) {\n            points = pointMap[value];\n        }\n\n        if (uniqueFieldType === DimensionSubtype.TEMPORAL) {\n            filterData = [...new Set(data.map(d => d[uniqueFieldIndex]))];\n            value = getNearestValue(filterData, value);\n            points = pointMap[value];\n        }\n        const len = points && points.length;\n        points && points.sort((p1, p2) => p1.update.y - p2.update.y);\n        for (let i = 0; i < len; i++) {\n            const point = points[i];\n            const update = point.update;\n            if (x >= update.x && x <= (update.width + update.x) && y >= update.y && y <= (update.height + update.y)) {\n                pointFound = point;\n                break;\n            }\n            pointFound = null;\n        }\n\n        const values = pointFound && pointFound.source;\n        if (values) {\n            identifiers = this.getIdentifiersFromData(values, pointFound.rowId);\n        }\n        return pointFound ? {\n            dimensions: [pointFound.update],\n            id: identifiers,\n            layerId: this.id()\n        } : pointFound;\n    }\n\n    getPlotSpan () {\n        return this._plotSpan;\n    }\n\n    hasPlotSpan () {\n        return true;\n    }\n}\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-tick',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }]\n    },\n    innerPadding: 0.1,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    interpolate: 'linear',\n    encoding: {\n        color: { },\n        x: {},\n        y: {},\n        x0: {},\n        y0: {},\n        radius: {},\n        radius0: {},\n        angle: {},\n        angle0: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-tick-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-tick-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-tick-selected`\n        }\n    }\n};\n\n","import { selectElement, Symbols, pathInterpolators } from 'muze-utils';\n\nconst line = Symbols.line;\n\n/**\n * Draws ticks by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Ticks Selection\n */\nexport default /* istanbul ignore next */ (params) => {\n    const { points, container, keyFn, className, interpolate, layer } = params;\n    const mount = selectElement(container);\n    const ticks = mount.selectAll('path').data(points, keyFn);\n    const ticksEnter = ticks.enter().append('path');\n    const graphicElems = layer._graphicElems;\n    mount.attr('class', className || '');\n    ticksEnter.each(function (d) {\n        const selection = selectElement(this);\n        const enter = d.enter || {};\n        Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n    });\n\n    ticks.exit().remove();\n    return ticks.merge(ticksEnter)\n                    .each(function (d) {\n                        const selection = selectElement(this);\n                        graphicElems[d.rowId] = selection;\n                        const update = d.update;\n                        const updateStyle = d.style || {};\n                        const x0 = update.x0 !== undefined ? update.x0 : update.x;\n                        const y0 = update.y0 !== undefined ? update.y0 : update.y;\n                        const curveInterpolatorFn = pathInterpolators[interpolate];\n                        const linepath = line()\n                            .curve(curveInterpolatorFn)\n                            .x(e => e[0])\n                            .y(e => e[1]);\n                        d.className && selection.classed(d.className, true);\n                        selection.attr('d', linepath([[update.x, update.y], [x0, y0]]));\n                        Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n                    });\n};\n\n","import { FieldType } from 'muze-utils';\nimport { PointLayer } from '../point';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport drawTicks from './renderer';\nimport './styles.scss';\nimport { getAxesScales, positionPoints, getIndividualClassName,\n    getColorMetaInf, resolveEncodingValues, toCartesianCoordinates } from '../../helpers';\n\nconst pointTranslators = {\n    polar: (data, config = {}, layerInst) => {\n        const axes = layerInst.axes();\n        let points = [];\n        const { radius: radiusAxis, angle: angleAxis, angle0: angle0Axis } = axes;\n        const measurement = layerInst.measurement();\n\n        const colorAxis = axes.color;\n        const angleV = {};\n        const angle0V = {};\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const color = colorAxis.getColor(d.color);\n            const angles = angleAxis.getScaleValue(d.angle);\n            !angleV[d.angle] && (angleV[d.angle] = 0);\n            const { startAngle, endAngle } = angles[angleV[d.angle]++];\n            const angles0 = angle0Axis.getScaleValue(d.angle0);\n            !angle0V[d.angle0] && (angle0V[d.angle0] = 0);\n            const { startAngle: startAngle0, endAngle: endAngle0 } = angles0[angle0V[d.angle0]++];\n            const radius = radiusAxis.getOuterRadius(d.radius);\n            const angle = (startAngle + endAngle) / 2;\n            const angle0 = (startAngle0 + endAngle0) / 2;\n            const resolvedVal = resolveEncodingValues({\n                values: {\n                    radius,\n                    radius0: radiusAxis.getInnerRadius(d.radius0),\n                    color,\n                    angle,\n                    angle0,\n                    startAngle,\n                    endAngle,\n                    startAngle0,\n                    endAngle0\n                },\n                data: d\n            }, i, data, layerInst);\n            const style = {\n                stroke: resolvedVal.color\n            };\n\n            const point = {\n                enter: {},\n                update: {\n                    radius: resolvedVal.radius,\n                    radius0: resolvedVal.radius0,\n                    angle: resolvedVal.angle,\n                    angle0: resolvedVal.angle0\n                },\n                style,\n                source: d.source,\n                rowId: d.rowId,\n                meta: getColorMetaInf(style, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n        points = toCartesianCoordinates(positionPoints(layerInst, points), measurement, true);\n        return points;\n    },\n    cartesian: (data, config = {}, layerInst) => {\n        const axes = layerInst.axes();\n        let points = [];\n        const {\n                xAxis,\n                yAxis\n            } = getAxesScales(axes);\n        const {\n                xField,\n                yField,\n                x0Field,\n                y0Field,\n                xFieldType,\n                yFieldType\n            } = layerInst.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const measurement = layerInst.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n        const { x: xSpan, y: ySpan } = config.span;\n        for (let i = 0, len = data.length; i < len; i++) {\n            let xPx;\n            let x0Px;\n            let y0Px;\n            let yPx;\n            const d = data[i];\n            const row = d.source;\n            if (xField) {\n                xPx = xAxis.getScaleValue(d.x) + offsetX;\n                x0Px = xPx + xSpan;\n            }\n\n            if (yField) {\n                yPx = yAxis.getScaleValue(d.y) + offsetY;\n                y0Px = yPx !== null ? yPx + ySpan : null;\n            }\n\n            if (!xField) {\n                xPx = 0;\n                x0Px = measurement.width;\n                if (!isNaN(yPx)) {\n                    yPx += ySpan / 2;\n                    y0Px = yPx;\n                }\n            }\n\n            if (!yField) {\n                yPx = 0;\n                y0Px = measurement.height;\n                x0Px = xPx += xSpan / 2;\n            }\n\n            if (x0Field) {\n                x0Px = xAxis.getScaleValue(d.x0) + xSpan;\n                yPx += ySpan / 2;\n                y0Px -= ySpan / 2;\n            }\n\n            if (y0Field) {\n                y0Px = yAxis.getScaleValue(d.y0) + ySpan;\n                xPx += xSpan / 2;\n                x0Px -= xSpan / 2;\n            }\n            const color = colorAxis.getColor(d.color);\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    x0: x0Px,\n                    y0: y0Px,\n                    color\n                },\n                data: d\n            }, i, data, layerInst);\n            const style = {\n                stroke: resolvedEncodings.color\n            };\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {},\n                    update: {\n                        x: resolvedEncodings.x,\n                        y: resolvedEncodings.y,\n                        x0: resolvedEncodings.x0,\n                        y0: resolvedEncodings.y0\n                    },\n                    style,\n                    source: row,\n                    rowId: d.rowId,\n                    meta: getColorMetaInf(style, colorAxis)\n                };\n                point.className = getIndividualClassName(d, i, data, layerInst);\n                points.push(point);\n                layerInst.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(layerInst, points);\n        return points;\n    }\n};\n\n/**\n * This layer is used to create small lines. The orientation of the line is determined by the positional\n * encoding properties x0 and y0. The mark type of the layer is ```tick```.\n *\n * @public\n *\n * @class\n * @module TickLayer\n * @extends BaseLayer\n */\nexport default class TickLayer extends PointLayer {\n\n    /**\n     *\n     *\n     * @staticg\n     *\n     * @memberof TickLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static formalName () {\n        return 'tick';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static drawFn () {\n        return drawTicks;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TickLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config) {\n        return pointTranslators[this.coord()](data, config, this);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0),\n                y: (offsetY || 0)\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n}\n","export const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { isSimpleObject, mergeRecursive, getObjProp } from 'muze-utils';\n\nconst parseLayerDefinition = (sink, definition, layerDef, layerType) => {\n    for (const key in definition) {\n        if (Object.hasOwnProperty.call(definition, key)) {\n            let strs;\n            let propValue;\n            const def = definition[key];\n            if (isSimpleObject(def)) {\n                sink[key] = {};\n                parseLayerDefinition(sink[key], def, layerDef, layerType);\n            } else if (typeof def === 'string' && (strs = def.split('.')) && strs[0] === layerType) {\n                propValue = getObjProp(layerDef, ...strs.slice(1, strs.length));\n                if (propValue !== undefined) {\n                    sink[key] = propValue;\n                }\n            } else {\n                sink[key] = def;\n            }\n        }\n    }\n};\n\nconst sanitizeEncoding = (encoding) => {\n    // Create object for each encoding value if encoding value is a string\n    for (const key in encoding) {\n        if (typeof encoding[key] === 'string') {\n            encoding[key] = {\n                field: encoding[key]\n            };\n        }\n    }\n};\n\n/**\n * Layer Factory creates layers based on the layer type. All types of layers needs to register in\n * the layer factory. For getting a layer instance, getLayer method needs to invoked with the\n * layerType and other arguments. It also registers the definition of composite layers.\n *\n * @public\n *\n * @module LayerFactory\n */\nconst layerFactory = (() => {\n    const compositeLayers = {};\n    const factoryObj = {\n        setLayerRegistry: (reg) => {\n            factoryObj._layerRegistry = reg;\n        },\n        getSerializedConf: (mark, layerDef) => {\n            let serializedDefs;\n            const defs = compositeLayers[mark];\n            const newConf = mergeRecursive({}, layerDef);\n\n                // If it is a composite layer then resolve all the definitions of each unit layer\n            if (defs) {\n                serializedDefs = defs.map((unitLayerDef) => {\n                    const sDef = {};\n                    parseLayerDefinition(sDef, unitLayerDef, newConf, mark);\n                    sanitizeEncoding(sDef.encoding);\n                    return sDef;\n                });\n            } else {\n                const encoding = newConf.encoding;\n                // Create object for each encoding value if encoding value is a string\n                sanitizeEncoding(encoding);\n                serializedDefs = newConf;\n            }\n\n            return serializedDefs;\n        },\n        getLayerInstance: (layerDef, ...params) => {\n            const layerRegistry = factoryObj._layerRegistry;\n            layerDef = !(layerDef instanceof Array) ? [layerDef] : layerDef;\n            const instances = layerDef.map((layerObj) => {\n                const layerConstructor = layerRegistry[layerObj.mark];\n                return layerConstructor.create(...params);\n            });\n            return instances.length === 1 ? instances[0] : instances;\n        },\n        getLayerClass: mark => factoryObj._layerRegistry[mark],\n        /**\n         * Registers a new composite layer definition in the layer factory.\n         *\n         * @public\n         *\n         * @param {string} layerType Mark type of the new composite layer.\n         * @param {Array} layerDefs Layer definitions of the composite layer.\n         */\n        composeLayers: (layerType, layerDefs) => {\n            compositeLayers[layerType] = layerDefs;\n        },\n        sanitizeLayerConfig: (layerDef) => {\n            const newConf = mergeRecursive({}, layerDef);\n            sanitizeEncoding(newConf.encoding);\n            return newConf;\n        }\n    };\n    return factoryObj;\n})();\n\nexport default layerFactory;\n","import layerFactory from './layer-factory';\n\nexport default layerFactory;\n","import { AreaLayer } from './layers/area';\nimport { ArcLayer } from './layers/arc';\nimport { LineLayer } from './layers/line';\nimport { TextLayer } from './layers/text';\nimport { PointLayer } from './layers/point';\nimport { BarLayer } from './layers/bar';\nimport { BaseLayer } from './base-layer';\nimport * as LAYER_TYPES from './enums/layer-types';\nimport { TickLayer } from './layers/tick';\n\nexport const DEFAULT_LAYERS = {\n    [LAYER_TYPES.AREA_LAYER]: AreaLayer,\n    [LAYER_TYPES.ARC_LAYER]: ArcLayer,\n    [LAYER_TYPES.LINE_LAYER]: LineLayer,\n    [LAYER_TYPES.TEXT_LAYER]: TextLayer,\n    [LAYER_TYPES.POINT_LAYER]: PointLayer,\n    [LAYER_TYPES.TICK_LAYER]: TickLayer,\n    [LAYER_TYPES.BAR_LAYER]: BarLayer,\n    [LAYER_TYPES.BASE_LAYER]: BaseLayer\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Artboard.\n * Artboard merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module\n */\n\nexport default {\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * Interfaces for VisualGroup. Any new VisualGroup has to implement this class.\n * @class  SimpleGroup\n */\nclass SimpleGroup {\n\n    /**\n     * This method is used to set or get the DataModel instance.\n     *\n     * @param {DataModel | undefined} dataModel Instance of datamodel.\n\n     * @memberof  SimpleGroup\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to set or get the group specific configuration\n     * properties\n     *\n     * @param {Object | undefined} configObj The input configuration.\n     *                                or instance of visual group.\n     * @memberof  SimpleGroup\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to return a serialized representation of the\n     * instance's properties.\n     *\n     * @memberof  SimpleGroup\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to get or set the measurement object which houses\n     * layout properties like width and height.\n     *\n     * @param {Object  | undefined} mObj The measurement properties.\n     * @memberof  SimpleGroup\n     */\n    measurement () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n\nexport default SimpleGroup;\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: false\n    },\n    [ACTIONS.HOVER]: {\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.LONGTOUCH]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: true\n    },\n    [ACTIONS.TOUCHDRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: true\n    },\n    [ACTIONS.CLICK]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: false\n    }\n};\n","import {\n    FieldType,\n    getDependencyOrder,\n    getObjProp,\n    defaultValue,\n    objectIterator,\n    unionDomain,\n    makeElement,\n    DimensionSubtype,\n    toArray,\n    MeasureSubtype,\n    getNearestValue\n} from 'muze-utils';\nimport { layerFactory, ENCODING } from '@chartshq/visual-layer';\n\nexport const getDimensionMeasureMap = (layers, fieldsConfig) => {\n    const retinalEncodingsAndMeasures = {};\n\n    layers.forEach((layer) => {\n        const {\n            colorField,\n            sizeField,\n            shapeField,\n            xField,\n            yField\n        } = layer.encodingFieldsInf();\n        const measures = [xField, yField].filter(field => fieldsConfig[field] && fieldsConfig[field].def.type ===\n            FieldType.MEASURE);\n        [colorField, sizeField, shapeField].forEach((field) => {\n            if (getObjProp(fieldsConfig, field, 'def', 'type') === FieldType.DIMENSION && measures.length) {\n                !retinalEncodingsAndMeasures[field] && (retinalEncodingsAndMeasures[field] = []);\n                retinalEncodingsAndMeasures[field].push(...measures);\n            }\n        });\n    });\n\n    for (const key in retinalEncodingsAndMeasures) {\n        if ({}.hasOwnProperty.call(retinalEncodingsAndMeasures, key)) {\n            retinalEncodingsAndMeasures[key] = [...new Set(retinalEncodingsAndMeasures[key])];\n        }\n    }\n    return retinalEncodingsAndMeasures;\n};\n\nexport const transformDataModels = (transform, dataModel) => {\n    const dataModels = {};\n    for (const key in transform) {\n        if ({}.hasOwnProperty.call(transform, key)) {\n            const transformVal = transform[key];\n            dataModels[key] = transformVal(dataModel);\n        }\n    }\n\n    return dataModels;\n};\n\nexport const getLayerFromDef = (context, definition, existingLayer, namespaces) => {\n    let instances = existingLayer;\n    const dependencies = context._dependencies;\n    const metaInf = context.metaInf();\n    if (!existingLayer) {\n        instances = layerFactory.getLayerInstance(definition);\n        toArray(instances).forEach((inst, i) => {\n            inst.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: namespaces[i],\n                parentNamespace: metaInf.namespace\n            })\n                .dependencies(dependencies)\n                .store(context.store());\n        });\n    }\n    const layers = {};\n    const instanceArr = toArray(instances);\n    definition = toArray(definition);\n    definition.reduce((acc, def, idx) => {\n        const instance = instanceArr[idx];\n        instance.coord(context.coord());\n        instance.config(def);\n        instance.valueParser(context.valueParser());\n        instance.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        if (def.name) {\n            instance.alias(def.name);\n        }\n        layers[instance.alias()] = instance;\n        return acc;\n    }, {});\n    return layers;\n};\n\nexport const resolveEncodingTransform = (layerInst, store) => {\n    const encodingTransform = layerInst.config().encodingTransform || {};\n    const resolvable = encodingTransform.resolvable;\n    let depArr = [];\n    if (resolvable) {\n        const resolved = resolvable(store);\n        depArr = resolved.depArr;\n        layerInst.encodingTransform(resolved.fn);\n    } else if (encodingTransform instanceof Function) {\n        layerInst.encodingTransform(encodingTransform);\n    }\n    return depArr;\n};\n\nexport const sanitizeLayerDef = (layerDefs) => {\n    const sanitizedDefs = [];\n    layerDefs.forEach((layerDef, i) => {\n        const def = layerDef.def;\n        const mark = layerDef.mark;\n        if (!def) {\n            const sConf = layerFactory.getSerializedConf(layerDef.mark, layerDef);\n            if (!sConf.name) {\n                sConf.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push({\n                mark: layerDef.mark,\n                def: sConf\n            });\n        } else {\n            if (!def.name) {\n                def.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push(layerDef);\n        }\n    });\n    return sanitizedDefs;\n};\n\nexport const attachDataToLayers = (layers, dm, transformedDataModels) => {\n    layers.forEach((layer) => {\n        const dataSource = layer.config().source;\n        const dataModel = dataSource instanceof Function ? dataSource(dm) :\n            (transformedDataModels[dataSource] || dm);\n        layer.data(dataModel);\n    });\n};\n\nexport const attachAxisToLayers = (axes, layers, layerAxisIndex) => {\n    layers.forEach((layer) => {\n        const layerId = layer.id();\n        const axesObj = {};\n\n        objectIterator(axes, (key) => {\n            const axisInf = layerAxisIndex[layerId];\n            if (axisInf) {\n                const axisArr = axes[key] || [];\n                const axisIndex = axisInf[key] >= 0 ? axisInf[key] : axisArr.length - 1;\n                axes[key] && (axesObj[key] = defaultValue(axes[key][axisIndex]));\n            }\n        });\n        Object.keys(axesObj).length && layer.axes(axesObj);\n    });\n};\n\nconst { X, Y, RADIUS, ANGLE, ANGLE0, RADIUS0 } = ENCODING;\n\nexport const getLayerAxisIndex = (layers, fields) => {\n    const layerAxisIndex = {};\n    layers.forEach((layer) => {\n        const { axis, encoding } = layer.config();\n        const id = layer.id();\n        [X, Y, ANGLE, ANGLE0, RADIUS].forEach((type) => {\n            let index;\n            const specificField = getObjProp(encoding, type, 'field');\n            const encodingField = type === RADIUS ? defaultValue(specificField, getObjProp(encoding, RADIUS0, 'field'))\n                : getObjProp(encoding, type, 'field');\n            const field = defaultValue(getObjProp(axis, type), encodingField);\n            if (fields[type] && fields[type].length) {\n                index = fields[type].findIndex(fieldInst => fieldInst.getMembers().indexOf(field) !== -1);\n            } else {\n                index = 0;\n            }\n            !layerAxisIndex[id] && (layerAxisIndex[id] = {});\n            layerAxisIndex[id][type] = index;\n        });\n    });\n    return layerAxisIndex;\n};\n\nconst getValidDomain = (domain, domain1, encodingType, fieldType) => {\n    if (encodingType === ANGLE || encodingType === ANGLE0) {\n        return domain.concat(domain1.filter(d => domain.indexOf(d) === -1));\n    }\n    return unionDomain([domain, domain1], fieldType);\n};\n\nexport const unionDomainFromLayers = (layers, axisFields, layerAxisIndex, fieldsConfig) => {\n    let domains = {};\n    layers = layers.filter(layer => layer.getDataDomain() !== null);\n    layers.forEach((layer) => {\n        let domainValues = {};\n        const config = layer.config();\n        // const encoding = config.encoding;\n        const layerDomain = layer.getDataDomain();\n        const layerId = layer.id();\n\n        if (layerDomain !== null && config.calculateDomain !== false) {\n            domainValues = Object.entries(layerDomain);\n            domains = domainValues.reduce((fieldDomain, domain) => {\n                const encodingType = domain[0];\n                const axisIndex = layerAxisIndex[layerId][encodingType];\n                const field = getObjProp(axisFields, encodingType, axisIndex);\n                !fieldDomain[encodingType] && (fieldDomain[encodingType] = {});\n                const encodingDomain = fieldDomain[encodingType];\n                if (field) {\n                    const fieldStr = `${field}`;\n                    encodingDomain[fieldStr] = encodingDomain[fieldStr] || [];\n                    encodingDomain[fieldStr] = getValidDomain(encodingDomain[fieldStr],\n                        domain[1], encodingType, fieldsConfig[field.getMembers()[0]].def.subtype);\n                }\n                return fieldDomain;\n            }, domains);\n        }\n    });\n    return domains;\n};\n\nexport const renderLayers = (context, container, layers, measurement) => {\n    context._lifeCycleManager.notify({ client: layers, action: 'beforedraw', formalName: 'layer' });\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const orderedLayers = context.layers().sort((a, b) => a.config().order - b.config().order);\n    const layerParentGroup = makeElement(container, 'g', [1], `${classPrefix}-layer-group`);\n    const layerDepOrder = getDependencyOrder(context._layerDepOrder);\n    const groups = {};\n    makeElement(layerParentGroup, 'g', orderedLayers, null, {\n        update: (group, layer) => {\n            groups[layer.alias()] = {\n                group,\n                layer\n            };\n        }\n    });\n\n    const layerSeq = layerDepOrder.map(name => groups[name]);\n    layerSeq.forEach((o) => {\n        const layer = o.layer;\n        const group = o.group;\n        layer.measurement(measurement);\n        layer.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        layer.config().render !== false && layer.mount(group.node());\n    });\n    return this;\n};\n\nexport const getNearestDimensionalValue = (context, position) => {\n    const fields = context.fields();\n    if (!fields.x.length || !fields.y.length) {\n        return null;\n    }\n    const data = context.data();\n    const axes = context.axes();\n    const fieldsConfig = data.getFieldsConfig();\n    const xField = getObjProp(fields, 'x', 0).getMembers()[0];\n    const yField = getObjProp(fields, 'y', 0).getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n\n    const entryVal = [['x', xFieldType, xField], ['y', yFieldType, yField]].find(entry =>\n        entry[1] === DimensionSubtype.CATEGORICAL || entry[1] === DimensionSubtype.TEMPORAL);\n\n    if (!entryVal || (xFieldType !== MeasureSubtype.CONTINUOUS && yFieldType !== MeasureSubtype.CONTINUOUS)) {\n        return null;\n    }\n    const field = entryVal[2];\n    const index = fieldsConfig[field].index;\n    let key = axes[entryVal[0]][0].invert(position[entryVal[0]]);\n    if (entryVal[1] === DimensionSubtype.TEMPORAL) {\n        const filterData = [...new Set(data.getData().data.map(d => d[index]))];\n        key = getNearestValue(filterData, key);\n    }\n\n    return key !== undefined ? [[field], [key]] : null;\n};\n\nexport const getLayersBy = (layers, searchBy, value) => layers.filter((layer) => {\n    const name = searchBy === 'type' ? layer.constructor.formalName() : layer.alias();\n    return name === value;\n});\n\nexport const removeLayersBy = (layers, searchBy, value) => {\n    layers.filter((inst) => {\n        const name = searchBy === 'type' ? inst.config().mark : inst.alias();\n        if (name === value) {\n            inst.remove();\n            return false;\n        }\n        return true;\n    });\n};\n\nexport const createSideEffectGroup = (container, className) => makeElement(container, 'g', [1], className).node();\n\nexport const createRenderPromise = (unit) => {\n    const renderedPromise = unit._renderedPromise;\n    renderedPromise.then(() => {\n        unit._renderedPromise = new Promise((resolve) => {\n            unit._renderedResolve = resolve;\n        });\n        createRenderPromise(unit);\n    });\n};\n\nexport const getRadiusRange = (width, height, config = {}) => {\n    const {\n        innerRadius,\n        outerRadius\n    } = config;\n\n    return [innerRadius || 0, outerRadius || Math.min(height,\n        width) / 2];\n};\n\nexport const setAxisRange = (context) => {\n    const axes = context.axes();\n    const { radius: radiusAxes } = axes;\n    if (radiusAxes) {\n        radiusAxes.forEach((axis) => {\n            axis.range(getRadiusRange(context.width(), context.height()));\n        });\n    }\n};\n\nexport const isXandYMeasures = (context) => {\n    const { x: xFields, y: yFields } = context.fields();\n    const [xMeasures, yMeasures] = [xFields, yFields].map(fields => fields\n        .every(field => field.type() === FieldType.MEASURE));\n    return xMeasures && yMeasures;\n};\n\nconst getKey = (arr, row) => {\n    let key = row[arr[0]];\n    for (let i = 1, len = arr.length; i < len; i++) {\n        key = `${key},${row[arr[i]]}`;\n    }\n    return key;\n};\n\nexport const getValuesMap = (model, context) => {\n    const valuesMap = {};\n    const { data: dataArr, schema, uids } = model.getData();\n    const fieldsConfig = model.getFieldsConfig();\n    const fieldIndices = isXandYMeasures(context) ? schema.map((d, i) => i) :\n                            Object.keys(model.getFieldspace().getDimension()).map(d => fieldsConfig[d].index);\n    dataArr.forEach((row, i) => {\n        const key = getKey(fieldIndices, row);\n        valuesMap[key] = uids[i];\n    });\n    return valuesMap;\n};\n\nexport const getSelectionRejectionModel = (model, propModel, measures, propValuesMap) => {\n    let rejectionModel;\n    const { data, schema } = propModel.getData();\n    const entryRowIds = [];\n    const exitRowIds = [];\n\n    if (schema.length) {\n        const fieldMap = model.getFieldsConfig();\n        const rowIdsObj = {};\n        const filteredSchema = measures ? schema.map((d, idx) => idx) :\n            Object.keys(model.getFieldspace().getDimension()).map(d => fieldMap[d].index);\n        data.forEach((row) => {\n            const key = getKey(filteredSchema, row);\n            const id = propValuesMap[key];\n            if (key in propValuesMap) {\n                entryRowIds.push(id);\n                rowIdsObj[id] = 1;\n            }\n        });\n        rejectionModel = model.select((fields, i) => {\n            if (!rowIdsObj[i]) {\n                exitRowIds.push(i);\n                return true;\n            }\n            return false;\n        }, {\n            saveChild: false\n        });\n    } else {\n        rejectionModel = propModel;\n    }\n\n    return {\n        model: [propModel, rejectionModel],\n        entryRowIds,\n        exitRowIds\n    };\n};\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const GRID_LINE_PARENT_GROUP_CLASS = 'grid-lines';\nexport const GRID_BAND_PARENT_GROUP_CLASS = 'grid-bands';\nexport const GRID_PARENT_GROUP = 'grid-parent-group';\nexport const BAND = 'band';\nexport const TICK = 'tick';\nexport const GRID_BAND = 'gridBands';\nexport const GRID_LINE = 'gridLines';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const RETINAL_FIELDS = 'retinalFields';\nexport const PARENT_ALIAS = 'parentAlias';\nexport const LAYERS = 'layers';\nexport const CACHED_DATA = 'cachedData';\nexport const STORE = 'store';\n","import { getObjProp, defaultValue, makeElement, DimensionSubtype, DataModel, createSelection } from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { layerFactory, LAYER_TYPES } from '@chartshq/visual-layer';\nimport {\n    GRID_BAND,\n    GRID_LINE,\n    GRID_BAND_PARENT_GROUP_CLASS,\n    GRID_LINE_PARENT_GROUP_CLASS,\n    GRID_PARENT_GROUP\n} from '../enums/constants';\n\nconst { BAR_LAYER, TICK_LAYER } = LAYER_TYPES;\n\nconst LINEAR = ScaleType.LINEAR;\n\nconst getLayerDefinition = (context, axes, type, orientation) => {\n    let encoding;\n    const config = context.config();\n    const { classPrefix, gridLines, gridBands } = config;\n    const gridLineColor = gridLines.color;\n    const zeroLineColor = gridLines.zeroLineColor;\n    const defClassName = type === GRID_BAND ? gridBands.defClassName : gridLines.defClassName;\n    const gridBandColor = gridBands[orientation].color;\n    const axis = axes[orientation][0];\n    const isLinearScale = axis.constructor.type() === LINEAR;\n\n    if (type === GRID_BAND && isLinearScale) {\n        encoding = {\n            [orientation]: `${orientation}value`,\n            [`${orientation}0`]: `${orientation}value0`\n        };\n    } else {\n        encoding = {\n            [orientation]: isLinearScale ? `${orientation}value` : `${orientation}dim`\n        };\n    }\n    encoding.color = {\n        value: (data, i) => {\n            const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n            if (type === GRID_BAND) {\n                return gridBandColor[i % 2];\n            }\n            return isNegativeDomain && data[orientation] === 0 ? zeroLineColor : gridLineColor;\n        }\n    };\n    const { color, shape, size } = context.axes();\n    return {\n        definition: {\n            defClassName: `${defClassName}-${orientation}`,\n            className: config.className,\n            name: orientation,\n            calculateDomain: false,\n            individualClassName: (data, i) => {\n                let className;\n                const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n                if (isNegativeDomain && data.y === 0 && type !== GRID_BAND) {\n                    className = `${classPrefix}-axis-zero-line`;\n                } else {\n                    className = `${classPrefix}-grid-${type}-${orientation}-${i % 2}`;\n                }\n                return className;\n            },\n            [`pad${orientation.toUpperCase()}`]: type === GRID_BAND ? 0 : undefined,\n            encoding\n        },\n        axes: {\n            [orientation]: axis,\n            color: color[0],\n            shape: shape[0],\n            size: size[0]\n        },\n        interactive: false\n    };\n};\n\nconst getDefaultVisibilty = (show, axis) => {\n    if (axis.constructor.type() === LINEAR) {\n        return show;\n    }\n    return false;\n};\n\nexport const getGridLayerDefinitions = (context, config, type) => ['x', 'y'].map((axisType) => {\n    const axes = context.axes();\n    if (!axes[axisType]) {\n        return null;\n    }\n    const show = defaultValue(config[axisType] && config[axisType].show,\n        getDefaultVisibilty(config.show, axes[axisType][0]));\n\n    return show ? getLayerDefinition(context, axes, type, axisType) : null;\n}).filter(d => d !== null);\n\nconst dimensionSubTypes = Object.values(DimensionSubtype).reduce((acc, v) => {\n    acc[v] = 1;\n    return acc;\n}, {});\nconst getValidSubtype = subtype => (!dimensionSubTypes[subtype] ? DimensionSubtype.CATEGORICAL : subtype);\n\nexport const getGridLayerData = (axes, fields, fieldsConfig) => {\n    const gridData = {};\n\n    ['x', 'y'].forEach((type) => {\n        let ticks = axes[type][0].getTickValues();\n        const subtype = getObjProp(fieldsConfig, getObjProp(fields, type, 0).getMembers()[0], 'def', 'subtype');\n        const jsonData = [];\n        const schema = [\n            {\n                name: 'yvalue',\n                type: 'measure'\n            }, {\n                name: 'xvalue',\n                type: 'measure'\n            },\n            {\n                name: 'yvalue0',\n                type: 'measure'\n            }, {\n                name: 'xvalue0',\n                type: 'measure'\n            }, {\n                name: 'xdim',\n                type: 'dimension',\n                subtype: getValidSubtype(subtype)\n            }, {\n                name: 'ydim',\n                type: 'dimension',\n                subtype: getValidSubtype(subtype)\n            }\n        ];\n        const len = Math.max(ticks.length);\n        ticks = subtype === DimensionSubtype.TEMPORAL ? ticks.map(d => d.getTime()) : ticks;\n        for (let i = 0; i < len; i += 1) {\n            jsonData.push({\n                [`${type}value`]: ticks[i],\n                [`${type}value0`]: ticks[i + 1],\n                [`${type}dim`]: ticks[i],\n                [`${type}dim`]: ticks[i]\n            });\n        }\n        gridData[type] = new DataModel(jsonData, schema);\n    });\n    return gridData;\n};\n\nexport const createGridLineLayer = (context) => {\n    const vuConf = context.config();\n    const metaInf = context.metaInf();\n    const store = context.store();\n    const timeDiffs = context._timeDiffs;\n    [GRID_BAND, GRID_LINE].forEach((type) => {\n        let mark;\n        let config;\n        if (type === GRID_BAND) {\n            mark = BAR_LAYER;\n            config = vuConf.gridBands;\n        } else {\n            mark = TICK_LAYER;\n            config = vuConf.gridLines;\n        }\n        const definitions = getGridLayerDefinitions(context, config, type);\n\n        const sel = `_${type}Selection`;\n        context[sel] = createSelection(context[sel], (atomicDef) => {\n            const inst = layerFactory.getLayerInstance({ mark });\n            inst.dependencies(context._dependencies);\n            const name = atomicDef.definition.name;\n            inst.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: `${metaInf.namespace}${type}${name}`,\n                parentNamespace: metaInf.namespace\n            })\n                .store(store);\n            return inst;\n        }, definitions, atomicDef => atomicDef.definition.name);\n        context[sel].each((layer, atomicDef) => {\n            const definition = atomicDef.definition;\n            const sConf = layerFactory.getSerializedConf(mark, definition);\n            const axesObj = atomicDef.axes;\n            layer.config(sConf)\n                .dataProps({\n                    timeDiffs\n                })\n                .axes(axesObj);\n        });\n        context[`_${type}`] = context[sel].getObjects();\n    });\n};\n\nexport const attachDataToGridLineLayers = (context) => {\n    const axes = context.axes();\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n    if (gridLines.length || gridBands.length) {\n        const gridLayerData = getGridLayerData(axes, context.fields(), context.data().getFieldsConfig());\n        [].concat(...gridBands, ...gridLines).forEach((inst) => {\n            inst.data(inst.axes().x ? gridLayerData.x : gridLayerData.y);\n        });\n    }\n};\n\nexport const renderGridLineLayers = (context, container) => {\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n    const measurement = {\n        width: context.width(),\n        height: context.height()\n    };\n    const gridLineParentGroup = makeElement(container, 'g', [1], `${classPrefix}-${GRID_PARENT_GROUP}`);\n\n    [[gridLines, `${classPrefix}-${GRID_LINE_PARENT_GROUP_CLASS}`],\n            [gridBands, `${classPrefix}-${GRID_BAND_PARENT_GROUP_CLASS}`]].forEach((entry) => {\n                const [instances, parentGroupClass] = entry;\n                const mountPoint = makeElement(gridLineParentGroup, 'g', [1], `.${parentGroupClass}`);\n                const className = `${parentGroupClass}-group`;\n                makeElement(mountPoint, 'g', instances, `.${className}`, {\n                    update: (group, instance) => {\n                        instance.dataProps({ timeDiffs: context._timeDiffs })\n                            .measurement(measurement)\n                            .mount(group.node());\n                    }\n                });\n            });\n};\n","import { STATE_NAMESPACES, temporalFields, getObjProp, defaultValue } from 'muze-utils';\nimport * as PROPS from './enums/reactive-props';\nimport {\n    transformDataModels,\n    getDimensionMeasureMap,\n    attachDataToLayers,\n    attachAxisToLayers,\n    unionDomainFromLayers\n} from './helper';\n\nimport { createGridLineLayer } from './helper/grid-lines';\n\nconst removeExitLayers = (layerDefs, context) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    layerDefs.forEach((layerDef, i) => {\n        const id = defaultValue(layerDef.name, `${layerDef.mark}-${i}`);\n        markSet[id] = true;\n    });\n\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n};\n\nexport const calculateDomainListener = (context) => {\n    const { namespace } = context.metaInf();\n    const domain = unionDomainFromLayers(context.layers(), context.fields(), context._layerAxisIndex,\n        context.data().getFieldsConfig());\n    context.store().commit(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}`, domain, namespace);\n};\n\nexport const listenerMap = [\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.LAYERDEFS],\n        listener: (context, [, layerDefs]) => {\n            const fieldsVal = context.fields();\n            if (layerDefs && fieldsVal) {\n                removeExitLayers(layerDefs, context);\n                const queuedLayerDefs = context._queuedLayerDefs;\n                let layerDefArr = layerDefs;\n                queuedLayerDefs.forEach((defFn) => {\n                    layerDefArr = [...layerDefArr, ...defFn(layerDefs)];\n                });\n                context.addLayer(layerDefArr);\n                const adjustRange = context.layers().some(inst => inst.hasPlotSpan());\n                ['x', 'y'].forEach((type) => {\n                    const axisArr = defaultValue(getObjProp(context.axes(), type), []);\n                    axisArr.forEach((axis) => {\n                        axis.config({\n                            adjustRange\n                        });\n                    });\n                });\n                context._lifeCycleManager.notify({\n                    client: context.layers(),\n                    action: 'initialized',\n                    formalName: 'layer'\n                });\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.DATA],\n        listener: (context, [, dataModel]) => {\n            if (dataModel) {\n                const axesObj = context.axes();\n                const timeDiffs = {};\n                const timeDiffsByField = {};\n\n                Object.entries(temporalFields(dataModel)).forEach(([fieldName, fieldObj]) => {\n                    timeDiffsByField[fieldName] = fieldObj.minimumConsecutiveDifference();\n                });\n\n                Object.entries(context.fields()).forEach(([type, [field]]) => {\n                    if (field) {\n                        const timeDiff = timeDiffsByField[`${field}`];\n                        if (timeDiff) {\n                            timeDiffs[type] = timeDiff;\n                            axesObj[type].forEach(axis => axis.minDiff(timeDiff));\n                        }\n                    }\n                });\n\n                context._timeDiffsByField = timeDiffsByField;\n                context._timeDiffs = timeDiffs;\n                const firebolt = context.firebolt();\n                const originalData = context.cachedData()[0];\n                firebolt.createSelectionSet(context.data().getUids());\n                firebolt.attachPropagationListener(originalData);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.CONFIG],\n        listener: (context, [, config]) => {\n            if (config) {\n                context.firebolt().config(config.interaction);\n                createGridLineLayer(context);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.DATA, PROPS.TRANSFORM],\n        listener: (context, [, dataModel], [, transform]) => {\n            if (dataModel) {\n                const dataModels = transformDataModels(transform, dataModel);\n                const metaInf = context.metaInf();\n                context.store().commit(`${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${PROPS.TRANSFORMEDDATA}`,\n                    dataModels, metaInf.namespace);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.TRANSFORMEDDATA, PROPS.LAYERS],\n        listener: (context, [, transformedData], [, layers]) => {\n            const layerAxisIndexVal = context._layerAxisIndex;\n            const axesVal = context.axes();\n            const dataModel = context.data();\n            if (transformedData && layers && axesVal && layerAxisIndexVal) {\n                context._lifeCycleManager.notify({ client: layers, action: 'beforeupdate', formalName: 'layer' });\n                attachDataToLayers(layers, dataModel, transformedData);\n                context._dimensionMeasureMap = getDimensionMeasureMap(layers,\n                    dataModel.getFieldsConfig(), context.retinalFields());\n                attachAxisToLayers(axesVal, layers, layerAxisIndexVal);\n                context._lifeCycleManager.notify({ client: layers, action: 'updated', formalName: 'layer' });\n            }\n        }\n    }\n];\n","export const CONFIG = 'config';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const MOUNT = 'mount';\nexport const TRANSFORM = 'transform';\nexport const TRANSFORMEDDATA = 'transformedData';\nexport const DATADOMAIN = 'dataDomain';\nexport const FIELDS = 'fields';\nexport const LAYERAXISINDEX = 'layerAxisIndex';\nexport const LAYERS = 'layers';\nexport const DOMAIN = 'domain';\n\n","import { mergeRecursive } from 'muze-utils';\nimport { FACET_BY_FIELDS, RETINAL_FIELDS, PARENT_ALIAS, CACHED_DATA } from './enums/constants';\n\nexport const PROPS = {\n    [FACET_BY_FIELDS]: {},\n    [RETINAL_FIELDS]: {},\n    [PARENT_ALIAS]: {},\n    [CACHED_DATA]: {},\n    detailFields: {},\n    axes: {\n        defaultValue: {\n            x: [],\n            y: []\n        }\n    },\n    fields: {\n        defaultValue: {\n            x: [],\n            y: []\n        },\n        sanitization: (context, value) => mergeRecursive({\n            x: [],\n            y: []\n        }, value)\n    },\n    metaInf: {},\n    registry: {},\n    parentContainerInf: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    coord: {}\n};\n","import { DimensionSubtype } from 'muze-utils';\n\nconst getRangeFromData = (instance, selectionDataModel, propConfig) => {\n    let criteria;\n    const dataObj = selectionDataModel[0].getData();\n    const propCriteria = propConfig.payload.criteria;\n    const sourceIdentifiers = propConfig.sourceIdentifiers;\n    const schema = dataObj.schema;\n    const fieldMap = instance.data().getFieldsConfig();\n    const data = dataObj.data;\n    const isActionSourceSame = instance.id() === propConfig.sourceId;\n\n    if (isActionSourceSame) {\n        criteria = propCriteria;\n    } else {\n        criteria = (sourceIdentifiers !== null) ? schema.reduce((acc, obj, index) => {\n            let range;\n            const field = obj.name;\n            const fieldObj = fieldMap[field];\n            const type = fieldObj && (fieldObj.def.subtype ? fieldObj.def.subtype : fieldObj.def.type);\n            const isDimension = type === DimensionSubtype.CATEGORICAL;\n\n            if (!fieldObj) {\n                return acc;\n            }\n\n            if (!isDimension) {\n                range = [Math.min(...data.map(d => d[index])), Math.max(...data.map(d => d[index]))];\n            } else {\n                range = data.map(d => d[index]);\n            }\n            acc[field] = range;\n            return acc;\n        }, {}) : null;\n    }\n    return criteria;\n};\n\nexport const payloadGenerator = {\n    brush: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const criteria = getRangeFromData(instance, selectionDataModel, propConfig);\n        const payload = Object.assign({}, propPayload);\n        payload.criteria = criteria;\n        return payload;\n    },\n\n    __default: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const sourceIdentifiers = propConfig.sourceIdentifiers;\n        const dataObj = selectionDataModel[0].getData();\n        let schema = dataObj.schema;\n        const payload = Object.assign({}, propPayload);\n        schema = dataObj.schema;\n        const data = dataObj.data;\n        const sourceFields = schema.map(d => d.name);\n        payload.criteria = !sourceIdentifiers && selectionDataModel[0].isEmpty() ? null :\n            [sourceFields, ...data];\n        payload.sourceFields = sourceIdentifiers ? sourceIdentifiers.getSchema().map(d => d.name) : [];\n        return payload;\n    }\n};\n\n","import { isSimpleObject, FieldType, DataModel } from 'muze-utils';\n\nconst getModelWithFacetData = (dm, data) => {\n    const dataObj = dm.getData();\n    const schema1 = dataObj.schema;\n    const data1 = dataObj.data;\n    const jsonData = [];\n    const derivedSchema = data[0].map(d => ({\n        name: `${d}`,\n        type: FieldType.DIMENSION,\n        subtype: d.subtype()\n    }));\n    const dataAtFirstPos = data[1];\n\n    data1.forEach((d) => {\n        const tuple = {};\n        schema1.forEach((obj, i) => {\n            tuple[obj.name] = d[i];\n        });\n        derivedSchema.forEach((obj, i) => {\n            tuple[obj.name] = dataAtFirstPos[i];\n        });\n        jsonData.push(tuple);\n    });\n\n    return new DataModel(jsonData, [...schema1, ...derivedSchema]);\n};\n\nexport const propagateValues = (instance, action, config = {}) => {\n    let propagationData;\n    const payload = config.payload;\n    const selectionSet = config.selectionSet;\n    const propagationFieldInf = config.propagationFields[action] || {};\n    const propagationFields = propagationFieldInf.fields || [];\n    const append = propagationFieldInf.append;\n    const criteria = payload.criteria;\n    const context = instance.context;\n    const dataModel = context.cachedData()[0];\n    const sourceId = context.id();\n    const sideEfffects = instance.sideEffects();\n    const behaviourEffectMap = instance._behaviourEffectMap;\n    const mergedModel = selectionSet.mergedEnter.model;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    payload.sourceUnit = sourceId;\n    payload.action = action;\n    payload.sourceCanvas = context.parentAlias();\n    const propagationBehaviourMap = instance._propagationBehaviourMap;\n    const propagationBehaviour = propagationBehaviourMap[action] || action;\n\n    let propFields = [];\n    if (criteria === null) {\n        propagationData = null;\n    } else if (isSimpleObject(criteria)) {\n        propFields = Object.keys(criteria || {});\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    } else {\n        propFields = criteria[0];\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    }\n\n    const facetByFields = context.facetByFields();\n    if (propagationData !== null && propagationFields.length) {\n        const fields = propagationData.getData().schema.map(d => d.name);\n        propagationData = getModelWithFacetData(propagationData, facetByFields);\n        propFields = append ? [...fields, ...propagationFields] : propagationFields;\n        propagationData = propagationData.project(propFields);\n    }\n\n    let propagateInterpolatedValues = false;\n    if (propFields.length && propFields.every(field => fieldsConfig[field] &&\n        fieldsConfig[field].def.type === FieldType.MEASURE)) {\n        propagateInterpolatedValues = true;\n    }\n\n    const groupId = context.parentAlias();\n    payload.action = action;\n    const behaviourInstance = instance._actions.behavioural[propagationBehaviour];\n    const isMutableAction = behaviourInstance ? behaviourInstance.constructor.mutates() : false;\n\n    const filterFn = (entry, propagationConf) => {\n        const effects = behaviourEffectMap[entry.config.action];\n        const mutates = entry.config.groupId ?\n            effects.some(d => sideEfffects[d.name || d].constructor.mutates()) : true;\n        return entry.config.groupId !== propagationConf.groupId && mutates;\n    };\n\n    const sourceBehaviour = instance._actions.behavioural[action];\n    const mutates = sourceBehaviour ? sourceBehaviour.constructor.mutates() : false;\n    let propConfig = {\n        payload,\n        action,\n        criteria: propagationData,\n        isMutableAction: mutates,\n        propagateInterpolatedValues,\n        groupId,\n        sourceId: mutates ? groupId : sourceId,\n        filterFn,\n        enabled: (propConf, firebolt) => (action !== propagationBehaviour ?\n            propConf.payload.sourceCanvas === firebolt.context.parentAlias() : true)\n    };\n\n    dataModel.propagate(propagationData, propConfig, true);\n\n    if (action !== propagationBehaviour) {\n        propConfig = {\n            payload,\n            sourceId: isMutableAction ? groupId : sourceId,\n            criteria: propagationData,\n            isMutableAction,\n            propagateInterpolatedValues,\n            action: propagationBehaviour,\n            groupId,\n            applyOnSource: action === propagationBehaviour,\n            enabled: (propConf, firebolt) => propConf.payload.sourceCanvas !== firebolt.context.parentAlias(),\n            filterFn\n        };\n\n        dataModel.propagate(propagationData, propConfig, true, {\n            filterImmutableAction: (actionInf, propInf) => actionInf.groupId !== propInf.groupId\n        });\n    }\n};\n","import { FieldType, intersect } from 'muze-utils';\nimport { Firebolt, SIDE_EFFECTS } from '@chartshq/muze-firebolt';\nimport { isXandYMeasures, getSelectionRejectionModel } from '../helper';\nimport { payloadGenerator } from './payload-generator';\nimport { propagateValues } from './data-propagator';\n\nconst sideEffectPolicy = (propPayload, context, propagationInf) => {\n    const { sourceIdentifiers, propagationData } = propagationInf;\n    const fieldsConfig = sourceIdentifiers.getFieldsConfig();\n    const sourceIdentifierFields = Object.keys(fieldsConfig).filter(field =>\n        fieldsConfig[field].def.type !== FieldType.MEASURE);\n    const propFields = Object.keys(propagationData[0].getFieldsConfig());\n    const hasCommonCanvas = propPayload.sourceCanvas === context.parentAlias();\n    return intersect(sourceIdentifierFields, propFields).length || hasCommonCanvas;\n};\n\n/**\n * This class manages the interactions of visual unit. It associates physical actions with\n * behavioural actions. It also propagates the behavioural actions to other datamodels.\n */\nexport default class UnitFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        const {\n            TOOLTIP,\n            HIGHLIGHTER,\n            ANCHORS,\n            BRUSH_ANCHORS,\n            PERSISTENT_ANCHORS\n        } = SIDE_EFFECTS;\n\n        const disabledSideEffects = [TOOLTIP, HIGHLIGHTER, ANCHORS, BRUSH_ANCHORS, PERSISTENT_ANCHORS];\n        disabledSideEffects.forEach((sideEffect) => {\n            this.changeSideEffectStateOnPropagation(sideEffect, sideEffectPolicy, 'sourceTargetPolicy');\n        });\n    }\n    propagate (behaviour, payload, selectionSet, sideEffects) {\n        propagateValues(this, behaviour, {\n            payload,\n            selectionSet,\n            sideEffects,\n            propagationFields: this._propagationFields\n        });\n    }\n\n    getApplicableSideEffects (sideEffects, payload, propagationInf) {\n        const context = this.context;\n        const unitId = context.id();\n        const aliasName = context.parentAlias();\n        const propagationSourceCanvas = propagationInf.propPayload && propagationInf.propPayload.sourceCanvas;\n        const sourceUnitId = propagationInf.propPayload && propagationInf.propPayload.sourceUnit;\n        const sourceSideEffects = this._sourceSideEffects;\n        const sideEffectInstances = this.sideEffects();\n        const actionOnSource = sourceUnitId ? sourceUnitId === unitId : true;\n\n        const applicableSideEffects = payload.sideEffects ? [{\n            effects: payload.sideEffects,\n            behaviours: [payload.action]\n        }] : sideEffects;\n        applicableSideEffects.forEach((d) => {\n            let mappedEffects = d.effects;\n            mappedEffects = mappedEffects.filter((se) => {\n                const mutates = sideEffectInstances[se.name || se].constructor.mutates();\n                if (mutates && propagationInf.isMutableAction === false) {\n                    return false;\n                }\n                if (!actionOnSource && payload.criteria !== null) {\n                    const sideEffectCheckers = Object.values(sourceSideEffects[se.name || se] || {});\n                    const { sourceIdentifiers, data: propagationData } = propagationInf;\n                    return sideEffectCheckers.length ? sideEffectCheckers.every(checker =>\n                        checker(propagationInf.propPayload, context, {\n                            sourceIdentifiers,\n                            propagationData\n                        })) : true;\n                }\n                if (propagationSourceCanvas === aliasName || actionOnSource) {\n                    return se.applyOnSource !== false;\n                }\n\n                return true;\n            });\n            d.effects = mappedEffects;\n        });\n        return applicableSideEffects;\n    }\n\n    shouldApplySideEffects (propagate) {\n        return propagate === false;\n    }\n\n    onDataModelPropagation () {\n        return (data, config) => {\n            let isMutableAction = false;\n            const context = this.context;\n            if (!context.mount()) {\n                return;\n            }\n            const {\n                model: propagationData,\n                entryRowIds,\n                exitRowIds\n            } = getSelectionRejectionModel(context.data(), data, isXandYMeasures(context), context._cachedValuesMap());\n            const {\n                enabled: enabledFn,\n                sourceIdentifiers,\n                action,\n                payload: propPayload\n            } = config;\n\n            const payloadFn = payloadGenerator[action] || payloadGenerator.__default;\n            const payload = payloadFn(context, propagationData, config);\n            const sourceBehaviours = this._sourceBehaviours;\n            const filterFns = Object.values(sourceBehaviours[action] || sourceBehaviours['*'] || {});\n            let enabled = filterFns.every(fn => fn(propPayload || {}, context, {\n                sourceIdentifiers,\n                propagationData\n            }));\n\n            if (enabledFn) {\n                enabled = enabledFn(config, this) && enabled !== false;\n            }\n\n            if (enabled) {\n                const effects = this._behaviourEffectMap[action];\n                const sideEffectInstances = this.sideEffects();\n                isMutableAction = config.groupId ?\n                    effects.some(d => sideEffectInstances[d.name || d].constructor.mutates()) : config.isMutableAction;\n\n                const propagationInf = {\n                    propagate: false,\n                    data: propagationData,\n                    entryRowIds,\n                    exitRowIds,\n                    propPayload,\n                    sourceIdentifiers,\n                    persistent: false,\n                    sourceId: config.propagationSourceId,\n                    isMutableAction: config.isMutableAction\n                };\n\n                this._actionHistory[action] = {\n                    payload,\n                    propagationInf,\n                    isMutableAction\n                };\n                this.dispatchBehaviour(action, payload, propagationInf);\n            }\n        };\n    }\n\n    prepareSelectionSets (behaviours) {\n        const data = this.context.data();\n        if (data) {\n            this.createSelectionSet(data.getData().uids, behaviours);\n        }\n        return this;\n    }\n\n    remove () {\n        this.context.cachedData()[0].unsubscribe('propagation');\n        return this;\n    }\n}\n","import { SpawnableSideEffect } from '@chartshq/muze-firebolt';\n\nexport const initSideEffects = (sideEffects, firebolt) => {\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            sideEffects[key] instanceof SpawnableSideEffect && sideEffects[key].drawingContext(() => {\n                const context = firebolt.context;\n                return context.getDrawingContext();\n            });\n            sideEffects[key].valueParser(firebolt.context.valueParser());\n        }\n    }\n};\n\nexport const clearActionHistory = (context) => {\n    const actionHistory = context._actionHistory;\n    for (const key in actionHistory) {\n        if (actionHistory[key].isMutableAction) {\n            delete context._actionHistory[key];\n        }\n    }\n};\n\nexport const dispatchQueuedSideEffects = (context) => {\n    const queuedSideEffects = context._queuedSideEffects;\n    Object.entries(queuedSideEffects).forEach((entry) => {\n        const sideEffect = entry[1];\n        context.dispatchSideEffect(sideEffect.name, ...sideEffect.params);\n    });\n    context._queuedSideEffects = {};\n};\n","import { CLASSPREFIX, CONSOLIDATED } from './enums/constants';\n\n/**\n * Returns the default configuration of the visual unit\n * @return {Object} Default configuration of visual unit\n */\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'visual-unit',\n    className: '',\n    trackerClassName: 'visual-unit-tracker',\n    minOuterRadius: 10,\n    gridLines: {\n        defClassName: 'axis-grid-lines',\n        className: '',\n        show: true,\n        color: '#efefef',\n        zeroLineColor: '#b6b6b6'\n    },\n    gridBands: {\n        defClassName: 'axis-grid-bands',\n        className: '',\n        show: false,\n        y: {\n            color: ['#fff', '#fbfbfb']\n        },\n        x: {\n            color: ['#fff', '#f9f9f9']\n        }\n    },\n    arcLayerClassName: 'layer-arc',\n    interaction: {\n        tooltip: {\n            mode: CONSOLIDATED\n        }\n    },\n    sideEffectClassName: 'side-effect-container'\n};\n","import { mergeRecursive, DataModel } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { CONFIG, LAYERDEFS, TRANSFORM, DATA, LAYERS, TRANSFORMEDDATA } from './enums/reactive-props';\nimport { sanitizeLayerDef, getValuesMap } from './helper';\n\nexport default {\n    [CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig) => (\n                mergeRecursive(oldConfig || mergeRecursive({}, defaultConfig), config)\n            )\n        }\n    },\n    [LAYERDEFS]: {\n        value: null,\n        meta: {\n            preset: layerDef => sanitizeLayerDef(layerDef)\n        }\n    },\n    [TRANSFORM]: {\n        value: null\n    },\n    [LAYERS]: {\n        value: null\n    },\n    [DATA]: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel,\n            preset: (data, context) => {\n                context._cachedValuesMap = ((model) => {\n                    let valuesMap = null;\n                    return () => {\n                        if (valuesMap) {\n                            return valuesMap;\n                        }\n                        valuesMap = getValuesMap(model, context);\n                        return valuesMap;\n                    };\n                })(data);\n                if (context._cache) {\n                    const cachedData = context.cachedData();\n                    context.cachedData([...cachedData, data]);\n                } else {\n                    const oldData = context.cachedData()[0];\n                    oldData && oldData.unsubscribe('propagation');\n                    context.cachedData([data]);\n                }\n            }\n        }\n    },\n    [TRANSFORMEDDATA]: {\n        value: null\n    },\n    width: {\n        value: null\n    },\n    height: {\n        value: null\n    }\n};\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    setAttrs,\n    getUniqueId,\n    getQualifiedClassName,\n    selectElement,\n    transactor,\n    makeElement,\n    generateGetterSetters,\n    getDataModelFromIdentifiers,\n    isSimpleObject,\n    transposeArray,\n    CommonProps,\n    toArray,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { actionBehaviourMap } from './firebolt/action-behaviour-map';\nimport {\n    renderLayers,\n    getNearestDimensionalValue,\n    removeLayersBy,\n    getLayersBy,\n    getLayerFromDef,\n    getLayerAxisIndex,\n    sanitizeLayerDef,\n    createSideEffectGroup,\n    resolveEncodingTransform,\n    createRenderPromise,\n    setAxisRange\n} from './helper';\nimport { renderGridLineLayers, attachDataToGridLineLayers } from './helper/grid-lines';\nimport { calculateDomainListener, listenerMap } from './listener-map';\nimport { PROPS } from './props';\nimport UnitFireBolt from './firebolt';\nimport { initSideEffects, dispatchQueuedSideEffects, clearActionHistory } from './firebolt/helper';\nimport './styles.scss';\nimport localOptions from './local-options';\nimport { WIDTH, HEIGHT } from './enums/reactive-props';\n\nconst FORMAL_NAME = 'unit';\nconst unitNs = [STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE, STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE];\nconst groupNs = STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE;\n\n/**\n * Visual Unit is hierarchical component created by {@link VisualGroup}. This component accepts layer definitions\n * and creates concrete layer instances from them, binds data and attaches axis to them. It also retreives the domain\n * from the layers and unions them and sets them on corresponding axis instances. This also creates the parent svg\n * groups for all the layers and delegates the rendering to all the layers.\n *\n * @public\n * @module VisualUnit\n * @class\n */\nexport default class VisualUnit {\n\n    /**\n     * Creates instance of visualization unit.\n     *\n     * @param {Object} registry  Component registry\n     * @param {Object} dependencies  Dependencies required by visual unit.\n     */\n    constructor (registry, dependencies) {\n        this._id = getUniqueId();\n        this._dependencies = dependencies;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        createRenderPromise(this);\n        this._lifeCycleManager = dependencies.lifeCycleManager;\n        this._layersMap = {};\n        this._gridLinesSelection = null;\n        this._gridBandsSelection = null;\n        this._gridLines = [];\n        this._gridBands = [];\n        this._layerAxisIndex = {};\n        this._queuedLayerDefs = [];\n        layerFactory.setLayerRegistry(registry.layerRegistry);\n        generateGetterSetters(this, PROPS);\n        this.registry(registry);\n        this.cachedData([]);\n    }\n\n    static formalName () {\n        return FORMAL_NAME;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: null\n            },\n            Object.keys((localOptions)).reduce((acc, v) => {\n                acc[v] = localOptions[v].value;\n                return acc;\n            }, {})\n        ];\n    }\n\n    static getQualifiedStateProps () {\n        const unitState = VisualUnit.getState();\n        return unitState.map((state, i) => Object.keys(state).map(prop => `${unitNs[i]}.${prop}`));\n    }\n\n    static getListeners () {\n        return {\n            store: [...listenerMap.map((d) => {\n                const o = Object.assign({}, d);\n                const localNs = unitNs[1];\n                o.props = o.props.map(prop => `${localNs}.${prop}`);\n                return o;\n            }), {\n                type: 'registerImmediateListener',\n                props: [`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.domain`],\n                listener: calculateDomainListener\n            }, {\n                type: 'registerImmediateListener',\n                props: [`${unitNs[1]}.${WIDTH}`,\n                    `${unitNs[1]}.${HEIGHT}`,\n                    ...['x', 'y'].map(type => `${groupNs}.domain.${type}`)],\n                listener: (context, [, width], [, height]) => {\n                    if (width && height) {\n                        attachDataToGridLineLayers(context);\n                    }\n                },\n                subNamespace: (context) => {\n                    const { rowIndex, colIndex, namespace } = context.metaInf();\n                    return {\n                        [`${unitNs[1]}.${WIDTH}`]: namespace,\n                        [`${unitNs[1]}.${HEIGHT}`]: namespace,\n                        [`${groupNs}.domain.x`]: `${colIndex}0`,\n                        [`${groupNs}.domain.y`]: `${rowIndex}0`\n                    };\n                }\n            }],\n            throwback: [\n                {\n                    type: 'registerChangeListener',\n                    props: [CommonProps.ON_LAYER_DRAW],\n                    listener: (context, [, drawn]) => {\n                        if (drawn) {\n                            const firebolt = context.firebolt();\n                            dispatchQueuedSideEffects(firebolt);\n                            clearActionHistory(firebolt);\n                        }\n                        context._renderedResolve();\n                        context._lifeCycleManager.notify({\n                            client: context.layers(),\n                            action: 'drawn',\n                            formalName: 'layer'\n                        });\n                    }\n                }\n            ]\n        };\n    }\n\n    store (...params) {\n        if (params.length) {\n            const store = this._store = params[0];\n            const { throwback, fireboltDeps } = this._dependencies;\n            const { namespace } = this.metaInf();\n\n            store.addSubNamespace(namespace, FORMAL_NAME, this);\n            throwback.addSubNamespace(namespace, FORMAL_NAME, this);\n            transactor(this, localOptions, store, {\n                subNamespace: namespace,\n                namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}`\n            });\n\n            this.firebolt(new UnitFireBolt(this, {\n                physical: Object.assign({}, physicalActions, fireboltDeps.physicalActions),\n                behavioural: Object.assign({}, behaviouralActions, fireboltDeps.behaviouralActions),\n                physicalBehaviouralMap: actionBehaviourMap\n            }, Object.assign({}, sideEffects, fireboltDeps.sideEffects), behaviourEffectMap));\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Static helper for creates a unit instance\n     *\n     * @param {Object} [id] optional unique identifier for a unit; , id is calculated internally\n     * @param {DataModel} data instance of datamodel\n     * @param {Array.<Layer>} layers layer configuration\n     * @param {Object} config configurtion for the visual unit\n     * @return {VisualUnit} Instance of a unit\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this visual unit. Firebolt dispatches the behavioural actions\n     * when any physical action happens on the elements of visual unit.\n     *\n     * @public\n     *\n     * @return {Firebolt} Instance of firebolt.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Returns the unique id of this visual unit.\n     *\n     * @public\n     * @return {string} Unique identifier.\n     */\n    id () {\n        return this._id;\n    }\n\n    lockModel () {\n        this.store().lockModel();\n        return this;\n    }\n\n    unlockModel () {\n        this.store().unlockModel();\n        return this;\n    }\n\n    timeDiffsByField (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._timeDiffsByField;\n    }\n\n    /**\n     * Renders the visual unit. It creates the layout and renders the axes and layers.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    render (container) {\n        const config = this.config();\n        const { className, defClassName, sideEffectClassName, classPrefix } = config;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const width = this.width();\n        const height = this.height();\n        const containerSelection = selectElement(container).style('position', 'relative');\n\n        this._rootSvg = makeElement(containerSelection, 'svg', [null], className)\n                        .style('width', `${width}px`).style('height', `${height}px`);\n\n        const node = this._rootSvg.node();\n        setAttrs(node, {\n            width,\n            height,\n            class: qualifiedClassName.join(' ')\n        });\n\n        setAxisRange(this);\n        renderGridLineLayers(this, node);\n        renderLayers(this, node, this.layers(), {\n            width,\n            height\n        });\n        this._sideEffectGroup = createSideEffectGroup(node, `${classPrefix}-${sideEffectClassName}`);\n        const firebolt = this.firebolt();\n        initSideEffects(firebolt.sideEffects(), firebolt);\n        return this;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Caches all the datamodels in an array from the next `data()` call on visual unit until `clearCaching()` or\n     * `resetData()` is called on it.\n     *\n     * @public\n     * @return {VisualUnit} Instance of visual unit.\n     */\n\n    enableCaching () {\n        this._cache = true;\n        return this;\n    }\n\n    /**\n     * Clears all the previous cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    clearCaching () {\n        this._cache = false;\n        this.cachedData([this.cachedData()[0]]);\n        return this;\n    }\n\n    /**\n     * Returns the drawing information from visual unit.Drawing context contains the dimensions of unit and the svg\n     * container of the visual unit.\n     *\n     * @public\n     *\n     * @return {Object} Drawing information.\n     *      ```\n     *          {\n     *              htmlContainer: // Html container of svg container of the visual unit\n     *              svgContainer: // Root svg container\n     *              width: // Width of the visual unit\n     *              height: // Height of the visual unit\n     *              sideEffectGroup: // Svg group for drawing side effect elements.\n     *              parentContainer: // Parent html container of the visual unit.\n     *              xOffset: // x offset space from the starting x position of the container,\n     *              yOffset: // y offset space from the starting y position of the container\n     *          }\n     *      ```\n     */\n    getDrawingContext () {\n        const rootSvg = this._rootSvg && this._rootSvg.node();\n        const width = this.width();\n        const height = this.height();\n        const { el, dimensions } = this.parentContainerInf();\n        return {\n            htmlContainer: this.mount(),\n            svgContainer: rootSvg,\n            width,\n            height,\n            sideEffectGroup: this._sideEffectGroup,\n            parentContainer: el,\n            parentContainerDimensions: dimensions,\n            xOffset: 0,\n            yOffset: 0\n        };\n    }\n\n    /**\n     * Returns the serialized configuration of visual unit.\n     *\n     * @return {Object} serialized configuration\n     */\n    serialize () {\n        return {\n            layers: this.layers().map(layer => layer.serialize()),\n            config: this.config(),\n            axes: this.axes().map(axis => axis.serialize())\n        };\n    }\n\n    mount (...mount) {\n        if (mount.length) {\n            this._mount = mount[0];\n            this.render(mount[0]);\n            this.firebolt().mapActionsAndBehaviour();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     * Adds a new layer to the visual unit. It takes a layer definition and creates layer instances from them. It does\n     * not render the layers. It returns the layer instances in an array. If the layer definition is a composite layer,\n     * then multiple layer instances will be returned in the array.\n     *\n     * To add a layer in the unit,\n     * ```\n     *      unit.addLayer({\n     *          name: 'bullet',\n     *          mark: 'bar',\n     *          encoding: {\n     *              x: 'Year',\n     *              y: 'Acceleration',\n     *              color: 'Origin'\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} layerDef Definition of new layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    addLayer (layerDefinition) {\n        if (layerDefinition instanceof Function) {\n            this._queuedLayerDefs.push(layerDefinition);\n            return this;\n        }\n        const layerDefinitions = sanitizeLayerDef(toArray(layerDefinition));\n\n        const layersMap = this._layersMap;\n        const markSet = {};\n        const store = {\n            layers: {},\n            components: {\n                unit: this\n            }\n        };\n        let layerIndex = 0;\n        const metaInf = this.metaInf();\n        const layers = layerDefinitions.sort((a, b) => a.order - b.order).reduce((layersArr, layerDef) => {\n            const definition = layerDef.def;\n            const markId = definition.name;\n            const defArr = toArray(definition);\n            const namespaces = [];\n            defArr.forEach((def) => {\n                def.order = layerDef.order + layerIndex;\n                const namespace = `${metaInf.namespace}-${def.mark}-${getUniqueId()}`;\n                namespaces.push(namespace);\n            });\n            layerIndex += defArr.length;\n            const instances = getLayerFromDef(this, definition, layersMap[markId], namespaces);\n            store.layers = Object.assign(store.layers, instances);\n            const instanceValues = Object.values(instances);\n            layersArr = layersArr.concat(...instanceValues);\n            layersMap[markId] = instanceValues;\n            markSet[markId] = markId;\n            return layersArr;\n        }, []);\n\n        store.unit = this;\n        const layerdeps = {};\n        const layersArr = [].concat(...Object.values(this._layersMap));\n        layersArr.forEach((layer) => {\n            const alias = layer.alias();\n            store.layers[alias] = layer;\n            layerdeps[alias] = [];\n        });\n        layers.forEach((layer) => {\n            const depArr = resolveEncodingTransform(layer, store);\n            layerdeps[layer.alias()] = depArr;\n        });\n\n        this._layerDepOrder = layerdeps;\n        this._layerAxisIndex = Object.assign(this._layerAxisIndex, getLayerAxisIndex(layers, this.fields()));\n        this.layers(layersArr);\n        return layers;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    remove () {\n        const formalName = this.constructor.formalName();\n        const { lifeCycleManager, throwback } = this._dependencies;\n        const { namespace } = this.metaInf();\n        lifeCycleManager.notify({ client: this, action: 'beforeremove', formalName: 'unit' });\n        const layers = this.layers();\n        this.store().removeSubNamespace(namespace, formalName);\n        throwback.removeSubNamespace(namespace, FORMAL_NAME);\n        selectElement(this.mount()).remove();\n        this.firebolt().remove();\n        // Remove layers\n        lifeCycleManager.notify({ client: layers, action: 'beforeremove', formalName: 'layer' });\n        [...layers, ...this._gridLines, ...this._gridBands].forEach(layer => layer.remove());\n        lifeCycleManager.notify({ client: layers, action: 'removed', formalName: 'layer' });\n        lifeCycleManager.notify({ client: this, action: 'removed', formalName: 'unit' });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     *\n     * @memberof VisualUnit\n     */\n    getDataModelFromIdentifiers (identifiers, mode, parentModel, behaviourType) {\n        if (!identifiers) return null;\n        const dataModel = parentModel || this.data();\n        return getDataModelFromIdentifiers(dataModel, identifiers, mode, behaviourType);\n    }\n\n    /**\n     * Resets the data of visual unit to original data model. It also clears the cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    resetData () {\n        this.data(this.cachedData()[0]);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getSourceInfo () {\n        return {\n            dimensionMeasureMap: this._dimensionMeasureMap,\n            fields: this.fields(),\n            data: this.data(),\n            axes: this.axes()\n        };\n    }\n\n    getDataDomain () {\n        return this.store().get(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`, this.metaInf().namespace);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getDefaultTargetContainer () {\n        const { classPrefix, defClassName } = this.config();\n        return [`.${classPrefix}-${defClassName}`];\n    }\n\n    /**\n     * Returns an array of layer instances which matches the supplied mark type.\n     *\n     * @public\n     *\n     * @param {string} type Mark type of layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    getLayersByType (type) {\n        const layers = getLayersBy(this.layers(), 'type', type);\n        return layers;\n    }\n\n    /**\n     * Returns the layer instance which matches the supplied layer name. If no layer is found, then it returns\n     * undefined.\n     *\n     * @public\n     * @param {string} name Name of layer.\n     *\n     * @return {VisualUnit} Layer instance.\n     */\n    getLayerByName (name) {\n        const layers = getLayersBy(this.layers(), 'name', name);\n        return layers[0];\n    }\n\n    /**\n     * Returns the point located nearest to the supplied x and y position. It returns the unique identifiers of the\n     * point. This function also accepts an additional configuration `getAllPoints` inside `config` object in the third\n     * argument which if set to true, then it returns the identifiers of all the points which falls on the nearest\n     * x value or y value if any one of the field is a dimension. Additionally, a target property is also returned\n     * which contains the identifier of the nearest point. If no nearest point is found, then it returns identifier\n     * as null.\n     *\n     * @public\n     *\n     * @param {number} x X Position of the point from where nearest point is to be found.\n     * @param {number} y Y Position of the point from where nearest point is to be found.\n     * @param {Object} config Additional configuration options.\n     * @param {boolean} config.getAllPoints If true, then returns all the points nearest to the x value or y value if\n     * it is dimension.\n     * @param {Object} config.data Data associated with the nearest point.\n     * @return {Object} Nearest point information\n     * ```\n     *      {\n     *          id: [['Origin'], ['USA'], ['Japan']], // Identifiers of all the points closest to the x value.\n     *          target: [['Origin'], ['Japan']] // Identifier of the nearest point.\n     *      }\n     * ```\n     */\n    getNearestPoint (x, y, config) {\n        let pointObj = {\n            id: null\n        };\n        const dimValue = getNearestDimensionalValue(this, {\n            x,\n            y\n        });\n\n        if (dimValue !== null && config.getAllPoints) {\n            pointObj.id = dimValue;\n            const pointInf = this.getMarkInfFromLayers(x, y, config);\n            pointObj.target = pointInf && pointInf.id ? pointInf.id : pointObj.id;\n            return pointObj;\n        }\n\n        const markInf = this.getMarkInfFromLayers(x, y, config) || { id: null };\n        pointObj = Object.assign({}, markInf);\n\n        pointObj.target = markInf.id;\n        return pointObj;\n    }\n\n    getMarkInfFromLayers (x, y, args) {\n        const layers = this.layers();\n        const len = layers.length;\n        let point = null;\n        // Iterate through the layers array and fetch the nearest point from each layer. If a valid\n        // nearest point is found from any layer, then return that point.\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            const config = layer.config();\n            if (config.interactive !== false) {\n                point = layer.getNearestPoint(x, y, args);\n            }\n            if (point) {\n                return point;\n            }\n        }\n        return point;\n    }\n\n    /**\n     * Get the information of all the marks such as x, y position and size from supplied identifiers. It\n     * returns an array of points whose data matches the given identifiers.\n     *\n     * @public\n     *\n     * @param {Array|Object} identifiers Field names and their corresponding values.\n     * ```\n     * identifiers can be given in an array of array,\n     *      ['Origin', 'Name'], // Names of the fields supplied in first array\n     *      ['USA', 'ford'], // Data values of each field supplied in rest of the arrays.\n     *      ['Japan', 'ford']\n     * or in an object,\n     *      {\n     *          Origin: ['USA']\n     *      }\n     * ```\n     * @param {Object} config Optional configurations which decides which information of the mark will\n     * be retrieved.\n     * @param {boolean} [config.getAllAttrs = false] If true, then returns all the information of each mark.\n     * @param {boolean} [config.getBBox = false] If true, then returns the bounding box of each mark.\n     *\n     * @return {Array} Array of objects containing the information of each point.\n     * ```\n     * By default, the method returns the array of points in this structure,\n     *      [\n     *          {\n     *              x: 20,\n     *              y: 100,\n     *              width: 200,\n     *              height: 100\n     *          }\n     *      ]\n     * If 'config.getAllAttrs' is true, then it returns all the information of each mark,\n     *      [\n     *      // Positions of mark on initial state of transition.\n     *          enter: {\n     *              x: 0,\n     *              y: 0\n     *          },\n     *          // Final positions of the mark\n     *          update: {\n     *              x: 20,\n     *              y: 10\n     *          },\n     *          style: // css styles of each mark\n     *          source: [200, 'USA'] // Row information of each mark\n     *          id: 20 // Row id of each mark\n     *      ]\n     * ```\n     */\n    getPlotPointsFromIdentifiers (identifiers, config = {}) {\n        let points = [];\n        let parsedIdentifiers = identifiers;\n        if (identifiers === null) {\n            return [];\n        }\n        const layers = this.layers();\n        const len = layers.length;\n        if (isSimpleObject(identifiers)) {\n            parsedIdentifiers = [Object.keys(identifiers)];\n            parsedIdentifiers = [...parsedIdentifiers, ...transposeArray(Object.values(identifiers))];\n        }\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            if (layer.config().interactive !== false) {\n                points = [...points, ...layer.getPointsFromIdentifiers(parsedIdentifiers, config)];\n            }\n        }\n        return points;\n    }\n\n    /**\n     * Removes the layer instance which matches the supplied layer name.\n     *\n     * @public\n     * @param {string} name Name of layer\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayerByName (name) {\n        removeLayersBy('name', name);\n        return this;\n    }\n\n    /**\n     * Removes all the layer instances which matches the supplied mark type.\n     *\n     * @public\n     * @param {string} type Mark type of layer.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayersByType (type) {\n        removeLayersBy('type', type);\n        return this;\n    }\n}\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n *\n *\n * @export\n * @class Variable\n */\nexport default class Variable {\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    type () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    toString () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n","import Variable from './variable';\n\n/**\n * This is a wrapper on top of multiple variables which are of same type but they are shown in the same axis.This is\n * required in case of range plots or ohlc plots where one plot is mapped to multiple measure fields. At that time,\n * we need to create a composed variable from multiple variables. This class just wraps them into one variable instance\n * and provides methods to get the type and other common functionalities which can be performed on a simple variable\n * instance.\n *\n * @public\n * @class ComposeVars\n */\nclass ComposedVars extends Variable {\n\n    /**\n     * Creates an instance of ComposeVars.\n     *\n     * @param {Array} vars Array of SimpleVars.\n     */\n    constructor (...vars) {\n        super();\n        this.vars(vars);\n    }\n\n    vars (...params) {\n        if (params.length) {\n            this._vars = params[0];\n            return this;\n        }\n        return this._vars;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this.vars().forEach(d => d.data(dm[0]));\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    /**\n     * Get all the field names from composed variable instance.\n     *\n     * @public\n     * @return {Array} Array of field names.\n     */\n    getMembers () {\n        const vars = this.vars();\n        return vars.map(member => member.getMembers()[0]);\n    }\n\n    /**\n     * Type of field associated with this composed variable.\n     *\n     * @return {string} Type of variable (Measure/Dimension).\n     */\n    type () {\n        return this.vars()[0].type();\n    }\n\n    toString () {\n        return this.vars().map(d => d.toString()).join(',');\n    }\n\n    /**\n     * Returns the number formatter function of the variable.\n     *\n     * @return {Function} Number formatter function of the variable.\n     */\n    numberFormat () {\n        return this.vars()[0].numberFormat();\n    }\n\n    format (values) {\n        return this.vars()[0].format(values);\n    }\n\n    getSchemaDef () {\n        return this.data().getFieldsConfig()[this.vars()[0]].def;\n    }\n\n    /**\n     * Returns the subtype of the fields associated with this variable instance.\n     *\n     * @public\n     * @return {string} Subtype of the variable.\n     */\n    subtype () {\n        return this.vars()[0].subtype();\n    }\n\n    /**\n     * Returns the consecutive minimum difference of the field values.\n     *\n     * @public\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        return this.vars()[0].getMinDiff();\n    }\n\n    /**\n     * Returns the display name of the fields.\n     *\n     * @return {string} returns the display name.\n     */\n    displayName () {\n        return this.vars().map(d => d.displayName()).join(',');\n    }\n}\n\nexport default ComposedVars;\n","import { DateTimeFormatter, retrieveFieldDisplayName, DimensionSubtype } from 'muze-utils';\nimport Variable from './variable';\n\n/**\n * This is a wrapper on top of fields passed in rows or columns in canvas. This is used to get the type of field or\n * get min difference from the field values.\n *\n * @public\n * @class SimpleVariable\n */\nexport default class SimpleVariable extends Variable {\n\n    /**\n     * Creates an instance of simple variable instance.\n     *\n     * @param {string} name Field name.\n     */\n    constructor (name) {\n        super();\n        this.oneVar(name);\n    }\n\n    /**\n     * Gets the field name associated with this variable instance.\n     *\n     * @public\n     * @return {string} Name of the field.\n     */\n    oneVar (...oneV) {\n        if (oneV.length) {\n            this._oneVar = oneV[0];\n            return this;\n        }\n        return this._oneVar;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    toString () {\n        return this.oneVar();\n    }\n\n    /**\n     * Gets the number formatter function of this variable.\n     *\n     * @public\n     * @return {Function} Number formatter function.\n     */\n    numberFormat () {\n        if (this.type() === 'measure') {\n            const formatter = this.data().getFieldspace().getMeasure()[this.oneVar()];\n            return formatter.numberFormat();\n        } return val => val;\n    }\n\n    format (values) {\n        if (values && this.subtype() === 'temporal') {\n            const formatter = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            const dtFormat = new DateTimeFormatter(formatter);\n            values = values.map(e => dtFormat.getNativeDate(e));\n        }\n        return values;\n    }\n\n    /**\n     * Returns a formatter function which transforms the input value to its original form.\n     *\n     * @public\n     * @return {Function} Returns raw formatter function.\n     */\n    rawFormat () {\n        if (this.subtype() === DimensionSubtype.TEMPORAL) {\n            const dateFormat = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            return val => DateTimeFormatter.formatAs(val, dateFormat);\n        }\n        return val => val;\n    }\n\n    /**\n     * Return the field names associated with this variable instance.\n     *\n     * @public\n     * @return {Array} Array of fields.\n     */\n    getMembers () {\n        return [this.oneVar()];\n    }\n\n    /**\n     * Returns the type of the variable. Whether it is measure or dimension.\n     *\n     * @public\n     * @return {string} Type of variable.\n     */\n    type () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.type;\n    }\n\n    /**\n     * Returns the subtype of the variable. Subtype can be categorical or temporal. If no subtype is found, then it\n     * returns the type of the variable.\n     *\n     * @public\n     * @return {string} Subtype of variable.\n     */\n    subtype () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.subtype || fieldDef.type;\n    }\n\n    /**\n     * Returns the minimum consecutive difference between the data values of this variable.\n     *\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        const fieldSpace = this.data().getFieldspace();\n        return fieldSpace.fieldsObj()[this.oneVar()].minimumConsecutiveDifference();\n    }\n\n    /**\n     * Returns true if two variable instances are same.If both variable has the same field names, they are equal.\n     *\n     * @return {Boolean} Whether two variable instances are same.\n     */\n    equals (varInst) {\n        return this.oneVar() === varInst.oneVar();\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @return {string} returns the display name.\n     */\n    displayName () {\n        return retrieveFieldDisplayName(this.data(), this.oneVar());\n    }\n\n    /**\n     * Returns the schema defination of the field.\n     *\n     * @return {Object} schema def\n     */\n    getSchemaDef () {\n        return this.data().getFieldsConfig()[this.oneVar()].def;\n    }\n}\n","import { ComposedVars, SimpleVariable } from '../variable';\nimport { DIMENSION, COLUMNS, ROWS, TEMPORAL } from '../enums/constants';\n\n/**\n * Gets the list of fields in a sorted order by measurement and dimension\n *\n * @param {Array} fieldList List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields sorted by measurement and dimensions\n */\nconst orderFields = (fieldArray, type) => {\n    const dimensionArr = [[], []];\n    const measureArr = [[], []];\n    const temporalArr = [[], []];\n    const categoricalArr = [[], []];\n\n    fieldArray.forEach((fieldList, index) => {\n        fieldList.forEach((field) => {\n            if (field.type() === DIMENSION) {\n                dimensionArr[index].push(field);\n                field.subtype() === TEMPORAL ? temporalArr[index].push(field) : categoricalArr[index].push(field);\n            } else {\n                measureArr[index].push(field);\n            }\n        });\n    });\n\n    const numOfMeasures = measureArr[0].length + (measureArr[1] ? measureArr[1].length : 0);\n\n    // Single array of fields\n    if (!fieldArray[1]) {\n        // Push measures to bottom\n        measureArr[1] = type === COLUMNS ? measureArr[0] : [];\n        // Push measures to left\n        measureArr[0] = type !== COLUMNS ? measureArr[0] : [];\n        // Bottom and right dimensions empty\n        dimensionArr[1] = [];\n        // Left and top filled with dimensions\n        dimensionArr[0] = dimensionArr[0];\n        if (numOfMeasures === 0) {\n            const allDimensions = [...dimensionArr[0], ...dimensionArr[1]];\n            if (type === COLUMNS) {\n                dimensionArr[1] = allDimensions[allDimensions.length - 1] ? [allDimensions[allDimensions.length - 1]]\n                        : [];\n                allDimensions.splice(-1, 1);\n            } else {\n                dimensionArr[1] = [];\n            }\n            dimensionArr[0] = [...allDimensions];\n        }\n    }\n\n    if (dimensionArr[0].length && dimensionArr[1].length && numOfMeasures > 0) {\n        dimensionArr[0] = [...dimensionArr[0], ...dimensionArr[1]];\n        dimensionArr[1] = [];\n    }\n    return {\n        fields: dimensionArr.map((list, i) => (i === 1 ?\n            measureArr[i].concat(dimensionArr[i]) : dimensionArr[i].concat(measureArr[i]))),\n        dimensions: [...dimensionArr[0], ...dimensionArr[1]],\n        measures: [...measureArr[0], ...measureArr[1]],\n        temporal: [...temporalArr[0], ...temporalArr[1]],\n        categorical: [...categoricalArr[0], ...categoricalArr[1]]\n    };\n};\n\n/**\n * Gets the list of normalized fields\n *\n * @param {Array} fields List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields normalized by measurement and dimensions\n */\nconst normalizeFields = (config, type) => {\n    const fieldsArr = [];\n    const fields = config[type];\n\n    if (!(fields[0] instanceof Array)) {\n        fieldsArr[0] = fields;\n    } else {\n        fieldsArr[0] = fields[0] || [];\n        fieldsArr[1] = fields[1] || [];\n    }\n    return fieldsArr;\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} datamodel\n *\n */\nconst convertToVar = (datamodel, fields) => {\n    const vars = [];\n\n    fields && fields.forEach((field) => {\n        if (field instanceof ComposedVars) {\n            vars.push(field);\n            field.data(datamodel);\n        } else {\n            vars.push(new SimpleVariable(field).data(datamodel));\n        }\n    });\n    return vars;\n};\n\n/**\n *\n *\n * @param {*} rows\n * @param {*} columns\n * @param {*} datamodel\n *\n */\nexport const transformFields = (datamodel, config) => {\n    const [rowsInfo, columnsInfo] = [ROWS, COLUMNS].map((fields) => {\n        const normalizedFields = normalizeFields(config, fields);\n        const norFields = [convertToVar(datamodel, normalizedFields[0])];\n\n        if (normalizedFields[1]) {\n            norFields[1] = convertToVar(datamodel, normalizedFields[1]);\n        }\n        return orderFields(norFields, fields);\n    });\n    const {\n        fields: rows,\n        dimensions: rowDimensions,\n        measures: rowMeasures,\n        temporal: rowTemporalFields,\n        categorical: rowCategoricalFields\n    } = rowsInfo;\n    const {\n        fields: columns,\n        dimensions: columnDimensions,\n        measures: columnMeasures,\n        temporal: columnTemporalFields,\n        categorical: columnCategoricalFields\n    } = columnsInfo;\n    return {\n        rows,\n        rowDimensions,\n        rowMeasures,\n        rowTemporalFields,\n        rowCategoricalFields,\n        columns,\n        columnTemporalFields,\n        columnCategoricalFields,\n        columnDimensions,\n        columnMeasures\n    };\n};\n","import { ERROR_MSG, mergeRecursive } from 'muze-utils';\nimport { transformFields } from './field-sanitizer';\nimport { getHeaderAxisFrom } from '../group-helper/group-utils';\nimport { ROW, COLUMN } from '../enums/constants';\n\n/**\n *\n *\n * @export\n * @class VisualEncoder\n */\nexport default class VisualEncoder {\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    createAxis () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    setCommonDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    getLayerConfig () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    fieldInfo (...info) {\n        if (info.length) {\n            this._fieldInfo = mergeRecursive(this._fieldInfo || {}, info[0]);\n            return this;\n        }\n        return this._fieldInfo;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof VisualEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        this.fieldInfo(transformFields(datamodel, config));\n        return this.fieldInfo();\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    axisFrom (...params) {\n        if (params.length) {\n            this._axisFrom = params[0];\n            return this;\n        }\n        return this._axisFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    headerFrom (...params) {\n        if (params.length) {\n            this._headerFrom = params[0];\n            return this;\n        }\n        return this.__headerFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axisFrom\n     *\n     * @memberof CartesianEncoder\n     */\n    setAxisAndHeaders (axisFrom = {}, fields) {\n        const [rowHeader, rowAxis] = getHeaderAxisFrom(ROW, fields.rows, axisFrom);\n        const [colHeader, colAxis] = getHeaderAxisFrom(COLUMN, fields.columns, axisFrom);\n\n        this.axisFrom({\n            row: rowAxis,\n            column: colAxis\n        });\n        this.headerFrom({\n            row: rowHeader,\n            column: colHeader\n        });\n        return this;\n    }\n}\n","import { ContinousAxis, BandAxis, TimeAxis, ColorAxis, SizeAxis, ShapeAxis } from '@chartshq/muze-axis';\n\nexport const scaleMaps = {\n    linear: ContinousAxis,\n    band: BandAxis,\n    temporal: TimeAxis,\n    size: SizeAxis,\n    color: ColorAxis,\n    shape: ShapeAxis\n};\n","import { ScaleType } from '@chartshq/muze-axis';\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    dimension: ScaleType.BAND,\n    categorical: ScaleType.BAND,\n    temporal: ScaleType.TIME,\n    measure: ScaleType.LINEAR,\n    continuous: ScaleType.LINEAR\n};\n","import { mergeRecursive, getObjProp } from 'muze-utils';\nimport { AxisOrientation } from '@chartshq/muze-axis';\nimport { ENCODING } from '@chartshq/visual-layer';\nimport { scaleMaps } from '../enums/scale-maps';\nimport { getAxisType, getAxisKey } from '../group-helper';\nimport { dataTypeScaleMap } from '../data-type-scale-map';\nimport { CATEGORICAL, TEMPORAL, BAR, LINE, POINT, BOTH, Y, COLOR, SHAPE, SIZE, ANGLE0 } from '../enums/constants';\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst getAxisConfig = (axisInfo, field, axesCreators, indices, facetFields) => {\n    let axisOrientation;\n    const { index, axisIndex, axisType } = axisInfo;\n    const { config, position } = axesCreators;\n    const { rowIndex, columnIndex } = indices;\n    const rawUserAxisConfig = config.axes ? (config.axes[axisType] || {}) : {};\n\n    // Change config object to a function if not already one\n    const userAxisConfigFn = typeof rawUserAxisConfig !== 'function' ?\n    () => rawUserAxisConfig : rawUserAxisConfig;\n    const userAxisConfig = userAxisConfigFn(rowIndex, columnIndex, {\n        axisFields: field.getMembers(),\n        facetFields\n    });\n\n    // If current config does not specifes config for an axis, retain old config\n    if (!userAxisConfig) {\n        return {};\n    }\n\n    const {\n        LEFT,\n        RIGHT,\n        TOP,\n        BOTTOM\n    } = AxisOrientation;\n    const allOrientations = axisType === Y ? [LEFT, RIGHT] : [TOP, BOTTOM];\n\n    if (position === BOTH) {\n        axisOrientation = allOrientations[axisIndex];\n    } else {\n        axisOrientation = position;\n    }\n    const axisConfig = {\n        id: `${axisType}-${index}-${axisIndex}`,\n        name: field.displayName(),\n        field: field.toString(),\n        numberFormat: field.numberFormat(),\n        orientation: axisOrientation,\n        showAxisName: true,\n        show: true,\n        type: dataTypeScaleMap[field.subtype()]\n    };\n    userAxisConfig.tickValues = field.format(userAxisConfig.tickValues);\n    userAxisConfig.domain = field.format(userAxisConfig.domain);\n\n    return mergeRecursive(axisConfig, userAxisConfig);\n};\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst createSimpleAxis = (axisConfig, field, axesCreators) => {\n    const { labelManager } = axesCreators;\n    const Cls = scaleMaps[dataTypeScaleMap[field.subtype()]];\n    const simpleAxis = new Cls(axisConfig, { labelManager });\n    return simpleAxis;\n};\n\nexport const getAdjustedDomain = (max, min) => {\n    const y1ratio = max[0] / (max[0] - min[0]);\n    const y2ratio = max[1] / (max[1] - min[1]);\n\n    // adjust min/max values for positive negative values zero line etc\n    let allSameSign = false;\n\n    // if all numbers are positive set floor to zero\n    if (min[0] > 0 && min[1] > 0 && min[1] > 0 && max[1] > 0) {\n        allSameSign = true;\n        min[0] = 0;\n        min[1] = 0;\n    }\n\n    // if all numbers are negative set ceiling to zero\n    if (min[0] < 0 && min[1] < 0 && min[1] < 0 && max[1] < 0) {\n        allSameSign = true;\n        max[0] = 0;\n        max[1] = 0;\n    }\n\n    // align zero line if necessary\n    if (!allSameSign && y1ratio !== y2ratio) {\n        if (y1ratio < y2ratio) {\n                    // adjust min[1]\n            min[1] = min[0] / max[0] * max[1];\n        } else {\n                    // adjust min[0]\n            min[0] = min[1] / max[1] * max[0];\n        }\n    }\n    return [\n        [min[0], max[0]],\n        [min[1], max[1]]\n    ];\n};\n\n/**\n *\n *\n * @param {*} axisType\n * @param {*} fieldInfo\n * @param {*} axesCreators\n * @param {*} groupAxes\n *\n */\nexport const generateAxisFromMap = (axisType, fieldInfo, axesCreators, axesInfo, indices, facetFields) => {\n    let axisKey;\n    const { groupAxes, valueParser } = axesInfo;\n    const currentAxes = [];\n    const { fields, index } = fieldInfo;\n    const { cacheMaps } = axesCreators;\n    const map = cacheMaps[`${axisType}AxesMap`];\n\n    const commonAxisKey = getAxisKey(axisType, index);\n    fields.forEach((field, axisIndex) => {\n        axisKey = getAxisKey(axisType, index, axisIndex, dataTypeScaleMap[field.subtype()]);\n        const axisConfig = getAxisConfig({ index, axisIndex, axisType }, field, axesCreators, indices, facetFields);\n\n        let axis;\n        if (!map.has(axisKey)) {\n            axis = createSimpleAxis(axisConfig, field, axesCreators);\n        } else {\n            axis = map.get(axisKey);\n            axis._rotationLock = false;\n            axis.config(axisConfig);\n        }\n        axis.valueParser(valueParser);\n        currentAxes.push(axis);\n        map.set(axisKey, axis);\n    });\n\n    if (currentAxes.length) {\n        map.set(commonAxisKey, currentAxes);\n        groupAxes.add(commonAxisKey);\n    }\n\n    return currentAxes;\n};\n\nexport const sanitizeIndividualLayerConfig = (encodingConfigs, def) => {\n    [COLOR, SHAPE, SIZE].forEach((axis) => {\n        if (encodingConfigs[axis] && encodingConfigs[axis].field) {\n            def.forEach((conf) => {\n                conf.encoding = conf.encoding || {};\n                !conf.encoding[axis] && (conf.encoding[axis] = {});\n                conf.encoding[axis].field = encodingConfigs[axis].field;\n            });\n        }\n    });\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n    const xAxes = [];\n    const yAxes = [];\n\n    xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes.push(xAxis);\n    });\n    yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes.push(yAxis);\n    });\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n * return a default mark based on predefined set of rules of type and subtype of the fields\n *\n * @param {string} colFieldType dimension/measure - temporal/ordinal/nominal\n * @param {string} rowFieldType dimension/measure - temporal/ordinal/nominal\n * @return {Object} return mark type\n */\nexport const getDefaultMark = (colFieldType, rowFieldType) => {\n    let mark;\n\n    if (colFieldType === CATEGORICAL || rowFieldType === CATEGORICAL) {\n        mark = BAR;\n    } else if (colFieldType === TEMPORAL || rowFieldType === TEMPORAL) {\n        mark = LINE;\n    } else {\n        mark = POINT;\n    }\n\n    return mark;\n};\n\n/**\n *\n *\n * @param {*} axesCreators\n * @param {*} [fieldInfo=[]]\n *\n */\nexport const createRetinalAxis = (axesCreators, fieldProps = {}) => {\n    const { axisType, fieldsConfig } = axesCreators;\n    const field = fieldProps.field;\n    const axis = [];\n    const Cls = scaleMaps[axisType];\n\n    fieldProps.type = fieldProps.type ? fieldProps.type : getAxisType(fieldsConfig, field || null);\n    axis.push(new Cls(fieldProps));\n    return axis;\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} val\n *\n */\nexport const getIndex = (arr, val) => {\n    let i = 0;\n    let arrIndex = -1;\n\n    while (arrIndex === -1 && i < arr.length) {\n        if (arr[i].toString() === val.toString()) {\n            arrIndex = i;\n        }\n        i++;\n    }\n    return arrIndex;\n};\n\n/**\n *\n *\n * @param {*} colFields\n * @param {*} rowFields\n * @param {*} userLayerConfig\n *\n * @memberof CartesianEncoder\n */\nexport const getLayerConfFromFields = (colFields, rowFields, userLayerConfig) => userLayerConfig.filter((conf) => {\n    const userConf = conf instanceof Array ? conf : [conf];\n    const encodingArr = [].concat(...userConf.map(d => d.encoding).filter(d => d !== undefined));\n\n    if (!encodingArr.length) {\n        return true;\n    }\n\n    const xFields = [].concat(...encodingArr.map(d => [d.x && d.x.field, d.x0 && d.x0.field]))\n                .filter(d => d !== undefined && d !== null);\n    const yFields = [].concat(...encodingArr.map(d => [d.y && d.y.field, d.y0 && d.y0.field]))\n                .filter(d => d !== undefined && d !== null);\n\n    if (!xFields.length && !yFields.length) {\n        return true;\n    }\n\n    const colFieldExist = xFields.length ? xFields.every(d => colFields.indexOf(d) !== -1) : false;\n    const rowFieldExist = yFields.length ? yFields.every(d => rowFields.indexOf(d) !== -1) : false;\n    if (xFields.length && yFields.length) {\n        return colFieldExist && rowFieldExist;\n    }\n    return colFieldExist || rowFieldExist;\n});\n\nexport const resolveAxisConfig = (context, fieldInf, axisInfo) => {\n    const { rowIndex, columnIndex, axesObj } = axisInfo;\n    const { config, facetFields, resolver } = context;\n    const resolverAxes = resolver.axes();\n    const { RADIUS, ANGLE } = ENCODING;\n    [RADIUS, ANGLE, ANGLE0].forEach((enc) => {\n        const axesArr = resolverAxes[enc];\n        if (!axesArr[rowIndex]) {\n            axesArr[rowIndex] = [];\n        }\n        axesArr[rowIndex][columnIndex] = axesObj[enc];\n        const axisConfig = getObjProp(config.axes, enc) || {};\n\n        axesObj[enc].forEach((axis, i) => {\n            let userConfig = axisConfig;\n            if (axisConfig instanceof Function) {\n                userConfig = axisConfig(rowIndex, columnIndex, {\n                    axisFields: [fieldInf[enc][i]],\n                    facetFields\n                });\n            }\n            axis.config(userConfig);\n        });\n    });\n};\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    mergeRecursive,\n    STATE_NAMESPACES,\n    unionDomain,\n    COORD_TYPES,\n    toArray,\n    sortCategoricalField\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport {\n    generateAxisFromMap,\n    getDefaultMark,\n    getIndex,\n    getLayerConfFromFields,\n    getAdjustedDomain,\n    sanitizeIndividualLayerConfig\n} from './encoder-helper';\nimport { retriveDomainFromData } from '../group-helper';\n\nimport { ROW, COLUMN, COL, LEFT, TOP, MEASURE, BOTH, X, Y } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\nconst CARTESIAN = COORD_TYPES.CARTESIAN;\n\n/**\n *\n *\n * @export\n * @class CartesianEncoder\n * @extends {VisualEncoder}\n */\nexport default class CartesianEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     *\n     * @memberof CartesianEncoder\n     */\n    static type () {\n        return CARTESIAN;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof CartesianEncoder\n     */\n    createAxis (axesCreators, fieldInfo, context) {\n        const geomCellAxes = {};\n        const {\n            axes\n        } = axesCreators;\n        const {\n            projections,\n            indices\n        } = fieldInfo;\n        const {\n            rowFields,\n            columnFields\n        } = projections;\n        const {\n             rowIndex,\n             columnIndex\n        } = indices;\n        const axisFields = [{\n            fields: rowFields,\n            index: rowIndex\n        }, {\n            fields: columnFields,\n            index: columnIndex\n        }];\n        const { resolver, facetFields, geomCell } = context;\n        const xAxes = axes.x || [];\n        const yAxes = axes.y || [];\n\n        [rowFields, columnFields].forEach((fields, i) => {\n            const type = i === 0 ? ROW : COLUMN;\n            const axis = i === 0 ? Y : X;\n\n            if (fields.length > 1) {\n                axesCreators.position = BOTH;\n            } else {\n                axesCreators.position = this.axisFrom()[type];\n            }\n            geomCellAxes[axis] = generateAxisFromMap(axis, axisFields[i], axesCreators, {\n                groupAxes: axis === X ? xAxes : yAxes,\n                valueParser: resolver.valueParser()\n            }, indices, facetFields);\n        });\n        geomCell.axes(geomCellAxes);\n        return geomCellAxes;\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const resolver = context.resolver();\n        const units = resolver.units();\n        const domains = {\n            0: {},\n            1: {}\n        };\n        const config = context.config();\n        const fieldsObj = {\n            0: {},\n            1: {}\n        };\n\n        for (let rIdx = 0, len = units.length; rIdx < len; rIdx++) {\n            const unitsArr = units[rIdx];\n            for (let cIdx = 0, len2 = unitsArr.length; cIdx < len2; cIdx++) {\n                const unit = unitsArr[cIdx];\n                const axisFields = unit.fields();\n                const encodingDomains = unit.getDataDomain();\n                ['x', 'y'].forEach((axisType, axisTypeIndex) => {\n                    const fieldArr = axisFields[axisType];\n                    fieldArr.forEach((field, axisIndex) => {\n                        const key = !axisTypeIndex ? `0${cIdx}${axisIndex}` : `${rIdx}0${axisIndex}`;\n                        const dom = encodingDomains[axisType];\n                        const typeOfField = field.subtype();\n                        fieldsObj[axisTypeIndex][key] = field;\n\n                        if (dom && Object.keys(dom).length !== 0) {\n                            domains[axisTypeIndex][key] = unionDomain([(domains[axisTypeIndex] &&\n                                domains[axisTypeIndex][key]) || [], dom[`${field}`]], typeOfField);\n                        }\n                    });\n                });\n            }\n        }\n\n        const { x: xAxes, y: yAxes } = resolver.axes();\n        store.lockModel();\n        [xAxes, yAxes].forEach((axesArr, axisType) => {\n            axesArr.forEach((axes, idx) => {\n                let key;\n                let domain = [];\n                let adjustedDomain = [];\n                const min = [];\n                const max = [];\n                const typeOfAxis = axes[0].constructor.type();\n\n                if (axes.length > 1 && typeOfAxis === ScaleType.LINEAR && axes[0].config().alignZeroLine) {\n                    axes.forEach((axis, i) => {\n                        key = !axisType ? `0${idx}${i}` : `${idx}0${i}`;\n                        domain = domains[axisType][key];\n                        min[i] = domain[0];\n                        max[i] = domain[1];\n                    });\n                    adjustedDomain = getAdjustedDomain(max, min);\n                } else if (typeOfAxis === ScaleType.BAND) {\n                    /* Sort categorical fields to ensure consistency across all rows\n                    only if sorted by user */\n                    key = !axisType ? `0${idx}0` : `${idx}00`;\n                    const currentFieldName = fieldsObj[axisType][key].oneVar();\n                    const sortingOrder = config.sort && config.sort[currentFieldName];\n\n                    if (sortingOrder) {\n                        domains[axisType][key].sort((a, b) => sortCategoricalField(sortingOrder, a, b));\n                    }\n                }\n\n                axes.forEach((axis, index) => {\n                    key = !axisType ? `0${idx}${index}` : `${idx}0${index}`;\n                    domain = adjustedDomain[index] || domains[axisType][key];\n\n                    domain && axis.domain(domain);\n                    const type = !axisType ? 'x' : 'y';\n                    store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type}`, domain, `${idx}${index}`);\n                });\n            });\n        });\n        store.unlockModel();\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields, type) {\n        let facets = [];\n        let projections = [];\n        let counter = 0;\n        const primaryFacets = [];\n        const secondaryFacets = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n        const axisFrom = this.axisFrom();\n\n        for (let i = 0; i < primaryLen; i++) {\n            let projArr = [primaryFields[i]];\n            const primaryField = primaryFields[i];\n\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter];\n                if (secondaryField && secondaryField.type() === MEASURE) {\n                    counter++;\n                    projArr = [primaryField, secondaryField];\n                }\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n                primaryFacets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                    secondaryFacets.push(secondaryField);\n                }\n            }\n        }\n        if ((primaryFacets.length || secondaryFacets.length) && !projections.length) {\n            type = type === COL ? COLUMN : type;\n            if ((axisFrom[type] === LEFT || axisFrom[type] === TOP) && primaryFacets.length) {\n                const axisFromIndex = primaryFacets.length - 1;\n                const facet = primaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(secondaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    secondaryFacets.splice(existIndex, 1);\n                }\n                primaryFacets.splice(axisFromIndex, 1);\n            } else {\n                const axisFromIndex = 0;\n                const facet = secondaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(primaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    primaryFacets.splice(existIndex, 1);\n                }\n                secondaryFacets.splice(axisFromIndex, 1);\n            }\n        }\n\n        facets = [...primaryFacets, ...secondaryFacets];\n        facets = facets.filter((el, index, self) => index === self.findIndex(t => (t.toString() === el.toString())));\n        return {\n            facets,\n            projections\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof CartesianEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        return super.fieldSanitizer(datamodel, config);\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     *\n     * @memberof CartesianEncoder\n     */\n    getRetinalFieldsDomain (dataModels, encoding) {\n        const groupedModel = dataModels.groupedModel;\n        const domains = {};\n        for (const key in encoding) {\n            if ({}.hasOwnProperty.call(encoding, key)) {\n                const encodingObj = encoding[key];\n                const field = encodingObj.field;\n                if (!encodingObj.domain && field) {\n                    const domain = retriveDomainFromData(groupedModel, field);\n                    domains[field] = domain;\n                }\n            }\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     * @memberof CartesianEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n        // let currentLayerIndex = 0;\n        layerArray.length && layerArray.forEach((layer, i) => {\n            const def = layerFactory.sanitizeLayerConfig(layer);\n            def.order = i;\n            serializedLayers.push(def);\n        });\n        return serializedLayers;\n    }\n\n    sanitizeLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n        userLayerConfig.forEach((config) => {\n            const def = toArray(config.def);\n            sanitizeIndividualLayerConfig(encodingConfigs, def);\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof CartesianEncoder\n     */\n    getLayerConfig (fields, userLayerConfig, retinalConfig) {\n        const layerConfig = [];\n        const {\n            columnFields,\n            rowFields\n        } = fields;\n\n        // let currentLayerIndex = 0;\n        columnFields.forEach((colField) => {\n            const colFieldName = colField.toString();\n            rowFields.forEach((rowField) => {\n                let configs = [];\n                const rowFieldName = rowField.toString();\n                const encoding = {\n                    x: {\n                        field: colFieldName\n                    },\n                    y: {\n                        field: rowFieldName\n                    }\n                };\n                const rowFieldType = rowField.subtype();\n                const colFieldType = colField.subtype();\n                const mark = getDefaultMark(colFieldType, rowFieldType);\n\n                const defConfigs = [{\n                    mark,\n                    def: {\n                        mark,\n                        encoding\n                    }\n                }];\n\n                const layerConfigs = getLayerConfFromFields(colField.getMembers(),\n                    rowField.getMembers(), userLayerConfig || []);\n                if (layerConfigs.length) {\n                    configs = layerConfigs.map((layerConf) => {\n                        const mergedLayerConf = mergeRecursive(mergeRecursive({}, defConfigs[0].def), layerConf);\n                        const serializedLayerConfig = layerFactory.getSerializedConf(mergedLayerConf.mark,\n                            mergedLayerConf);\n                        return {\n                            mark: mergedLayerConf.mark,\n                            order: mergedLayerConf.order,\n                            def: serializedLayerConfig\n                        };\n                    });\n                } else {\n                    configs = defConfigs;\n                }\n\n                layerConfig.push(...configs);\n            });\n        });\n        return this.sanitizeLayerConfig(retinalConfig, layerConfig);\n    }\n}\n","import { AngleAxis, RadiusAxis } from '@chartshq/muze-axis';\nimport { layerFactory, ENCODING } from '@chartshq/visual-layer';\nimport {\n    mergeRecursive,\n    STATE_NAMESPACES,\n    GROUP_BY_FUNCTIONS,\n    COORD_TYPES,\n    toArray,\n    getObjProp,\n    defaultValue\n} from 'muze-utils';\nimport VisualEncoder from './visual-encoder';\nimport { SIZE, MEASURE, ARC, COLOR } from '../enums/constants';\nimport { sanitizeIndividualLayerConfig, resolveAxisConfig } from './encoder-helper';\nimport { SimpleVariable } from '../variable';\n\nconst POLAR = COORD_TYPES.POLAR;\nconst { RADIUS, ANGLE, ANGLE0 } = ENCODING;\n\nconst axesCls = {\n    [RADIUS]: RadiusAxis,\n    [ANGLE]: AngleAxis,\n    [ANGLE0]: AngleAxis\n};\n\nconst getSizeMultiplier = (sizeVal, sizeAxis) => {\n    const sizeAxisDomain = sizeAxis.domain();\n    const sizeMultiplier = sizeAxis.getSize(sizeVal) / (sizeAxisDomain ? sizeAxis.range()[1] : sizeAxis.config().value);\n    return sizeMultiplier;\n};\n\nconst setRadiusFactor = (context) => {\n    const data = context.data();\n    const sizeField = context.retinalFields().size.field;\n    const { radius, size } = context.axes();\n\n    if (sizeField && radius && radius.length) {\n        const sizeFieldIndex = data.getFieldsConfig()[sizeField].index;\n        const sizeVal = data.getData().data.reduce((acc, val) => acc + val[sizeFieldIndex], 1);\n        const sizeMultiplier = getSizeMultiplier(sizeVal, size[0]);\n        radius.forEach(axis => axis.setRadiusFactor(sizeMultiplier));\n    }\n};\n\n/**\n *\n *\n * @export\n * @class PolarEncoder\n * @extends {VisualEncoder}\n */\nexport default class PolarEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof PolarEncoder\n     */\n    createAxis (axesCreators, fieldInfo, context) {\n        const {\n            axes\n        } = axesCreators;\n        const geomCellAxes = axes;\n        const {\n            indices\n        } = fieldInfo;\n        const {\n            rowIndex,\n            columnIndex\n        } = indices;\n        // Dummy axes for polar, to create blank cells\n        const pieAxes = geomCellAxes.pie || [];\n\n        pieAxes[rowIndex] = pieAxes[rowIndex] || [];\n        pieAxes[rowIndex][columnIndex] = [];\n\n        const axesObj = {};\n        const { geomCell, resolver } = context;\n        const layers = resolver.matrixLayers();\n        const resolverAxes = resolver.axes();\n        const cellLayers = layers[rowIndex][columnIndex];\n        const fields = {\n            radius: {},\n            angle: {},\n            angle0: {}\n        };\n\n        cellLayers.forEach((layerConf) => {\n            const def = layerConf.def;\n            [ANGLE, ANGLE0, RADIUS].forEach((enc) => {\n                const field = getObjProp(def.encoding, enc, 'field');\n                field && (fields[enc][field] = 0);\n            });\n        });\n        const fieldInf = {};\n        const varInstances = {};\n\n        for (const encType in fields) {\n            fieldInf[encType] = Object.keys(fields[encType]);\n            axesObj[encType] = [];\n            varInstances[encType] = [];\n            fieldInf[encType].forEach((field, i) => {\n                varInstances[encType][i] = new SimpleVariable(field);\n                axesObj[encType][i] = new axesCls[encType]();\n            });\n            axesObj[encType][axesObj[encType].length] = new axesCls[encType]();\n        }\n        resolveAxisConfig(context, fieldInf, {\n            axesObj,\n            rowIndex,\n            columnIndex\n        });\n        geomCell.axes(axesObj)\n            .fields(Object.assign({}, varInstances, geomCell.fields()));\n        resolverAxes.pie = pieAxes;\n        return geomCellAxes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields) {\n        let counter = 0;\n        const facets = [];\n        const projections = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n\n        for (let i = 0; i < primaryLen; i++) {\n            const primaryField = primaryFields[i];\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter++];\n                const projArr = secondaryField ? [primaryField, secondaryField] : [primaryField];\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                }\n            }\n        }\n        return {\n            facets,\n            projections\n        };\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        store.lockModel();\n        const domainProps = {\n            radius: [],\n            angle: [],\n            angle0: []\n        };\n        const axes = context.resolver().axes();\n        context.matrixInstance().value.each((cell, rIdx, cIdx) => {\n            const unit = cell.valueOf();\n            const unitDomains = unit.getDataDomain();\n            const fields = unit.fields();\n            setRadiusFactor(unit);\n            [RADIUS, ANGLE, ANGLE0].forEach((encType) => {\n                const encodingFields = fields[encType];\n                const domains = unitDomains[encType] || {};\n                encodingFields.forEach((field, i) => {\n                    !domainProps[encType][rIdx] && (domainProps[encType][rIdx] = []);\n                    !domainProps[encType][rIdx][cIdx] && (domainProps[encType][rIdx][cIdx] = []);\n                    domainProps[encType][rIdx][cIdx][i] = domains[`${field}`] || [];\n                });\n            });\n        });\n\n        for (const key in domainProps) {\n            const specificAxes = axes[key];\n            specificAxes.forEach((axesArr, rIdx) => {\n                axesArr.forEach((axisArr, cIdx) => {\n                    axisArr.forEach((axis, i) => {\n                        axis.domain(defaultValue(getObjProp(domainProps[key], rIdx, cIdx, i), []));\n\n                        store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${key}`, domainProps[key],\n                            `${rIdx}-${cIdx}`);\n                    });\n                });\n            });\n        }\n        store.unlockModel();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    setCommonDomain () {\n        // No domain to be set\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    static type () {\n        return POLAR;\n    }\n\n    layers (...layers) {\n        if (layers.length) {\n            this._layers = layers[0];\n            return this;\n        }\n        return this._layers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof PolarEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        let sanitizedRows = [[], []];\n        let sanitizedColumns = [[], []];\n        const fields = super.fieldSanitizer(datamodel, config);\n        const {\n            layers\n        } = config;\n        const {\n            rows,\n            columns\n        } = fields;\n        const layer = layers[0];\n        const encoding = layer.encoding;\n        const radius = encoding && encoding.radius ? encoding.radius.field : null;\n        const angle = encoding && encoding.angle ? encoding.angle.field : null;\n        const sanitizedFields = [sanitizedRows, sanitizedColumns];\n\n        [rows, columns].forEach((fieldType, typeIndex) => {\n            fieldType.forEach((fieldSet, i) => fieldSet.forEach((field) => {\n                if (field.toString() !== radius && field.toString() !== angle && field.type() !== MEASURE) {\n                    sanitizedFields[typeIndex][i].push(field);\n                }\n            }));\n        });\n        sanitizedColumns = [...new Set(sanitizedColumns)];\n        sanitizedRows = [...new Set(sanitizedRows)];\n        this.fieldInfo({ rows: sanitizedRows, columns: sanitizedColumns });\n        return this.fieldInfo();\n    }\n\n    getRetinalFieldsDomain (dataModels, encoding, facetFields, groupBy) {\n        let sizeField;\n        let colorField;\n        const fields = [];\n        const layers = this.layers();\n        const dataModel = dataModels.groupedModel;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const domains = {};\n        if (layers && layers[0]) {\n            const layer = layers[0];\n            const layerEncoding = layer.def.encoding || {};\n\n            [RADIUS, ANGLE, SIZE, COLOR].forEach((encType) => {\n                const field = layerEncoding[encType] ? layerEncoding[encType].field : '';\n                const measureField = fieldsConfig[field] && fieldsConfig[field].def.type === MEASURE;\n                if (encType === SIZE && measureField) {\n                    sizeField = field;\n                }\n                if (encType === COLOR) {\n                    colorField = field;\n                }\n                fieldsConfig[field] && !measureField && fields.push(field);\n            });\n        }\n\n        if (sizeField) {\n            domains[sizeField] = dataModel.groupBy(facetFields, {\n                [sizeField]: GROUP_BY_FUNCTIONS.SUM\n            }).getFieldspace().fieldsObj()[sizeField].domain();\n        }\n\n        if (colorField) {\n            const dm = dataModel.groupBy([...facetFields, ...fields], groupBy.measures);\n            domains[colorField] = dm.getFieldspace().fieldsObj()[colorField].domain();\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof PolarEncoder\n     */\n    getLayerConfig (fields, userLayerConfig, retinalConfig) {\n        let layerConfig = [];\n        const {\n                columnFields,\n                rowFields\n            } = fields;\n        const allFields = [...columnFields, ...rowFields];\n\n        allFields.forEach(() => {\n            const encoding = {};\n            let config = {\n                mark: ARC,\n                def: {\n                    encoding\n                }\n            };\n            if (userLayerConfig && userLayerConfig.length > 0) {\n                config = mergeRecursive(config, userLayerConfig[0]);\n            }\n            layerConfig.push(config);\n        });\n        if (layerConfig.length === 0) {\n            layerConfig = userLayerConfig;\n        }\n        const sanitizedConfig = this.sanitizeLayerConfig(retinalConfig, layerConfig);\n        this.layers(sanitizedConfig);\n        return sanitizedConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     *\n     * @memberof PolarEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n\n        layerArray.length && layerArray.forEach((layer) => {\n            const def = layerFactory.getSerializedConf(layer.mark, layer);\n            serializedLayers.push({\n                mark: layer.mark,\n                def\n            });\n        });\n        return serializedLayers;\n    }\n\n    sanitizeLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n\n        userLayerConfig.forEach((config) => {\n            const def = toArray(config.def);\n            sanitizeIndividualLayerConfig(encodingConfigs, def);\n            def.forEach((conf) => {\n                const encoding = conf.encoding || (conf.encoding = {});\n                !encoding.angle && (encoding.angle = {});\n                const angleField = getObjProp(encoding.angle, 'field');\n                const angle0Field = getObjProp(encoding.angle0, 'field');\n                if (!angleField) {\n                    Object.assign(encoding.angle, {\n                        field: encodingConfigs.color && encodingConfigs.color.field\n                    });\n                }\n                if (!angle0Field) {\n                    !encoding.angle0 && (encoding.angle0 = {});\n                    Object.assign(encoding.angle0, {\n                        field: encoding.angle.field\n                    });\n                }\n            });\n\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n}\n","import { createRetinalAxis } from './encoder-helper';\nimport { COLOR, SHAPE, SIZE } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class RetinalEncoder\n * @extends {VisualEncoder}\n */\nexport default class RetinalEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     *\n     * @memberof RetinalEncoder\n     */\n    createAxis (axesCreators) {\n        const { fieldsConfig, config } = axesCreators;\n        const newAxes = {};\n\n        [COLOR, SHAPE, SIZE].forEach((axisType) => {\n            newAxes[`${axisType}`] = createRetinalAxis({ axisType, fieldsConfig }, config[axisType]);\n        });\n        return newAxes;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof RetinalEncoder\n     */\n    static type () {\n        return 'retinal';\n    }\n\n    /**\n     *\n     *\n     * @param {*} context\n     *\n     * @memberof RetinalEncoder\n     */\n    setCommonDomain (context) {\n        const { domains, axes, encoding } = context;\n\n        Object.entries(encoding).forEach((enc) => {\n            if (enc[1] && enc[1].field) {\n                const encType = enc[0];\n                const field = enc[1].field;\n\n                if (field) {\n                    axes[encType].forEach((axis) => {\n                        const domain = domains[field];\n                        !enc[1].domain && axis.updateDomain(domain);\n                    });\n                }\n            }\n        });\n        return axes;\n    }\n}\n","import { Store, FieldType, COORD_TYPES, getObjProp, DataModel } from 'muze-utils';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { BaseLayer } from '@chartshq/visual-layer';\nimport { DATA_UPDATE_COUNTER } from '../enums/defaults';\nimport { Variable } from '../variable';\nimport { PolarEncoder, CartesianEncoder } from '../encoder';\nimport {\n    DIMENSION,\n    MEASURE,\n    ORDINAL,\n    LINEAR,\n    ROW,\n    COLUMN,\n    COL,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    COLOR,\n    SIZE,\n    TEMPORAL,\n    SHAPE,\n    INTERACTION,\n    GRID_LINES,\n    GRID_BANDS,\n    HEADER,\n    FACET,\n    X,\n    Y,\n    ARC,\n    RADIUS,\n    ANGLE\n} from '../enums/constants';\n\nconst POLAR = COORD_TYPES.POLAR;\n\n/**\n * Creates an instance of a store which contains the arguments to make the class reactive\n *\n * @return {Object} instance of store\n * @memberof VisualGroup\n */\nexport const initStore = () => new Store({\n    [DATA_UPDATE_COUNTER]: DATA_UPDATE_COUNTER\n});\n\n/**\n *\n *\n * @param {*} arr\n */\nexport const isDistributionEqual = arr => [...arr[0], ...arr[1]].reduce((isEqual, row) => {\n    const rowType = row.type();\n\n    if (rowType === MEASURE || rowType === TEMPORAL) {\n        isEqual = true;\n    }\n    return isEqual;\n}, false);\n\n/**\n *\n *\n */\nexport const initializeCacheMaps = () => ({\n    cellMap: new Map(),\n    xAxesMap: new Map(),\n    yAxesMap: new Map(),\n    entryCellMap: new Map(),\n    exitCellMap: new Map()\n});\n\n/**\n *\n *\n * @param {*} axisName\n * @param {*} id\n */\nexport const getAxisKey = (axisName, ...params) => `${axisName}-axis-${params.join('-')}`;\n\n/**\n *\n *\n * @param {*} rowId\n * @param {*} columnId\n */\nexport const getCellKey = (rowId, columnId) => `cell-${rowId}-${columnId}`;\n\n/**\n *\n *\n * @param {*} config\n *\n */\nexport const extractUnitConfig = (config) => {\n    const unitConfig = {};\n    const attrNames = [INTERACTION, GRID_LINES, GRID_BANDS];\n\n    attrNames.forEach((attr) => {\n        if (config[attr] !== undefined) {\n            unitConfig[attr] = config[attr];\n        }\n    });\n    return unitConfig;\n};\n\n/**\n *\n *\n * @param {*} headers\n * @param {*} index\n * @param {*} rowLength\n *\n * @memberof MatrixResolver\n */\nexport const getHeaderText = (headers, index, rowLength) => {\n    let header = '';\n\n    if (index === rowLength - 1 && headers.length > rowLength) {\n        for (let i = index; i < headers.length - 1; i++) {\n            header += `${headers[i].toString()} / `;\n        }\n        header += headers[headers.length - 1].toString();\n        return header;\n    } else if (headers[index]) {\n        return headers[index].toString();\n    }\n    return '';\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} fieldHeaders\n * @param {*} TextCell\n * @param {*} labelManager\n *\n */\nexport const headerCreator = (fields, fieldHeaders, TextCell, { classPrefix, labelManager }) => {\n    const headers = fields.length > 0 ? fields[0].map((cell, i) => new TextCell({\n        type: HEADER,\n        className: `${classPrefix}-grid-headers`\n    }, {\n        labelManager\n    }).source(getHeaderText(fieldHeaders, i, fields[0].length))\n                    .config({ show: cell.config().show })) : [];\n    return headers;\n};\n\n/**\n *\n *\n * @param {*} variable\n * @param {*} allFields\n *\n */\nexport const findInGroup = (variable, allFields) => {\n    let channel = null;\n\n    [COLOR, SIZE, SHAPE].forEach((e) => {\n        if (this.store.get(e) && variable === this.store.get(e)[0]) {\n            channel = e;\n        }\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    [ROW, COL].forEach((facetType) => {\n        allFields[`${facetType}Facets`].forEach((e) => {\n            if (e.toString() === variable) {\n                channel = { channel: FACET, type: facetType === COL ? COLUMN : ROW };\n            }\n        });\n    });\n\n    if (channel) {\n        return channel;\n    }\n\n    [ROW, COL].forEach((projType) => {\n        allFields[`${projType}Projections`].forEach((e) => {\n            e.forEach((m) => {\n                if (m.toString() === variable) {\n                    channel = projType === COL ? X : Y;\n                }\n            });\n        });\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    return null;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} field\n */\nexport const getAxisType = (fieldsConfig, field) => {\n    let fieldType = ORDINAL;\n\n    if (field && fieldsConfig[field].def.type !== DIMENSION) {\n        fieldType = LINEAR;\n    }\n    return fieldType;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} fieldName\n *\n */\nexport const retriveDomainFromData = (datamodel, fieldName) => {\n    const field = datamodel.getFieldspace().fields.find(d => d.name() === fieldName.toString());\n    return field.domain();\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    let xAxes = null;\n    let yAxes = null;\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n\n    xAxisSet && xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes = xAxes || [];\n        xAxes.push(xAxis);\n    });\n\n    yAxisSet && yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes = yAxes || [];\n        yAxes.push(yAxis);\n    });\n\n    return {\n        xAxes, yAxes\n    };\n};\n\nconst hasPolarEncodings = layerConf => layerConf.mark === ARC || [RADIUS, ANGLE].some(field =>\n        getObjProp(layerConf.encoding, field));\n\n/**\n *\n *\n * @param {*} layers\n *\n */\nexport const getEncoder = (layers) => {\n    let encoder = new CartesianEncoder();\n\n    if (layers.length) {\n        // Figuring out the kind of layers the group will have\n        encoder = layers.some(layerConf => hasPolarEncodings(layerConf)) ? new PolarEncoder() : encoder;\n    }\n    return encoder;\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} userAxisFromConfig\n *\n */\nexport const getHeaderAxisFrom = (type, fields, userAxisFromConfig) => {\n    let axisFrom = userAxisFromConfig[type];\n    let headerFrom = '';\n    const options = type === ROW ? [LEFT, RIGHT] : [BOTTOM, TOP];\n    const [firstField, secondField] = fields;\n    const firstFieldType = i => (firstField.length ? firstField[i].type() : null);\n    const secondFieldType = i => (secondField.length ? secondField[i].type() : null);\n\n    if (firstFieldType(firstField.length - 1) === DIMENSION && secondFieldType(0) === DIMENSION) {\n        headerFrom = axisFrom ? options[1 - options.indexOf(axisFrom)] : options[1];\n\n        if (type === COLUMN && (firstField[firstField.length - 1].toString() === secondField[0].toString())) {\n            axisFrom = TOP;\n        } else {\n            axisFrom = axisFrom || options[0];\n        }\n    } else if (secondFieldType(secondField.length - 1) === DIMENSION) {\n        headerFrom = type === ROW ? RIGHT : BOTTOM;\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else {\n        headerFrom = type === ROW ? LEFT : TOP;\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    if (firstFieldType(firstField.length - 1) === MEASURE && secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    } else if (secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else if (firstFieldType(firstField.length - 1) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    return [headerFrom, axisFrom];\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} layers\n *\n * @memberof MatrixResolver\n */\nexport const setFacetsAndProjections = (context, fieldInfo, encoder) => {\n    const {\n        fields,\n        type\n    } = fieldInfo;\n    const { facets, projections } = encoder.simpleEncoder.getFacetsAndProjections(fields, type);\n\n    context.facets({ [`${type}Facets`]: facets });\n    context.projections({ [`${type}Projections`]: projections });\n\n    return { facets, projections, fields };\n};\n\nconst getRowBorders = (left, right) => {\n    const borders = {};\n    borders.top = false;\n    borders.bottom = false;\n    if (left.length > 1 || right.length > 1) {\n        borders.top = true;\n        borders.bottom = true;\n    }\n    return borders;\n};\n\nconst getColumnsBorders = (top, bottom) => {\n    const borders = {};\n    borders.left = false;\n    borders.right = false;\n    if (top.length || bottom.length) {\n        if ((top[0] && top[0].length > 1) || (bottom[0] && bottom[0].length > 1)) {\n            borders.left = true;\n            borders.right = true;\n        }\n    }\n    return borders;\n};\n\nconst getValueBorders = (rows, columns) => {\n    const borders = { top: true, left: true, bottom: true, right: true };\n    const borderTypeRow = [LEFT, RIGHT];\n    const borderTypeCol = [TOP, BOTTOM];\n    rows.forEach((e, i) => {\n        if (e[0] && e[0].length) {\n            borders[borderTypeRow[i]] = true;\n        } else {\n            borders[borderTypeRow[i]] = false;\n        }\n    });\n    columns.forEach((e, i) => {\n        if (e.length) {\n            borders[borderTypeCol[i]] = true;\n        } else {\n            borders[borderTypeCol[i]] = false;\n        }\n    });\n\n    return borders;\n};\n\nexport const getBorders = (matrices, encoder) => {\n    let showRowBorders = { top: false, bottom: false };\n    let showColBorders = { left: false, right: false };\n    let showValueBorders = { top: false, bottom: false, left: false, right: false };\n    const {\n        rows,\n        columns,\n        values: valueMatrix\n    } = matrices;\n    const [leftRows, rightRows] = rows;\n    const [topColumns, bottomColumns] = columns;\n    const {\n        rowDimensions,\n        columnDimensions,\n        rowTemporalFields,\n        columnTemporalFields,\n        columnMeasures,\n        rowMeasures\n    } = encoder.fieldInfo();\n    const allDimensionLength = rowDimensions.length + columnDimensions.length;\n    const allMeasuresLength = rowMeasures.length + columnMeasures.length;\n    const allTemporalFieldsLength = rowTemporalFields.length + columnTemporalFields.length;\n\n    if (encoder.constructor.type() === POLAR) {\n        if (!allDimensionLength) {\n            return { showRowBorders, showColBorders, showValueBorders };\n        }\n    } else if (!allMeasuresLength && !allTemporalFieldsLength && allDimensionLength <= 2) {\n        return { showRowBorders, showColBorders, showValueBorders };\n    }\n\n    showRowBorders = getRowBorders(leftRows, rightRows);\n    showColBorders = getColumnsBorders(topColumns, bottomColumns);\n    showValueBorders = getValueBorders([leftRows, rightRows], [topColumns, bottomColumns]);\n\n    if (valueMatrix.length > 1) {\n        showValueBorders.top = true;\n        showValueBorders.bottom = true;\n    }\n    if (valueMatrix.length && valueMatrix[0].length > 1) {\n        showValueBorders.left = true;\n        showValueBorders.right = true;\n    }\n    return { showRowBorders, showColBorders, showValueBorders };\n};\n\nexport const getFieldsFromSuppliedLayers = (suppliedLayerConfig, fieldsConfig) => {\n    let fields = [];\n    const encodingArr = suppliedLayerConfig.map(conf => (conf.encoding || {}));\n    fields = [...fields, [].concat(...encodingArr.map(enc => Object.values(enc).map(d => d.field)))];\n    fields = fields.filter(field => fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n    return fields;\n};\n\nexport const extractFields = (facetsAndProjections, layerFields) => {\n    const fields = Object.values(facetsAndProjections).map((arr) => {\n        const flattenArray = [].concat(...arr);\n        return [].concat(...flattenArray.map((field) => {\n            if (field instanceof Variable) {\n                return field.getMembers();\n            }\n            return field;\n        }));\n    });\n    return [].concat(...fields, ...layerFields);\n};\n\n/**\n * This method sorts the facets fields inplace if field is of categorical type\n * @param {Object} facets Array of facets\n * @param {Array} keys Array of the facet field values\n * @param {Object} config configuration object\n * @return {Array} Returns sorted facets\n */\nexport const sortFacetFields = (facets, keys, config) => {\n    /**\n     * Check if the facet sorted by the user is plotted\n     * If an incorrect field is sorted, return the keys as is\n     */\n    const schema = [];\n    const facetNames = [];\n    const sortInfo = [];\n    const sortConfig = config.sort;\n\n    facets.forEach((facet) => {\n        const name = `${facet}`;\n        facetNames.push(name);\n\n        const facetSortConfig = sortConfig[name];\n\n        if (facetSortConfig) {\n            sortInfo.push([name, facetSortConfig]);\n        } else {\n            sortInfo.push([name, null]);\n        }\n        schema.push(facet.getSchemaDef());\n    });\n\n    return new DataModel([facetNames, ...keys], schema).getData({ sort: sortInfo }).data;\n};\n\nexport const removeExitCells = (resolver) => {\n    const exitCells = resolver.cacheMaps().exitCellMap;\n    const store = resolver.store();\n    const qualifiedStateProps = [].concat(...VisualUnit.getQualifiedStateProps(),\n        ...BaseLayer.getQualifiedStateProps());\n    store.lockCommits(qualifiedStateProps);\n    exitCells.forEach((placeholder) => {\n        placeholder.remove();\n    });\n    store.unlockCommits(qualifiedStateProps);\n};\n","import { DataModel } from 'muze-utils';\nimport { sortFacetFields } from './group-utils';\n\n/**\n* Gets name of fields form the variables\n*\n* @param {*} fields1\n* @param {*} [fields2=[]]\n*\n*/\nconst getFieldNames = fieldVar => fieldVar.reduce((acc, d) => {\n    acc = [...acc, ...d.getMembers()];\n    return acc;\n}, []);\n\n/**\n*\n*\n* @param {*} fieldInfo\n* @returns\n*/\nconst prepareProjectionInfo = (fieldInfo) => {\n    const {\n        colProjections,\n        rowProjections\n    } = fieldInfo;\n    const uniqueFields = [];\n    let indices = [];\n    let projections = [];\n\n    rowProjections.forEach((rowProj, rIndex) => {\n        const newRIndex = rIndex;\n        colProjections.forEach((colProj, cIndex) => {\n            const newCIndex = cIndex;\n            const newRowProj = getFieldNames(rowProj);\n            const newColProj = getFieldNames(colProj);\n\n            uniqueFields.push([...newRowProj, ...newColProj]);\n            indices.push({ rowIndex: newRIndex, colIndex: newCIndex });\n            projections.push({ rowFields: rowProj, columnFields: colProj });\n        });\n    });\n    indices = indices.length ? indices : [{ rowIndex: 0, colIndex: 0 }];\n    projections = projections.length ? projections : [{ rowFields: [], columnFields: [] }];\n    return { uniqueFields, indices, projections };\n};\n\n/**\n*\n*\n* @param {*} fieldInfo\n* @returns\n*/\nconst prepareFacetInfo = (fieldInfo) => {\n    const {\n        rowFacets,\n        colFacets\n    } = fieldInfo;\n\n    const rowFacetNames = getFieldNames(rowFacets);\n    const colFacetNames = getFieldNames(colFacets);\n    const allFacets = [...rowFacetNames, ...colFacetNames];\n\n    return { rowFacetNames, colFacetNames, allFacets, rowFacets, colFacets };\n};\n\n/**\n*\n*\n* @param {*} context\n* @param {*} facetNames\n* @param {*} hashMap\n* @param {*} keys\n* @param {*} index\n* @returns\n*/\nconst prepareHashMaps = (context, facetNames, hashMap, keys, index) => {\n    const rowKey = [];\n    facetNames.forEach((name) => {\n        const key = context._derivation[context._derivation.length - 1].meta.keys[name];\n\n        rowKey.push(key);\n    });\n\n    const joinedRowKey = rowKey.join(',');\n\n    if (hashMap[joinedRowKey] === undefined) {\n        hashMap[joinedRowKey] = index++;\n        keys.push(rowKey);\n    }\n    return rowKey;\n};\n\nconst createJoinedKeys = keys => keys.map(e => ({\n    keyArr: e,\n    joinedKey: e.join(',')\n}));\n\n/**\n*\n*\n* @param {*} splitModels\n* @param {*} facetInfo\n* @returns\n*/\nconst getSplitModelHashMap = (splitModels, facetInfo, config) => {\n    const {\n        rowFacetNames,\n        colFacetNames,\n        rowFacets,\n        colFacets\n    } = facetInfo;\n\n    const rowKeyHashMap = {};\n    const colKeyHashMap = {};\n\n    const rowKeys = [];\n    const colKeys = [];\n    const rowIndex = 0;\n\n    const splitModelsHashMap = {};\n\n    splitModels.forEach((splitContext) => {\n        const rowKey = prepareHashMaps(splitContext, rowFacetNames, rowKeyHashMap, rowKeys, rowIndex);\n        const colKey = prepareHashMaps(splitContext, colFacetNames, colKeyHashMap, colKeys, 1);\n\n        splitModelsHashMap[`${rowKey}-${colKey}`] = splitContext;\n    });\n\n    return {\n        splitModelsHashMap,\n        rowKeys: createJoinedKeys(sortFacetFields(rowFacets, rowKeys, config)),\n        colKeys: createJoinedKeys(sortFacetFields(colFacets, colKeys, config))\n    };\n};\n\n/**\n * Formats row or columns keys with the provided formatter.\n *\n * @param {Array} keys - The collection of row or column keys.\n * @param {Array} formatterList - The list of corresponding formatter.\n */\nconst formatKeys = (keys, formatterList) => {\n    const formattedKeys = [];\n    keys.forEach((rKeys, rIdx) => {\n        formattedKeys[rIdx] = [];\n        rKeys.forEach((key, idx) => {\n            formattedKeys[rIdx][idx] = formatterList[idx](key);\n        });\n    });\n    return formattedKeys;\n};\n\n/**\n*\n*\n* @param {Object} context\n* @param {Object} fieldInfo\n* @returns\n*/\nconst splitByColumn = (context, optionalProjections) => {\n    const {\n        matrix,\n        dataModel,\n        rowIndex,\n        colIndex,\n        facetInfo,\n        projectionInfo,\n        geomCellCreator\n    } = context;\n    const {\n        indices,\n        uniqueFields,\n        projections\n    } = projectionInfo;\n\n    const commonFields = optionalProjections;\n\n    dataModel.splitByColumn(uniqueFields, commonFields).forEach((model, i) => {\n        let { rowIndex: row, colIndex: col } = indices[i];\n        row += rowIndex;\n        col += colIndex;\n\n        matrix[row] = matrix[row] || [];\n\n        const projectionIndexObject = {\n            indices: {\n                rowIndex: row,\n                columnIndex: col\n            },\n            projections: projections[i]\n        };\n\n        matrix[row][col] = geomCellCreator(model, projectionIndexObject, facetInfo);\n    });\n    const lastIndex = indices[indices.length - 1];\n\n    return {\n        rowIndex: lastIndex.rowIndex + rowIndex,\n        colIndex: lastIndex.colIndex + colIndex\n    };\n};\n\nconst createColumnDataModels = (colContext, fieldInfo, sourceDM) => {\n    let context = {};\n    const {\n        rowFacets,\n        colFacets\n    } = fieldInfo;\n    const {\n        rowKeyArr,\n        rowKey,\n        colKeyObj,\n        newRowIndex,\n        splitModelsHashMap,\n        currentColumnIndex\n    } = colContext;\n\n    const { keyArr: colKeyArr, joinedKey: colKey } = colKeyObj;\n    const hashMapKey = splitModelsHashMap[`${rowKey}-${colKey}`];\n\n    if (hashMapKey) {\n        context = { dataModel: hashMapKey };\n    } else {\n        const emptyDm = new DataModel([], sourceDM.getData().schema);\n        context = { dataModel: emptyDm };\n    }\n\n    context = {\n        ...context,\n        ...colContext,\n        facetInfo: {\n            rowFacets: [rowFacets, rowKeyArr],\n            colFacets: [colFacets, colKeyArr]\n        },\n        rowIndex: newRowIndex,\n        colIndex: currentColumnIndex\n    };\n    const dataModels = splitByColumn(context, fieldInfo.optionalProjections);\n\n    return {\n        columnIndex: dataModels.colIndex + 1,\n        rowIndex: dataModels.rowIndex\n    };\n};\n\nconst createRowDataModels = (rowContext, fieldInfo, sourceDM) => {\n    let currentColumnIndex = 0;\n    let rowIndexForCurrentKey = 0;\n    const {\n        colKeys,\n        rowKeyObj,\n        currentRowIndex\n    } = rowContext;\n    const newRowIndex = currentRowIndex;\n    const { keyArr: rowKeyArr, joinedKey: rowKey } = rowKeyObj;\n    const colContext = {\n        ...rowContext,\n        rowKeyArr,\n        rowKey,\n        newRowIndex\n    };\n    rowIndexForCurrentKey = currentRowIndex;\n    if (colKeys.length) {\n        colKeys.forEach((colKeyObj) => {\n            colContext.colKeyObj = colKeyObj;\n            colContext.currentColumnIndex = currentColumnIndex;\n            const { columnIndex, rowIndex } = createColumnDataModels(colContext, fieldInfo, sourceDM);\n\n            currentColumnIndex = columnIndex;\n            rowIndexForCurrentKey = rowIndex;\n        });\n    } else {\n        colContext.colKeyObj = { keyArr: [], joinedKey: '' };\n        colContext.currentColumnIndex = currentColumnIndex;\n\n        const { columnIndex, rowIndex } = createColumnDataModels(colContext, fieldInfo, sourceDM);\n\n        currentColumnIndex = columnIndex;\n        rowIndexForCurrentKey = rowIndex;\n    }\n    return {\n        rowIndex: ++rowIndexForCurrentKey\n    };\n};\n\n/**\n* Gets Matrixes for corresponding datamodel, facets and projections\n*\n* @param {Object} dataModel input datamodel\n* @param {Object} fieldInfo Information about the fields\n* @param {Function} geomCellCreator Callback executed after datamodels are prepared after sel/proj\n* @return {Object} set of matrices with the corresponding row and column keys\n*/\nexport const getMatrixModel = (dataModel, fieldInfo, geomCellCreator, globalConfig) => {\n    let currentRowIndex = 0;\n    const matrix = [];\n    const {\n        rowFacets,\n        colFacets\n    } = fieldInfo;\n\n    const projectionInfo = prepareProjectionInfo(fieldInfo);\n    const facetInfo = prepareFacetInfo(fieldInfo);\n    const allSplitModels = dataModel.splitByRow(facetInfo.allFacets);\n\n    const {\n        splitModelsHashMap,\n        rowKeys,\n        colKeys\n    } = getSplitModelHashMap(allSplitModels, facetInfo, globalConfig);\n\n    const generalContext = {\n        matrix,\n        geomCellCreator,\n        projectionInfo,\n        splitModelsHashMap,\n        colKeys\n    };\n    if (rowKeys.length) {\n        rowKeys.forEach((rowKeyObj) => {\n            const rowContext = {\n                ...generalContext,\n                rowKeyObj,\n                currentRowIndex\n            };\n            const { rowIndex } = createRowDataModels(rowContext, fieldInfo, dataModel);\n\n            currentRowIndex = rowIndex;\n        });\n    } else if (colKeys.length) {\n        let currentColumnIndex = 0;\n        const newRowIndex = currentRowIndex;\n\n        colKeys.forEach((colKeyObj) => {\n            const colContext = {\n                ...generalContext,\n                rowKeyArr: [],\n                rowKey: '',\n                colKeyObj,\n                newRowIndex,\n                currentColumnIndex\n            };\n            const { columnIndex, rowIndex } = createColumnDataModels(colContext, fieldInfo, dataModel);\n            currentRowIndex = rowIndex;\n            currentColumnIndex = columnIndex;\n        });\n    } else {\n        let currentColumnIndex = 0;\n        const newRowIndex = currentRowIndex;\n        const colContext = {\n            ...generalContext,\n            rowKeyArr: [],\n            rowKey: '',\n            colKeyObj: { keyArr: [], joinedKey: '' },\n            newRowIndex,\n            currentColumnIndex\n        };\n        const { columnIndex, rowIndex } = createColumnDataModels(colContext, fieldInfo, dataModel);\n        currentRowIndex = rowIndex;\n        currentColumnIndex = columnIndex;\n    }\n\n    const formattedColKeys = formatKeys(colKeys.map(e => e.keyArr),\n        colFacets.map(facetField => facetField.rawFormat()));\n    const formattedRowKeys = formatKeys(rowKeys.map(e => e.keyArr),\n        rowFacets.map(facetField => facetField.rawFormat()));\n\n     // Getting column keys\n    const transposedColKeys = formattedColKeys.length > 0 ? formattedColKeys[0].map((col, i) =>\n     formattedColKeys.map(row => row[i])) : formattedColKeys;\n\n    return { matrix, rowKeys: formattedRowKeys, columnKeys: transposedColKeys };\n};\n","import { AxisOrientation } from '@chartshq/muze-axis';\nimport {\n    getObjProp,\n    FieldType,\n    retrieveNearestGroupByReducers,\n    mergeRecursive,\n    createSelection,\n    DataModel\n} from 'muze-utils';\nimport { getMatrixModel } from './matrix-model';\nimport {\n    getCellKey,\n    isDistributionEqual,\n    mutateAxesFromMap,\n    getFieldsFromSuppliedLayers,\n    extractFields,\n    removeExitCells\n} from './group-utils';\nimport { ROW, ROWS, COLUMNS, COL, LEFT, RIGHT, TOP,\n    BOTTOM, PRIMARY, SECONDARY, X, Y, TEMPORAL } from '../enums/constants';\nimport { SimpleVariable } from '../variable';\n\n/**\n * Updates row and column cells with the geom cell corresponding to the facet keys\n *\n * @param {*} resolver\n * @param {*} facets\n */\nconst updateCells = (resolver, facets, geomCell) => {\n    [ROW, COL].forEach((field) => {\n        const cells = resolver[`${field}Cells`]();\n        const facetKey = facets[`${field}Facets`][1].join();\n\n        !cells[facetKey] && (cells[facetKey] = []);\n        cells[facetKey].push(geomCell);\n        resolver[`${field}Cells`](cells);\n    });\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} datamodel\n * @param {*} fieldInfo\n * @param {*} facets\n *\n */\nexport const createValueCells = (context, datamodel, fieldInfo, facets) => {\n    const {\n        projections,\n        indices\n    } = fieldInfo;\n    const {\n        rowFields,\n        columnFields\n    } = projections;\n    const {\n         rowIndex,\n         columnIndex\n    } = indices;\n    const {\n        suppliedLayers,\n        cell: GeomCell,\n        resolver,\n        config,\n        encoder,\n        detailFields\n    } = context;\n    const axes = resolver.axes();\n    const cacheMaps = resolver.cacheMaps();\n    const matrixLayers = resolver.matrixLayers();\n    const labelManager = resolver.dependencies().smartlabel;\n    const horizontalAxis = resolver.horizontalAxis();\n    const verticalAxis = resolver.verticalAxis();\n    const datamodelTransform = resolver.datamodelTransform();\n    const sortedFields = config.sort;\n    const {\n        entryCellMap,\n        exitCellMap\n    } = cacheMaps;\n    const layerConfigArr = encoder.getLayerConfig({ columnFields, rowFields }, suppliedLayers || [],\n        context.retinalConfig);\n    const axesCreators = { config, labelManager, axes, cacheMaps };\n\n    fieldInfo.normalizedColumns = verticalAxis.fields;\n    fieldInfo.normalizedRows = horizontalAxis.fields;\n\n    const allFacets = [\n        [...facets.rowFacets[0], ...facets.colFacets[0]],\n        [...facets.rowFacets[1], ...facets.colFacets[1]]\n    ];\n    const facetFields = allFacets.slice();\n    facetFields[0] = facetFields[0].map(facetField => facetField.oneVar());\n\n    matrixLayers[rowIndex] = matrixLayers[rowIndex] ? matrixLayers[rowIndex] : [];\n    matrixLayers[rowIndex][columnIndex] = layerConfigArr;\n\n    // return from map if already there otherwise create and put in map\n    const geomCellKey = getCellKey(rowIndex, columnIndex);\n    const fields = {\n        y: rowFields,\n        x: columnFields\n    };\n\n    const geomCell = !exitCellMap.has(geomCellKey) ? new GeomCell() : exitCellMap.get(geomCellKey);\n\n    // Sort datamodel if user has sorted a field\n    const sortConfig = Object.keys(sortedFields).map(field => [field, sortedFields[field]]);\n    if (sortConfig.length) {\n        datamodel = datamodel.sort(sortConfig, { saveChild: true });\n    }\n\n    geomCell.data(datamodel)\n                    .fields(fields)\n                    .transform(datamodelTransform)\n                    .detailFields(detailFields)\n                    .facetByFields(allFacets);\n\n    encoder.createAxis(axesCreators, fieldInfo, Object.assign({}, context, { geomCell, facetFields }));\n    entryCellMap.set(geomCellKey, geomCell);\n    exitCellMap.delete(geomCellKey);\n\n    updateCells(resolver, facets, geomCell);\n\n    return entryCellMap.get(geomCellKey);\n};\n\nconst extractAxisIndex = id => getObjProp(id.match(/^[0-9]*?(?=-)/g), 0);\n\n/**\n * Creates axis cells based on the set of axes\n *\n * @param {Selection} selection Contains a selection of the axis units\n * @param {Array} axes Actual axis units\n * @param {number} axisIndex 0-> primary axis, 1-> secondary axis(when dual axis is made)\n * @param {Object} cells Contains a collection of the cells\n * @return {Object} return either set of axis/blank cells depending on the config\n */\nconst createAxisCells = (selection, axes, axisIndex, cells) =>\n    createSelection(selection, axis => axis, axes, (item, i) => i + item.reduce((e, n) => {\n        const id = n.id + axisIndex;\n        return `${e}-${id}`;\n    }, '')).map((currObj, axis) => {\n        if (axis && axis[axisIndex]) {\n            const axisInst = axis[axisIndex];\n            const { orientation, show } = axisInst.config();\n\n            return new cells.AxisCell().source(axisInst).config({\n                isOffset: orientation === AxisOrientation.LEFT || orientation === AxisOrientation.TOP,\n                show\n            });\n        }\n        return new cells.BlankCell().config({ show: false });\n    }).sort((a, b) => extractAxisIndex(a[0]) - extractAxisIndex(b[0]));\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @retur\n */\nconst axisPlaceholderGn = (context, selObj, cells) => {\n    const {\n        matrices\n    } = context;\n    const {\n        axesMatrix\n    } = matrices;\n\n    return (type, axisFrom) => {\n        const axes = axesMatrix[`${type}`];\n\n        if (axes && axes.length) {\n            if (type === X || type === Y) {\n                const fieldNames = type === Y ? ROWS : COLUMNS;\n\n                [PRIMARY, SECONDARY].forEach((fieldType, index) => {\n                    const selObjProp = `${fieldNames}${fieldType}`;\n                    let axisIndex = index;\n                    let axesForDraw = axes;\n                    if (axisFrom === RIGHT || axisFrom === BOTTOM) {\n                        axisIndex = 1 - axisIndex;\n                    }\n                    if (!getObjProp(axes, 0, axisIndex)) {\n                        axesForDraw = [];\n                    }\n                    selObj[selObjProp] = createAxisCells(selObj[selObjProp], axesForDraw, axisIndex, cells);\n                });\n            } else {\n                selObj.rowsPrimary = createAxisCells(selObj.rowPrime, axes.map(() => []), 0, cells);\n                selObj.rowsSecondary = createAxisCells(selObj.rowSec, axes.map(() => []), 0, cells);\n                selObj.columnsPrimary = createAxisCells(selObj.colPrime, axes[0], 0, cells);\n                selObj.columnsSecondary = createAxisCells(selObj.colSec, axes[0], 0, cells);\n            }\n        }\n        return selObj;\n    };\n};\n\n/**\n * Creates header cells based on the set of headers\n *\n * @param {Object} selection Contains a selection of the header units\n * @param {string} headers Contains a list of the headers\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} return either set of header cells depending on the config\n */\nconst createTextCells = (selection, headers, cells, labelManager) => createSelection(selection,\n        (label) => {\n            const textCell = new cells.TextCell({}, { labelManager });\n            textCell.source(label);\n            return textCell;\n        }, headers, (key, i) => key + i);\n\nconst extractFacetIndex = id => id.split('-').pop();\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @param {*} labelManager\n *\n */\nconst headerPlaceholderGn = (context, selectionObj, cells, labelManager) => {\n    const {\n        axis,\n        keys,\n        type,\n        facet\n    } = context;\n    const counter = axis.length / keys.length;\n    const selectionKeys = keys.length ? axis.map((d, i) => keys[Math.floor(i / counter)]) : [];\n\n    const selObjUpdater = createSelection(selectionObj[`${type}Headers`], keySet => keySet, selectionKeys,\n    (keySet, i) => `${keySet.join(',')}-${i}`)\n        .sort((a, b) => extractFacetIndex(a[0]) - extractFacetIndex(b[0]));\n\n    return selObjUpdater.map((keySet, data) => {\n        let textCells = createTextCells(null, data, cells, labelManager);\n        textCells = textCells.map((cell, k) => cell.source(k).config(facet));\n        return textCells;\n    });\n};\n\n/**\n * Creates a set of placeholders as a part of selection object\n *\n * @param {Array} normalizedOptions contains normalized rows and columns\n * @param {Array} matrices contains axis and value matrices\n * @param {aArrayny} projections contains set of row and column projections\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} Creates a set of placeholders as a part of selections\n */\nconst generatePlaceholders = (context, cells, labelManager) => {\n    let selectionObj;\n    const {\n        matrices,\n        fields,\n        facetsAndProjections,\n        selection,\n        facet,\n        encoders,\n        resolver\n    } = context;\n    const {\n        rows,\n        columns\n    } = fields;\n    const {\n        valuesMatrix\n    } = matrices;\n    const {\n        rowProjections,\n        colProjections\n    } = facetsAndProjections;\n    const {\n        rowKeys,\n        columnKeys\n    } = valuesMatrix;\n    const takeAxisFrom = encoders.simpleEncoder._axisFrom;\n    const takeHeaderFrom = encoders.simpleEncoder._headerFrom;\n\n    selectionObj = selection || {};\n\n    ['pie', X, Y].forEach((axis) => {\n        const axisFrom = axis === X ? takeAxisFrom.column : takeAxisFrom.row;\n        selectionObj = axisPlaceholderGn(context, selectionObj, cells)(axis, axisFrom);\n    });\n\n    const {\n        rowsPrimary,\n        rowsSecondary,\n        columnsPrimary,\n        columnsSecondary\n    } = selectionObj;\n\n    const rowAxis = rowsPrimary && rowsPrimary.getObjects().length ? rowsPrimary.getObjects() :\n        (rowsSecondary && rowsSecondary.getObjects().length ? rowsSecondary.getObjects() : []);\n    const colAxis = columnsPrimary && columnsPrimary.getObjects().length ? columnsPrimary.getObjects() :\n        (columnsSecondary && columnsSecondary.getObjects().length ? columnsSecondary.getObjects() : []);\n\n    const headerConfig = [\n        { type: LEFT, section: rows[0], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: RIGHT, section: rows[1], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: TOP, section: columns[0], axis: colAxis, headerFrom: takeHeaderFrom.column },\n        { type: BOTTOM, section: columns[1], axis: colAxis, headerFrom: takeHeaderFrom.column }\n    ];\n\n    headerConfig.forEach((config, index) => {\n        let keys;\n        let length;\n        const {\n            type,\n            section,\n            axis,\n            headerFrom\n        } = config;\n\n        if (index < 2) {\n            keys = rowKeys;\n            length = rowProjections.length > 0 ? rowProjections.length : 1;\n        } else {\n            keys = columnKeys;\n            length = colProjections.length > 0 ? colProjections.length : 1;\n        }\n        keys = keys.map(arr => arr.map(val => resolver.valueParser()(val)));\n        if (section.length && headerFrom === type && axis && keys.length) {\n            const hContext = { axis, length, type };\n            let headers = [];\n            if (index < 2) {\n                hContext.keys = keys;\n                hContext.facet = facet.rows;\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            } else {\n                hContext.facet = facet.columns;\n                hContext.keys = keys[0].map((key, i) => keys.map(e => e[i]));\n\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            }\n            selectionObj[`${type}Headers`] = headers;\n        } else {\n            selectionObj[`${type}Headers`] = null;\n        }\n    });\n    return selectionObj;\n};\n\n/**\n * Generates matrices\n *\n * @param {Object} config Configuration to generate matrices\n * @param {Array} matrices Matrices containing the set of visual units and axes units\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} contains a collection of matrices\n */\nexport const generateMatrices = (context, matrices, cells, labelManager) => {\n    const {\n        unitHeight,\n        unitWidth,\n        facetsAndProjections,\n        normalizedRows,\n        normalizedColumns,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n     } = context;\n    const placeholderContext = {\n        fields: {\n            rows: normalizedRows,\n            columns: normalizedColumns\n        },\n        matrices,\n        facetsAndProjections,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n    };\n    // Generate placeholders for all matrices\n    const selectionObj = generatePlaceholders(placeholderContext, cells, labelManager);\n    const {\n        columnsPrimary,\n        columnsSecondary,\n        rowsPrimary,\n        rowsSecondary,\n        leftHeaders,\n        topHeaders,\n        bottomHeaders,\n        rightHeaders\n    } = selectionObj;\n    const [rowPrime, rowSec, colPrime, colSec] = [rowsPrimary, rowsSecondary, columnsPrimary, columnsSecondary]\n        .map(d => (d ? d.getObjects() : []));\n    const [leftFacets, rightFacets] = [leftHeaders, rightHeaders]\n        .map(e => (e ? e.getObjects()\n                        .map(f => f.getObjects()) : []));\n    let rowPriority = rowSec.length ? 1 : -1;\n    rowPrime.length && rowPriority++;\n    let colPriority = colSec.length ? 1 : -1;\n    colPrime.length && colPriority++;\n\n    // Compute left matrix using left headers and the axes on the rows\n    let leftMatrix = leftFacets.length ? leftFacets.map((d, i) => {\n        rowPrime[i] = rowPrime[i] ? [rowPrime[i]] : [];\n        return [...d, ...rowPrime[i]];\n    }) : (rowPrime ? rowPrime.map(d => [d]) : []);\n\n    // Compute right matrix using right headers and the axes on the rows\n    const rightMatrix = rowSec.length ? rowSec.map((d, i) => [d, ...(rightFacets[i] || [])]) : (rightFacets.length ?\n        rightFacets.map(d => [...d]) : []);\n\n    const topMatrix = [];\n    if (topHeaders) {\n        const headers = topHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                topMatrix[i] = topMatrix[i] || [];\n                topMatrix[i].push(x);\n            });\n        });\n    }\n    // Compute top matrix using the top headers and axes on the columns\n    if (colPrime.length) {\n        topMatrix.push(colPrime);\n    }\n\n    // Bottom and right matrices are prepared using the user config.\n    let bottomMatrix = [];\n    if (colSec.length) {\n        bottomMatrix.push(colSec);\n    }\n    const currentBottomLength = bottomMatrix.length;\n    if (bottomHeaders) {\n        const headers = bottomHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                bottomMatrix[i + currentBottomLength] = bottomMatrix[i + currentBottomLength] || [];\n                bottomMatrix[i + currentBottomLength].push(x);\n            });\n        });\n    }\n\n    if (!leftMatrix.length && !rightMatrix.length) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        leftMatrix = [[cell]];\n    }\n\n    if (!topMatrix.length && (!bottomMatrix.length || !bottomMatrix[0].length)) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        bottomMatrix = [[cell]];\n    }\n\n    return {\n        rows: [leftMatrix, rightMatrix],\n        columns: [topMatrix, bottomMatrix],\n        selectionObj,\n        colPriority,\n        rowPriority\n    };\n};\n\nconst getAxisFields = (projections, fieldHolder = []) =>\n                            projections.reduce((acc, item) =>\n                                [...acc, ...item.reduce((ac, field) =>\n                                   (field instanceof SimpleVariable ? [...ac, field.oneVar()] : ac), [])], fieldHolder);\n\nconst sortDmTemporalFields = (resolver, datamodel) => {\n    let axisFields = [];\n    const projections = resolver.projections();\n    axisFields = getAxisFields(projections.rowProjections, getAxisFields(projections.colProjections));\n\n    const fieldConfig = datamodel.getFieldsConfig();\n    const temporalFields = axisFields.reduce((acc, field) =>\n        ((fieldConfig[field].def.subtype === TEMPORAL) ? [...acc, [field]] : acc), []);\n    return temporalFields.length ? datamodel.sort(temporalFields, { saveChild: true }) : datamodel;\n};\n\nconst transformDataModel = (dataModel, config, resolver) => {\n    let groupedModel;\n\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const resolvedData = resolver.data();\n    const { groupBy, suppliedLayers, facetsAndProjections } = config;\n\n    if (resolvedData instanceof DataModel) {\n        resolvedData.dispose();\n    }\n    groupedModel = dataModel.project(dataModel.getSchema().map(d => d.name));\n    resolver.data(groupedModel);\n    if (!groupBy.disabled) {\n        const fields = getFieldsFromSuppliedLayers(suppliedLayers, groupedModel.getFieldsConfig());\n        const allFields = extractFields(facetsAndProjections, fields);\n        const dimensions = allFields.filter(field =>\n            getObjProp(fieldsConfig, field, 'def', 'type') === FieldType.DIMENSION);\n        const aggregationFns = groupBy.measures;\n        const measureNames = Object.keys(groupedModel.getFieldspace().getMeasure());\n        const nearestAggFns = retrieveNearestGroupByReducers(groupedModel, ...measureNames);\n        const resolvedAggFns = mergeRecursive(nearestAggFns, aggregationFns);\n\n        groupedModel = groupedModel.groupBy(dimensions.length ? dimensions : [''], resolvedAggFns)\n                                            .project(allFields);\n    }\n    // sort temporal fields if any in the given rows and columns\n    groupedModel = sortDmTemporalFields(resolver, groupedModel);\n    return groupedModel;\n};\n\n/**\n * Computes matrices for a group\n *\n * @param {Object} datamodel on which the matrices are to be computed\n * @param {Object} config configuration of the matrices\n * @param {Object} layerRegistry contains the registered layers\n * @return {Object} conputed matrices\n * @memberof MatrixResolver\n */\nexport const computeMatrices = (context, config) => {\n    const {\n        resolver,\n        datamodel,\n        componentRegistry,\n        encoders\n    } = context;\n    const {\n            globalConfig,\n            selection,\n            transform\n        } = config;\n    const groupBy = globalConfig.autoGroupBy;\n    const { smartlabel: labelManager } = resolver.dependencies();\n    const fieldMap = datamodel.getFieldsConfig();\n    const layerConfig = resolver.layerConfig();\n    const registry = resolver.registry();\n    const { fields: normalizedRows } = resolver.horizontalAxis();\n    const { fields: normalizedColumns } = resolver.verticalAxis();\n    const otherEncodings = resolver.optionalProjections(config, layerConfig);\n    const facetsAndProjections = resolver.getAllFields();\n    const matrixGnContext = {\n        // Configuration to be passed to generate the  different matrices.\n        // A common config is used for both value matrices and other matrices\n        normalizedColumns,\n        normalizedRows,\n        facetsAndProjections,\n        layers: layerConfig,\n        fieldMap,\n        otherEncodings,\n        encoders,\n        facet: globalConfig.facet || {},\n        axisFrom: globalConfig.axisFrom || {},\n        selection,\n        resolver\n    };\n    const cells = {\n        GeomCell: resolver.getCellDef(registry.GeomCell),\n        AxisCell: resolver.getCellDef(registry.AxisCell),\n        BlankCell: resolver.getCellDef(registry.BlankCell),\n        TextCell: resolver.getCellDef(registry.TextCell)\n    };\n    const isRowSizeEqual = isDistributionEqual(normalizedRows);\n    const isColumnSizeEqual = isDistributionEqual(normalizedColumns);\n\n    resolver.colCells({});\n    resolver.rowCells({});\n    resolver.datamodelTransform(transform || {});\n\n    // Cell creation begins here\n    resolver.resetSimpleAxes();\n\n    const {\n        entryCellMap\n    } = resolver.cacheMaps();\n    const newCacheMap = {\n        exitCellMap: entryCellMap,\n        entryCellMap: new Map()\n    };\n\n    resolver.cacheMaps(newCacheMap);\n\n    const valueCellContext = {\n        config: globalConfig,\n        suppliedLayers: encoders.simpleEncoder.serializeLayerConfig(resolver.layerConfig()),\n        resolver,\n        cell: cells.GeomCell,\n        encoder: encoders.simpleEncoder,\n        newCacheMap,\n        detailFields: config.detail,\n        retinalConfig: {\n            color: config.color,\n            size: config.size,\n            shape: config.shape\n        }\n    };\n\n    const groupedModel = transformDataModel(datamodel, {\n        facetsAndProjections,\n        suppliedLayers: valueCellContext.suppliedLayers,\n        groupBy\n    }, resolver);\n\n    // return a callback function to create the cells from the matrix\n    const cellCreator = resolver.valueCellsCreator(valueCellContext);\n    // Creates value matrices from the datamodel and configs\n    const valueMatrixInfo = getMatrixModel(groupedModel, facetsAndProjections, cellCreator, globalConfig);\n\n    removeExitCells(resolver);\n    resolver.cacheMaps().exitCellMap.clear();\n    resolver.valueMatrix(valueMatrixInfo.matrix);\n\n    const { xAxes, yAxes } = mutateAxesFromMap(resolver.cacheMaps(), resolver.axes());\n\n    resolver.axes({\n        x: xAxes,\n        y: yAxes\n    });\n\n    resolver.createUnits(componentRegistry, config);\n\n    const matrices = {\n        valuesMatrix: valueMatrixInfo,\n        axesMatrix: resolver.axes()\n    };\n    // Create all matrices\n    const {\n        rows,\n        columns,\n        selectionObj,\n        rowPriority,\n        colPriority\n    } = generateMatrices(matrixGnContext, matrices, cells, labelManager);\n\n    resolver.rowMatrix(rows);\n    resolver.columnMatrix(columns);\n\n    return {\n        rows: resolver.rowMatrix(),\n        columns: resolver.columnMatrix(),\n        values: resolver.valueMatrix(),\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority: {\n            row: rowPriority,\n            col: colPriority\n        },\n        selection: selectionObj,\n        dataModels: {\n            groupedModel,\n            parentModel: datamodel\n        }\n    };\n};\n","export const RESOLVER_PROPS = {\n    dependencies: {},\n    units: {},\n    datamodelTransform: {},\n    layerConfig: {},\n    matrixLayers: {},\n    colCells: {},\n    rowCells: {},\n    rowMatrix: {},\n    columnMatrix: {},\n    valueMatrix: {},\n    encoder: {},\n    valueParser: {},\n    data: {}\n};\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { generateGetterSetters, STATE_NAMESPACES, getUniqueId } from 'muze-utils';\nimport {\n     initializeCacheMaps,\n     headerCreator,\n     extractUnitConfig,\n     setFacetsAndProjections\n} from './group-utils';\nimport {\n     ROW, COL, LEFT, RIGHT, COLOR, SIZE, SHAPE, DETAIL, CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS, INITIALIZED,\n     AXIS, UNIT, BEFORE_UPDATE, UPDATED, VALUE_MATRIX, FACET_HEADERS\n} from '../enums/constants';\nimport { createValueCells, computeMatrices } from './cell-creator';\nimport { RESOLVER_PROPS } from './resolver-props';\n\n/**\n * Resolves the matrices from configuration provided\n *\n * @export\n * @class MatrixResolver\n */\nexport default class MatrixResolver {\n\n    /**\n     * Creates an instance of MatrixResolver.\n     * @param {Object} dependencies needed to run the resolver\n     * @memberof MatrixResolver\n     */\n    constructor (dependencies) {\n        this._registry = {};\n        this._layerConfig = [];\n        this._matrixLayers = [];\n        this._dependencies = dependencies;\n        this._rowMatrix = [];\n        this._columnMatrix = [];\n        this._valueMatrix = [];\n        this._facets = { rowFacets: [], colFacets: [] };\n        this._projections = { rowProjections: [], colProjections: [] };\n        this._datamodelTransform = {};\n        this._units = [];\n        this._cacheMaps = {};\n        this._fireboltDeps = {};\n        this._axes = {\n            x: {},\n            y: {},\n            color: [],\n            size: [],\n            shape: [],\n            radius: [],\n            angle: [],\n            angle0: []\n        };\n        generateGetterSetters(this, RESOLVER_PROPS);\n        this.cacheMaps(initializeCacheMaps());\n    }\n\n    /**\n     * Set:  Registers placeholders, Get: return {Object} those placeholders\n     *\n     * @param {Object} placeholders cells that will construct the group\n     * @return {Object} Either current instance or the set of placeholders\n     * @memberof MatrixResolver\n     */\n    registry (...placeholders) {\n        if (placeholders.length) {\n            Object.entries(placeholders[0]).forEach((val) => {\n                this._registry[val[0]] = val[1];\n            });\n            return this;\n        }\n        return this._registry;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    cacheMaps (...maps) {\n        if (maps.length) {\n            [CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS].forEach((e) => {\n                this._cacheMaps[`${e}Map`] = maps[0][`${e}Map`] || this._cacheMaps[`${e}Map`];\n            });\n            return this;\n        }\n        return this._cacheMaps;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    axes (...axes) {\n        if (axes.length) {\n            this._axes = Object.assign({}, this._axes, axes[0]);\n            return this;\n        }\n        return this._axes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} facets\n     *\n     * @memberof MatrixResolver\n     */\n    facets (...facets) {\n        if (facets.length) {\n            Object.entries(facets[0]).forEach((e) => {\n                this._facets[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._facets;\n    }\n\n    /**\n     *\n     *\n     * @param {*} projections\n     *\n     * @memberof MatrixResolver\n     */\n    projections (...projections) {\n        if (projections.length) {\n            Object.entries(projections[0]).forEach((e) => {\n                this._projections[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._projections;\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @param {*} layerConfig\n     *\n     * @memberof MatrixResolver\n     */\n    optionalProjections (config, layerConfig) {\n        const otherEncodings = {};\n        const optionalProjections = [];\n        const otherEncodingTypes = [SIZE, COLOR, SHAPE];\n\n        otherEncodingTypes.forEach((type) => {\n            if (config[type] && config[type].field) {\n                const enc = config[type];\n                otherEncodings[type] = enc.field;\n                optionalProjections.push(enc.field);\n            }\n        });\n\n        if (config[DETAIL]) {\n            optionalProjections.push(...config.detail);\n        }\n\n        if (layerConfig.length) {\n            layerConfig.forEach((layer) => {\n                if (layer.encoding) {\n                    Object.values(layer.encoding).forEach((enc) => {\n                        if (enc && optionalProjections.indexOf(enc.field) === -1) {\n                            optionalProjections.push(enc.field ? enc.field : enc);\n                        }\n                    });\n                }\n            });\n        }\n        this.projections({ optionalProjections });\n        return otherEncodings;\n    }\n\n    /**\n     * return the normalized set of rows and facets and projections\n     *\n     * @param {Object} rows parameters needed to set horizontal axis consisiting of rows\n     * @return {Object} facets, projections and normalized rows\n     * @memberof MatrixResolver\n     */\n    horizontalAxis (rows, encoder) {\n        if (rows) {\n            this._horizontalAxis = setFacetsAndProjections(this, { type: ROW, fields: rows }, encoder);\n            return this;\n        }\n        return this._horizontalAxis;\n    }\n\n    /**\n     * return the normalized set of columns and facets and projections\n     *\n     * @param {Object} columns parameters needed to set vertical axis consisiting of columns\n     * @return {Object} facets, projections and normalized columns\n     * @memberof MatrixResolver\n     */\n    verticalAxis (columns, encoder) {\n        if (columns) {\n            this._verticalAxis = setFacetsAndProjections(this, { type: COL, fields: columns }, encoder);\n            return this;\n        }\n        return this._verticalAxis;\n    }\n\n    /**\n     * Gets the class definition of a particular cell type(if the particular type has been extended, that particular\n     * definition is returned)\n     *\n     * @param {Object} cell cell whose class definition is to be retrieved\n     * @return {Object} cell definition\n     * @memberof MatrixResolver\n     */\n    getCellDef (cell) {\n        const registry = this.registry();\n\n        Object.values(registry).forEach((e) => {\n            if (e.prototype instanceof cell) {\n                cell = e;\n            }\n        });\n        return cell;\n    }\n\n    /**\n     * return a visual cell creator along with its axis information to be injected to the datamodel creation\n     * function\n     *\n     * @param {Object} GeomCell Type of cell to be created\n     * @return {Object} Created cell\n     * @memberof MatrixResolver\n     */\n    valueCellsCreator (context) {\n        // reset matrix layers\n        this.matrixLayers([]);\n\n        return (datamodel, fieldInfo, facets) => createValueCells(context, datamodel, fieldInfo, facets);\n    }\n\n    /**\n     * Callback to be applied on each cell of a matrix of a particular type\n     *\n     * @param {string} matrixType type of matrix on which callback is to be applied\n     * @param {Function} callback function to be applied to each cell\n     * @memberof MatrixResolver\n     */\n    forEach (matrixType, callback) {\n        this[matrixType]().forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                callback(rIndex, cIndex, col);\n            });\n        });\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getAllFields () {\n        const retObj = this.projections();\n\n        Object.entries(this.facets()).forEach((e) => {\n            retObj[e[0]] = e[1];\n        });\n        return retObj;\n    }\n\n    /**\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    resetSimpleAxes () {\n        return this.axes({\n            x: new Set(),\n            y: new Set(),\n            radius: [],\n            angle: [],\n            angle0: [],\n            pie: []\n        });\n    }\n\n    setFireboltDependencies (prop, deps) {\n        Object.assign(this._fireboltDeps, {\n            [prop]: deps\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} componentRegistry\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createUnits (componentRegistry, config) {\n        const {\n            globalConfig,\n            alias,\n            coord\n        } = config;\n        const {\n            layerRegistry,\n            sideEffectRegistry\n        } = componentRegistry;\n        const {\n            smartlabel: smartLabel,\n            lifeCycleManager,\n            throwback\n        } = this.dependencies();\n        const fireboltDeps = this._fireboltDeps;\n\n        // Provide the source for the matrix\n        const units = [[]];\n        // Setting unit configuration\n        const unitConfig = extractUnitConfig(globalConfig || {});\n        const store = this.store();\n        store.lockModel();\n\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            let unit = el.source();\n            if (!unit) {\n                const namespace = `unit${i}-${j}-${getUniqueId()}`;\n\n                unit = VisualUnit.create({\n                    layerRegistry,\n                    sideEffectRegistry\n                }, {\n                    smartLabel,\n                    lifeCycleManager,\n                    throwback,\n                    fireboltDeps\n                });\n                unit.metaInf({\n                    rowIndex: i,\n                    colIndex: j,\n                    namespace\n                });\n                unit.store(store);\n                unit.coord(coord);\n                el.source(unit);\n            }\n            !units[i] && (units[i] = []);\n            units[i][j] = unit;\n            unit.parentAlias(alias)\n                .valueParser(this.valueParser())\n                .coord(coord);\n            el.config(unitConfig);\n        });\n        store.unlockModel();\n        lifeCycleManager.notify({ client: units, action: INITIALIZED, formalName: UNIT });\n        return this.units(units);\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    setDomains (config, datamodel, encoders) {\n        const {\n            color,\n            shape,\n            size,\n            globalConfig\n        } = config;\n        const groupBy = globalConfig.autoGroupBy;\n        const {\n            rowFacets,\n            colFacets\n        } = this.getAllFields();\n        const encoding = {\n            color,\n            shape,\n            size\n        };\n        const facetFields = [...rowFacets.map(e => e.toString()), ...colFacets.map(e => e.toString())];\n        const retContext = {\n            domains: encoders.simpleEncoder.getRetinalFieldsDomain(datamodel, encoding, facetFields, groupBy),\n            axes: this.axes(),\n            encoding\n        };\n        encoders.retinalEncoder.setCommonDomain(retContext);\n        return this;\n    }\n\n    resetFacetsAndProjections () {\n        this._facets = {};\n        this._projections = {};\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getRetinalAxes () {\n        const {\n            color,\n            shape,\n            size\n        } = this.axes();\n\n        return {\n            color: [...color],\n            shape: [...shape],\n            size: [...size]\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} type\n     *\n     * @memberof MatrixResolver\n     */\n    getSimpleAxes (type) {\n        return this.axes()[`${type}`];\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createRetinalAxes (fieldsConfig, config, encoders) {\n        const layerConfig = this.layerConfig();\n        this.optionalProjections(config, layerConfig);\n        const retinalAxes = encoders.retinalEncoder.createAxis({\n            fieldsConfig,\n            config,\n            axes: this.axes()\n        });\n        const {\n            lifeCycleManager\n        } = this.dependencies();\n\n        [COLOR, SHAPE, SIZE].forEach((e) => {\n            this.axes()[e] = retinalAxes[e];\n        });\n\n        lifeCycleManager.notify({ client: this.axes(), action: INITIALIZED, formalName: AXIS });\n        lifeCycleManager.notify({ client: this.units(), action: BEFORE_UPDATE, formalName: UNIT });\n\n        const units = [];\n        const matrixLayers = this.matrixLayers();\n        const props = [`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.domain`,\n            `${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`];\n        const store = this.store();\n        store.lockCommits(props);\n        store.lockModel();\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            el.axes(Object.assign(el.axes(), retinalAxes));\n            el.source() && el.source().retinalFields(config);\n            el.layerDef(matrixLayers[i][j]);\n            el.updateModel();\n\n            units.push(el.source());\n        });\n        store.unlockModel()\n            .unlockCommits([props[0]])\n            .unlockCommits([props[1]]);\n        lifeCycleManager.notify({ client: units, action: UPDATED, formalName: UNIT });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} placeholders\n     * @param {*} fieldNames\n     *\n     * @memberof MatrixResolver\n     */\n    createHeaders (placeholders, fieldNames, config) {\n        let bottomLeft = [];\n        let bottomRight = [];\n        const {\n            rows,\n            columns\n        } = placeholders;\n        const {\n            smartlabel: labelManager,\n            lifeCycleManager\n        } = this.dependencies();\n        const {\n            showHeaders,\n            classPrefix\n        } = config;\n        const TextCell = this.getCellDef(this.registry().TextCell);\n        const BlankCell = this.getCellDef(this.registry().BlankCell);\n        const [leftRows, rightRows] = rows;\n        const [topCols, bottomCols] = columns;\n        const rowHeaders = fieldNames.rows;\n        const blankCellCreator = cell => new BlankCell().config({ show: cell.config().show });\n\n        // Headers and footers are created based on the rows. Thereafter, using the column information\n        // they are tabularized into the current structure\n        const headers = {\n            left: headerCreator(leftRows, rowHeaders[0], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager }),\n            right: headerCreator(rightRows, rowHeaders[1], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager })\n        };\n        const footers = {\n            left: leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : [],\n            right: rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []\n        };\n        const [topLeft, topRight] = [LEFT, RIGHT].map(type => topCols.map((col, i) => {\n            if (i === topCols.length - 1) {\n                return headers[type];\n            }\n            return footers[type];\n        }));\n\n        // Creating only bottom matrices if there is no information on the top\n        if (topCols.length === 0) {\n            [bottomLeft, bottomRight] = [LEFT, RIGHT].map(type => bottomCols.map((col, i) => {\n                if (i === 0) {\n                    return headers[type];\n                }\n                return footers[type];\n            }));\n        } else {\n            bottomLeft = bottomCols.map(() => (leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : []));\n            bottomRight = bottomCols.map(() => (rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []));\n        }\n\n        lifeCycleManager.notify({\n            client: [topLeft, topRight, bottomLeft, bottomRight],\n            action: INITIALIZED,\n            formalName: FACET_HEADERS\n        });\n\n        return { topLeft, topRight, bottomLeft, bottomRight };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @param {*} componentRegistry\n     * @param {*} encoders\n     *\n     * @memberof MatrixResolver\n     */\n    getMatrices (datamodel, config, componentRegistry, encoders) {\n        const context = {\n            datamodel,\n            componentRegistry,\n            encoders,\n            resolver: this\n        };\n\n        return computeMatrices(context, config);\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            return this;\n        }\n        return this._store;\n    }\n\n    clear () {\n        const cacheMaps = this._cacheMaps;\n        for (const key in cacheMaps) {\n            cacheMaps[key].clear();\n        }\n    }\n\n}\n","/**\n * This is a wrapper class over the matrix of cells which gets created in visual group. Visual Group creates left,\n * right, bottom and top and center matrices and wraps them using this class.\n *\n * @public\n * @class ValueMatrix\n */\nclass ValueMatrix {\n\n    /**\n     * Creates an instance of ValueMatrix.\n     *\n     * @param {Array} matrixArr Matrix array.\n     */\n    constructor (matrixArr) {\n        const instancesById = {};\n\n        this.matrix(matrixArr || []);\n        this.filter(() => true);\n\n        this.each((el, rIdx, cIdx) => {\n            const cellValue = el.valueOf();\n            if (cellValue && cellValue.id) {\n                const id = cellValue.id();\n                instancesById[id] = {\n                    instance: cellValue,\n                    rowIndex: rIdx,\n                    colIndex: cIdx\n                };\n            }\n        });\n\n        this.instancesById(instancesById);\n    }\n\n    instancesById (...id) {\n        if (id.length) {\n            this._instancesById = id[0];\n            return this;\n        }\n        return this._instancesById;\n    }\n\n    /**\n     * Returns the array of matrices contained in this instance.\n     *\n     * @public\n     * @return {Array} Array of matrices.\n     */\n    matrix (...matrix) {\n        if (matrix.length) {\n            this._matrix = matrix[0];\n            return this;\n        }\n        return this._matrix;\n    }\n\n    /**\n     * Sets a filter criteria. This filter criteria gets applied when each function is called.\n     *\n     * @public\n     * @param {Function} fn Filter function.\n     *\n     * @return {ValueMatrix} Instance of value matrix.\n     */\n    filter (...fn) {\n        if (fn.length) {\n            this._filterFn = fn[0];\n            return this;\n        }\n        return this._filterFn;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    width () {\n        let rowWidth = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowWidth = 0;\n            row.forEach((cell) => {\n                currentRowWidth += cell.getLogicalSpace().width;\n            });\n            rowWidth = Math.max(rowWidth, currentRowWidth);\n        });\n        return rowWidth;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    height () {\n        let rowHeight = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowHeight = 0;\n            row.forEach((cell) => {\n                currentRowHeight = Math.max(currentRowHeight, cell.getLogicalSpace().height);\n            });\n            rowHeight += currentRowHeight;\n        });\n        return rowHeight;\n    }\n\n    /**\n     * Iterates through the two dimensional matrix array and calls the given callback function with the cell instance,\n     * row index, column index and the matrix array.\n     *\n     * @param {Function} fn Callback function which will get called for every cell.\n     * @return {ValueMatrix} Instance of the value matrix.\n     */\n    each (fn) {\n        const matrix = this.matrix();\n        const filterFn = this.filter();\n\n        matrix.forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                if (filterFn(col)) {\n                    fn(col, rIndex, cIndex, matrix);\n                }\n            });\n        });\n        return this;\n    }\n\n    findPlaceHolderById (id) {\n        return this.instancesById()[id];\n    }\n\n    clear () {\n        this.each(cell => cell.remove());\n        this.matrix([]);\n    }\n}\n\nexport default ValueMatrix;\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { BaseLayer } from '@chartshq/visual-layer';\nimport { getEncoder, getBorders } from '../group-helper';\nimport { RetinalEncoder } from '../encoder';\nimport { registerDomainChangeListener, unsubscribeChangeListeners } from './change-listener';\nimport ValueMatrix from './value-matrix';\n\nexport const createUnitState = (context) => {\n    const [globalState, localState] = VisualUnit.getState();\n    const store = context.store();\n    store.append(STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE, globalState)\n        .append(STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE, localState);\n};\n\nexport const initializeGlobalState = (context) => {\n    const globalState = context.constructor.getState()[0];\n    const store = context.store();\n    store.append(STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const createLayerState = (context) => {\n    const [globalState, localState] = BaseLayer.getState();\n    context.store().append(STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE, globalState)\n        .append(STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE, localState);\n};\n\nconst sanitizeRetinalConfig = (retinalConf) => {\n    const conf = {};\n    for (const key in retinalConf) {\n        const confValue = retinalConf[key];\n        if (typeof confValue === 'string' || !confValue) {\n            conf[key] = {\n                field: retinalConf[key]\n            };\n        } else {\n            conf[key] = confValue;\n        }\n    }\n    return conf;\n};\n\nexport const setMatrixInstances = (context, placeholder) => {\n    let {\n        values,\n        rows,\n        columns\n    } = placeholder;\n    values = values || [];\n    rows = rows || [];\n    columns = columns || [];\n    context._composition.matrices = {\n        value: new ValueMatrix(values),\n        left: new ValueMatrix(rows[0]),\n        right: new ValueMatrix(rows[1]),\n        top: new ValueMatrix(columns[0]),\n        bottom: new ValueMatrix(columns[1])\n    };\n\n    context._dependencies.throwback.commit(CommonProps.MATRIX_CREATED, true);\n    return context;\n};\n\nexport const createMatrices = (context) => {\n    const rows = context.rows();\n    const columns = context.columns();\n    const color = context.color();\n    const datamodel = context.data();\n    const size = context.size();\n    const detail = context.detail();\n    const layers = context.layers();\n    const transform = context.transform();\n    const config = context.config();\n    const shape = context.shape();\n\n    // Get the resolver for the matrices\n    const resolver = context.resolver();\n    resolver.store(context.store());\n    resolver.valueParser(context.valueParser());\n    // Prepare configuration for matrix preparation\n    let matrixConfig = {\n        selection: context.selection(),\n        alias: context.alias(),\n        globalConfig: config || {},\n        rows,\n        columns,\n        detail,\n        layers,\n        transform\n    };\n\n    unsubscribeChangeListeners(context);\n\n    const retinalConfig = sanitizeRetinalConfig({\n        color,\n        shape,\n        size\n    });\n\n    matrixConfig = Object.assign(matrixConfig, retinalConfig);\n    // Create the encoders for the group\n    const encoders = {};\n    encoders.retinalEncoder = new RetinalEncoder();\n    encoders.simpleEncoder = getEncoder(layers);\n    matrixConfig.coord = encoders.simpleEncoder.constructor.type();\n    resolver.encoder(encoders.simpleEncoder);\n\n    // Set the group type\n    context.groupType(encoders.simpleEncoder.constructor.type());\n\n    // Get sanitized fields as instances of the Vars Class\n    const fields = encoders.simpleEncoder.fieldSanitizer(datamodel, matrixConfig);\n    encoders.simpleEncoder.setAxisAndHeaders(config ? config.axisFrom : {}, fields);\n    // Setting layers for the code\n    layers && resolver.layerConfig(layers);\n    // Set the row and column axes\n    resolver.horizontalAxis(fields.rows, encoders).verticalAxis(fields.columns, encoders);\n    // Getting the placeholders\n    const placeholderInfo = resolver.getMatrices(datamodel, matrixConfig, context.registry(), encoders);\n    context._groupedDataModel = placeholderInfo.dataModels.groupedModel;\n    // Set the selection object\n    context.selection(placeholderInfo.selection);\n\n    // Create retinal axes\n    resolver.createRetinalAxes(placeholderInfo.dataModels.parentModel.getFieldsConfig(), retinalConfig,\n            encoders);\n\n    // Domains are evaluated for each of the axes for commonality\n    resolver.setDomains(matrixConfig, placeholderInfo.dataModels, encoders);\n\n    // Create matrix instances\n    setMatrixInstances(context, placeholderInfo);\n\n    // Prepare corner matrices\n    context.cornerMatrices(resolver.createHeaders(placeholderInfo, fields, config));\n\n    // Set placeholder information\n    context.placeholderInfo(placeholderInfo);\n\n    context._composition.axes = resolver.axes();\n    context.metaData({\n        border: getBorders(placeholderInfo, encoders.simpleEncoder)\n    });\n\n    resolver.encoder().unionUnitDomains(context);\n\n    registerDomainChangeListener(context);\n    return context;\n};\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { BaseLayer } from '@chartshq/visual-layer';\n\nimport { STATE_NAMESPACES } from 'muze-utils';\n\nexport const setupChangeListeners = (context) => {\n    const store = context.store();\n    const stores = {\n        throwback: context._dependencies.throwback,\n        store\n    };\n\n    ['x', 'y'].forEach((axisType) => {\n        store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${axisType}`], () => {\n            const groupAxes = context.resolver().axes();\n            groupAxes[axisType].forEach(axes => axes.forEach((axis) => {\n                axis.render();\n            }));\n        });\n    });\n\n    [VisualUnit, BaseLayer].forEach((comp) => {\n        const formalName = comp.formalName();\n        ['store', 'throwback'].forEach((type) => {\n            const listeners = comp.getListeners()[type];\n            const storeInst = stores[type];\n            listeners.forEach((listenerInf) => {\n                storeInst[listenerInf.type](listenerInf.props, listenerInf.listener, false, {\n                    namespace: formalName,\n                    subNamespace: listenerInf.subNamespace\n                });\n            });\n        });\n    });\n};\n\nexport const registerDomainChangeListener = (context) => {\n    const store = context.store();\n    store.registerChangeListener([`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`], () => {\n        context.resolver().encoder().unionUnitDomains(context);\n    }, false, {\n        key: 'unionDomain'\n    });\n};\n\nexport const unsubscribeChangeListeners = (context) => {\n    context.store().unsubscribe({\n        key: 'unionDomain'\n    });\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\nexport const PROPS = {\n    alias: {},\n    data: {},\n    cornerMatrices: {\n        defaultValue: {\n            topLeft: [],\n            topRight: [],\n            bottomLeft: [],\n            bottomRight: []\n        }\n    },\n    groupType: {},\n\n    metaData: {\n        defaultValue: {\n            border: {}\n        }\n    },\n    placeholderInfo: {\n        defaultValue: {}\n    },\n    resolver: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    registry: {\n        sanitization: (context, value) => {\n            if (context.resolver) {\n                context.resolver().registry(value.cellRegistry);\n            }\n            return value;\n        }\n    },\n    selection: {},\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { generateGetterSetters } from 'muze-utils';\nimport localOptions from './local-options';\nimport { SimpleGroup } from '../simple-group';\nimport {\n    MatrixResolver,\n    findInGroup\n} from '../group-helper';\nimport { createUnitState, initializeGlobalState, setMatrixInstances, createMatrices, createLayerState } from './helper';\nimport { setupChangeListeners } from './change-listener';\nimport { PROPS } from './props';\nimport {\n    CONFIG,\n    MOUNT,\n    RETINAL,\n    Y\n} from '../enums/constants';\n\n/**\n * VisualGroup is instantiated by canvas for creating {@link VisualUnit} and axes instances.It creates the\n * the matrix of visual units and axes. It also creates the layout instance which manages the allocation\n * of space of matrices.\n *\n * To get instance of visual group,\n * ```\n *      const visualGroup = canvas.composition().visualGroup;\n * ```\n * @public\n *\n * @class VisualGroup\n */\nclass VisualGroup extends SimpleGroup {\n\n    /**\n     * Creates an instance of VisualGroup. Requires dependencies and other registry options for placeholders\n     * and layers that create individual units.\n     *\n     * @param {Object} registry Key value pair of compostions for the group\n     * @param {Object} dependencies Dependencies needed to run the group\n     * @memberof VisualGroup\n     */\n    constructor (registry, dependencies) {\n        super();\n\n        const {\n            componentSubRegistry\n        } = registry;\n\n        this._dependencies = dependencies;\n        // Generate getter/setter methods for all properties of the class\n        // One can get each property by calling the method and can set it\n        // by passing paramaters for the same. Thus, one can chain setter\n        // getter methods.\n        generateGetterSetters(this, PROPS);\n        generateGetterSetters(this, localOptions);\n        // Populate the store with default values\n        // initialize group compositions\n        this._composition = {};\n        // store reference to data\n        this._data = [];\n        // store reference to mountpoint\n        this._mount = null;\n        // selection object that takes care of updating of components\n        this._selection = {};\n        // Create instance of matrix resolver\n        this.resolver(new MatrixResolver(this._dependencies));\n        // matrix instance store each of the matrices\n        setMatrixInstances(this, {});\n         // Getting indiviual registered items\n        this.registry({\n            layerRegistry: componentSubRegistry.layerRegistry.get(),\n            cellRegistry: componentSubRegistry.cellRegistry.get()\n        });\n    }\n\n    static getState () {\n        return [{\n            domain: {\n                x: null,\n                y: null,\n                radius: null,\n                angle: null,\n                angle0: null\n            }\n        }, {}];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            initializeGlobalState(this);\n            createUnitState(this);\n            createLayerState(this);\n            // Register listeners\n            setupChangeListeners(this);\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Return the instances of matrices created by the visual group.\n     *\n     * @return {Object} Instance of matrices.\n     */\n    matrixInstance (...matrices) {\n        if (matrices.length) {\n            return this;\n        }\n        return this.composition().matrices;\n    }\n\n    /**\n     * Returns the composition of visual group.\n     *\n     * @public\n     *\n     * @return {Object} Composition of visual group. It contains instance of matrices {@link ValueMatrix}\n     * and instances of axis.\n     * ```\n     *          {\n     *              matrices: {\n     *                  value: // Instance of center value matrix.\n     *                  left: // Instance of left value matrix\n     *                  right: // Instance of right value matrix\n     *                  bottom: // Instance of bottom value matrix\n     *                  top: // Instance of top value matrix.\n     *              },\n     *              axes: {\n     *                  x: // Array of x axis.\n     *                  y: // Array of y axis\n     *                  color: // Array of color axis\n     *                  shape: // Array of shape axis\n     *                  size: // Array of size axis.\n     *              }\n     *          }\n     * ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    /**\n     * Locks the model to prevent change listeners to be triggered until unlocked\n     *\n     * @return {Object} Instance of class VisualGroup\n     * @memberof VisualGroup\n     */\n    lockModel () {\n        this.store().model.lock();\n        return this;\n    }\n\n    /**\n     * Unlocks the model so that all change listeners can be triggered\n     *\n     * @return {Object} Instance of class VisualGroup\n     */\n    unlockModel () {\n        this.store().model.unlock();\n        return this;\n    }\n\n    /**\n     * Returns the channel name of the variable. Channels are rows, columns, color, shape and size.\n     *\n     * @public\n     * @param {string} variable Name of the variable.\n     *\n     * @return {string} Name of the channel.\n     */\n    where (variable) {\n        return findInGroup(variable, this.resolver().getAllFields());\n    }\n\n    /**\n     * Gets the axis instances of the visual group based on the given axis type.\n     *\n     * @public\n     * @param {string} type Type of axis. X,Y or retinal axes.\n     *\n     * @return {Array} Array of axis instances.\n     */\n    getAxes (type) {\n        if (type === RETINAL) {\n            return this.resolver().getRetinalAxes();\n        }\n        return this.resolver().getSimpleAxes(type);\n    }\n\n    /**\n     * Returns the instances of cells based on the given type. Type can be given as `row' or `col`.\n     *\n     * @public\n     * @return {Array} Two dimensional array of cells.\n     */\n    getCells (type) {\n        return this.resolver()[`${type}Cells`]();\n    }\n\n    getFieldsFromChannel (channel) {\n        const {\n            rowProjections,\n            colProjections\n        } = this.resolver().getAllFields();\n        return channel === Y ? rowProjections : colProjections;\n    }\n\n    getCellsByFacetKey (facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey] || [];\n        return cells;\n    }\n\n    getAxesByFacetKey (axisType, facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey];\n        const axes = cells[0].valueOf().axes()[axisType] || [];\n\n        return axes;\n    }\n\n    /**\n     * This method is used to return a serialized representation of the instance's properties.\n     *\n     * @return {Object} Object with config proprties.\n     * @memberof VisualGroup\n     */\n    serialize () {\n        const store = this.store();\n\n        return {\n            [CONFIG]: store.get(CONFIG),\n            [MOUNT]: store.get(MOUNT)\n        };\n    }\n\n    /**\n     * Returns the grouped datamodel prepared by visual group. If there is no group by performed, then it returns the\n     * original data model passed to visual group.\n     *\n     * @return {DataModel} Grouped data model.\n     */\n    getGroupByData () {\n        return this._groupedDataModel;\n    }\n\n    createMatrices () {\n        createMatrices(this);\n    }\n\n    remove () {\n        this.matrixInstance().value.clear();\n        this.resolver().clear();\n        const info = this.placeholderInfo();\n        info.rows = null;\n        info.columns = null;\n        info.values = null;\n    }\n}\n\nexport default VisualGroup;\n","import { PersistentBehaviour, SELECTION } from '@chartshq/muze-firebolt';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return 'select';\n    }\n\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            // new add set\n            const existingRemoveSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_OLD_EXIT\n                || selectionSet._set[d] === SELECTION.SELECTION_NEW_EXIT);\n                // existing add set\n            if (existingRemoveSet.length) {\n                selectionSet.updateEntry();\n                selectionSet.add(existingRemoveSet);\n            } else {\n                selectionSet.updateExit();\n                selectionSet.remove(addSet);\n            }\n            const { exitSet } = selectionSet.getSets();\n            const mergedExitSet = [...new Set(exitSet[1]), ...new Set(exitSet[0])];\n            const completeSetCount = selectionSet.getCompleteSet().length;\n            if (exitSet[1].length !== completeSetCount && mergedExitSet.length === completeSetCount) {\n                selectionSet.reset();\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n        return this;\n    }\n}\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nconst CLASSPREFIX = 'muze';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        target: `.${CLASSPREFIX}-gradient-rect`,\n        behaviours: [BEHAVIOURS.BRUSH]\n    },\n    [ACTIONS.HOVER]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.CLICK]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.SELECT]\n    }\n};\n\nexport const propagationBehaviourMap = {\n    [BEHAVIOURS.SELECT]: BEHAVIOURS.FILTER,\n    [BEHAVIOURS.BRUSH]: BEHAVIOURS.HIGHLIGHT\n};\n","import * as BEHAVIOURS from '../enums/behaviours';\nimport * as sideEffects from '../enums/side-effects';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: [sideEffects.SELECTIONBOX, {\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [sideEffects.Highlighter],\n    select: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }]\n};\n\nexport const propagationSideEffects = {\n    [BEHAVIOURS.BRUSH]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.SELECT]: ['filter']\n};\n\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n\n","export const SELECTIONBOX = 'selectionBox';\nexport const Highlighter = 'highlighter';\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const CONFIG = 'config';\nexport const DATAMODEL = 'dataModel';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const MAXWIDTH = 'max-width';\nexport const HEIGHT = 'height';\nexport const MOUNTPOINT = 'mountPoint';\nexport const GRIDLINEPARENTGROUPCLASS = 'grid-lines';\nexport const TRANSFORM = 'transform';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const DEFAULTCOLOR = '#F44336';\nexport const DEFAULTSIZE = 50;\nexport const DEFAULTSHAPE = 'circle';\nexport const STEP = 'step';\nexport const GRADIENT = 'gradient';\nexport const ORDINAL = 'ordinal';\nexport const SCALE_FUNCTIONS = {\n    size: 'getSize',\n    shape: 'getShape',\n    color: 'getColor'\n};\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const HORIZONTAL = 'horizontal';\nexport const VERTICAL = 'vertical';\nexport const CENTER = 'center';\nexport const VALUE = 'value';\nexport const PATH = 'path';\nexport const SHAPE = 'shape';\nexport const ICON = 'icon';\nexport const RECT = 'rect';\nexport const START = 'start';\nexport const UPPER = 'upper';\nexport const LOWER = 'lower';\nexport const END = 'end';\nexport const SIZE = 'size';\nexport const DISCRETE = 'discrete';\nexport const MEASURE = 'measure';\n\n","import { assembleModelFromIdentifiers, getDataModelFromRange } from 'muze-utils';\nimport { propagationBehaviourMap } from './action-behaviour-map';\nimport { propagationSideEffects } from './behaviour-effect-map';\nimport { STEP, GRADIENT, DISCRETE, MEASURE } from '../enums/constants';\n\nexport const propagate = (firebolt, action, selectionSet, config = {}) => {\n    let propagationData;\n    const context = firebolt.context;\n    const type = context.constructor.type();\n    const payload = config.payload;\n    const data = context.data();\n    const metaData = context.metaData();\n    const fieldType = metaData.getData().schema[0].type;\n\n    const propPayload = {};\n    const sourceId = context._id;\n    propPayload.action = propagationBehaviourMap[action] || action;\n    propPayload.sideEffects = propagationSideEffects[action];\n    propPayload.sourceCanvas = context.canvasAlias();\n    const isMutableAction = firebolt._actions.behavioural[propPayload.action].constructor.mutates();\n    if (payload.criteria === null) {\n        propagationData = null;\n    } else {\n        const entrySet = selectionSet.mergedEnter;\n        let values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.rawVal);\n        if (type === STEP || (type === DISCRETE && fieldType === MEASURE)) {\n            const field = Object.keys(payload.criteria || {})[0];\n            values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.range);\n            propagationData = values.length ? metaData.select((fields) => {\n                let check = false;\n                for (let i = 0; i < values.length; i++) {\n                    check = fields[field].internalValue >= values[i][0] && fields[field].internalValue <= values[i][1];\n                    if (check === true) {\n                        break;\n                    }\n                }\n                return check;\n            }, {\n                saveChild: false\n            }) : null;\n        } else if (type === GRADIENT) {\n            propagationData = getDataModelFromRange(metaData, payload.criteria);\n        } else if (values.length) {\n            propagationData = assembleModelFromIdentifiers(metaData, [payload.criteria[0], ...values.map(d => [d])]);\n        } else {\n            propPayload.criteria = null;\n            propagationData = metaData.select(() => true, {\n                saveChild: false\n            });\n        }\n    }\n\n    let propagateInterpolatedValues = false;\n\n    if (propagationData) {\n        const schema = propagationData.getSchema();\n        propagateInterpolatedValues = schema.every(d => d.type === MEASURE);\n    }\n\n    const propConfig = {\n        sourceId: `legend-${sourceId}`,\n        payload: propPayload,\n        criteria: propPayload.criteria === null ? null : propagationData,\n        isMutableAction,\n        propagateInterpolatedValues,\n        action: propPayload.action\n    };\n\n    metaData.propagate(propagationData, propConfig, true);\n};\n","import { Firebolt } from '@chartshq/muze-firebolt';\nimport { propagate } from './helper';\nimport { STEP, GRADIENT } from '../enums/constants';\n\n/**\n * This class manages the interactions of legend.\n * @export\n * @class LegendFireBolt\n * @extends {Firebolt}\n */\nexport class LegendFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this.initializeSideEffects();\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet[0];\n    }\n\n    propagate (behaviourName, payload, selectionSet) {\n        propagate(this, behaviourName, selectionSet, {\n            payload\n        });\n    }\n\n    getAddSetFromCriteria (criteria) {\n        let values;\n        let uniqueIds;\n        const type = this.context.constructor.type();\n\n        if (criteria === null) {\n            uniqueIds = null;\n        } else if (type === STEP) {\n            values = Object.values(criteria);\n            uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n        } else if (type === GRADIENT) {\n            uniqueIds = [];\n        } else {\n            values = criteria[1];\n            if (values) {\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.rawVal) !== -1).map(d => d.id);\n            } else {\n                values = Object.values(criteria);\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n            }\n        }\n        return {\n            uids: uniqueIds,\n            model: null\n        };\n    }\n\n    getFullData () {\n        return null;\n    }\n}\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\n/**\n * Adds dragging action to the target element.\n * @param {firebolt} firebolt firebolt\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let endPos = {};\n    let payload;\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const boundingBox = context.measurement().gradientDimensions;\n    const axisType = context.config().align === 'horizontal' ? 'x' : 'y';\n    const axisScale = context.axis().source().scale();\n    const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n    }).on('drag', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                    axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n            }\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }).on('end', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n        if (startPos[axisType] === endPos[axisType]) {\n            payload = {\n                criteria: {}\n            };\n        } else {\n            payload = {\n                criteria: {\n                    [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                        axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n                }\n            };\n        }\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }));\n};\n\nexport default drag;\n","import { getEvent } from 'muze-utils';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} Firebolt instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        const event = getEvent();\n                        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, {\n                            criteria: null\n                        }));\n                        event.stopPropagation();\n                    });\n};\n\nexport default hover;\n","/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nconst click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\n\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport click from './click';\nimport * as ACTIONNAMES from '../../enums/actions';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click\n};\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\n","import {\n    getMousePos,\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\nimport { HEIGHT, WIDTH, HORIZONTAL } from '../../enums/constants';\n\nconst getSelectionCriteria = (subject, axis, measures) => {\n    let criteria = [];\n    const {\n        axisScale,\n        axisType\n    } = axis;\n    const {\n        startPos,\n        endPos,\n        selectionBoxMeasure,\n        drawingInfMeasure,\n        offset\n    } = measures;\n    const subjectStartPoint = subject[axisType];\n\n    if (startPos[axisType] === endPos[axisType]) {\n        criteria = [];\n    } else if (subjectStartPoint + selectionBoxMeasure >= drawingInfMeasure + offset) {\n        criteria = [axisScale.invert(drawingInfMeasure + offset - selectionBoxMeasure),\n            axisScale.invert(drawingInfMeasure + offset)];\n    } else if (subjectStartPoint - offset < offset) {\n        criteria = [axisScale.invert(offset * 2), axisScale.invert(selectionBoxMeasure + offset * 2)];\n    } else {\n        criteria = [axisScale.invert(subjectStartPoint), axisScale.invert(subjectStartPoint + selectionBoxMeasure)];\n    }\n    axisType === 'x' ? criteria : criteria.reverse();\n    return criteria;\n};\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let payload;\n    const endPos = {};\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const axisScale = context.axis().source().scale();\n    const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n    const drawingInfMeasure = context.measurement().gradientDimensions[axisType === 'x' ?\n        WIDTH : HEIGHT];\n    const offset = axisScale.range()[axisType === 'x' ? 0 : 1];\n    const measures = {\n        drawingInfMeasure,\n        offset\n    };\n    let subject = {};\n\n    targetEl.call(d3Drag().on('start', function () {\n        const event = getEvent();\n        startPos = getMousePos(this, event.sourceEvent);\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n\n        subject.x += event.dx;\n        subject.y += event.dy;\n\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(subject, { axisScale, axisType }, measures);\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }).on('end', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(event, { axisScale, axisType }, measures);\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true,\n            config: {\n                transition: {\n                    duration: 200\n                }\n            }\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }));\n};\n\n","import { makeElement } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { CLASSPREFIX, HEIGHT, WIDTH, HORIZONTAL, RECT } from '../../../enums/constants';\nimport { SELECTIONBOX } from '../../../enums/side-effects';\nimport { selectionBoxDrag } from '../../physical/selection-box-drag';\nimport './styles.scss';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\n/* istanbul ignore next */ class SelectionBox extends SpawnableSideEffect {\n    static formalName () {\n        return SELECTIONBOX;\n    }\n\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            className: 'legend-selection-box',\n            classPrefix: CLASSPREFIX\n        };\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     */\n    /* istanbul ignore next */ apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const firebolt = this.firebolt;\n        const context = firebolt.context;\n        const config = this.config();\n        const axis = context.axis().source();\n        const className = `${config.classPrefix}-${config.className}`;\n\n        const domain = payload.criteria[firebolt.context.fieldName()];\n        const axisScale = axis.scale();\n        const range = domain ? [axis.getScaleValue(domain[0]), axis.getScaleValue(domain[1])] : [];\n\n        const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n\n        const gradientDimension = firebolt.context.measurement().gradientDimensions[axisType === 'x' ?\n            HEIGHT : WIDTH];\n\n        const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n        const legendGradContainer = context.getDrawingContext().svgContainer;\n        const legendSelGroup = makeElement(legendGradContainer, 'g', [1], `${config.classPrefix}-selection-box-group`);\n\n        if (firebolt.context.config().align === HORIZONTAL) {\n            x = range[0] - rangeShifter || 0;\n            y = 0;\n            width = range[1] - range[0] || 0;\n            height = gradientDimension;\n        } else {\n            x = 0;\n            y = range[1] - rangeShifter || 0;\n            height = range[0] - range[1] || 0;\n            width = gradientDimension;\n        }\n        const enterFn = function (el) {\n            selectionBoxDrag(firebolt)(el, ['brush']);\n        };\n        const selBox = makeElement(legendSelGroup, RECT, [{ domain, x, y, width, height }], className,\n            { enter: enterFn });\n        selBox.attr('y', y)\n                        .attr('x', x)\n                        .attr(WIDTH, width)\n                        .attr(HEIGHT, height);\n    }\n}\n\nexport default SelectionBox;\n\n","import { selectElement } from 'muze-utils';\n\nexport const strategies = (firebolt) => {\n    const context = firebolt.context;\n    const classed = (set, className, change) => {\n        const classPrefix = context.config().classPrefix;\n        selectElement(context.mount())\n                        .selectAll(`.${classPrefix}-legend-columns`)\n                        .filter(d => set.uids.indexOf(d.id) !== -1)\n                        .selectAll('div')\n                        .classed(className, change);\n    };\n\n    return {\n        fade: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-fadeout`, false);\n            } else {\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-fadeout`, true);\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-fadeout`, false);\n            }\n        },\n        brighten: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-brighten`, false);\n            } else {\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-brighten`, true);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n            }\n        }\n    };\n};\n","import { GenericSideEffect } from '@chartshq/muze-firebolt';\nimport { strategies } from './strategies';\nimport { Highlighter } from '../../../enums/side-effects';\n\nexport default class LegendHighlighter extends GenericSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategies = strategies(this.firebolt);\n        this._strategy = 'brighten';\n    }\n\n    static formalName () {\n        return Highlighter;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        strategy(selectionSet, this);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    data: {},\n    fieldName: {},\n    legendContainer: {},\n    measurement: {\n        sanitization: (context, value) => {\n            const measurement = mergeRecursive(context._measurement, value);\n            ['padding', 'border', 'margin'].forEach((space) => {\n                measurement[space] = Math.min(measurement[space] > 0 ? measurement[space] : 0,\n                     measurement.maxWidth * 0.1, measurement.maxHeight * 0.1);\n            });\n            return measurement;\n        }\n    },\n    logicalSpace: {},\n    metaData: {},\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.resetLogicalSpace();\n            context.store().commit('range', value);\n            return value;\n        }\n    },\n    scale: {},\n    smartTicks: {},\n    store: {},\n    title: {\n        sanitization: (context, value) => mergeRecursive(context._title || {}, value)\n    },\n    labelManager: {},\n    minTickDistance: {},\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import { getSymbol } from 'muze-utils';\nimport {\n    CENTER,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\nexport const ALIGN = {\n    HORIZONTAL: 'horizontal',\n    VERTICAL: 'vertical'\n};\n\nexport const DEFAULT_MEASUREMENT = {\n    height: 30,\n    width: 30,\n    maxWidth: Infinity,\n    maxHeight: Infinity,\n    padding: 2,\n    margin: 2,\n    border: 1\n};\n\nexport const LEGEND_TITLE = {\n    text: '',\n    orientation: (pos) => {\n        if (pos === LEFT || pos === RIGHT) {\n            return LEFT;\n        } return CENTER;\n    }\n};\n\nexport const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    borderStyle: 'solid',\n    borderColor: 'rgba(0,0,0,0)',\n    formatter: {\n        bounds: {\n            lower: 'less than',\n            upper: 'more than'\n        }\n    },\n    item: {\n        text: {\n            orientation: 'right',\n            width: 10,\n            formatter: (val, i, data, context) => context.valueParser()(val)\n        },\n        icon: {\n            className: 'legend-icon',\n            height: 20,\n            width: 20,\n            color: 'rgba(0,0,0,.5)',\n            type: 'square'\n        }\n    }\n};\n\n/**\n * Creates a map of pre defined icons\n *\n * @param {string} icon Accepts a icon name like 'square', 'cross', 'diamond' etc\n * @return {Object} icon object which can be used to draw the icons\n */\nexport const ICON_MAP = (icon) => {\n    if (icon && typeof (icon) === 'string') {\n        return getSymbol(icon);\n    } return icon;\n};\n","import { makeElement, numberInterpolator } from 'muze-utils';\n\nimport {\n    SCALE_FUNCTIONS,\n    WIDTH,\n    HEIGHT,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    MAXWIDTH\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} scale\n *\n */\nexport const getScaleInfo = (scale) => {\n    const scaleType = scale.constructor.type();\n    const domain = scale.uniqueValues();\n    const steps = scale.config().stops || 1;\n    const scaleFn = SCALE_FUNCTIONS[scaleType];\n\n    return { scaleType, domain, steps, scaleFn };\n};\n\n/**\n * Function to recompute the stops in array in case to left and right alignment of legend.\n *\n * @param  {string} param - parameter to measure\n * @param  {Object} requiredMeasure - required measure parameters\n * @param  {Object} availableMeasure - available meassure parameters\n * @param  {Array} domainForLegend - array\n * @param  {Object} smartLabelCalc - smartLabel Manager\n * @return {Array} - Array\n */\nconst getcomputedArray = (computationhelper, requiredMeasure, availableMeasure, domainForLegend) => {\n    // declaring Current and Next Tick Value variable\n    let currentTickValue;\n    let nextTickValue;\n    const upperBound = domainForLegend[domainForLegend.length - 1];\n    const param = computationhelper.measureParam;\n    const smartLabelCalc = computationhelper.smartLabelCalc;\n\n    // calculating pixel required per Tick Values\n    const pixelPerTick = (availableMeasure[param] / upperBound);\n\n    // checking if available max width is smaller than required width for legend.\n    if (availableMeasure[param] >= requiredMeasure[param]) {\n        return domainForLegend;\n    }\n\n    currentTickValue = (smartLabelCalc.getOriSize((domainForLegend[0]))[param]);\n    for (let i = 1; i < domainForLegend.length - 1; i++) {\n        nextTickValue = Math.floor((currentTickValue / pixelPerTick) + domainForLegend[i - 1]);\n        if (domainForLegend[i] < nextTickValue) {\n            domainForLegend.splice(i, 1);\n            i -= 1;\n        }\n        currentTickValue = (smartLabelCalc.getOriSize((domainForLegend[i]))[param]);\n    }\n    return domainForLegend;\n};\n\n/**\n * function to recompute the Stops Array provided to prevent the Overlapping of values\n * @param  {Array} domainForLegend - Stops Array\n * @param  {Object} scaleParams - Scale Parameters\n * @return {Array} - modified Stops Array\n */\nexport const getInterpolatedArrayData = (domainForLegend, scaleParams) => {\n    // defining param for height/width selector\n    let measureParam;\n\n    // declaring variable for required Width\n    let requiredWidth;\n\n    // declaring variable for required height\n    let requiredHeight;\n\n    // declaring the variable for upperbound\n    let upperBound = domainForLegend[domainForLegend.length - 1];\n\n    // Initializing Minimum Tick Difference Variable and checking if it's less than 1 or not\n    let minTickDiff = Math.ceil(domainForLegend[1] - domainForLegend[0]);\n\n    // calculating max tick difference\n    const maxTickDiff = Math.ceil(upperBound - domainForLegend[0]);\n\n    // gradient Alignment\n    const { alignment } = scaleParams;\n\n    // getting SmartLabel Manager to calculate tick Params\n    const smartLabelCalc = scaleParams.smartLabel;\n\n    // scale Measurements (i.e MaxWidth and MaxHeight available)\n    const availableSpace = scaleParams.measures;\n\n    // getting minimum Tick size (i.e height and width)\n    const minimumTickSize = scaleParams.minTickDistance;\n\n    // getting domain upperbound dimensions\n    const { height: tickDimHeight, width: tickDimWidth } = smartLabelCalc.getOriSize((upperBound));\n\n    /* Checking if UpperBound of Domain is Floating or Not.\n    In case of floating constricting it to 2 decimals after point. */\n    if (!Number.isInteger(upperBound)) {\n        upperBound = ((upperBound).toFixed(2));\n    }\n\n    // Calculating minimum tick difference\n    minTickDiff = minTickDiff < 1 ? 1 : minTickDiff;\n\n    // required width to render legend\n    requiredWidth = (Math.abs(maxTickDiff) / Math.abs(minTickDiff)) * (tickDimWidth + (minimumTickSize.width));\n\n    requiredWidth -= Math.abs(maxTickDiff);\n\n    // require height to render legend\n    requiredHeight = (Math.abs(maxTickDiff) / Math.abs(minTickDiff)) * tickDimHeight;\n\n    requiredHeight -= Math.abs(maxTickDiff);\n\n    // checking the alignment of legend\n    if (alignment === TOP || alignment === BOTTOM) {\n        measureParam = WIDTH;\n    } else {\n        measureParam = HEIGHT;\n    }\n\n    // calculating computed array\n    domainForLegend = getcomputedArray({\n        smartLabelCalc,\n        measureParam\n    }, {\n        height: requiredHeight,\n        width: requiredWidth\n    }, {\n        height: availableSpace.maxHeight,\n        width: availableSpace.maxWidth\n    }, domainForLegend);\n\n    return domainForLegend;\n};\n\n/**\n * function to recalculate steps on providing more number of stops than canvas can accomodate.\n * @param  {Array} domain - Array\n * @param  {Array} steps - Array\n * @param  {Object} scaleParams - Scale Parameters\n * @return {Array} - recalculated Step Array\n */\nexport const getInterpolatedData = (domain, steps, scaleParams) => {\n    // declaring recomputeSteps Variable\n    let recomputeSteps = 0;\n\n    const getTickMeasure = scaleParams.smartLabel;\n    const { maxWidth, maxHeight } = scaleParams.measures;\n    const { alignment } = scaleParams;\n    const domainForLegend = [];\n    const interpolatedFn = numberInterpolator()(domain[0], domain[1]);\n\n    // getting tick measure(i.e height and width)\n    const tickValue = getTickMeasure.getOriSize(domain[1].toFixed(2));\n\n    // To round the floating values to Integer and checking if value is 1.\n    steps = Math.round(steps);\n    steps = steps < 1 ? (steps + 1) : steps;\n\n    // checking alignment of the Axis\n    if (alignment === TOP || alignment === BOTTOM) {\n        recomputeSteps = Math.floor(maxWidth / (tickValue.width));\n    } else {\n        recomputeSteps = Math.floor(maxHeight / (tickValue.height));\n    }\n    steps = Math.min(steps, recomputeSteps);\n\n    // scaling the axis based on steps provided\n    for (let i = 0; i <= steps; i++) {\n        domainForLegend[i] = interpolatedFn(i / steps);\n    }\n    return domainForLegend;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} text\n * @param {*} measurement\n * @param {*} classPrefix\n */\nexport const titleCreator = (container, title, measurement, config) => {\n    const titleWidth = Math.min(measurement.maxWidth, measurement.width);\n\n    const titleContainer = makeElement(container, 'table', [1], `${config.classPrefix}-legend-title`)\n            .style(WIDTH, `${titleWidth}px`)\n            .style(HEIGHT, `${measurement.height}px`)\n            .style('border-bottom', `${measurement.border}px ${config.borderStyle} ${config.borderColor}`)\n            .style('text-align', title.orientation instanceof Function ?\n            title.orientation(config.position) : title.orientation);\n    return makeElement(titleContainer, 'td', [1], `${config.classPrefix}-legend-title-text`)\n                    .style(WIDTH, `${titleWidth}px`)\n                    .style(MAXWIDTH, `${titleWidth}px`)\n                    .style(HEIGHT, '100%')\n                    .style('line-height', 1)\n                    .style('padding', `${measurement.padding}px`)\n                    .text(title.text)\n                    .style('overflow-x', 'scroll')\n                    .node();\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getMaxMeasures = (data, prop, labelManager) => {\n    let maxHeight = -Infinity;\n    let maxWidth = -Infinity;\n\n    data.forEach((item) => {\n        const value = prop ? item[prop] : item;\n        const space = labelManager.getOriSize(value);\n        maxHeight = Math.max(space.height + 2, maxHeight);\n        maxWidth = Math.max(space.width + 2, maxWidth);\n    });\n\n    return { height: maxHeight, width: maxWidth };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getItemMeasures = (context, prop, formatter) => {\n    const space = [];\n    const data = context.data();\n    const labelManager = context._labelManager;\n\n    data.forEach((item, index) => {\n        const value = prop ? item[prop] : item;\n        const { height, width } = labelManager.getOriSize(formatter(value, index, data, context));\n        space[index] = { height: height + 1, width: width + 1 };\n    });\n    return space;\n};\n\n/**\n *\n *\n * @param {*} textOrientation\n * @param {*} effPadding\n * @param {*} titleSpace\n *\n * @memberof Legend\n */\nexport const computeItemSpaces = (config, measures, data) => {\n    let totalHeight = 0;\n    let totalWidth = 0;\n    let maxItemSpaces = {\n        width: 0, height: 0\n    };\n    const {\n        effPadding,\n        titleWidth,\n        labelSpaces,\n        titleHeight,\n        maxWidth\n    } = measures;\n    const {\n        item,\n        align\n    } = config;\n    const {\n        icon,\n        text\n    } = item;\n    const textOrientation = text.orientation;\n    const itemSpaces = [];\n    const iconSpaces = [];\n    let maxIconWidth = 0;\n    labelSpaces.forEach((labelSpace, i) => {\n        const itemSpace = { width: 0, height: 0 };\n        const iconSpace = { width: 0, height: 0 };\n        const datum = data[i] || {};\n            // Compute each legend item height/width\n        if (textOrientation === LEFT || textOrientation === RIGHT) {\n            // Get label, icon and item widths\n            labelSpace.width += effPadding;\n            iconSpace.width = (datum.size ? 2 * Math.sqrt(datum.size / Math.PI) : icon.width) + effPadding;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n            itemSpace.width = labelSpace.width + maxIconWidth;\n\n            // Get label, icon and item heights\n            labelSpace.height = Math.max(labelSpace.height, icon.height) + effPadding;\n            iconSpace.height = labelSpace.height;\n            itemSpace.height = labelSpace.height;\n        } else {\n            // Get label, icon and item widths\n            labelSpace.width = Math.max(labelSpace.width, datum.size ? 2 * Math.sqrt(datum.size / Math.PI)\n            : icon.width) + effPadding;\n            iconSpace.width = labelSpace.width;\n            itemSpace.width = labelSpace.width;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n\n            // Get label, icon and item heights\n            labelSpace.height += effPadding;\n            iconSpace.height = icon.height + effPadding;\n            itemSpace.height = labelSpace.height + iconSpace.height;\n        }\n        // Compute height and width of legend for each alignment\n        if (align === 'horizontal') {\n            totalHeight = Math.max(totalHeight, itemSpace.height);\n        } else {\n            totalHeight += itemSpace.height;\n            totalWidth = Math.max(totalWidth, itemSpace.width, titleWidth);\n        }\n        maxItemSpaces = {\n            width: Math.max(itemSpace.width, maxItemSpaces.width),\n            height: Math.max(itemSpace.height, maxItemSpaces.height)\n        };\n        itemSpaces.push(itemSpace);\n        iconSpaces.push(iconSpace);\n    });\n    itemSpaces.forEach((itemSpace, i) => {\n        if (align === 'horizontal') {\n            itemSpace.height = totalHeight;\n            iconSpaces[i].width = maxIconWidth;\n            if (textOrientation === LEFT || textOrientation === RIGHT) {\n                labelSpaces[i].height = totalHeight;\n                iconSpaces[i].height = totalHeight;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n            } else {\n                labelSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = maxIconWidth;\n                labelSpaces[i].width = maxIconWidth;\n            }\n            totalWidth = Math.max(totalWidth + itemSpaces[i].width);\n        } else {\n            itemSpace.width = Math.max(totalWidth, maxWidth);\n            if (textOrientation === TOP || textOrientation === BOTTOM) {\n                labelSpaces[i].width = totalWidth;\n                iconSpaces[i].width = totalWidth;\n                maxIconWidth = totalWidth;\n            } else {\n                const labelWidth = labelSpaces[i].width;\n                const newLabelWidth = (maxItemSpaces.width - maxIconWidth);\n                iconSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n                labelSpaces[i].width = Math.max(labelWidth, newLabelWidth);\n                totalWidth = Math.max(totalWidth, itemSpace.width);\n            }\n        }\n    });\n    totalWidth = Math.ceil(Math.max(totalWidth, titleWidth)) + effPadding;\n    totalHeight += titleHeight + effPadding;\n    totalHeight = Math.ceil(totalHeight);\n    return { totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth };\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} scaleInfo\n * @param {*} domainInfo\n *\n */\nexport const getDomainBounds = (type, scaleInfo, domainInfo) => {\n    const {\n        scaleFn,\n        scaleType,\n        scale\n    } = scaleInfo;\n    const {\n        domain,\n        domainBounds,\n        domainLeg,\n        steps\n    } = domainInfo;\n    const ele = domain[type === 'lower' ? 0 : domain.length - 1];\n    const step = steps[type === 'lower' ? 0 : steps.length - 1];\n\n    return {\n        [scaleType]: scaleType === 'size' ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n        value: domainBounds[type],\n        id: type === 'lower' ? 0 : domainLeg.length + 2,\n        range: [ele, step]\n    };\n};\n","import {\n    makeElement,\n    selectElement,\n    getUniqueId,\n    getSmartComputedStyle,\n    generateGetterSetters,\n    mergeRecursive\n} from 'muze-utils';\nimport { behaviouralActions } from '@chartshq/muze-firebolt';\nimport * as legendBehaviours from '../firebolt/behavioural';\n\nimport { LegendFireBolt } from '../firebolt/legend-firebolt';\nimport { actionBehaviourMap } from '../firebolt/action-behaviour-map';\nimport { physicalActions } from '../firebolt/physical';\nimport * as sideEffects from '../firebolt/side-effects';\nimport { behaviourEffectMap } from '../firebolt/behaviour-effect-map';\nimport { VALUE, PATH, RIGHT, LEFT, TOP, BOTTOM } from '../enums/constants';\nimport { PROPS } from './props';\nimport { DEFAULT_MEASUREMENT, DEFAULT_CONFIG, LEGEND_TITLE } from './defaults';\nimport { getItemMeasures, titleCreator, computeItemSpaces } from './legend-helper';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class SimpleLegend\n */\nexport default class SimpleLegend {\n\n    /**\n     * Creates an instance of Legend.\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @memberof Legend\n     */\n    constructor (dependencies) {\n        this._data = [];\n        this._metaData = [];\n        this._mount = null;\n        this._fieldName = null;\n        this._title = Object.assign({}, LEGEND_TITLE);\n        this._metaData = null;\n        this._labelManager = dependencies.labelManager;\n        this._cells = dependencies.cells;\n        this._id = getUniqueId();\n        this._measurement = Object.assign({}, this.constructor.defaultMeasurement());\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n\n        const dist = dependencies.labelManager.getOriSize('w');\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n\n        generateGetterSetters(this, PROPS);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'),\n            `${this.config().classPrefix}-legend-item-info`);\n\n        this._firebolt = new LegendFireBolt(this, {\n            behavioural: Object.assign({}, behaviouralActions, legendBehaviours),\n            physical: physicalActions,\n            physicalBehaviouralMap: actionBehaviourMap\n        }, sideEffects, behaviourEffectMap);\n    }\n\n    id () {\n        return this._id;\n    }\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new SimpleLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENT;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleLegend\n     */\n    firebolt (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return PATH;\n    }\n\n    canvasAlias (...alias) {\n        if (alias.length) {\n            this._canvasAlias = alias[0];\n            return this;\n        }\n        return this._canvasAlias;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    mount (...params) {\n        if (params.length) {\n            this._mount = params[0];\n            this.render();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces () {\n        const {\n            item,\n            classPrefix\n        } = this.config();\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n            `${classPrefix}-legend-item-info`));\n        return getItemMeasures(this, VALUE, item.text.formatter);\n    }\n\n    /**\n     * Sets the height and width of a legend based on provided max\n     * height and width and based on its contents\n     *\n     * @return {Instance} Current instance\n     * @memberof Legend\n     */\n    setLegendMeasures () {\n        const {\n            width,\n            height,\n            maxWidth,\n            maxHeight,\n            padding,\n            margin,\n            border\n        } = this.measurement();\n        const {\n            align\n        } = this.config();\n\n        // Effective padding, margin and padding\n        const effPadding = padding * 2;\n        const effBorder = border * 2;\n        const effMargin = margin * 2;\n\n        this.data(this.dataFromScale());\n        // Get space occupied by title\n        const titleSpace = this.getTitleSpace();\n        const titleHeight = titleSpace.height > 0 ? titleSpace.height + effPadding : 0;\n        const titleWidth = titleSpace.width + effPadding;\n\n        // Get space occupied by labels\n        const labelSpaces = this.getLabelSpaces(effPadding, align);\n        const {\n            totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth\n        } = computeItemSpaces(this.config(),\n        { effPadding, titleWidth, labelSpaces, titleHeight, maxWidth, maxHeight }, this.data());\n\n        this.measurement({\n            width: Math.max(totalWidth, width) + effMargin + effBorder,\n            height: Math.max(totalHeight, height) + effMargin + effBorder,\n            labelSpaces,\n            iconSpaces,\n            itemSpaces,\n            maxItemSpaces,\n            maxIconWidth,\n            titleSpaces: {\n                width: Math.min(maxWidth, this.measurement().width) - effMargin - effBorder,\n                height: titleHeight\n            }\n        });\n        return this;\n    }\n\n    /**\n     * Returns the space occupied by the legend title\n     *\n     * @return {Object} Space occupied by title\n     * @memberof Legend\n     */\n    getTitleSpace () {\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n                                                `${this.config().classPrefix}-legend-title`));\n        return this._labelManager.getOriSize(this.title().text ? this.title().text : '');\n    }\n\n    /**\n     * Creates the title for the legend\n     *\n     * @param {DOM} container Container made for the title\n     * @return {Selection} Title and it's node\n     * @memberof Legend\n     */\n    renderTitle (container) {\n        const { titleSpaces, border, padding, width, maxWidth } = this.measurement();\n        const { borderStyle, borderColor } = this.config();\n        return titleCreator(container, this.title(), {\n            height: titleSpaces.height,\n            width,\n            maxWidth,\n            border,\n            padding,\n            borderStyle,\n            borderColor\n        }, this.config());\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const {\n            classPrefix,\n            borderStyle,\n            borderColor,\n            position\n        } = this.config();\n        const {\n            maxWidth,\n            maxHeight,\n            width,\n            height,\n            margin,\n            border\n        } = this.measurement();\n        const legendContainer = makeElement(selectElement(this.mount()), 'div', [1], `${classPrefix}-legend-box`);\n        let marginPosition;\n        switch (position) {\n        case TOP:\n            marginPosition = `margin-${BOTTOM}`;\n            break;\n        case LEFT:\n            marginPosition = `margin-${RIGHT}`;\n            break;\n        case BOTTOM:\n            marginPosition = `margin-${TOP}`;\n            break;\n        default:\n            marginPosition = `margin-${LEFT}`;\n        }\n        legendContainer.classed(`${classPrefix}-legend-box-${this._id}`, true);\n        legendContainer.style('float', 'left');\n        // set height and width\n        legendContainer.style('width', `${Math.min(maxWidth, width) - margin * 2}px`)\n                        .style('height', `${Math.min(maxHeight, height) - margin * 2}px`)\n                        .style(`${marginPosition}`, `${margin}px`)\n                        .style('border', `${border}px ${borderStyle} ${borderColor}`);\n        this.legendContainer(legendContainer.node());\n\n        // create title\n        this.renderTitle(legendContainer);\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n  /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        const type = this.metaData().getData().schema[0].type;\n        if (type === 'measure') {\n            return {\n                [fieldName]: data.range\n            };\n        }\n        return [[fieldName], [data.rawVal]];\n    }\n}\n","import {\n    LEFT,\n    RIGHT,\n    START,\n    END,\n    TOP,\n    BOTTOM,\n    HORIZONTAL,\n    VERTICAL,\n    CENTER,\n    SHAPE,\n    VALUE\n} from '../enums/constants';\n\nconst legendOrientation = {\n    [HORIZONTAL]: {\n        datasets: data => ({\n            row: [1],\n            column: data\n        }),\n        itemContainerMeasures: (measurement) => {\n            const {\n                itemSpaces,\n                width\n            } = measurement;\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                },\n                column: {\n                    width: (d, i) => `${itemSpaces[i].width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, height } = measurement;\n            return {\n                iconHeight: height,\n                iconWidth: maxItemSpaces.width,\n                stepPadding: {\n                    horizontal: true,\n                    vertical: false\n                }\n            };\n        }\n    },\n    [VERTICAL]: {\n        datasets: data => ({\n            row: data,\n            column: d => [d]\n        }),\n        itemContainerMeasures: (measurement, config) => {\n            const {\n                width\n            } = measurement;\n            const { padding } = config;\n\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${padding}px`\n                },\n                column: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, width } = measurement;\n            return {\n                iconHeight: maxItemSpaces.height,\n                iconWidth: width,\n                stepPadding: {\n                    horizontal: false,\n                    vertical: true\n                }\n            };\n        }\n    }\n};\n\nexport const positionConfig = {\n    [LEFT]: legendOrientation[VERTICAL],\n    [RIGHT]: legendOrientation[VERTICAL],\n    [TOP]: legendOrientation[HORIZONTAL],\n    [BOTTOM]: legendOrientation[HORIZONTAL]\n};\n\nexport const alignmentMap = {\n    [LEFT]: END,\n    [RIGHT]: START,\n    [TOP]: CENTER,\n    [BOTTOM]: CENTER\n};\n\n// Reverses data for step legend\nexport const stepData = data => ({\n    [LEFT]: data.reverse(),\n    [RIGHT]: data.reverse(),\n    [TOP]: data,\n    [BOTTOM]: data\n});\n\n// Changes the item layout based on the position of the text\nexport const itemStack = {\n    [LEFT]: [VALUE, SHAPE],\n    [RIGHT]: [SHAPE, VALUE],\n    [TOP]: [VALUE, SHAPE],\n    [BOTTOM]: [SHAPE, VALUE]\n};\n","import { makeElement, selectElement, applyStyle } from 'muze-utils';\nimport { ICON_MAP } from './defaults';\nimport { positionConfig, alignmentMap, itemStack } from './position-config';\nimport {\n    WIDTH,\n    HEIGHT,\n    CENTER,\n    VALUE,\n    RECT,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} legendInstance\n * @param {*} align\n *\n */\nexport const getItemContainers = (container, data, legendInstance) => {\n    const measurement = legendInstance.measurement();\n    const config = legendInstance.config();\n    const {\n        itemSpaces\n    } = measurement;\n    const {\n        classPrefix,\n        position\n    } = config;\n    const positionObj = positionConfig[position];\n    const datasets = positionObj.datasets(data);\n    const measures = positionObj.itemContainerMeasures(measurement, config);\n\n    const rows = makeElement(container, 'div', datasets.row, `${classPrefix}-legend-row`);\n    rows.style(HEIGHT, (d, i) => `${itemSpaces[i].height}px`);\n    rows.style(WIDTH, measures.row.width);\n    rows.style('padding', measures.row.padding);\n\n    const columns = makeElement(rows, 'div', datasets.column, `${classPrefix}-legend-columns`);\n    columns.style(WIDTH, measures.column.width);\n    columns.style('padding', measures.column.padding);\n\n    return columns;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} classPrefix\n * @param {*} data\n *\n * @memberof DiscreteLegend\n */\nexport const createLegendSkeleton = (context, container, classPrefix, data) => {\n    let gradWidth = 0;\n    let gradHeight = 0;\n    let maxGradHeight = 0;\n    let maxGradWidth = 0;\n    const measurement = context.measurement();\n    const {\n            margin,\n            border,\n            titleSpaces,\n            width,\n            height,\n            maxWidth,\n            maxHeight\n        } = measurement;\n\n    gradHeight = height - (titleSpaces.height + 2 * margin + 2 * border);\n    gradWidth = width - (margin * 2 + border * 2);\n\n    maxGradHeight = maxHeight - (titleSpaces.height + margin * 2 + border * 2);\n    maxGradWidth = maxWidth - (margin * 2 + border * 2);\n\n    let legendBody = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    legendBody.select(`.${classPrefix}-legend-overflow`).remove();\n        // Create a div with scroll when overflow\n    if (maxGradWidth && maxGradWidth < gradWidth) {\n        legendBody = legendBody.style(WIDTH, `${maxGradWidth}px`).style('overflow-x', 'scroll');\n    }\n        // Create a div with scroll when overflow\n    if (maxGradHeight && maxGradHeight < gradHeight) {\n        legendBody.style(HEIGHT, `${maxGradHeight}px`).style('overflow-y', 'scroll');\n    }\n\n    legendBody = makeElement(legendBody, 'div', [1], `${classPrefix}-legend-overflow`);\n\n    legendBody.style(WIDTH, `${gradWidth}px`);\n    legendBody.style(HEIGHT, `${gradHeight}px`);\n\n    const legendItem = getItemContainers(legendBody, data, context);\n    return { legendItem };\n};\n\n/**\n * Creates legend item based on alignment and text orientation\n *\n * @param {Selection} container Point where items are to be mounted\n * @return {Instance} Current instance\n * @memberof Legend\n */\nexport const createItemSkeleton = (context, container) => {\n    const {\n        classPrefix,\n        item\n    } = context.config();\n    const textOrientation = item.text.orientation;\n\n    const stack = itemStack[textOrientation];\n    const itemSkeleton = makeElement(container, 'div', (d, i) => stack.map(e => [e, d[e], d.color, d.size,\n        d.value, context.fieldName(), i]), `${classPrefix}-legend-item-info`);\n\n    const alignClass = alignmentMap[textOrientation];\n\n    itemSkeleton.classed(alignClass, true);\n    return { itemSkeleton };\n};\n\n/**\n *\n *\n * @param {*} measureType\n * @param {*} stepColorCheck\n */\nexport const applyItemStyle = (item, measureType, stepColorCheck, context) => {\n    const {\n        padding,\n        labelSpaces,\n        iconSpaces,\n        maxIconWidth\n    } = context.measurement();\n    const diff = stepColorCheck ? -padding * 2 : 0;\n\n    if (item[0] === VALUE) {\n        return `${labelSpaces[item[6]][measureType]}px`;\n    }\n    return `${measureType === 'width' && !stepColorCheck ? maxIconWidth : iconSpaces[item[6]][measureType] - diff}px`;\n};\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, elem, defaultIcon, width, height) {\n    const groupElement = elem;\n    // const { shape, size, update } = d;\n    const size = d[3] || Math.min(width, height) * Math.PI;\n    const shape = d[1] || defaultIcon;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            return createShape(d, elem);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        shapeElement.attr('transform', `scale(${size / 100})`);\n        return selectElement(groupElement.node().appendChild(newShape));\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = ICON_MAP(shape).size(size)();\n        }\n        return makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    }\n    d[1] = 'circle';\n    return createShape(d, elem, 'circle');\n};\n\n/**\n * Returns the icon of the legend item\n *\n * @param {Object} datum Data property attached to the item\n * @param {number} width width of the item\n * @param {number} height height of the item\n * @return {Object|string} returns the path string or the string name of the icon\n * @memberof Legend\n */\nexport const getLegendIcon = (datum, width, height, defaultIcon) => {\n    const icon = ICON_MAP(datum[1]);\n\n    if (icon) {\n        return icon.size(datum[3] || Math.min(width, height) * Math.PI);\n    }\n    return ICON_MAP(datum[3] ? 'circle' : defaultIcon).size(datum[3] || Math.min(width, height) * Math.PI);\n};\n\n/**\n *\n *\n */\nexport const renderIcon = (icon, container, datum, context) => {\n    const {\n        classPrefix,\n        iconHeight,\n        iconWidth,\n        maxIconWidth,\n        padding,\n        color\n    } = context;\n    const svg = makeElement(container, 'svg', f => [f], `${classPrefix}-legend-icon-svg`)\n    .attr(WIDTH, maxIconWidth)\n    .attr(HEIGHT, iconHeight)\n    .style(WIDTH, `${maxIconWidth}px`)\n    .style(HEIGHT, `${iconHeight}px`);\n\n    if (icon !== RECT) {\n        const group = makeElement(svg, 'g', [datum[1]], `${classPrefix}-legend-icon`);\n        createShape(datum, group, datum[3] ? 'circle' : 'square', iconWidth, iconHeight)\n                        .attr('transform', `translate(${maxIconWidth / 2 - padding} ${iconHeight / 2})`)\n                        .attr('fill', datum[2] || color);\n    } else {\n        makeElement(svg, RECT, [datum[1]], `${classPrefix}-legend-icon`)\n                        .attr('x', 0)\n                        .attr('y', 0)\n                        .attr(WIDTH, maxIconWidth)\n                        .attr(HEIGHT, iconHeight)\n                        .attr('fill', datum[2] || color);\n    }\n};\n\n/**\n * Renders the items in the legend i.e, icon and text\n *\n * @param {DOM} container Point where item is to be mounted\n * @memberof Legend\n */\nexport const renderDiscreteItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n           item,\n           classPrefix\n    } = context.config();\n    const {\n        maxIconWidth,\n        padding\n    } = context.measurement();\n    const {\n            width: iconWidth,\n            height: iconHeight,\n            color,\n            className\n        } = item.icon;\n\n    const textOrientation = item.text.orientation;\n    const formatter = item.text.formatter;\n\n    labelManager.useEllipsesOnOverflow(true);\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, false, context),\n        height: d => applyItemStyle(d, HEIGHT, false, context),\n        'text-align': CENTER,\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context))\n                            .style(`padding-${textOrientation === RIGHT ? LEFT : RIGHT}`, '0px');\n        } else {\n            // const icon = getLegendIcon(d, iconWidth, iconHeight, type);\n            selectElement(this).classed(`${classPrefix}-${className}`, true);\n            selectElement(this).classed(`${classPrefix}-${className}-${i}`, true);\n            renderIcon('circle', selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                // iconWidth: 2 * Math.sqrt(d[3] / Math.PI) || iconWidth,\n                iconHeight,\n                maxIconWidth,\n                padding,\n                color\n            });\n        }\n    });\n};\n\n/**\n* Renders the items in the legend i.e, icon and text\n*\n* @param {DOM} container Point where item is to be mounted\n* @memberof Legend\n*/\nexport const renderStepItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n      item,\n      position,\n      classPrefix\n   } = context.config();\n    const {\n      maxItemSpaces,\n      maxIconWidth,\n      padding\n   } = context.measurement();\n    const {\n       width,\n       height,\n       color\n   } = item.icon;\n    const {\n        formatter\n   } = item.text;\n\n    labelManager.useEllipsesOnOverflow(true);\n    const { iconHeight, iconWidth, stepPadding } = positionConfig[position].getStepSpacesInfo({\n        maxItemSpaces, height, width\n    });\n\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, stepPadding.horizontal, context),\n        height: d => applyItemStyle(d, HEIGHT, stepPadding.vertical, context),\n        'text-align': 'center',\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context));\n        } else {\n            renderIcon(RECT, selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                iconHeight,\n                maxIconWidth,\n                color\n            });\n        }\n    });\n};\n","import {\n    FieldType,\n    DimensionSubtype,\n    formatTemporal\n} from 'muze-utils';\nimport SimpleLegend from './simple-legend';\nimport { DISCRETE, LEFT, SIZE } from '../enums/constants';\nimport { getScaleInfo } from './legend-helper';\nimport { createLegendSkeleton, createItemSkeleton, renderDiscreteItem } from './renderer';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class DiscreteLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new DiscreteLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof DiscreteLegend\n     */\n    static type () {\n        return DISCRETE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof DiscreteLegend\n     */\n    dataFromScale () {\n        const scale = this.scale();\n        const { scaleType, domain, scaleFn } = getScaleInfo(scale);\n        let domainForLegend = [...new Set(domain)];\n        const field = this.metaData().getFieldspace().fields[0];\n        const { type, subtype } = field.schema();\n\n        domainForLegend = domainForLegend.map((ele, i) => {\n            let value = 0;\n            let range = 0;\n            const rawVal = domainForLegend[i];\n            if (type === FieldType.MEASURE) {\n                value = (+domainForLegend[i]).toFixed(0);\n                const nextVal = domainForLegend[i + 1] ? +domainForLegend[i + 1] : +value;\n                range = [value, nextVal.toFixed(0)];\n            } else {\n                let domainVal = rawVal;\n                if (subtype === DimensionSubtype.TEMPORAL) {\n                    domainVal = formatTemporal(domainForLegend[i], field.minimumConsecutiveDifference());\n                }\n                value = domainVal;\n                range = [domainVal];\n            }\n            return {\n                [scaleType]: scale[scaleFn](ele),\n                value,\n                id: i,\n                range,\n                rawVal\n            };\n        }).filter(d => d.value !== null);\n\n        domainForLegend = scaleType === SIZE ? domainForLegend.sort((a, b) => a[scaleType] - b[scaleType])\n            : domainForLegend;\n        return domainForLegend;\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const data = this.data();\n        const { classPrefix } = this.config();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n        renderDiscreteItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n}\n","import { makeElement, applyStyle } from 'muze-utils';\nimport { ContinousAxis } from '@chartshq/muze-axis';\nimport { BOTTOM, RIGHT } from '../enums/constants';\nimport { ALIGN } from './defaults';\nimport '../styles.scss';\n\n/**\n *\n *\n * @param {*} data\n *\n */\nexport const getGradientDomain = (data) => {\n    if (typeof data[0].value === 'number') {\n        return data.reduce((accumulator, currentValue) =>\n            [Math.min(currentValue.value, accumulator[0]), Math.max(currentValue.value, accumulator[1])],\n                [Number.MAX_VALUE, Number.MIN_VALUE]);\n    }\n    return data.map(e => e.value);\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} domain\n *\n */\nexport const makeLinearGradient = (container, data, domain) => {\n    const defs = makeElement(container, 'defs', [1]);\n    const linearGradient = makeElement(defs, 'linearGradient', [1])\n                .attr('id', 'linear-gradient')\n                .attr('x1', '0%')\n                .attr('y2', '0%');\n\n    makeElement(linearGradient, 'stop', data, 'stop-gradient')\n                    .attr('offset', d => `${(d.value - domain[0]) * 100 / (domain[1] - domain[0]) || 1}%`)\n                    .attr('stop-color', d => d.color);\n    return linearGradient;\n};\n\n/**\n * Creates an axis cell with a linear axis for computing space and\n * creating gradient legend\n *\n * @return {AxisCell} Instance of Axis Cell for the gradient axis\n * @memberof Legend\n */\nexport const createAxis = (context) => {\n    const data = context.data();\n    const { align } = context.config();\n    const AxisCell = context._cells.AxisCell;\n    const newAxis = new ContinousAxis({\n        id: `legend-${context._id}`,\n        orientation: align === ALIGN.VERTICAL ? RIGHT : BOTTOM,\n        style: context._computedStyle,\n        nice: false,\n        showAxisName: false,\n        tickValues: data.map(d => d.value),\n        fixedBaseline: false,\n        labels: {\n            rotation: null\n        }\n    }, { labelManager: context._labelManager });\n\n    newAxis.domain(getGradientDomain(data));\n    newAxis.range([1, 1]);\n    return new AxisCell().source(newAxis).config({\n        margin: { left: 0, bottom: 0, top: 0, right: 0 }\n    });\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} classPrefix\n *\n * @memberof GradientLegend\n */\nconst createLegendSkeleton = (container, classPrefix, data) => {\n    const domain = getGradientDomain(data);\n    const legendContainer = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    const legendGradSvg = makeElement(legendContainer, 'svg', [1], `${classPrefix}-gradient`);\n    const legendGradCont = makeElement(legendGradSvg, 'g', [1], `${classPrefix}-gradient-group`);\n    const linearGradient = makeLinearGradient(legendGradSvg, data, domain);\n    const legendRect = makeElement(legendGradCont, 'rect', [1], `${classPrefix}-gradient-rect`);\n\n    return {\n        legendContainer,\n        legendGradCont,\n        legendGradSvg,\n        linearGradient,\n        legendRect\n    };\n};\n\n/**\n * Renders the axis for the gradient\n *\n * @param {Selection} container Point where axis is to be mounted\n * @param {number} height Height for axis\n * @param {number} width Width for axis\n * @memberof Legend\n */\nexport const renderAxis = (context, container, height, width) => {\n    const axis = context.axis();\n\n    axis.setAvailableSpace(width, height);\n    axis.render(container.node());\n    axis.source().render();\n};\n\n/**\n * Renders gradient legends\n *\n * @param {Selection} container Point where the legend is to be appended\n * @memberof GradientLegend\n */\nexport const renderGradient = (context, container) => {\n    let gradHeight = 0;\n    let gradWidth = 0;\n    const {\n        align,\n        classPrefix,\n        item\n    } = context.config();\n    const data = context.data();\n    // Create the skeleton for the legend\n    const {\n        legendContainer,\n        legendGradSvg,\n        legendGradCont,\n        linearGradient,\n        legendRect\n    } = createLegendSkeleton(container, classPrefix, data);\n    const labelDim = context.axis().source().getAxisDimensions().tickDimensions;\n    const {\n        padding,\n        margin,\n        border,\n        titleSpaces,\n        maxItemSpaces,\n        maxHeight,\n        maxWidth,\n        height,\n        width\n    } = context.measurement();\n    const gradientDimensions = {};\n\n    gradHeight = Math.floor(Math.min(height, maxHeight) - (titleSpaces.height + 2 * margin + 2 * border));\n    gradWidth = Math.floor(Math.min(width, maxWidth) - (margin * 2 + border * 2));\n\n    if (align === ALIGN.HORIZONTAL) {\n        gradientDimensions.height = item.icon.height;\n        gradientDimensions.width = gradWidth - 2 * padding - labelDim.width / 2;\n        linearGradient.attr('x2', '100%').attr('y1', '0%');\n        legendGradCont.attr('transform', `translate( ${labelDim.width / 2} 0)`);\n        renderAxis(context, legendContainer, gradHeight - item.icon.height - padding, gradWidth - 2 * padding - 1);\n\n        applyStyle(legendContainer, {\n            height: `${maxItemSpaces.height + border + padding}px`,\n            width: `${Math.min(width, maxWidth)}px`,\n            padding: `${padding}px`\n        });\n\n        legendRect.attr('height', gradientDimensions.height);\n        legendRect.attr('width', gradientDimensions.width - labelDim.width / 2);\n    } else {\n        gradientDimensions.height = gradHeight - 2 * padding - labelDim.height / 2;\n        gradientDimensions.width = item.icon.width;\n        linearGradient.attr('x2', '0%').attr('y1', '100%');\n        legendGradCont.attr('transform', `translate(0 ${labelDim.height / 2})`);\n        renderAxis(context, legendContainer, gradHeight - 2 * padding - 1, gradWidth - item.icon.width - padding * 2);\n\n        applyStyle(legendContainer, {\n            height: `${Math.min(height, maxHeight)}px`,\n            width: `${maxWidth}px`,\n            padding: `${padding}px`\n        });\n        legendRect.attr('height', gradientDimensions.height - labelDim.height / 2);\n        legendRect.attr('width', gradientDimensions.width);\n    }\n\n    // Apply Styles to the legend plot area\n    applyStyle(legendGradSvg, {\n        height: `${gradientDimensions.height}px`,\n        width: `${gradientDimensions.width}px`\n    });\n\n        // Apply styles to the legend rect\n    applyStyle(legendRect, {\n        fill: 'url(#linear-gradient)'\n    });\n    legendGradSvg.attr('height', gradientDimensions.height);\n    legendGradSvg.attr('width', gradientDimensions.width);\n\n    context.measurement({\n        gradientDimensions\n    });\n    context._legendGradientSvg = legendGradSvg;\n    return context;\n};\n","import SimpleLegend from './simple-legend';\nimport { getScaleInfo, getInterpolatedData, getInterpolatedArrayData } from './legend-helper';\nimport { GRADIENT, LEFT, SIZE } from '../enums/constants';\nimport { renderGradient, createAxis } from './gradient-helper';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class GradientLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new GradientLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof GradientLegend\n     */\n    static type () {\n        return GRADIENT;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axis\n     *\n     * @memberof GradientLegend\n     */\n    axis (...axis) {\n        if (axis.length) {\n            this._axis = axis[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof GradientLegend\n     */\n    dataFromScale () {\n        let domainForLegend = [];\n        const scale = this.scale();\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        // defining scaleParams\n        const scaleParams = {\n            smartLabel: this.labelManager(),\n            measures: this.measurement(),\n            alignment: this.config().position,\n            minTickDistance: this.minTickDistance()\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainForLegend[0] = domain[0];\n            }\n            domainForLegend = [...domainForLegend, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainForLegend.push(domain[1]);\n            }\n            // Sorting the domain Array\n            domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n            domainForLegend = getInterpolatedArrayData(domainForLegend, scaleParams);\n        } else {\n            domainForLegend = getInterpolatedData(domain, steps - 1, scaleParams);\n        }\n        domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n        return domainForLegend.map((ele, i) => {\n            const value = domainForLegend[i];\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor()\n                    : scale[scaleFn](Math.floor(ele)),\n                value: +value.toFixed(2),\n                id: i\n            };\n        }).filter(d => d.value !== null);\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        const axis = createAxis(this);\n        const axisSpace = axis.getLogicalSpace();\n        const space = { width: axisSpace.width - effPadding, height: axisSpace.height - effPadding };\n        const axisDomainLength = axis.source().domain().length;\n        const labelSpaces = new Array(axisDomainLength).fill(space);\n\n        this.axis(axis);\n        return labelSpaces;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof GradientLegend\n     */\n    getDrawingContext () {\n        return {\n            svgContainer: this._legendGradientSvg\n        };\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        renderGradient(this, legendContainer);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof SimpleLegend\n     */\n    getCriteriaFromData (data) {\n        return [[this.fieldName()], [data.value]];\n    }\n}\n","import SimpleLegend from './simple-legend';\nimport {\n    getScaleInfo,\n    getInterpolatedData,\n    getDomainBounds\n} from './legend-helper';\nimport {\n    createLegendSkeleton,\n    createItemSkeleton,\n    renderStepItem\n} from './renderer';\nimport { STEP, RECT, LEFT, SIZE, UPPER, LOWER } from '../enums/constants';\nimport { stepData } from './position-config';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class StepLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new StepLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof StepLegend\n     */\n    static type () {\n        return STEP;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof StepLegend\n     */\n    dataFromScale () {\n        let domainLeg = [];\n        const scale = this.scale();\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        const { formatter } = this.config();\n        const domainBounds = {\n            lower: null, upper: null\n        };\n\n        // defining scaleParams\n        const scaleParams = {\n            smartLabel: this.labelManager(),\n            measures: this.measurement(),\n            alignment: this.config().position,\n            minTickDistance: this.minTickDistance()\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainBounds.lower = [`${formatter.bounds.lower} ${steps[0]}`];\n            }\n            domainLeg = [...domainLeg, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainBounds.upper = [`${formatter.bounds.upper} ${steps[steps.length - 1]}`];\n            }\n        } else {\n            domainLeg = getInterpolatedData(domain, steps, scaleParams);\n        }\n\n        domainLeg = [...new Set(domainLeg)].sort((a, b) => a - b);\n        domainLeg = domainLeg.map((ele, i) => {\n            let value = null;\n            if (i < domainLeg.length - 1) {\n                value = `${(ele.toFixed(1))} - ${(+domainLeg[i + 1].toFixed(1))}`;\n            } else if (domainLeg.length === 1) {\n                value = ele.toFixed(1);\n            }\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n                value,\n                id: i + 1,\n                range: [ele, domainLeg[i + 1]]\n            };\n        }).filter(d => d.value !== null);\n\n        if (domainBounds.lower) {\n            const lowerBounds = getDomainBounds(LOWER, { scale, scaleFn, scaleType },\n                { domain, steps, domainBounds });\n            domainLeg = [lowerBounds, ...domainLeg];\n        }\n        if (domainBounds.upper) {\n            const upperBounds = getDomainBounds(UPPER, { scale, scaleFn, scaleType },\n            { domain, steps, domainBounds, domainLeg });\n            domainLeg = [...domainLeg, upperBounds];\n        }\n\n        return domainLeg;\n    }\n\n     /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding, align) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        return super.getLabelSpaces(effPadding, align);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return RECT;\n    }\n\n     /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const { classPrefix, position } = this.config();\n        const data = stepData(this.data())[position];\n\n        const legendContainer = super.render(this.mount());\n\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n\n        renderStepItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        return {\n            [fieldName]: data.range\n        };\n    }\n}\n","import { GradientLegend, DiscreteLegend, StepLegend } from '@chartshq/muze-legend';\n\n/**\n * Contants to be used as attr\n */\nexport const ROWS = 'rows';\nexport const COLUMNS = 'columns';\nexport const DATA = 'data';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\nexport const DETAIL = 'detail';\nexport const LAYERS = 'layers';\nexport const TRANSFORM = 'transform';\nexport const INITIALIZED = 'isInitialized';\nexport const SOURCE = 'source';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const PADDING = 'padding';\nexport const BORDER = 'border';\nexport const MARGIN = 'margin';\nexport const CONFIG = 'config';\nexport const MOUNT = 'mount';\nexport const CANVAS_UPDATED = 'canvasUpdated';\nexport const CLASSPREFIX = 'classPrefix';\nexport const POLICIES = '_policies';\nexport const LEGEND = 'legend';\nexport const TITLE = 'title';\nexport const SUB_TITLE = 'subtitle';\nexport const RESOLVE = 'resolve';\nexport const DISCRETE = 'discrete';\nexport const STEP_COLOR = 'step-color';\nexport const GRADIENT = 'gradient';\nexport const LINEAR = 'linear';\nexport const ORDINAL = 'ordinal';\nexport const MUZE_PREFIX = 'muze';\n\nexport const TITLE_TEMPLATE_NOT_ALLOWED_TAGS = [\n    'script',\n    'style'\n];\n\nexport const LEGEND_TYPE_MAP = {\n    [`${ORDINAL}-${true}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${COLOR}`]: StepLegend,\n    [`${LINEAR}-${false}-${COLOR}`]: GradientLegend\n};\n\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const GROUP = 'group';\nexport const LAYOUT = 'layout';\nexport const RETINAL = 'retinal';\nexport const DIMENSION = 'dimension';\nexport const MEASURE = 'measure';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\nexport const HORIZONTAL_CENTER = 'h-center';\nexport const VERTICAL_CENTER = 'v-center';\nexport const HIDDEN = 'hidden';\nexport const OVERFLOW = 'overflow';\nexport const OVERFLOW_X = 'overflow-x';\nexport const OVERFLOW_Y = 'overflow-y';\nexport const AUTO = 'auto';\nexport const VISIBLE = 'visible';\nexport const VERTICAL_SCROLL_BAR = 'verticalScrollBar';\nexport const HORIZONTAL_SCROLL_BAR = 'horizontalScrollBar';\nexport const GRID = 'grid';\nexport const MESSAGE = 'message';\nexport const NO_DATA_MESSAGE = 'No data to display';\n\n","import { ComposedVars, SimpleVariable } from '@chartshq/visual-group';\nimport { TITLE_TEMPLATE_NOT_ALLOWED_TAGS } from './constants';\n\n/**\n * This method creates a new composed variable instance from multiple variables. This is required when we have multiple\n * variables on a single axis and the union of domain of all the variables needs to be set on the axis.\n *\n * To create a new composed variable from multiple fields,\n * ```\n *  const sharedVar = share('open', 'high', 'low', 'close');\n *  canvas.rows([sharedVar])\n *      .columns(['date']);\n * ```\n *\n * @module Operators\n * @public\n * @function share\n * @param {Array} vars Variable names.\n *\n * @return {ComposedVars} Instance of composed variable\n */\nexport const share = (...vars) => new ComposedVars(...vars.map(variable => new SimpleVariable(variable)));\n\n/**\n *\n *\n * @param {*} node\n *\n */\nfunction treeShakeNode (node) {\n    if (node.nodeType !== Node.ELEMENT_NODE) { return; }\n\n    if (TITLE_TEMPLATE_NOT_ALLOWED_TAGS.indexOf(node.tagName.toLowerCase()) !== -1) {\n        node.parentNode.removeChild(node);\n    } else {\n        for (const childNode of node.childNodes) {\n            treeShakeNode(childNode);\n        }\n    }\n}\n\n/**\n * A string template tagged function which sanitizes input html formatted string according to the allowed html tags.\n * This is used to render html in canvas components like title and tooltip.\n *\n * To render html in canvas components,\n * ```\n *     canvas.title(html`<span style=font-size:20px;>TITLE</span>`);\n * ```\n *\n * @public\n * @module Operators\n * @function html\n * @param {Array.<string>} strings - The string parts of the template.\n * @param {Array} exps - The list of evaluated expression values.\n *\n * @return {Function} Returns a function which returns the sanitized html string.\n */\nexport function html (strings, ...exps) {\n    let htmlCode = '';\n    const expLn = exps.length;\n    let i = 0;\n\n    for (; i < expLn; ++i) {\n        htmlCode += strings[i] + exps[i];\n    }\n    htmlCode += strings[i];\n\n    const frag = document.createDocumentFragment();\n    const wrapper = document.createElement('div');\n\n    frag.appendChild(wrapper);\n    wrapper.innerHTML = htmlCode;\n\n    treeShakeNode(wrapper);\n    const { innerHTML } = wrapper;\n\n    return () => innerHTML;\n}\n","import { mergeRecursive, CommonProps } from 'muze-utils';\n\nconst defaultPolicy = (registrableComponents) => {\n    const aliases = registrableComponents.map(comp => comp.alias());\n    return {\n        behaviours: {\n            '*': (propagationPayload) => {\n                const propagationCanvas = propagationPayload.sourceCanvas;\n                return propagationCanvas ? aliases.indexOf(propagationCanvas) !== -1 : true;\n            }\n        }\n    };\n};\n\nconst listenerFn = (canvas, fn) => () => {\n    const valueMatrix = canvas.composition().visualGroup.matrixInstance().value;\n    valueMatrix.each(cell => fn(cell.valueOf().firebolt()));\n};\n\nconst canvasIterator = (canvases, iteratorFn, cFn) => {\n    canvases.forEach((canvas) => {\n        const matrix = canvas.composition().visualGroup.matrixInstance().value;\n        matrix.each(cell => iteratorFn(cell.valueOf().firebolt()));\n        cFn && cFn(canvas);\n        // Also register actions on canvas update\n        const throwback = canvas._throwback;\n\n        throwback.registerImmediateListener([CommonProps.MATRIX_CREATED],\n            listenerFn(canvas, iteratorFn));\n    });\n};\n\nconst registerActions = (context, type, fnName, deps) => {\n    const canvases = context._registrableComponents;\n\n    canvases.forEach((canvas) => {\n        const vGroup = canvas.composition().visualGroup;\n\n        vGroup.resolver().setFireboltDependencies(type, deps);\n        canvas.firebolt()[fnName](deps);\n    });\n};\n\n/**\n * This class is initiated only once in lifecycle and is reponsible for regisration of physical and behavioural\n * actions and side effects and the mapping between them.\n *\n * To get the instance of action model\n * ```\n *  const ActionModel = muze.ActionModel;\n * ```\n *\n * @public\n * @module ActionModel\n */\nclass ActionModel {\n    constructor () {\n        this._registrableComponents = [];\n    }\n\n    /**\n     * Takes an array of canvases on which the physical and behavioural actions will get registered.\n     *\n     * @public\n     * @param  {Canvas} components Array of canvases\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    for (...components) {\n        this._registrableComponents = components;\n        return this;\n    }\n\n    /**\n     * Registers physical actions on the canvases. It takes an object with key as the name of action and value having\n     * the definition of the action.\n     *\n     * To register a {@link PhysicalAction},\n     * ```\n     *  const ActionModel = muze.ActionModel;\n     *  ActionModel\n     *       // Physical actions will be registered on these canvases.\n     *      .for(canvas)\n     *      .registerPhysicalActions({\n     *          // Key is the name of physical action.\n     *          ctrlClick: (firebolt) => (targetEl, behaviours) => {\n     *              targetEl.on('click', function (data) {\n     *                  const event = utils.getEvent();\n     *                  const pos = utils.getClientPoint(event, this);\n     *                  // Get the data point nearest to the mouse position.\n     *                  const nearestPoint = firebolt.context.getNearestPoint(pos, {\n     *                      data\n     *                  });\n     *                  // Prepare the payload\n     *                  const payload = {\n     *                      criteria: nearestPoint.id\n     *                  };\n     *                  behaviours.forEach((behaviour) => firebolt.dispatchBehaviour(behaviour, payload));\n     *              });\n     *          }\n     *      });\n     * ```\n     * @public\n     *\n     * @param {Object} action Names of physical actions and their definitions.\n     *\n     * @return {ActionModel} Instance of the action model.\n     */\n    registerPhysicalActions (action) {\n        registerActions(this, 'physicalActions', 'registerPhysicalActions', action);\n        return this;\n    }\n\n    /**\n     * Registers behavioural actions on the canvases. It takes definitions of the behavioural actions and registers\n     * them on the canvases. Every behavioural action must inherit the {@link GenericBehaviour} class.\n     *\n     * To register a behavioural action\n     * ```\n     *  // Define a new behavioural action\n     *  class SingleSelectBehaviour extends GenericBehaviour {\n     *      static formalName () {\n     *          return 'singleSelect';\n     *      }\n     *\n     *      setSelectionSet (addSet, selectionSet) {\n     *          if (addSet === null) {\n     *              selectionSet.reset();\n     *          } else if (addSet.length) {\n     *              const existingAddSet = selectionSet.getExistingEntrySet(addSet);\n     *              if (existingAddSet.length){\n     *                  selectionSet.reset();\n     *              } else {\n     *               selectionSet.add(addSet);\n     *              }\n     *          } else {\n     *              selectionSet.reset();\n     *          }\n     *      }\n     * }\n     * muze.ActionModel.registerBehaviouralActions(SingleSelectBehaviour);\n     * ```\n     *\n     * @public\n     *\n     * @param {GenericBehaviour} actions Definition of behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerBehaviouralActions (...actions) {\n        registerActions(this, 'behaviouralActions', 'registerBehaviouralActions', actions);\n        return this;\n    }\n\n    /**\n     * Registers the mapping of physical and behavioural actions. This mapping is used to establish which behavioural\n     * actions should be dispatched on any triggering of physical actions.\n     *\n     * To map physical actions with behavioural actions,\n     * ```\n     *  muze.ActionModel.registerPhysicalBehaviouralMap({\n     *      ctrlClick: {\n     *          behaviours: ['select'] // This array must be the formal names of the behavioural actions.\n     *      }\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Contains the physical and behavioural action map.\n     * ```\n     *   {\n     *      // Name of the physical action\n     *      click: {\n     *          // Target element selector. This is an optional field. If not passed, then by default takes the\n     *          // container element of visual unit.\n     *          target: '.muze-layers-area path',\n     *          // Behaviours which should be dispatched on triggering of the mapped physical action.\n     *          behaviours: ['select']\n     *      }\n     *   }\n     * ```\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPhysicalBehaviouralMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalBehaviouralMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalBehaviouralMap(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers what behaviour to propagate on dispatch of a certain behavioural action. By default, when any\n     * behavioural action is dispatched, then the same behavioural action gets propagated to all the other canvases.\n     * This can be changed using this api.\n     *\n     * To register what behaviour should be propagated on dispatch of any behavioural action,\n     * ```\n     *  ActionModel.for(canvas1, canvas2).registerPropagationBehaviourMap({\n     *      select: 'filter',\n     *      brush: 'filter'\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Propagation behaviour map.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPropagationBehaviourMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPropagationBehaviourMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPropagationBehaviourMap(map);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of side effects and behavioural actions. It takes an object which contains key as the\n     * name of behavioural action and the side effects which will be linked to it.\n     *\n     * To map side effects to select behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: ['infoBox'] // This array must be the formal names of the side effects\n     *  });\n     * ```\n     *\n     * To map side effects to select behaviour, but disable all the default side effects attached with this behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: {\n     *          effects: ['infoBox'],\n     *          preventDefaultActions: true\n     *      }\n     *  });\n     * @public\n     * @param {Object} map Mapping of behavioural actions and side effects.\n     * ```\n     *     {\n     *          select: ['infoBox']\n     *     }\n     * ```\n     * @return {ActionModel} Instance of action model.\n     */\n    mapSideEffects (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.mapSideEffects(map);\n        }, (canvas) => {\n            canvas.firebolt().mapSideEffects(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers the side effects on the registered canvases. It takes definitions of side effects and registers them\n     * on the canvases. Every side effect must inherit the base class {@link GenericSideEffect} or\n     * {@link SpawnableSideEffect} or {@link SurrogateSideEffect} class.\n     *\n     * ```\n     * // Define a custom side effect\n     *  class InfoBox extends SpawnableSideEffect {\n     *      static formalName () {\n     *          return 'infoBox';\n     *      }\n     *\n     *      apply (selectionSet) {\n     *      }\n     *  }\n     *  muze.ActionModel.registerSideEffects(InfoBox);\n     * ```\n     * @public\n     * @param  {GenericSideEffect} sideEffects Definition of side effects.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerSideEffects (...sideEffects) {\n        registerActions(this, 'sideEffects', 'registerSideEffects', sideEffects);\n        return this;\n    }\n\n    /**\n     * Breaks the link between behavioural actions and physical actions. It takes an array of behavioural action\n     * and it's physical action.\n     *\n     * To dissociate behavioural actions from physical actions\n     * ```\n     *  muze.ActionModel.dissociateBehaviour(['select', 'click'], ['highlight', 'hover']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of behavioural action and physical action.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateBehaviour (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateBehaviour(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateBehaviour(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between side effects and behavioural actions. It takes an array of formal names of the side\n     * effects and it's linked behavioural action.\n     *\n     * To dissociate side effects from behavioural actions\n     * ```\n     *  muze.ActionModel.dissociateSideEffect(['crossline', 'highlight'], ['selectionBox', 'brush']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of side effects and behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateSideEffect (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateSideEffect(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateSideEffect(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * By default cross interactivity is disabled between canvases. This enables cross interaction between the canvases\n     * so that any action happening in one canvas gets dispatched on other canvases as well. An optional policy can also\n     * be passed in this method. The policy can be used to control on which canvases the behavioural actions and\n     * side effects gets dispatched.\n     *\n     * To just enable cross interactivity between two canvases,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity();\n     * ```\n     *\n     * To enable cross interactivity but enable any behavioural action only when it is triggered from canvas1.\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          behaviours: {\n     *              // Here * stands for any behavioural action name. We can also give any name of behavioural action\n     *              // in place of this.\n     *              '*': (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     *\n     * To enable cross interactivity but enable tooltip effect if the action is propagated from canvas1,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          sideEffects: {\n     *              tooltip: (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} policy Policy definition.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    enableCrossInteractivity (policy = {}) {\n        const registrableComponents = this._registrableComponents;\n        const mergedPolicy = mergeRecursive(mergeRecursive({}, defaultPolicy(registrableComponents)), policy);\n\n        registrableComponents.forEach((canvas) => {\n            canvas.firebolt().crossInteractionPolicy(mergedPolicy);\n        });\n\n        return this;\n    }\n}\n\nexport const actionModel = (() => new ActionModel())();\n","import { MUZE_PREFIX } from '../constants';\n\nexport const TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 4,\n    className: `${MUZE_PREFIX}-title-container`\n};\n\nexport const SUB_TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 16,\n    maxLines: 2,\n    className: `${MUZE_PREFIX}-subtitle-container`\n};\n\nexport const MESSAGE_CONFIG = {\n    className: `${MUZE_PREFIX}-message-container`\n};\n\nexport const CANVAS = 'canvas';\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    ROWS,\n    COLUMNS,\n    COLOR,\n    SHAPE,\n    SIZE,\n    DETAIL,\n    LAYERS,\n    TRANSFORM,\n    TITLE,\n    SUB_TITLE\n} from '../constants';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG } from './defaults';\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Canvas.\n * Canvas merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module LocalOptions\n */\n\nexport const localOptions = {\n    [ROWS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLUMNS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLOR]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SHAPE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SIZE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [DETAIL]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n\n    [LAYERS]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [TRANSFORM]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object'\n        }\n    }\n};\n\nexport const canvasOptions = {\n    [TITLE]: {\n        value: [null, null],\n        meta: {\n            takesMultipleParams: true,\n            typeCheck: ([arg1, arg2]) => typeof arg1 === 'function' && typeof arg2 === 'object',\n            sanitization: ([title, titleConfig]) => {\n                let t = title;\n                if (typeof title === 'string' || !title) {\n                    t = () => title;\n                }\n                const defConfig = mergeRecursive({}, TITLE_CONFIG);\n                return [t, mergeRecursive(defConfig, titleConfig)];\n            }\n        }\n    },\n    [SUB_TITLE]: {\n        value: [null, null],\n        meta: {\n            takesMultipleParams: true,\n            typeCheck: ([arg1, arg2]) => typeof arg1 === 'function' && typeof arg2 === 'object',\n            sanitization: ([subtitle, subtitleConfig]) => {\n                let sub = subtitle;\n                if (typeof subtitle === 'string' || !subtitle) {\n                    sub = () => subtitle;\n                }\n                const defConfig = mergeRecursive({}, SUB_TITLE_CONFIG);\n                return [sub, mergeRecursive(defConfig, subtitleConfig)];\n            }\n        }\n    }\n};\n","export default class LayoutComponent {\n    constructor (name, dimensions, seed) {\n        this._seed = seed;\n        this._boundBox = {\n            height: dimensions.height,\n            width: dimensions.width,\n            top: null,\n            left: null\n        };\n        this._renderAt = null;\n        this._alignWith = null;\n        this._alignment = null;\n        this._target = null;\n        this._position = null;\n        this._componentName = name;\n        this._className = null;\n    }\n\n    getLogicalSpace () {\n        throw new Error('getLogicalSpace is not defined');\n    }\n\n    setSpatialConfig () {\n        throw new Error('setSpatialSpace is not defined');\n    }\n\n    name (param) {\n        if (param) {\n            this._componentName = param;\n        }\n        return this._componentName;\n    }\n\n    target (param) {\n        if (param) {\n            this._target = param;\n        }\n        return this._target;\n    }\n\n    position (param) {\n        if (param) {\n            this._position = param;\n        }\n        return this._position;\n    }\n\n    alignment (param) {\n        if (param) {\n            this._alignment = param;\n        }\n        return this._alignment;\n    }\n\n    alignWith (param) {\n        if (param) {\n            this._alignWith = param;\n        }\n        return this._alignWith;\n    }\n\n    renderAt (param) {\n        if (param) {\n            this._renderAt = param;\n        }\n        return this._renderAt;\n    }\n\n    boundBox (param) {\n        if (param) {\n            Object.assign(this._boundBox, param);\n        }\n        return this._boundBox;\n    }\n\n    className (param) {\n        if (param) {\n            this._className = param;\n        }\n        return this._className;\n    }\n\n    draw () {\n        throw new Error('draw is not defined');\n    }\n\n    attachListener () {\n        return this;\n    }\n  }\n\n","import LayoutComponent from './layoutComponent';\n\nclass DummyComponent extends LayoutComponent {\n    getLogicalSpace () {\n        return {\n            width: this.boundBox().width,\n            height: this.boundBox().height\n        };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n        return this;\n    }\n\n    draw () {\n        if (!this.component) {\n            throw new Error(`Component not set for ${this.componentName}`);\n        }\n        this.component.mount(document.getElementById(this.renderAt)); // Change the draw method to component draw\n        return this;\n    }\n}\n\nexport default DummyComponent;\n","export const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    interaction: {\n        sideEffect: 'individual'\n    },\n    pagination: 'scroll',\n    scrollBar: {\n        thickness: 10,\n        speed: 2,\n        vertical: {\n            align: 'right'\n        },\n        horizontal: {\n            align: 'bottom'\n        }\n    },\n    legend: {\n        position: 'right',\n        color: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        shape: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        size: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        }\n    },\n    showHeaders: false,\n    minWidth: 100,\n    minHeight: 100,\n    facet: {\n        rows: {\n            minCharacters: 3\n        },\n        columns: {\n            maxLines: 2,\n            verticalAlign: 'middle',\n            minCharacters: 1\n        }\n    },\n    border: {\n        style: 'solid',\n        color: '#d6d6d6',\n        width: 2,\n        collapse: true,\n        spacing: 0\n    },\n    autoGroupBy: {\n        disabled: false\n    },\n    invalidValues: {},\n    sort: {}\n};\n","import { DEFAULT_CONFIG } from '../../../../muze/src/defaults';\n\nconst DEFAULT_WIDTH = 600;\nconst DEFAULT_HEIGHT = 400;\nconst DEFAULT_CLASS_NAME = `${DEFAULT_CONFIG.classPrefix}-layout-container-component`;\nconst NODE_PREFIX = `${DEFAULT_CONFIG.classPrefix}-layout-container`;\n\nexport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT,\n  DEFAULT_CLASS_NAME,\n  NODE_PREFIX\n};\n","export default class DefinitionModel {\n    constructor (config) {\n        this._host = config.host || null;\n        this._cut = config.cut || null;\n        this._ratioWeight = config.ratioWeight === 0 ? 0 : config.ratioWeight || 1;\n        this._preferred = config.preferred || false;\n        this._lanes = config.lanes || [];\n        this._remainingHeight = 0;\n        this._remainingWidth = 0;\n    }\n\n    host (host) {\n        if (host) {\n            this._host = host;\n        }\n        return this._host;\n    }\n\n    preferred (preferred) {\n        if (preferred) {\n            this._preferred = preferred;\n        }\n        return this._preferred;\n    }\n\n    cut (cut) {\n        if (cut) {\n            this._cut = cut;\n        }\n        return this._cut;\n    }\n\n    ratioWeight (ratioWeight) {\n        if (ratioWeight) {\n            this._ratioWeight = ratioWeight;\n        }\n        return this._ratioWeight;\n    }\n\n    lanes (lanes) {\n        if (lanes) {\n            this._lanes = lanes;\n        }\n        return this._lanes;\n    }\n\n    remainingHeight (remainingHeight) {\n        if (remainingHeight) {\n            this._remainingHeight = remainingHeight;\n        }\n        return this._remainingHeight;\n    }\n\n    remainingWidth (remainingWidth) {\n        if (remainingWidth) {\n            this._remainingWidth = remainingWidth;\n        }\n        return this._remainingWidth;\n    }\n}\n","import { NODE_PREFIX } from '../../constants/defaults';\nimport DefinitionModel from '../definition-manager/definitionModel';\nimport DummyComponent from '../../layout-component/dummy-component';\n/**\n * Compares two strings in lowercase\n *\n * @export\n * @param {string} value the value to be compared\n * @param {string} compareTo whom the value would be compared\n * @return {boolean} true if values are equal\n */\nexport function isEqual (value, compareTo) {\n    if (typeof value !== 'string' || typeof compareTo !== 'string') {\n        throw new TypeError('value and compareTo must be string');\n    }\n    return value.toLowerCase() === compareTo.toLowerCase();\n}\n\nexport const getNodeId = (() => {\n    let _uid = 0;\n    return () => `${NODE_PREFIX}-${++_uid}`;\n})();\n\nexport function yExtraSpace (node) {\n    let smallestHeight = 0;\n    if (node.getCutType() === 'v') {\n        smallestHeight = smallestExtraHeightHorizontally(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'h') {\n        node.children().forEach((child) => {\n            smallestHeight += yExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerHeight = node.boundBox().height;\n        const hostHeight = node.model().host().getLogicalSpace().height;\n\n        smallestHeight = containerHeight - hostHeight;\n        if (smallestHeight < 0) {\n            smallestHeight = 0;\n        }\n    } else {\n        smallestHeight = 0;\n    }\n    return smallestHeight;\n}\n\nexport function smallestExtraHeightHorizontally (node) {\n    let smallestHeight = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const h = yExtraSpace(child);\n        if (h < smallestHeight) {\n            smallestHeight = h;\n        }\n    });\n    return smallestHeight;\n}\n\nexport function xExtraSpace (node) {\n    let smallestWidth = 0;\n    if (node.getCutType() === 'h') {\n        smallestWidth = smallestExtraWidthVertically(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'v') {\n        node.children().forEach((child) => {\n            smallestWidth += xExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerWidth = node.boundBox().width;\n        const hostWidth = node.model().host().getLogicalSpace().width;\n        smallestWidth = containerWidth - hostWidth;\n        if (smallestWidth < 0) {\n            smallestWidth = 0;\n        }\n    } else {\n        smallestWidth = 0;\n    }\n    return smallestWidth;\n}\n\nexport function smallestExtraWidthVertically (node) {\n    let smallestWidth = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const w = xExtraSpace(child);\n        if (w < smallestWidth) {\n            smallestWidth = w;\n        }\n    });\n    return smallestWidth;\n}\n\nexport function determineBoundBox (bb, i, arr, instance) {\n    if (i) {\n    // if not first sibling, take boundbox from previous sibling\n        const lastSibling = arr[i - 1];\n        const { top: _top, left: _left, height: _height, width: _width } = lastSibling.boundBox();\n        return {\n            width: bb.width,\n            height: bb.height,\n\n            top: instance.parentCut() === 'h'\n        ? _top + _height : _top,\n\n            left: instance.parentCut() === 'h'\n        ? _left : _left + _width\n        };\n    }\n  // if first sibling, take boundbox from parent\n    const { top: _top, left: _left } = instance.parent().boundBox();\n    return {\n        width: bb.width,\n        height: bb.height,\n        top: _top,\n        left: _left\n    };\n}\n\n// prepares the targetComponent Map for target Mapping ie. where a component should lie\nexport function prepareTargetComponentMap (context) {\n    context.targetComponentMap(new Map());\n    context.componentMap().forEach((value) => {\n        if (context.targetComponentMap().has(value.target())) {\n            context.targetComponentMap().get(value.target()).push(value);\n        } else {\n            const temp = [];\n            temp.push(value);\n            context.targetComponentMap().set(value.target(), temp);\n        }\n    });\n}\n\nexport function getComponent (canvasComponent, componentName) {\n    const comp = canvasComponent.find(component => component.name() === componentName);\n    return (comp && comp !== -1) ? comp : null;\n}\nexport function createPlaceHolderComponent (height, width, position) {\n    const comp = new DummyComponent(0, { height, width });\n    comp.name('placeHolder');\n    comp.position(position);\n    return comp;\n}\n\nexport function placeComponent (definitionModel, component, isPreferred = false, isGridComponent = false) {\n    let cut = '';\n    let componentRatioWidth = 1;\n    let leftOvercomponentRationWidth = 1;\n    let leftHeight = 0;\n    let leftWidth = 0;\n\n    if (!component) {\n        return { first: definitionModel, second: definitionModel };\n    }\n\n    const { height: componentHeight, width: componentWidth } = component.getLogicalSpace();\n    const position = component.position();\n    if (position === 'top' || position === 'bottom') {\n        cut = 'h';\n        componentRatioWidth = componentHeight / definitionModel.remainingHeight();\n        leftHeight = definitionModel.remainingHeight() - componentHeight;\n        leftWidth = definitionModel.remainingWidth();\n    } else {\n        cut = 'v';\n        componentRatioWidth = componentWidth / definitionModel.remainingWidth();\n        leftWidth = definitionModel.remainingWidth() - componentWidth;\n        leftHeight = definitionModel.remainingHeight();\n    }\n    leftOvercomponentRationWidth = 1 - componentRatioWidth;\n\n// update parentModel\n    definitionModel.cut(cut);\n    const firstLaneConfig = {\n        host: component.name(),\n        cut: null,\n        ratioWeight: componentRatioWidth,\n        preferred: isGridComponent ? false : isPreferred,\n        lanes: []\n    };\n    const firstLane = new DefinitionModel(firstLaneConfig);\n    firstLane.remainingHeight(componentHeight);\n    firstLane.remainingWidth(componentWidth);\n\n    const secondLaneConfig = {\n        host: null,\n        cut: null,\n        ratioWeight: leftOvercomponentRationWidth,\n        preferred: isGridComponent ? false : !isPreferred,\n        lanes: []\n    };\n    const secondLane = new DefinitionModel(secondLaneConfig);\n    secondLane.remainingHeight(leftHeight);\n    secondLane.remainingWidth(leftWidth);\n    if (isPreferred) {\n        definitionModel.lanes([firstLane]);\n    } else if (position === 'top' || position === 'left') {\n        definitionModel.lanes([firstLane, secondLane]);\n    } else {\n        definitionModel.lanes([secondLane, firstLane]);\n    }\n    return { first: firstLane, second: secondLane };\n}\n\nexport function placeGridComponent (definitionModel, gridComponents) {\n    let tempDefModel = definitionModel;\n    const rows = gridComponents.length;\n    const column = rows ? gridComponents[0].length : 0;\n    const height = gridComponents.reduce((acc, val) => (acc + val[0].getLogicalSpace().height), 0);\n\n    for (let i = 0; i < column; i++) {\n        const iscolumnPreffered = i === column - 1;\n        const columnPlaceHolderComponent = createPlaceHolderComponent(height,\n                                                    gridComponents[0][i].getLogicalSpace().width, 'left');\n        const { first, second } = placeComponent(tempDefModel, columnPlaceHolderComponent, iscolumnPreffered);\n        tempDefModel = first;\n        for (let j = 0; j < rows; j++) {\n            const rowpreffred = j === (rows - 1);\n            tempDefModel = placeComponent(tempDefModel, gridComponents[j][i], rowpreffred, true).second;\n        }\n        tempDefModel = second;\n    }\n    return tempDefModel;\n}\n\nexport function negotiateDimension (node) {\n    let preferred;\n    let cumultiveExtraSpaceAmt = 0;\n    let alteredDim;\n    let nonAlteredDim;\n\n    const childrenLength = node.children().length;\n\n    for (let index = 0; index < childrenLength; index++) {\n        let fn;\n        let extraSpaceAmt;\n        const child = node.children()[index];\n\n        if (child.parentCut() === 'h') {\n            fn = yExtraSpace;\n            alteredDim = 'height';\n            nonAlteredDim = 'width';\n        } else {\n            fn = xExtraSpace;\n            alteredDim = 'width';\n            nonAlteredDim = 'height';\n        }\n  // if vertical then get extra height from other node and push it to the preferred node.\n  // for horizontal cut the same thing is to be done with width\n        if (child.isPreferred()) {\n    // push extra space in sink. Execute it when all non preferred space are computed.\n            preferred = child;\n\n            continue; // eslint-disable-line no-continue\n        }\n  // reduce own height and save it in a var\n        cumultiveExtraSpaceAmt += (extraSpaceAmt = fn(child));\n        child.boundBox()[alteredDim] -= extraSpaceAmt;\n  // update nonaltered dim from parent for any change which happened during negotiation\n        child.boundBox()[nonAlteredDim] = child.parent().boundBox()[nonAlteredDim];\n\n        negotiateDimension(child);\n    }\n\n    if (preferred) {\n        preferred.boundBox()[alteredDim] += cumultiveExtraSpaceAmt;\n        preferred.boundBox()[nonAlteredDim] = preferred.parent().boundBox()[nonAlteredDim];\n        negotiateDimension(preferred);\n    }\n}\n\nexport function computePosition (node) {\n    node.children().forEach((child, i, children) => {\n        const boundBox = determineBoundBox(child.boundBox(), i, children, child);\n        child.boundBox(boundBox);\n        computePosition(child);\n    });\n}\n\nexport function allocateBoundingBox (node) {\n    const totalWeight = node.children()\n                            .map(child => child.model().ratioWeight())\n                            .reduce((carry, val) => carry + val, 0);\n\n    node.children().forEach((child, i, children) => {\n        const lastSibling = children[i - 1];\n        const ratio = child.model().ratioWeight() / totalWeight;\n\n        if (child.parentCut() === 'h') {\n            child.boundBox({\n                top: i ? lastSibling.boundBox().top + lastSibling.boundBox().height : 0,\n                left: child.parent().boundBox().left,\n                height: child.parent().boundBox().height * ratio,\n                width: child.parent().boundBox().width\n            });\n        } else {\n            child.boundBox({\n                top: child.parent().boundBox().top,\n                left: i ? lastSibling.boundBox().left + lastSibling.boundBox().width : 0,\n                height: child.parent().boundBox().height,\n                width: child.parent().boundBox().width * ratio\n            });\n        }\n        allocateBoundingBox(child);\n    });\n}\n\n","import { getNodeId } from '../helper';\nimport { LayoutComponent } from '../../layout-component';\n\nclass Node {\n    constructor (data) {\n        this._model = data;\n        this._parent = null;\n        this._children = [];\n        this._parentCut = null;\n        this._boundBox = {\n            top: null,\n            left: null,\n            height: null,\n            width: null\n        };\n\n        this._id = this._model.host() instanceof LayoutComponent && this._model.host().renderAt() ?\n                    this._model.host().renderAt() :\n                    getNodeId();\n    }\n\n    addChildren (entries) {\n        this._children.push(...entries);\n        entries.forEach((e) => { e.parent(this); });\n    }\n\n    isRoot () {\n        return this._parent === null;\n    }\n\n    isLeaf () {\n        return !this._children.length;\n    }\n\n    getCutType () {\n        return this._model.cut();\n    }\n\n    isPreferred () {\n        return !!this._model.preferred();\n    }\n\n    children (children) {\n        if (children) {\n            this._children = children;\n        }\n        return this._children;\n    }\n\n    parent (parent) {\n        if (parent) {\n            this._parent = parent;\n        }\n        return this._parent;\n    }\n\n    parentCut (parentCut) {\n        if (parentCut) {\n            this._parentCut = parentCut;\n        }\n        return this._parentCut;\n    }\n\n    id (id) {\n        if (id) {\n            this._id = id;\n        }\n        return this._id;\n    }\n\n    model (model) {\n        if (model) {\n            this._model = model;\n        }\n        return this._model;\n    }\n\n    boundBox (bound) {\n        if (bound) {\n            this._boundBox = {\n                top: bound.top,\n                left: bound.left,\n                height: bound.height,\n                width: bound.width\n            };\n        }\n        return this._boundBox;\n    }\n  /**\n     * function to search a node and update it with the config provided.\n     * @param  {Object} nodeconfig\n     */\n    updateNode (nodeconfig) {\n        if (this._id === nodeconfig._id) {\n            this._model.cut(nodeconfig.cut);\n            this._model.ratioWeight(nodeconfig.ratioWeight);\n        } else {\n            this._children.forEach((node) => {\n                if (node._id === nodeconfig._id) {\n                    node.model.cut(nodeconfig.cut);\n                    node.model.ratioWeight(nodeconfig.ratioWeight);\n                    return;\n                }\n                this.searchNode(node, nodeconfig);\n            });\n        }\n    }\n\n  // Recursive function to search a node\n    searchNode (node, nodeconfig) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeconfig._id) {\n                childNode.model().cut(nodeconfig.cut);\n                childNode.model().ratioWeight(nodeconfig.ratioWeight);\n            } else {\n                this.searchNode(childNode, nodeconfig);\n            }\n        });\n    }\n\n  /**\n     * function to delete a node from tree Structure.\n     * @param  {String} nodeId - node Id of the Node\n     */\n    delete (nodeId) {\n        this._children.forEach((node) => {\n            if (node.id() === nodeId) {\n                const index = this._children.indexOf(node);\n                this._model.lanes().splice(index, 1);\n            }\n            this.deleteSearchNode(node, nodeId);\n        });\n    }\n\n  // Recursive function to search a node\n    deleteSearchNode (node, nodeId) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeId) {\n                const index = node.children().indexOf(childNode);\n                node.model().lanes().splice(index, 1);\n            } else {\n                this.deleteSearchNode(childNode, nodeId);\n            }\n        });\n    }\n}\n\nexport default Node;\n","import Node from '../tree';\nimport {\n    allocateBoundingBox,\n    negotiateDimension,\n    computePosition\n} from '../helper';\n\nexport default class LayoutModel {\n    constructor (measurements, config) {\n        this._measurements = measurements;\n        this._config = config;\n        this._root = this.createTree(this._config, null);\n        this.setBoundBox();\n    }\n\n    createTree (config, parent) {\n        const node = new Node(config);\n        if (parent) {\n            node.parentCut(parent.getCutType());\n            parent.addChildren([node]);\n        } else {\n            this._root = node;\n        }\n        for (const lane of config.lanes()) {\n            this.createTree(lane, node);\n        }\n\n        return this._root;\n    }\n\n    setBoundBox () {\n        this._root.boundBox({\n            top: 0,\n            left: 0,\n            width: this._measurements.width,\n            height: this._measurements.height\n        });\n        allocateBoundingBox(this._root);\n    }\n\n    setHostPosition (node) {\n        node.children().forEach((child) => {\n            LayoutModel.setHostSpatialConfig(child);\n            this.setHostPosition(child);\n        });\n    }\n\n    static setHostSpatialConfig (node) {\n        const bb = node.boundBox();\n        const host = node.model().host();\n        if (host && host.setSpatialConfig) {\n            const conf = {\n                x: bb.left,\n                y: bb.top,\n                width: bb.width,\n                height: bb.height,\n                renderAt: node.id()\n            };\n            host.setSpatialConfig(conf);\n        }\n    }\n\n    negotiate () {\n        negotiateDimension(this._root);\n        computePosition(this._root);\n        return this;\n    }\n\n    broadcast () {\n        this.setHostPosition(this._root);\n        return this;\n    }\n\n    tree () {\n        return this._root;\n    }\n}\n","/**\n * This file exports constants that will be used to\n * create the state store of the table layout.\n */\n/**\n * The index of top, bottom and center in the matrix\n */\nexport const VIEW_INDEX = {\n    top: 0,\n    center: 1,\n    bottom: 2\n};\n\nexport const ROW_MATRIX_INDEX = {\n    0: 'top',\n    1: 'center',\n    2: 'bottom'\n};\n\nexport const COLUMN_MATRIX_INDEX = {\n    0: 'left',\n    1: 'middle',\n    2: 'right'\n};\n\n/**\n * The width of the grid suppied by the user.\n */\nexport const GRID_WIDTH = 'width';\n\n/**\n * The height of the grid supplied by the user.\n */\nexport const GRID_HEIGHT = 'height';\n\n/**\n  * The border for the grid\n  */\nexport const BORDER = 'border';\n\n /**\n  *  The index of the first visible row in view matrix.\n  */\nexport const ROW_POINTER = 'rowPointer';\n\n/**\n * The index of the first visible column in the view matrix.\n */\nexport const COLUMN_POINTER = 'columnPointer';\n\n/**\n * Flag to specify whether row sizes should be equal.\n */\nexport const ROW_SIZE_IS_EQUAL = 'isRowSizeEqual';\n\n/**\n * Flag to specify whether column sizes are equal.\n */\nexport const COLUMN_SIZE_IS_EQUAL = 'isColumnSizeEqual';\n\n/**\n * Field to store an array an of the widths of visible columns.\n * @computed\n */\nexport const COLUMN_WIDTHS = 'visibleColumnWidths';\n\n/**\n * Field to store an array of heights of visible rows.\n * @computed\n */\nexport const ROW_HEIGHTS = 'visibleRowHeights';\n\n/**\n * Field to store the width of the left matrix.\n * @computed\n */\nexport const LEFT_MATRIX_WIDTH = 'leftMatrixWidth';\n\n/**\n * Field to store the width of the right matrix.\n * @computed\n */\nexport const RIGHT_MATRIX_WIDTH = 'rightMatrixWidth';\n\n/**\n * Field to store the height of the top matrix.\n * @computed\n */\nexport const TOP_MATRIX_HEIGHT = 'topMatrixHeight';\n\n/**\n * Field to store the height of the bottom matrix.\n * @computed\n */\nexport const BOTTOM_MATRIX_HEIGHT = 'bottomMatrixHeight';\n\n/**\n * The dom element to render the layout inside.\n */\nexport const MOUNT_POINT = 'mount';\n\n/**\n * The id attribute of the left table element.\n */\nexport const LEFT_TABLE_ID = 'grid-left';\n\n/**\n * The id attribute of the right table element.\n */\nexport const RIGHT_TABLE_ID = 'grid-right';\n\n/**\n * The id attribute of the top table.\n */\nexport const TOP_TABLE_ID = 'grid-top';\n\n/**\n * The id attribute of the bottom table.\n */\nexport const BOTTOM_TABLE_ID = 'grid-bottom';\n\n/**\n * The id attribute of the center table.\n */\nexport const CENTER_TABLE_ID = 'grid-center';\n\n/**\n * The id attribute of the top div.\n */\nexport const TOP_DIV_ID = 'muze-div-top';\n\n/**\n * The id attribute of the bottom div.\n */\nexport const BOTTOM_DIV_ID = 'muze-div-bottom';\n\n/**\n * The id attribute of the center div.\n */\nexport const CENTER_DIV_ID = 'muze-div-center';\n\n/**\n * Field that indicates if the row configuration has changed\n */\nexport const HAVE_ROWS_CHANGED = 'haveRowsChanged';\n\n/**\n * Field that indicates if the column configuration has changed\n */\nexport const HAVE_COLUMNS_CHANGED = 'haveColumnsChanged';\n\n/**\n * Field that indicates if the values configuration for the center matrix has changed\n */\nexport const HAVE_VALUES_CHANGED = 'haveValuesChanged';\n\n/**\n * Field that indicates the width of row matrix\n */\nexport const ROW_MATRIX_WIDTH = 'rowMatrixWidth';\n\n/**\n * Field that indicates the height of row matrix\n */\nexport const COLUMN_MATRIX_HEIGHT = 'columnMatrixHeight';\n\n/**\n * Field that indicates the unit width of layout\n */\nexport const UNIT_WIDTH = 'unitWidth';\n\n/**\n * Field that indicates the unit height of layout\n */\nexport const UNIT_HEIGHT = 'unitHeight';\n\n/**\n * Field that indicates the style object\n */\nexport const STYLE = 'style';\n\n/**\n * Field that indicates the color configuration\n */\nexport const COLOR = 'color';\n\n/**\n * Field that indicates width\n */\nexport const WIDTH = 'width';\n\n/**\n * Field that indicates collpase property for border\n */\nexport const COLLAPSE = 'collapse';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SPACING = 'spacing';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const DISTRIBUTION = 'distribution';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const GUTTERSPACE = 'gutterSpace';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const BREAK_PAGE = 'breakPage';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_ROW_BORDERS = 'showRowBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_COL_BORDERS = 'showColBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_VALUE_BORDERS = 'showValueBorders';\n\nexport const HEIGHT = 'height';\nexport const COLUMN = 'column';\nexport const ROW = 'row';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const CENTER = 'center';\nexport const CLICK = 'click';\nexport const ROW_LEFT = 'rowLeft';\nexport const ROW_RIGHT = 'rowRight';\nexport const COLUMN_BOTTOM = 'colBottom';\nexport const COLUMN_TOP = 'colTop';\nexport const AUTO = 'auto';\nexport const ROW_SPAN = 'rowSpan';\nexport const COL_SPAN = 'colSpan';\nexport const ROW_ROOT = 'rowRoot';\nexport const COLUMN_ROOT = 'columnRoot';\nexport const PRIMARY = 'primary';\nexport const SECONDARY = 'secondary';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\nexport const GRID = 'grid';\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n\nexport const PAGINATION = 'pagination';\nexport const BUFFER = 'buffer';\nexport const HOLISTIC = 'holistic';\nexport const SCROLL = 'scroll';\nexport const MIDDLE = 'middle';\nexport const NO_BORDERS = null;\n\nexport const MAX_WIDTH_AVAIL_FOR_COL_MATRIX = 'maxWidthAvailableForColumnMatrix';\nexport const COLUMN_MATRIX = 'columnMatrix';\nexport const MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX = 'maxHeightAvailableForRowMatrix';\nexport const ROW_MATRIX = 'rowMatrix';\n","/* eslint no-undef: \"off\" */\n/* eslint default-case: \"off\" */\nexport class Utils {\n    static isDOMElement (element) {\n        return element instanceof Element;\n    }\n\n    static getID (element) {\n        return element.id;\n    }\n\n    static getElement (id) {\n        return document.getElementById(id);\n    }\n\n    static findContainer (data) {\n        return data.filter(coordinate => coordinate.parent == null)[0];\n    }\n  /**\n   * static method to remove the div\n   * @param  {} divId - div ID to be removed.\n   */\n    static removeDiv (divId) {\n        if (document.getElementById(divId) !== null) { document.getElementById(divId).remove(); }\n    }\n}\n","import { DEFAULT_CLASS_NAME } from '../constants/defaults';\nimport { LayoutComponent } from '../layout-component';\n\nexport default class DataPoint {\n    constructor (node) {\n        this._node = node;\n        this._className = node.model().host() instanceof LayoutComponent ?\n                            node.model().host().className() : DEFAULT_CLASS_NAME;\n    }\n\n    node () {\n        return this._node;\n    }\n\n    hasHost () {\n        return this._node.model().host() instanceof LayoutComponent;\n    }\n\n    className () {\n        return this._className || DEFAULT_CLASS_NAME;\n    }\n}\n","import { getnodePoints } from './helper';\n\nexport class DataParser {\n    constructor (data) {\n        this._data = data;\n    }\n\n    defaultDataPointLogic () {\n        const nodepoints = [];\n        getnodePoints(this._data, nodepoints);\n        return nodepoints;\n    }\n\n}\n","import DataPoint from './data-point';\n\nexport const getnodePoints = (node, nodepoints) => {\n    const datapoint = new DataPoint(node);\n    nodepoints.push(datapoint);\n    node.children().forEach((child) => {\n        getnodePoints(child, nodepoints);\n    });\n};\n","import { DataParser } from './data-parser';\n\nexport class HTMLDataAdapter extends DataParser {\n    getCoordinates () {\n        return super.defaultDataPointLogic();\n    }\n}\n","export class Renderer {\n\n    initRenderer (node, tree) {\n        node.__logicalTree = tree;\n    }\n}\n","import { HTMLDataAdapter } from '../data-adapters/html-data';\nimport { Utils } from '../utils';\nimport { Renderer } from './renderer';\n\nexport class HTMLRenderer extends Renderer {\n    constructor (data) {\n        super();\n        this._data = data;\n        this._coordinates = new HTMLDataAdapter(this._data).getCoordinates();\n    }\n\n    createhtml (mount, className) {\n        const mainDiv = mount;\n        super.initRenderer(mainDiv, this._data); // Initialise node with layout id\n        this.parentDiv = this.createAndCustomiseParent(className);\n        this._coordinates.forEach((node) => {\n            if (node.hasHost()) {\n                const host = node.node();\n                this.parentDiv.appendChild(this.createAndPositionDiv({ ...host.boundBox(),\n                    id: host.id(),\n                    className: node.className() }));\n            }\n        });\n        mainDiv.appendChild(this.parentDiv);\n    }\n\n    createAndPositionDiv (config) {\n        const { top, left, height, width, className, id } = config;\n        const existingDiv = document.getElementById(id);\n        const div = existingDiv || document.createElement('div');\n        div.style.position = 'absolute';\n        div.style.left = `${left}px`;\n        div.style.top = `${top}px`;\n        div.style.height = `${height}px`;\n        div.style.width = `${width}px`;\n        div.id = id;\n        div.className = className;\n        return div;\n    }\n\n    createAndCustomiseParent (className) {\n        const container = Utils.findContainer(this._coordinates);\n        const host = container.node();\n        const parentDiv = this.createAndPositionDiv({ ...host.boundBox(),\n            id: host.id(),\n            className: container.className() });\n        parentDiv.className = className;\n        parentDiv.style.position = 'relative';\n        return parentDiv;\n    }\n\n    coordinates () {\n        return this._coordinates;\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport { HTMLRenderer } from '../renderers/html-renderer';\nimport { LayoutComponent } from '../layout-component';\n\nexport const getChildNode = (context, config) =>\n    context.renderer().createAndPositionDiv(config);\n\nexport const findNode = (context, nodeID) =>\n    context.renderer().coordinates().find(point => point.node().id() === nodeID);\n\nexport const renderHTML = (context) => {\n    context.renderer(new HTMLRenderer(context.data()));\n    context.renderer().createhtml(context.mount(), context.className());\n};\n\nexport const drawLayout = context => renderHTML(context);\n\nexport const drawComponent = (componentData) => {\n    componentData.children().forEach((node) => {\n        const host = node.model().host();\n        if (host instanceof LayoutComponent) {\n            host.draw();\n        }\n        drawComponent(node);\n    });\n};\n\nexport const removeElement = (elemID) => {\n    if (elemID) {\n        selectElement(`#${elemID}`).remove();\n    }\n};\n\nconst setAlignConfig = (alignment, params) => {\n    let newNodeConfig = {};\n    const { node, refNode } = params;\n    switch (alignment) {\n    case 'left':\n        newNodeConfig = {\n            top: node.top,\n            left: refNode.left,\n            height: node.height,\n            width: Math.abs(node.width - Math.abs(refNode.left - node.left))\n        };\n        break;\n\n    case 'right':\n        newNodeConfig = {\n            top: node.top,\n            left: node.left,\n            height: node.height,\n            width: Math.abs(node.width - Math.abs(node.left + node.width - (refNode.left + refNode.width)))\n        };\n        break;\n\n    case 'top':\n        newNodeConfig = {\n            top: refNode.top,\n            left: node.left,\n            height: Math.abs(node.height - Math.abs(refNode.top - node.top)),\n            width: node.width\n        };\n        break;\n\n    case 'bottom':\n        newNodeConfig = {\n            top: node.top,\n            left: node.left,\n            height: Math.abs(node.top - refNode.top + refNode.height),\n            width: node.width\n        };\n        break;\n\n    case 'h-center':\n        newNodeConfig = {\n            top: node.top,\n            left: refNode.left,\n            height: node.height,\n            width: refNode.width\n        };\n        break;\n\n    case 'v-center':\n        newNodeConfig = {\n            top: refNode.top,\n            left: node.left,\n            height: refNode.top,\n            width: node.width\n        };\n        break;\n    default:\n        break;\n    }\n    return newNodeConfig;\n};\n\nexport const resolveAligment = (context, componentData) => {\n    componentData.children().forEach((component) => {\n        const host = component.model().host();\n\n        if (host instanceof LayoutComponent && host.alignWith()) {\n            const componentToAlign = context.componentMap().get(host.alignWith());\n\n            if (componentToAlign) {\n                const point = findNode(context, component.id()).node();\n                const node = point.boundBox();\n                const refNode = findNode(context, componentToAlign.renderAt())\n                    .node()\n                    .boundBox();\n                const newNodeConfig = setAlignConfig(host.alignment(), { node, refNode });\n\n                // check if model in parent component\n                Object.assign(newNodeConfig, { id: point.id(), className: host.className() });\n                context.renderer().createAndPositionDiv(newNodeConfig);\n                context.componentMap().get(host.name()).setSpatialConfig({\n                    x: newNodeConfig.left,\n                    y: newNodeConfig.top,\n                    height: newNodeConfig.height,\n                    width: newNodeConfig.width\n\n                });\n            }\n        }\n\n        resolveAligment(context, component);\n    });\n};\n","import { Utils } from '../utils';\nimport { drawLayout, resolveAligment, drawComponent } from './helper';\n\nexport class DrawingManager {\n    constructor (data, renderer, container) {\n        this._data = data.tree;\n        this._componentMap = data.componentMap;\n        this._layoutClassName = data.layoutClassName;\n        this._renderer = renderer;\n        this._mount = Utils.isDOMElement(container) ? container : Utils.getElement(container);\n    }\n\n    draw () {\n        drawLayout(this);\n        resolveAligment(this, this._data);\n        drawComponent(this._data);\n        return this;\n    }\n\n    data (data) {\n        if (data) {\n            this._data = data;\n        }\n        return this._data;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    className (param) {\n        if (param) {\n            this._layoutClassName = param;\n        }\n        return this._layoutClassName;\n    }\n\n    renderer (param) {\n        if (param) {\n            this._renderer = param;\n        }\n        return this._renderer;\n    }\n\n    mount (param) {\n        if (param) {\n            this._mount = param;\n        }\n        return this._mount;\n    }\n}\n","import DefinitionModel from './definitionModel';\nimport { prepareTargetComponentMap, getComponent, placeComponent, placeGridComponent } from '../helper';\n\nexport default class DefinitionManager {\n    constructor (componentMap, sequence, totalHeight, totalWidth) {\n        this._componentMap = componentMap;\n        this._prioritySequence = sequence;\n        this._totalHeight = totalHeight;\n        this._totalWidth = totalWidth;\n        this._targetComponentMap = null;\n    }\n\n    // create the config model\n    generateConfigModel () {\n        prepareTargetComponentMap(this);\n        const canvasComponent = this._targetComponentMap.get('canvas');\n        const definitionModel = new DefinitionModel({});\n        let tempDefModel = definitionModel;\n        definitionModel.remainingHeight(this._totalHeight);\n        definitionModel.remainingWidth(this._totalWidth);\n\n        let componentRef = null;\n\n        this._prioritySequence.forEach((name) => {\n            componentRef = getComponent(canvasComponent, name);\n            if (name !== 'grid') {\n                tempDefModel = placeComponent(tempDefModel, componentRef).second;\n            } else {\n                tempDefModel = placeGridComponent(tempDefModel, componentRef.component);\n            }\n        });\n        return definitionModel;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    targetComponentMap (param) {\n        if (param) {\n            this._targetComponentMap = param;\n        }\n        return this._targetComponentMap;\n    }\n}\n","import { sanitizeConfig } from './helper';\n\nexport class LayoutDef {\n    constructor () {\n        this._componentMap = new Map();\n        this._layoutDefinition = null;\n    }\n\n    addComponent (component) {\n        this._componentMap.set(component.name(), component);\n    }\n\n    layoutDefinition (def) {\n        if (def) {\n            this._layoutDefinition = def;\n        }\n        return this._layoutDefinition;\n    }\n\n    addMultipleComponent (componentArray) {\n        componentArray.forEach((comp) => {\n            this.addComponent(comp);\n        });\n    }\n\n    sanitizedDefinition () {\n        sanitizeConfig(this, this._layoutDefinition);\n        return this.layoutDefinition();\n    }\n\n    componentMap () {\n        return this._componentMap;\n    }\n    resetComponentMap () {\n        this._componentMap.clear();\n    }\n}\n","import DefinitionManager from '../layout-definition/definition-manager';\n\nexport function sanitizeConfig (context, hostObj) {\n    const hostID = hostObj.host();\n    if (hostObj.lanes() && hostObj.lanes().length) {\n        hostObj.lanes().forEach(childHost => sanitizeConfig(context, childHost));\n    }\n    if (hostID != null && typeof (hostID) === 'string') {\n        if (context.componentMap().get(hostID) !== undefined) {\n            hostObj.host(context.componentMap().get(hostID));\n        }\n    }\n}\n\nexport function calLayOutDef (context) {\n    const { height, width } = context.dimension();\n    const defManager = new DefinitionManager(context.layoutDef().componentMap(),\n                                              context.prioritySequence(),\n                                              height,\n                                              width);\n    const genLayoutdef = defManager.generateConfigModel();\n    return genLayoutdef;\n}\n","import {\n  LayoutModel\n} from '../layout-definition';\n\nimport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT\n} from '../constants/defaults';\n\nimport {\n   GRID\n} from '../../enums/constants';\n\nimport { DrawingManager } from '../drawing-manager';\nimport { removeElement } from '../drawing-manager/helper';\nimport { Utils } from '../utils';\nimport { LayoutDef } from './layout-def';\nimport { calLayOutDef } from './helper';\n\nexport default class LayoutManager {\n    constructor (conf) {\n        this._renderAt = conf.renderAt;\n        this._layoutClassName = conf.className;\n        this._dimension = {\n            width: conf.width || DEFAULT_WIDTH,\n            height: conf.height || DEFAULT_HEIGHT\n        };\n\n        this._skeletonType = conf.skeletonType || 'html';\n        this._layoutDefinition = null;\n        this._layoutDef = new LayoutDef();\n        this._drawingManager = null;\n        this._prioritySequence = [];\n        this.tree = null;\n        this._rootNodeID = null;\n    }\n\n    layoutDef (param) {\n        if (param) {\n            this._layoutDef = param;\n        }\n        return this._layoutDef;\n    }\n\n    prioritySequence (param) {\n        if (param) {\n            this._prioritySequence = param;\n        }\n        return this._prioritySequence;\n    }\n\n    dimension (param) {\n        if (param) {\n            Object.assign(this._dimension, param);\n        }\n        return this._dimension;\n    }\n\n    addComponent (component) {\n        this._layoutDef.addComponent(component);\n    }\n\n    addMultipleComponent (componentArray) {\n        this._layoutDef.addMultipleComponent(componentArray);\n    }\n\n    resetNode (node) {\n        if (this.con) {\n            this.con.resetNode(node);\n        }\n    }\n\n  /**\n   * function to update the node and rerender the layout.\n   * @param  {} config - node configuration to change.\n   */\n    updateNode (config) {\n        this.tree.updateNode(config);\n        this._layoutDefinition = this.tree.model;\n        this.compute();\n    }\n\n    compute () {\n        //----\n        if (Utils.isDOMElement(this._renderAt)) {\n            this._renderAt._layout = this;\n        } else {\n            document.getElementById(this._renderAt)._layout = this;\n        }\n        //-----\n        this._layoutDefinition = calLayOutDef(this);\n        this._layoutDef.layoutDefinition(this._layoutDefinition);\n        this._layoutDefinition = this._layoutDef.sanitizedDefinition();\n        this._layout = new LayoutModel({\n            width: this._dimension.width,\n            height: this._dimension.height\n        },\n            this._layoutDefinition);\n        this.tree = this._layout.negotiate().tree();\n        this._layout.broadcast();\n        this._drawingManager = new DrawingManager({\n            tree: this.tree,\n            componentMap: this._layoutDef.componentMap(),\n            layoutClassName: this._layoutClassName\n        }, this._skeletonType, this._renderAt);\n\n        if (this._rootNodeID) {\n            this.tree.id(this._rootNodeID);\n        } else {\n            this._rootNodeID = this.tree.id();\n        }\n    // this will draw all the components by calling their draw method\n        this._drawingManager.draw();\n    }\n\n    getRootNodeId () {\n        return this._rootNodeID;\n    }\n\n  /**\n  * This function takes the LayoutComponents and Register them in component store\n  * @param {Array<LayoutComponent>} layoutComponents\n  */\n    registerComponents (layoutComponents) {\n        this._prioritySequence.length = 0;\n        this._layoutDef.resetComponentMap();\n        layoutComponents.forEach((container) => {\n            if (container) {\n                this._prioritySequence.push(container.name());\n                this.addComponent(container);\n                if (container.name() === 'grid') {\n                    container.component.forEach((componentArr) => {\n                        componentArr.forEach((compo) => {\n                            this.addComponent(compo);\n                        });\n                    });\n                }\n            }\n        });\n        return this;\n    }\n\n    getComponent (componentName) {\n        return this._layoutDef.componentMap().get(componentName);\n    }\n\n    deleteElement (component, elementName) {\n        this._layoutDef.componentMap().delete(elementName);\n        const deleteElementId = component.renderAt();\n        return removeElement(deleteElementId);\n    }\n\n    removeComponent (name) {\n        const component = this.getComponent(name);\n        if (component) {\n            if (name === GRID) {\n                return component.component.map(comp => comp.map(\n                    co => this.deleteElement(co, co.name())\n                ));\n            }\n            return this.deleteElement(component, name);\n        }\n        return this;\n    }\n\n    renderAt (mount) {\n        if (mount) {\n            this._renderAt = mount;\n        }\n        return this._renderAt;\n    }\n}\n","import { isEqual, STATE_NAMESPACES, selectElement, getValueParser } from 'muze-utils';\nimport { VisualGroup } from '@chartshq/visual-group';\nimport { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, DATA, CONFIG, GRID }\n    from '../constants';\nimport { canvasOptions } from './local-options';\nimport { LayoutManager } from '../../../layout/src/tree-layout';\n\n/**\n * Instantiate high level components. Canvas knows what all high level component it has.\n * @nice-to-have dynamic high level components.\n *  - Is it even required ?\n *  - Reactive to source (canvas) streaming ?\n * @param {*} context Canvas instance\n * @return {Object.<Array>} Arrays of Title, visualGroup, Legend\n */\nexport const initCanvas = (context) => {\n    const reg = context._registry.components;\n\n    return [new reg.VisualGroup(context._registry, Object.assign({\n        throwback: context._throwback\n    }, context.dependencies()))];\n};\n\nexport const fixScrollBarConfig = (config) => {\n    config.scrollBar.thickness = Math.min(50, Math.max(10, config.scrollBar.thickness));\n    return config;\n};\n\nexport const setLayoutInfForUnits = (context) => {\n    const layoutManager = context._layoutManager;\n    const gridLayout = layoutManager.getComponent(GRID);\n    const boundBox = gridLayout && gridLayout.getBoundBox();\n    const valueMatrix = context.composition().visualGroup.matrixInstance().value;\n    const parentContainer = selectElement(`#${layoutManager.getRootNodeId()}`).node();\n    valueMatrix.each((cell) => {\n        cell.valueOf().parentContainerInf({\n            el: parentContainer,\n            dimensions: boundBox\n        });\n    });\n};\n\n/**\n *\n *\n * @memberof Canvas\n */\nexport const dispatchProps = (context) => {\n    const lifeCycleManager = context.dependencies().lifeCycleManager;\n    lifeCycleManager.notify({ client: context, action: 'beforeupdate' });\n    const visualGroup = context.composition().visualGroup;\n\n    const allOptions = context._allOptions;\n    for (const key in allOptions) {\n        const value = context[key]();\n        if (value !== null) {\n            visualGroup[key] && visualGroup[key](value);\n        }\n    }\n    const { invalidValues } = context.config();\n\n    visualGroup.valueParser(getValueParser(invalidValues));\n    visualGroup.createMatrices();\n    context._cachedProps = {};\n    lifeCycleManager.notify({ client: context, action: 'initialized' });\n    lifeCycleManager.notify({ client: context, action: 'updated' });\n};\n\nconst equalityChecker = (props, params) => {\n    let checker = () => false;\n    return !props.every((option, i) => {\n        switch (option) {\n        case ROWS:\n        case COLUMNS:\n        case DETAIL:\n            checker = isEqual('Array');\n            break;\n\n        case SHAPE:\n        case SIZE:\n        case COLOR:\n        case DATA:\n        case CONFIG:\n            checker = isEqual('Object');\n            break;\n        default:\n            checker = () => true;\n            break;\n        }\n        const oldVal = params[i][0];\n        const newVal = params[i][1];\n\n        return checker(oldVal, newVal);\n    });\n};\n\nconst updateChecker = (props, params) => props.every((option, i) => {\n    const val = params[i][1];\n    switch (option) {\n    case ROWS:\n    case COLUMNS:\n        return val !== null;\n\n    case DATA:\n        return val && !val.isEmpty();\n\n    default:\n        return true;\n\n    }\n});\n\nexport const notifyAnimationEnd = (context) => {\n    const viewInfo = context.layout().viewInfo();\n    const centerMatrix = viewInfo && viewInfo.viewMatricesInfo.matrices.center[1] || [];\n    const promises = [];\n    centerMatrix.forEach((cellArr) => {\n        cellArr.forEach((cell) => {\n            promises.push(cell.valueOf().done());\n        });\n    });\n    const lifeCycleManager = context.lifeCycle();\n    if (promises.length) {\n        Promise.all(promises).then(() => {\n            // Update life cycle\n            lifeCycleManager.notify({ client: context, action: 'drawn' });\n            const animDonePromises = [];\n\n            centerMatrix.forEach((cellArr) => {\n                cellArr.forEach((cell) => {\n                    cell.valueOf().layers().forEach((layer) => {\n                        animDonePromises.push(layer.animationDone());\n                    });\n                });\n            });\n\n            [context.xAxes(), context.yAxes()].forEach((axisArr) => {\n                axisArr = axisArr || [];\n                axisArr.forEach((axes) => {\n                    axes.forEach((axisInst) => {\n                        animDonePromises.push(axisInst.animationDone());\n                    });\n                });\n            });\n\n            Promise.all(animDonePromises).then(() => {\n                lifeCycleManager.notify({ client: context, action: 'animationend' });\n            });\n        });\n    } else {\n        lifeCycleManager.notify({ client: context, action: 'animationend' });\n    }\n};\n\nexport const setupChangeListener = (context) => {\n    const store = context._store;\n\n    const allOptions = Object.keys(context._allOptions);\n    const props = [...allOptions, ...Object.keys(canvasOptions)];\n    const nameSpaceProps = [...allOptions, ...Object.keys(canvasOptions)].map(prop =>\n        `${STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE}.${prop}`);\n    store.registerChangeListener(nameSpaceProps, (...params) => {\n        const equalityProps = equalityChecker(props, params);\n        const updateProps = updateChecker(props, params);\n        // inform attached board to rerender\n        if (equalityProps && context.mount()) {\n            if (updateProps) {\n                dispatchProps(context);\n            } else {\n                context.composition().visualGroup.remove();\n            }\n            context.render();\n        }\n        notifyAnimationEnd(context);\n    }, true);\n};\n\nexport const applyInteractionPolicy = (firebolt) => {\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    if (visualGroup) {\n        const valueMatrix = visualGroup.matrixInstance().value;\n        const interactionPolicy = firebolt._interactionPolicy;\n        interactionPolicy(valueMatrix, firebolt);\n        const crossInteractionPolicy = firebolt._crossInteractionPolicy;\n        const behaviours = crossInteractionPolicy.behaviours;\n        const sideEffects = crossInteractionPolicy.sideEffects;\n        valueMatrix.each((cell) => {\n            const unitFireBolt = cell.valueOf().firebolt();\n            for (const key in behaviours) {\n                unitFireBolt.changeBehaviourStateOnPropagation(key, behaviours[key]);\n            }\n            for (const key in sideEffects) {\n                unitFireBolt.changeSideEffectStateOnPropagation(key, sideEffects[key]);\n            }\n        });\n    }\n};\n\n/**\n * Sets the rotation for all x axes if any axis has the rotation config set in the\n * entire view\n *\n * @param {Array} columns Column cells that contain the axes cells\n */\nexport const setLabelRotationForAxes = (context) => {\n    let rotation = 0;\n\n    const xAxes = context.xAxes() || [];\n\n    (() => {\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                const rotationVal = xAxes[i][j].renderConfig().labels.rotation;\n                if (rotationVal && rotationVal !== 0) {\n                    rotation = rotationVal;\n                    return;\n                }\n            }\n        }\n    })();\n\n    if (rotation) {\n        xAxes.forEach((axes) => {\n            axes.forEach((axis) => {\n                axis.renderConfig({ labels: { rotation } });\n                axis.smartTicks(axis.setTickConfig());\n            });\n        });\n    }\n};\n\nexport const createGroupState = (context) => {\n    const [globalState, localState] = VisualGroup.getState();\n    const store = context._store;\n    store.append('app.group', globalState);\n    store.append('local.group', localState);\n};\n\nexport const removeChild = (mount) => {\n    while (mount.firstChild) {\n        mount.removeChild(mount.firstChild);\n    }\n};\n\nexport const createLayoutManager = () => {\n    const layoutManager = new LayoutManager({\n        className: 'muze-group-container'\n    });\n    return layoutManager;\n};\n","/**\n * This is the global options semantics based on which setters getters are created and reactivity is initiated.\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n * @module GlobalOptions\n */\n\nimport { intSanitizer, mergeRecursive, DataModel } from 'muze-utils';\nimport { fixScrollBarConfig } from './canvas/helper';\nimport { DEFAULT_CONFIG } from './defaults';\n\nexport default {\n    data: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel\n        }\n    },\n    width: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    height: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitWidth: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitHeight: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    config: {\n        value: [null, null],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            takesMultipleParams: true,\n            sanitization: ([config, auxConfig = {}], oldConfig) => {\n                // Stores additional config, if passed\n                const { reset = false } = auxConfig;\n                let oldConf = {};\n\n                if (!reset) {\n                    oldConf = mergeRecursive({}, config === null ? {} : oldConfig);\n                }\n\n                const defConfig = mergeRecursive(oldConf, DEFAULT_CONFIG);\n                const newConf = mergeRecursive(defConfig, config);\n                return fixScrollBarConfig(newConf);\n            }\n\n        }\n    }\n};\n","import { sanitizeIP, mergeRecursive } from 'muze-utils';\nimport { TOP, CENTER, BOTTOM } from '../enums/constants';\n\n/*\n * This is the abstract implementation of the root layout. This takes care of common work which all the layouts\n * has to handle. The common work includes sanitizaion of inputs, update, rerender, dispose etc. This class can't be\n * used directly (as ofcourse this is an abstract implementaiton), the class which is implementing it has to implement\n * the necessary methods and gives its on visual.\n */\n\n/**\n * This class is used to create a generic layout. It can be extended to create layouts\n * of different types\n * @class GenericLayout\n */\nexport default class GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config configuration to be given for the layout\n     * @param {Object} dependencies external dependencies.\n     *\n     * @memberof GenericLayout\n     *\n     */\n    constructor (mountPoint, measurement, config, dependencies) {\n        this._config = {};\n        this._measurement = {};\n        this._matrices = [];\n        // External dependencies to be included for the layout. This includes the ext global dependencies like\n        // smartlabel which has one single implementation of throughout the page or per isntance\n        this._dependencies = dependencies;\n\n        this.measurement(measurement);\n        this.mountPoint(mountPoint);\n        this.config(config);\n    }\n\n    /**\n     * Returns an object which is used to recreate the layout.\n     * @return {Object} the serialized components\n     */\n    serialize () {\n        return {\n            measurement: this.measurement(),\n            config: this.config(),\n            matrices: this.matrices()\n        };\n    }\n\n     /**\n     * Sets/Gets the config for the layout\n     * @param {Object} config configuration for the layout\n     * @return {Layout|Object} Gets the Config/ Returns this instance when set\n     */\n    config (config) {\n        if (config) {\n            this._config = mergeRecursive(this._config || {}, config);\n            this._config.border.width = Math.max(0, this._config.border.width);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Sets/Gets the measurement for the layout\n     * @param {Object} measurement measurement for the layout\n     * @return {Layout|Object} Gets the measurement/ Returns this instance when set\n     */\n    measurement (measurement) {\n        if (measurement) {\n            this._measurement = mergeRecursive(this._measurement || {}, measurement);\n\n            return this;\n        }\n        return this._measurement;\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     * @param {Object} matrices matrices for the layout\n     * @return {Layout|Object} Gets the matrices/ Returns this instance when set\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = sanitizeIP.typeObj([TOP, CENTER, BOTTOM], matrices);\n\n            return this;\n        }\n        return this._matrices;\n    }\n\n    /**\n     * Sets/Gets the matrix for row\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    rowMatrix (matrix) {\n        if (matrix) {\n            this._rowMatrix = matrix;\n            return this;\n        }\n        return this._rowMatrix;\n    }\n\n    /**\n     * Sets/Gets the matrix for columns\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    columnMatrix (matrix) {\n        if (matrix) {\n            this._columnMatrix = matrix;\n            return this;\n        }\n        return this._columnMatrix;\n    }\n\n   /**\n     * Sets/Gets the matrix for value\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    centerMatrix (matrix) {\n        if (matrix) {\n            this._centerMatrix = matrix;\n            return this;\n        }\n        return this._centerMatrix;\n    }\n\n    /**\n     * Sets/Gets the mountPoint for the layout\n     * @param {Object} mountPoint mountPoint for the layout\n     * @return {Layout|Object} Gets the mountPoint/ Returns this instance when set\n     */\n    mountPoint (mountPoint) {\n        if (mountPoint) {\n            this._mountPoint = mountPoint;\n\n            return this;\n        }\n        return this._mountPoint;\n    }\n}\n","import * as FieldNames from '../enums/constants';\n\n/**\n * Default configuration of the layout\n * @return {Object} returns the default configuration\n */\nexport const DEFAULT_CONFIGURATION = {\n    [FieldNames.BORDER]: {\n        [FieldNames.STYLE]: 'solid',\n        [FieldNames.COLOR]: '#d6d6d6',\n        [FieldNames.WIDTH]: 2,\n        [FieldNames.COLLAPSE]: true,\n        [FieldNames.SPACING]: 0\n    },\n    [FieldNames.PAGINATION]: 'scroll',\n    [FieldNames.BUFFER]: 20,\n    [FieldNames.GUTTERSPACE]: { rows: [], columns: [] },\n    [FieldNames.DISTRIBUTION]: { rows: [], columns: [] },\n    [FieldNames.BREAK_PAGE]: { rows: [], columns: [] },\n    [FieldNames.ROW_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_POINTER]: 0,\n    [FieldNames.ROW_POINTER]: 0\n};\n\n/**\n * Default measurements for the layout\n * @return {Object} returns the default measurements\n */\nexport const DEFAULT_MEASUREMENTS = {\n    [FieldNames.GRID_WIDTH]: 100,\n    [FieldNames.GRID_HEIGHT]: 100,\n    [FieldNames.UNIT_WIDTH]: 100,\n    [FieldNames.UNIT_HEIGHT]: 100\n};\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n","/**\n * This file exports utility functions that are used across the layout module\n */\nimport { Symbols } from 'muze-utils';\nimport { PRIMARY, SECONDARY, HEIGHT, WIDTH } from '../enums/constants';\n\nconst nest = Symbols.nest;\n/**\n *\n *\n * @param {*} isTransposed\n *\n */\nconst getMeasureInfo = (isTransposed) => {\n    if (isTransposed) {\n        return {\n            firstMeasure: HEIGHT,\n            secondMeasure: WIDTH\n        };\n    }\n    return {\n        firstMeasure: WIDTH,\n        secondMeasure: HEIGHT\n    };\n};\n\n/**\n *\n *\n * @param {*} i\n * @param {*} page\n *\n */\nconst findInPage = (i, page) => {\n    let count = 0;\n    for (const x in page) {\n        if (i < page[x]) {\n            count = x;\n            break;\n        }\n    }\n    return count;\n};\n\n/**\n * Creates a single matrix from two matrices\n *\n * @param {Array<Array>} matrix Input matrix\n * @return {Array<Array>} Joined matrix\n * @memberof VisualMatrix\n */\nexport const combineMatrices = (matrix, config) => {\n    const { isTransposed } = config;\n    let joinedMatrix = matrix[0].length > 0 ? matrix[0] : matrix[1];\n    if (isTransposed) {\n        joinedMatrix = matrix[0].length > 0 ? [...matrix[0]] : [];\n        joinedMatrix = matrix[1].length > 0 ? [...joinedMatrix, ...matrix[1]] : joinedMatrix;\n    } else {\n        joinedMatrix = joinedMatrix.map((row, rowIndex) => {\n            let rowData = [];\n            if (matrix[0].length > 0) {\n                rowData = [...matrix[0][rowIndex]];\n            }\n            if (matrix[1].length > 0) {\n                rowData = [...rowData, ...matrix[1][rowIndex]];\n            }\n            return rowData;\n        });\n    }\n    return joinedMatrix;\n};\n\n/**\n * Creates a hirachical tree from the context\n *\n * @param {Object} context context for creating tree\n * @return {Object} nested tree\n */\nexport const createTree = (context) => {\n    let matrixTree = {};\n    let lastLevelKey = 0;\n    let facet = PRIMARY;\n    const nestFn = nest();\n    const keys = [];\n    const layoutMatrix = context._layoutMatrix;\n    const primaryMatrix = context.primaryMatrix();\n    const secondaryMatrix = context.secondaryMatrix();\n    const { isTransposed, breakPage } = context.config();\n\n    if (!isTransposed) {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix[0].length - 1; i++) {\n                keys.push(i);\n            }\n            keys.push(primaryMatrix[0].length - 1);\n            if (facet === SECONDARY || secondaryMatrix.length === 0) {\n                lastLevelKey = primaryMatrix[0].length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const keyLength = primaryMatrix.length > 0 ? primaryMatrix[0].length : 0;\n            for (let i = secondaryMatrix[0].length - 1; i > 0; i--) {\n                keys.push(i + keyLength);\n            }\n            keys.push(keyLength);\n\n            if (facet === PRIMARY) {\n                lastLevelKey = keyLength;\n            }\n        } else {\n            lastLevelKey = primaryMatrix.length > 0 ? primaryMatrix[0].length - 1 : 0;\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        matrixTree = nestFn.entries(layoutMatrix);\n    } else {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix.length - 1; i++) {\n                keys.push(i);\n            }\n            // if (facet === PRIMARY) {\n            keys.push(primaryMatrix.length - 1);\n            // } else {\n            if (facet === SECONDARY) {\n                lastLevelKey = primaryMatrix.length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const primaryMatrixLength = primaryMatrix.length;\n            for (let i = secondaryMatrix.length - 1; i > 0; i--) {\n                keys.push(i + primaryMatrixLength);\n            }\n            // if (facet === SECONDARY) {\n            keys.push(primaryMatrixLength);\n            // }\n            if (facet === PRIMARY) {\n                lastLevelKey = primaryMatrixLength;\n            }\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        let newMatrix = [];\n        newMatrix = layoutMatrix[0].map((col, colIndex) => layoutMatrix.map(row => row[colIndex]));\n        matrixTree = nestFn.entries(newMatrix);\n    }\n    return { tree: matrixTree, lastLevelKey };\n};\n\n/**\n * Gives the min measues\n *\n * @param {boolean} isTransposed is column matrix\n * @param {Object} unitMeasures min measures to be given to cells\n * @return {Object} dimension min cell\n */\nexport const getMinMeasures = (isTransposed, unitMeasures) => {\n    if (!isTransposed) {\n        return {\n            height: unitMeasures.height,\n            width: 0\n        };\n    }\n    return {\n        height: 0,\n        width: unitMeasures.width\n    };\n};\n\n/**\n * Get the logical space from the tree\n *\n * @param {Node} item tree to be calculated\n * @param {number} measures width and height\n * @param {Array} minMeasures min measures for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} dimension\n */\nexport const getLogicalSpace = (item, measures, minMeasures, maxMeasure = []) => {\n    const { firstMeasure, secondMeasure } = measures;\n    let firstMeasureValue = 0;\n    let secondMeasureValue = 0;\n    item.values.forEach((valueArray) => {\n        let fMeasure = 0;\n        let sMeasure = 0;\n        valueArray.forEach((placeholder, colIndex) => {\n            placeholder.setAvailableSpace();\n            const space = placeholder.getLogicalSpace();\n            const minSecondMeasure = placeholder.getMinMeasures(minMeasures[secondMeasure]);\n\n            sMeasure = Math.max(sMeasure, +space[secondMeasure], minSecondMeasure);\n            maxMeasure[colIndex] = Math.max(maxMeasure[colIndex] || 0, space[firstMeasure]);\n            fMeasure += +maxMeasure[colIndex];\n        });\n        secondMeasureValue += sMeasure;\n        firstMeasureValue = Math.max(firstMeasureValue, fMeasure);\n        item.space = {\n            [secondMeasure]: Math.ceil(secondMeasureValue),\n            [firstMeasure]: Math.ceil(firstMeasureValue)\n        };\n    });\n    return {\n        [secondMeasure]: secondMeasureValue,\n        [firstMeasure]: firstMeasureValue\n    };\n};\n\n/**\n * Computes the logical spcae taken by the matrix tree\n *\n * @param {*} [item={}] tree to be viewed\n * @param {boolean} [isTransposed=false] is column matrix\n * @param {*} unitMeasures min measues for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} logical space taken\n */\nexport const computeLogicalSpace = (item = {}, config, maxMeasures) => {\n    const { isTransposed = false, unitMeasures } = config;\n    const { firstMeasure, secondMeasure } = getMeasureInfo(isTransposed);\n    const { values } = item;\n    const minMeasures = getMinMeasures(isTransposed, unitMeasures);\n\n    if (values[0].key) {\n        const logicalSpace = { [firstMeasure]: 0, [secondMeasure]: 0 };\n\n        values.forEach((valueItem) => {\n            // Compute logical space for lowest level\n            const space = computeLogicalSpace(valueItem, config, maxMeasures);\n            // Set logical space for first measure\n            logicalSpace[firstMeasure] = Math.max(logicalSpace[firstMeasure], space[firstMeasure],\n                minMeasures[firstMeasure]);\n\n            // Set logical space for second measure\n            logicalSpace[secondMeasure] += +space[secondMeasure];\n        });\n        item.space = logicalSpace;\n        return logicalSpace;\n    }\n\n    return getLogicalSpace(item, { firstMeasure, secondMeasure }, minMeasures, maxMeasures);\n};\n\n/**\n * Gives the space taken by a row\n *\n * @param {Array} row matrix array of rows\n * @return {Object} dimension of the row\n */\nexport const spaceTakenByRow = (row) => {\n    let height = 0;\n    let width = 0;\n    row.forEach((col) => {\n        const spaces = col.getLogicalSpace();\n        height = Math.max(height, spaces.height);\n        width += spaces.width;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Gives the space taken by a column\n *\n * @param {Array<Array>} matrix column matrix\n * @param {number} colIndex column index\n * @return {Object} dimension of the column\n */\nexport const spaceTakenByColumn = (matrix, colIndex) => {\n    let height = 0;\n    let width = 0;\n    matrix.forEach((row) => {\n        const col = row[colIndex];\n        const spaces = col.getLogicalSpace();\n        width = Math.max(width, spaces.width);\n        height += spaces.height;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Creates different level matrices\n *\n * @param {Object} item matrix tree\n * @param {boolean} isTransposed is column matrix\n * @return {Object} matrix of each level\n */\nexport const createMatrixEachLevel = (item, isTransposed) => {\n    if (item.values[0].key) {\n        const arr = [];\n        item.values.forEach((child) => {\n            if (!isTransposed) {\n                arr.push(...createMatrixEachLevel(child, isTransposed));\n            } else {\n                const eachLevel = createMatrixEachLevel(child, isTransposed);\n                eachLevel.forEach((e, i) => {\n                    arr[i] = arr[i] || [];\n                    arr[i].push(...e);\n                });\n            }\n        });\n        item.matrix = arr;\n        return arr;\n    }\n    if (!isTransposed) {\n        item.matrix = item.values;\n    } else {\n        item.matrix = item.values[0].map((col, colIndex) => item.values.map(row => row[colIndex]));\n    }\n    return item.matrix;\n};\n\n/**\n * Breaks the matrix into two part\n *\n * @param {Array<Array>} matrix input matrix\n * @param {boolean} isTransposed is column matrix\n * @param {number} breakPointer point in matrix where it is to be broken\n * @return {Array} two broken matrix\n */\nexport const breakMatrix = (matrix, isTransposed, breakPointer) => {\n    const primaryMatrix = [];\n    const secondaryMatrix = [];\n    if (isTransposed) {\n        matrix.forEach((row, rowIndex) => {\n            if (rowIndex >= breakPointer) {\n                secondaryMatrix.push(row);\n            } else {\n                primaryMatrix.push(row);\n            }\n        });\n    } else {\n        matrix.forEach((row, rowIndex) => {\n            row.forEach((column, columnIndex) => {\n                if (columnIndex >= breakPointer) {\n                    secondaryMatrix[rowIndex] = secondaryMatrix[rowIndex] || [];\n                    secondaryMatrix[rowIndex].push(column);\n                } else {\n                    primaryMatrix[rowIndex] = primaryMatrix[rowIndex] || [];\n                    primaryMatrix[rowIndex].push(column);\n                }\n            });\n        });\n    }\n    return [primaryMatrix, secondaryMatrix];\n};\n\n/**\n * Distributed width returned\n *\n * @param {Object} context context for the width distibution\n * @return {number} distributed widths\n */\nexport const getDistributedWidth = (context, layoutConfig) => {\n    const {\n        availableWidth,\n        width,\n        row\n    } = context;\n    const {\n        isDistributionEqual,\n        isTransposed,\n        distribution\n    } = layoutConfig;\n    let distSum = 0;\n    if (distribution && distribution[0]) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    return row.map((col, colIndex) => {\n        const space = col.getLogicalSpace().width;\n        let distWidth = (space + (availableWidth - width) * (space / width));\n        if (isTransposed) {\n            if (distribution.length > 0) {\n                distWidth = (availableWidth * distribution[colIndex] / distSum);\n            } else if (isDistributionEqual || width === 0) {\n                const rowLen = row.length;\n                distWidth = (availableWidth / rowLen);\n            }\n        }\n        return Math.floor(distWidth);\n    });\n};\n\n/**\n * Distributeed heights returned\n *\n * @param {Object} context input for the height distribution\n * @return {Object} distribured heights\n */\nexport const getDistributedHeight = (context) => {\n    let distSum = 0;\n    let gutterSum = 0;\n    let heightWithoutGutter = 0;\n    const {\n        isTransposed,\n        distribution,\n        availableHeight,\n        height,\n        isDistributionEqual,\n        gutter,\n        matrix,\n        cIdx\n    } = context;\n\n    if (distribution && distribution[0] !== undefined) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    if (gutter && gutter[0] !== undefined) {\n        gutterSum = gutter.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    heightWithoutGutter = availableHeight - Math.floor(availableHeight * gutterSum);\n\n    const colLen = matrix.length;\n    return matrix.map((row, rIdx) => {\n        const col = row[cIdx];\n        const space = col.getLogicalSpace().height;\n        let distHeight = (space + (heightWithoutGutter - height) * (space / height));\n\n        if (!isTransposed) {\n            if (distribution.length > 0 && colLen === distribution.length) {\n                distHeight = (heightWithoutGutter * distribution[rIdx] / distSum);\n            } else if (isDistributionEqual || context.height === 0) {\n                distHeight = (heightWithoutGutter / colLen);\n            }\n        }\n        return Math.floor(distHeight);\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} beg\n * @param {*} end\n */\nexport const extraCellsRemover = (arr, beg, end) => arr.slice(beg, -end);\n\n/**\n * Creates matrix instancess\n *\n * @param {Array} [arr=[]] mutated arry\n * @param {number} depth depth of the tree\n * @param {Array} matrixInfo Details about the matrix(tree, etc) to be inserted\n * @param {boolean} layout Instance of layout\n */\nexport const createMatrixInstances = (arr = [], depth, matrixInfo, layout) => {\n    const breakPointer = layout._breakPointer;\n    const config = layout.config();\n    const {\n        isTransposed\n    } = config;\n    const {\n        tree,\n        layoutMatrix\n    } = matrixInfo;\n\n    if (depth === 0) {\n        const brokenMatrix = breakMatrix(tree.matrix, isTransposed, breakPointer);\n        arr.push({\n            matrix: tree.matrix,\n            primaryMatrix: brokenMatrix[0],\n            secondaryMatrix: brokenMatrix[1],\n            space: tree.space\n        });\n        return arr;\n    }\n    const nextLevel = depth - 1;\n    tree.values.forEach((e) => {\n        createMatrixInstances(arr, nextLevel, {\n            tree: e,\n            layoutMatrix\n        }, layout);\n    });\n    return arr;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    maxMeasures: {},\n    availableSpace: {},\n    logicalSpace: {}\n};\n","import { PRIMARY } from '../enums/constants';\n/**\n *\n *\n */\nexport const defaultConfig = {\n    distribution: [],\n    classPrefix: 'muze',\n    isDistributionEqual: true,\n    unitMeasures: {\n        height: 100,\n        width: 100,\n        border: 1\n    },\n    isTransposed: false,\n    facet: PRIMARY,\n    extraCellLengths: []\n};\n","import { mergeRecursive, generateGetterSetters, ERROR_MSG } from 'muze-utils';\nimport {\n    createTree,\n    combineMatrices,\n    createMatrixInstances\n  } from '../utils';\nimport { PROPS } from './props';\nimport { HEIGHT, WIDTH } from '../enums/constants';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        // Prepare matrices\n        this._lastLevelKey = 0;\n        this._primaryMatrix = matrix[0] || [];\n        this._secondaryMatrix = matrix[1] || [];\n        this._maxMeasures = [];\n        this._availableSpace = {};\n\n        // Store the config\n        generateGetterSetters(this, PROPS);\n        const defCon = Object.assign({}, this.constructor.defaultConfig());\n        this.config(mergeRecursive(defCon, config));\n\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n    }\n\n     /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    computeViewableSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getPriorityDistribution () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @returns\n     * @memberof VisualMatrix\n     */\n    primaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._primaryMatrix;\n    }\n\n    secondaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._secondaryMatrix;\n    }\n\n    tree (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._tree;\n    }\n\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    createTree () {\n        const { tree, lastLevelKey } = createTree(this);\n        this._lastLevelKey = lastLevelKey;\n        return tree;\n    }\n\n    /**\n     * Returns the space taken by visual matrix\n     *\n     * @return {Object} space taken by the matrix\n     * @memberof VisualMatrix\n     */\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    /**\n     * Sets the provied space to the visual matrix\n     *\n     * @param {number} width width provided\n     * @param {number} height height provided\n     * @memberof VisualMatrix\n     */\n    setAvailableSpace (width, height) {\n        this.availableSpace({ width, height });\n        const tree = this.tree();\n        const heightMeasures = this.populateMaxMeasures(HEIGHT, tree);\n        const widthMeasures = this.populateMaxMeasures(WIDTH, tree);\n        const depth = this.calculateDepth(widthMeasures, heightMeasures);\n\n        this.viewableMatrix = this.createViewPortMatrix(depth);\n        this.viewableMeasures = this.redistributeSpaces(width, height);\n        return this;\n    }\n\n    /**\n     * Populate the max measures in the array\n     *\n     * @param {Array} measures array to be filled with max measures\n     * @param {Object} matrixTree matrix tree of visual matrix\n     * @param {number} measure width or height\n     * @param {number} [depth=0] depth of the tree that to be calculated\n     * @memberof VisualMatrix\n     */\n    populateMaxMeasures (type, matrixTree, depth = 0, measures = []) {\n        measures[depth] = Math.max(measures[depth] || 0, matrixTree.space[type]);\n        if (matrixTree.values) {\n            const childDepth = depth + 1;\n            matrixTree.values.forEach((child) => {\n                if (child.space) {\n                    measures = this.populateMaxMeasures(type, child, childDepth, measures);\n                }\n            });\n        }\n        return measures;\n    }\n\n    /**\n     * Gets the viewable measures for the current viewable matrix\n     *\n     * @return {Object} Set of viewable measures\n     * @memberof VisualMatrix\n     */\n    getViewableSpaces () {\n        return this.viewableMeasures;\n    }\n\n    /**\n     * Returns the matrix that can be viewed in the current viewport\n     *\n     * @return {Array} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    getViewableMatrices () {\n        return this.viewableMatrix;\n    }\n\n    /**\n     * Creates the viewport that can be viewed together\n     *\n     * @param {number} depth maxDepth that can be viewed in the viewport\n     * @return {Array<Object>} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    createViewPortMatrix (depth) {\n        const arr = [];\n        createMatrixInstances(arr, depth, this.removeExtraCells(), this);\n        return arr;\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    combineMatrices,\n    spaceTakenByColumn,\n    getDistributedHeight,\n    computeLogicalSpace,\n    createMatrixEachLevel\n  } from '../utils';\nimport { ROW_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class RowVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = (matrix[0].length > 0 ? matrix[0][0].length : 0);\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n\n        // Create Tree\n        this._tree = {\n            key: ROW_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, false);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height\n        } = measures;\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i };\n            const { widths, rowHeights, columnWidths } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = [height, height];\n            const columnMeasures = widths;\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n        tree.matrix = extraCellsRemover(tree.matrix, begCellLen, endCellLen);\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        let remainingAvailWidth;\n        let remainingWidth;\n        let cWidths = [];\n        let conditions = [];\n        let maxPrioritySpace = 0;\n        const {\n            matrix,\n            width: availableWidth,\n            maxMeasures: maxWidths,\n            maxWidth: currentWidth,\n            height\n        } = measures;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length ? this.primaryMatrix()[0].length : 0;\n\n        const dist = [];\n\n        remainingAvailWidth = availableWidth;\n        remainingWidth = currentWidth;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            // divider = Math.min(2, matrixLen);\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            // divider = Math.min(1, matrixLen);\n        }\n        conditions.forEach((i) => {\n            dist[i] = maxWidths[i];\n            maxPrioritySpace += maxWidths[i];\n            remainingAvailWidth -= dist[i];\n            remainingWidth -= dist[i];\n        });\n        matrix[0].forEach((e, i) => {\n            if (conditions.indexOf(i) === -1) {\n                dist[i] = remainingAvailWidth * (maxWidths[i] / remainingWidth);\n            }\n        });\n        matrix.forEach(row => row.forEach((col, cIdx) => {\n            if (conditions.indexOf(cIdx) === -1) {\n                col.setAvailableSpace(dist[cIdx], height);\n\n                cWidths[cIdx] = Math.max(cWidths[cIdx] || 0, Math.floor(col.getLogicalSpace().width));\n            } else {\n                cWidths[cIdx] = 0;\n            }\n        }));\n\n        const prioritySpace = availableWidth - cWidths.reduce((t, n) => t + n);\n        if (prioritySpace < 0) {\n            cWidths = cWidths.map(() => 0);\n        } else {\n            conditions.forEach((i) => {\n                cWidths[i] = Math.floor(prioritySpace * (dist[i] / maxPrioritySpace || 1));\n            });\n        }\n        return cWidths;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures, heightMeasures) {\n        let i;\n        const { height } = this.availableSpace();\n\n        for (i = 0; i < heightMeasures.length; i++) {\n            if (heightMeasures[i] <= height) break;\n        }\n\n        return Math.min(widthMeasures.length - 1, i);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n        const maxMeasures = this.maxMeasures();\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        const logicalWidths = this.getPriorityDistribution({\n            matrix: this._layoutMatrix,\n            maxWidth,\n            maxMeasures,\n            width,\n            height\n        });\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths, logicalWidths };\n            const measures = this.redistributeViewSpaces(options);\n            maxWidths = measures.maxWidths;\n            maxHeights = measures.maxHeights;\n        });\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let cWidths = [];\n        let rHeights = [];\n        let mHeight = 0;\n        const maxMeasures = this.maxMeasures();\n\n        const {\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        } = this.config();\n        const { matrix, height, maxHeights, maxWidths, logicalWidths } = measures;\n        mHeight = spaceTakenByColumn(matrix, this._lastLevelKey).height;\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        measures.maxMeasures = maxMeasures;\n        measures.maxWidth = maxWidth;\n        if (maxWidth > 0) {\n            cWidths = logicalWidths;\n        } else {\n            cWidths = maxMeasures.map(() => 0);\n        }\n        rHeights = getDistributedHeight({\n            matrix,\n            cIdx: this._lastLevelKey,\n            height: mHeight,\n            availableHeight: height,\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        });\n        if (maxWidths.length > 0) {\n            cWidths = cWidths.map((e, i) => Math.max(e, maxWidths[0][i] || 0));\n        }\n        maxWidths.push(cWidths);\n        for (let x = 0; x < maxWidths.length; x++) {\n            maxWidths[x] = cWidths;\n        }\n        maxHeights.push(rHeights);\n        return { maxWidths, maxHeights };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = maxHeights[matrixIndex][rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth, colHeight - borderWidth);\n\n                if (rIdx === 0 && cIdx < breakPointer) {\n                    columnWidths[0][cIdx] = colWidth;\n                    widths[0] = (widths[0] || 0) + colWidth;\n                } else if (rIdx === 0 && cIdx >= breakPointer) {\n                    columnWidths[1][cIdx - breakPointer] = colWidth;\n                    widths[1] = (widths[1] || 0) + colWidth;\n                }\n                if (cIdx === this._lastLevelKey) {\n                    rowHeights[0][rIdx] = colHeight;\n                    rowHeights[1][rIdx] = colHeight;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    getDistributedWidth,\n    spaceTakenByRow,\n    createMatrixEachLevel,\n    computeLogicalSpace\n  } from '../utils';\nimport { COLUMN_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class ColumnVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = matrix[0].length;\n\n        // Create Tree\n        this._tree = {\n            key: COLUMN_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, true);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height,\n            width\n        } = measures;\n\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i, height };\n            const {\n                heights,\n                rowHeights,\n                columnWidths\n            } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = heights;\n            const columnMeasures = [width, width];\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n\n        tree.matrix = tree.matrix.map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        const {\n            height,\n            maxHeights\n        } = measures;\n        let remainingHeight = height;\n        let heightDist = [];\n        let conditions = [];\n        let divider = 2;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            divider = 2;\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            divider = 1;\n        }\n        maxHeights.forEach((heights, index) => {\n            if (conditions.indexOf(index) === -1) {\n                heightDist[index] = heights;\n                remainingHeight -= heights;\n            }\n        });\n        if (remainingHeight < 0) {\n            heightDist = heightDist.map(() => 0);\n        } else {\n            conditions.forEach((condition) => {\n                heightDist[condition] = Math.min(maxHeights[condition], (remainingHeight) / divider);\n            });\n        }\n        return heightDist;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures) {\n        let j;\n        const { width } = this.availableSpace();\n\n        for (j = 0; j < widthMeasures.length; j++) {\n            if (widthMeasures[j] <= width) break;\n        }\n        return Math.min(widthMeasures.length - 1, j);\n    }\n\n     /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths };\n            const maxMeasures = this.redistributeViewSpaces(options);\n            maxWidths = maxMeasures.maxWidths;\n            maxHeights = maxMeasures.maxHeights;\n        });\n\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space column wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let rHeights = [];\n        const {\n            matrix,\n            width,\n            maxHeights,\n            maxWidths\n        } = measures;\n        const borderWidth = this.config().unitMeasures.border;\n\n        const mWidth = spaceTakenByRow(matrix[this._lastLevelKey]).width;\n        const cWidths = getDistributedWidth({\n            row: matrix[this._lastLevelKey],\n            width: mWidth,\n            availableWidth: width\n        }, this.config());\n\n        matrix.forEach((row, rIdx) => row.forEach((col, cIdx) => {\n            const oldLogicalSpace = col.getLogicalSpace();\n\n            col.setAvailableSpace(cWidths[cIdx] - borderWidth, oldLogicalSpace.height);\n\n            rHeights[rIdx] = Math.max(rHeights[rIdx] || 0, Math.floor(col.getLogicalSpace().height));\n        }));\n        if (maxHeights.length > 0) {\n            rHeights = rHeights.map((e, i) => Math.max(e, maxHeights[0][i]));\n        }\n        maxHeights.push(rHeights);\n        for (let x = 0; x < maxHeights.length; x++) {\n            maxHeights[x] = rHeights;\n        }\n        maxWidths.push(cWidths);\n        return { maxHeights, maxWidths };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, height, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        const heightDistribution = this.getPriorityDistribution({ height, maxHeights: maxHeights[0] || [] });\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = heightDistribution[rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth - borderWidth, colHeight);\n\n                if (cIdx === 0 && rIdx < breakPointer) {\n                    rowHeights[0][rIdx] = colHeight;\n                    heights[0] = (heights[0] || 0) + colHeight;\n                } else if (cIdx === 0 && rIdx >= breakPointer) {\n                    rowHeights[1][rIdx - breakPointer] = colHeight;\n                    heights[1] = (heights[1] || 0) + colHeight;\n                }\n                if (rIdx === this._lastLevelKey) {\n                    columnWidths[0][cIdx] = colWidth;\n                    columnWidths[1][cIdx] = colWidth;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import {\n    HEIGHT, WIDTH, COLUMN, ROW, HORIZONTAL, VERTICAL, HOLISTIC,\n    MAX_WIDTH_AVAIL_FOR_COL_MATRIX, COLUMN_MATRIX, MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX, ROW_MATRIX, SCROLL\n} from '../enums/constants';\n\n/**\n * Gets measurement for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @return {Object} Logical height/width of the matrix\n */\nexport function getMatrixMeasurement (matrix, type) {\n    if (matrix) {\n        return matrix.getLogicalSpace()[type];\n    }\n    return 0;\n}\n\n/**\n * Sets available space for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @param {number} value Value of measurement\n */\nexport function setMatrixMeasurement (matrix, type, value) {\n    if (matrix) {\n        const spaces = matrix.getLogicalSpace();\n        if (value && spaces[type] !== value) {\n            type === HEIGHT ? matrix.setAvailableSpace(spaces.width, value) :\n                matrix.setAvailableSpace(value, spaces.height);\n        }\n    }\n}\n\nconst setAvailableSpace = (matrix, widths, heights) => {\n    matrix.forEach((row, rIdx) => {\n        row.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(widths[cIdx], heights[rIdx]);\n        });\n    });\n};\n\nconst setViewSpaces = (layout, pointerType, viewSpaces) => {\n    let pointer = layout.config()[`${pointerType}Pointer`];\n    if (viewSpaces.length - 1 < pointer) {\n        pointer = 0;\n        layout.config({ [`${pointerType}Pointer`]: pointer });\n    }\n    return pointer;\n};\n\nconst paginationDetailsMap = {\n    column: {\n        maxMeasure: MAX_WIDTH_AVAIL_FOR_COL_MATRIX,\n        matrix: COLUMN_MATRIX,\n        measureType: WIDTH,\n        scrollType: HORIZONTAL\n    },\n    row: {\n        maxMeasure: MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX,\n        matrix: ROW_MATRIX,\n        measureType: HEIGHT,\n        scrollType: VERTICAL\n    }\n};\n\n/**\n * This method provides the required width/height in the different pagination stages.\n * If the pagination is holistic, then only the max width/height will be provided for layouting\n * If scroll is enabled, then the entire width/height shall be provided for layouting\n * Note: width is required for scrolling the columns while height is required for scrolling rows\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {Object} measureDetails different measure details for row/column\n * @param {number} maxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst getMatrixMeasureForPagination = (layout, measureDetails, maxMeasure, buffer) => {\n    const {\n        pagination\n    } = layout.config();\n    const {\n        matrix,\n        measureType,\n        scrollType\n    } = measureDetails;\n\n    switch (pagination) {\n    case HOLISTIC:\n        return maxMeasure;\n    default: {\n        const actualMeasure = getMatrixMeasurement(layout[matrix](), measureType) + buffer;\n\n        if (actualMeasure > maxMeasure) {\n            layout.scrollInfo({ [scrollType]: true });\n        }\n        return Math.max(maxMeasure, actualMeasure);\n    }\n    }\n};\n\n/**\n * This method uses the getMatrixMeasureForPagination function to calculate maximum measure\n * depending on the layouting algorithm used\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {string} matrixType row/column\n * @param {number} relatedMaxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst paginationMeasureGetter = (layout, matrixType, relatedMaxMeasure, buffer) =>\n    getMatrixMeasureForPagination(layout, paginationDetailsMap[matrixType], relatedMaxMeasure, buffer);\n\nconst getMatrixWidthDetails = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const {\n        width\n    } = layout.measurement();\n    const {\n        border,\n        buffer\n    } = layout.config();\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get width of row matrix\n    const rowMatrixWidth = getMatrixMeasurement(rowMatrix, WIDTH);\n\n    // Get maximum width allowed for the row matrix\n    const maxRowMatrixWidth = Math.min(rowMatrixWidth + buffer, width / 2);\n\n    // Get maximum width available for the column matrix\n    const maxWidthAvailableForColumnMatrix = width - maxRowMatrixWidth - borderWidth;\n\n    // Set width for column matrix\n    const columnMatrixWidth = paginationMeasureGetter(layout, COLUMN, maxWidthAvailableForColumnMatrix, 0);\n\n    return {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n\nconst getHeightRequiredByColMatrix = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const columnMatrix = layout.columnMatrix();\n\n    // Get maximum allowed height for colum matrix\n    const maxColumnMatrixHeight = Math.min(columnMatrix.getLogicalSpace().height, height / 2);\n\n    // Set the computed width and max height to column matrix to determine the actual height\n    // that will be taken by the column matrix\n    columnMatrix.setAvailableSpace(columnMatrixWidth, maxColumnMatrixHeight);\n\n    // Get the set of pages column view\n    const columnViewPages = columnMatrix.getViewableSpaces();\n\n    // Figuring out total space needed by current view space\n    const columnViewSpace = columnViewPages[layout.config().columnPointer];\n\n    // Getting height of column matrix\n    const columnMatrixHeight = columnViewSpace.height.primary + columnViewSpace.height.secondary;\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight\n    };\n};\n\nconst getMatrixHeightDetails = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const {\n        buffer\n    } = layout.config();\n\n    // Get actual height required by column matrix\n    const { columnMatrixHeight, maxColumnMatrixHeight } = getHeightRequiredByColMatrix(layout, columnMatrixWidth);\n\n    // Based on column height, compute max height available for row matrix\n    const maxHeightAvailableForRowMatrix = height - Math.min(maxColumnMatrixHeight, columnMatrixHeight);\n\n    // Get height for row matrix\n    const rowMatrixHeight = paginationMeasureGetter(layout, ROW, maxHeightAvailableForRowMatrix, buffer);\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    };\n};\n\nconst setValueMatrixMeasurements = (layout, rowViewableSpaces, columnViewableSpaces) => {\n    const centerMatrix = layout.centerMatrix();\n\n    const {\n        border\n    } = layout.config();\n    const matrices = layout.matrices();\n    const {\n        top,\n        bottom\n    } = matrices;\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get the heights for each cell in the row matrix\n    const rowHeights = [].concat(...rowViewableSpaces.map(e => e.rowHeights.primary));\n\n    // Get the widths for each of the row matrix cells(primary and secondary)\n    const rowWidthsPrimary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.primary));\n    const rowWidthsSecondary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.secondary));\n\n    // Get the widths for each cell in the column matrix\n    const columnWidths = [].concat(...columnViewableSpaces.map(e => e.columnWidths.primary));\n\n    // Get the widths for each of the column matrix cells(primary and secondary)\n    const columnHeightsPrimary = columnViewableSpaces[0].rowHeights.primary;\n    const columnHeightsSecondary = [].concat(...columnViewableSpaces.map(e => e.rowHeights.secondary));\n\n    // Setting the available space for each cell in the centre matrix computed throught the row and\n    // column matrices\n    centerMatrix.forEach((matrix, rIdx) => {\n        matrix.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(columnWidths[cIdx] - borderWidth, rowHeights[rIdx] - borderWidth);\n        });\n    });\n\n    // Set the heights and widths for the corner matrices namely:\n    // TOP_LEFT\n    setAvailableSpace(top[0], rowWidthsPrimary, columnHeightsPrimary);\n    // TOP_RIGHT\n    setAvailableSpace(top[2], rowWidthsSecondary, columnHeightsPrimary);\n    // BOTTOM_LEFT\n    setAvailableSpace(bottom[0], rowWidthsPrimary, columnHeightsSecondary);\n     // BOTTOM_RIGHT\n    setAvailableSpace(bottom[2], rowWidthsSecondary, columnHeightsSecondary);\n};\n\nconst bufferCondition = {\n    isScroll: true,\n    pagination: SCROLL\n};\n\nconst getBufferFromCondition = (layout, type) => {\n    const scrollInfo = layout.scrollInfo();\n    const {\n        pagination\n    } = layout.config();\n\n    const currentBufferType = {\n        pagination,\n        isScroll: scrollInfo[type]\n    };\n\n    return Object.keys(bufferCondition).every(e => bufferCondition[e] === currentBufferType[e]);\n};\n\nconst getActualBufferFromConfig = (layout) => {\n    const {\n        buffer\n    } = layout.config();\n    const [horizontalBuffer, verticalBuffer] = [HORIZONTAL, VERTICAL].map((type) => {\n        if (getBufferFromCondition(layout, type)) {\n            return buffer;\n        }\n        return 0;\n    });\n\n    return {\n        horizontalBuffer,\n        verticalBuffer\n    };\n};\n/**\n * Computes the measurements of space for all matrices in the\n * layout\n *\n * @param {Object} layout Instance of grid layout\n * @return {Object} set of measurements for the layout\n */\nexport const computeLayoutMeasurements = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n\n    // Compute the widths of the row and column matrices\n    const {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        maxWidthAvailableForColumnMatrix,\n        columnMatrixWidth\n    } = getMatrixWidthDetails(layout);\n\n    // Compute the heights of the row and column matrices\n    const {\n        columnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    } = getMatrixHeightDetails(layout, columnMatrixWidth);\n\n    const {\n        horizontalBuffer,\n        verticalBuffer\n    } = getActualBufferFromConfig(layout);\n    rowMatrix.setAvailableSpace(maxRowMatrixWidth - verticalBuffer, rowMatrixHeight - horizontalBuffer);\n\n    // Get row and columns viewable spaces\n    const rowViewableSpaces = rowMatrix.getViewableSpaces();\n    const columnViewableSpaces = columnMatrix.getViewableSpaces();\n\n    // Set view spaces for row and columns\n    setViewSpaces(layout, ROW, rowViewableSpaces);\n    setViewSpaces(layout, COLUMN, columnViewableSpaces);\n\n    // Set measures for each cell of the value matrix\n    setValueMatrixMeasurements(layout, rowViewableSpaces, columnViewableSpaces);\n\n    return {\n        rowMatrixHeight: rowMatrixHeight - horizontalBuffer,\n        rowMatrixWidth: rowMatrixWidth - verticalBuffer,\n        maxHeightAvailableForRowMatrix: maxHeightAvailableForRowMatrix - horizontalBuffer,\n\n        columnMatrixHeight,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n","/**\n * Gets view matrices based on current pointers for row and column\n *\n * @param {Object} layout instance of layout\n * @param {number} rowPointer current row pointer\n * @param {number} columnPointer current column pointer\n * @return {Object} returns the view matrix and its relevant information\n */\nexport const getViewMatrices = (layout, rowPointer, columnPointer) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const centerMatrix = layout.centerMatrix();\n    const matrices = layout.matrices();\n    const rowMatrices = rowMatrix.getViewableMatrices();\n    const columnMatrices = columnMatrix.getViewableMatrices();\n    const centralMatrixPointer = {\n        row: 0,\n        column: 0\n    };\n\n    for (let i = rowPointer - 1; i >= 0; i--) {\n        const length = Math.max(rowMatrices[i].primaryMatrix.length,\n            rowMatrices[i].secondaryMatrix.length);\n        centralMatrixPointer.row += length;\n    }\n     /* istanbul ignore next */\n    for (let i = columnPointer - 1; i >= 0; i--) {\n        const matrix = columnMatrices[i];\n        const { primaryMatrix, secondaryMatrix } = matrix;\n        const length = Math.max(primaryMatrix[0] ? primaryMatrix[0].length : 0,\n            secondaryMatrix[0] ? secondaryMatrix[0].length : 0);\n        centralMatrixPointer.column += length;\n    }\n\n    matrices.top[1] = columnMatrices[columnPointer].primaryMatrix;\n    matrices.bottom[1] = columnMatrices[columnPointer].secondaryMatrix;\n\n    matrices.center[0] = rowMatrices[rowPointer].primaryMatrix;\n    matrices.center[2] = rowMatrices[rowPointer].secondaryMatrix;\n\n    const rowMatrixLen = Math.max(matrices.center[0].length, matrices.center[2].length);\n     /* istanbul ignore next */\n    const columnMatrixLen = Math.max(matrices.top[1][0] ? matrices.top[1][0].length : 0, matrices.bottom[1][0] ?\n            matrices.bottom[1][0].length : 0);\n    matrices.center[1] = centerMatrix.slice(centralMatrixPointer.row, centralMatrixPointer.row + rowMatrixLen)\n        .map(matrix => matrix.slice(centralMatrixPointer.column, centralMatrixPointer.column + columnMatrixLen));\n\n    return {\n        matrices,\n        rowPages: rowMatrices.length,\n        columnPages: columnMatrices.length\n    };\n};\n\nconst measureSum = measureArr => measureArr.reduce((total, measure) => total + measure, 0);\n/**\n * Returns measurements of the cells of the current matrix\n *\n * @param {Object} layout instance of layout\n * @return {Object} returns the measurements for current view matrix\n */\nexport const getViewMeasurements = (layout, maxRowHeight, maxColWidth) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const {\n        columnPointer,\n        rowPointer\n    } = layout.config();\n\n    const rowSpaces = rowMatrix.getViewableSpaces()[rowPointer];\n    const colSpaces = columnMatrix.getViewableSpaces()[columnPointer];\n\n    const {\n        rowHeights,\n        width: rowMatrixWidth\n    } = rowSpaces;\n    const {\n        columnWidths,\n        height: columnMatrixHeight\n    } = colSpaces;\n\n    const { primary: leftWidth, secondary: rightWidth } = rowMatrixWidth;\n    const { primary: topHeight, secondary: bottomHeight } = columnMatrixHeight;\n\n    const centerHeight = measureSum(rowHeights.primary);\n    const centerWidth = measureSum(columnWidths.primary);\n    const viewWidth = [leftWidth, Math.min(centerWidth, maxColWidth), rightWidth];\n    const viewHeight = [topHeight, Math.min(centerHeight, maxRowHeight), bottomHeight];\n\n    return {\n        viewWidth,\n        viewHeight,\n        actualCenterMeasures: {\n            height: centerHeight,\n            width: centerWidth\n        },\n        totalMeasures: {\n            width: measureSum(viewWidth),\n            height: measureSum(viewHeight)\n        },\n        unitHeights: rowHeights,\n        unitWidths: columnWidths\n    };\n};\n","/**\n * This file declares a table that can be extended to create a Datagrid, crosstab\n * and man other visualzations that require a tabular structure.\n */\n\nimport { getUniqueId, mergeRecursive } from 'muze-utils';\nimport GenericLayout from '../generic-layout';\nimport { DEFAULT_CONFIGURATION, DEFAULT_MEASUREMENTS } from './defaults';\nimport { generateVisualMatrices } from './layout-helper';\nimport { computeLayoutMeasurements } from './computations';\nimport { getViewMeasurements, getViewMatrices } from './view-info-getter';\n/**\n * This class is used to create a tabular structure that\n * can house charts and values.\n *\n * @class GridLayout\n */\nexport default class GridLayout extends GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} matrices Set of upto 9 matrices containing the cells to be rendered\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config external configurations.\n     * @memberof GenericLayout\n     */\n    constructor (matrices, mountPoint, measurement, config) {\n        super(mountPoint, measurement, config);\n        this.matrices(matrices);\n        this.config(this.constructor.defaultConfig());\n        this._layoutId = getUniqueId();\n        this._scrollInfo = { horizontal: false, vertical: false };\n    }\n\n    static defaultViewInfo () {\n        return Object.assign({}, {\n            layoutDimensions: {\n                border: this.defaultConfig().border,\n                viewHeight: [0, 0, 0],\n                viewWidth: [0, 0, 0]\n            },\n            viewMatricesInfo: {\n                columnPages: 0,\n                rowPages: 0,\n                matrices: { top: [], center: [], bottom: [] }\n            }\n        });\n    }\n\n    /**\n     * Returns initial set of measurements for the grid layout\n     *\n     * @static\n     * @return {Object} Returns initial set of measurements\n     * @memberof GridLayout\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENTS;\n    }\n\n    /**\n     * Returns initialconfiguration for grid layout\n     *\n     * @static\n     * @return {Object} Returns initial configuration for grid layout\n     * @memberof GridLayout\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIGURATION;\n    }\n\n    /**\n     * This function is used to return an instance of GridLayout\n     *\n     * @return {GridLayout} Instance of grid layout.\n     * @static\n     * @memberof GridLayout\n     */\n    static create () {\n        return new GridLayout(null, null, this.defaultMeasurement(), this.defaultConfig());\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     *\n     * @param {Array} matrices Set of matrices\n     * @return {Object} Getter/Setter\n     * @memberof GridLayout\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = generateVisualMatrices(this, matrices);\n            return this;\n        }\n        return super.matrices(matrices);\n    }\n\n    /**\n     * Triggers the computations for the layout based on the matrices available\n     * This causes a reflow in the entire layout system.\n     *\n     * @return {Object} Layout instance\n     * @memberof GridLayout\n     */\n    triggerReflow () {\n        this.scrollInfo({ horizontal: false, vertical: false });\n        const {\n            maxHeightAvailableForRowMatrix,\n            maxWidthAvailableForColumnMatrix\n        } = computeLayoutMeasurements(this);\n\n        this.setViewInformation(maxHeightAvailableForRowMatrix, maxWidthAvailableForColumnMatrix);\n        return this;\n    }\n\n    gotoPage (type, pageNumber) {\n        const pageType = type.toLowerCase();\n        const { viewMatricesInfo } = this.viewInfo();\n        const totalPages = viewMatricesInfo[`${pageType}Pages`];\n        const pointer = Math.min(Math.max(1, pageNumber), totalPages);\n        this.config({\n            [`${pageType}Pointer`]: pointer - 1\n        });\n        this.setViewInformation();\n        this.renderGrid();\n        return this;\n    }\n\n    pages (type) {\n        const { viewMatricesInfo } = this.viewInfo();\n        const pageType = type.toLowerCase();\n        return {\n            totalPages: viewMatricesInfo[`${pageType}Pages`],\n            currentPage: this.config()[`${pageType}Pointer`] + 1\n        };\n    }\n\n    viewInfo (...viewInfo) {\n        if (viewInfo.length) {\n            this._viewInfo = viewInfo[0];\n            return this;\n        }\n        return this._viewInfo;\n    }\n\n    scrollInfo (...scrollInfo) {\n        if (scrollInfo.length) {\n            this._scrollInfo = mergeRecursive(this._scrollInfo, scrollInfo[0]);\n            return this;\n        }\n        return this._scrollInfo;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof GridLayout\n     */\n    setViewInformation (maxRowHeight, maxColWidth) {\n        const {\n            rowPointer,\n            columnPointer,\n            border\n        } = this.config();\n        const viewMatricesInfo = getViewMatrices(this, rowPointer, columnPointer);\n        const layoutDimensions = getViewMeasurements(this, maxRowHeight, maxColWidth);\n        layoutDimensions.border = border;\n        this.viewInfo({\n            viewMatricesInfo,\n            layoutDimensions\n        });\n        return this;\n    }\n}\n","import RowMatrix from '../visual-matrix/row-matrix';\nimport ColumnMatrix from '../visual-matrix/column-matrix';\n\nexport const generateVisualMatrices = (context, matrices) => {\n    // Set of matrices for layout is generated starting with the left matrix\n    let leftMatrix = [];\n    let rightMatrix = [];\n    let topMatrix = [];\n    let bottomMatrix = [];\n    let begColCells;\n    let endColCells;\n    const {\n        isRowSizeEqual,\n        isColumnSizeEqual,\n        gutterSpace,\n        distribution,\n        border,\n        breakPage,\n        priority\n    } = context.config();\n    const {\n        minUnitHeight,\n        minUnitWidth\n    } = context.measurement();\n    const { top, center, bottom } = matrices;\n    const [topLeft, topColumns, topRight] = top;\n    const [leftRows, valueMatrix, rightRows] = center;\n    const [bottomLeft, bottomColumns, bottomRight] = bottom;\n\n    if (leftRows.length > 0) {\n        // If no left matrix is present, context will be empty\n        leftMatrix = [...topLeft, ...leftRows, ...bottomLeft];\n    }\n    if (rightRows.length > 0) {\n        // If no right matrix is present, context will be empty\n        rightMatrix = [...topRight, ...rightRows, ...bottomRight];\n    }\n    if (topColumns.length > 0 && topColumns[0].length > 0) {\n        // If no top matrix is present, context will be empty\n        topMatrix = topColumns.map((d, i) => [...topLeft[i], ...d, ...topRight[i]]);\n    }\n    if (bottomColumns.length > 0 && bottomColumns[0].length > 0) {\n        // If no bottom matrix is present, context will be empty\n        bottomMatrix = bottomColumns.map((d, i) => [...bottomLeft[i], ...d, ...bottomRight[i]]);\n    }\n\n    context.rowMatrix(new RowMatrix([leftMatrix, rightMatrix], {\n        isDistributionEqual: isRowSizeEqual,\n        distribution: distribution.rows,\n        gutter: gutterSpace.rows,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.row,\n        breakPage: breakPage.rows.map(e => e + Math.max(topLeft.length, topRight.length)),\n        extraCellLengths: [topLeft.length, bottomLeft.length]\n    }));\n\n    if (topLeft.length > 0) {\n        begColCells = topLeft[0].length;\n    } else {\n        begColCells = bottomLeft.length > 0 ? bottomLeft[0].length : 0;\n    }\n\n    if (topRight.length > 0) {\n        endColCells = topRight[0].length;\n    } else {\n        endColCells = bottomRight.length > 0 ? bottomRight[0].length : 0;\n    }\n\n    context.columnMatrix(new ColumnMatrix([topMatrix, bottomMatrix], {\n        isDistributionEqual: isColumnSizeEqual,\n        distribution: distribution.columns,\n        gutter: gutterSpace.columns,\n        isTransposed: true,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.col,\n        breakPage: breakPage.columns,\n        extraCellLengths: [begColCells, endColCells]\n    }));\n    context.centerMatrix(valueMatrix);\n\n    return matrices;\n};\n","import {\n    TOP, BOTTOM, LEFT, RIGHT, CENTER, BLANK_BORDERS, COLUMN, ROW,\n    VIEW_INDEX, ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, MIDDLE, NO_BORDERS\n} from '../enums/constants';\n\nconst borderMap = {\n    [`${TOP}-${LEFT}`]: NO_BORDERS,\n    [`${TOP}-${MIDDLE}`]: COLUMN,\n    [`${TOP}-${RIGHT}`]: NO_BORDERS,\n    [`${CENTER}-${LEFT}`]: ROW,\n    [`${CENTER}-${MIDDLE}`]: CENTER,\n    [`${CENTER}-${RIGHT}`]: ROW,\n    [`${BOTTOM}-${LEFT}`]: NO_BORDERS,\n    [`${BOTTOM}-${MIDDLE}`]: COLUMN,\n    [`${BOTTOM}-${RIGHT}`]: NO_BORDERS\n};\n\nconst applySpecificBorder = (cells, color, type, style) => {\n    cells.style(`border-${type}`, `${style} ${color}`);\n};\n\nconst specificBorderApplier = (borderTypes, showBorders, cells, borderInfo) => {\n    const {\n        color,\n        width,\n        style\n    } = borderInfo;\n    const borderStyle = `${width}px ${style}`;\n\n    borderTypes.forEach((borderType) => {\n        applySpecificBorder(cells, showBorders[borderType] ? color : BLANK_BORDERS, borderType, borderStyle);\n    });\n};\n\nconst borderApplier = (cells, borderInfo) => {\n    const {\n       showRowBorders,\n      showColBorders,\n      showValueBorders\n  } = borderInfo;\n    return {\n        row: () => specificBorderApplier([TOP, BOTTOM], showRowBorders, cells, borderInfo),\n        column: () => specificBorderApplier([LEFT, RIGHT], showColBorders, cells, borderInfo),\n        center: () => specificBorderApplier([LEFT, RIGHT, TOP, BOTTOM], showValueBorders, cells, borderInfo)\n    };\n};\n\nexport const applyBorders = (cells, border, row, column) => {\n    const borderApplierFn = borderApplier(cells, border);\n    const borderMapVal = borderMap[`${ROW_MATRIX_INDEX[VIEW_INDEX[row]]}-${COLUMN_MATRIX_INDEX[column]}`];\n    if (borderMapVal) {\n        borderApplierFn[borderMapVal]();\n    }\n};\n","import { selectElement } from 'muze-utils';\nimport {\n     TOP, BOTTOM, ROW_SPAN, COL_SPAN, CENTER, ROW, COLUMN\n} from '../enums/constants';\n\nconst orderMaker = arr => Array.from(Array(arr.length).keys());\n\nconst nestByStack = (stack, updateArr, optionalParams = {}) => {\n    let {\n        order,\n        keyFn\n    } = optionalParams;\n    const arr = updateArr.slice();\n    const currStack = stack.slice();\n    const prevStack = currStack.slice();\n    // Order in which element are to be checked for nesting, default normal looping\n    // Order is always in the order of nest, i.e., left to right\n    order = order || Array.from(Array(arr.length).keys());\n\n    // Key function, if array of objects\n    keyFn = keyFn || (v => v);\n\n    // Return same array if stack is empty\n    if (currStack.length === 0) {\n        const newArr = [];\n        order.forEach((e) => {\n            newArr.push(arr[e]);\n        });\n        return { prevStack, currStack: arr, arr: newArr };\n    }\n\n    let arrVal = '';\n    let stackVal = '';\n    const newArr = [];\n\n    // Loop in order\n    for (let i = order.length - 1; i >= 0; i--) {\n        // Get current element index from the order given\n        const currElemIndex = order[i];\n\n        // Crete a hashmap for the hierarchy by joining strings of the array for both stack and input array\n        arrVal += keyFn(arr[currElemIndex]);\n        stackVal += keyFn(currStack[currElemIndex]);\n\n        // If the current value and value in stack is same, convert it to null\n        if (arrVal === stackVal) {\n            newArr[currElemIndex] = null;\n        } else {\n            stackVal = '';\n            // Loop from the current index in order to the last element in order to change the\n            // whole hierarchy\n            for (let j = i; j < order.length; j++) {\n                const newElem = order[j];\n                const arrElem = arr[newElem];\n\n                newArr[newElem] = arrElem;\n\n                // Reset stack to new stack\n                currStack[newElem] = arrElem;\n                stackVal = arrVal;\n            }\n        }\n    }\n    const returnArr = [];\n    order.forEach((e) => {\n        returnArr.push(newArr[e]);\n    });\n    return { prevStack, currStack, arr: returnArr };\n};\n\nconst spanCalculator = (colData, colIdx, matrix, rIdx) => {\n    // if data is not header cell then rowspan\n    // has to be 1\n    if (!colData) {\n        return () => null;\n    }\n\n    const conditions = {\n        row: count => matrix[rIdx + count] && matrix[rIdx + count][colIdx],\n        column: count => matrix[rIdx][colIdx + count]\n    };\n\n    return (type) => {\n        let count = 1;\n        let isNull = false;\n\n        while (!isNull) {\n            if (conditions[type](count) === null) {\n                count += 1;\n            } else {\n                isNull = true;\n            }\n        }\n        return count;\n    };\n};\n\nconst maskCreator = (matrix, order) => ({\n    row: () => {\n        let stack = [];\n        return matrix.map((e) => {\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, e, { keyFn: val => val.valueOf(), order });\n\n            stack = currStack;\n            return arr;\n        });\n    },\n    column: () => {\n        let stack = [];\n        const viewMatrix = [];\n        matrix.length && matrix[0].forEach((cell, colIndex) => {\n            const hierarchy = [];\n            matrix.forEach((row) => {\n                hierarchy.push(row[colIndex]);\n            });\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, hierarchy, { keyFn: val => val.valueOf(), order });\n            stack = currStack;\n\n            matrix.forEach((row, rowIndex) => {\n                viewMatrix[rowIndex] = viewMatrix[rowIndex] || [];\n                viewMatrix[rowIndex][colIndex] = arr[rowIndex];\n            });\n        });\n        return viewMatrix;\n    }\n});\n\nconst spanGenerator = viewMatrix => ({\n    row: () => {\n        const spans = [];\n        viewMatrix.forEach((row, ridx) => {\n            spans[ridx] = spans[ridx] || [];\n            row.forEach((col, i) => {\n                if (viewMatrix[ridx][i]) {\n                    const currSpan = spanCalculator(col, i, viewMatrix, ridx)('row');\n                    currSpan && spans[ridx].push(currSpan);\n                }\n            });\n        });\n        return spans;\n    },\n    column: () => viewMatrix.map((row, ridx) => row.map((col, i) => spanCalculator(col, i, viewMatrix, ridx)('column'))\n                    .filter(col => col !== null))\n});\n\nconst getOrder = () => ({\n    row: matrix => orderMaker(matrix[0]),\n    column: matrix => orderMaker(matrix)\n});\n\nconst matrixSpanGeneratorMap = {\n    [`${TOP}-1`]: {\n        orderGetter: getOrder()[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${BOTTOM}-1`]: {\n        orderGetter: getOrder()[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${CENTER}-0`]: {\n        orderGetter: getOrder()[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    },\n    [`${CENTER}-2`]: {\n        orderGetter: getOrder()[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    }\n};\n\nconst matrixSpanGenerator = (type) => {\n    const generator = matrixSpanGeneratorMap[type];\n    if (generator) {\n        return generator;\n    }\n    return {\n        orderGetter: () => null,\n        viewMatrixMaker: matrix => () => matrix,\n        spanMaker: () => () => null\n    };\n};\n\n/**\n * This function is used to set the col and row spans\n * for the matrices based on repeated/hierarchichal data\n *\n * @export\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {string} type Type of array (center, top, bottom)\n * @param {number} index Index of array in the row\n * @return {Object} containing the view matrix and their spans\n */\nexport function cellSpanMaker (matrix, type, index) {\n    let spans = null;\n    let viewMatrix = matrix;\n    const {\n        orderGetter,\n        viewMatrixMaker,\n        spanMaker\n    } = matrixSpanGenerator(`${type}-${index}`);\n\n    if (matrix.length) {\n        const order = orderGetter(matrix);\n        viewMatrix = viewMatrixMaker(matrix, order)();\n        spans = spanMaker(viewMatrix)();\n    }\n    return { viewMatrix, spans };\n}\n\nconst spaceAllocationDueToSpan = (span = 1, placeholder, config, index) => {\n    const height = placeholder.availHeight();\n    const width = placeholder.availWidth();\n    const borderWidth = config.border.width;\n    const { unitWidths } = config.dimensions;\n    const { col } = index;\n\n    return {\n        [ROW_SPAN] () {\n            placeholder.setAvailableSpace(width, height * span);\n            if (span === 1) {\n                selectElement(this).style('height', `${height * span + borderWidth}px`);\n            }\n        },\n        [COL_SPAN] () {\n            const primaryUnitWidth = unitWidths.primary[col];\n            if (span > 1) {\n                let cumulativeWidth = 0;\n                for (let i = col; i < col + span; i++) {\n                    cumulativeWidth += unitWidths.primary[i] - borderWidth;\n                }\n                placeholder.setAvailableSpace(cumulativeWidth + borderWidth, height);\n            } else if (primaryUnitWidth) {\n                placeholder.setAvailableSpace(primaryUnitWidth - borderWidth, height);\n            }\n            selectElement(this).style('height', `${height}px`);\n        }\n    };\n};\n\nconst spanApplier = (cells, spans, config, type) => {\n    let cellCounter = 0;\n    cells.attr(type, function (cell, colIndex) {\n        if (colIndex === 0) {\n            cellCounter = 0;\n        }\n        const span = spans[cell.rowIndex][colIndex];\n        const placeholder = cell.placeholder;\n        const index = {\n            row: cell.rowIndex,\n            col: cellCounter\n        };\n\n        spaceAllocationDueToSpan(span, placeholder, config, index)[type].bind(this)();\n        cellCounter += span;\n        return span;\n    });\n};\n\nconst spanApplierMap = {\n    [`${TOP}-0`]: null,\n    [`${TOP}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${TOP}-2`]: null,\n    [`${CENTER}-0`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${CENTER}-1`]: null,\n    [`${CENTER}-2`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${BOTTOM}-0`]: null,\n    [`${BOTTOM}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${BOTTOM}-2`]: null\n};\n\nexport const applySpans = (cells, spans, config, type) => {\n    const applier = spanApplierMap[type];\n    if (applier) {\n        applier(cells, spans, config);\n    }\n};\n","import { ERROR_MSG } from 'muze-utils';\n/**\n * An Interface to be implemented if the transaction support is necessary. This class ensures reactivity to\n * global properties.\n */\nexport default class TransactionSupport {\n    /**\n     * Property accessor for data member of the class. Data is passed to the system by calling this method.\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for width of the class. Width is passed as an integer.\n     */\n    width () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for height of the class. Height is passed as an integer.\n     */\n    height () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for config of the class. Config is passed as an object.\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n}\n","import { TOP, BOTTOM, LEFT, TITLE, SUB_TITLE, GROUP, LAYOUT, LEGEND } from '../constants';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const arrangeComponents = (context) => {\n    const legendConfig = context.config().legend;\n    const titleConfig = context.title()[1];\n    const subtitleConfig = context.subtitle()[1];\n    const titleLayouts = {\n        [`${TOP}-${TOP}`]: [TITLE, SUB_TITLE, GROUP],\n        [`${BOTTOM}-${BOTTOM}`]: [GROUP, SUB_TITLE, TITLE],\n        [`${TOP}-${BOTTOM}`]: [TITLE, GROUP, SUB_TITLE],\n        [`${BOTTOM}-${TOP}`]: [SUB_TITLE, GROUP, TITLE]\n    };\n    const legendLayouts = [\n        [LEGEND, LAYOUT],\n        [LAYOUT, LEGEND]\n    ];\n    const titlePosition = titleConfig.position || TOP;\n    const subtitlePosition = subtitleConfig.position || TOP;\n\n    return {\n        headers: titleLayouts[`${titlePosition}-${subtitlePosition}`],\n        legends: legendConfig.position === LEFT || legendConfig.position === TOP ?\n        legendLayouts[0] : legendLayouts[1]\n    };\n};\n","/**\n * Flag to specify whether direction is vertical.\n */\nexport const MARGIN = 'margin';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const SPACE_FIXER = 'spaceFixer';\nexport const CLASSPREFIX = 'muze';\nexport const VERTICAL_ALIGN = 'verticalAlign';\nexport const TEXT_ALIGN = 'textAlign';\nexport const IS_OFFSET = 'isOffset';\nexport const MIDDLE = 'middle';\nexport const BASELINE = 'baseline';\nexport const SHOW = 'show';\nexport const CENTER = 'center';\nexport const TEXT = 'text';\nexport const HEADER = 'header';\nexport const HEIGHT = 'height';\nexport const WIDTH = 'width';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const FIELDS = 'fields';\nexport const TRANSFORM = 'transform';\nexport const LAYER_DEF = 'layerDef';\nexport const CONFIG = 'config';\nexport const DETAIL_FIELDS = 'detailFields';\nexport const MAX_LINES = 'maxLines';\nexport const MIN_CHARS = 'minCharacters';\nexport const ROTATION = 'rotation';\n\nexport const TEXT_CELL = 'text-cell';\nexport const AXIS_CELL = 'axis-cell';\nexport const GEOM_CELL = 'geom-cell';\nexport const BLANK_CELL = 'blank-cell';\n","// eneum to refer to simple cell\nexport const SIMPLE = 'simple';\n// eneum to refer to header cell\nexport const TEXT = 'text';\n// enum to refer to axis cell\nexport const AXIS = 'axis';\n// enum to refer to visual cell\nexport const GEOM = 'geom';\n// enum to refer blank cell\nexport const BLANK = 'blank';\n","import {\n    ERROR_MSG,\n    getUniqueId,\n    mergeRecursive\n} from 'muze-utils';\nimport { SIMPLE } from './enums/cell-type';\n\n/**\n * This file declares a class that is used as an interface to create new\n * SimpleCell elements.\n * @module SimpleCell\n */\n/**\n * Base class for all table cells.\n *\n * @interface\n * @class SimpleCell\n */\nclass SimpleCell {\n\n    /**\n     * Creates an instance of SimpleCell.\n     *\n     * @param {*} config The input configuration.\n     * @memberof SimpleCell\n     */\n    constructor (config) {\n        this._id = getUniqueId();\n\n        const defConfig = mergeRecursive({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(defConfig, config || {});\n\n        this._mount = null;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     */\n    get type () {\n        return SIMPLE;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     * @return {Object} Default config for the placeholder\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the value contained by the SimpleCell.\n     *\n     * @memberof SimpleCell\n     */\n    valueOf () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a unique identifier for the instance used\n     * to control selective rendering.\n     *\n     * @memberof SimpleCell\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized representation of the instance.\n     *\n     * @memberof SimpleCell\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns an object with width and height fields\n     * specifying the space taken up by this metod.\n     *\n     * @memberof SimpleCell\n     */\n    getLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Method used to set the space available to render the SimpleCell\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @memberof SimpleCell\n     */\n    setAvailableSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    remove () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getMinMeasures (providedMinMeasure = 0) {\n        return providedMinMeasure;\n    }\n\n}\n\nexport default SimpleCell;\n","/**\n * This file exports variables that are used as defaults for\n * the placeholders\n */\nimport * as CONSTANTS from './constants';\n\n /**\n * Default Configuration for the cells\n * @return {Object} Default configuration\n */\nexport const DEFAULT_CONFIG = {\n    [CONSTANTS.MARGIN]: {\n        [CONSTANTS.LEFT]: 0,\n        [CONSTANTS.RIGHT]: 0,\n        [CONSTANTS.TOP]: 0,\n        [CONSTANTS.BOTTOM]: 0\n    },\n    [CONSTANTS.SPACE_FIXER]: 2,\n    [CONSTANTS.IS_OFFSET]: false,\n    [CONSTANTS.VERTICAL_ALIGN]: null,\n    [CONSTANTS.TEXT_ALIGN]: CONSTANTS.CENTER,\n    [CONSTANTS.SHOW]: true,\n    [CONSTANTS.MAX_LINES]: 0,\n    [CONSTANTS.MIN_CHARS]: 0,\n    [CONSTANTS.ROTATION]: null\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { GEOM, TEXT, AXIS, BLANK } from './enums/cell-type';\n\nconst DEFAULT_PROPS = {\n    mount: {},\n    availHeight: {},\n    availWidth: {},\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config, value)\n    },\n    logicalSpace: {},\n    minSpacing: {},\n    source: {}\n};\n\nconst geomProps = {\n    data: {},\n    caption: {},\n    config: {},\n    axes: {},\n    facetByFields: {},\n    fields: {},\n    transform: {},\n    layerDef: {},\n    detailFields: {}\n};\n\nconst textProps = {\n    smartText: {}\n};\nexport const PROPS = {\n    [GEOM]: mergeRecursive(geomProps, DEFAULT_PROPS),\n    [TEXT]: mergeRecursive(textProps, DEFAULT_PROPS),\n    [AXIS]: DEFAULT_PROPS,\n    [BLANK]: DEFAULT_PROPS\n};\n","/**\n * This file declares a class that represents a table cell\n * used to house an axis.\n * @module VisualCell\n */\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport { CLASSPREFIX, HEIGHT, WIDTH, AXIS_CELL, BOTTOM, TOP } from './enums/constants';\nimport SimpleCell from './simple-cell';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { AXIS } from './enums/cell-type';\nimport { PROPS } from './props';\n\n/**\n * Computes the logical space of the an axis instance within an axis cell\n *\n * @param {Object} context Required to get the needed parameters to compute axis space\n * @return {Object} Returns the logical space for axis\n */\nconst computeAxisSpace = (context) => {\n    let logicalWidth;\n    let logicalHeight;\n    const axis = context.source();\n    const {\n        spaceFixer,\n        margin\n    } = context.config();\n    const {\n        width,\n        height\n    } = axis.getLogicalSpace();\n    const {\n            show\n        } = axis.config();\n    if (show === true) {\n        logicalHeight = Math.floor(height + margin.top + margin.bottom + spaceFixer);\n        logicalWidth = Math.floor(width + margin.left + margin.right + spaceFixer);\n    } else {\n        [logicalWidth, logicalHeight] = [width, height];\n    }\n    return {\n        width: logicalWidth,\n        height: logicalHeight\n    };\n};\n\n/**\n * Represents an axis cell.\n *\n * @class Axis\n */\nclass AxisCell extends SimpleCell {\n\n    /**\n     * Creates an instance of AxisCell.\n     *\n     * @param {Object} config The input config.\n     * @memberof AxisCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._axis = null;\n        this._availHeight = null;\n        this._availWidth = null;\n        this._logicalSpace = null;\n\n        generateGetterSetters(this, PROPS[AXIS]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof AxisCell\n     */\n    get type () {\n        return AXIS;\n    }\n\n    /**\n     * This method return the value conatined by this SimpleCell.\n     *\n     * @return {SimpleAxis | ColorAxis} Instance of SimpleAxis or ColorAxis.\n     * @memberof AxisCell\n     */\n    valueOf () {\n        return this.source().id;\n    }\n\n    /**\n     * This method return the unique identififer of the axis\n     *\n     * @return {string} Id of the axis.\n     * @memberof AxisCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Retrns the serialized representation of this cell.\n     *\n     * @return {Object}Object with serializable props.\n     * @memberof AxisCell\n     */\n    serialize () {\n        return {\n            type: AXIS,\n            axis: this.source().serialize()\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof AxisCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * return the space taken up by an axis element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof AxisCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeAxisSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @return {Instance} Returns current Instance\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        const {\n            margin,\n            isOffset\n        } = this.config();\n\n        if (width || height) {\n            this.source().setAvailableSpace(width, height, margin, isOffset);\n            this.source().logicalSpace(null);\n        } else {\n            this.source().resetLogicalSpace();\n        }\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the axis inside the axis cell.\n     *\n     * @param {HTMLElement} mount The mount point.\n     * @return {Selection} node where axis mounted\n     * @memberof AxisCell\n     */\n    /* istanbul ignore next */render (mount) {\n        if (!mount) {\n            return this;\n        }\n        let actualWidth = 0;\n        let actualHeight = 0;\n        const axis = this.source();\n        const availHeight = this.availHeight();\n        const availWidth = this.availWidth();\n        const {\n            margin\n        } = this.config();\n        const {\n            top,\n            bottom,\n            left,\n            right\n        } = margin;\n        const {\n            show,\n            orientation\n        } = axis.config();\n        const wrapperDiv = makeElement(selectElement(mount), 'div', [this], `${CLASSPREFIX}-${AXIS_CELL}`);\n        const selection = makeElement(wrapperDiv, 'svg', [1], `${CLASSPREFIX}-axis-container`);\n        selection.classed(`${CLASSPREFIX}-axis-container-${orientation}`, true);\n\n        this.mount(mount);\n        if (!availWidth) {\n            selection.attr(WIDTH, `${0}px`);\n        }\n        if (!availHeight) {\n            selection.attr(HEIGHT, `${0}px`);\n        }\n        actualWidth = availWidth;\n        actualHeight = availHeight;\n        if (!show) {\n            actualWidth = (orientation === TOP || orientation === BOTTOM) ? availWidth : 0;\n            actualHeight = (orientation === TOP || orientation === BOTTOM) ? 0 : availHeight;\n        }\n        wrapperDiv.style(WIDTH, `${actualWidth}px`)\n                        .style(HEIGHT, `${actualHeight}px`)\n                        .style('margin-top', top)\n                        .style('margin-bottom', bottom)\n                        .style('margin-left', left)\n                        .style('margin-right', right);\n\n        axis.mount(selection.node());\n        return selection;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Current instance of AxisCell\n     * @memberof AxisCell\n     */\n    remove () {\n        this.source() && this.source().remove();\n        this.mount() && this.mount().remove();\n        return this;\n    }\n}\n\nexport default AxisCell;\n\n","/**\n * This file declares a class that represents a BLANK element in a  table.\n * @module VisualCell\n */\nimport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    generateGetterSetters\n    } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { CLASSPREFIX, BLANK_CELL } from './enums/constants';\nimport { BLANK } from './enums/cell-type';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { PROPS } from './props';\n\n/**\n * Represents a table haeder.\n *\n * @class BLANK\n */\nclass BlankCell extends SimpleCell {\n\n    /**\n     * Creates an instance of BLANK.\n     * @param {Object} config The input configuration.\n     * @memberof BLANK\n     */\n    constructor (config) {\n        super(config);\n\n        generateGetterSetters(this, PROPS[BLANK]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof BlankCell\n     */\n    get type () {\n        return BLANK;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof BlankCell\n     */\n    valueOf () {\n        return this.id;\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof BlankCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the BLANK cell.\n     *\n     * @return {string} The unique identifier for the BLANK.\n     * @memberof BlankCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof BLANK\n     */\n    serialize () {\n        return {\n            type: BLANK\n        };\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof BLANK\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            return {\n                width: this.width || 0,\n                height: this.height || 0\n            };\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the BLANK cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof BLANK\n     */\n    /* istanbul ignore next */render (mount) {\n        if (mount) {\n            const { style } = this.config();\n            // append span element to mount point\n            this.mount(mount);\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id]);\n            elem.classed(`${CLASSPREFIX}-${BLANK_CELL}`, true);\n            elem.style('width', `${this.availWidth()}px`);\n            elem.style('height', `${this.availHeight()}px`);\n            elem.html('');\n            // apply style on the returned element\n            if (style) {\n                applyStyle(elem, style);\n            }\n        } return this;\n    }\n\n    /**\n     * Removes the cell(Disposal)\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n\n    getMinMeasures () {\n        return 0;\n    }\n }\nexport default BlankCell;\n","/**\n * This file declares a class that represents a Text element in a  table.\n * @module VisualCell\n */\n\nimport {\n    selectElement,\n    makeElement,\n    getSmartComputedStyle,\n    generateGetterSetters\n} from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { TEXT } from './enums/cell-type';\nimport { PROPS } from './props';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { CLASSPREFIX, TOP, BOTTOM, LEFT, RIGHT, HEADER, WIDTH, TEXT_CELL } from './enums/constants';\nimport './text-cell.scss';\n\nconst setSmartText = (context) => {\n    const source = context.source();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       rotation\n   } = context.config();\n    const {\n        left,\n        right,\n        top,\n        bottom\n     } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const labelManager = context.dependencies().labelManager;\n\n    labelManager.setStyle(context._computedStyle);\n\n    !rotation && context.smartText(labelManager.getSmartText(source, availWidth, availHeight, false));\n    rotation && context.smartText(labelManager.getSmartText(source, availHeight, availWidth, true));\n\n    return context;\n};\n\n/**\n* Computes the Logical Space for the text\n*\n* @param {Object} context Required to get the needed parameters to compute text space\n* @return {Object} Logical space taken up by text\n* @memberof TextCell\n*/\nconst computeTextSpace = (context) => {\n    const { labelManager } = context.dependencies();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       show,\n       maxLines,\n       minCharacters\n   } = context.config();\n    const {\n       left,\n       right,\n       top,\n       bottom\n    } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const source = context.source();\n    const space = context.smartText();\n    const minText = new Array(minCharacters).fill('W').join('');\n    const _minTextSpace = labelManager.getOriSize(minText);\n\n    context.config({ rotation: false });\n    if (space.width > (availWidth || 0) && maxLines) {\n        space.height = space.oriTextHeight * maxLines;\n    }\n    if (availWidth && availWidth < space.width) {\n        space.width = _minTextSpace.width;\n    }\n    if (availWidth && availWidth < Math.min(_minTextSpace.width, space.oriTextWidth)) {\n        const smartSpace = labelManager.getSmartText(source, availHeight, _minTextSpace.height, true);\n        space.width = smartSpace.height;\n        space.height = smartSpace.width;\n        context.config({ rotation: true });\n        context.smartText(smartSpace);\n    }\n\n    if (show) {\n        return {\n            width: Math.ceil(space.width) + paddedWidth,\n            height: Math.ceil(space.height) + paddedHeight\n        };\n    } return {\n        width: 0,\n        height: 0\n    };\n};\n\n/**\n * Represents a table haeder.\n *\n * @class Text\n */\nclass TextCell extends SimpleCell {\n\n    /**\n     * Creates an instance of Text.\n     * @param {Object} config The input configuration.\n     * @param {string} dependencies Dependencies for the class(labelManager)\n     * @memberof Text\n     */\n    constructor (config, dependencies) {\n        super(config);\n\n        this._dependencies = dependencies;\n        this._className = this._config.className ||\n                    (this._config.type === HEADER ? `${CLASSPREFIX}-${HEADER}-cell` : `${CLASSPREFIX}-${TEXT}-cell`);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'), this._className);\n        this._dependencies.labelManager.setStyle(this._computedStyle);\n        generateGetterSetters(this, PROPS[TEXT]);\n        const space = this._dependencies.labelManager.getOriSize('w');\n        this.minSpacing({ width: Math.floor(space.width * 3 / 4), height: Math.floor(space.height / 2) });\n        setSmartText(this);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof TextCell\n     */\n    get type () {\n        return TEXT;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof TextCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the Text cell.\n     *\n     * @return {string} The unique identifier for the Text.\n     * @memberof TextCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the dependencies of the instance\n     *\n     * @return {Object} Dependencies needed by the class\n     * @memberof TextCell\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof TextCell\n     */\n    serialize () {\n        return {\n            text: this.source(),\n            type: TEXT\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof TextCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof Text\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeTextSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        setSmartText(this);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the Text cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof Text\n     */\n    render (mount) {\n        const availWidth = this.availWidth();\n        const availHeight = this.availHeight();\n        const {\n            margin,\n            show,\n            verticalAlign,\n            textAlign,\n            rotation\n        } = this.config();\n\n        this.mount(mount);\n        if (show) {\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id], `${CLASSPREFIX}-${TEXT_CELL}`);\n            const vAlign = verticalAlign || rotation ? 'middle' : 'top';\n            const {\n                width,\n                height\n            } = this.smartText();\n            const {\n                height: minHeightSpace\n            } = this.minSpacing();\n            const translation = {\n                top: width + minHeightSpace / 2,\n                middle: width / 2 + minHeightSpace,\n                bottom: minHeightSpace\n            };\n\n            container.style('vertical-align', vAlign);\n\n            // Set class name\n            elem.classed(this._className, true);\n\n            // Apply styles\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            elem.style('transform', rotation ? `translate(${height / 2}px,\n                ${translation[vAlign]}px) rotate(-90deg)` : '');\n            elem.style(WIDTH, availWidth ? `${availWidth}px` : '100%');\n            [TOP, BOTTOM, LEFT, RIGHT].forEach((type) => {\n                container.style(`margin-${type}`, `${margin[type]}px`);\n            });\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            // set the text as the innerHTML\n            this._dependencies.labelManager.setStyle(this._computedStyle);\n            elem.html(this._dependencies.labelManager.getSmartText(this.source(), availWidth, availHeight, true).text);\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\n\nexport default TextCell;\n","/**\n * This file declares a class that is used to represent a table cell\n * that houses a visual unit.\n * @module VisualCell\n */\n\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { GEOM } from './enums/cell-type';\nimport { PROPS } from './props';\nimport {\n    CLASSPREFIX, HEIGHT, WIDTH, DATA, AXES, FACET_BY_FIELDS, FIELDS, TRANSFORM, LAYER_DEF, CONFIG, GEOM_CELL,\n    DETAIL_FIELDS\n} from './enums/constants';\nimport { DEFAULT_CONFIG } from './enums/defaults';\n\n/**\n * Calculates the logical space of the cell\n *\n * @param {Object} context Required to get the needed parameters to compute unit space\n * @return {Object} Logical space taken up by the unit\n * @memberof GeomCell\n */\nconst computeGeomSpace = (context) => {\n    const config = context.source().config();\n    const { width, height } = config;\n    return {\n        width: Math.ceil(width),\n        height: Math.ceil(height + context.getCaptionSpace().height)\n    };\n};\n\n /**\n * This class represents a SimpleCell for visual unit.\n *\n * @class GeomCell\n */\nclass GeomCell extends SimpleCell {\n\n    /**\n     * Creates an instance of GeomCell.\n     * @param {Object} config The input configuration.\n     * @memberof GeomCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._unit = null;\n        this._layers = null;\n        this._axes = {};\n        this._datamodel = {};\n        this._facetByFields = {};\n        this._fields = null;\n        this._transform = null;\n        this._caption = null;\n\n        generateGetterSetters(this, PROPS[GEOM]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof GeomCell\n     */\n    get type () {\n        return GEOM;\n    }\n\n    /**\n     * This method return the value contained by this cell.\n     *\n     * @return {VisualUnit} Instance of visual unit contained by visual unit.\n     * @memberof GeomCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return the id of the\n     * visual unit housed by this cell.\n     *\n     * @return {string} The unique id of the visual unit.\n     * @memberof GeomCell\n     */\n    get id () {\n        return this.source().id();\n    }\n\n    /**\n     * This method return a serialized representation of\n     * this instance.\n     *\n     * @return {Object} Object with serializable props.\n     * @memberof GeomCell\n     */\n    serialize () {\n        return {\n            type: GEOM,\n            unit: this.source().serialize(),\n            caption: this.caption()\n        };\n    }\n\n    /**\n     * return the default configuration for the geom cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof GeomCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * Updates the model based on the changed parameters\n     *\n     * @return {Instance} return instance\n     * @memberof GeomCell\n     */\n    updateModel () {\n        const unit = this.source();\n        unit.clearCaching();\n        [LAYER_DEF, TRANSFORM, AXES, FIELDS, CONFIG, DATA, AXES, FACET_BY_FIELDS, DETAIL_FIELDS].forEach((prop) => {\n            this[prop]() && unit[prop](this[prop]());\n        });\n        return this;\n    }\n\n    /**\n     * It gives the space taken by the caption of the unit\n     *\n     * @return {Object} return the space taken by caption\n     * @memberof GeomCell\n     */\n    getCaptionSpace () {\n        const caption = this.caption();\n\n        let captionSpace = { width: 0, height: 0 };\n        if (caption) {\n            captionSpace = caption.getLogicalSpace();\n        }\n        return captionSpace;\n    }\n\n    /**\n     * return the space taken up by the element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof GeomCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeGeomSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space available to\n     * render the SimpleCell.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    setAvailableSpace (width, height) {\n        const unit = this.source();\n\n        this.availWidth(width);\n        this.availHeight(height);\n        unit.lockModel()\n            .width(width).height(height - this.getCaptionSpace().height)\n            .unlockModel();\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * his method is used to render the visual unit inside the provided cell.\n     *\n     * @param {HTMLElement} mount The mountpoint in the table.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    render (mount) {\n        if (mount) {\n            this.mount(mount);\n            const availHeight = this.availHeight();\n            const availWidth = this.availWidth();\n            const caption = this.caption();\n            const wrapperDiv = makeElement(selectElement(mount), 'div', [1], `${CLASSPREFIX}-${GEOM_CELL}`);\n\n            if (caption) {\n                const captionDom = makeElement(wrapperDiv, 'div', [caption], `${CLASSPREFIX}-unit-caption`).node();\n                caption.render(captionDom);\n            }\n            const selection = makeElement(wrapperDiv, 'div', [1], `${CLASSPREFIX}-unit`);\n            wrapperDiv.style(WIDTH, `${availWidth}px`).style(HEIGHT, `${availHeight}px`);\n            selection.style(WIDTH, `${availWidth}px`)\n                            .style(HEIGHT, `${availHeight - this.getCaptionSpace().height}px`);\n            this.source().mount(selection.node());\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Object} Current instance\n     * @memberof GeomCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        this.source().remove();\n        return this;\n    }\n}\n\nexport default GeomCell;\n","import AxisCell from './axis-cell';\nimport BlankCell from './blank-cell';\nimport TextCell from './text-cell';\nimport GeomCell from './geom-cell';\nimport SimpleCell from './simple-cell';\n\nimport * as CONSTANTS from './constants';\n\nexport const DEFAULT_PLACEHOLDERS = {\n    [CONSTANTS.SIMPLE_CELL]: SimpleCell,\n    [CONSTANTS.TEXT_CELL]: TextCell,\n    [CONSTANTS.AXIS_CELL]: AxisCell,\n    [CONSTANTS.GEOM_CELL]: GeomCell,\n    [CONSTANTS.BLANK_CELL]: BlankCell\n};\n\n","export const SIMPLE_CELL = 'SimpleCell';\nexport const TEXT_CELL = 'TextCell';\nexport const AXIS_CELL = 'AxisCell';\nexport const BLANK_CELL = 'BlankCell';\nexport const GEOM_CELL = 'GeomCell';\n\n","import { DEFAULT_PLACEHOLDERS } from './defaults';\n\n/**\n * Creates a registry for the cells, which can be used for\n * setting a new cell or getting the registered cells\n *\n * @return {Object} Setters and getters for registered cells\n */\nconst cellRegistry = () => {\n    const reg = DEFAULT_PLACEHOLDERS;\n    return {\n        set: (key, def) => {\n            if (key in reg) {\n                reg[key] = def;\n            }\n            return cellRegistry;\n        },\n        get: () => reg\n    };\n};\nexport default cellRegistry;\n","import { TextCell } from '@chartshq/visual-cell';\nimport { escapeHTML } from 'muze-utils';\nimport { TOP } from '../constants';\n\n/**\n *\n *\n * @param {*} rawContent\n *\n */\nconst resolveTitleSubTitleContent = (rawContent) => {\n    if (typeof rawContent === 'function' && !rawContent._sanitize) {\n        return rawContent();\n    }\n    return escapeHTML(rawContent());\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} cellType\n * @param {*} labelManager\n * @param {*} prevCell\n *\n */\nconst headerCreator = (config, cellType, labelManager, prevCell) => {\n    let margin = {};\n    const {\n        content,\n        classPrefix,\n        maxLines\n    } = config;\n    const cell = prevCell || new TextCell(\n        {\n            type: cellType === 'title' ? 'header' : 'text',\n            className: `${classPrefix}-${cellType}-cell`\n        }, {\n            labelManager\n        })\n     .config({ maxLines }).minSpacing({ width: 0, height: 0 });\n\n    cell.source(content);\n    cell._minTickDiff = { height: 0, width: 0 };\n\n    if (config.position === TOP) {\n        margin = { top: 0, bottom: config.padding };\n    } else {\n        margin = { top: config.padding, bottom: 0 };\n    }\n    cell.config({ margin });\n\n    return {\n        height: cell.getLogicalSpace().height,\n        cell\n    };\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} type\n * @param {*} labelManager\n * @param {*} cell\n *\n */\nconst createHeading = (config, type, labelManager, prevCell) => {\n    if (!config) { return ''; }\n\n    return headerCreator(\n        config,\n        type,\n        labelManager,\n        prevCell\n    );\n};\n\n/**\n *\n *\n * @param {*} context\n */\nexport const createHeaders = (context, canvasHeight, canvasWidth) => {\n    let headerHeight = 0;\n    const headers = {};\n    const subtitle = context.subtitle();\n    const isSubtitle = resolveTitleSubTitleContent(subtitle[0]);\n\n    canvasHeight >= 200 && canvasWidth >= 200 && ['title', 'subtitle'].forEach((type) => {\n        const headerOptions = context[type]();\n        const content = resolveTitleSubTitleContent(headerOptions[0]);\n        if (content) {\n            const config = headerOptions[1];\n\n            config.width = context.width();\n            config.height = context.height();\n            config.classPrefix = context.config().classPrefix;\n            config.content = content;\n            config.padding = (type === 'title' && !isSubtitle.length) ? subtitle[1].padding : config.padding;\n\n            const { height, cell } = createHeading(config, type, context.dependencies().smartlabel,\n                context[`${type}Cell`]);\n\n            headers[`${type}Cell`] = cell;\n            context._composition[type] = cell;\n            headerHeight += height;\n        }\n    });\n    return { headerHeight, headers };\n};\n\n","import { TextCell, AxisCell } from '@chartshq/visual-cell';\nimport { getValueParser, retrieveFieldDisplayName, DataModel, getObjProp } from 'muze-utils';\nimport {\n    VERTICAL, HORIZONTAL, LEFT, RIGHT, LEGEND_TYPE_MAP, PADDING, BORDER, MARGIN\n} from '../constants';\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n *\n */\nexport const legendCreator = (canvas) => {\n    let LegendCls;\n    const dataset = [];\n    const axes = canvas.getRetinalAxes();\n\n    Object.entries(axes).forEach((axisInfo) => {\n        const scale = axisInfo[1][0];\n        const scaleType = axisInfo[0];\n        const scaleProps = canvas[scaleType]();\n\n        if (scaleProps.field && scale) {\n            const {\n                type,\n                step\n            } = scale.config();\n\n            const stepMapper = typeof step === 'boolean' ? step : false;\n            LegendCls = LEGEND_TYPE_MAP[`${type}-${stepMapper}-${scaleType}`];\n            dataset.push({\n                scale,\n                canvas,\n                fieldName: scaleProps.field,\n                title: retrieveFieldDisplayName(canvas.data(), scaleProps.field),\n                LegendCls,\n                scaleType\n            });\n        }\n    });\n\n    return dataset;\n};\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n * @param {*} measurement\n * @param {*} prevLegends\n *\n */\nexport const legendInitializer = (legendConfig, canvas, measurement, prevLegends) => {\n    const legends = [];\n    const {\n        height,\n        width,\n        headerHeight\n    } = measurement;\n    const {\n        position,\n        align\n    } = legendConfig;\n\n    const legendInfo = legendCreator(canvas);\n    const { invalidValues } = canvas.config();\n\n    const parser = getValueParser(invalidValues);\n    legendInfo.forEach((dataInfo, index) => {\n        const legendMeasures = {};\n        const {\n                LegendCls,\n                scale,\n                fieldName,\n                title: titleText,\n                scaleType\n            } = dataInfo;\n        const config = legendConfig[scaleType] || {};\n        const title = config.title || {};\n        title.text = title.text || titleText;\n        if (config.show) {\n            config.position = position;\n            config.align = align;\n            let legend = getObjProp(prevLegends[scaleType], index);\n            if (!legend) {\n                legend = LegendCls.create({\n                    labelManager: canvas._dependencies.smartlabel,\n                    cells: {\n                        AxisCell, TextCell\n                    }\n                });\n            }\n            legendMeasures.maxHeight = align === VERTICAL ? (height - headerHeight) : height * 0.2;\n            legendMeasures.maxWidth = align === HORIZONTAL ? width : width * 0.2;\n            legendMeasures.width = Math.min(legendMeasures.maxWidth, config.width);\n            legendMeasures.height = Math.min(legendMeasures.maxHeight, config.height);\n\n            [PADDING, BORDER, MARGIN].forEach((e) => {\n                legendMeasures[e] = config[e];\n            });\n            const metaData = legend.metaData();\n            if (metaData instanceof DataModel) {\n                metaData.dispose();\n            }\n            legend.scale(scale)\n                            .valueParser(parser)\n                            .title(title)\n                            .fieldName(fieldName)\n                            .config(config)\n                            .metaData(canvas.composition().visualGroup.getGroupByData().project([fieldName]))\n                            .measurement(legendMeasures)\n                            .canvasAlias(canvas.alias())\n                            .setLegendMeasures();\n\n            legends.push({ canvas, legend, scaleType });\n        }\n    });\n    return legends;\n};\n\n/**\n *\n *\n * @param {*} legends\n * @param {*} legendConfig\n * @param {*} availableHeight\n * @param {*} availableWidth\n *\n */\nexport const getLegendSpace = (legends, legendConfig, availableHeight, availableWidth) => {\n    const legendMeasures = legends.map(legendInfo => legendInfo.legend.measurement());\n    const legendSpace = { width: 0, height: 0 };\n\n    legendMeasures.forEach((space) => {\n        let height = 0;\n        let width = 0;\n        width = Math.min(space.width, space.maxWidth);\n        height = Math.min(space.height, space.maxHeight);\n\n        if (legendConfig.align === HORIZONTAL) {\n            if (legendSpace.width + width > availableWidth) {\n                legendSpace.width = availableWidth;\n                legendSpace.height += height;\n            } else {\n                legendSpace.width += width;\n                legendSpace.height = Math.max(legendSpace.height, height);\n            }\n        } else if (legendSpace.height + height > availableHeight) {\n            legendSpace.height = height;\n            legendSpace.width += width;\n        } else {\n            legendSpace.height += height;\n            legendSpace.width = Math.max(legendSpace.width, width);\n        }\n    });\n    if (legendConfig.align === HORIZONTAL) {\n        legendSpace.width = availableWidth;\n    }\n    return legendSpace;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} headerHeight\n *\n */\nexport const createLegend = (context, headerHeight, height, width) => {\n    const measurement = {\n        height,\n        width,\n        headerHeight\n    };\n    const { legend } = context.config();\n    const { show, position } = legend;\n\n    legend.classPrefix = context.config().classPrefix;\n    const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n\n    legend.show = show ? ((align === VERTICAL && width > 200) || (align === HORIZONTAL && height > 200)) : show;\n    legend.align = align;\n    return legendInitializer(legend, context, measurement, context.composition().legend || {});\n};\n","import { LayoutComponent } from '../../../../layout/src/tree-layout';\n\nexport default class MuzeComponent extends LayoutComponent {\n    getLogicalSpace () {\n        const { width, height } = this.boundBox();\n        return { width, height };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n    }\n\n    getBoundBox () {\n        return this.boundBox();\n    }\n\n    updateWrapper () {\n        throw Error('Update is not implemented');\n    }\n\n    setParams () {\n        throw Error('set params is not implemented');\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport { LEFT } from '../../constants';\n\nexport default class HeaderComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    renderHeader (container) {\n        const layoutConfig = this.params.config;\n        container = selectElement(container);\n        const { align } = layoutConfig;\n        const sel = container\n          .selectAll(`.${layoutConfig.classPrefix}-inner-container`)\n          .data([this.name]);\n        sel.exit().remove();\n        const selEnter = sel.enter().append('div');\n\n        const cont = selEnter.merge(sel);\n        cont.classed(`${layoutConfig.classPrefix}-inner-container`, true);\n        const { height, width } = this.boundBox();\n        this.component.setAvailableSpace(width, height);\n\n        this.component && this.component.render(cont.node());\n\n        cont.selectAll('div').classed(`${layoutConfig.classPrefix}-inner-content`, true);\n        cont.style('width', `${100}%`);\n\n        if (layoutConfig && this.component) {\n            cont.style('float', LEFT)\n                            .style('text-align', align);\n                            // .style(`padding-${position === TOP ? BOTTOM : TOP}`, `${padding}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderHeader(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.setParams(params);\n        this.name(params.name);\n        this.boundBox(params.component.getLogicalSpace());\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y,\n            left: conf.x,\n            width: conf.width,\n            height: conf.height });\n        this.renderAt(conf.renderAt);\n    }\n}\n","import { makeElement, selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport {\n     LEFT, RIGHT, VERTICAL, HORIZONTAL, TOP, BOTTOM, HORIZONTAL_CENTER, VERTICAL_CENTER\n} from '../../constants';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\n\nfunction defaultAlignmentHelper (position) {\n    let alignment = null;\n    const alignWith = `${ROW_MATRIX_INDEX[1]}-${COLUMN_MATRIX_INDEX[1]}`;\n    switch (position) {\n    case TOP:\n    case BOTTOM:\n        alignment = HORIZONTAL_CENTER;\n        break;\n    case LEFT:\n    case RIGHT:\n        alignment = VERTICAL_CENTER;\n        break;\n    default:\n        alignment = VERTICAL_CENTER;\n    }\n    return { alignment, alignWith };\n}\nexport default class LegendComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.config.measurement.legendSpace, 0);\n        this.setParams(params);\n    }\n\n    renderLegend (container) {\n        container = selectElement(container);\n        const sectionComponents = [];\n        const { position, classPrefix } = this.params.config;\n        const legendMount = makeElement(container, 'div', [this.components],\n                                        `${classPrefix}-inner-content`, {}, d => d);\n        legendMount.classed(`${classPrefix}-legend`, true);\n        const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n        const legWidth = this.newDimensions.width;\n        const legHeight = this.newDimensions.height;\n\n        [container, legendMount].forEach((elem) => {\n            elem.style('width', `${Math.floor(legWidth)}px`)\n                            .style('height', `${legHeight}px`)\n                            .style('float', LEFT);\n        });\n\n        if (align === VERTICAL) {\n            let sections = -1;\n            let currHeight = legHeight;\n            let currWidth = 0;\n\n            this.components.forEach((legendInfo) => {\n                const leg = legendInfo.legend;\n                if (leg.measurement().height > currHeight) {\n                    sections++;\n                    currWidth = 0;\n                    currHeight = legHeight;\n                } else {\n                    sections < 0 && sections++;\n                }\n                sectionComponents[sections] = sectionComponents[sections] || [];\n                currHeight -= Math.min(leg.measurement().height, currHeight);\n                currWidth = Math.max(Math.min(leg.measurement().width, leg.measurement().maxWidth), currWidth);\n                sectionComponents[sections].push({\n                    legend: leg,\n                    legendHeight: legHeight,\n                    legendWidth: currWidth\n                });\n            });\n\n            const mount = makeElement(legendMount, ['div'], sectionComponents, `${classPrefix}-legend-section`);\n            // mount.each((d, i) => selectElement(this).classed(`${classPrefix}-legend-section-${i}`, true));\n            mount.classed(`${classPrefix}-legend-vertical-section`, true)\n                            .style('width', d => `${d[0].legendWidth}px`);\n            makeElement(mount, ['div'], d => d, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) {\n                                d.legend.mount(this);\n                            })\n                            .style('width', d => `${d.legendWidth}px`);\n        } else {\n            const mount = makeElement(legendMount, 'div', [1], `${classPrefix}-legend-section`);\n            mount.classed(`${classPrefix}-legend-horizontal-section`, true);\n            mount.classed(`${classPrefix}-legend-section-${0}`, true)\n                            .style('width', `${legWidth}px`);\n\n            makeElement(mount, 'div', this.components, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) { d.legend.mount(this); })\n                            .style('width', d => `${d.legend.measurement().width}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderLegend(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.measurement.legendSpace);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.components = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        const { alignWith, alignment } = defaultAlignmentHelper(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith || alignWith);\n        this.alignment(params.config.alignment || alignment);\n    }\n\n}\n","import {\n    selectElement,\n    makeElement,\n    getD3Drag,\n    getEvent,\n    getWindow,\n    hasTouch\n} from 'muze-utils';\nimport './scroll-bar.scss';\nimport { WIDTH, HEIGHT } from '../../../constants';\n\nconst d3Drag = getD3Drag();\n\nconst arrowSizeMap = {\n    left: WIDTH,\n    right: WIDTH,\n    top: HEIGHT,\n    bottom: HEIGHT\n};\n\nexport const getUnitPositions = (unitMeasures, totalLength, viewLength) => {\n    let currentLen = 0;\n    const measures = unitMeasures.primary && unitMeasures.primary.length ?\n        unitMeasures.primary : unitMeasures.secondary;\n\n    return measures.map((e) => {\n        const unitPosition = currentLen * 100 / (totalLength - viewLength);\n        currentLen += e;\n        return unitPosition;\n    });\n};\n\nexport const createScrollBarArrow = (mount, type, config) => {\n    const {\n        classPrefix,\n        thickness\n    } = config;\n    const arrow = makeElement(mount, 'div', [type], `${classPrefix}-scroll-arrow-${type}`);\n\n    arrow.classed(`${classPrefix}-scroll-arrow`, true);\n    arrow.style(arrowSizeMap[type], `${thickness}px`);\n\n    const chevron = makeElement(arrow, 'div', [1], `${classPrefix}-scroll-arrow-chevron`);\n\n    chevron.attr('id', `${classPrefix}-scroll-arrow-chevron-${type}`);\n\n    return arrow;\n};\n\nexport const createScrollBarRect = (mount, config) => {\n    const {\n        classPrefix\n    } = config;\n    const rect = makeElement(mount, 'div', [1], `${classPrefix}-scroll-rect`);\n    const mover = makeElement(rect, 'div', [1], `${classPrefix}-scroll-mover`);\n\n    return { rect, mover };\n};\n\nexport const applyRectClick = (scrollMaker, moverRect) => {\n    const {\n        rect\n    } = moverRect;\n\n    rect.on('click', () => {\n        const event = getEvent();\n        scrollMaker.emptyScrollAreaClick(event);\n    });\n};\n\nconst applyMoverDrag = (scrollMaker, moverRect) => {\n    let startPos = {};\n    let moverStartPos = 0;\n    let rectStartPos = 0;\n    let endPos = {};\n    const {\n        mover,\n        rect\n    } = moverRect;\n\n    mover.call(d3Drag()\n                    .on('start', () => {\n                        const event = getEvent();\n\n                        moverStartPos = mover.node().getBoundingClientRect();\n                        rectStartPos = rect.node().getBoundingClientRect();\n                        startPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                    })\n                    .on('drag', () => {\n                        const event = getEvent();\n                        const window = getWindow();\n\n                        endPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                        const distanceMoved = {\n                            x: endPos.x - startPos.x,\n                            y: endPos.y - startPos.y\n                        };\n                        const actualPosition = {\n                            x: moverStartPos.x + distanceMoved.x - rectStartPos.x + window.pageXOffset,\n                            y: moverStartPos.y + distanceMoved.y - rectStartPos.y + window.pageYOffset\n                        };\n\n                        scrollMaker.changeMoverPosition(actualPosition);\n                    }));\n};\n\nconst applyScrollMouseDownAction = (moverRect, scrollMaker, speed) => {\n    const {\n        mover,\n        rect\n    } = moverRect;\n    const { x, y } = mover.node().getBoundingClientRect();\n    const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n    scrollMaker.changeMoverPosition({ x: x - rectX + speed, y: y - rectY + speed });\n};\n\nconst registerListenerOnArrow = (scrollMaker, moverRect, arrowType, speed) => {\n    let timer = '';\n    const arrow = scrollMaker._components[arrowType];\n    const isTouchDevice = hasTouch();\n\n    arrow.on(isTouchDevice ? 'touchstart' : 'mousedown', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        timer = setInterval(() => {\n            applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n        }, 100);\n    }).on(isTouchDevice ? 'touchend' : 'mouseup', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        clearInterval(timer);\n    }).on('click', () => {\n        applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n    });\n};\n\nexport const registerListeners = (scrollMaker) => {\n    const {\n        moverRect\n    } = scrollMaker._components;\n\n    const speed = scrollMaker.config().speed;\n\n    registerListenerOnArrow(scrollMaker, moverRect, 'prevArrow', -speed);\n    applyMoverDrag(scrollMaker, moverRect);\n    applyRectClick(scrollMaker, moverRect);\n    registerListenerOnArrow(scrollMaker, moverRect, 'nextArrow', speed);\n};\n\nexport const scrollContainerHelper = (mountPoint, config, dimensions, type) => {\n    const {\n        classPrefix\n    } = config;\n    const scrollBarContainer = makeElement(selectElement(mountPoint), 'div', [1], `#${classPrefix}-scroll-bar-${type}`);\n\n    scrollBarContainer.classed(`${classPrefix}-scroll-bar`, true);\n    scrollBarContainer.style(WIDTH, `${dimensions.width}px`);\n    scrollBarContainer.style(HEIGHT, `${dimensions.height}px`);\n    return scrollBarContainer;\n};\n\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n\n    config: {\n        sanitization: (context, value) => {\n            value = mergeRecursive(context._config, value);\n            return value;\n        }\n    },\n    manager: {},\n    unitPositions: {},\n    logicalSpace: {}\n};\n\n","import { ERROR_MSG, generateGetterSetters } from 'muze-utils';\nimport {\n    scrollContainerHelper,\n    registerListeners\n} from './helper';\nimport { PROPS } from './props';\n\nexport class ScrollMaker {\n\n    constructor () {\n        this._components = {};\n        this._logicalSpace = {};\n        this._attachedScrollAction = () => {};\n        this._config = {\n            thickness: 10,\n            speed: 2\n        };\n        this._unitPositions = null;\n\n        generateGetterSetters(this, PROPS);\n    }\n\n    static type () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    emptyScrollAreaClick () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    changeMoverPosition () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollDeltaTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    createScroll (mountPoint) {\n        const config = this.config();\n\n        return {\n            scrollBarContainer: scrollContainerHelper(mountPoint, config, this.logicalSpace(), this.constructor.type())\n        };\n    }\n\n    attachScrollAction (externalScrollAction) {\n        this._attachedScrollAction = externalScrollAction;\n        return this;\n    }\n\n    detachScrollAction () {\n        this._attachedScrollAction = () => {};\n        return this;\n    }\n\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    registerListeners () {\n        registerListeners(this);\n        return this;\n    }\n\n    remove () {\n        this._components.scrollBarContainer.remove();\n        return this;\n    }\n}\n\n","import MuzeComponent from './muze-chart-component';\nimport { HorizontalScrollMaker } from './scroll-bar-maker/horizontal-scroll-maker';\nimport { VerticalScrollMaker } from './scroll-bar-maker/vertical-scroll-maker';\n\nconst scrollMakerMap = {\n    horizontal: HorizontalScrollMaker,\n    vertical: VerticalScrollMaker\n};\n\n/**\n * Scroll Component acts as a wrapper over the scoll bars created using the respective Scroll Makers\n * This provides a consistent API for layouting using the tree layout system.\n *\n *\n * @class\n * @public\n * @module ScrollComponent\n */\nexport default class ScrollComponent extends MuzeComponent {\n\n    constructor (params) {\n        const ScrollMaker = scrollMakerMap[params.config.type];\n\n        params.component = new ScrollMaker();\n        params.component.config(params.config.scrollBarComponentConfig);\n        params.component.logicalSpace(params.dimensions);\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    manager (...manager) {\n        if (manager.length) {\n            this.component.manager(manager[0]);\n            return this;\n        }\n        return this.component.manager();\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollDeltaTo (delta) {\n        this.component.scrollDeltaTo(delta);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollTo (scrollPercentage) {\n        this.component.scrollTo(scrollPercentage);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page based on the unit index.\n     * The input is provided as a number represting the index for the unit.\n     * For vertical scroll, it's the row index that will be required.\n     * For horizontal scroll, it's the column index that will be required\n     *\n     * @public\n     *\n     * @param {number} unitIndex Index of the unit appearing in the grid\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollToUnitIndex (unitIndex) {\n        const unitPositions = this.component.unitPositions();\n        const sanitizedUnitIndex = Math.min(Math.max(0, unitIndex), unitPositions.length - 1);\n        this.component.scrollTo(unitPositions[sanitizedUnitIndex]);\n        return this;\n    }\n\n    /**\n     * Provides the positions of the units(either horizontal or vertical based on the type\n     * of scroll bar it wraps) relative to it's container. The position of the first unit starts at 0\n     *\n     *\n     * @public\n     *\n     * @return {Array} Positions of units either horizontal or vertical\n     */\n    getScrollPositionsForUnits () {\n        return this.component.unitPositions();\n    }\n\n    draw (container) {\n        this.component.createScroll(container || document.getElementById(this.renderAt()));\n        return this;\n    }\n\n    /**\n     * Can be used to attach a scroll action whenever scrolling occurs in the canvas\n     *\n     * @public\n     * @param {number} externalAction Action to be attached during scroll\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    attachScrollAction (externalAction) {\n        this.component.attachScrollAction(externalAction);\n        return this;\n    }\n\n    /**\n     * Can be used to detach the scroll action already bound to the scroll bar\n     *\n     * @public\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    detachScrollAction () {\n        this.component.detachScrollAction();\n        return this;\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.component.config(params.config.scrollBarComponentConfig);\n        this.component.logicalSpace(params.dimensions);\n        this.boundBox(this.component.getLogicalSpace());\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component || this.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    remove () {\n        this.component.remove();\n    }\n}\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { HORIZONTAL, HEIGHT, WIDTH, LEFT } from '../../../constants';\n\nexport class HorizontalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: horizontal\n     */\n    static type () {\n        return HORIZONTAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, config, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'left', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'right', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n\n        const { height, width, totalLength, viewLength, unitWidths } = this.logicalSpace();\n        const scrollBarWithouArrowLength = width - height * 2;\n\n        rect.style(WIDTH, `${dimensions.width - height * 2}px`);\n        rect.style(HEIGHT, `${100}%`);\n        mover.style(WIDTH, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(HEIGHT, `${100}%`);\n        mover.style(LEFT, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n        this.unitPositions(getUnitPositions(unitWidths, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n        let positionAdjuster = speed * 10;\n        if (event.x < x) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n        const {\n            totalLength\n         } = this.logicalSpace();\n\n        if (newPosition.x < 0) {\n            currentPos = 0;\n        } else if (newPosition.x + moverPos.width > rectStartPos.width) {\n            currentPos = rectStartPos.width - moverPos.width;\n        } else {\n            currentPos = newPosition.x;\n        }\n\n        mover.style(LEFT, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: 0, x: moverPos.x - rectStartPos.x - delta });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {HorizontalScrollMaker} Instance of the HorizontalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.width)) / 100;\n\n        this.changeMoverPosition({ y: 0, x: movement });\n        return this;\n    }\n\n}\n\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { VERTICAL, TOP, HEIGHT, WIDTH } from '../../../constants';\n\nexport class VerticalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: vertical\n     */\n    static type () {\n        return VERTICAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'top', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'bottom', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n        const { height, width, totalLength, viewLength, unitHeights } = this.logicalSpace();\n        const scrollBarWithouArrowLength = height - width * 2;\n\n        rect.style(HEIGHT, `${scrollBarWithouArrowLength}px`);\n        rect.style(WIDTH, `${100}%`);\n        mover.style(WIDTH, `${100}%`);\n        mover.style(HEIGHT, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(TOP, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n\n        this.unitPositions(getUnitPositions(unitHeights, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n        let positionAdjuster = speed * 10;\n        if (event.y < y) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const {\n            totalLength\n         } = this.logicalSpace();\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n\n        if (newPosition.y < 0) {\n            currentPos = 0;\n        } else if (newPosition.y + moverPos.height > rectStartPos.height) {\n            currentPos = rectStartPos.height - moverPos.height;\n        } else {\n            currentPos = newPosition.y;\n        }\n        mover.style(TOP, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: moverPos.y - rectStartPos.y - delta, x: 0 });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.height)) / 100;\n\n        this.changeMoverPosition({ x: 0, y: movement });\n        return this;\n    }\n\n}\n","import { makeElement } from 'muze-utils';\nimport { cellSpanMaker, applySpans } from '../../../../layout/src/grid-layout/span-maker';\nimport { applyBorders } from '../../../../layout/src/grid-layout/border-helper';\n\nimport {\n     TOP, CENTER\n} from '../../../../layout/src/enums/constants';\nimport MuzeComponent from './muze-chart-component';\nimport { WIDTH, HEIGHT, HIDDEN, OVERFLOW, AUTO, VISIBLE } from '../../constants';\n\nconst renderPlaceholders = (cells) => {\n    // Rendering content within placeholders\n    cells.each(function (cell) {\n        cell.placeholder.render(this);\n    });\n};\n\nexport default class MatrixComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.setParams(params);\n        this.className(params.config.className);\n    }\n\n    applyScroll (container) {\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const { horizontal, vertical } = this.params.config.scrollInfo;\n        container.style(OVERFLOW, VISIBLE);\n        container.style(WIDTH, AUTO);\n        container.style(HEIGHT, AUTO);\n\n        if (horizontal && column === 1) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(WIDTH, '100%');\n        }\n\n        if (vertical && row === CENTER) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(HEIGHT, '100%');\n        }\n    }\n\n    renderMatrix (mountPoint) {\n        // Creating containers for each matrix individually\n        const classPrefix = this.params.config.classPrefix;\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const dimensions = this.params.config.dimensions;\n        const border = this.params.config.border;\n\n        // Creating containers for each matrix individually\n        const containerForMatrix = makeElement(mountPoint, 'div', [1], `${classPrefix}-grid-${row}-${column + 1}`)\n            .classed(`${classPrefix}-grid-${row}`, true)\n            .classed(`${classPrefix}-grid`, true);\n\n        this.applyScroll(containerForMatrix);\n\n        const {\n            viewMatrix,\n            spans\n        } = cellSpanMaker(this.component, row, column);\n\n        // Rendering the table components\n        const { cells } = this.renderTable(containerForMatrix, `${classPrefix}-grid`, viewMatrix);\n\n        applySpans(cells, spans, { dimensions, border }, `${row}-${column}`);\n        renderPlaceholders(cells);\n\n        cells.exit().each((cell) => {\n            cell.placeholder.remove();\n        });\n\n        applyBorders(cells, border, row, column);\n    }\n\n    renderTable (mount, className, rowData) {\n        const table = makeElement(mount, 'table', ['layout'], `${className}-table`);\n        const body = makeElement(table, 'tbody', ['layout'], `${className}-body`);\n        const rows = makeElement(body, 'tr', rowData, `${className}-tr`);\n        const cells = makeElement(rows, 'td', (d, i) => d.filter(e => e !== null).map(e =>\n                                  ({ placeholder: e, rowIndex: i })), `${className}-td`, {}, key => key.placeholder.id);\n\n        return { table, body, rows, cells };\n    }\n\n    draw (container) {\n        this.renderMatrix(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(TOP);\n        this.className(params.config.className);\n    }\n}\n","import { selectElement, getEvent } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport MatrixComponent from './matrix-component';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\nimport { WHEEL_DELTA_MODIFIER } from '../../enums/constants';\n\n/**\n * Based on the type of scroll, it changes the scrollLeft/scrollTop property of the specific\n * elements based on the scroll distance provided\n *\n *\n */\nconst applyScrollAction = (elem, classPrefix, scollDistance, type) => {\n    selectElement(elem)\n                    .selectAll(`.${classPrefix}-grid`)\n                    .property(type, scollDistance);\n};\n\n/**\n * Applies the action of the scroll by actually scrolling the respective matrices based on the\n * type of scroll. It returns a function which has both the scroll methods available\n *\n * @return {Object} contains the horizontal and vertical scroll actions on the grid component\n */\nconst scrollActionApplier = (movement, context) => {\n    const classPrefix = context.params.config.classPrefix;\n\n    return {\n        horizontal: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[e][1].renderAt()}`, classPrefix, movement, 'scrollLeft'));\n        },\n        vertical: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[1][e].renderAt()}`, classPrefix, movement, 'scrollTop'));\n        }\n    };\n};\n\nexport default class GridComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.gridComponents = [];\n        this.setParams(params);\n    }\n\n    sanitizeGrid () {\n        let height = 0;\n        let width = 0;\n        const { viewMatricesInfo, layoutDimensions } = this.component.viewInfo();\n        const scrollInfo = this.component.scrollInfo();\n        const {\n            viewHeight,\n            viewWidth,\n            unitHeights,\n            unitWidths\n        } = layoutDimensions;\n\n        for (let i = 0; i < 3; i++) {\n            if (!(this.gridComponents.length && this.gridComponents[i] instanceof Array)) {\n                this.gridComponents[i] = [];\n            }\n            for (let j = 0; j < 3; j++) {\n                const matrixDim = {\n                    height: viewHeight[i],\n                    width: viewWidth[j],\n                    unitHeights,\n                    unitWidths\n                };\n                const matrix = viewMatricesInfo.matrices[`${ROW_MATRIX_INDEX[i]}`][j];\n                const matrixName = `${ROW_MATRIX_INDEX[i]}-${COLUMN_MATRIX_INDEX[j]}`;\n                const matrixConfig = {\n                    dimensions: matrixDim,\n                    border: layoutDimensions.border,\n                    classPrefix: this.params.config.classPrefix,\n                    scrollInfo,\n                    row: ROW_MATRIX_INDEX[i],\n                    column: j\n                };\n                if (this.gridComponents[i][j] instanceof MuzeComponent) {\n                    this.gridComponents[i][j].updateWrapper({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                } else {\n                    const matrixWrapper = new MatrixComponent({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                    this.gridComponents[i].push(matrixWrapper);\n                }\n                if (i === 0) {\n                    width += matrixDim.width;\n                }\n                if (j === 0) {\n                    height += matrixDim.height;\n                }\n            }\n        }\n        this.boundBox({ height, width });\n\n        this.component = this.gridComponents;\n        this.allComponents = this.gridComponents;\n    }\n\n    scrollBarManager (...manager) {\n        if (manager.length) {\n            this._scrollBarManager = manager[0];\n            return this;\n        }\n        return this._scrollBarManager;\n    }\n\n    /**\n     * Attaches a mousewheel listener to the center matrix, based on which the scrolling can occur.\n     * It uses the scroll component to change the position of the scroller, which ultimately scrolls the center matrix\n     *\n     *\n     * @return {GridComponent} Instance of the GridComponent\n     */\n    attachScrollListener () {\n        const scrollBarManager = this.scrollBarManager();\n        selectElement(`#${this.component[1][1].renderAt()}`)\n            .on('wheel', () => {\n                const event = getEvent();\n                const {\n                    wheelDeltaX,\n                    wheelDeltaY\n                } = event;\n\n                // Scrolling horizontally\n                if (wheelDeltaX !== 0 && Math.abs(wheelDeltaX) > Math.abs(wheelDeltaY)) {\n                    scrollBarManager.preventBrowserScroll('horizontal', event)\n                        .triggerScrollBarAction('horizontal', wheelDeltaX / WHEEL_DELTA_MODIFIER);\n                }\n\n                // Scrolling Vertically\n                if (wheelDeltaY !== 0 && Math.abs(wheelDeltaX) < Math.abs(wheelDeltaY)) {\n                    scrollBarManager.preventBrowserScroll('vertical', event)\n                        .triggerScrollBarAction('vertical', wheelDeltaY / WHEEL_DELTA_MODIFIER);\n                }\n            });\n        return this;\n    }\n\n    performScrollAction (direction, movedView) {\n        scrollActionApplier(movedView, this)[direction]();\n        return this;\n    }\n\n    getBoundBox () {\n        const { top, left } = this.component[0][0].boundBox();\n        const { height, width } = this.boundBox();\n\n        return {\n            top,\n            left,\n            height,\n            width\n        };\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.className(params.config.className);\n        this.sanitizeGrid();\n        return this;\n    }\n\n    attachListener () {\n        this.attachScrollListener();\n        return this;\n    }\n}\n","export const SIDE_EFFECT_COMMON = 'common';\nexport const SIDE_EFFECT_INDIVIDUAL = 'individual';\nexport const TOOLTIP_CONSOLIDATED = 'consolidated';\nexport const TOOLTIP_FRAGMENTED = 'fragmented';\nexport const WHEEL_DELTA_MODIFIER = 30;\n","import { selectElement, makeElement, applyStyle } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\n\nexport default class MessageComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.setParams(params);\n    }\n\n    render (container) {\n        const parent = selectElement(container);\n\n        const { config } = this.params;\n        const { className } = config.classPrefix;\n\n        const node = makeElement(parent, 'div', [1], className);\n        const { height, width } = config.dimensions;\n        const { message } = config;\n\n        applyStyle(node, { width: `${width}px`, height: `${height}px` });\n\n        const child = makeElement(node, 'div', [1], `${className}-child`);\n        const textElement = makeElement(child, 'text', [1]);\n\n        textElement.html(message);\n    }\n\n    draw (container) {\n        this.render(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        const { target, className } = params.config;\n        this.component = params.component;\n        this.params = params;\n        this.target(target);\n        this.className(className);\n        this.position(params.config.position);\n        return this;\n    }\n}\n","import {\n    TITLE,\n    SUB_TITLE,\n    LEGEND, VERTICAL,\n    HORIZONTAL,\n    WIDTH,\n    HEIGHT,\n    TOP,\n    LEFT,\n    RIGHT,\n    MESSAGE,\n    GRID,\n    NO_DATA_MESSAGE,\n    HORIZONTAL_CENTER\n} from '../constants';\nimport HeaderComponent from './components/headerComponent';\nimport LegendComponent from './components/legendComponent';\nimport ScrollComponent from './components/scroll-component';\nimport GridComponent from './components/grid-component';\nimport MessageComponent from './components/message-component';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG, CANVAS, MESSAGE_CONFIG } from './defaults';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, CENTER } from '../../../layout/src/enums/constants';\n\n// Mapping between types of headers and their required configs for wrapper creation\nconst headerMap = {\n    title: {\n        headerCell: 'titleCell',\n        configType: TITLE_CONFIG\n    },\n    subtitle: {\n        headerCell: 'subtitleCell',\n        configType: SUB_TITLE_CONFIG\n    }\n};\n\n// Mapping of header alignment values\nconst headerAlignmentMap = {\n    [LEFT]: LEFT,\n    [RIGHT]: RIGHT,\n    [CENTER]: HORIZONTAL_CENTER\n};\n\n/**\n * returns if data is Valid\n *\n *\n * @param {Object} params object where data has to be checked for validity\n * @return {Boolean} Returns true if all of the params are valid\n */\nconst checkParamsValidation = params => Object.keys(params).every((param => params[param]));\n\n/**\n * returns if message Component is needed or not\n *\n *\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Boolean} Returns if grid is present\n */\nconst isGridPresent = (renderDetails) => {\n    const { rows, columns, values } = renderDetails.components;\n    return checkParamsValidation({ rows, columns, values });\n};\n\n/**\n * Creates the wrapper for the header, i.e., title and subtitle to be used in the tree layout\n *\n *\n * @param {string} headerType type of header: title/subtite\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createHeaderWrapper = (headerType, layoutManager, renderDetails) => {\n    let wrapper = null;\n\n    const { components, layoutConfig } = renderDetails;\n    const { headerCell, configType } = headerMap[headerType];\n    const target = { target: CANVAS };\n\n    if (components.headers && components.headers[headerCell]) {\n        let headerConfig = layoutConfig[headerType];\n        const header = components.headers[headerCell];\n\n        headerConfig = Object.assign({}, headerConfig, {\n            classPrefix: layoutConfig.classPrefix,\n            ...target,\n            alignWith: `${ROW_MATRIX_INDEX[0]}-${COLUMN_MATRIX_INDEX[1]}`,\n            alignment: headerAlignmentMap[headerConfig.align],\n            className: configType.className\n        });\n\n        const wrapperParams = {\n            name: headerType,\n            component: header,\n            config: headerConfig\n        };\n\n        const existingComponent = layoutManager.getComponent(headerType);\n        if (existingComponent) {\n            wrapper = existingComponent\n                        .updateWrapper(wrapperParams);\n        } else {\n            wrapper = new HeaderComponent(wrapperParams);\n        }\n    }\n    return wrapper;\n};\n\n/**\n * Creates the wrapper for the grid layout to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {GridLayout} canvas canvas instance\n * @return {Instance} Returns the respective wrappers\n */\nconst createMessageWrapper = (layoutManager, canvas, renderDetails, renderGrid) => {\n    const headerValues = Object.values(renderDetails.components.headers);\n    let sum = 0;\n    let messageWrapper = null;\n\n    for (const val of headerValues) {\n        sum += val.logicalSpace().height;\n    }\n\n    if (!renderGrid) {\n        const defaultDimensions = { height: canvas.height() - sum, width: canvas.width() };\n        const gridComponent = layoutManager.getComponent(GRID);\n        const { height, width } = (gridComponent && gridComponent.getBoundBox()) || defaultDimensions;\n        const target = { target: CANVAS };\n        const config = {\n            ...target,\n            dimensions: { height, width },\n            message: NO_DATA_MESSAGE,\n            classPrefix: MESSAGE_CONFIG,\n            position: TOP\n        };\n        const wrapperParams = {\n            name: MESSAGE,\n            component: null,\n            config\n        };\n        const existingComponent = layoutManager.getComponent(MESSAGE);\n\n        if (existingComponent) {\n            messageWrapper = existingComponent.updateWrapper(wrapperParams);\n        } else {\n            messageWrapper = new MessageComponent(wrapperParams);\n        }\n        return messageWrapper;\n    }\n    return null;\n};\n\n// Mapping between types of scrollBars and their required configs for wrapper creation\nconst scrollBarMap = config => ({\n    vertical: {\n        componentName: 'verticalScrollBar',\n        width: 'thickness',\n        height: 'layoutBasedMeasure',\n        layoutBasedMeasure: HEIGHT,\n        viewMeasure: 'viewHeight',\n        rowAlign: 1,\n        colAlign: config.align === 'right' ? 2 : 0,\n        position: config.align,\n        alignment: TOP\n    },\n    horizontal: {\n        componentName: 'horizontalScrollBar',\n        width: 'layoutBasedMeasure',\n        layoutBasedMeasure: WIDTH,\n        viewMeasure: 'viewWidth',\n        height: 'thickness',\n        rowAlign: config.align === 'top' ? 0 : 2,\n        colAlign: 1,\n        position: config.align,\n        alignment: LEFT\n    }\n});\n\n/**\n * Creates the wrapper for the scroller, i.e., horizontal and vertical to be used in the tree layout\n *\n *\n * @param {string} scrollBarType type of scrollbar: horizontal/vertical\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst createScrollBarWrapper = (scrollBarType, layoutManager, renderDetails, grid, renderGrid) => {\n    if (renderGrid) {\n        let scrollBarWrapper = null;\n        const { layoutConfig } = renderDetails;\n        const target = { target: CANVAS };\n        const { scrollBar } = layoutConfig;\n        const { layoutDimensions } = grid.viewInfo();\n        const {\n            actualCenterMeasures,\n            unitHeights,\n            unitWidths\n        } = layoutDimensions;\n        const {\n            componentName, layoutBasedMeasure, width, height, rowAlign, colAlign,\n            viewMeasure, position, alignment\n        } = scrollBarMap(scrollBar[scrollBarType])[scrollBarType];\n        const dimensions = {\n            thickness: scrollBar.thickness,\n            layoutBasedMeasure: layoutDimensions[viewMeasure][1]\n        };\n        const isScroll = grid.scrollInfo()[scrollBarType];\n        const totalLength = actualCenterMeasures[layoutBasedMeasure];\n        const viewLength = layoutDimensions[viewMeasure][1];\n\n        const scrollConfig = Object.assign({}, {\n            classPrefix: layoutConfig.classPrefix,\n            ...target,\n            scrollBarComponentConfig: {\n                ...scrollBar,\n                classPrefix: layoutConfig.classPrefix\n            },\n\n            type: scrollBarType,\n            alignWith: `${ROW_MATRIX_INDEX[rowAlign]}-${COLUMN_MATRIX_INDEX[colAlign]}`,\n            alignment,\n            position\n        });\n\n        const wrapperParams = {\n            name: componentName,\n            config: scrollConfig,\n            dimensions: {\n                width: dimensions[width],\n                height: dimensions[height],\n                totalLength,\n                viewLength,\n                unitHeights,\n                unitWidths\n            }\n        };\n\n        const existingComponent = layoutManager.getComponent(componentName);\n\n        if (!isScroll) {\n            existingComponent && existingComponent.remove();\n            return null;\n        }\n\n        if (existingComponent) {\n            scrollBarWrapper = existingComponent\n                                    .updateWrapper(wrapperParams);\n        } else {\n            scrollBarWrapper = new ScrollComponent(wrapperParams);\n        }\n\n        return scrollBarWrapper;\n    }\n    return null;\n};\n\n/**\n * Creates the wrapper for the legend to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createLegendWrapper = (layoutManager, renderDetails, renderGrid) => {\n    if (renderGrid) {\n        let legendWrapper = null;\n        const { components, layoutConfig, measurement } = renderDetails;\n        const target = { target: CANVAS };\n\n        if (components.legends && components.legends.length) {\n            const legendConfig = { ...layoutConfig.legend, ...target, measurement };\n            const wrapperParams = {\n                name: LEGEND,\n                component: components.legends,\n                config: legendConfig\n            };\n\n            const existingComponent = layoutManager.getComponent(LEGEND);\n\n            if (existingComponent) {\n                legendWrapper = existingComponent\n                        .updateWrapper(wrapperParams);\n            } else {\n                legendWrapper = new LegendComponent(wrapperParams);\n            }\n        }\n        return legendWrapper;\n    }\n    return null;\n};\n\n/**\n * Creates the wrapper for the grid layout to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst gridLayoutWrapper = (layoutManager, renderDetails, grid, renderGrid) => {\n    if (renderGrid) {\n        let gridWrapper = null;\n        const target = { target: CANVAS };\n        const { layoutConfig } = renderDetails;\n\n        const config = {\n            ...target,\n            pagination: layoutConfig.pagination,\n            classPrefix: layoutConfig.classPrefix,\n            dimensions: { height: 0, width: 0 }\n        };\n        const wrapperParams = {\n            name: GRID,\n            component: grid,\n            config\n        };\n        const existingComponent = layoutManager.getComponent(GRID);\n        if (existingComponent) {\n            gridWrapper = existingComponent\n                        .updateWrapper(wrapperParams);\n        } else {\n            gridWrapper = new GridComponent(wrapperParams);\n        }\n        return gridWrapper;\n    }\n    return null;\n};\n/**\n * Responsible for providing the wrapper creators for every component in Muze.\n * This function, when called, returns the set of components and their respective wrappers.\n *\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {GridLayout} grid Instance of the grid layout\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers for each component\n */\nexport const componentWrapperMaker = (canvas, grid, renderDetails) => {\n    const layoutManager = canvas._layoutManager;\n    const renderGrid = isGridPresent(renderDetails);\n    return {\n        title: createHeaderWrapper(TITLE, layoutManager, renderDetails),\n        subtitle: createHeaderWrapper(SUB_TITLE, layoutManager, renderDetails),\n        message: createMessageWrapper(layoutManager, canvas, renderDetails, renderGrid),\n        legend: createLegendWrapper(layoutManager, renderDetails, renderGrid),\n        grid: gridLayoutWrapper(layoutManager, renderDetails, grid, renderGrid),\n        verticalScrollBar: createScrollBarWrapper(VERTICAL, layoutManager, renderDetails, grid, renderGrid),\n        horizontalScrollBar: createScrollBarWrapper(HORIZONTAL, layoutManager, renderDetails, grid, renderGrid)\n    };\n};\n","export class ScrollManager {\n\n    constructor () {\n        this._scrollBarComponents = {};\n        this._attachedComponents = {};\n    }\n\n    scrollBarComponents (...sbc) {\n        if (sbc.length) {\n            this._scrollBarComponents = sbc[0];\n            return this;\n        }\n        return this._scrollBarComponents;\n    }\n\n    attachedComponents (...abc) {\n        if (abc.length) {\n            this._attachedComponents = abc[0];\n            return this;\n        }\n        return this._attachedComponents;\n    }\n\n    preventBrowserScroll (type, event) {\n        if (this.scrollBarComponents()[type]) {\n        // Prevent default behaviour and stop propagating\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        return this;\n    }\n\n    performAttachedScrollFunction (type, movedViewLength) {\n        Object.values(this.attachedComponents()).forEach((e) => {\n            e.performScrollAction(type, movedViewLength);\n        });\n        return this;\n    }\n\n    triggerScrollBarAction (type, delta) {\n        this.scrollBarComponents()[type] && this.scrollBarComponents()[type].scrollDeltaTo(delta);\n        return this;\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\nimport { arrangeComponents } from './component-resolver';\nimport { createHeaders } from './title-maker';\nimport { createLegend, getLegendSpace } from './legend-maker';\nimport { componentWrapperMaker } from './component-wrapper-maker';\nimport {\n    TOP,\n    BOTTOM,\n    LEFT,\n    RIGHT,\n    TITLE,\n    SUB_TITLE,\n    LEGEND,\n    VERTICAL_SCROLL_BAR,\n    HORIZONTAL_SCROLL_BAR,\n    GRID,\n    MESSAGE\n} from '../constants';\nimport { ScrollManager } from './scroll-manager';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const prepareLayout = (layout, renderDetails) => {\n    const { components, layoutConfig, measurement } = renderDetails;\n    const {\n        rows,\n        columns,\n        values,\n        cornerMatrices\n    } = components;\n    const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n    } = cornerMatrices;\n    if (rows && columns) {\n        layout.measurement(measurement)\n                        .config(layoutConfig)\n                        .matrices({\n                            top: [topLeft, columns[0], topRight],\n                            center: [rows[0], values, rows[1]],\n                            bottom: [bottomLeft, columns[1], bottomRight]\n                        })\n                        .triggerReflow();\n    }\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} mount\n *\n */\nexport const getRenderDetails = (context, mount) => {\n    let layoutConfig = mergeRecursive({}, context.config());\n    // Get height width of the mount point\n    let { height, width } = mount.getBoundingClientRect();\n    const heightAttr = context.height();\n    const widthAttr = context.width();\n    const visGroup = context.composition().visualGroup;\n    const {\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority,\n        rows,\n        columns,\n        values\n    } = visGroup.placeholderInfo();\n    const {\n        minWidth,\n        minHeight,\n        classPrefix,\n        showHeaders,\n        legend,\n        pagination,\n        scrollBar\n    } = context.config();\n\n    // Get title configuration\n    const titleConfig = context.title()[1];\n     // Get subtitle configuration\n    const subtitleConfig = context.subtitle()[1];\n    // Get legend position\n    const legendPosition = legend.position;\n    // Arrange components according to config\n    const layoutArrangement = arrangeComponents(context);\n\n    height = Math.floor(height);\n    width = Math.floor(width);\n\n    const availableHeightForCanvas = Math.max(heightAttr > 0 ? heightAttr : height, minHeight);\n    const availableWidthForCanvas = Math.max(widthAttr > 0 ? widthAttr : width, minWidth);\n\n    // Create headers and determine header height\n    const { headers, headerHeight } = createHeaders(context, availableHeightForCanvas, availableWidthForCanvas);\n\n    // Create legends and determine legend space\n    const legends = createLegend(context, headerHeight, availableHeightForCanvas, availableWidthForCanvas);\n    context._composition.legend = {};\n    legends.forEach((e) => {\n        context._composition.legend[e.scaleType] = e.legend;\n    });\n\n    const legendSpace = getLegendSpace(legends, legend, availableHeightForCanvas, availableWidthForCanvas);\n    const legendWidth = (legendPosition === LEFT || legendPosition === RIGHT) ? legendSpace.width : 0;\n    const legendHeight = (legendPosition === TOP || legendPosition === BOTTOM) ? legendSpace.height : 0;\n\n    // Set components for layouting\n    const components = {\n        headers,\n        legends,\n        canvases: [context],\n        rows,\n        columns,\n        values,\n        cornerMatrices: visGroup.cornerMatrices()\n    };\n\n    const measurement = {\n        mountSpace: {\n            height,\n            width\n        },\n        headerHeight,\n        legendSpace,\n        canvasWidth: availableWidthForCanvas,\n        canvasHeight: availableHeightForCanvas,\n        width: availableWidthForCanvas - legendWidth,\n        height: availableHeightForCanvas - headerHeight - legendHeight,\n        minUnitHeight: context.minUnitHeight(),\n        minUnitWidth: context.minUnitWidth()\n    };\n    layoutConfig = mergeRecursive(layoutConfig, {\n        classPrefix,\n        showHeaders,\n        border: mergeRecursive(visGroup.metaData().border, context.config().border),\n        layoutArrangement,\n        legend,\n        buffer: scrollBar.thickness,\n        pagination,\n        title: titleConfig,\n        subtitle: subtitleConfig,\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        mount,\n        priority\n    });\n    return {\n        layoutConfig,\n        components,\n        measurement\n    };\n};\n\nconst componentIndexes = {\n    title: 0,\n    subtitle: 1,\n    legend: 2,\n    verticalScrollBar: 3,\n    horizontalScrollBar: 4,\n    grid: 5,\n    message: 6\n};\n\nconst componentNames = {\n    0: TITLE,\n    1: SUB_TITLE,\n    2: LEGEND,\n    3: VERTICAL_SCROLL_BAR,\n    4: HORIZONTAL_SCROLL_BAR,\n    5: GRID,\n    6: MESSAGE\n};\n\nconst attachListeners = (componentWrappers) => {\n    componentWrappers.forEach((componentWrapper) => {\n        if (componentWrapper) {\n            componentWrapper.attachListener();\n        }\n    });\n};\n\n/**\n * Responsible for creating a scroll manager that manages interactions between the grid\n * component and the scroll bar components\n *\n * @param {Array} componentWrappers Contains the wrappers for all the components\n * @param {Canvas} canvas Instance of the current canvas\n * @return {Array} Positions of units either horizontal or vertical\n */\nconst createScrollManager = (componentWrappers, canvas) => {\n    const {\n        horizontalScrollBar,\n        verticalScrollBar,\n        grid\n    } = componentIndexes;\n\n    const horizontalScrollWrapper = componentWrappers[horizontalScrollBar];\n    const verticalScrollWrapper = componentWrappers[verticalScrollBar];\n    const gridWrapper = componentWrappers[grid];\n    const scrollBarManager = new ScrollManager();\n    const scrollBarComponents = {};\n\n    verticalScrollWrapper && (scrollBarComponents.vertical = verticalScrollWrapper);\n    horizontalScrollWrapper && (scrollBarComponents.horizontal = horizontalScrollWrapper);\n\n    scrollBarManager\n                    .scrollBarComponents(scrollBarComponents)\n                    .attachedComponents({\n                        grid: gridWrapper\n                    });\n    canvas.composition().hScrollBar = horizontalScrollWrapper;\n    canvas.composition().vScrollBar = verticalScrollWrapper;\n\n    [horizontalScrollWrapper, verticalScrollWrapper].forEach((wrapper) => {\n        wrapper && wrapper.manager(scrollBarManager);\n    });\n\n    gridWrapper.scrollBarManager(scrollBarManager);\n};\n\nexport const renderLayout = (canvas, renderDetails) => {\n    const layoutManager = canvas._layoutManager;\n    const gridLayout = canvas.layout();\n    const {\n\n        grid\n    } = componentIndexes;\n\n    // Get the component wrappers\n    const compWrappers = componentWrapperMaker(canvas, gridLayout, renderDetails);\n    const componentWrappers = Object.keys(componentIndexes).map(e => compWrappers[e]);\n    const gridWrapper = componentWrappers[grid];\n    if (gridWrapper) {\n        createScrollManager(componentWrappers, canvas);\n    }\n\n    componentWrappers.forEach((componentWrapper, index) => {\n        if (!componentWrapper) {\n            const deleteElementName = componentNames[index];\n            layoutManager.removeComponent(deleteElementName);\n        }\n    });\n    layoutManager.registerComponents(componentWrappers).compute();\n    attachListeners(componentWrappers);\n};\n","import {\n    getDataModelFromIdentifiers,\n    FieldType,\n    mergeRecursive,\n    isSimpleObject,\n    CommonProps\n} from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\n\nimport { applyInteractionPolicy } from '../helper';\n\nconst defaultInteractionPolicy = (valueMatrix, firebolt) => {\n    const isMeasure = field => field.type() === FieldType.MEASURE;\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    const xFields = [].concat(...visualGroup.getFieldsFromChannel('x'));\n    const yFields = [].concat(...visualGroup.getFieldsFromChannel('y'));\n    const colDim = xFields.every(field => field.type() === FieldType.DIMENSION);\n    const fieldInf = visualGroup.resolver().getAllFields();\n    const rowFacets = fieldInf.rowFacets;\n    const colFacets = fieldInf.colFacets;\n    valueMatrix.each((cell) => {\n        const unitFireBolt = cell.valueOf().firebolt();\n        if (!(xFields.every(isMeasure) && yFields.every(isMeasure))) {\n            const facetFields = cell.valueOf().facetByFields()[0];\n            const unitColFacets = facetFields.filter(d => colFacets.findIndex(v => v.equals(d)) !== -1);\n            const unitRowFacets = facetFields.filter(d => rowFacets.findIndex(v => v.equals(d)) !== -1);\n            let propFields;\n            if (colDim) {\n                propFields = unitColFacets.map(d => `${d}`);\n            } else {\n                propFields = unitRowFacets.map(d => `${d}`);\n            }\n\n            unitFireBolt.propagateWith('*', propFields, true);\n        }\n    });\n};\n\nconst defaultCrossInteractionPolicy = {\n    behaviours: {\n        '*': (propagationPayload, context) => {\n            const propagationCanvasAlias = propagationPayload.sourceCanvas;\n            const canvasAlias = context.parentAlias();\n            return propagationCanvasAlias ? canvasAlias === propagationCanvasAlias : true;\n        }\n    },\n    sideEffects: {\n        tooltip: (propagationPayload, context) => {\n            const propagationUnit = propagationPayload.sourceUnit;\n            const propagationCanvas = propagationPayload.sourceCanvas;\n            const unitId = context.id();\n            const canvasAlias = context.parentAlias();\n            if (propagationCanvas) {\n                return propagationCanvas !== canvasAlias ? true : unitId === propagationUnit;\n            }\n            return true;\n        },\n        selectionBox: () => false\n    }\n};\n\n/**\n * This class is responsible for dispatching any behavioural action to all the visual units housed by the canvas.\n * It is created by {@link Canvas}. This class does not handle any physical actions. Physical actions get triggered\n * in {@link VisualUnit} which is managed by it's own firebolt instance. The firebolt instance of canvas only\n * propagates the action to all the visual units in it's composition.\n *\n * To get the firebolt instance of {@link Canvas}\n * ```\n *  const firebolt = canvas.firebolt();\n * ```\n *\n * @class GroupFireBolt\n * @public\n */\nexport default class GroupFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this._interactionPolicy = this.constructor.defaultInteractionPolicy();\n        this.crossInteractionPolicy(this.constructor.defaultCrossInteractionPolicy());\n    }\n\n    static defaultInteractionPolicy () {\n        return defaultInteractionPolicy;\n    }\n\n    static defaultCrossInteractionPolicy () {\n        return defaultCrossInteractionPolicy;\n    }\n\n    interactionPolicy (...policy) {\n        if (policy.length) {\n            this._interactionPolicy = policy[0] || this.constructor.defaultInteractionPolicy();\n            return this;\n        }\n        return this._interactionPolicy;\n    }\n\n    crossInteractionPolicy (...policy) {\n        if (policy.length) {\n            this._crossInteractionPolicy = mergeRecursive(mergeRecursive({},\n                this.constructor.defaultCrossInteractionPolicy()), policy[0] || {});\n            const context = this.context;\n            applyInteractionPolicy(this);\n            context._throwback.registerImmediateListener([CommonProps.MATRIX_CREATED], () => {\n                applyInteractionPolicy(this);\n            });\n            return this;\n        }\n        return this._crossInteractionPolicy;\n    }\n\n    /**\n     * Dispatches a behavioural action with a payload. It takes the name of the behavioural action and a payload\n     * object which contains the criteria aend an array of side effects which determines what side effects are\n     * going to be shown in each visual unit of the canvas. It prepares the datamodel from the given criteria\n     * and initiates a propagation from the datamodel of canvas. Then all the visual units of canvas which listens\n     * to the propagation gets informed on which rows got selected and dispatches the behavioural action sent during\n     * propagation.\n     *\n     * To dispatch a behavioural action on the canvas\n     * ```\n     *  // Get the firebolt instance of the canvas\n     *  const firebolt = canvas.firebolt();\n     *  // Dispatch a brush behaviour\n     *  firebolt.dispatchBehaviour('brush', {\n     *      // Selects all the rows with Horsepower having range between 100 and 200.\n     *      criteria: {\n     *          Horsepower: [100, 200]\n     *      }\n     *  });\n     * // On dispatch of this behavioural action, a selection box gets created and plots gets faded out which are the\n     * // default side effects mapped to this behavioural action.\n     * ```\n     *\n     * ```\n     * Additionally, it can also be passed an array of side effects in the payload.\n     *  // Dispatch a select behaviour with only crossline as side effect.\n     *  firebolt.dispatchBehaviour('select', {\n     *      criteria: {\n     *          Cylinders: ['8']\n     *      },\n     *      sideEffects: ['crossline']\n     *  });\n     * ```\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of the behavioural action\n     * @param {Object} payload Object which contains the interaction information.\n     * @param {Object | Array.<Array>} payload.criteria Identifiers by which the selection happens.\n     * @param {Array.<string|Object>} payload.sideEffects Side effects which needs to be shown.\n     *\n     * @return {GroupFireBolt} Instance of firebolt.\n     */\n    dispatchBehaviour (behaviour, payload) {\n        const propPayload = Object.assign(payload);\n        const criteria = propPayload.criteria;\n        const data = this.context.composition().visualGroup.getGroupByData();\n        const fieldsConfig = data.getFieldsConfig();\n        const model = getDataModelFromIdentifiers(data, criteria);\n        const behaviouralAction = this._actions.behavioural[behaviour];\n\n        if (behaviouralAction) {\n            const fields = isSimpleObject(criteria) ? Object.keys(criteria) : (criteria ? criteria[0] : []);\n            const validFields = fields.filter(field => field in fieldsConfig);\n            const mutates = behaviouralAction.constructor.mutates();\n            const propConfig = {\n                payload: propPayload,\n                action: behaviour,\n                criteria: model,\n                sourceId: this.context.alias(),\n                isMutableAction: mutates,\n                propagateInterpolatedValues: validFields.every(field => fieldsConfig[field].def.type ===\n                    FieldType.MEASURE)\n            };\n            data.propagate(model, propConfig, true);\n        }\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        return this;\n    }\n}\n","import GroupFireBolt from './group-firebolt';\n\nexport default GroupFireBolt;\n","export const APP_INITIAL_STATE = {\n    app: {\n        group: {},\n        units: {},\n        layers: {},\n        canvas: {}\n    },\n    local: {\n        canvas: {},\n        group: {},\n        units: {},\n        layers: {}\n    }\n};\n\n","import { GridLayout } from '@chartshq/layout';\nimport { transactor, Store, getUniqueId, selectElement, STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { RETINAL } from '../constants';\nimport TransactionSupport from '../transaction-support';\nimport { getRenderDetails, prepareLayout, renderLayout } from './layout-maker';\nimport { localOptions, canvasOptions } from './local-options';\nimport GroupFireBolt from './firebolt';\nimport options from '../options';\nimport { APP_INITIAL_STATE } from './app-state';\nimport { initCanvas,\n        setupChangeListener,\n        setLabelRotationForAxes,\n        createGroupState,\n        createLayoutManager,\n        setLayoutInfForUnits\n} from './helper';\n/**\n * Canvas is a logical component which houses a visualization by taking multiple variable in different encoding channel.\n * Canvas manages lifecycle of many other logical component and exposes one consistent interface for creation of chart.\n * Canvas is intialized from environment with settings from environment and singleton dependencies.\n *\n * To create an instance of canvas\n * ```\n *  const env = Muze();\n *  const canvas = env.canvas()\n * ```\n *\n *\n * @class\n * @public\n * @module Canvas\n */\nexport default class Canvas extends TransactionSupport {\n\n    /**\n     * Creates reactive property accessors.\n     * - data\n     * - height\n     * - width\n     * - config\n     * This configs are retrieved from options.\n     */\n    constructor (globalDependencies) {\n        super();\n\n        this._allOptions = Object.assign({}, options, localOptions);\n        this._registry = {};\n        this._composition = {};\n        this._cachedProps = {};\n        this._alias = null;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        this._composition.layout = new GridLayout();\n        this._store = new Store(APP_INITIAL_STATE);\n\n        this._throwback = new Store({\n            [CommonProps.MATRIX_CREATED]: false,\n            [CommonProps.ON_LAYER_DRAW]: null\n        });\n\n        // Setters and getters will be mounted on this. The object will be mutated.\n        const namespace = STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE;\n        const allOptions = Object.assign({}, options, localOptions, canvasOptions);\n\n        transactor(this, allOptions, this._store, {\n            namespace\n        });\n\n        this.dependencies(Object.assign({}, globalDependencies, this._dependencies));\n        this.firebolt(new GroupFireBolt(this, {\n            behavioural: behaviouralActions,\n            physical: physicalActions,\n            physicalBehaviouralMap: {}\n        }, sideEffects, behaviourEffectMap));\n        this.alias(`canvas-${getUniqueId()}`);\n        this.title('', {});\n        this.subtitle('', {});\n        this.legend({});\n        this.color({});\n        this.shape({});\n        this.size({});\n        setupChangeListener(this);\n         // init layoutManager\n        this._layoutManager = createLayoutManager();\n    }\n\n    /**\n     * Retrieves an instance of layout which is responsible for layouting. Layout is responsible for creating faceted\n     * presentation using table layout.\n     *\n     * @public\n     *\n     * @return {GridLayout} Instance of layout attached to canvas.\n     */\n    layout (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().layout;\n    }\n\n    /**\n     * Retrieves the composition for a canvas\n     *\n     * @public\n     *\n     * @return {object} Instances of the components which canvas requires to draw the full visualization.\n     *      ```\n     *          {\n     *              layout: // Instance of {@link GridLayout}\n     *              legend: // Instance of {@link Legend}\n     *              subtitle: // Instance of {@link TextCell} using which the title is rendered\n     *              title: // Instance of {@link TextCell} using which the title is rendered\n     *              visualGroup: // Instance of {@link visualGroup}\n     *          }\n     *      ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Sets or gets the alias of the canvas. Alias is a name by which the canvas can be referred.\n     *\n     * When setter\n     * @param {string} alias Name of the alias.\n     *\n     * @return {Canvas} Instance of the canvas.\n     *\n     * When getter\n     *\n     * @return {string} Alias of canvas.\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            const visualGroup = this.composition().visualGroup;\n            this._alias = params[0];\n            visualGroup && visualGroup.alias(this.alias());\n            return this;\n        }\n        return this._alias;\n    }\n\n    /**\n     * Creates an instance initiated with given settings.\n     *\n     * @param {Object} initialSettings Initial settings to be populated in the model\n     * @param {Object} regEntry newly created instance with the initial settings\n     * @param {Object} globalDependencies dependencies which will be created only once in the page\n     *\n     * @return {Object} newly created instance with the initial settings\n     */\n    static withSettings (initialSettings, regEntry, globalDependencies) {\n        const instance = new Canvas(globalDependencies);\n\n        for (const key in initialSettings) {\n            instance[key](initialSettings[key]);\n        }\n        // set registry for instance\n        instance.registry(regEntry);\n        return instance;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof Canvas\n     */\n    static formalName () {\n        return 'canvas';\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this canvas. The firebolt instance can be used to dispatch a\n     * behaviour dynamically on the canvas. This firebolt does not handle any physical actions. It is just used to\n     * propagate the action to all the visual units in it's composition.\n     *\n     * @public\n     *\n     * @return {GroupFireBolt} Instance of firebolt associated with canvas.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Registry peoperty accessor\n     *\n     * @param {Object} reg plain old javascript object keyvalue pairs. Key containing module name and value contains\n     * module definition class. The reg object has to be flat object of level 1.\n     */\n    registry (...params) {\n        if (params.length) {\n            const components = Object.assign({}, params[0].components);\n            const componentSubRegistry = Object.assign({}, params[0].componentSubRegistry);\n\n            this._registry = { components, componentSubRegistry };\n            const initedComponents = initCanvas(this);\n            // @todo is it okay to continue this tight behaviour? If not use a resolver to resolve diff component type.\n            this._composition.visualGroup = initedComponents[0];\n            createGroupState(this);\n            this.composition().visualGroup.alias(this.alias()).store(this._store);\n            return this;\n        }\n        return this._registry;\n    }\n\n    /*\n     * Prepare dependencies for top level elements\n     */\n    dependencies (...param) {\n        if (param.length) {\n            this._dependencies = param[0];\n            return this;\n        }\n        // @todo prepare dependencies here.\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     * @param {*} lifeCycles\n     *\n     * @memberof Canvas\n     */\n    lifeCycle (lifeCycles) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        if (lifeCycles) {\n            lifeCycleManager.register(lifeCycles);\n            return this;\n        }\n        return lifeCycleManager;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof Canvas\n     */\n    legend (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().legend;\n    }\n\n    /**\n     * Returns a promise for various {@link LifecycleEvents} of the various components of canvas. The promise gets\n     * resolved once the particular event gets completed.\n     *\n     * To use this,\n     * ```\n     *      canvas.once('layer.drawn').then(() => {\n     *          // Do any post drawing work here.\n     *      });\n     * ```\n     * @public\n     *\n     * @param {string} eventName Name of the lifecycle event.\n     *\n     * @return {Promise} A pending promise waiting for resolve to be called.\n     */\n    once (eventName) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        return lifeCycleManager.retrieve(eventName);\n    }\n\n    /**\n     * Internal function to trigger render, this method is cognizant of all the properties of the core modules and\n     * establish a passive reactivity. Passive reactivity is not always a bad thing :)\n     * @internal\n     */\n    render () {\n        const mount = this.mount();\n        // removeChild(mount);\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        // Get render details including arrangement and measurement\n        const renderDetails = getRenderDetails(this, mount);\n        lifeCycleManager.notify({ client: this, action: 'beforedraw' });\n        // Prepare the layout by triggering the matrix calculation\n        prepareLayout(this.layout(), renderDetails);\n\n        this._layoutManager.dimension({\n            height: renderDetails.measurement.canvasHeight,\n            width: renderDetails.measurement.canvasWidth\n        });\n\n        this._layoutManager.renderAt(mount);\n\n        // Render each component\n        renderLayout(this, renderDetails);\n\n        setLayoutInfForUnits(this);\n\n        // setLabelRotation\n        setLabelRotationForAxes(this);\n    }\n\n    /**\n     * Returns the instances of x axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the top axis and the second element represents the bottom\n     *   // axis.\n     *   [\n     *      [X1, X2],\n     *      [X3, X4]\n     *   ]\n     * ```\n     * @public\n     *\n     * @return {Array.<Array>} Instances of x axis.\n     */\n    xAxes () {\n        return this.composition().visualGroup.getAxes('x');\n    }\n\n    /**\n     * Returns the instances of y axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the left axis and the second element represents the right\n     *   // axis.\n     *   [\n     *      [Y1, Y2],\n     *      [Y3, Y4]\n     *   ]\n     * ```\n     * @public\n     * @return {Array.<Array>} Instances of y axis.\n     */\n    yAxes () {\n        return this.composition().visualGroup.getAxes('y');\n    }\n\n    /**\n     * Returns all the retinal axis of the canvas. Color, shape and size axis are combinedly called retinal axis.\n     *\n     * @public\n     * @return {Object} Instances of retinal axis.\n     *          ```\n     *              {\n     *                  color: [ColorAxis], // Array of color axis.\n     *                  shape: [ShapeAxis], // Array of shape axis.\n     *                  size: [SizeAxis] // Array of size axis.\n     *              }\n     *          ```\n     */\n    getRetinalAxes () {\n        const visualGroup = this.composition().visualGroup;\n        return visualGroup.getAxes(RETINAL);\n    }\n\n    mount (...params) {\n        if (params.length) {\n            let value = params[0];\n            if (typeof params[0] === 'string') {\n                value = selectElement(params[0]).node();\n            }\n            this._mount = value;\n            return this;\n        }\n        return this._mount;\n    }\n}\n","import { cellRegistry, SimpleCell } from '@chartshq/visual-cell';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { layerRegistry } from '@chartshq/visual-layer';\nimport { SimpleGroup, VisualGroup } from '@chartshq/visual-group';\n\nexport const COMPONENTS = {\n    VisualGroup,\n    VisualUnit\n};\nexport const SUBREGISTRIES = {\n    cellRegistry,\n    layerRegistry\n};\nexport const INTERFACES = {\n    SimpleGroup,\n    SimpleCell\n};\n\n","import { DEFAULT_LAYERS } from './defaults';\n\nexport default () => {\n    const reg = DEFAULT_LAYERS;\n    const regObj = {\n        set: (key, def) => {\n            reg[key] = def;\n            return regObj;\n        },\n        get: () => reg\n    };\n    return regObj;\n};\n","import {\n    transactor,\n    Smartlabel,\n    enableChainedTransaction,\n    LifeCycleManager,\n    DataModel,\n    makeElement,\n    getClientPoint,\n    selectElement,\n    getEvent,\n    require,\n    DateTimeFormatter,\n    Store\n} from 'muze-utils';\n\nimport {\n    SurrogateSideEffect,\n    SpawnableSideEffect,\n    sideEffects,\n    PersistentBehaviour,\n    GenericBehaviour,\n    VolatileBehaviour,\n    behaviouralActions,\n    GenericSideEffect\n} from '@chartshq/muze-firebolt';\nimport { layerFactory } from '@chartshq/visual-layer';\nimport pkg from '../package.json';\nimport * as operators from './operators';\nimport { actionModel as ActionModel } from './action-model';\nimport options from './options';\nimport { Canvas } from './canvas';\nimport { COMPONENTS, SUBREGISTRIES } from './default-registry';\nimport './muze.scss';\n\n// Cache singleton instances which should be included only once in a page\nconst globalCache = {};\nconst defaultRegistry = COMPONENTS;\n\nconst overrideRegistryDefinitions = (overrideRegistry, registry) => {\n    for (const prop in overrideRegistry) {\n        registry.set(prop, overrideRegistry[prop]);\n    }\n};\n\n/**\n * Entry point to renderer. Initializes an environment with settings and registries for canvas. This is a simple wrapper\n * over {@link Canvas} which enables common configuration passing to multiple such canvases.\n *\n * Everytime `muze()` is called it creates an environment. These environment supports subset of APIs of Canvas. If\n * common configuration is used to render multiple canvases then it can be set directly in the env. Like if data is\n * common across all the visulization then its better to set the data in env. When a canvas is created it receives all\n * those configuration from env.\n *\n * ```\n *  // Creates an environment\n *  const env = muze()\n *  // Set data property in environment, so that all the canvas created from the same environment gets this data\n *  // automatically\n *  env.data(dm);\n *  // Creates canvas, by default env pushes data to canvas instance\n *  const canvas = env.canvas();\n * ```\n *\n * If a property is set on both environment and canvas instance, property set on canvas instance gets more priority.\n *\n * @public\n * @module muze\n * @namespace Muze\n *\n * @return {Env} Instance of an environment\n */\nconst muze = () => {\n    // Setters and getters will be mounted on this. Object will be mutated.\n    const [env, globalStore] = transactor({}, options);\n    const components = Object.assign({}, COMPONENTS);\n    const componentSubRegistryDef = Object.assign(SUBREGISTRIES);\n    const componentSubRegistry = {};\n\n    for (const prop in componentSubRegistryDef) {\n        componentSubRegistry[prop] = componentSubRegistryDef[prop]();\n    }\n\n    // Apart form the setter getter, an instance method is injected to create real renderer instances\n    env.canvas = () => {\n        // Create a canvas instance with this settings\n        const settings = globalStore.serialize();\n        const canvas = Canvas.withSettings(settings, { /* registry */\n            components,\n            componentSubRegistry\n        }, env.globalDependencies());\n\n        // Whenever settings is changed canvas is updated\n        enableChainedTransaction(globalStore, canvas, Object.keys(settings));\n\n        return canvas;\n    };\n\n    // Global dependencies for for compositions. Only one copy of the same should be in the page\n    env.globalDependencies = () => {\n        if (!globalCache.smartlabel) {\n            globalCache.smartlabel = new Smartlabel(1, 'body');\n        }\n        return {\n            smartlabel: globalCache.smartlabel,\n            lifeCycleManager: new LifeCycleManager()\n        };\n    };\n\n    // Retrieves global settings. This getter is readonly so that user can't change this as change should happen\n    // only from setter to avoid unwanted sync issues.\n    env.settings = () => globalStore.serialize();\n\n    env.registry = (...overrideRegistry) => {\n        // Selectively copy the properties from COMPONENTS\n        if (overrideRegistry.length) {\n            for (const prop in overrideRegistry) {\n                if (prop in defaultRegistry) {\n                    components[prop] = overrideRegistry[prop];\n                }\n            }\n            return env;\n        }\n        return components;\n    };\n\n    env.cellRegistry = (...overrideRegistry) => {\n        const cellRegistry = componentSubRegistry.cellRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], cellRegistry);\n            return env;\n        }\n        return cellRegistry.get();\n    };\n\n    env.layerRegistry = (...overrideRegistry) => {\n        const layerRegistry = componentSubRegistry.layerRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], layerRegistry);\n            return env;\n        }\n        return layerRegistry.get();\n    };\n\n    return env;\n};\n\nconst SideEffects = {\n    sideEffects,\n    standards: {\n        SurrogateSideEffect,\n        SpawnableSideEffect,\n        GenericSideEffect\n    }\n};\n\nconst Behaviours = {\n    behaviouralActions,\n    standards: {\n        GenericBehaviour,\n        PersistentBehaviour,\n        VolatileBehaviour\n    }\n};\n\nmuze.DataModel = DataModel;\nmuze.version = pkg.version;\nmuze.SideEffects = SideEffects;\nmuze.ActionModel = ActionModel;\nmuze.layerFactory = layerFactory;\nmuze.Operators = operators;\nmuze.Behaviours = Behaviours;\nmuze.utils = {\n    getClientPoint,\n    getEvent,\n    makeElement,\n    selectElement,\n    DateTimeFormatter,\n    require\n};\nmuze.Model = new Store().model.constructor;\nexport default muze;\n"],"sourceRoot":""}