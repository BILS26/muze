{"version":3,"sources":["webpack://muze/webpack/universalModuleDefinition","webpack://muze/webpack/bootstrap","webpack://muze/webpack://DataModel/webpack/universalModuleDefinition","webpack://muze/webpack://DataModel/webpack/bootstrap","webpack://muze/webpack://DataModel/src/index.js","webpack://muze/webpack://DataModel/src/enums/data-format.js","webpack://muze/webpack://DataModel/src/enums/dimension-subtype.js","webpack://muze/webpack://DataModel/src/enums/measure-subtype.js","webpack://muze/webpack://DataModel/src/enums/field-type.js","webpack://muze/webpack://DataModel/src/enums/filtering-mode.js","webpack://muze/webpack://DataModel/src/enums/group-by-functions.js","webpack://muze/webpack://DataModel/src/utils/date-time-formatter.js","webpack://muze/webpack://DataModel/src/utils/column-major.js","webpack://muze/webpack://DataModel/src/utils/extend2.js","webpack://muze/webpack://DataModel/src/utils/helper.js","webpack://muze/webpack://DataModel/src/field-store.js","webpack://muze/webpack://DataModel/src/value.js","webpack://muze/webpack://DataModel/src/operator/row-diffset-iterator.js","webpack://muze/webpack://DataModel/src/invalid-aware-types.js","webpack://muze/webpack://DataModel/src/constants/index.js","webpack://muze/webpack://DataModel/src/operator/get-common-schema.js","webpack://muze/webpack://DataModel/src/operator/cross-product.js","webpack://muze/webpack://DataModel/src/operator/merge-sort.js","webpack://muze/webpack://DataModel/src/operator/sort.js","webpack://muze/webpack://DataModel/src/operator/data-builder.js","webpack://muze/webpack://DataModel/src/operator/difference.js","webpack://muze/webpack://DataModel/src/operator/group-by-function.js","webpack://muze/webpack://DataModel/src/utils/reducer-store.js","webpack://muze/webpack://DataModel/src/operator/natural-join-filter-function.js","webpack://muze/webpack://DataModel/src/operator/union.js","webpack://muze/webpack://DataModel/src/operator/outer-join.js","webpack://muze/webpack://DataModel/src/fields/field/index.js","webpack://muze/webpack://DataModel/src/fields/dimension/index.js","webpack://muze/webpack://DataModel/src/fields/categorical/index.js","webpack://muze/webpack://DataModel/src/fields/temporal/index.js","webpack://muze/webpack://DataModel/src/fields/binned/index.js","webpack://muze/webpack://DataModel/src/fields/measure/index.js","webpack://muze/webpack://DataModel/src/fields/continuous/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/field-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/categorical-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/temporal-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/binned-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/continuous-parser/index.js","webpack://muze/webpack://DataModel/src/fields/partial-field/index.js","webpack://muze/webpack://DataModel/src/field-creator.js","webpack://muze/webpack://DataModel/src/default-config.js","webpack://muze/webpack://DataModel/src/converter/dsv-arr.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/dsv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/csv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/tsv.js","webpack://muze/webpack://DataModel/src/converter/dsv-str.js","webpack://muze/webpack://DataModel/src/converter/auto-resolver.js","webpack://muze/webpack://DataModel/src/converter/flat-json.js","webpack://muze/webpack://DataModel/src/helper.js","webpack://muze/webpack://DataModel/src/relation.js","webpack://muze/webpack://DataModel/src/datamodel.js","webpack://muze/webpack://DataModel/src/operator/group-by.js","webpack://muze/webpack://DataModel/src/operator/bucket-creator.js","webpack://muze/webpack://DataModel/src/stats/index.js","webpack://muze/webpack://DataModel/src/export.js","webpack://muze/webpack://DataModel/src/operator/compose.js","webpack://muze/webpack://DataModel/src/operator/pure-operators.js","webpack://muze/webpack://DataModel/src/operator/natural-join.js","webpack://muze/(webpack)/buildin/module.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/SmartlabelManager.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/lib.js","webpack://muze/webpack://hyperdis/webpack/universalModuleDefinition","webpack://muze/webpack://hyperdis/webpack/bootstrap","webpack://muze/webpack://hyperdis/src/utils/set.js","webpack://muze/webpack://hyperdis/src/utils/index.js","webpack://muze/webpack://hyperdis/src/graph-node.js","webpack://muze/webpack://hyperdis/src/electric-node.js","webpack://muze/webpack://hyperdis/src/graph.js","webpack://muze/webpack://hyperdis/src/model.js","webpack://muze/webpack://hyperdis/src/index.js","webpack://muze/./packages/muze/src/index.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/container-manager.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisector.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisect.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/range.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ticks.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/threshold/sturges.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/map.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/nest.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/set.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/ordinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/band.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/define.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/lab.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/rgb.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/object.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/string.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/value.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/parse.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/date.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/round.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/decompose.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/zoom.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hsl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hcl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/piecewise.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/continuous.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatDecimal.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/exponent.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatSpecifier.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTrim.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatPrefixAuto.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatRounded.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTypes.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatGroup.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatNumerals.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionFixed.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/tickFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionPrefix.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionRound.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/nice.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/log.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/pow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/threshold.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/interval.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/millisecond.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/second.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/minute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/hour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/day.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/week.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/month.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/year.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMinute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcHour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcDay.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcWeek.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMonth.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcYear.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoParse.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/time.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20b.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20c.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/viridis.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/sequential.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/ramp.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack://muze/./packages/muze-utils/src/enums/namespace.js","webpack://muze/./packages/muze-utils/src/enums/reserved-fields.js","webpack://muze/./packages/muze-utils/src/enums/common-props.js","webpack://muze/./packages/muze-utils/src/enums/constants.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/axis.js","webpack://muze/./packages/muze-utils/node_modules/d3-path/src/path.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/arc.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/line.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/area.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/radial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/lineRadial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/diamond.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/star.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/square.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/triangle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/wye.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/noop.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/bundle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRom.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linearClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/monotone.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/natural.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/step.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/stack.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/cubic.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/poly.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/sin.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/bounce.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/back.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/elastic.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/RedBlackTree.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Edge.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Cell.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Beach.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Diagram.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/voronoi.js","webpack://muze/./packages/muze-utils/src/DataSystem/selection.js","webpack://muze/./packages/muze-utils/src/enums/stack-config.js","webpack://muze/./packages/muze-utils/src/common-utils.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/circle.js","webpack://muze/./packages/muze-utils/src/DataSystem/dataSelect.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/diverging.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/expand.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/wiggle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/pie.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespaces.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespace.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/creator.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selector.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selectorAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/matcher.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sparse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/enter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/data.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sort.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/window.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/classed.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/html.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/raise.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/lower.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/insert.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/clone.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/exit.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/join.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/order.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/call.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/nodes.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/node.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/size.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/empty.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/each.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/property.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/append.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/datum.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/local.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/sourceEvent.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/mouse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/touch.js","webpack://muze/./packages/muze-utils/node_modules/d3-dispatch/src/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/noevent.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/nodrag.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/event.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/drag.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timer.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timeout.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/schedule.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/tween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/interpolate.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selection.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attrTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/styleTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/delay.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/ease.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/end.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/interrupt.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/interrupt.js","webpack://muze/./packages/muze-utils/src/renderer-utils.js","webpack://muze/./packages/muze-utils/src/store.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/event-list.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/lifecycle-manager.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/index.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/helper.js","webpack://muze/./packages/muze-utils/src/index.js","webpack://muze/./packages/muze-firebolt/src/enums/actions.js","webpack://muze/./packages/muze-firebolt/src/enums/selection.js","webpack://muze/./packages/muze-firebolt/src/selection-set/index.js","webpack://muze/./packages/muze-firebolt/src/selection-set/selection-set.js","webpack://muze/./packages/muze-firebolt/src/helper/index.js","webpack://muze/./packages/muze-firebolt/src/firebolt.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/generic.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/volatile.js","webpack://muze/./packages/muze-firebolt/src/enums/behaviours.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/highlight.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/brush.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/filter.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/persistent.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/select.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-action-config.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-event.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/hover.js","webpack://muze/./packages/muze-firebolt/src/enums/constants.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/click.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/drag.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/longtouch.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/touch-drag.js","webpack://muze/./packages/muze-firebolt/src/enums/side-effects.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/props.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/generic-sideeffect.js","webpack://muze/./packages/muze-firebolt/src/side-effects/surrogate.js","webpack://muze/./packages/muze-firebolt/src/side-effects/spawnable.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/helper.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/selection-box-drag.js","webpack://muze/./packages/muze-tooltip/src/constants.js","webpack://muze/./packages/muze-tooltip/src/default-config.js","webpack://muze/./packages/muze-tooltip/src/helper.js","webpack://muze/./packages/muze-tooltip/src/content.js","webpack://muze/./packages/muze-tooltip/src/tooltip.js","webpack://muze/./packages/muze-firebolt/src/enums/tooltip-strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/helper/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/crossline/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/strategy.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/filter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/anchors/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/persistent-anchors.js","webpack://muze/./packages/muze-firebolt/src/side-effects/brush-anchors.js","webpack://muze/./packages/muze-firebolt/src/behaviour-effect-map.js","webpack://muze/./packages/visual-layer/src/enums/constants.js","webpack://muze/./packages/visual-layer/src/layers/area/default-config.js","webpack://muze/./packages/visual-layer/src/simple-layer/simple-layer.js","webpack://muze/./packages/visual-layer/src/base-layer/props.js","webpack://muze/./packages/visual-layer/src/enums/props.js","webpack://muze/./packages/muze-axis/src/enums/axis-orientation.js","webpack://muze/./packages/muze-axis/src/enums/scale-type.js","webpack://muze/./packages/muze-axis/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/scale-creator.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/default-config.js","webpack://muze/./packages/muze-axis/src/axis-renderer.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/skip-ticks.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/space-setter.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/helper.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/props.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/simple-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/linear.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/log.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/pow.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/continous-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/band-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/time-axis.js","webpack://muze/./packages/muze-axis/src/color-axis/color-maps.js","webpack://muze/./packages/muze-axis/src/color-axis/defaults.js","webpack://muze/./packages/muze-axis/src/color-axis/props.js","webpack://muze/./packages/muze-axis/src/helper.js","webpack://muze/./packages/muze-axis/src/color-axis/color-strategy.js","webpack://muze/./packages/muze-axis/src/color-axis/color-axis.js","webpack://muze/./packages/muze-axis/src/size-axis/defaults.js","webpack://muze/./packages/muze-axis/src/size-axis/size-strategy.js","webpack://muze/./packages/muze-axis/src/size-axis/props.js","webpack://muze/./packages/muze-axis/src/size-axis/size-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/defaults.js","webpack://muze/./packages/muze-axis/src/shape-axis/props.js","webpack://muze/./packages/muze-axis/src/shape-axis/shape-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/helper.js","webpack://muze/./packages/muze-axis/src/polar-axis/props.js","webpack://muze/./packages/muze-axis/src/polar-axis/angle-axis.js","webpack://muze/./packages/visual-group/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/polar-axis/radius-axis.js","webpack://muze/./packages/muze-axis/src/data-type-scale-map.js","webpack://muze/./packages/transform/src/group-transform/index.js","webpack://muze/./packages/transform/src/identity-transform/index.js","webpack://muze/./packages/transform/src/transform-factory/index.js","webpack://muze/./packages/transform/src/enums/transform-type.js","webpack://muze/./packages/transform/src/stack-transform/index.js","webpack://muze/./packages/visual-layer/src/helpers/index.js","webpack://muze/./packages/visual-layer/src/base-layer/local-options.js","webpack://muze/./packages/visual-layer/src/base-layer/listener-map.js","webpack://muze/./packages/visual-layer/src/base-layer/base-layer.js","webpack://muze/./packages/visual-layer/src/layers/line/renderer.js","webpack://muze/./packages/visual-layer/src/layers/line/default-config.js","webpack://muze/./packages/visual-layer/src/layers/line/line.js","webpack://muze/./packages/visual-layer/src/layers/area/renderer.js","webpack://muze/./packages/visual-layer/src/layers/area/area.js","webpack://muze/./packages/visual-layer/src/layers/arc/default-config.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc-helper.js","webpack://muze/./packages/visual-layer/src/layers/text/renderer.js","webpack://muze/./packages/visual-layer/src/layers/text/default-config.js","webpack://muze/./packages/visual-layer/src/layers/text/text.js","webpack://muze/./packages/visual-layer/src/layers/point/renderer.js","webpack://muze/./packages/visual-layer/src/layers/point/default-config.js","webpack://muze/./packages/visual-layer/src/layers/point/point.js","webpack://muze/./packages/visual-layer/src/layers/bar/renderer.js","webpack://muze/./packages/visual-layer/src/layers/bar/default-config.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar-helper.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar.js","webpack://muze/./packages/visual-layer/src/layers/tick/default-config.js","webpack://muze/./packages/visual-layer/src/layers/tick/renderer.js","webpack://muze/./packages/visual-layer/src/layers/tick/tick.js","webpack://muze/./packages/visual-layer/src/enums/layer-types.js","webpack://muze/./packages/visual-layer/src/layer-factory/layer-factory.js","webpack://muze/./packages/visual-layer/src/layer-factory/index.js","webpack://muze/./packages/visual-layer/src/defaults.js","webpack://muze/./packages/visual-group/src/visual-group/local-options.js","webpack://muze/./packages/visual-group/src/simple-group/simple-group.js","webpack://muze/./packages/visual-unit/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/visual-unit/src/helper/index.js","webpack://muze/./packages/visual-unit/src/enums/constants.js","webpack://muze/./packages/visual-unit/src/helper/grid-lines.js","webpack://muze/./packages/visual-unit/src/listener-map.js","webpack://muze/./packages/visual-unit/src/enums/reactive-props.js","webpack://muze/./packages/visual-unit/src/props.js","webpack://muze/./packages/visual-unit/src/firebolt/payload-generator.js","webpack://muze/./packages/visual-unit/src/firebolt/data-propagator.js","webpack://muze/./packages/visual-unit/src/firebolt/index.js","webpack://muze/./packages/visual-unit/src/firebolt/helper.js","webpack://muze/./packages/visual-unit/src/default-config.js","webpack://muze/./packages/visual-unit/src/local-options.js","webpack://muze/./packages/visual-unit/src/visual-unit.js","webpack://muze/./packages/visual-group/src/variable/variable.js","webpack://muze/./packages/visual-group/src/variable/composed-vars.js","webpack://muze/./packages/visual-group/src/variable/simple-var.js","webpack://muze/./packages/visual-group/src/encoder/field-sanitizer.js","webpack://muze/./packages/visual-group/src/encoder/visual-encoder.js","webpack://muze/./packages/visual-group/src/enums/scale-maps.js","webpack://muze/./packages/visual-group/src/data-type-scale-map.js","webpack://muze/./packages/visual-group/src/encoder/encoder-helper.js","webpack://muze/./packages/visual-group/src/encoder/cartesian-encoder.js","webpack://muze/./packages/visual-group/src/encoder/polar-encoder.js","webpack://muze/./packages/visual-group/src/encoder/retinal-encoder.js","webpack://muze/./packages/visual-group/src/group-helper/group-utils.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-model.js","webpack://muze/./packages/visual-group/src/group-helper/cell-creator.js","webpack://muze/./packages/visual-group/src/group-helper/resolver-props.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-resolver.js","webpack://muze/./packages/visual-group/src/visual-group/value-matrix.js","webpack://muze/./packages/visual-group/src/visual-group/helper.js","webpack://muze/./packages/visual-group/src/visual-group/change-listener.js","webpack://muze/./packages/visual-group/src/visual-group/props.js","webpack://muze/./packages/visual-group/src/visual-group/visual-group.js","webpack://muze/./packages/muze-legend/src/firebolt/behavioural/select.js","webpack://muze/./packages/muze-legend/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/muze-legend/src/firebolt/behaviour-effect-map.js","webpack://muze/./packages/muze-legend/src/enums/behaviours.js","webpack://muze/./packages/muze-legend/src/enums/side-effects.js","webpack://muze/./packages/muze-legend/src/enums/constants.js","webpack://muze/./packages/muze-legend/src/firebolt/helper.js","webpack://muze/./packages/muze-legend/src/firebolt/legend-firebolt.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/drag.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/hover.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/click.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/index.js","webpack://muze/./packages/muze-legend/src/enums/actions.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/selection-box-drag.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/selection-box/index.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/strategies.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/index.js","webpack://muze/./packages/muze-legend/src/legend/props.js","webpack://muze/./packages/muze-legend/src/legend/defaults.js","webpack://muze/./packages/muze-legend/src/legend/legend-helper.js","webpack://muze/./packages/muze-legend/src/legend/simple-legend.js","webpack://muze/./packages/muze-legend/src/legend/position-config.js","webpack://muze/./packages/muze-legend/src/legend/renderer.js","webpack://muze/./packages/muze-legend/src/legend/discrete-legend.js","webpack://muze/./packages/muze-legend/src/legend/gradient-helper.js","webpack://muze/./packages/muze-legend/src/legend/gradient-legend.js","webpack://muze/./packages/muze-legend/src/legend/step-legend.js","webpack://muze/./packages/muze/src/constants.js","webpack://muze/./packages/muze/src/operators.js","webpack://muze/./packages/muze/src/action-model.js","webpack://muze/./packages/muze/src/canvas/defaults.js","webpack://muze/./packages/muze/src/canvas/local-options.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/layoutComponent.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/dummy-component.js","webpack://muze/./packages/muze/src/defaults.js","webpack://muze/./packages/layout/src/tree-layout/constants/defaults.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/definitionModel.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/helper/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/tree/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/layout-model/index.js","webpack://muze/./packages/layout/src/enums/constants.js","webpack://muze/./packages/layout/src/tree-layout/utils/index.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-point.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-parser.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/helper.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/html-data.js","webpack://muze/./packages/layout/src/tree-layout/renderers/renderer.js","webpack://muze/./packages/layout/src/tree-layout/renderers/html-renderer.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/layout-def.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/index.js","webpack://muze/./packages/muze/src/canvas/helper.js","webpack://muze/./packages/muze/src/options.js","webpack://muze/./packages/layout/src/generic-layout/index.js","webpack://muze/./packages/layout/src/grid-layout/defaults.js","webpack://muze/./packages/layout/src/utils/index.js","webpack://muze/./packages/layout/src/visual-matrix/props.js","webpack://muze/./packages/layout/src/visual-matrix/default-config.js","webpack://muze/./packages/layout/src/visual-matrix/visual-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/row-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/column-matrix.js","webpack://muze/./packages/layout/src/grid-layout/computations.js","webpack://muze/./packages/layout/src/grid-layout/view-info-getter.js","webpack://muze/./packages/layout/src/grid-layout/layout.js","webpack://muze/./packages/layout/src/grid-layout/layout-helper.js","webpack://muze/./packages/layout/src/grid-layout/border-helper.js","webpack://muze/./packages/layout/src/grid-layout/span-maker.js","webpack://muze/./packages/muze/src/transaction-support.js","webpack://muze/./packages/muze/src/canvas/component-resolver.js","webpack://muze/./packages/visual-cell/src/enums/constants.js","webpack://muze/./packages/visual-cell/src/enums/cell-type.js","webpack://muze/./packages/visual-cell/src/simple-cell.js","webpack://muze/./packages/visual-cell/src/enums/defaults.js","webpack://muze/./packages/visual-cell/src/props.js","webpack://muze/./packages/visual-cell/src/axis-cell.js","webpack://muze/./packages/visual-cell/src/blank-cell.js","webpack://muze/./packages/visual-cell/src/text-cell.js","webpack://muze/./packages/visual-cell/src/geom-cell.js","webpack://muze/./packages/visual-cell/src/defaults.js","webpack://muze/./packages/visual-cell/src/constants.js","webpack://muze/./packages/visual-cell/src/cell-registry.js","webpack://muze/./packages/muze/src/canvas/title-maker.js","webpack://muze/./packages/muze/src/canvas/legend-maker.js","webpack://muze/./packages/muze/src/canvas/components/muze-chart-component.js","webpack://muze/./packages/muze/src/canvas/components/headerComponent.js","webpack://muze/./packages/muze/src/canvas/components/legendComponent.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/helper.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/props.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-component.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/horizontal-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/vertical-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/matrix-component.js","webpack://muze/./packages/muze/src/canvas/components/grid-component.js","webpack://muze/./packages/muze/src/enums/constants.js","webpack://muze/./packages/muze/src/canvas/components/message-component.js","webpack://muze/./packages/muze/src/canvas/component-wrapper-maker.js","webpack://muze/./packages/muze/src/canvas/scroll-manager.js","webpack://muze/./packages/muze/src/canvas/layout-maker.js","webpack://muze/./packages/muze/src/canvas/firebolt/group-firebolt.js","webpack://muze/./packages/muze/src/canvas/firebolt/index.js","webpack://muze/./packages/muze/src/canvas/app-state.js","webpack://muze/./packages/muze/src/canvas/canvas.js","webpack://muze/./packages/muze/src/default-registry.js","webpack://muze/./packages/visual-layer/src/layer-registry.js","webpack://muze/./packages/muze/src/muze.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","e","_typeof","a","JSON","parse","DataModel","require","DataFormat","FLAT_JSON","DSV_STR","DSV_ARR","AUTO","DimensionSubtype","CATEGORICAL","TEMPORAL","GEO","BINNED","MeasureSubtype","CONTINUOUS","FieldType","MEASURE","DIMENSION","FilteringMode","NORMAL","INVERSE","ALL","GROUP_BY_FUNCTIONS","SUM","AVG","MIN","MAX","FIRST","LAST","COUNT","STD","convertToNativeDate","date","Date","pad","DateTimeFormatter","format","this","dtParams","nativeDate","RegExp","escape","text","replace","TOKEN_PREFIX","DATETIME_PARAM_SEQUENCE","YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","defaultNumberParser","defVal","val","parsedVal","isFinite","parseInt","defaultRangeParser","range","nVal","toLowerCase","length","getTokenDefinitions","daysDef","short","long","monthsDef","H","index","extract","parser","formatter","getHours","toString","hours","P","M","getMinutes","S","getSeconds","K","getMilliseconds","join","day","getDay","A","getDate","b","month","getMonth","B","y","result","substring","presentDate","presentYear","Math","trunc","getFullYear","year","Y","getTokenFormalNames","definitions","HOUR_12","AMPM_UPPERCASE","AMPM_LOWERCASE","SHORT_DAY","LONG_DAY","DAY_OF_MONTH","DAY_OF_MONTH_CONSTANT_WIDTH","SHORT_MONTH","LONG_MONTH","MONTH_OF_YEAR","SHORT_YEAR","LONG_YEAR","tokenResolver","defaultResolver","arg","targetParam","arguments","hourFormat24","hourFormat12","ampmLower","ampmUpper","amOrpm","isPM","findTokens","tokenPrefix","tokenLiterals","keys","occurrence","forwardChar","indexOf","push","token","formatAs","nDate","formattedStr","String","formattedVal","dateTimeStamp","options","extractTokenValue","dtParamSeq","noBreak","dtParamArr","args","resolverKey","resolverParams","resolverFn","param","resolvedVal","splice","apply","checkIfOnlyYear","unshift","tokenObj","lastOccurrenceIndex","occObj","occIndex","targetText","regexFormat","tokenArr","map","obj","occurrenceLength","extractValues","match","shift","getNativeDate","Number","len","v","store","fields","Array","forEach","fieldIndex","from","OBJECTSTRING","objectToStrFn","objectToStr","arrayToStr","checkCyclicRef","parentArr","bIndex","extend2","obj1","obj2","skipUndef","merge","tgtArr","srcArr","item","srcVal","tgtVal","str","cRef","isArray","getUniqueId","getTime","round","random","isArrEqual","arr1","arr2","formatNumber","detectDataFormat","data","fieldStore","createNamespace","fieldArr","dataId","fieldsObj","_cachedFieldsObj","field","getMeasure","measureFields","_cachedMeasure","schema","type","getDimension","dimensionFields","_cachedDimension","Value","rawValue","_classCallCheck","formattedValue","getNumberFormattedVal","defineProperties","_value","configurable","writable","_formattedValue","_internalValue","rowDiffsetIterator","rowDiffset","callback","split","diffStr","diffStsArr","start","end","InvalidAwareTypes","invalid_aware_types_classCallCheck","config","assign","_invalidAwareValsMap","invalidAwareVals","NULL","NA","NIL","invalid","nil","null","undefined","DM_DERIVATIVES","SELECT","PROJECT","GROUPBY","COMPOSE","CAL_VAR","BIN","SORT","JOINS","CROSS","LEFTOUTER","RIGHTOUTER","NATURAL","FULLOUTER","getCommonSchema","fs1","fs2","retArr","fs1Arr","defaultFilterFn","crossProduct","dm1","dm2","filterFn","replaceCommonSchema","jointype","applicableFilterFn","dm1FieldStore","getFieldspace","dm2FieldStore","dm1FieldStoreName","dm2FieldStoreName","commonSchemaList","Error","tmpSchema","_rowDiffset","rowAdded","rowPosition","ii","tuple","userArg","partialField","formattedData","dm1Fields","prepareJoinData","dm2Fields","detachedRoot","tupleObj","cellVal","iii","defSortFn","a1","b1","mergeSort","arr","sortFn","sort","lo","hi","mid","floor","mainArr","auxArr","resolveStrSortOrder","fDetails","strSortOrder","sortOrder","dataType","sortType","retFunc","groupData","hashMap","Map","groupedData","datum","fieldVal","has","set","createSortingFnArg","groupedDatum","targetFields","targetFieldDetails","label","reduce","acc","next","idx","applyStandardSort","sortingDetails","fieldName","sortMeta","fieldInSchema","sortingFn","slice","f","Q","makeGroupMapAndSort","depColumns","targetCol","currRow","fVal","u","iterator","done","nMap","dataBuilder","colIdentifier","retObj","uids","addUid","columnWise","reqSorting","tmpDataArr","colName","insertInd","sortData","dataObj","filter","sDetial","groupSortingIdx","findIndex","standardSortingDetails","groupSortingDetails","detail","sortedGroupMap","row","nextMap","pop","tmpData","difference","hashTable","schemaNameArr","dm1FieldStoreFieldObj","dm2FieldStoreFieldObj","_colIdentifier","prepareDataHelper","dm","addData","hashData","schemaName","getFilteredValues","sum","filteredNumber","curr","avg","totalSum","isNaN","fnList","filteredValues","min","max","sqrt","mean","pow","num","defaultReducerName","ReducerStore","TypeError","defReducer","entries","_this","be","reducer","_this2","__unregister","Function","reducerStore","naturalJoinFilter","commonSchemaArr","retainTuple","internalValue","union","leftOuterJoin","dataModel1","dataModel2","rightOuterJoin","Field","field_classCallCheck","subtype","description","displayName","Te","Dimension","_cachedDomain","calculateDataDomain","Categorical","hash","Set","domain","add","Temporal","temporal_classCallCheck","_cachedMinDiff","sortedData","arrLn","minDiff","POSITIVE_INFINITY","prevDatum","nextDatum","processedCount","dataFormat","_this3","isInvalid","parsedDatum","getInvalidType","Binned","binsArr","bins","Measure","unit","defAggFn","numberFormat","Continuous","NEGATIVE_INFINITY","FieldParser","Je","CategoricalParser","trim","TemporalParser","temporal_parser_classCallCheck","_dtf","BinnedParser","matched","parseFloat","ContinuousParser","PartialField","partial_field_classCallCheck","_sanitize","createFields","dataColumn","headers","headersObj","header","nt","DSVArr","schemaFields","unitSchema","firstRowHeader","columns","columnMajor","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","stringify","inferColumns","rows","columnSet","column","width","pt","delimiter","reFormat","DELIMITER","charCodeAt","parseRows","N","I","eof","eol","j","preformatBody","formatValue","formatRow","formatDate","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","milliseconds","getUTCMilliseconds","getUTCFullYear","getUTCMonth","getUTCDate","test","convert","concat","formatBody","formatRows","csv","dsv","tsv","DSVStr","Auto","fieldSeparator","d3Dsv","FlatJSON","insertionIndex","schemaFieldsName","converters","prepareSelectionData","rawData","resp","_iteratorNormalCompletion","wt","persistDerivations","sourceDm","model","operation","persistCurrentDerivation","_model$_derivation","criteriaFn","_derivation","op","meta","criteria","persistAncestorDerivation","newDm","_newDm$_ancestorDeriv","_ancestorDerivation","selectModeMap","diffIndex","calcDiff","generateRowDiffset","lastInsertedValue","li","selectRowDiffsetIterator","checker","newRowDiffSet","rejRowDiffSet","_selectModeMap$mode$c","shouldSelect","shouldReject","checkerResult","rejectRowDiffset","selectHelper","clonedDm","selectFn","cachedStore","cloneProvider","getPartialFieldspace","formattedFieldsData","rawFieldsData","getKey","fn","filterPropagationModel","propModels","fns","filterByMeasure","clonedModel","cloneWithAllFields","clone","partialFieldspace","__calculateFieldspace","calculateFieldsConfig","modelFieldsConfig","getFieldsConfig","keyFn","dataModel","propModel","getData","fieldsConfig","dimensions","dLen","indices","measures","fieldsSpace","valuesMap","present","every","select","saveChild","some","addDiffsetToClonedDm","selectConfig","cloneWithProject","projField","allFields","cloned","projectionSet","actualProjField","sanitizeUnitSchema","sanitizeAndValidateSchema","supportedMeasureSubTypes","supportedDimSubTypes","updateData","relation","defaultConfig","converterFn","converter","dataHeader","fieldNameAs","as","nameSpace","_partialFieldspace","valueObjects","_cachedValueObjects","_","_dataFormat","applyExistingOperationOnModel","selectionModel","getDerivations","derivation","_selectionModel","params","groupByString","propagateIdentifiers","propModelInf","nonTraversingModel","excludeModels","handlePropagation","_children","child","propagateToAllDataModels","identifiers","rootModels","propagationInf","propagationNameSpace","propagateToSource","propagationSourceId","sourceId","propagateInterpolatedValues","criterias","persistent","actionCriterias","values","mutableActions","filteredCriteria","entry","action","sourceActionCriterias","actionInf","actionConf","applyOnSource","models","path","getPathToRootModel","_parent","_ref5","rootModel","propConfig","sourceIdentifiers","rootGroupByModel","groupByModel","inf","propagationModel","filteredModel","reverse","getNormalizedProFields","fieldConfig","normalizedProjField","constructor","search","Relation","relation_classCallCheck","source","_fieldStoreName","_propagationNameSpace","immutableActions","en","_fieldspace","updateFields","fieldStoreName","collID","partialFieldMap","newFields","coll","joinWith","unionWith","differenceWith","defConfig","cloneConfig","extraCloneDm","setOfRowDiffsets","setParent","_fieldConfig","fieldObj","def","removeChild","sibling","parent","ReferenceError","__proto__","getPrototypeOf","_onPropagation","setPrototypeOf","order","withUid","getAllFields","dataGenerated","fieldNames","fmtFieldIdx","elem","fIdx","fmtFn","datumIdx","ids","nn","fill","fieldsArr","reducers","newDataModel","groupBy","existingDataModel","sFieldArr","Ee","reducerObj","defaultReducer","measureName","reducerFn","resolve","fieldStoreObj","dbName","dimensionArr","measureArr","rowCount","dataInCSVArr","sortedDm","colData","rowsCount","serializedData","rowIdx","colIdx","cachedValueObjects","fieldinst","dependency","replaceVar","depVars","retrieveFn","depFieldIndices","fieldSpec","fs","suppliedFields","computedValues","fieldsData","h","addField","addToNameSpace","isMutableAction","payload","getRootDataModel","getRootGroupByModel","find","addToPropNamespace","sourceNamespace","propagateImmutableActions","filterImmutableAction","criteriaModel","eventName","measureFieldName","binFieldName","_createBinnedFieldDat","measureField","buckets","binsCount","binSize","dMin","dMax","ceil","abs","generateBuckets","bucketRanges","binnedData","findBucketRange","leftIdx","rightIdx","midIdx","binField","serialize","getSchema","rowSplitDiffsetIterator","splitRowDiffset","dimensionMap","dimensionSet","clonedDMs","uniqueFields","commonFields","normalizedProjFieldSets","fieldSet","splitWithProject","projFieldSet","projFields","first","last","count","sd","std","Operators","compose","operations","currentDM","firstChild","derivations","dispose","bin","project","calculateVariable","naturalJoin","fullOuterJoin","version","Stats","enums","webpackPolyfill","deprecate","paths","children","_interopRequireDefault","default","_lib2","_containerManager2","slLib","init","doc","win","document","htmlSplCharSpace"," ","documentSupport","getDocumentSupport","SVG_BBOX_CORRECTION","isWebKit","SmartLabelManager","id","container","useEllipses","wrapper","prop","prevInstance","isBrowserLess","maxCacheLimit","maxDefaultCacheLimit","getElementById","createContainer","innerHTML","testStrAvg","isHeadLess","isIE","offsetHeight","offsetWidth","parentContainerStyle","style","parentContainer","_containerManager","_showNoEllipses","_init","setStyle","textToLines","smartlabel","lines","_calCharDimWithCache","calculateDifference","size","csArr","tw","twi","cachedStyle","asymmetricDifference","maxAdvancedCacheLimit","_container","cache","_advancedCache","advancedCacheKey","_advancedCacheKey","cacheName","fontSize","fontFamily","fontWeight","fontStyle","cacheInitName","repeat","height","_getWidthFn","contObj","_containerObj","svgText","bbox","textContent","getBBox","_styleNotSet","setLineHeight","sCont","node","_context","context","_cache","charCache","_lineHeight","lineHeight","useEllipsesOnOverflow","getSmartText","maxWidth","maxHeight","noWrap","trimStr","tempArr","tmpText","maxWidthWithEll","toolText","oriWidth","oriHeight","newCharIndex","nearestChar","tempChar","getWidth","initialLeft","initialTop","getOriSizeImproveObj","spanArr","x","minWidth","chr","elemRightMostPoint","elemLowestPoint","lastBR","removeFromIndex","removeFromIndexForEllipses","hasHTMLTag","maxStrWidth","lastDash","lastSpace","lastIndexBroken","strWidth","strHeight","oriTextArr","ellipsesStr","ellipsesWidth","dotWidth","characterArr","dashIndex","spaceIndex","lastLineBreak","fastTrim","ws","charAt","smartLabel","oriTextWidth","oriTextHeight","oriText","isTruncated","xmlTagRegEx","ltgtRegex","getOriSize","substr","getNearestBreakIndex","detailObj","tooltext","lastIndexOf","spanAdditionRegx","spanAdditionReplacer","classNameWithTag","classNameWithTagBR","childRetriverFn","childRetriverString","noClassTesting","classNameReg","className","spaceIdx","dashIdx","offsetLeft","offsetTop","parentNode","insertBefore","createElement","classNameBrReg","spanRemovalRegx","error","detailedCalculationFlag","textArr","letter","lSize","cumulativeSize","indiSizeStore","lib","userAgent","navigator","clsNameSpace","containerClass","brReplaceRegex","position","top","whiteSpace","padding","overflow","supportedStyle","font","font-family","font-weight","font-size","line-height","font-style","getElementsByClassName","opera","hasSVG","Boolean","SVGAngle","implementation","hasFeature","containerParent","body","appendChild","setAttribute","getElementsByTagName","sl","charLen","increment","avgWidth","styleObj","fSize","makeEntry","sCon","_set","set1","set2","filteredKeys","s1","s2","ForeignSet","isSimpleObject","reqAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","getTimeBasedId","__lastTime","__id","flat","res","scheduler","onFinishCallback","queue","animationFrame","listeners","tempQ","unique","fetch","namedNode","qualifiedName","seed","fetchAggregator","dependencies","getUpstreamNodes","list","rec","qname","placedIndex","preArr","postArr","outgoingEdges","resolver","accumulate","nodeDetails","identity","CustomResolver","utils_classCallCheck","dep","_dep","graph_node_classCallCheck","edges","_seed","requireResolve","retriever","history","electricEdges","_edges","retrieveDetails","edge","head","hist","electric_node_classCallCheck","nextFrame","currentFrame","lstnrs","nodes","nFn","qualifiedNodeMap","graph_node","_wholeSet","_propagate","propagationOverride","currentFrameListeners","nextFrameListeners","_schedule","flushTarget","flush","mount","resolveReqList","objn","perv","addDependencies","_node","getDependencies","getResolvedList","props","fnSpec","eNode","_ref","electric_node","addEdges","addElectricNode","changedSet","upstreamNodes","upstreamNode","append","__execUniqueElectricEdges","cfLstnrs","nfLstnrs","toArray","repeatHead","resetPropagationOverride","qnames","_this4","update","resolved","resolveDependencyOrder","resolveMap","neighbour","isRoot","model_classCallCheck","_graph","graph","_lockFlag","_reqQ","mountPoint","_addPropInModel","calculationConfig","customResolver","varName","fetchFn","_customResolver","createNodesFrom","instantCall","_graph$stopPropagatio","propsArr","unsub","createElectricNodeOf","stopPropagation","setPropagationOverride","resetNodeValue","_graph$stopPropagatio2","setProp","getNodeValue","getNodeFromQualifiedName","Model","__webpack_exports__","Muze","ContainerManager","maxContainers","svg","containers","rootNode","createElementNS","setAttributeNS","svgRoot","diff","containerObj","keyStr","prev","removeContainer","addContainer","avgCharWidth","display","cObj","ascending","NaN","bisector","compare","ascendingComparator","left","right","ascendingBisect","bisectRight","number","array","src_range","stop","step","e10","e5","e2","src_ticks","ticks","tickIncrement","power","log","LN10","tickStep","step0","step1","quantile","valueof","i0","value0","each","remove","clear","empty","src_nest","sortValues","rollup","nest","sortKeys","depth","createResult","setResult","keyValue","valuesByKey","createObject","setObject","createMap","setMap","sortKey","k","proto","implicit","ordinal","unknown","scale","copy","band","bandwidth","ordinalRange","paddingInner","paddingOuter","align","rescale","sequence","rangeRound","invertExtent","r0","r1","hiIndex","getClosestIndexOf","invert","side","highVal","d1","low","high","extend","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_formatHex","rgb","formatHex","color_formatRgb","formatRgb","color","exec","Rgb","rgbn","rgba","hsla","g","rgbConvert","opacity","rgb_formatHex","hex","rgb_formatRgb","Hsl","hslConvert","hsl","hsl2rgb","m1","m2","channels","displayable","formatHsl","color_formatHsl","brighter","darker","deg2rad","PI","rad2deg","Xn","Yn","Zn","t0","t1","t2","t3","labConvert","Lab","Hcl","hcl2lab","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl","cos","sin","C","D","E","ED","EB","BC_DA","cubehelix","cubehelixConvert","Cubehelix","bl","basis","v0","v1","v2","v3","cosh","sinh","src_constant","linear","hue","constant","gamma","nogamma","exponential","src_rgb","rgbGamma","colorRgb","rgbSpline","spline","colors","rgbBasis","src_number","reA","reB","src_string","am","bm","bs","bi","lastIndex","q","one","zero","cssNode","cssRoot","cssView","svgNode","src_value","value_typeof","string","setTime","nb","na","valueOf","src_round","degrees","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","pxComma","pxParen","degParen","translate","xa","ya","xb","yb","interpolateTransformCss","parseCss","documentElement","defaultView","transform","getComputedStyle","getPropertyValue","interpolateTransformSvg","parseSvg","baseVal","consolidate","matrix","SQRT2","colorHsl","hslLong","colorHcl","cubehelixGamma","colorCubehelix","cubehelixLong","piecewise","interpolate","d3_scale_src_constant","d3_scale_src_number","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","polymap","bisect","target","clamp","continuous","output","input","interpolateValue","deinterpolateClamp","reinterpolateClamp","interpolateRound","formatDecimal","toExponential","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","sign","symbol","comma","precision","prefixExponent","locale","formatPrefix","formatTrim","out","i1","formatRounded","exponent","formatTypes","%","toFixed","toPrecision","X","toUpperCase","src_identity","prefixes","src_locale","group","grouping","thousands","formatGroup","currency","decimal","numerals","formatNumerals","percent","newFormat","prefix","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","Infinity","defaultLocale","formatLocale","src_tickFormat","precisionPrefix","precisionRound","precisionFixed","linearish","tickFormat","nice","interval","x0","x1","pow10","powp","base","exp","logp","log10","log2","reflect","logs","pows","raise","thresholds","threshold","quantiles","quantize","newInterval","floori","offseti","offset","previous","millisecond","durationMinute","durationWeek","second","minute","hour","setHours","setDate","getTimezoneOffset","weekday","sunday","monday","tuesday","wednesday","thursday","friday","saturday","setMonth","setFullYear","utcMinute","setUTCSeconds","utcHour","setUTCMinutes","utcDay","setUTCHours","setUTCDate","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","utcYear","setUTCFullYear","localDate","L","utcDate","UTC","newYear","timeFormat","utcFormat","utcParse","pads","-","0","numberRe","percentRe","requoteRe","requote","formatRe","names","formatLookup","parseWeekdayNumberSunday","w","parseWeekdayNumberMonday","parseWeekNumberSunday","U","parseWeekNumberISO","V","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","timeDay","timeYear","formatMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","timeSunday","formatWeekNumberISO","timeThursday","formatWeekdayNumberSunday","formatWeekNumberMonday","timeMonday","formatYear","formatFullYear","formatZone","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatShortWeekday","formatWeekday","formatShortMonth","formatMonth","formatPeriod","utcFormats","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCPeriod","parses","parseShortWeekday","parseWeekday","parseShortMonth","parseMonth","parseLocaleDateTime","parseSpecifier","parsePeriod","parseLocaleDate","parseLocaleTime","newParse","newDate","week","toISOString","durationSecond","durationHour","durationDay","durationMonth","durationYear","calendar","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickIntervals","tickInterval","src_time","timeMonth","timeWeek","timeHour","timeMinute","timeSecond","timeMillisecond","src_colors","interpolateCubehelixLong","ramp","sequential","interpolator","d3_scale_chromatic_src_colors","src_ramp","scheme","interpolateRgbBasis","warm","cool","sequential_multi_rainbow","ts","magma","inferno","plasma","UNIT_GLOBAL_NAMESPACE","UNIT_LOCAL_NAMESPACE","LAYER_LOCAL_NAMESPACE","LAYER_GLOBAL_NAMESPACE","GROUP_GLOBAL_NAMESPACE","GROUP_LOCAL_NAMESPACE","CANVAS_LOCAL_NAMESPACE","CANVAS_GLOBAL_NAMESPACE","ReservedFields","ROW_ID","CommonProps","ACTION_INF","ON_LAYER_DRAW","MATRIX_CREATED","COORD_TYPES","DATA_TYPE","d3_axis_src_identity","bottom","epsilon","entering","__axis","axis","orient","tickArguments","tickValues","tickTransform","tickSizeInner","tickSizeOuter","tickPadding","spacing","range0","range1","center","selection","selectAll","tick","tickExit","exit","tickEnter","enter","attr","line","insert","transition","getAttribute","tickSize","pi","tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","ccw","dx","dy","cw","da","rect","d3_shape_src_constant","halfPi","asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","x00","y00","d2","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","areaStart","_line","areaEnd","lineStart","_point","lineEnd","point","curve_linear","src_line","pointX","pointY","defined","curve","curveLinear","buffer","defined0","src_area","area","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","src_descending","d3_shape_src_identity","curveRadial","Radial","_curve","radial","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","kr","kx","ky","star","square","sqrt3","triangle","wye","noop","that","Basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","BasisOpen","Bundle","beta","_basis","_beta","_x","_y","custom","bundle","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","CardinalOpen","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","CatmullRomOpen","LinearClosed","slope3","h0","h1","s0","slope2","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","_t0","px","py","Step","_t","curve_step","stepBefore","stepAfter","none","series","order_none","stackValue","order_ascending","sums","cubicInOut","polyIn","polyOut","polyInOut","b2","b3","b4","b5","b6","b7","b8","b9","b0","bounceOut","backIn","overshoot","backOut","backInOut","elasticOut","elasticIn","amplitude","period","d3_voronoi_src_constant","elasticInOut","RedBlackTree","RedBlackNode","R","RedBlackRotateLeft","tree","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","createEdge","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","ax","ay","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","attachCircle","lArc","rArc","lSite","cSite","rSite","bx","by","epsilon2","ha","hc","circle","Circle","before","circles","detachCircle","beachPool","createBeach","beach","Beach","detachBeach","beaches","removeBeach","disappearing","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","sortCellHalfedges","clipEdges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","cover","dc","v00","v01","v11","v10","polygons","polygon","triangles","e1","links","radius","_found","vx","vy","src_voronoi","voronoi","Selection","idGetter","_dataObjects","_updateData","_enterData","_exitData","_idGetter","newData","entryData","exitdata","tempMap","duplicateData","updatedData","newSelection","dataObjects","defaultValue","_mode","mergedObjects","mergedData","newdata","sortSel","sortSelection","kA","kB","_toConsumableArray","objects","STRING","FUNCTION","HTMLElement","common_utils_typeof","sanitizeIP","typeObj","nonExistentKeys","checkExistence","getMax","common_utils_toConsumableArray","getMin","getDomainFromData","fieldType","domArr","_loop","_fields","_slicedToArray","field0","field1","arr0","firstMin","secondMin","firstMax","secondMax","sanitizeDomainWhenEqual","unionDomain","domains","_ref2","dom","symbolFns","symbolCircle","cross","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolWye","symbolTriangle","easeFns","cubic","easeCubic","bounce","easeBounce","elastic","easeElastic","back","easeBack","poly","easePoly","circleInOut","getNearestValue","filterData","getWindow","getQualifiedClassName","cancelAnimationFrame","cls","objectIterator","Voronoi","common_utils_classCallCheck","_voronoi","_voronoiFn","getObjProp","_len","_key","intSanitizer","generateGetterSetters","propInfo","_propInfo$","sanitization","preset","onset","typeChecker","isEqual","oldVal","newVal","arraysEqual","is","ERROR_MSG","INTERFACE_IMPL","mergeRecursive","sink","createSelection","sel","appendObj","idFn","dataSelect","mergedSelection","exitSelection","getObjects","inst","numberInterpolator","interpolateNumber","piecewiseInterpolator","rgbToHsv","detectColor","col","getDataModelFromRange","selFields","selFn","getDataModelFromIdentifiers","filteredDataModel","dataArr","filteredSchema","include","propField","isValidValue","getSymbol","stackOrders","_defineProperty","_stackOrders","stackOrderNone","stackOrderAscending","stackOffsets","_stackOffsets","yp","yn","stackOffsetNone","si","sij0","s3","sk","stack","orderNone","offsetNone","oz","kz","sz","sij","ki","d3Stack","nestCollection","nestFn","pathInterpolators","curveStepAfter","curveStepBefore","curveStep","curveCatmullRom","Symbols","axisLeft","axisRight","axisTop","axisBottom","pie","descending","arcs","pa","cornerRadius","padRadius","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","p0","p1","oc","intersect","x3","y3","x32","y32","kc","lc","centroid","Scales","scaleBand","getSmallestDiff","points","timeFormats","timeDurations","formatTemporal","nearestInterval","getNearestInterval","getValueParser","retrieveNearestGroupByReducers","_len3","measureFieldNames","_key3","filteredReducers","getAncestorDerivations","nearestReducers","derv","retrieveFieldDisplayName","sortOrderMap","_sortOrderMap","firstVal","secondVal","localeCompare","_accessors","fn1","fn2","xhtml","src_namespaces","xlink","xml","xmlns","src_namespace","namespaces","space","local","creator","fullname","namespace","creatorFixed","ownerDocument","creatorInherit","uri","namespaceURI","src_selector","selector","querySelector","selectorAll","querySelectorAll","matcher","matches","sparse","EnterNode","_next","__data__","keyPrefix","bindIndex","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","src_window","styleValue","classArray","classList","ClassList","_names","classedAdd","classedRemove","contains","textRemove","htmlRemove","nextSibling","lower","previousSibling","constantNull","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","event","mouseenter","mouseleave","filterContextListener","listener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","typename","on","__on","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","sourceEvent","dispatchEvent","CustomEvent","createEvent","initEvent","bubbles","cancelable","groups","parents","_groups","_parents","subgroups","subnode","subgroup","enterGroup","updateGroup","_enter","_exit","onenter","onupdate","onexit","groups0","groups1","m0","merges","group0","group1","compareNode","sortgroups","sortgroup","getAttributeNS","attrRemoveNS","removeAttributeNS","attrRemove","removeAttribute","attrFunctionNS","attrFunction","attrConstantNS","attrConstant","priority","styleRemove","removeProperty","styleFunction","setProperty","styleConstant","propertyRemove","propertyFunction","propertyConstant","classed","classedFunction","classedTrue","classedFalse","textFunction","textConstant","html","htmlFunction","htmlConstant","deep","typenames","parseTypenames","dispatch","dispatchFunction","dispatchConstant","src_select","nextId","Local","current","src_point","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","mouse","changedTouches","src_touch","touches","identifier","touch","Dispatch","T","types","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","__noselect","MozUserSelect","d3_drag_src_constant","DragEvent","subject","active","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","src_drag","mousedownx","mousedowny","mousemoving","touchending","touchable","gestures","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","yesdrag","noclick","clearTimeout","sublisteners","clickDistance","taskHead","taskTail","frame","timeout","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","timer_typeof","now","setFrame","clearNow","Timer","_call","_time","timer","delay","restart","wake","timerFlush","nap","sleep","poke","clearInterval","setInterval","src_timeout","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","duration","ease","schedule","tweenValue","_id","transition_interpolate","interpolateRgb","interpolateString","Transition","_name","newId","selection_prototype","inherit","id0","id1","onFunction","on0","on1","sit","attrTween","string00","string10","interpolate0","string0","string1","value1","attrTweenNS","attrInterpolateNS","attrInterpolate","styleTween","styleNull","styleMaybeRemove","listener0","styleInterpolate","removeFunction","tweenRemove","tween0","tween1","tweenFunction","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","Promise","reject","cancel","interrupt","defaultTiming","easeCubicInOut","selectElement","element","makeElement","elemType","callbacks","SVGElement","selectorVal","selectorType","actualSelector","enterSel","mergeSel","_len2","_key2","exitSel","applyStyle","setElementAttrs","attrs","setAttrs","setStyles","styles","createElements","getClientPoint","pos","clientPoint","getEvent","d3event","getD3Drag","d3drag","getSmartComputedStyle","css","textEl","mandatoryStyle","fill-opacity","renderer_utils_typeof","computedStyle","styleForSmartLabel","hasTouch","initProp","fetchPropValues","propNames","deps","setContexts","contexts","propObj","contextMap","_didIteratorError","_iteratorError","_step","_iterator","depProps","err","registerListener","propList","callBack","_options$","namespaceInf","callbackFn","namespaceVal","commits","_savedCommits","propListenerMap","_propListenerMap","listenersObj","_registeredListeners","_contextMap","contextsObj","commitsObj","subNamespaces","propDeps","nm","fnInf","store_toConsumableArray","registerPropInMaps","registeredListeners","subNamespace","allProps","_fnCount","addListenerToNamespace","_listeners","namespaceListeners","listenerTypes","removePropValue","propInf","sns","Store","store_classCallCheck","_commits","_queuedProps","_locked","store_createClass","lockModel","lock","unlockModel","unlock","lockCommits","locked","unlockCommits","queuedProps","_params","store_slicedToArray","propName","_params2","commit","addSubNamespace","propFns","nsObj","retrieveNamespaces","disableListener","sanitizedVal","savedCommits","disabled","registerChangeListener","registerImmediateListener","_len4","_key4","computed","calculatedProp","_this$model","unsubscribeAll","unsubscribe","listenersMap","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","removeSubNamespace","listenerMap","snsMap","transactor","holder","conf","stateProps","nameSpaceProp","nsProp","compareTo","_len5","_key5","paramsLen","prevVal","spreadParams","typeCheck","typeExpected","oldValues","events","EVENT_LIST","composition","resolveFn","notification","hasOwn","LifeCycleManager","lifecycle_manager_classCallCheck","_eventList","_promises","_notifiers","_lifeCycles","_unreleasedLifeCycles","_boot","_preparePromises","promise","_makeNotifierPromise","createPromise","then","prm","formalName","client","_releasePromisesFromCache","_notify","stage","_resolvePromise","retrieve","_callLifeCycleCallback","_cachePromise","_resetTargetPromise","lifeCycles","DRAG","HOVER","SELECTIONDRAG","CLICK","LONGTOUCH","TOUCHDRAG","ALL_ACTIONS","SELECTION_NEW_ENTRY","SELECTION_NEW_EXIT","SELECTION_NULL","SELECTION_OLD_ENTRY","SELECTION_OLD_EXIT","SelectionSet","completeSet","_volatile","selection_set_classCallCheck","_completeSetCount","_lockedSelection","_resetted","entrySet","exitSet","lockedSel","addSet","removeSet","updateSet","changeSideEffectAvailability","toEnable","sideEffects","change","enable","disable","getMergedSet","helper_toConsumableArray","conditionsMap","mergedEnter","SELECTION","mergedExit","complete","getSetInfo","selectionSet","propagationData","resetted","getModelFromSet","conditions","condition","Firebolt","actions","behaviourEffectMap","firebolt_classCallCheck","_sideEffectDefinitions","_sideEffects","_propagationInf","_actions","behavioural","physical","_selectionSet","_volatileSelectionSet","_propagationFields","_sourceSideEffects","_propagationBehaviourMap","_sourceBehaviours","_actionBehaviourMap","_config","_behaviourEffectMap","_entryExitSet","_actionHistory","_queuedSideEffects","mapSideEffects","registerBehaviouralActions","registerSideEffects","registerPhysicalBehaviouralMap","physicalBehaviouralMap","registerPhysicalActions","setSideEffectConfig","sideEffect","sideEffectConf","behEffectMap","preventDefaultActions","effectNames","effects","firebolt_toConsumableArray","behaviours","initializeBehaviouralActions","dispatchableBehaviours","Action","prepareSelectionSets","initializeSideEffects","sideEffectStore","actionHistory","queuedSideEffects","combinedSet","unionSets","behaviour","entryExitSet","existingModel","aggFns","effect","firebolt_typeof","sideEffectInstance","isEnabled","mutates","dispatchSideEffect","propagationInfo","propagate","getSideEffects","propagationSelectionSet","getPropagationSelectionSet","shouldApplySideEffects","sourceSelectionSet","applicableSideEffects","getApplicableSideEffects","applySideEffects","behaviourConditions","sideEffectConditions","physicalAction","actionBehaviourMap","behaviourMap","mapActionsAndBehaviour","onDataModelPropagation","propValue","dispatchBehaviour","uniqueIds","behaviouralActions","volatileSelectionSet","sideEffectDefinitions","sideEffectsMap","SideEffect","initedActions","initializePhysicalActions","physicalActions","phyAction","initedPhysicalActions","mapObj","getDefaultTargetContainer","bindActionWithBehaviour","targets","behaviourList","entryRowIds","getUids","propagationSource","applicableSelectionSets","GenericBehaviour","firebolt","generic_classCallCheck","_enabled","selectionSets","getSelectionSets","_this$firebolt$getAdd","getAddSetFromCriteria","getPropagationInf","setSelectionSet","getEntryExitSet","_selectionSet$getSets","getSets","setConfig","getFullData","getSourceFields","VolatileBehaviour","reset","existingAddSet","updateExit","getCompleteSet","BRUSH","HIGHLIGHT","TOOLTIP","FILTER","HighlightBehaviour","BrushBehaviour","BEHAVIOURNAMES","FilterBehaviour","PersistentBehaviour","updateEntry","mergedExitSet","completeSetCount","SelectBehaviour","getDragActionConfig","sourceInfo","axes","xAxis","yAxis","axisFields","xField","getMembers","yField","xFieldType","yFieldType","stPos","startPos","endPos","dragDim","isXDimension","isYDimension","xRange","yRange","selectedDomains","rangeObj","xdom","ydom","snap","getNearestRange","attachDragEvent","targetEl","drawingInf","touchStart","d3Drag","getDrawingContext","getSourceInfo","beh","dragEnd","hover","interaction","tooltip","svgContainer","nearestPoint","getNearestPoint","getAllPoints","showInPosition","generatePayloadFromEvent","click","physical_defineProperty","_physicalActions","ACTIONNAMES","longtouch","touchEnd","touchdrag","ANCHORS","BRUSH_ANCHORS","PERSISTENT_ANCHORS","HIGHLIGHTER","CROSSLINE","PROPS","valueParser","GenericSideEffect","generic_sideeffect_classCallCheck","_strategy","_strategies","SurrogateSideEffect","interactionType","layers","layer","interactive","applyInteractionStyle","SpawnableSideEffect","_drawingContext","changeVisibility","sideEffectGroup","visible","defClassName","classPrefix","SelectionBox","boxConf","box","drawingContext","unitWidth","unitHeight","selectionGroupClassName","hide","sourceInf","_getBoxDimensionsFrom","getBoxDimensionsFromPayload","direction","xDim","yDim","xLinear","yLinear","xCriteria","yCriteria","x1Val","x2Val","bandScale","x1DomainIndex","x2DomainIndex","_sort2","helper_slicedToArray","getScaleValue","getUnitWidth","y1Val","y2Val","y1DomainIndex","y2DomainIndex","_sort4","_xDim","_yDim","dimension","show","selectionBox","selectionBoxDrag","onDrag","boxClassName","INITIAL_STYLE","connectorClassName","margin","content","iconContainerSize","iconScale","iconShape","iconColor","rowMargin","separator","parentClassName","arrow","getArrowPos","dim","measurement","arrowPos","boxHeight","boxWidth","arrowWidth","plotBottom","boxBottom","plotRight","boxRight","placeArrow","tooltipArrow","_tooltipArrow","tooltipBackground","_tooltipBackground","arrowConf","_arrowOrientation","Content","content_classCallCheck","_model","_formatter","ctx","_mount","displayFormat","table","tbody","elemData","el","shape","Tooltip","htmlContainer","tooltip_classCallCheck","connectorContainer","tooltipConf","contentClass","_tooltipContainer","_contentContainer","_contents","_tooltipConnectorContainer","qualifiedClassName","addClass","defConf","contentConfig","reorderContainers","contentConf","render","_target","repositionArrow","arrowDisabled","arrowOrient","outsidePlot","connector","_offset","orientation","_extent","arrowSize","topSpace","dimX","rightSpace","leftSpace","positionTop","positionRight","positionLeft","positionHorizontal","positionVertical","_position","_arrowPos","HIGHLIGHT_SUMMARY","formatters","strategies_defineProperty","getKeyValue","isSelected","removeKey","keyObj","valueObj","margin-left","generateRetinalFieldsValues","valueArr","retinalFields","dimensionMeasureMap","fieldInf","dataLen","colorAxis","shapeAxis","sizeAxis","retField","retIndex","retinalFieldValue","measuresArr","icon","getColor","getShape","getSize","_fieldInf$retField","formattedRetinalValue","hasMultipleMeasures","measure","measureIndex","_fieldInf$measure","dName","formatterFn","strategies_toConsumableArray","buildTooltipData","nestedDataObj","fieldValues","_dataModel$getData","fieldspace","_context$firebolt$con","detailFields","containsDetailField","getFieldInf","timeDiffs","defFormatter","nf","getTabularData","allMeasures","_construct","filteredMeasures","generateTooltipContent","nestedData","_nestedData$i","_fieldInf$field","_loop2","len2","_fieldInf$name","strategies","aggregatedModel","fieldsConf","measureNames","configResolvers","tooltip_defineProperty","_configResolvers","specificConf","_default","_getPrototypeOf2","side_effects_tooltip_classCallCheck","tooltip_possibleConstructorReturn","tooltip_getPrototypeOf","_tooltips","sanitizeConfig","strategyObj","sanitizedConf","setStrategy","totalHeight","totalWidth","isEmpty","tooltips","boundBox","dataModels","fragmented","showVertically","tooltipPos","boxes","tooltip_toConsumableArray","sourceFields","plotDimensions","getPlotPointsFromIdentifiers","strategy","strategyConf","dataTransform","projectFields","plotDim","dt","layoutContainer","parentContainerDimensions","layoutBoundBox","unitBoundBox","tooltipInst","TooltipRenderer","timeDiffsByField","strategyFn","positionRelativeTo","tooltipBoundBox","getContents","spaceOutBoxes","spaceOutIfOverlap","firstBox","secondBox","opposite","highlightSummary","selectionSummary","projectedFields","Crossline","bandWidth","_this$config","bandClass","lineClass","axisIndex","fieldInst","xOffset","plotWidth","crossline_toConsumableArray","getPlotSpan","getPlotPadding","startPx","endPx","dataPoint","parentGroup","fade","fadeFn","focus","highlight","PlotHighlighter","plot_highlighter_classCallCheck","plot_highlighter_possibleConstructorReturn","plot_highlighter_getPrototypeOf","FilterEffect","entryModel","clearCaching","resetData","enableCaching","AnchorEffect","anchors_classCallCheck","anchors_possibleConstructorReturn","anchors_getPrototypeOf","_layersMap","addAnchorLayers","addLayer","layerRegistry","layerDefs","layerDef","mark","layerCls","shouldDrawAnchors","depLayerEncoding","encoding","defaultSizeValue","commonName","groupId","calculateDomain","getTransitionConfig","owner","registry","_linkedLayer$getTrans2","anchors_slicedToArray","getLayerByName","getTransformedDataFromIdentifiers","transformedData","transformedDataModel","PersistentAnchors","BrushAnchors","behaviour_effect_map_defineProperty","BEHAVIOURS","SIZE","COLOR","SHAPE","TEXT","ENCODING","X0","Y0","RADIUS","RADIUS0","ANGLE","ANGLE0","nearestPointThreshold","strokeOpacity","connectNullData","SimpleLayer","props_defineProperty","metaInf","coord","_customConfig","newConf","defaultPolicy","BOTTOM","TOP","LEFT","RIGHT","axisOrientationMap","axis_orientation_defineProperty","_axisOrientationMap","AxisOrientation","LINEAR","BAND","TIME","ORDINAL","QUANTIZE","QUANTILE","LOG","POW","IDENTITY","SEQUENTIAL","THRESHOLD","CONTINOUS","DISCRETE","HIDDEN","DEFAULT_ANGLE_DOMAIN","scaleLinear","scales","scaleThreshold","scaleLog","scalePow","scaleIdentity","scaleOrdinal","scaleSequential","scaleQuantize","scaleQuantile","scaleTime","scaleMap","scale_creator_defineProperty","_scaleMap","ScaleType","createScale","scaleFactory","adjustRange","axisName","axisNamePadding","fixedBaseline","labels","rotation","smartTicks","numberOfTicks","showAxisName","showInnerTicks","showOuterTicks","yOffset","rotateAxis","instance","tickText","labelManager","renderConfig","getTickSize","yShift","xShift","tickLabelDim","quadrant","rotationNormalizer","angleToRadian","angle","changeTickOrientation","selectContainer","axisInstance","_smartTicks","isSmartTicks","registerAnimationDoneHook","setFixedBaseline","setAxisNamePos","textNode","axisNameHeight","availableSpace","longestWord","quarter","halfYearly","mintues","getTickIntervalFnBasedOnNumberOfTicks","possibleTickLevelIndex","maxPossibleTicks","tickIntervalLevelInfo","tickIntervalInfo","numOfPossibleTicks","getActualTickInterval","noOfTicks","minWidthBetweenTicks","_minTickDistance","getTickIntervalBasedOnCurrentLevel","_dependencies","longestWordType","applyTickSkipping","minTickDistance","minTickSpace","_minTickSpace","minTickWidth","maxTicks","getSkippedTicks","actualNumberOfTicks","_minDiff","millisecondInterval","numOfTicksAccordingToMinDiff","adjustHorizontalRange","adjustVerticalRange","rangeAdjustmentMap","space_setter_defineProperty","_rangeAdjustmentMap","setAxisRange","rangeBounds","getAdjustedRange","getAxisOffset","timeDiff","avWidth","bars","spaceSetter","spaceConfig","heightForTicks","_context$availableSpa2","availWidth","availHeight","isOffset","_context$renderConfig2","_context$getAxisDimen","getAxisDimensions","tickDimensions","allTickDimensions","axisNameDimensions","tickDimHeight","tickDimWidth","namePadding","labelConfig","minTickHeight","getTickValues","tickShifter","maxTickSpaces","widthForTicks","totalTickWidth","getRotatedSpaces","rotatedHeight","rotatedWidth","setOffset","logicalSpace","getAxisComponentDimensions","axisTicks","largestTick","largestTickDimensions","smartTick","_context$renderConfig","labelFunc","_tickLabelStyle","originalLabel","getFormattedText","_axisNameStyle","getHorizontalAxisSpace","axisDimensions","_context$config2","axisDimHeight","minTickDiff","getMinTickDifference","cartesian_axis_helper_toConsumableArray","getVerticalAxisSpace","_context$config3","calculateBandSpace","largestDimHeight","_getHorizontalAxisSpa","_getVerticalAxisSpace","getValidDomain","userDom","setContinousAxisDomain","_domain","axisComponentDimensions","oldConfig","mockedOldConfig","shouldAxesScaleUpdate","hasAxesConfigChanged","properties","tickFormatter","sanitizeTickFormatter","_scale","_axis","createAxis","_tickFormatter","resetRenderConfig","_renderConfig","_maxTickSpaces","SimpleAxis","simple_axis_classCallCheck","_range","_domainLock","_axisDimensions","defCon","simpleConfig","bodyElem","dist","_animationDonePromises","domainValue","setAxisComponentDimensions","smartAxisName","axisClass","_objectSpread","setTickConfig","setSmartAxisName","_this$config2","dimType","widthDim","getSmartAxisName","oriSize","domainVal","computeAxisDimensions","_getAxisComponentDime","labelHeight","labelWidth","calculateContinousSpace","_context$renderConfig6","axisNameWidth","_getHorizontalAxisSpa2","_getVerticalAxisSpace2","renderAxis","tickLabelStyle","axisTickFormatter","labelProps","labelOffset","all","LinearInterpolator","LogInterpolator","PowInterpolator","interpolatorMap","continous_axis_defineProperty","_interpolatorMap","ContinousAxis","continous_axis_classCallCheck","continous_axis_possibleConstructorReturn","continous_axis_getPrototypeOf","InterpolatorCls","_interpolator","_this$renderConfig","sanitizeDomain","_get2","_get","_this$renderConfig2","newTickValues","tickSpace","getNumberOfTicks","labelDim","numberOfValues","tickLength","_this$smartTicks$","BandAxis","_this$maxTickSpaces","_getRotatedSpaces","paddingNormalized","formatTickValue","TimeAxis","time_axis_classCallCheck","time_axis_possibleConstructorReturn","time_axis_getPrototypeOf","time_axis_get","rawTicks","resetTickInterval","_context$config8","_context$availableSpa","adjustedRange","x11Colors","Pink","LightPink","HotPink","DeepPink","PaleVioletRed","MediumVioletRed","LightSalmon","Salmon","DarkSalmon","LightCoral","IndianRed","Crimson","FireBrick","DarkRed","Red","OrangeRed","Tomato","Coral","DarkOrange","Orange","Gold","Yellow","LightYellow","LemonChiffon","LightGoldenrodYellow","PapayaWhip","Moccasin","PeachPuff","PaleGoldenrod","Khaki","DarkKhaki","Cornsilk","BlanchedAlmond","Bisque","NavajoWhite","Wheat","BurlyWood","Tan","RosyBrown","SandyBrown","Goldenrod","DarkGoldenrod","Peru","Chocolate","SaddleBrown","Sienna","Brown","Maroon","DarkOliveGreen","Olive","OliveDrab","YellowGreen","LimeGreen","Lime","LawnGreen","Chartreuse","GreenYellow","SpringGreen","MediumSpringGreen","LightGreen","PaleGreen","DarkSeaGreen","MediumSeaGreen","SeaGreen","ForestGreen","Green","DarkGreen","MediumAquamarine","Aqua","Cyan","LightCyan","PaleTurquoise","Aquamarine","Turquoise","MediumTurquoise","DarkTurquoise","LightSeaGreen","CadetBlue","DarkCyan","Teal","LightSteelBlue","PowderBlue","LightBlue","SkyBlue","LightSkyBlue","DeepSkyBlue","DodgerBlue","CornflowerBlue","SteelBlue","RoyalBlue","Blue","MediumBlue","DarkBlue","Navy","MidnightBlue","Lavender","Thistle","Plum","Violet","Orchid","Fuchsia","Magenta","MediumOrchid","MediumPurple","BlueViolet","DarkViolet","DarkOrchid","DarkMagenta","Purple","Indigo","DarkSlateBlue","SlateBlue","MediumSlateBlue","White","Snow","Honeydew","MintCream","Azure","AliceBlue","GhostWhite","WhiteSmoke","Seashell","Beige","OldLace","FloralWhite","Ivory","AntiqueWhite","Linen","LavenderBlush","MistyRose","Gainsboro","LightGray","Silver","DarkGrey","Grey","DimGrey","LightSlateGrey","SlateGrey","DarkSlateGrey","Black","palette","DEFAULT_GRADIENT_COLOR","DEFAULT_CONFIG","stops","getHslString","hslArr","convertToXllString","baseString","getActualHslColor","paletteColor","hexToHsv","props_toConsumableArray","newConfig","uniqueValues","treatNullMeasures","scaledVal","minDomainScaledVal","resolveAxisConfig","propVal","defaultVal","getStops","newStops","color_strategy_toConsumableArray","rangeStops","newStopsLength","newRange","hslInterpolator","interpolateHslLong","indexedDomain","uniqueVals","scaleDomain","indexedDomainMeasure","normalDomain","steppedDomain","_getStops","continousSteppedDomain","_getStops2","uniqueRange","indexedRange","numVal","normalRange","strategyGetter","domainType","rangeType","schemeType","color_strategy_defineProperty","domainRange","ColorAxis","color_axis_classCallCheck","_domainType","_rangeType","_schemeType","getSchemeType","_colorStrategy","setColorStrategy","updateDomain","colorStrategy","getScheme","colorSchemes","hslColorArray","getRawColor","color_axis_toConsumableArray","scaleInfo","domainRangeFn","transformationArr","newH","newS","newL","newA","size_strategy_defineProperty","size_strategy_strategies","pieceWiseRange","size_strategy_toConsumableArray","intervals","newIntervals","discreteRange","SizeAxis","size_axis_classCallCheck","_sizeStrategy","domainInfo","domainFn","generator","ShapeAxis","shape_axis_classCallCheck","_generatedShapes","shapeType","shapeGenerator","generatorFn","generatedShapes","createAngleValues","angleData","_angleFn","_angleValues","AngleAxis","angle_axis_classCallCheck","customDomain","customRange","_this$_range","angle_axis_slicedToArray","ROWS","COLUMNS","COL","ROW","CELL","X_AXES","Y_AXES","ENTRY_CELLS","EXIT_CELLS","PRIMARY","SECONDARY","adjustDomain","minOuterRadius","RadiusAxis","radius_axis_classCallCheck","_radiusFactor","sanitizedRange","rangeVal","DATA_TYPES","group_transform","data_type_scale_map_defineProperty","_dataTypeScaleMap","groupByIndices","identityTransform","transformMap","transform_factory_defineProperty","_transformMap","uniqueField","valueField","normalizedData","normalizeData","uniqueFieldIndex","valueFieldIndex","seriesKeyIndex","seriesKeys","tuples","rowObj","_tuple","seriesKey","newArr","orderBy","orderIndex","groupByIndex","stackData","seriesData","transformFactory","POLAR","CARTESIAN","transformColor","styleType","intensity","stateColor","originalColor","colorInfo","interactionStyles","elements","getPlotElementsFromSet","_d$meta","colorTransform","helpers_slicedToArray","getAxesScales","_map2","_map4","xScale","yScale","encodingFieldInfRetriever","helpers_defineProperty","_encodingFieldInfRetr","encodingInf","getIndividualClassName","individualClassName","classNameStr","dataNormalizers","_dataNormalizers","encodingFieldInf","radiusFieldIndex","angleFieldIndex","radius0FieldIndex","angle0FieldIndex","fieldsLen","pointObj","radius0","angle0","enc","rowId","transformType","xFieldIndex","yFieldIndex","x0FieldIndex","y0FieldIndex","domainCalculator","_domainCalculator","layerInst","angleValues","radius0Field","encodingFieldsInf","xFieldSubType","yFieldSubType","x0Field","y0Field","yEnc","xEnc","attachDataToVoronoi","_ref3","helpers_toConsumableArray","updateStyle","positionPoints","positioner","encodingTransform","getPlotMeasurement","dimensionalValues","fieldInfo","_bandScale","span","groupSpan","offsetValues","actualGroupWidth","dataProps","innerPadding","getGroupSpan","isAxisBandScale","axisPadding","groupPadding","resolveInvalidTransformType","transformResolverPredicates","groupByField","dimensionField","getValidTransformForAggFn","resolvedInvalidTransformType","_context$encodingFiel","isCustomTransformTypeProvided","resolveEncodingValues","transformedValues","getColorMetaInf","colorInf","getHslArray","getCoordValue","trig","coordValueGetter","toCartesianCoordinates","rangePlot","_point$update","_coordValueGetter","axisArr","localOptions","local_options_defineProperty","STATE_NAMESPACES","listener_map_slicedToArray","_cacheEnabled","_cachedData","encodingValue","resolveTransformType","_transformedData","getTransformedData","_normalizedData","getNormalizedData","calculateDomainFromData","layerNs","groupNs","BaseLayer","base_layer_classCallCheck","base_layer_possibleConstructorReturn","base_layer_getPrototypeOf","base_layer_assertThisInitialized","alias","_points","_measurement","_graphicElems","_store","_this$metaInf2","parentNamespace","_encodingFieldsInf","_encodingTransform","_alias","transformData","encodingType","_this$metaInf3","transformedDataArr","_updateLock","_transformType","getValidTransform","_this$metaInf4","unitDom","pointMap","_pointMap","_dataProps","_this$encodingFieldsI","base_layer_slicedToArray","xMeasure","yMeasure","_identifiers$","_identifiers$2","xMeasureIndex","yMeasureIndex","getAllAttrs","filteredPoints","base_layer_toConsumableArray","sizeVal","_identifiers$getData","identifierData","identifierSchema","_this$encodingFieldsI2","tupleArr","transformedVal","graphicElems","elems","_this$metaInf5","rowIndex","unitRowIndex","colIndex","unitColIndex","renderLayer","throwback","_context$metaInf","base_layer_defineProperty","getState","base_layer_construct","userConf","drawLine","curveInterpolatorFn","linepath","LineLayer","line_classCallCheck","line_possibleConstructorReturn","line_getPrototypeOf","isXDim","isYDim","xPx","yPx","resolvedEncodings","stroke","cachePoint","seriesClassName","containerSelection","colorField","colorFieldIndex","animateGroup","groupTransition","groupAnimateStyle","stroke-opacity","getPathStyle","translatePoints","colorValFn","colorVal","getDrawFn","searchRadius","_point$data$data","getIdentifiersFromData","layerId","drawArea","easeEffect","renderer_slicedToArray","enterAreaPath","updateAreaPath","selectionEnter","AreaLayer","area_get","area_getPrototypeOf","_getAxesScales","classNameFn","minYVal","basePos","y0Px","invalidY","invalidY0","resolvedValues","stroke-width","stroke-linejoin","states","fadeout","selected","ArcLayer","arc_classCallCheck","arc_possibleConstructorReturn","arc_getPrototypeOf","_prevPieData","_this$axes","radiusAxis","pieIndex","prevData","angleV","angles","_angles","uid","getOuterRadius","getInnerRadius","startAngle0","endAngle0","_previousInfo","getPreviousPoint","currIndex","prevArc","nextArc","_context$axes$angle$r2","arc_helper_slicedToArray","qualClassName","_arcFn","consecutiveExits","exitCounter","tweenPie","individualClass","tweenExit","exitArr","oldExitCounter","tweenExitPie","consecutiveExitArr","gElem","pieSlices","pieSliceInf","tData","drawText","selectionMerge","backgroundVal","textanchor","textStyle","background","backgroundPadding","_smartLabel$getOriSiz","backgroundEl","alignment-baseline","defaultEncoding","alignmentBaseLine","defRotation","pointTranslators","polar","textEncoding","angleAxis","textFormatter","backgroundEncoding","backgroundValue","cartesian","textField","textFieldIndex","textValue","text_slicedToArray","TextLayer","text-anchor","drawSymbols","createShape","groupElement","Element","newShape","nodeName","src","href","shapeElement","pathStr","checkPath","exitGroup","defColorStyle","fillOpacity","shapes","sizes","PointLayer","point_classCallCheck","point_possibleConstructorReturn","point_getPrototypeOf","_config$offset","offsetX","offsetY","point_slicedToArray","maxSize","generateDataPoints","point_toConsumableArray","drawFn","getMarkId","_maxSize","_getPlotMeasurement2","widthMetrics","heightMetrics","offsetXValues","offsetYValues","measurementConf","getMeasurementConfig","widthSpan","heightSpan","distanceLimit","drawRects","barEnterFn","transitionBars","selTransition","positionRetriever","isNegativeVal","barBasePos","resolveDimByField","axesInfo","spaceType","sizeEncoding","sizeConfig","sizeValue","enterSpace","minVal","maxVal","diffPx","minDomVal","_positionRetriever$ty2","bar_helper_slicedToArray","resolveDimensions","_resolveDimByField","enterWidth","enterX","xPos","_resolveDimByField2","enterHeight","BarLayer","bar_classCallCheck","bar_possibleConstructorReturn","bar_getPrototypeOf","_plotPadding","_plotSpan","bar_get","getTranslatedPoints","normalizedDataArr","clipElement","clipPathElement","bar_slicedToArray","barWidthMetrics","barHeightMetrics","barWidthOffsets","barHeightOffsets","barWidth","barWidthOffset","barHeight","barHeightOffset","uniqueFieldType","pointFound","bar_toConsumableArray","p2","tick_renderer","ticksEnter","angle0Axis","angle0V","angles0","_angles2","_layerInst$encodingFi","_config$span","xSpan","ySpan","x0Px","TickLayer","drawTicks","AREA_LAYER","ARC_LAYER","LINE_LAYER","TEXT_LAYER","POINT_LAYER","BAR_LAYER","TICK_LAYER","SIMPLE_LAYER","BASE_LAYER","sanitizeEncoding","layerFactory","compositeLayers","factoryObj","setLayerRegistry","reg","_layerRegistry","getSerializedConf","serializedDefs","defs","unitLayerDef","sDef","parseLayerDefinition","layerType","strs","layer_factory_toConsumableArray","getLayerInstance","instances","layerObj","layerConstructor","getLayerClass","composeLayers","sanitizeLayerConfig","DEFAULT_LAYERS","defaults_defineProperty","_DEFAULT_LAYERS","LAYER_TYPES","local_options","visual_group_local_options_defineProperty","_CONFIG$ROWS$COLUMNS$","SimpleGroup","action_behaviour_map_defineProperty","ACTIONS","sanitizeLayerDef","sanitizedDefs","sConf","unionDomainFromLayers","layerAxisIndex","getDataDomain","domainValues","layerDomain","fieldDomain","encodingDomain","fieldStr","domain1","renderLayers","_lifeCycleManager","notify","orderedLayers","layerParentGroup","layerDepOrder","getDependencyOrder","dependencyOrder","visited","visit","_layerDepOrder","_timeDiffs","getLayersBy","searchBy","removeLayersBy","createRenderPromise","_renderedPromise","_renderedResolve","radiusAxes","getRadiusRange","isXandYMeasures","_context$fields","src_helper_slicedToArray","xMeasures","yMeasures","GRID_BAND","GRID_LINE","getGridLayerDefinitions","axisType","getDefaultVisibilty","getLayerDefinition","_definition","_axes","_encoding","gridLines","gridBands","gridLineColor","zeroLineColor","gridBandColor","isLinearScale","grid_lines_defineProperty","isNegativeDomain","_context$axes","dimensionSubTypes","getValidSubtype","attachDataToGridLineLayers","_gridLines","_gridBands","gridLayerData","getGridLayerData","gridData","jsonData","_jsonData$push","grid_lines_toConsumableArray","calculateDomainListener","_layerAxisIndex","src_listener_map_slicedToArray","fieldsVal","removeExitLayers","layersMap","markSet","queuedLayerDefs","_queuedLayerDefs","layerDefArr","defFn","listener_map_toConsumableArray","hasPlotSpan","axesObj","temporalFields","filteredFields","_ref6","minimumConsecutiveDifference","_ref7","_ref8","_timeDiffsByField","originalData","cachedData","createSelectionSet","attachPropagationListener","_ref9","createGridLineLayer","vuConf","atomicDef","_ref11","_ref12","transformDataModels","transformVal","_ref15","_ref16","layerAxisIndexVal","axesVal","attachDataToLayers","transformedDataModels","dataSource","_dimensionMeasureMap","getDimensionMeasureMap","retinalEncodingsAndMeasures","_layer$encodingFields","sizeField","shapeField","_retinalEncodingsAndM","src_helper_toConsumableArray","attachAxisToLayers","axisInf","src_props_defineProperty","_PROPS","payloadGenerator","brush","selectionDataModel","propPayload","getRangeFromData","propCriteria","fieldMap","isDimension","payload_generator_toConsumableArray","__default","propagateValues","propagationFieldInf","propagationFields","sideEfffects","mergedModel","sourceUnit","sourceCanvas","parentAlias","propagationBehaviour","propFields","facetByFields","getModelWithFacetData","schema1","data1","derivedSchema","dataAtFirstPos","data_propagator_toConsumableArray","behaviourInstance","propagationConf","sourceBehaviour","enabled","propConf","sideEffectPolicy","sourceIdentifierFields","hasCommonCanvas","UnitFireBolt","src_firebolt_classCallCheck","firebolt_possibleConstructorReturn","firebolt_getPrototypeOf","SIDE_EFFECTS","changeSideEffectStateOnPropagation","unitId","aliasName","propagationSourceCanvas","sourceUnitId","sourceSideEffects","sideEffectInstances","actionOnSource","mappedEffects","se","sideEffectCheckers","_getSelectionRejectio","getSelectionRejectionModel","propValuesMap","rejectionModel","_propModel$getData","exitRowIds","rowIdsObj","_cachedValuesMap","enabledFn","sourceBehaviours","trackerClassName","arcLayerClassName","sideEffectClassName","src_local_options","src_local_options_defineProperty","_CONFIG$LAYERDEFS$TRA","getValuesMap","_model$getData","fieldIndices","local_options_toConsumableArray","oldData","unitNs","VisualUnit","visual_unit_classCallCheck","lifeCycleManager","_gridLinesSelection","_gridBandsSelection","_this$_dependencies","fireboltDeps","_firebolt","_rootSvg","class","renderGridLineLayers","gridLineParentGroup","_entry","grid_lines_slicedToArray","parentGroupClass","_sideEffectGroup","createSideEffectGroup","initSideEffects","rootSvg","_this$parentContainer","parentContainerInf","layerDefinition","layerDefinitions","components","layerIndex","layersArr","_layersArr","markId","defArr","getLayerFromDef","existingLayer","instanceArr","instanceValues","visual_unit_toConsumableArray","layerdeps","depArr","resolveEncodingTransform","resolvable","getLayerAxisIndex","_layer$config","specificField","encodingField","_this$_dependencies2","parentModel","dimValue","getNearestDimensionalValue","entryVal","pointInf","getMarkInfFromLayers","markInf","parsedIdentifiers","transposeArray","getPointsFromIdentifiers","localNs","visual_unit_slicedToArray","visual_unit_defineProperty","dispatchQueuedSideEffects","firebolt_helper_toConsumableArray","clearActionHistory","visual_unit_construct","Variable","ComposedVars","composed_vars_classCallCheck","composed_vars_possibleConstructorReturn","composed_vars_getPrototypeOf","vars","_vars","_data","member","getMinDiff","SimpleVariable","simple_var_classCallCheck","simple_var_possibleConstructorReturn","simple_var_getPrototypeOf","oneVar","_oneVar","dtFormat","dateFormat","fieldDef","varInst","convertToVar","datamodel","transformFields","field_sanitizer_slicedToArray","normalizedFields","normalizeFields","norFields","orderFields","fieldArray","temporalArr","categoricalArr","fieldList","numOfMeasures","allDimensions","field_sanitizer_toConsumableArray","temporal","categorical","rowsInfo","columnsInfo","rowDimensions","rowMeasures","rowTemporalFields","rowCategoricalFields","columnDimensions","columnMeasures","columnTemporalFields","columnCategoricalFields","VisualEncoder","_fieldInfo","_axisFrom","_headerFrom","__headerFrom","axisFrom","_getHeaderAxisFrom2","visual_encoder_slicedToArray","getHeaderAxisFrom","rowHeader","rowAxis","_getHeaderAxisFrom4","colHeader","colAxis","headerFrom","scaleMaps","dataTypeScaleMap","generateAxisFromMap","axesCreators","facetFields","axisKey","groupAxes","currentAxes","cacheMaps","commonAxisKey","getAxisKey","axisConfig","getAxisConfig","axisInfo","axisOrientation","columnIndex","rawUserAxisConfig","userAxisConfig","_rotationLock","createSimpleAxis","Cls","sanitizeIndividualLayerConfig","encodingConfigs","getIndex","arrIndex","CartesianEncoder","geomCellAxes","projections","rowFields","columnFields","geomCell","xAxes","yAxes","units","1","rIdx","unitsArr","cIdx","encodingDomains","axisTypeIndex","typeOfField","_resolver$axes","axesArr","adjustedDomain","typeOfAxis","alignZeroLine","getAdjustedDomain","y1ratio","y2ratio","allSameSign","currentFieldName","sortingOrder","sortCategoricalField","sortOrderType","facets","counter","primaryFacets","secondaryFacets","primaryFields","secondaryFields","primaryLen","secondaryLen","projArr","primaryField","secondaryField","facet","existIndex","axisFromIndex","cartesian_encoder_get","cartesian_encoder_getPrototypeOf","groupedModel","encodingObj","retriveDomainFromData","layerArray","serializedLayers","userLayerConfig","layerConfig","retinalConfig","colField","colFieldName","rowField","configs","rowFieldName","rowFieldType","getDefaultMark","colFieldType","defConfigs","layerConfigs","getLayerConfFromFields","colFields","encodingArr","encoder_helper_toConsumableArray","xFields","yFields","colFieldExist","rowFieldExist","layerConf","mergedLayerConf","serializedLayerConfig","cartesian_encoder_toConsumableArray","axesCls","polar_encoder_defineProperty","_axesCls","PolarEncoder","pieAxes","matrixLayers","resolverAxes","varInstances","encType","userConfig","domainProps","matrixInstance","unitDomains","setRadiusFactor","sizeFieldIndex","sizeMultiplier","getSizeMultiplier","sizeAxisDomain","encodingFields","_layers","sanitizedRows","sanitizedColumns","polar_encoder_get","polar_encoder_getPrototypeOf","sanitizedFields","typeIndex","polar_encoder_toConsumableArray","layerEncoding","sanitizedConfig","angleField","angle0Field","RetinalEncoder","newAxes","createRetinalAxis","fieldProps","getAxisType","isDistributionEqual","group_utils_toConsumableArray","rowType","initializeCacheMaps","cellMap","xAxesMap","yAxesMap","entryCellMap","exitCellMap","headerCreator","fieldHeaders","TextCell","getHeaderText","rowLength","getEncoder","encoder","hasPolarEncodings","userAxisFromConfig","group_utils_slicedToArray","firstField","secondField","firstFieldType","secondFieldType","setFacetsAndProjections","_encoder$simpleEncode","simpleEncoder","getFacetsAndProjections","group_utils_defineProperty","getBorders","matrices","showRowBorders","showColBorders","showValueBorders","valueMatrix","_rows","leftRows","rightRows","_columns","topColumns","bottomColumns","_encoder$fieldInfo","allDimensionLength","allMeasuresLength","allTemporalFieldsLength","getRowBorders","borders","getColumnsBorders","getValueBorders","borderTypeRow","borderTypeCol","sortFacetFields","sortInfo","sortConfig","facetSortConfig","getSchemaDef","getFieldNames","fieldVar","matrix_model_toConsumableArray","prepareHashMaps","facetNames","rowKey","joinedRowKey","createJoinedKeys","keyArr","joinedKey","formatKeys","formatterList","formattedKeys","rKeys","createColumnDataModels","colContext","sourceDM","rowFacets","colFacets","rowKeyArr","colKeyObj","newRowIndex","splitModelsHashMap","currentColumnIndex","colKeyArr","colKey","hashMapKey","splitByColumn","optionalProjections","facetInfo","projectionInfo","geomCellCreator","_indices$i","projectionIndexObject","matrix_model_objectSpread","getMatrixModel","globalConfig","currentRowIndex","prepareProjectionInfo","colProjections","rowProjections","rowProj","rIndex","newRIndex","colProj","cIndex","newCIndex","newRowProj","newColProj","prepareFacetInfo","rowFacetNames","colFacetNames","allFacets","_getSplitModelHashMap","getSplitModelHashMap","splitModels","rowKeyHashMap","colKeyHashMap","rowKeys","colKeys","splitContext","splitByRow","generalContext","rowKeyObj","createRowDataModels","rowContext","rowIndexForCurrentKey","_createColumnDataMode","_createColumnDataMode2","_createColumnDataMode3","_createColumnDataMode4","formattedColKeys","facetField","rawFormat","columnKeys","createValueCells","suppliedLayers","GeomCell","horizontalAxis","verticalAxis","datamodelTransform","layerConfigArr","getLayerConfig","normalizedColumns","normalizedRows","cell_creator_toConsumableArray","geomCellKey","getCellKey","columnId","updateCells","facetKey","extractAxisIndex","createAxisCells","currObj","axisInst","_axisInst$config","AxisCell","BlankCell","extractFacetIndex","headerPlaceholderGn","selectionObj","selectionKeys","keySet","textCells","createTextCells","textCell","generatePlaceholders","facetsAndProjections","encoders","valuesMatrix","takeAxisFrom","takeHeaderFrom","axisPlaceholderGn","selObj","axesMatrix","selObjProp","axesForDraw","rowsPrimary","rowPrime","rowsSecondary","rowSec","columnsPrimary","colPrime","columnsSecondary","colSec","_selectionObj","section","hContext","getAxisFields","fieldHolder","ac","transformDataModel","resolvedData","extractFields","layerFields","_ref4","flattenArray","getFieldsFromSuppliedLayers","suppliedLayerConfig","aggregationFns","nearestAggFns","resolvedAggFns","sortDmTemporalFields","computeMatrices","componentRegistry","autoGroupBy","otherEncodings","matrixGnContext","getCellDef","isRowSizeEqual","isColumnSizeEqual","colCells","rowCells","resetSimpleAxes","newCacheMap","valueCellContext","serializeLayerConfig","cellCreator","valueCellsCreator","valueMatrixInfo","removeExitCells","exitCells","qualifiedStateProps","getQualifiedStateProps","placeholder","_mutateAxesFromMap","mutateAxesFromMap","xAxisSet","yAxisSet","axisId","createUnits","_generateMatrices","generateMatrices","leftHeaders","topHeaders","bottomHeaders","rightHeaders","cell_creator_slicedToArray","leftFacets","rightFacets","rowPriority","colPriority","leftMatrix","rightMatrix","topMatrix","bottomMatrix","currentBottomLength","setAvailableSpace","rowMatrix","columnMatrix","RESOLVER_PROPS","MatrixResolver","matrix_resolver_classCallCheck","_registry","_layerConfig","_matrixLayers","_rowMatrix","_columnMatrix","_valueMatrix","_facets","_projections","_datamodelTransform","_units","_cacheMaps","_fireboltDeps","maps","matrix_resolver_toConsumableArray","_horizontalAxis","_verticalAxis","matrixType","matrix_resolver_defineProperty","_this5","sideEffectRegistry","_this$dependencies","unitConfig","extractUnitConfig","_this$getAllFields","retContext","getRetinalFieldsDomain","retinalEncoder","setCommonDomain","_this6","retinalAxes","updateModel","placeholders","bottomLeft","bottomRight","_this$dependencies3","showHeaders","matrix_resolver_slicedToArray","topCols","bottomCols","rowHeaders","blankCellCreator","footers","topLeft","topRight","ValueMatrix","matrixArr","value_matrix_classCallCheck","instancesById","cellValue","_instancesById","_matrix","_filterFn","rowWidth","currentRowWidth","getLogicalSpace","rowHeight","currentRowHeight","setMatrixInstances","_composition","createMatrices","matrixConfig","unsubscribeChangeListeners","sanitizeRetinalConfig","retinalConf","confValue","groupType","fieldSanitizer","setAxisAndHeaders","placeholderInfo","getMatrices","_groupedDataModel","createRetinalAxes","setDomains","cornerMatrices","createHeaders","metaData","border","unionUnitDomains","registerDomainChangeListener","visual_group_props_defineProperty","visual_group_props_PROPS","cellRegistry","VisualGroup","visual_group_classCallCheck","visual_group_possibleConstructorReturn","visual_group_getPrototypeOf","componentSubRegistry","visual_group_assertThisInitialized","_selection","initializeGlobalState","globalState","createUnitState","_VisualUnit$getState2","visual_group_helper_slicedToArray","localState","createLayerState","_BaseLayer$getState2","setupChangeListeners","stores","comp","getListeners","storeInst","listenerInf","variable","findInGroup","channel","group_utils_this","facetType","projType","getRetinalAxes","getSimpleAxes","_this$resolver$getAll","visual_group_defineProperty","info","existingRemoveSet","select_toConsumableArray","firebolt_action_behaviour_map_defineProperty","action_behaviour_map_actionBehaviourMap","propagationBehaviourMap","_propagationBehaviour","firebolt_behaviour_effect_map_defineProperty","firebolt_behaviour_effect_map_behaviourEffectMap","propagationSideEffects","_propagationSideEffec","SCALE_FUNCTIONS","VALUE","canvasAlias","rawVal","check","assembleModelFromIdentifiers","temp","src_firebolt_helper_toConsumableArray","LegendFireBolt","_Firebolt","legend_firebolt_classCallCheck","legend_firebolt_possibleConstructorReturn","legend_firebolt_getPrototypeOf","legend_firebolt_inherits","legend_firebolt_createClass","behaviourName","getCriteriaFromData","firebolt_physical_defineProperty","physical_physicalActions","boundingBox","gradientDimensions","axisScale","rangeShifter","drag_defineProperty","getSelectionCriteria","selectionBoxMeasure","drawingInfMeasure","subjectStartPoint","gradientDimension","legendGradContainer","legendSelGroup","enterFn","getMousePos","boundingClientRect","selection_box_drag_defineProperty","fadeOut","brighten","LegendHighlighter","legend_highlighter_classCallCheck","legend_highlighter_possibleConstructorReturn","legend_highlighter_getPrototypeOf","legendContainer","resetLogicalSpace","title","_title","ALIGN","DEFAULT_MEASUREMENT","LEGEND_TITLE","borderStyle","borderColor","bounds","upper","ICON_MAP","getScaleInfo","scaleType","steps","scaleFn","getInterpolatedArrayData","domainForLegend","scaleParams","requiredWidth","requiredHeight","upperBound","maxTickDiff","alignment","smartLabelCalc","minimumTickSize","_smartLabelCalc$getOr","isInteger","getcomputedArray","computationhelper","requiredMeasure","availableMeasure","currentTickValue","nextTickValue","measureParam","pixelPerTick","getInterpolatedData","recomputeSteps","getTickMeasure","_scaleParams$measures","interpolatedFn","tickValue","getDomainBounds","domainBounds","domainLeg","ele","legend_helper_defineProperty","getScaleFactor","SimpleLegend","simple_legend_classCallCheck","_metaData","_fieldName","_labelManager","_cells","defaultMeasurement","_computedStyle","legendBehaviours","_canvasAlias","getItemMeasures","_labelManager$getOriS","_this$measurement","effPadding","effBorder","effMargin","dataFromScale","titleSpace","getTitleSpace","titleHeight","titleWidth","labelSpaces","getLabelSpaces","_computeItemSpaces","computeItemSpaces","maxItemSpaces","textOrientation","itemSpaces","iconSpaces","maxIconWidth","labelSpace","itemSpace","iconSpace","newLabelWidth","titleSpaces","_this$measurement2","_this$config3","titleCreator","titleContainer","marginPosition","_this$config4","_this$measurement3","renderTitle","simple_legend_defineProperty","legendOrientation","position_config_defineProperty","_legendOrientation","datasets","itemContainerMeasures","getStepSpacesInfo","iconHeight","iconWidth","stepPadding","horizontal","vertical","positionConfig","_positionConfig","alignmentMap","_alignmentMap","itemStack","_itemStack","createLegendSkeleton","gradWidth","gradHeight","maxGradHeight","maxGradWidth","legendBody","legendItem","getItemContainers","legendInstance","positionObj","createItemSkeleton","_context$config","itemSkeleton","alignClass","applyItemStyle","measureType","stepColorCheck","_context$measurement","renderIcon","defaultIcon","DiscreteLegend","_getScaleInfo","discrete_legend_toConsumableArray","_field$schema","discrete_legend_defineProperty","discrete_legend_get","discrete_legend_getPrototypeOf","renderDiscreteItem","_context$measurement2","_item$icon","text-align","getGradientDomain","accumulator","currentValue","MAX_VALUE","MIN_VALUE","legendGradSvg","legendGradCont","linearGradient","makeLinearGradient","legendRect","GradientLegend","gradient_legend_toConsumableArray","gradient_legend_defineProperty","newAxis","axisSpace","axisDomainLength","_legendGradientSvg","gradient_legend_get","gradient_legend_getPrototypeOf","renderGradient","_createLegendSkeleton","StepLegend","step_legend_toConsumableArray","step_legend_defineProperty","lowerBounds","upperBounds","step_legend_get","step_legend_getPrototypeOf","stepData","renderStepItem","_context$measurement3","_item$icon2","_positionConfig$posit","PADDING","BORDER","MARGIN","TITLE_TEMPLATE_NOT_ALLOWED_TAGS","LEGEND_TYPE_MAP","constants_defineProperty","_LEGEND_TYPE_MAP","HORIZONTAL_CENTER","VERTICAL_CENTER","share","operators_construct","operators_toConsumableArray","strings","htmlCode","expLn","frag","createDocumentFragment","treeShakeNode","nodeType","Node","ELEMENT_NODE","tagName","childNodes","canvasIterator","canvases","iteratorFn","cFn","canvas","visualGroup","_throwback","listenerFn","registerActions","fnName","_registrableComponents","setFireboltDependencies","actionModel","ActionModel","action_model_classCallCheck","registerPropagationBehaviourMap","dissociateBehaviour","dissociateSideEffect","policy","registrableComponents","mergedPolicy","aliases","*","propagationPayload","propagationCanvas","crossInteractionPolicy","TITLE_CONFIG","SUB_TITLE_CONFIG","maxLines","MESSAGE_CONFIG","canvas_local_options_defineProperty","_localOptions","canvasOptions","_canvasOptions","titleConfig","subtitle","sub","subtitleConfig","LayoutComponent","layoutComponent_classCallCheck","_boundBox","_renderAt","_alignWith","_alignment","_componentName","_className","DummyComponent","newDimensions","renderAt","component","componentName","pagination","scrollBar","thickness","speed","legend","minHeight","minCharacters","verticalAlign","collapse","invalidValues","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_CLASS_NAME","NODE_PREFIX","DefinitionModel","definitionModel_classCallCheck","_host","host","_cut","cut","_ratioWeight","ratioWeight","_preferred","preferred","_lanes","lanes","_remainingHeight","_remainingWidth","remainingHeight","remainingWidth","getNodeId","_uid","yExtraSpace","smallestHeight","getCutType","smallestExtraHeightHorizontally","MAX_SAFE_INTEGER","containerHeight","hostHeight","xExtraSpace","smallestWidth","smallestExtraWidthVertically","containerWidth","hostWidth","createPlaceHolderComponent","placeComponent","definitionModel","leftOvercomponentRationWidth","isPreferred","isGridComponent","componentRatioWidth","leftHeight","leftWidth","_component$getLogical","componentHeight","componentWidth","firstLaneConfig","firstLane","secondLane","tree_classCallCheck","_parentCut","_this$_children","tree_toConsumableArray","parentCut","bound","nodeconfig","searchNode","childNode","nodeId","deleteSearchNode","LayoutModel","measurements","layout_model_classCallCheck","_measurements","_root","createTree","setBoundBox","addChildren","lane","allocateBoundingBox","totalWeight","carry","lastSibling","ratio","setHostSpatialConfig","setHostPosition","negotiateDimension","alteredDim","nonAlteredDim","cumultiveExtraSpaceAmt","childrenLength","extraSpaceAmt","computePosition","determineBoundBox","bb","_lastSibling$boundBox","_top","_left","_height","_width","_instance$parent$boun","setSpatialConfig","VIEW_INDEX","ROW_MATRIX_INDEX","2","COLUMN_MATRIX_INDEX","HEIGHT","ROW_ROOT","COLUMN_ROOT","VERTICAL","HORIZONTAL","Utils","utils_createClass","isDOMElement","getID","getElement","findContainer","coordinate","removeDiv","divId","DataPoint","data_point_classCallCheck","DataParser","data_parser_classCallCheck","data_parser_createClass","defaultDataPointLogic","nodepoints","getnodePoints","datapoint","HTMLDataAdapter","_DataParser","html_data_classCallCheck","html_data_possibleConstructorReturn","html_data_getPrototypeOf","html_data_inherits","html_data_createClass","getCoordinates","html_data_get","Renderer","renderer_classCallCheck","renderer_createClass","initRenderer","__logicalTree","HTMLRenderer","_Renderer","html_renderer_classCallCheck","html_renderer_possibleConstructorReturn","html_renderer_getPrototypeOf","_coordinates","html_renderer_inherits","html_renderer_createClass","createhtml","mainDiv","html_renderer_get","parentDiv","createAndCustomiseParent","hasHost","createAndPositionDiv","html_renderer_objectSpread","div","coordinates","findNode","nodeID","renderer","drawLayout","renderHTML","resolveAligment","componentData","alignWith","componentToAlign","componentMap","refNode","newNodeConfig","setAlignConfig","DrawingManager","drawing_manager_classCallCheck","_componentMap","_layoutClassName","layoutClassName","_renderer","drawing_manager_createClass","drawComponent","DefinitionManager","definition_manager_classCallCheck","_prioritySequence","_totalHeight","_totalWidth","_targetComponentMap","prepareTargetComponentMap","targetComponentMap","canvasComponent","tempDefModel","componentRef","getComponent","placeGridComponent","gridComponents","iscolumnPreffered","_placeComponent","rowpreffred","LayoutDef","layout_def_classCallCheck","_layoutDefinition","layout_def_createClass","addComponent","layoutDefinition","addMultipleComponent","componentArray","sanitizedDefinition","hostObj","hostID","childHost","resetComponentMap","LayoutManager","layout_manager_classCallCheck","_dimension","_skeletonType","skeletonType","_layoutDef","_drawingManager","_rootNodeID","con","resetNode","updateNode","compute","_layout","calLayOutDef","_context$dimension","layoutDef","prioritySequence","generateConfigModel","negotiate","broadcast","layoutComponents","componentArr","compo","elementName","removeElement","elemID","co","deleteElement","setupChangeListener","allOptions","_allOptions","canvas_helper_toConsumableArray","nameSpaceProps","equalityProps","equalityChecker","option","updateProps","updateChecker","dispatchProps","_cachedProps","notifyAnimationEnd","viewInfo","layout","centerMatrix","viewMatricesInfo","promises","cellArr","lifeCycle","animDonePromises","animationDone","applyInteractionPolicy","interactionPolicy","_interactionPolicy","_crossInteractionPolicy","unitFireBolt","changeBehaviourStateOnPropagation","createLayoutManager","src_options","minUnitWidth","minUnitHeight","oldConf","fixScrollBarConfig","GenericLayout","generic_layout_classCallCheck","_matrices","_centerMatrix","_mountPoint","DEFAULT_CONFIGURATION","grid_layout_defaults_defineProperty","_DEFAULT_CONFIGURATIO","_FieldNames$BORDER","DEFAULT_MEASUREMENTS","_DEFAULT_MEASUREMENTS","findInPage","page","combineMatrices","isTransposed","joinedMatrix","utils_toConsumableArray","rowData","computeLogicalSpace","maxMeasures","_config$isTransposed","unitMeasures","_getMeasureInfo","getMeasureInfo","firstMeasure","secondMeasure","minMeasures","getMinMeasures","_logicalSpace","utils_defineProperty","valueItem","maxMeasure","firstMeasureValue","secondMeasureValue","valueArray","_item$space","fMeasure","sMeasure","minSecondMeasure","createMatrixEachLevel","_arr$i","extraCellsRemover","beg","distribution","extraCellLengths","VisualMatrix","visual_matrix_classCallCheck","_lastLevelKey","_primaryMatrix","_secondaryMatrix","_maxMeasures","_availableSpace","_layoutMatrix","_tree","_createTree2","matrixTree","lastLevelKey","layoutMatrix","primaryMatrix","secondaryMatrix","breakPage","primaryMatrixLength","newMatrix","keyLength","heightMeasures","populateMaxMeasures","widthMeasures","calculateDepth","viewableMatrix","createViewPortMatrix","viewableMeasures","redistributeSpaces","childDepth","createMatrixInstances","matrixInfo","breakPointer","_breakPointer","brokenMatrix","breakMatrix","nextLevel","removeExtraCells","RowVisualMatrix","row_matrix_classCallCheck","row_matrix_possibleConstructorReturn","row_matrix_getPrototypeOf","maxHeights","maxWidths","matrixInst","cellDimOptions","matrixIndex","_this2$getCellDimensi","getCellDimensions","widths","rowHeights","columnWidths","primary","secondary","begCellLen","endCellLen","remainingAvailWidth","cWidths","maxPrioritySpace","availableWidth","currentWidth","prioritySpace","logicalWidths","getPriorityDistribution","mWidth","mHeight","redistributeViewSpaces","computeViewableSpaces","rHeights","gutter","spaceTakenByColumn","spaces","getDistributedHeight","heightWithoutGutter","distSum","gutterSum","availableHeight","colLen","distHeight","borderWidth","colHeight","colWidth","heights","ColumnVisualMatrix","column_matrix_classCallCheck","column_matrix_possibleConstructorReturn","column_matrix_getPrototypeOf","heightDist","divider","spaceTakenByRow","getDistributedWidth","layoutConfig","distWidth","rowLen","oldLogicalSpace","heightDistribution","getMatrixMeasurement","setViewSpaces","pointerType","viewSpaces","pointer","computations_defineProperty","paginationDetailsMap","scrollType","paginationMeasureGetter","relatedMaxMeasure","getMatrixMeasureForPagination","measureDetails","actualMeasure","scrollInfo","getMatrixHeightDetails","columnMatrixWidth","_getHeightRequiredByC","getHeightRequiredByColMatrix","maxColumnMatrixHeight","columnViewSpace","getViewableSpaces","columnPointer","columnMatrixHeight","maxHeightAvailableForRowMatrix","rowMatrixHeight","bufferCondition","isScroll","getActualBufferFromConfig","computations_slicedToArray","getBufferFromCondition","currentBufferType","horizontalBuffer","verticalBuffer","computeLayoutMeasurements","_getMatrixWidthDetail","getMatrixWidthDetails","_layout$config3","rowMatrixWidth","maxRowMatrixWidth","maxWidthAvailableForColumnMatrix","_getMatrixHeightDetai","_getActualBufferFromC","rowViewableSpaces","columnViewableSpaces","setValueMatrixMeasurements","computations_toConsumableArray","rowWidthsPrimary","rowWidthsSecondary","columnHeightsPrimary","columnHeightsSecondary","measureSum","total","GridLayout","layout_classCallCheck","layout_possibleConstructorReturn","layout_getPrototypeOf","_layoutId","_scrollInfo","generateVisualMatrices","begColCells","endColCells","gutterSpace","layout_helper_slicedToArray","_center","_bottom","layout_helper_toConsumableArray","RowMatrix","ColumnMatrix","layout_get","_computeLayoutMeasure","setViewInformation","pageNumber","pageType","totalPages","layout_defineProperty","renderGrid","currentPage","_viewInfo","maxRowHeight","maxColWidth","rowPointer","getViewMatrices","rowMatrices","getViewableMatrices","columnMatrices","centralMatrixPointer","rowMatrixLen","columnMatrixLen","rowPages","columnPages","layoutDimensions","getViewMeasurements","_layout$config","rowSpaces","colSpaces","rightWidth","topHeight","bottomHeight","centerHeight","centerWidth","viewWidth","viewHeight","actualCenterMeasures","totalMeasures","unitHeights","unitWidths","borderMap","border_helper_defineProperty","_borderMap","specificBorderApplier","borderTypes","showBorders","borderInfo","borderType","applySpecificBorder","applyBorders","borderApplierFn","borderApplier","borderMapVal","orderMaker","nestByStack","updateArr","optionalParams","currStack","prevStack","arrVal","stackVal","currElemIndex","newElem","arrElem","returnArr","spanCalculator","isNull","maskCreator","_nestByStack","viewMatrix","hierarchy","_nestByStack2","spanGenerator","spans","ridx","currSpan","getOrder","matrixSpanGeneratorMap","span_maker_defineProperty","_matrixSpanGeneratorM","orderGetter","viewMatrixMaker","spanMaker","matrixSpanGenerator","spanApplier","cellCounter","spaceAllocationDueToSpan","primaryUnitWidth","cumulativeWidth","spanApplierMap","_spanApplierMap","TransactionSupport","INTERFACE_IMPl","CLASSPREFIX","HEADER","DATA","AXES","FACET_BY_FIELDS","FIELDS","TRANSFORM","LAYER_DEF","CONFIG","DETAIL_FIELDS","AXIS","GEOM","BLANK","SimpleCell","simple_cell_classCallCheck","enums_defaults_defineProperty","_DEFAULT_CONFIG","_CONSTANTS$MARGIN","CONSTANTS","DEFAULT_PROPS","minSpacing","visual_cell_src_props_defineProperty","visual_cell_src_props_PROPS","caption","smartText","axis_cell_classCallCheck","axis_cell_possibleConstructorReturn","axis_cell_getPrototypeOf","_availHeight","_availWidth","axis_cell_assertThisInitialized","computeAxisSpace","logicalWidth","logicalHeight","spaceFixer","_axis$getLogicalSpace","actualWidth","actualHeight","_axis$config2","wrapperDiv","blank_cell_classCallCheck","blank_cell_possibleConstructorReturn","blank_cell_getPrototypeOf","blank_cell_assertThisInitialized","setSmartText","_context$minSpacing","minHeightSpace","minWidthSpace","paddedHeight","paddedWidth","text_cell_classCallCheck","text_cell_possibleConstructorReturn","text_cell_getPrototypeOf","text_cell_assertThisInitialized","computeTextSpace","_context$minSpacing2","minText","_minTextSpace","smartSpace","textAlign","vAlign","_this$smartText","translation","middle","geom_cell_classCallCheck","geom_cell_possibleConstructorReturn","geom_cell_getPrototypeOf","_unit","_datamodel","_facetByFields","_transform","_caption","geom_cell_assertThisInitialized","captionSpace","computeGeomSpace","getCaptionSpace","captionDom","DEFAULT_PLACEHOLDERS","src_defaults_defineProperty","_DEFAULT_PLACEHOLDERS","resolveTitleSubTitleContent","rawContent","escapeHTML","htmlEscapes","&","<",">","\"","'","/","createHeading","prevCell","cellType","_minTickDiff","legendInitializer","legendConfig","prevLegends","legends","headerHeight","legendInfo","legendCreator","LegendCls","dataset","scaleProps","_scale$config","stepMapper","dataInfo","legendMeasures","titleText","getGroupByData","setLegendMeasures","MuzeComponent","_this$boundBox","HeaderComponent","headerComponent_classCallCheck","headerComponent_possibleConstructorReturn","headerComponent_getPrototypeOf","setParams","cont","renderHeader","LegendComponent","legendComponent_classCallCheck","legendComponent_possibleConstructorReturn","legendComponent_getPrototypeOf","legendSpace","sectionComponents","_this$params$config","legendMount","legWidth","legHeight","sections","currHeight","currWidth","leg","legendHeight","legendWidth","renderLegend","_defaultAlignmentHelp","defaultAlignmentHelper","arrowSizeMap","getUnitPositions","totalLength","viewLength","currentLen","unitPosition","createScrollBarArrow","createScrollBarRect","mover","applyScrollMouseDownAction","moverRect","scrollMaker","_mover$node$getBoundi","_rect$node$getBoundin","rectX","rectY","changeMoverPosition","registerListenerOnArrow","arrowType","_components","isTouchDevice","registerListeners","applyMoverDrag","moverStartPos","rectStartPos","distanceMoved","actualPosition","pageXOffset","pageYOffset","applyRectClick","emptyScrollAreaClick","manager","unitPositions","ScrollMaker","scroll_maker_classCallCheck","_attachedScrollAction","_unitPositions","scroll_maker_createClass","scrollTo","scrollDeltaTo","createScroll","scrollBarContainer","scrollContainerHelper","attachScrollAction","externalScrollAction","detachScrollAction","scrollMakerMap","_ScrollMaker","HorizontalScrollMaker","horizontal_scroll_maker_classCallCheck","horizontal_scroll_maker_possibleConstructorReturn","horizontal_scroll_maker_getPrototypeOf","horizontal_scroll_maker_inherits","horizontal_scroll_maker_createClass","horizontal_scroll_maker_get","prevArrow","nextArrow","_this$logicalSpace","scrollBarWithouArrowLength","_scrollBarWithouArrowLength","_this$_components$mov","positionAdjuster","newPosition","currentPos","_this$_components$mov2","moverPos","movedViewLength","performAttachedScrollFunction","delta","_this$_components$mov3","scrollPercentage","movement","VerticalScrollMaker","vertical_scroll_maker_classCallCheck","vertical_scroll_maker_possibleConstructorReturn","vertical_scroll_maker_getPrototypeOf","vertical_scroll_maker_inherits","vertical_scroll_maker_createClass","vertical_scroll_maker_get","ScrollComponent","scroll_component_classCallCheck","scrollBarComponentConfig","scroll_component_possibleConstructorReturn","scroll_component_getPrototypeOf","unitIndex","sanitizedUnitIndex","externalAction","MatrixComponent","matrix_component_classCallCheck","matrix_component_possibleConstructorReturn","matrix_component_getPrototypeOf","_this$params$config$s","containerForMatrix","applyScroll","_cellSpanMaker","cellSpanMaker","_matrixSpanGenerator","renderTable","applySpans","applier","renderPlaceholders","renderMatrix","applyScrollAction","scollDistance","GridComponent","grid_component_classCallCheck","grid_component_possibleConstructorReturn","grid_component_getPrototypeOf","_this$component$viewI","matrixDim","matrixName","updateWrapper","matrixWrapper","allComponents","_scrollBarManager","scrollBarManager","wheelDeltaX","wheelDeltaY","preventBrowserScroll","triggerScrollBarAction","movedView","scrollActionApplier","_this$component$0$0$b","sanitizeGrid","attachScrollListener","MessageComponent","message_component_classCallCheck","message_component_possibleConstructorReturn","message_component_getPrototypeOf","_config$dimensions","message","_params$config","headerMap","headerCell","configType","headerAlignmentMap","component_wrapper_maker_defineProperty","_headerAlignmentMap","isGridPresent","renderDetails","_renderDetails$compon","checkParamsValidation","createHeaderWrapper","headerType","layoutManager","_headerMap$headerType","headerConfig","wrapperParams","component_wrapper_maker_objectSpread","existingComponent","createScrollBarWrapper","scrollBarType","grid","_scrollBarMap$scrollB","scrollBarMap","layoutBasedMeasure","viewMeasure","rowAlign","colAlign","componentWrapperMaker","_layoutManager","createMessageWrapper","defaultDimensions","gridComponent","getBoundBox","createLegendWrapper","legendWrapper","gridLayoutWrapper","verticalScrollBar","horizontalScrollBar","ScrollManager","scroll_manager_classCallCheck","_scrollBarComponents","_attachedComponents","scroll_manager_createClass","scrollBarComponents","attachedComponents","performScrollAction","getRenderDetails","_mount$getBoundingCli","heightAttr","widthAttr","visGroup","_visGroup$placeholder","legendPosition","layoutArrangement","arrangeComponents","_titleLayouts","titleLayouts","component_resolver_defineProperty","legendLayouts","titlePosition","subtitlePosition","availableHeightForCanvas","availableWidthForCanvas","_createHeaders","canvasHeight","canvasWidth","isSubtitle","headerOptions","_createHeading","createLegend","getLegendSpace","mountSpace","componentIndexes","componentNames","3","4","5","6","renderLayout","gridLayout","compWrappers","componentWrappers","createScrollManager","horizontalScrollWrapper","verticalScrollWrapper","gridWrapper","hScrollBar","vScrollBar","componentWrapper","deleteElementName","removeComponent","registerComponents","attachListeners","attachListener","defaultInteractionPolicy","isMeasure","group_firebolt_toConsumableArray","getFieldsFromChannel","colDim","unitColFacets","equals","unitRowFacets","propagateWith","defaultCrossInteractionPolicy","propagationCanvasAlias","propagationUnit","GroupFireBolt","group_firebolt_classCallCheck","group_firebolt_possibleConstructorReturn","group_firebolt_getPrototypeOf","behaviouralAction","validFields","APP_INITIAL_STATE","app","Canvas","globalDependencies","canvas_classCallCheck","canvas_possibleConstructorReturn","canvas_getPrototypeOf","canvas_defineProperty","canvas_assertThisInitialized","initedComponents","initCanvas","createGroupState","_VisualGroup$getState2","canvas_helper_slicedToArray","register","prepareLayout","triggerReflow","setLayoutInfForUnits","getRootNodeId","setLabelRotationForAxes","rotationVal","getAxes","initialSettings","regEntry","COMPONENTS","SUBREGISTRIES","regObj","globalCache","defaultRegistry","overrideRegistryDefinitions","overrideRegistry","muze","_transactor2","muze_slicedToArray","env","globalStore","componentSubRegistryDef","settings","withSettings","enableChainedTransaction","transactionModel","transactionEndpoint","transactionItems","Smartlabel","SideEffects","standards","Behaviours","pkg","operators","utils","lookupWhat","lookupDetails","lookupTarget"],"mappings":"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,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACApX,IAAI61C,gCCESwW,gBAZK,IAAIzrD,MAAM,GAAGwW,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACApX,IAAI61C,gCCESwW,kBAZK,IAAIzrD,MAAM,GAAGwW,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACApX,IAAI61C,gCCASwW,cAVK,IAAIzrD,MAAM,GAAGwW,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACApX,IAAI61C,gCCESwW,cAVK,IAAIzrD,MAAM,GAAGwW,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACApX,IAAI61C,gCCESwW,cAVK,IAAIzrD,MAAM,GAAGwW,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACApX,IAAI61C,gCCESwW,cAVK,IAAIzrD,MAAM,GAAGwW,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACApX,IAAI61C,gCCESwW,gBAVK,IAAIzrD,MAAM,GAAGwW,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACApX,IAAI61C,gCCESwW,cAVK,IAAIzrD,MAAM,GAAGwW,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACApX,IAAI61C,gCCESwW,cAVK,IAAIzrD,MAAM,GAAGwW,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACApX,IAAI61C,gCCESwW,cAVK,IAAIzrD,MAAM,GAAGwW,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACApX,IAAI61C,gCCESwW,gBAVK,IAAIzrD,MAAM,GAAGwW,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACApX,IAAI61C,gCCESwW,cAVK,IAAIzrD,MAAM,GAAGwW,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACApX,IAAI61C,gCCESwW,gBAVK,IAAIzrD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","file":"muze.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"muze\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"muze\"] = factory();\n\telse\n\t\troot[\"muze\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"DataModel\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DataModel\"] = factory();\n\telse\n\t\troot[\"DataModel\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","const DataModel = require('./export');\n\nmodule.exports = DataModel.default ? DataModel.default : DataModel;\n","/**\n * DataFormat Enum defines the format of the input data.\n * Based on the format of the data the respective adapter is loaded.\n *\n * @readonly\n * @enum {string}\n */\nconst DataFormat = {\n    FLAT_JSON: 'FlatJSON',\n    DSV_STR: 'DSVStr',\n    DSV_ARR: 'DSVArr',\n    AUTO: 'Auto'\n};\n\nexport default DataFormat;\n","/**\n * DimensionSubtype enum defines the sub types of the Dimensional Field.\n *\n * @readonly\n * @enum {string}\n */\nconst DimensionSubtype = {\n    CATEGORICAL: 'categorical',\n    TEMPORAL: 'temporal',\n    GEO: 'geo',\n    BINNED: 'binned'\n};\n\nexport default DimensionSubtype;\n","/**\n * MeasureSubtype enum defines the sub types of the Measure Field.\n *\n * @readonly\n * @enum {string}\n */\nconst MeasureSubtype = {\n    CONTINUOUS: 'continuous'\n};\n\nexport default MeasureSubtype;\n","/**\n * FieldType enum defines the high level field based on which visuals are controlled.\n * Measure in a high level is numeric field and Dimension in a high level is string field.\n *\n * @readonly\n * @enum {string}\n */\nconst FieldType = {\n    MEASURE: 'measure',\n    DIMENSION: 'dimension'\n};\n\nexport default FieldType;\n","/**\n * Filtering mode enum defines the filering modes of DataModel.\n *\n * @readonly\n * @enum {string}\n */\nconst FilteringMode = {\n    NORMAL: 'normal',\n    INVERSE: 'inverse',\n    ALL: 'all'\n};\n\nexport default FilteringMode;\n","/**\n * Group by function names\n *\n * @readonly\n * @enum {string}\n */\nconst GROUP_BY_FUNCTIONS = {\n    SUM: 'sum',\n    AVG: 'avg',\n    MIN: 'min',\n    MAX: 'max',\n    FIRST: 'first',\n    LAST: 'last',\n    COUNT: 'count',\n    STD: 'std'\n};\n\nexport default GROUP_BY_FUNCTIONS;\n","/**\n * Creates a JS native date object from input\n *\n * @param {string | number | Date} date Input using which date object to be created\n * @return {Date} : JS native date object\n */\nfunction convertToNativeDate (date) {\n    if (date instanceof Date) {\n        return date;\n    }\n\n    return new Date(date);\n}\n/**\n * Apply padding before a number if its less than 1o. This is used when constant digit's number to be returned\n * between 0 - 99\n *\n * @param {number} n Input to be padded\n * @return {string} Padded number\n */\nfunction pad (n) {\n    return (n < 10) ? (`0${n}`) : n;\n}\n/*\n * DateFormatter utility to convert any date format to any other date format\n * DateFormatter parse a date time stamp specified by a user abiding by rules which are defined\n * by user in terms of token. It creates JS native date object from the user specified format.\n * That native date can also be displayed\n * in any specified format.\n * This utility class only takes care of format conversion only\n */\n\n/*\n * Escapes all the special character that are used in regular expression.\n * Like\n * RegExp.escape('sgfd-$') // Output: sgfd\\-\\$\n *\n * @param text {String} : text which is to be escaped\n */\nRegExp.escape = function (text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n};\n\n/**\n * DateTimeFormatter class to convert any user format of date time stamp to any other format\n * of date time stamp.\n *\n * @param {string} format Format of the date given. For the above date,\n * 'year: %Y, month: %b, day: %d'.\n * @class\n */\n/* istanbul ignore next */ function DateTimeFormatter (format) {\n    this.format = format;\n    this.dtParams = undefined;\n    this.nativeDate = undefined;\n}\n\n// The identifier of the tokens\nDateTimeFormatter.TOKEN_PREFIX = '%';\n\n// JS native Date constructor takes the date params (year, month, etc) in a certail sequence.\n// This defines the sequence of the date parameters in the constructor.\nDateTimeFormatter.DATETIME_PARAM_SEQUENCE = {\n    YEAR: 0,\n    MONTH: 1,\n    DAY: 2,\n    HOUR: 3,\n    MINUTE: 4,\n    SECOND: 5,\n    MILLISECOND: 6\n};\n\n/*\n * This is a default number parsing utility. It tries to parse a number in integer, if parsing is unsuccessful, it\n * gives back a default value.\n *\n * @param: defVal {Number} : Default no if the parsing to integer is not successful\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be parsed.\n */\nDateTimeFormatter.defaultNumberParser = function (defVal) {\n    return function (val) {\n        let parsedVal;\n        if (isFinite(parsedVal = parseInt(val, 10))) {\n            return parsedVal;\n        }\n\n        return defVal;\n    };\n};\n\n/*\n * This is a default number range utility. It tries to find an element in the range. If not found it returns a\n * default no as an index.\n *\n * @param: range {Array} : The list which is to be serached\n * @param: defVal {Number} : Default no if the serach and find does not return anything\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be found\n */\nDateTimeFormatter.defaultRangeParser = function (range, defVal) {\n    return (val) => {\n        let i;\n        let l;\n\n        if (!val) { return defVal; }\n\n        const nVal = val.toLowerCase();\n\n        for (i = 0, l = range.length; i < l; i++) {\n            if (range[i].toLowerCase() === nVal) {\n                return i;\n            }\n        }\n\n        if (i === undefined) {\n            return defVal;\n        }\n        return null;\n    };\n};\n\n/*\n * Defines the tokens which are supporter by the dateformatter. Using this definitation a value gets extracted from\n * the user specifed date string. This also formats the value for display purpose from native JS date.\n * The definition of each token contains the following named properties\n * {\n *     %token_name% : {\n *         name: name of the token, this is used in reverse lookup,\n *         extract: a function that returns the regular expression to extract that piece of information. All the\n *                  regex should be gouped by using ()\n *         parser: a function which receives value extracted by the above regex and parse it to get the date params\n *         formatter: a formatter function that takes milliseconds or JS Date object and format the param\n *                  represented by the token only.\n *     }\n * }\n *\n * @return {Object} : Definition of the all the supported tokens.\n */\nDateTimeFormatter.getTokenDefinitions = function () {\n    const daysDef = {\n        short: [\n            'Sun',\n            'Mon',\n            'Tue',\n            'Wed',\n            'Thu',\n            'Fri',\n            'Sat'\n        ],\n        long: [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday'\n        ]\n    };\n    const monthsDef = {\n        short: [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n            'Oct',\n            'Nov',\n            'Dec'\n        ],\n        long: [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December'\n        ]\n    };\n\n    const definitions = {\n        H: {\n            // 24 hours format\n            name: 'H',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n\n                return d.getHours().toString();\n            }\n        },\n        l: {\n            // 12 hours format\n            name: 'l',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours() % 12;\n\n                return (hours === 0 ? 12 : hours).toString();\n            }\n        },\n        p: {\n            // AM or PM\n            name: 'p',\n            index: 3,\n            extract () { return '(AM|PM)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'AM' : 'PM');\n            }\n        },\n        P: {\n            // am or pm\n            name: 'P',\n            index: 3,\n            extract () { return '(am|pm)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'am' : 'pm');\n            }\n        },\n        M: {\n            // Two digit minutes 00 - 59\n            name: 'M',\n            index: 4,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const mins = d.getMinutes();\n\n                return pad(mins);\n            }\n        },\n        S: {\n            // Two digit seconds 00 - 59\n            name: 'S',\n            index: 5,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const seconds = d.getSeconds();\n\n                return pad(seconds);\n            }\n        },\n        K: {\n            // Milliseconds\n            name: 'K',\n            index: 6,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const ms = d.getMilliseconds();\n\n                return ms.toString();\n            }\n        },\n        a: {\n            // Short name of day, like Mon\n            name: 'a',\n            index: 2,\n            extract () { return `(${daysDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.short[day]).toString();\n            }\n        },\n        A: {\n            // Long name of day, like Monday\n            name: 'A',\n            index: 2,\n            extract () { return `(${daysDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.long[day]).toString();\n            }\n        },\n        e: {\n            // 8 of March, 11 of November\n            name: 'e',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return day.toString();\n            }\n        },\n        d: {\n            // 08 of March, 11 of November\n            name: 'd',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return pad(day);\n            }\n        },\n        b: {\n            // Short month, like Jan\n            name: 'b',\n            index: 1,\n            extract () { return `(${monthsDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.short[month]).toString();\n            }\n        },\n        B: {\n            // Long month, like January\n            name: 'B',\n            index: 1,\n            extract () { return `(${monthsDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.long[month]).toString();\n            }\n        },\n        m: {\n            // Two digit month of year like 01 for January\n            name: 'm',\n            index: 1,\n            extract () { return '(\\\\d+)'; },\n            parser (val) { return DateTimeFormatter.defaultNumberParser()(val) - 1; },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return pad(month + 1);\n            }\n        },\n        y: {\n            // Short year like 90 for 1990\n            name: 'y',\n            index: 0,\n            extract () { return '(\\\\d{2})'; },\n            parser (val) {\n                let result;\n                if (val) {\n                    const l = val.length;\n                    val = val.substring(l - 2, l);\n                }\n                let parsedVal = DateTimeFormatter.defaultNumberParser()(val);\n                let presentDate = new Date();\n                let presentYear = Math.trunc((presentDate.getFullYear()) / 100);\n\n                result = `${presentYear}${parsedVal}`;\n\n                if (convertToNativeDate(result).getFullYear() > presentDate.getFullYear()) {\n                    result = `${presentYear - 1}${parsedVal}`;\n                }\n                return convertToNativeDate(result).getFullYear();\n            },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                let year = d.getFullYear().toString();\n                let l;\n\n                if (year) {\n                    l = year.length;\n                    year = year.substring(l - 2, l);\n                }\n\n                return year;\n            }\n        },\n        Y: {\n            // Long year like 1990\n            name: 'Y',\n            index: 0,\n            extract () { return '(\\\\d{4})'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const year = d.getFullYear().toString();\n\n                return year;\n            }\n        }\n    };\n\n    return definitions;\n};\n\n/*\n * The tokens which works internally is not user friendly in terms of memorizing the names. This gives a formal\n * definition to the informal notations.\n *\n * @return {Object} : Formal definition of the tokens\n */\nDateTimeFormatter.getTokenFormalNames = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n\n    return {\n        HOUR: definitions.H,\n        HOUR_12: definitions.l,\n        AMPM_UPPERCASE: definitions.p,\n        AMPM_LOWERCASE: definitions.P,\n        MINUTE: definitions.M,\n        SECOND: definitions.S,\n        SHORT_DAY: definitions.a,\n        LONG_DAY: definitions.A,\n        DAY_OF_MONTH: definitions.e,\n        DAY_OF_MONTH_CONSTANT_WIDTH: definitions.d,\n        SHORT_MONTH: definitions.b,\n        LONG_MONTH: definitions.B,\n        MONTH_OF_YEAR: definitions.m,\n        SHORT_YEAR: definitions.y,\n        LONG_YEAR: definitions.Y\n    };\n};\n\n/*\n * This defines the rules and declares dependencies that resolves a date parameter (year, month etc) from\n * the date time parameter array.\n *\n * @return {Object} : An object that contains dependencies and a resolver function. The dependencies values are fed\n *                  to the resolver function in that particular sequence only.\n */\nDateTimeFormatter.tokenResolver = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const defaultResolver = (...args) => { // eslint-disable-line require-jsdoc\n        let i = 0;\n        let arg;\n        let targetParam;\n        const l = args.length;\n\n        for (; i < l; i++) {\n            arg = args[i];\n            if (args[i]) {\n                targetParam = arg;\n            }\n        }\n\n        if (!targetParam) { return null; }\n\n        return targetParam[0].parser(targetParam[1]);\n    };\n\n    return {\n        YEAR: [definitions.y, definitions.Y,\n            defaultResolver\n        ],\n        MONTH: [definitions.b, definitions.B, definitions.m,\n            defaultResolver\n        ],\n        DAY: [definitions.a, definitions.A, definitions.e, definitions.d,\n            defaultResolver\n        ],\n        HOUR: [definitions.H, definitions.l, definitions.p, definitions.P,\n            function (hourFormat24, hourFormat12, ampmLower, ampmUpper) {\n                let targetParam;\n                let amOrpm;\n                let isPM;\n                let val;\n\n                if (hourFormat12 && (amOrpm = (ampmLower || ampmUpper))) {\n                    if (amOrpm[0].parser(amOrpm[1]) === 'pm') {\n                        isPM = true;\n                    }\n\n                    targetParam = hourFormat12;\n                } else if (hourFormat12) {\n                    targetParam = hourFormat12;\n                } else {\n                    targetParam = hourFormat24;\n                }\n\n                if (!targetParam) { return null; }\n\n                val = targetParam[0].parser(targetParam[1]);\n                if (isPM) {\n                    val += 12;\n                }\n                return val;\n            }\n        ],\n        MINUTE: [definitions.M,\n            defaultResolver\n        ],\n        SECOND: [definitions.S,\n            defaultResolver\n        ]\n    };\n};\n\n/*\n * Finds token from the format rule specified by a user.\n * @param format {String} : The format of the input date specified by the user\n * @return {Array} : An array of objects which contains the available token and their occurence index in the format\n */\nDateTimeFormatter.findTokens = function (format) {\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenLiterals = Object.keys(definitions);\n    const occurrence = [];\n    let i;\n    let forwardChar;\n\n    while ((i = format.indexOf(tokenPrefix, i + 1)) >= 0) {\n        forwardChar = format[i + 1];\n        if (tokenLiterals.indexOf(forwardChar) === -1) { continue; }\n\n        occurrence.push({\n            index: i,\n            token: forwardChar\n        });\n    }\n\n    return occurrence;\n};\n\n/*\n * Format any JS date to a specified date given by user.\n *\n * @param date {Number | Date} : The date object which is to be formatted\n * @param format {String} : The format using which the date will be formatted for display\n */\nDateTimeFormatter.formatAs = function (date, format) {\n    const nDate = convertToNativeDate(date);\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    let formattedStr = String(format);\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    let token;\n    let formattedVal;\n    let i;\n    let l;\n\n    for (i = 0, l = occurrence.length; i < l; i++) {\n        token = occurrence[i].token;\n        formattedVal = definitions[token].formatter(nDate);\n        formattedStr = formattedStr.replace(new RegExp(tokenPrefix + token, 'g'), formattedVal);\n    }\n\n    return formattedStr;\n};\n\n/*\n * Parses the user specified date string to extract the date time params.\n *\n * @return {Array} : Value of date time params in an array [year, month, day, hour, minutes, seconds, milli]\n */\nDateTimeFormatter.prototype.parse = function (dateTimeStamp, options) {\n    const tokenResolver = DateTimeFormatter.tokenResolver();\n    const dtParams = this.extractTokenValue(dateTimeStamp);\n    const dtParamSeq = DateTimeFormatter.DATETIME_PARAM_SEQUENCE;\n    const noBreak = options && options.noBreak;\n    const dtParamArr = [];\n    const args = [];\n    let resolverKey;\n    let resolverParams;\n    let resolverFn;\n    let val;\n    let i;\n    let param;\n    let resolvedVal;\n    let l;\n    let result = [];\n\n    for (resolverKey in tokenResolver) {\n        if (!{}.hasOwnProperty.call(tokenResolver, resolverKey)) { continue; }\n\n        args.length = 0;\n        resolverParams = tokenResolver[resolverKey];\n        resolverFn = resolverParams.splice(resolverParams.length - 1, 1)[0];\n\n        for (i = 0, l = resolverParams.length; i < l; i++) {\n            param = resolverParams[i];\n            val = dtParams[param.name];\n\n            if (val === undefined) {\n                args.push(null);\n            } else {\n                args.push([param, val]);\n            }\n        }\n\n        resolvedVal = resolverFn.apply(this, args);\n\n        if ((resolvedVal === undefined || resolvedVal === null) && !noBreak) {\n            break;\n        }\n\n        dtParamArr[dtParamSeq[resolverKey]] = resolvedVal;\n    }\n\n    if (dtParamArr.length && this.checkIfOnlyYear(dtParamArr.length))\n     {\n        result.unshift(dtParamArr[0], 0, 1); }\n    else {\n        result.unshift(...dtParamArr);\n    }\n\n    return result;\n};\n\n/*\n * Extract the value of the token from user specified date time string.\n *\n * @return {Object} : An key value pair which contains the tokens as key and value as pair\n */\nDateTimeFormatter.prototype.extractTokenValue = function (dateTimeStamp) {\n    const format = this.format;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const tokenObj = {};\n\n    let lastOccurrenceIndex;\n    let occObj;\n    let occIndex;\n    let targetText;\n    let regexFormat;\n\n    let l;\n    let i;\n\n    regexFormat = String(format);\n\n    const tokenArr = occurrence.map(obj => obj.token);\n    const occurrenceLength = occurrence.length;\n    for (i = occurrenceLength - 1; i >= 0; i--) {\n        occIndex = occurrence[i].index;\n\n        if (occIndex + 1 === regexFormat.length - 1) {\n            lastOccurrenceIndex = occIndex;\n            continue;\n        }\n\n        if (lastOccurrenceIndex === undefined) {\n            lastOccurrenceIndex = regexFormat.length;\n        }\n\n        targetText = regexFormat.substring(occIndex + 2, lastOccurrenceIndex);\n        regexFormat = regexFormat.substring(0, occIndex + 2) +\n            RegExp.escape(targetText) +\n            regexFormat.substring(lastOccurrenceIndex, regexFormat.length);\n\n        lastOccurrenceIndex = occIndex;\n    }\n\n    for (i = 0; i < occurrenceLength; i++) {\n        occObj = occurrence[i];\n        regexFormat = regexFormat.replace(tokenPrefix + occObj.token, definitions[occObj.token].extract());\n    }\n\n    const extractValues = dateTimeStamp.match(new RegExp(regexFormat)) || [];\n    extractValues.shift();\n\n    for (i = 0, l = tokenArr.length; i < l; i++) {\n        tokenObj[tokenArr[i]] = extractValues[i];\n    }\n    return tokenObj;\n};\n\n/*\n * Give back the JS native date formed from  user specified date string\n *\n * @return {Date} : Native JS Date\n */\nDateTimeFormatter.prototype.getNativeDate = function (dateTimeStamp) {\n    let date = null;\n    if (Number.isFinite(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    } else if (!this.format && Date.parse(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    }\n    else {\n        const dtParams = this.dtParams = this.parse(dateTimeStamp);\n        if (dtParams.length) {\n            this.nativeDate = new Date(...dtParams);\n            date = this.nativeDate;\n        }\n    }\n    return date;\n};\n\nDateTimeFormatter.prototype.checkIfOnlyYear = function(len) {\n    return len === 1 && this.format.match(/y|Y/g).length;\n};\n\n/*\n * Represents JS native date to a user specified format.\n *\n * @param format {String} : The format according to which the date is to be represented\n * @return {String} : The formatted date string\n */\nDateTimeFormatter.prototype.formatAs = function (format, dateTimeStamp) {\n    let nativeDate;\n\n    if (dateTimeStamp) {\n        nativeDate = this.nativeDate = this.getNativeDate(dateTimeStamp);\n    } else if (!(nativeDate = this.nativeDate)) {\n        nativeDate = this.getNativeDate(dateTimeStamp);\n    }\n\n    return DateTimeFormatter.formatAs(nativeDate, format);\n};\n\nexport { DateTimeFormatter as default };\n","/**\n * The utility function to calculate major column.\n *\n * @param {Object} store - The store object.\n * @return {Function} Returns the push function.\n */\nexport default (store) => {\n    let i = 0;\n    return (...fields) => {\n        fields.forEach((val, fieldIndex) => {\n            if (!(store[fieldIndex] instanceof Array)) {\n                store[fieldIndex] = Array.from({ length: i });\n            }\n            store[fieldIndex].push(val);\n        });\n        i++;\n    };\n};\n","/* eslint-disable */\nconst OBJECTSTRING = 'object';\nconst objectToStrFn = Object.prototype.toString;\nconst objectToStr = '[object Object]';\nconst arrayToStr = '[object Array]';\n\nfunction checkCyclicRef(obj, parentArr) {\n    let i = parentArr.length;\n    let bIndex = -1;\n\n    while (i) {\n        if (obj === parentArr[i]) {\n            bIndex = i;\n            return bIndex;\n        }\n        i -= 1;\n    }\n\n    return bIndex;\n}\n\nfunction merge(obj1, obj2, skipUndef, tgtArr, srcArr) {\n    var item,\n        srcVal,\n        tgtVal,\n        str,\n        cRef;\n    // check whether obj2 is an array\n    // if array then iterate through it's index\n    // **** MOOTOOLS precution\n\n    if (!srcArr) {\n        tgtArr = [obj1];\n        srcArr = [obj2];\n    }\n    else {\n        tgtArr.push(obj1);\n        srcArr.push(obj2);\n    }\n\n    if (obj2 instanceof Array) {\n        for (item = 0; item < obj2.length; item += 1) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (typeof tgtVal !== OBJECTSTRING) {\n                if (!(skipUndef && tgtVal === undefined)) {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                    srcVal = obj1[item] = tgtVal instanceof Array ? [] : {};\n                }\n                cRef = checkCyclicRef(tgtVal, srcArr);\n                if (cRef !== -1) {\n                    srcVal = obj1[item] = tgtArr[cRef];\n                }\n                else {\n                    merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                }\n            }\n        }\n    }\n    else {\n        for (item in obj2) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (tgtVal !== null && typeof tgtVal === OBJECTSTRING) {\n                // Fix for issue BUG: FWXT-602\n                // IE < 9 Object.prototype.toString.call(null) gives\n                // '[object Object]' instead of '[object Null]'\n                // that's why null value becomes Object in IE < 9\n                str = objectToStrFn.call(tgtVal);\n                if (str === objectToStr) {\n                    if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                        srcVal = obj1[item] = {};\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else if (str === arrayToStr) {\n                    if (srcVal === null || !(srcVal instanceof Array)) {\n                        srcVal = obj1[item] = [];\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (skipUndef && tgtVal === undefined) {\n                    continue;\n                }\n                obj1[item] = tgtVal;\n            }\n        }\n    }\n    return obj1;\n}\n\n\nfunction extend2 (obj1, obj2, skipUndef) {\n    //if none of the arguments are object then return back\n    if (typeof obj1 !== OBJECTSTRING && typeof obj2 !== OBJECTSTRING) {\n        return null;\n    }\n\n    if (typeof obj2 !== OBJECTSTRING || obj2 === null) {\n        return obj1;\n    }\n\n    if (typeof obj1 !== OBJECTSTRING) {\n        obj1 = obj2 instanceof Array ? [] : {};\n    }\n    merge(obj1, obj2, skipUndef);\n    return obj1;\n}\n\nexport { extend2 as default };\n","import { DataFormat } from '../enums';\n\n/**\n * Checks whether the value is an array.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an array otherwise returns false.\n */\nexport function isArray (val) {\n    return Array.isArray(val);\n}\n\n/**\n * Checks whether the value is an object.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an object otherwise returns false.\n */\nexport function isObject (val) {\n    return val === Object(val);\n}\n\n/**\n * Checks whether the value is a string value.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is a string value otherwise returns false.\n */\nexport function isString (val) {\n    return typeof val === 'string';\n}\n\n/**\n * Checks whether the value is callable.\n *\n * @param {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is callable otherwise returns false.\n */\nexport function isCallable (val) {\n    return typeof val === 'function';\n}\n\n/**\n * Returns the unique values from the input array.\n *\n * @param {Array} data - The input array.\n * @return {Array} Returns a new array of unique values.\n */\nexport function uniqueValues (data) {\n    return [...new Set(data)];\n}\n\nexport const getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Checks Whether two arrays have same content.\n *\n * @param {Array} arr1 - The first array.\n * @param {Array} arr2 - The 2nd array.\n * @return {boolean} Returns whether two array have same content.\n */\nexport function isArrEqual(arr1, arr2) {\n    if (!isArray(arr1) || !isArray(arr2)) {\n        return arr1 === arr2;\n    }\n\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * It is the default number format function for the measure field type.\n *\n * @param {any} val - The input value.\n * @return {number} Returns a number value.\n */\nexport function formatNumber(val) {\n    return val;\n}\n\n/**\n * Returns the detected data format.\n *\n * @param {any} data - The input data to be tested.\n * @return {string} Returns the data format name.\n */\nexport const detectDataFormat = (data) => {\n    if (isString(data)) {\n        return DataFormat.DSV_STR;\n    } else if (isArray(data) && isArray(data[0])) {\n        return DataFormat.DSV_ARR;\n    } else if (isArray(data) && (data.length === 0 || isObject(data[0]))) {\n        return DataFormat.FLAT_JSON;\n    }\n    return null;\n};\n","import { FieldType } from './enums';\nimport { getUniqueId } from './utils';\n\nconst fieldStore = {\n    data: {},\n\n    createNamespace (fieldArr, name) {\n        const dataId = name || getUniqueId();\n\n        this.data[dataId] = {\n            name: dataId,\n            fields: fieldArr,\n\n            fieldsObj () {\n                let fieldsObj = this._cachedFieldsObj;\n\n                if (!fieldsObj) {\n                    fieldsObj = this._cachedFieldsObj = {};\n                    this.fields.forEach((field) => {\n                        fieldsObj[field.name()] = field;\n                    });\n                }\n                return fieldsObj;\n            },\n            getMeasure () {\n                let measureFields = this._cachedMeasure;\n\n                if (!measureFields) {\n                    measureFields = this._cachedMeasure = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.MEASURE) {\n                            measureFields[field.name()] = field;\n                        }\n                    });\n                }\n                return measureFields;\n            },\n            getDimension () {\n                let dimensionFields = this._cachedDimension;\n\n                if (!this._cachedDimension) {\n                    dimensionFields = this._cachedDimension = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.DIMENSION) {\n                            dimensionFields[field.name()] = field;\n                        }\n                    });\n                }\n                return dimensionFields;\n            },\n        };\n        return this.data[dataId];\n    },\n};\n\nexport default fieldStore;\n","import { getNumberFormattedVal } from './helper';\n\n/**\n * The wrapper class on top of the primitive value of a field.\n *\n * @todo Need to have support for StringValue, NumberValue, DateTimeValue\n * and GeoValue. These types should expose predicate API mostly.\n */\nclass Value {\n\n  /**\n   * Creates new Value instance.\n   *\n   * @param {*} val - the primitive value from the field cell.\n   * @param {string | Field} field - The field from which the value belongs.\n   */\n    constructor (value, rawValue, field) {\n        const formattedValue = getNumberFormattedVal(field, value);\n\n        Object.defineProperties(this, {\n            _value: {\n                enumerable: false,\n                configurable: false,\n                writable: false,\n                value\n            },\n            _formattedValue: {\n                enumerable: false,\n                configurable: false,\n                writable: false,\n                value: formattedValue\n            },\n            _internalValue: {\n                enumerable: false,\n                configurable: false,\n                writable: false,\n                value: rawValue\n            }\n        });\n\n        this.field = field;\n    }\n\n  /**\n   * Returns the field value.\n   *\n   * @return {*} Returns the current value.\n   */\n    get value () {\n        return this._value;\n    }\n\n    /**\n     * Returns the parsed value of field\n     */\n    get formattedValue () {\n        return this._formattedValue;\n    }\n\n    /**\n     * Returns the internal value of field\n     */\n    get internalValue () {\n        return this._internalValue;\n    }\n\n  /**\n   * Converts to human readable string.\n   *\n   * @override\n   * @return {string} Returns a human readable string of the field value.\n   *\n   */\n    toString () {\n        return String(this.value);\n    }\n\n  /**\n   * Returns the value of the field.\n   *\n   * @override\n   * @return {*} Returns the field value.\n   */\n    valueOf () {\n        return this.value;\n    }\n}\n\nexport default Value;\n","/**\n * Iterates through the diffSet array and call the callback with the current\n * index.\n *\n * @param {string} rowDiffset - The row diffset string e.g. '0-4,6,10-13'.\n * @param {Function} callback - The callback function to be called with every index.\n */\nexport function rowDiffsetIterator (rowDiffset, callback) {\n    if (rowDiffset.length > 0) {\n        const rowDiffArr = rowDiffset.split(',');\n        rowDiffArr.forEach((diffStr) => {\n            const diffStsArr = diffStr.split('-');\n            const start = +(diffStsArr[0]);\n            const end = +(diffStsArr[1] || diffStsArr[0]);\n            if (end >= start) {\n                for (let i = start; i <= end; i += 1) {\n                    callback(i);\n                }\n            }\n        });\n    }\n}\n","/**\n * A parser to parser null, undefined, invalid and NIL values.\n *\n * @public\n * @class\n */\nclass InvalidAwareTypes {\n    /**\n     * Static method which gets/sets the invalid value registry.\n     *\n     * @public\n     * @param {Object} config - The custom configuration supplied by user.\n     * @return {Object} Returns the invalid values registry.\n     */\n    static invalidAwareVals (config) {\n        if (!config) {\n            return InvalidAwareTypes._invalidAwareValsMap;\n        }\n        return Object.assign(InvalidAwareTypes._invalidAwareValsMap, config);\n    }\n\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} value - The value of the invalid data type.\n     */\n    constructor (value) {\n        this._value = value;\n    }\n\n    /**\n     * Returns the current value of the instance.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    value () {\n        return this._value;\n    }\n\n    /**\n     * Returns the current value of the instance in string format.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    toString () {\n        return String(this._value);\n    }\n\n    static isInvalid(val) {\n        return (val instanceof InvalidAwareTypes) || !!InvalidAwareTypes.invalidAwareVals()[val];\n    }\n\n    static getInvalidType(val) {\n        return val instanceof InvalidAwareTypes ? val : InvalidAwareTypes.invalidAwareVals()[val];\n    }\n}\n\n/**\n * Enums for Invalid types.\n */\nInvalidAwareTypes.NULL = new InvalidAwareTypes('null');\nInvalidAwareTypes.NA = new InvalidAwareTypes('na');\nInvalidAwareTypes.NIL = new InvalidAwareTypes('nil');\n\n/**\n * Default Registry for mapping the invalid values.\n *\n * @private\n */\nInvalidAwareTypes._invalidAwareValsMap = {\n    invalid: InvalidAwareTypes.NA,\n    nil: InvalidAwareTypes.NIL,\n    null: InvalidAwareTypes.NULL,\n    undefined: InvalidAwareTypes.NA\n};\n\nexport default InvalidAwareTypes;\n","export { DataFormat, FilteringMode } from '../enums';\n/**\n * The event name for data propagation.\n */\nexport const PROPAGATION = 'propagation';\n\n/**\n * The name of the unique row id column in DataModel.\n */\nexport const ROW_ID = '__id__';\n\n/**\n * The enums for operation names performed on DataModel.\n */\nexport const DM_DERIVATIVES = {\n    SELECT: 'select',\n    PROJECT: 'project',\n    GROUPBY: 'group',\n    COMPOSE: 'compose',\n    CAL_VAR: 'calculatedVariable',\n    BIN: 'bin',\n    SORT: 'sort'\n};\n\nexport const JOINS = {\n    CROSS: 'cross',\n    LEFTOUTER: 'leftOuter',\n    RIGHTOUTER: 'rightOuter',\n    NATURAL: 'natural',\n    FULLOUTER: 'fullOuter'\n};\n\nexport const LOGICAL_OPERATORS = {\n    AND: 'and',\n    OR: 'or'\n};\n","/**\n * The helper function that returns an array of common schema\n * from two fieldStore instances.\n *\n * @param {FieldStore} fs1 - The first FieldStore instance.\n * @param {FieldStore} fs2 - The second FieldStore instance.\n * @return {Array} An array containing the common schema.\n */\nexport function getCommonSchema (fs1, fs2) {\n    const retArr = [];\n    const fs1Arr = [];\n    fs1.fields.forEach((field) => {\n        fs1Arr.push(field.schema().name);\n    });\n    fs2.fields.forEach((field) => {\n        if (fs1Arr.indexOf(field.schema().name) !== -1) {\n            retArr.push(field.schema().name);\n        }\n    });\n    return retArr;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { getCommonSchema } from './get-common-schema';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { JOINS } from '../constants';\nimport { prepareJoinData } from '../helper';\n/**\n * Default filter function for crossProduct.\n *\n * @return {boolean} Always returns true.\n */\nfunction defaultFilterFn() { return true; }\n\n/**\n * Implementation of cross product operation between two DataModel instances.\n * It internally creates the data and schema for the new DataModel.\n *\n * @param {DataModel} dataModel1 - The left DataModel instance.\n * @param {DataModel} dataModel2 - The right DataModel instance.\n * @param {Function} filterFn - The filter function which is used to filter the tuples.\n * @param {boolean} [replaceCommonSchema=false] - The flag if the common name schema should be there.\n * @return {DataModel} Returns The newly created DataModel instance from the crossProduct operation.\n */\nexport function crossProduct (dm1, dm2, filterFn, replaceCommonSchema = false, jointype = JOINS.CROSS) {\n    const schema = [];\n    const data = [];\n    const applicableFilterFn = filterFn || defaultFilterFn;\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreName = dm1FieldStore.name;\n    const dm2FieldStoreName = dm2FieldStore.name;\n    const name = `${dm1FieldStore.name}.${dm2FieldStore.name}`;\n    const commonSchemaList = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    if (dm1FieldStoreName === dm2FieldStoreName) {\n        throw new Error('DataModels must have different alias names');\n    }\n    // Here prepare the schema\n    dm1FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1 && !replaceCommonSchema) {\n            tmpSchema.name = `${dm1FieldStore.name}.${tmpSchema.name}`;\n        }\n        schema.push(tmpSchema);\n    });\n    dm2FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1) {\n            if (!replaceCommonSchema) {\n                tmpSchema.name = `${dm2FieldStore.name}.${tmpSchema.name}`;\n                schema.push(tmpSchema);\n            }\n        } else {\n            schema.push(tmpSchema);\n        }\n    });\n\n    // Here prepare Data\n    rowDiffsetIterator(dm1._rowDiffset, (i) => {\n        let rowAdded = false;\n        let rowPosition;\n        rowDiffsetIterator(dm2._rowDiffset, (ii) => {\n            const tuple = [];\n            const userArg = {};\n            userArg[dm1FieldStoreName] = {};\n            userArg[dm2FieldStoreName] = {};\n            dm1FieldStore.fields.forEach((field) => {\n                tuple.push(field.partialField.data[i]);\n                userArg[dm1FieldStoreName][field.name()] = {\n                    rawValue: field.partialField.data[i],\n                    formattedValue: field.formattedData()[i],\n                };\n            });\n            dm2FieldStore.fields.forEach((field) => {\n                if (!(commonSchemaList.indexOf(field.schema().name) !== -1 && replaceCommonSchema)) {\n                    tuple.push(field.partialField.data[ii]);\n                }\n                userArg[dm2FieldStoreName][field.name()] = {\n                    rawValue: field.partialField.data[ii],\n                    formattedValue: field.formattedData()[ii],\n                };\n            });\n\n            let cachedStore = {};\n            let cloneProvider1 = () => dm1.detachedRoot();\n            let cloneProvider2 = () => dm2.detachedRoot();\n\n            const dm1Fields = prepareJoinData(userArg[dm1FieldStoreName]);\n            const dm2Fields = prepareJoinData(userArg[dm2FieldStoreName]);\n            if (applicableFilterFn(dm1Fields, dm2Fields, cloneProvider1, cloneProvider2, cachedStore)) {\n                const tupleObj = {};\n                tuple.forEach((cellVal, iii) => {\n                    tupleObj[schema[iii].name] = cellVal;\n                });\n                if (rowAdded && JOINS.CROSS !== jointype) {\n                    data[rowPosition] = tupleObj;\n                }\n                else {\n                    data.push(tupleObj);\n                    rowAdded = true;\n                    rowPosition = i;\n                }\n            } else if ((jointype === JOINS.LEFTOUTER || jointype === JOINS.RIGHTOUTER) && !rowAdded) {\n                const tupleObj = {};\n                let len = dm1FieldStore.fields.length - 1;\n                tuple.forEach((cellVal, iii) => {\n                    if (iii <= len) {\n                        tupleObj[schema[iii].name] = cellVal;\n                    }\n                    else {\n                        tupleObj[schema[iii].name] = null;\n                    }\n                });\n                rowAdded = true;\n                rowPosition = i;\n                data.push(tupleObj);\n            }\n        });\n    });\n\n    return new DataModel(data, schema, { name });\n}\n","/**\n * The default sort function.\n *\n * @param {*} a - The first value.\n * @param {*} b - The second value.\n * @return {number} Returns the comparison result e.g. 1 or 0 or -1.\n */\nfunction defSortFn (a, b) {\n    const a1 = `${a}`;\n    const b1 = `${b}`;\n    if (a1 < b1) {\n        return -1;\n    }\n    if (a1 > b1) {\n        return 1;\n    }\n    return 0;\n}\n\n/**\n * The helper function for merge sort which creates the sorted array\n * from the two halves of the input array.\n *\n * @param {Array} arr - The target array which needs to be merged.\n * @param {number} lo - The starting index of the first array half.\n * @param {number} mid - The ending index of the first array half.\n * @param {number} hi - The ending index of the second array half.\n * @param {Function} sortFn - The sort function.\n */\nfunction merge (arr, lo, mid, hi, sortFn) {\n    const mainArr = arr;\n    const auxArr = [];\n    for (let i = lo; i <= hi; i += 1) {\n        auxArr[i] = mainArr[i];\n    }\n    let a = lo;\n    let b = mid + 1;\n\n    for (let i = lo; i <= hi; i += 1) {\n        if (a > mid) {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        } else if (b > hi) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else if (sortFn(auxArr[a], auxArr[b]) <= 0) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        }\n    }\n}\n\n/**\n * The helper function for merge sort which would be called\n * recursively for sorting the array halves.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {number} lo - The starting index of the array half.\n * @param {number} hi - The ending index of the array half.\n * @param {Function} sortFn - The sort function.\n * @return {Array} Returns the target array itself.\n */\nfunction sort (arr, lo, hi, sortFn) {\n    if (hi === lo) { return arr; }\n\n    const mid = lo + Math.floor((hi - lo) / 2);\n    sort(arr, lo, mid, sortFn);\n    sort(arr, mid + 1, hi, sortFn);\n    merge(arr, lo, mid, hi, sortFn);\n\n    return arr;\n}\n\n/**\n * The implementation of merge sort.\n * It is used in DataModel for stable sorting as it is not sure\n * what the sorting algorithm used by browsers is stable or not.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {Function} [sortFn=defSortFn] - The sort function.\n * @return {Array} Returns the input array itself in sorted order.\n */\nexport function mergeSort (arr, sortFn = defSortFn) {\n    if (arr.length > 1) {\n        sort(arr, 0, arr.length - 1, sortFn);\n    }\n    return arr;\n}\n","import { DimensionSubtype, MeasureSubtype } from '../enums';\nimport { mergeSort } from './merge-sort';\nimport { fieldInSchema } from '../helper';\nimport { isCallable, isArray } from '../utils';\n\n/**\n * Generates the sorting functions to sort the data of a DataModel instance\n * according to the input data type.\n *\n * @param {string} dataType - The data type e.g. 'measure', 'datetime' etc.\n * @param {string} sortType - The sorting order i.e. 'asc' or 'desc'.\n * @return {Function} Returns the the sorting function.\n */\nfunction getSortFn (dataType, sortType) {\n    let retFunc;\n\n    switch (dataType) {\n    case MeasureSubtype.CONTINUOUS:\n    case DimensionSubtype.TEMPORAL:\n        if (sortType === 'asc') {\n            retFunc = (a, b) => a - b;\n        } else {\n            retFunc = (a, b) => b - a;\n        }\n        break;\n    default:\n        if (sortType === 'asc') {\n            retFunc = (a, b) => {\n                a = `${a}`;\n                b = `${b}`;\n                if (a === b) {\n                    return 0;\n                }\n                return a > b ? 1 : -1;\n            };\n        } else {\n            retFunc = (a, b) => {\n                a = `${a}`;\n                b = `${b}`;\n                if (a === b) {\n                    return 0;\n                }\n                return a > b ? -1 : 1;\n            };\n        }\n    }\n\n    return retFunc;\n}\n\n/**\n * Resolves the actual sorting function based on sorting string value.\n *\n * @param {Object} fDetails - The target field info.\n * @param {string} strSortOrder - The sort order value.\n * @return {Function} Returns the sorting function.\n */\nfunction resolveStrSortOrder (fDetails, strSortOrder) {\n    const sortOrder = String(strSortOrder).toLowerCase() === 'desc' ? 'desc' : 'asc';\n    return getSortFn(fDetails.type, sortOrder);\n}\n\n/**\n * Groups the data according to the specified target field.\n *\n * @param {Array} data - The input data array.\n * @param {number} fieldIndex - The target field index within schema array.\n * @return {Array} Returns an array containing the grouped data.\n */\nfunction groupData (data, fieldIndex) {\n    const hashMap = new Map();\n    const groupedData = [];\n\n    data.forEach((datum) => {\n        const fieldVal = datum[fieldIndex];\n        if (hashMap.has(fieldVal)) {\n            groupedData[hashMap.get(fieldVal)][1].push(datum);\n        } else {\n            groupedData.push([fieldVal, [datum]]);\n            hashMap.set(fieldVal, groupedData.length - 1);\n        }\n    });\n\n    return groupedData;\n}\n\n/**\n * Creates the argument value used for sorting function when sort is done\n * with another fields.\n *\n * @param {Array} groupedDatum - The grouped datum for a single dimension field value.\n * @param {Array} targetFields - An array of the sorting fields.\n * @param {Array} targetFieldDetails - An array of the sorting field details in schema.\n * @return {Object} Returns an object containing the value of sorting fields and the target field name.\n */\nfunction createSortingFnArg (groupedDatum, targetFields, targetFieldDetails) {\n    const arg = {\n        label: groupedDatum[0]\n    };\n\n    targetFields.reduce((acc, next, idx) => {\n        acc[next] = groupedDatum[1].map(datum => datum[targetFieldDetails[idx].index]);\n        return acc;\n    }, arg);\n\n    return arg;\n}\n\n/**\n * Sorts the data by applying the standard sorting mechanism.\n *\n * @param {Array} data - The input data array.\n * @param {Array} schema - The data schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n */\nfunction applyStandardSort (data, schema, sortingDetails) {\n    let fieldName;\n    let sortMeta;\n    let fDetails;\n    let i = sortingDetails.length - 1;\n\n    for (; i >= 0; i--) {\n        fieldName = sortingDetails[i][0];\n        sortMeta = sortingDetails[i][1];\n        fDetails = fieldInSchema(schema, fieldName);\n\n        if (!fDetails) {\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n\n        if (isCallable(sortMeta)) {\n            // eslint-disable-next-line no-loop-func\n            mergeSort(data, (a, b) => sortMeta(a[fDetails.index], b[fDetails.index]));\n        } else if (isArray(sortMeta)) {\n            const groupedData = groupData(data, fDetails.index);\n            const sortingFn = sortMeta[sortMeta.length - 1];\n            const targetFields = sortMeta.slice(0, sortMeta.length - 1);\n            const targetFieldDetails = targetFields.map(f => fieldInSchema(schema, f));\n\n            groupedData.forEach((groupedDatum) => {\n                groupedDatum.push(createSortingFnArg(groupedDatum, targetFields, targetFieldDetails));\n            });\n\n            mergeSort(groupedData, (a, b) => {\n                const m = a[2];\n                const n = b[2];\n                return sortingFn(m, n);\n            });\n\n            // Empty the array\n            data.length = 0;\n            groupedData.forEach((datum) => {\n                data.push(...datum[1]);\n            });\n        } else {\n            const sortFn = resolveStrSortOrder(fDetails, sortMeta);\n            // eslint-disable-next-line no-loop-func\n            mergeSort(data, (a, b) => sortFn(a[fDetails.index], b[fDetails.index]));\n        }\n    }\n}\n\n/**\n * Creates a map based on grouping.\n *\n * @param {Array} depColumns - The dependency columns' info.\n * @param {Array} data - The input data.\n * @param {Array} schema - The data schema.\n * @param {Array} sortingDetails - The sorting details for standard sorting.\n * @return {Map} Returns a map.\n */\nconst makeGroupMapAndSort = (depColumns, data, schema, sortingDetails) => {\n    if (depColumns.length === 0) { return data; }\n\n    const targetCol = depColumns[0];\n    const map = new Map();\n\n    data.reduce((acc, currRow) => {\n        const fVal = currRow[targetCol.index];\n        if (acc.has(fVal)) {\n            acc.get(fVal).push(currRow);\n        } else {\n            acc.set(fVal, [currRow]);\n        }\n        return acc;\n    }, map);\n\n    for (let [key, val] of map) {\n        const nMap = makeGroupMapAndSort(depColumns.slice(1), val, schema, sortingDetails);\n        map.set(key, nMap);\n        if (Array.isArray(nMap)) {\n            applyStandardSort(nMap, schema, sortingDetails);\n        }\n    }\n\n    return map;\n};\n\n/**\n * Sorts the data by retaining the position/order of a particular field.\n *\n * @param {Array} data - The input data array.\n * @param {Array} schema - The data schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n * @param {Array} depColumns - The dependency column list.\n * @return {Array} Returns the sorted data.\n */\nfunction applyGroupSort (data, schema, sortingDetails, depColumns) {\n    sortingDetails = sortingDetails.filter((detail) => {\n        if (detail[1] === null) {\n            depColumns.push(detail[0]);\n            return false;\n        }\n        return true;\n    });\n    if (sortingDetails.length === 0) { return data; }\n\n    depColumns = depColumns.map(c => fieldInSchema(schema, c));\n\n    const sortedGroupMap = makeGroupMapAndSort(depColumns, data, schema, sortingDetails);\n    return data.map((row) => {\n        let i = 0;\n        let nextMap = sortedGroupMap;\n\n        while (!Array.isArray(nextMap)) {\n            nextMap = nextMap.get(row[depColumns[i++].index]);\n        }\n\n        return nextMap.shift();\n    });\n}\n\n/**\n * Sorts the data.\n *\n * @param {Object} dataObj - An object containing the data and schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n */\nexport function sortData (dataObj, sortingDetails) {\n    let { schema, data } = dataObj;\n\n    sortingDetails = sortingDetails.filter(sDetial => !!fieldInSchema(schema, sDetial[0]));\n    if (sortingDetails.length === 0) { return; }\n\n    let groupSortingIdx = sortingDetails.findIndex(sDetial => sDetial[1] === null);\n    groupSortingIdx = groupSortingIdx !== -1 ? groupSortingIdx : sortingDetails.length;\n\n    const standardSortingDetails = sortingDetails.slice(0, groupSortingIdx);\n    const groupSortingDetails = sortingDetails.slice(groupSortingIdx);\n\n    applyStandardSort(data, schema, standardSortingDetails);\n    data = applyGroupSort(data, schema, groupSortingDetails, standardSortingDetails.map(detail => detail[0]));\n\n    dataObj.uids = data.map(row => row.pop());\n    dataObj.data = data;\n}\n","import { rowDiffsetIterator } from './row-diffset-iterator';\nimport { sortData } from './sort';\n\n/**\n * Builds the actual data array.\n *\n * @param {Array} fieldStore - An array of field.\n * @param {string} rowDiffset - A string consisting of which rows to be included eg. '0-2,4,6';\n * @param {string} colIdentifier - A string consisting of the details of which column\n * to be included eg 'date,sales,profit';\n * @param {Object} sortingDetails - An object containing the sorting details of the DataModel instance.\n * @param {Object} options - The options required to create the type of the data.\n * @return {Object} Returns an object containing the multidimensional array and the relative schema.\n */\nexport function dataBuilder (fieldStore, rowDiffset, colIdentifier, sortingDetails, options) {\n    const defOptions = {\n        addUid: false,\n        columnWise: false\n    };\n    options = Object.assign({}, defOptions, options);\n\n    const retObj = {\n        schema: [],\n        data: [],\n        uids: []\n    };\n    const addUid = options.addUid;\n    const reqSorting = sortingDetails && sortingDetails.length > 0;\n    // It stores the fields according to the colIdentifier argument\n    const tmpDataArr = [];\n    // Stores the fields according to the colIdentifier argument\n    const colIArr = colIdentifier.split(',');\n\n    colIArr.forEach((colName) => {\n        for (let i = 0; i < fieldStore.length; i += 1) {\n            if (fieldStore[i].name() === colName) {\n                tmpDataArr.push(fieldStore[i]);\n                break;\n            }\n        }\n    });\n\n    // Inserts the schema to the schema object\n    tmpDataArr.forEach((field) => {\n        /** @todo Need to use extend2 here otherwise user can overwrite the schema. */\n        retObj.schema.push(field.schema());\n    });\n\n    if (addUid) {\n        retObj.schema.push({\n            name: 'uid',\n            type: 'identifier'\n        });\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        retObj.data.push([]);\n        const insertInd = retObj.data.length - 1;\n        let start = 0;\n        tmpDataArr.forEach((field, ii) => {\n            retObj.data[insertInd][ii + start] = field.partialField.data[i];\n        });\n        if (addUid) {\n            retObj.data[insertInd][tmpDataArr.length] = i;\n        }\n        // Creates an array of unique identifiers for each row\n        retObj.uids.push(i);\n\n        // If sorting needed then there is the need to expose the index\n        // mapping from the old index to its new index\n        if (reqSorting) { retObj.data[insertInd].push(i); }\n    });\n\n    // Handles the sort functionality\n    if (reqSorting) {\n        sortData(retObj, sortingDetails);\n    }\n\n    if (options.columnWise) {\n        const tmpData = Array(...Array(retObj.schema.length)).map(() => []);\n        retObj.data.forEach((tuple) => {\n            tuple.forEach((data, i) => {\n                tmpData[i].push(data);\n            });\n        });\n        retObj.data = tmpData;\n    }\n\n    return retObj;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n\n/**\n * Performs the union operation between two dm instances.\n *\n * @todo Fix the conflicts between union and difference terminology here.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function difference (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n   // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     * @param {boolean} addData - If true only tuple will be added to the data.\n     */\n    function prepareDataHelper(dm, fieldsObj, addData) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                if (addData) { data.push(tuple); }\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj, false);\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj, true);\n\n    return new DataModel(data, schema, { name });\n}\n\n","import { isArray } from '../utils';\nimport InvalidAwareTypes from '../invalid-aware-types';\nimport { GROUP_BY_FUNCTIONS } from '../enums';\n\nconst { SUM, AVG, FIRST, LAST, COUNT, STD, MIN, MAX } = GROUP_BY_FUNCTIONS;\n\nfunction getFilteredValues(arr) {\n    return arr.filter(item => !(item instanceof InvalidAwareTypes));\n}\n/**\n * Reducer function that returns the sum of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the sum of the array.\n */\nfunction sum (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const filteredNumber = getFilteredValues(arr);\n        const totalSum = filteredNumber.length ?\n                            filteredNumber.reduce((acc, curr) => acc + curr, 0)\n                            : InvalidAwareTypes.NULL;\n        return totalSum;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that returns the average of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the mean value of the array.\n */\nfunction avg (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const totalSum = sum(arr);\n        const len = arr.length || 1;\n        return (Number.isNaN(totalSum) || totalSum instanceof InvalidAwareTypes) ?\n                 InvalidAwareTypes.NULL : totalSum / len;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the min value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the minimum value of the array.\n */\nfunction min (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.min(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the max value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the maximum value of the array.\n */\nfunction max (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.max(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the first value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the first value of the array.\n */\nfunction first (arr) {\n    return arr[0];\n}\n\n/**\n * Reducer function that gives the last value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the last value of the array.\n */\nfunction last (arr) {\n    return arr[arr.length - 1];\n}\n\n/**\n * Reducer function that gives the count value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the length of the array.\n */\nfunction count (arr) {\n    if (isArray(arr)) {\n        return arr.length;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Calculates the variance of the input array.\n *\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the variance of the input array.\n */\nfunction variance (arr) {\n    let mean = avg(arr);\n    return avg(arr.map(num => (num - mean) ** 2));\n}\n\n/**\n * Calculates the square root of the variance of the input array.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the square root of the variance.\n */\nfunction std (arr) {\n    return Math.sqrt(variance(arr));\n}\n\n\nconst fnList = {\n    [SUM]: sum,\n    [AVG]: avg,\n    [MIN]: min,\n    [MAX]: max,\n    [FIRST]: first,\n    [LAST]: last,\n    [COUNT]: count,\n    [STD]: std\n};\n\nconst defaultReducerName = SUM;\n\nexport {\n    defaultReducerName,\n    sum as defReducer,\n    fnList,\n};\n","import { defReducer, fnList } from '../operator';\n\n/**\n * A page level storage which stores, registers, unregisters reducers for all the datamodel instances. There is only one\n * reducer store available in a page. All the datamodel instances receive same instance of reducer store. DataModel\n * out of the box provides handful of {@link reducer | reducers} which can be used as reducer funciton.\n *\n * @public\n * @namespace DataModel\n */\nclass ReducerStore {\n    constructor () {\n        this.store = new Map();\n        this.store.set('defReducer', defReducer);\n\n        Object.entries(fnList).forEach((key) => {\n            this.store.set(key[0], key[1]);\n        });\n    }\n\n    /**\n     * Changes the `defaultReducer` globally. For all the fields which does not have `defAggFn` mentioned in schema, the\n     * value of `defaultReducer` is used for aggregation.\n     *\n     * @public\n     * @param {string} [reducer='sum'] - The name of the default reducer. It picks up the definition from store by doing\n     * name lookup. If no name is found then it takes `sum` as the default reducer.\n     * @return {ReducerStore} Returns instance of the singleton store in page.\n     */\n    defaultReducer (...params) {\n        if (!params.length) {\n            return this.store.get('defReducer');\n        }\n\n        let reducer = params[0];\n\n        if (typeof reducer === 'function') {\n            this.store.set('defReducer', reducer);\n        } else {\n            reducer = String(reducer);\n            if (Object.keys(fnList).indexOf(reducer) !== -1) {\n                this.store.set('defReducer', fnList[reducer]);\n            } else {\n                throw new Error(`Reducer ${reducer} not found in registry`);\n            }\n        }\n        return this;\n    }\n\n    /**\n     *\n     * Registers a {@link reducer | reducer}.\n     * A {@link reducer | reducer} has to be registered before it is used.\n     *\n     * @example\n     *  // find the mean squared value of a given set\n     *  const reducerStore = DataModel.Reducers();\n     *\n     *  reducers.register('meanSquared', (arr) => {\n     *      const squaredVal = arr.map(item => item * item);\n     *      let sum = 0;\n     *      for (let i = 0, l = squaredVal.length; i < l; i++) {\n     *          sum += squaredVal[i++];\n     *      }\n     *\n     *      return sum;\n     *  })\n     *\n     *  // datamodel (dm) is already prepared with cars.json\n     *  const dm1 = dm.groupBy(['origin'], {\n     *      accleration: 'meanSquared'\n     *  });\n     *\n     * @public\n     *\n     * @param {string} name formal name for a reducer. If the given name already exists in store it is overridden by new\n     *      definition.\n     * @param {Function} reducer definition of {@link reducer} function.\n     *\n     * @return {Function} function for unregistering the reducer.\n     */\n    register (name, reducer) {\n        if (typeof reducer !== 'function') {\n            throw new Error('Reducer should be a function');\n        }\n\n        name = String(name);\n        this.store.set(name, reducer);\n\n        return () => { this.__unregister(name); };\n    }\n\n    __unregister (name) {\n        if (this.store.has(name)) {\n            this.store.delete(name);\n        }\n    }\n\n    resolve (name) {\n        if (name instanceof Function) {\n            return name;\n        }\n        return this.store.get(name);\n    }\n}\n\nconst reducerStore = (function () {\n    let store = null;\n\n    function getStore () {\n        if (store === null) {\n            store = new ReducerStore();\n        }\n        return store;\n    }\n    return getStore();\n}());\n\nexport default reducerStore;\n","import { getCommonSchema } from './get-common-schema';\n\n/**\n * The filter function used in natural join.\n * It generates a function that will have the logic to join two\n * DataModel instances by the process of natural join.\n *\n * @param {DataModel} dm1 - The left DataModel instance.\n * @param {DataModel} dm2 - The right DataModel instance.\n * @return {Function} Returns a function that is used in cross-product operation.\n */\nexport function naturalJoinFilter (dm1, dm2) {\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    // const dm1FieldStoreName = dm1FieldStore.name;\n    // const dm2FieldStoreName = dm2FieldStore.name;\n    const commonSchemaArr = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    return (dm1Fields, dm2Fields) => {\n        let retainTuple = true;\n        commonSchemaArr.forEach((fieldName) => {\n            if (dm1Fields[fieldName].internalValue ===\n                dm2Fields[fieldName].internalValue && retainTuple) {\n                retainTuple = true;\n            } else {\n                retainTuple = false;\n            }\n        });\n        return retainTuple;\n    };\n}\n","import DataModel from '../export';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n/**\n * Performs the union operation between two dm instances.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function union (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n    // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     */\n    function prepareDataHelper (dm, fieldsObj) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                data.push(tuple);\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj);\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj);\n\n    return new DataModel(data, schema, { name });\n}\n","import { crossProduct } from './cross-product';\nimport { JOINS } from '../constants';\nimport { union } from './union';\n\n\nexport function leftOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel1, dataModel2, filterFn, false, JOINS.LEFTOUTER);\n}\n\nexport function rightOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel2, dataModel1, filterFn, false, JOINS.RIGHTOUTER);\n}\n\nexport function fullOuterJoin (dataModel1, dataModel2, filterFn) {\n    return union(leftOuterJoin(dataModel1, dataModel2, filterFn), rightOuterJoin(dataModel1, dataModel2, filterFn));\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\n\n/**\n * In {@link DataModel}, every tabular data consists of column, a column is stored as field.\n * Field contains all the data for a given column in an array.\n *\n * Each record consists of several fields; the fields of all records form the columns.\n * Examples of fields: name, gender, sex etc.\n *\n * In DataModel, each field can have multiple attributes which describes its data and behaviour.\n * A field can have two types of data: Measure and Dimension.\n *\n * A Dimension Field is the context on which a data is categorized and the measure is the numerical values that\n * quantify the data set.\n * In short a dimension is the lens through which you are looking at your measure data.\n *\n * Refer to {@link Schema} to get info about possible field attributes.\n *\n * @public\n * @class\n */\nexport default class Field {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        this.partialField = partialField;\n        this.rowDiffset = rowDiffset;\n    }\n\n    /**\n     * Generates the field type specific domain.\n     *\n     * @public\n     * @abstract\n     */\n    domain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the the field schema.\n     *\n     * @public\n     * @return {string} Returns the field schema.\n     */\n    schema () {\n        return this.partialField.schema;\n    }\n\n    /**\n     * Returns the name of the field.\n     *\n     * @public\n     * @return {string} Returns the name of the field.\n     */\n    name () {\n        return this.partialField.name;\n    }\n\n    /**\n     * Returns the type of the field.\n     *\n     * @public\n     * @return {string} Returns the type of the field.\n     */\n    type () {\n        return this.partialField.schema.type;\n    }\n\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return this.partialField.schema.subtype;\n    }\n\n    /**\n     * Returns the description of the field.\n     *\n     * @public\n     * @return {string} Returns the description of the field.\n     */\n    description () {\n        return this.partialField.schema.description;\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @public\n     * @return {string} Returns the display name of the field.\n     */\n    displayName () {\n        return this.partialField.schema.displayName || this.partialField.schema.name;\n    }\n\n    /**\n     * Returns the data associated with the field.\n     *\n     * @public\n     * @return {Array} Returns the data.\n     */\n    data () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            data.push(this.partialField.data[i]);\n        });\n        return data;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @abstract\n     */\n    formattedData () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import Field from '../field';\n\n/**\n * Represents dimension field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Dimension extends Field {\n    /**\n     * Returns the domain for the dimension field.\n     *\n     * @override\n     * @public\n     * @return {any} Returns the calculated domain.\n     */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @abstract\n     */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n     /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { DimensionSubtype } from '../../enums';\nimport Dimension from '../dimension';\n/**\n * Represents categorical field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Categorical extends Dimension {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return DimensionSubtype.CATEGORICAL;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n        return domain;\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport Dimension from '../dimension';\nimport { DateTimeFormatter } from '../../utils';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents temporal field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Temporal extends Dimension {\n     /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        super(partialField, rowDiffset);\n\n        this._cachedMinDiff = null;\n    }\n\n     /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be\n        // occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n\n        return domain;\n    }\n\n\n    /**\n     * Calculates the minimum consecutive difference from the associated field data.\n     *\n     * @public\n     * @return {number} Returns the minimum consecutive diff in milliseconds.\n     */\n    minimumConsecutiveDifference () {\n        if (this._cachedMinDiff) {\n            return this._cachedMinDiff;\n        }\n\n        const sortedData = this.data().filter(item => !(item instanceof InvalidAwareTypes)).sort((a, b) => a - b);\n        const arrLn = sortedData.length;\n        let minDiff = Number.POSITIVE_INFINITY;\n        let prevDatum;\n        let nextDatum;\n        let processedCount = 0;\n\n        for (let i = 1; i < arrLn; i++) {\n            prevDatum = sortedData[i - 1];\n            nextDatum = sortedData[i];\n\n            if (nextDatum === prevDatum) {\n                continue;\n            }\n\n            minDiff = Math.min(minDiff, nextDatum - sortedData[i - 1]);\n            processedCount++;\n        }\n\n        if (!processedCount) {\n            minDiff = null;\n        }\n        this._cachedMinDiff = minDiff;\n\n        return this._cachedMinDiff;\n    }\n\n    /**\n     * Returns the format specified in the input schema while creating field.\n     *\n     * @public\n     * @return {string} Returns the datetime format.\n     */\n    format () {\n        return this.partialField.schema.format;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data\n     * If data is of type invalid or has missing format use the raw value\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        const data = [];\n        const dataFormat = this.format();\n\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            // If value is of invalid type or format is missing\n            if (InvalidAwareTypes.isInvalid(datum) || (!dataFormat && Number.isFinite(datum))) {\n                // Use the invalid map value or the raw value\n                const parsedDatum = InvalidAwareTypes.getInvalidType(datum) || datum;\n                data.push(parsedDatum);\n            } else {\n                data.push(DateTimeFormatter.formatAs(datum, dataFormat));\n            }\n        });\n        return data;\n    }\n}\n\n","import Dimension from '../dimension';\n\n/**\n * Represents binned field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Binned extends Dimension {\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the last and first values of bins config array.\n     */\n    calculateDataDomain () {\n        const binsArr = this.partialField.schema.bins;\n        return [binsArr[0], binsArr[binsArr.length - 1]];\n    }\n\n    /**\n     * Returns the bins config provided while creating the field instance.\n     *\n     * @public\n     * @return {Array} Returns the bins array config.\n     */\n    bins () {\n        return this.partialField.schema.bins;\n    }\n}\n","import { formatNumber } from '../../utils';\nimport { defaultReducerName } from '../../operator/group-by-function';\nimport Field from '../field';\n\n/**\n * Represents measure field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Measure extends Field {\n  /**\n   * Returns the domain for the measure field.\n   *\n   * @override\n   * @public\n   * @return {any} Returns the calculated domain.\n   */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n  /**\n   * Returns the unit of the measure field.\n   *\n   * @public\n   * @return {string} Returns unit of the field.\n   */\n    unit () {\n        return this.partialField.schema.unit;\n    }\n\n  /**\n   * Returns the aggregation function name of the measure field.\n   *\n   * @public\n   * @return {string} Returns aggregation function name of the field.\n   */\n    defAggFn () {\n        return this.partialField.schema.defAggFn || defaultReducerName;\n    }\n\n  /**\n   * Returns the number format of the measure field.\n   *\n   * @public\n   * @return {Function} Returns number format of the field.\n   */\n    numberFormat () {\n        const { numberFormat } = this.partialField.schema;\n        return numberFormat instanceof Function ? numberFormat : formatNumber;\n    }\n\n  /**\n   * Calculates the corresponding field domain.\n   *\n   * @public\n   * @abstract\n   */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { MeasureSubtype } from '../../enums';\nimport Measure from '../measure';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents continuous field subtype.\n *\n * @public\n * @class\n * @extends Measure\n */\nexport default class Continuous extends Measure {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return MeasureSubtype.CONTINUOUS;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the min and max values.\n     */\n    calculateDataDomain () {\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum instanceof InvalidAwareTypes) {\n                return;\n            }\n\n            if (datum < min) {\n                min = datum;\n            }\n            if (datum > max) {\n                max = datum;\n            }\n        });\n\n        return [min, max];\n    }\n}\n","/**\n * A interface to represent a parser which is responsible to parse the field.\n *\n * @public\n * @interface\n */\nexport default class FieldParser {\n    /**\n     * Parses a single value of a field and return the sanitized form.\n     *\n     * @public\n     * @abstract\n     */\n    parse () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the categorical values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class CategoricalParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the stringified form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the stringified value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            result = String(val).trim();\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import { DateTimeFormatter } from '../../../utils';\nimport FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the temporal values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class TemporalParser extends FieldParser {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {Object} schema - The schema object for the corresponding field.\n     */\n    constructor (schema) {\n        super();\n        this.schema = schema;\n        this._dtf = new DateTimeFormatter(this.schema.format);\n    }\n\n    /**\n     * Parses a single value of a field and returns the millisecond value.\n     *\n     * @public\n     * @param {string|number} val - The value of the field.\n     * @return {number} Returns the millisecond value.\n     */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let nativeDate = this._dtf.getNativeDate(val);\n            result = nativeDate ? nativeDate.getTime() : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the binned values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class BinnedParser extends FieldParser {\n  /**\n   * Parses a single binned value of a field and returns the sanitized value.\n   *\n   * @public\n   * @param {string} val - The value of the field.\n   * @return {string} Returns the sanitized value.\n   */\n    parse (val) {\n        const regex = /^\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*-\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*$/;\n        val = String(val);\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let matched = val.match(regex);\n            result = matched ? `${Number.parseFloat(matched[1])}-${Number.parseFloat(matched[2])}`\n                             : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the continuous values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class ContinuousParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the number form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the number value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let parsedVal = parseFloat(val, 10);\n            result = Number.isNaN(parsedVal) ? InvalidAwareTypes.NA : parsedVal;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","/**\n * Stores the full data and the metadata of a field. It provides\n * a single source of data from which the future Field\n * instance can get a subset of it with a rowDiffset config.\n *\n * @class\n * @public\n */\nexport default class PartialField {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} name - The name of the field.\n     * @param {Array} data - The data array.\n     * @param {Object} schema - The schema object of the corresponding field.\n     * @param {FieldParser} parser - The parser instance corresponding to that field.\n     */\n    constructor (name, data, schema, parser) {\n        this.name = name;\n        this.schema = schema;\n        this.parser = parser;\n        this.data = this._sanitize(data);\n    }\n\n    /**\n     * Sanitizes the field data.\n     *\n     * @private\n     * @param {Array} data - The actual input data.\n     * @return {Array} Returns the sanitized data.\n     */\n    _sanitize (data) {\n        return data.map(datum => this.parser.parse(datum));\n    }\n}\n","import { FieldType, DimensionSubtype, MeasureSubtype } from './enums';\nimport {\n    Categorical,\n    Temporal,\n    Binned,\n    Continuous,\n    CategoricalParser,\n    TemporalParser,\n    BinnedParser,\n    ContinuousParser,\n    PartialField\n} from './fields';\n\n/**\n * Creates a field instance according to the provided data and schema.\n *\n * @param {Array} data - The field data array.\n * @param {Object} schema - The field schema object.\n * @return {Field} Returns the newly created field instance.\n */\nfunction createUnitField(data, schema) {\n    data = data || [];\n    let partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.TEMPORAL:\n            partialField = new PartialField(schema.name, data, schema, new TemporalParser(schema));\n            return new Temporal(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.BINNED:\n            partialField = new PartialField(schema.name, data, schema, new BinnedParser());\n            return new Binned(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        }\n    default:\n        partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n        return new Categorical(partialField, `0-${data.length - 1}`);\n    }\n}\n\n\n/**\n * Creates a field instance from partialField and rowDiffset.\n *\n * @param {PartialField} partialField - The corresponding partial field.\n * @param {string} rowDiffset - The data subset config.\n * @return {Field} Returns the newly created field instance.\n */\nexport function createUnitFieldFromPartial(partialField, rowDiffset) {\n    const { schema } = partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            return new Continuous(partialField, rowDiffset);\n        default:\n            return new Continuous(partialField, rowDiffset);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            return new Categorical(partialField, rowDiffset);\n        case DimensionSubtype.TEMPORAL:\n            return new Temporal(partialField, rowDiffset);\n        case DimensionSubtype.BINNED:\n            return new Binned(partialField, rowDiffset);\n        default:\n            return new Categorical(partialField, rowDiffset);\n        }\n    default:\n        return new Categorical(partialField, rowDiffset);\n    }\n}\n\n/**\n * Creates the field instances with input data and schema.\n *\n * @param {Array} dataColumn - The data array for fields.\n * @param {Array} schema - The schema array for fields.\n * @param {Array} headers - The array of header names.\n * @return {Array.<Field>} Returns an array of newly created field instances.\n */\nexport function createFields(dataColumn, schema, headers) {\n    const headersObj = {};\n\n    if (!(headers && headers.length)) {\n        headers = schema.map(item => item.name);\n    }\n\n    headers.forEach((header, i) => {\n        headersObj[header] = i;\n    });\n\n    return schema.map(item => createUnitField(dataColumn[headersObj[item.name]], item));\n}\n","import { DataFormat } from './enums';\n\nexport default {\n    dataFormat: DataFormat.AUTO\n};\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in DSV array to a manageable internal format.\n *\n * @param {Array.<Array>} arr - A 2D array containing of the DSV data.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv data is header or not.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    [\"a\", \"b\", \"c\"],\n *    [1, 2, 3],\n *    [4, 5, 6],\n *    [7, 8, 9]\n * ];\n */\nfunction DSVArr (arr, schema, options) {\n    if (!Array.isArray(schema)) {\n        throw new Error('Schema missing or is in an unsupported format');\n    }\n    const defaultOption = {\n        firstRowHeader: true,\n    };\n    const schemaFields = schema.map(unitSchema => unitSchema.name);\n    options = Object.assign({}, defaultOption, options);\n\n    const columns = [];\n    const push = columnMajor(columns);\n\n    if (options.firstRowHeader) {\n        // If header present then remove the first header row.\n        // Do in-place mutation to save space.\n        arr.splice(0, 1)[0];\n    }\n\n    arr.forEach(field => push(...field));\n\n    return [schemaFields, columns];\n}\n\nexport default DSVArr;\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nfunction pad(value, width) {\n  var s = value + \"\", length = s.length;\n  return length < width ? new Array(width - length + 1).join(0) + s : s;\n}\n\nfunction formatYear(year) {\n  return year < 0 ? \"-\" + pad(-year, 6)\n    : year > 9999 ? \"+\" + pad(year, 6)\n    : pad(year, 4);\n}\n\nfunction formatDate(date) {\n  var hours = date.getUTCHours(),\n      minutes = date.getUTCMinutes(),\n      seconds = date.getUTCSeconds(),\n      milliseconds = date.getUTCMilliseconds();\n  return isNaN(date) ? \"Invalid Date\"\n      : formatYear(date.getUTCFullYear(), 4) + \"-\" + pad(date.getUTCMonth() + 1, 2) + \"-\" + pad(date.getUTCDate(), 2)\n      + (milliseconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \".\" + pad(milliseconds, 3) + \"Z\"\n      : seconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \"Z\"\n      : minutes || hours ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \"Z\"\n      : \"\");\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function preformatBody(rows, columns) {\n    return rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    });\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n  }\n\n  function formatBody(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return preformatBody(rows, columns).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(value) {\n    return value == null ? \"\"\n        : value instanceof Date ? formatDate(value)\n        : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : value;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatBody: formatBody,\n    formatRows: formatRows\n  };\n}\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatBody = csv.formatBody;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatBody = tsv.formatBody;\nexport var tsvFormatRows = tsv.formatRows;\n","import { dsvFormat as d3Dsv } from 'd3-dsv';\nimport DSVArr from './dsv-arr';\n\n/**\n * Parses and converts data formatted in DSV string to a manageable internal format.\n *\n * @todo Support to be given for https://tools.ietf.org/html/rfc4180.\n * @todo Sample implementation https://github.com/knrz/CSV.js/.\n *\n * @param {string} str - The input DSV string.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv string data is header or not.\n * @param {string} [options.fieldSeparator=\",\"] - The separator of two consecutive field.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = `\n * a,b,c\n * 1,2,3\n * 4,5,6\n * 7,8,9\n * `\n */\nfunction DSVStr (str, schema, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n        fieldSeparator: ','\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    const dsv = d3Dsv(options.fieldSeparator);\n    return DSVArr(dsv.parseRows(str), schema, options);\n}\n\nexport default DSVStr;\n","import FlatJSON from './flat-json';\nimport DSVArr from './dsv-arr';\nimport DSVStr from './dsv-str';\nimport { detectDataFormat } from '../utils';\n\n/**\n * Parses the input data and detect the format automatically.\n *\n * @param {string|Array} data - The input data.\n * @param {Object} options - An optional config specific to data format.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n */\nfunction Auto (data, schema, options) {\n    const converters = { FlatJSON, DSVStr, DSVArr };\n    const dataFormat = detectDataFormat(data);\n\n    if (!dataFormat) {\n        throw new Error('Couldn\\'t detect the data format');\n    }\n\n    return converters[dataFormat](data, schema, options);\n}\n\nexport default Auto;\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in JSON to a manageable internal format.\n *\n * @param {Array.<Object>} arr - The input data formatted in JSON.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    {\n *      \"a\": 1,\n *      \"b\": 2,\n *      \"c\": 3\n *    },\n *    {\n *      \"a\": 4,\n *      \"b\": 5,\n *      \"c\": 6\n *    },\n *    {\n *      \"a\": 7,\n *      \"b\": 8,\n *      \"c\": 9\n *    }\n * ];\n */\nfunction FlatJSON (arr, schema) {\n    if (!Array.isArray(schema)) {\n        throw new Error('Schema missing or is in an unsupported format');\n    }\n\n    const header = {};\n    let i = 0;\n    let insertionIndex;\n    const columns = [];\n    const push = columnMajor(columns);\n    const schemaFieldsName = schema.map(unitSchema => unitSchema.name);\n\n    arr.forEach((item) => {\n        const fields = [];\n        schemaFieldsName.forEach((unitSchema) => {\n            if (unitSchema in header) {\n                insertionIndex = header[unitSchema];\n            } else {\n                header[unitSchema] = i++;\n                insertionIndex = i - 1;\n            }\n            fields[insertionIndex] = item[unitSchema];\n        });\n        push(...fields);\n    });\n\n    return [Object.keys(header), columns];\n}\n\nexport default FlatJSON;\n","import { FieldType, FilteringMode, DimensionSubtype, MeasureSubtype, DataFormat } from './enums';\nimport fieldStore from './field-store';\nimport Value from './value';\nimport {\n    rowDiffsetIterator\n} from './operator';\nimport { DM_DERIVATIVES, LOGICAL_OPERATORS } from './constants';\nimport { createFields, createUnitFieldFromPartial } from './field-creator';\nimport defaultConfig from './default-config';\nimport * as converter from './converter';\nimport { extend2, detectDataFormat } from './utils';\n\n/**\n * Prepares the selection data.\n */\nfunction prepareSelectionData (fields, formattedData, rawData, i) {\n    const resp = {};\n\n    for (const [key, field] of fields.entries()) {\n        resp[field.name()] = new Value(formattedData[key][i], rawData[key][i], field);\n    }\n    return resp;\n}\n\nexport function prepareJoinData (fields) {\n    const resp = {};\n\n    for (const key in fields) {\n        resp[key] = new Value(fields[key].formattedValue, fields[key].rawValue, key);\n    }\n    return resp;\n}\n\nexport const updateFields = ([rowDiffset, colIdentifier], partialFieldspace, fieldStoreName) => {\n    let collID = colIdentifier.length ? colIdentifier.split(',') : [];\n    let partialFieldMap = partialFieldspace.fieldsObj();\n    let newFields = collID.map(coll => createUnitFieldFromPartial(partialFieldMap[coll].partialField, rowDiffset));\n    return fieldStore.createNamespace(newFields, fieldStoreName);\n};\n\nexport const persistCurrentDerivation = (model, operation, config = {}, criteriaFn) => {\n    if (operation === DM_DERIVATIVES.COMPOSE) {\n        model._derivation.length = 0;\n        model._derivation.push(...criteriaFn);\n    } else {\n        model._derivation.push({\n            op: operation,\n            meta: config,\n            criteria: criteriaFn\n        });\n    }\n};\nexport const persistAncestorDerivation = (sourceDm, newDm) => {\n    newDm._ancestorDerivation.push(...sourceDm._ancestorDerivation, ...sourceDm._derivation);\n};\n\nexport const persistDerivations = (sourceDm, model, operation, config = {}, criteriaFn) => {\n    persistCurrentDerivation(model, operation, config, criteriaFn);\n    persistAncestorDerivation(sourceDm, model);\n};\n\nconst selectModeMap = {\n    [FilteringMode.NORMAL]: {\n        diffIndex: ['rowDiffset'],\n        calcDiff: [true, false]\n    },\n    [FilteringMode.INVERSE]: {\n        diffIndex: ['rejectRowDiffset'],\n        calcDiff: [false, true]\n    },\n    [FilteringMode.ALL]: {\n        diffIndex: ['rowDiffset', 'rejectRowDiffset'],\n        calcDiff: [true, true]\n    }\n};\n\nconst generateRowDiffset = (rowDiffset, i, lastInsertedValue) => {\n    if (lastInsertedValue !== -1 && i === (lastInsertedValue + 1)) {\n        const li = rowDiffset.length - 1;\n\n        rowDiffset[li] = `${rowDiffset[li].split('-')[0]}-${i}`;\n    } else {\n        rowDiffset.push(`${i}`);\n    }\n};\n\nexport const selectRowDiffsetIterator = (rowDiffset, checker, mode) => {\n    let lastInsertedValueSel = -1;\n    let lastInsertedValueRej = -1;\n    const newRowDiffSet = [];\n    const rejRowDiffSet = [];\n\n    const [shouldSelect, shouldReject] = selectModeMap[mode].calcDiff;\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        const checkerResult = checker(i);\n        checkerResult && shouldSelect && generateRowDiffset(newRowDiffSet, i, lastInsertedValueSel);\n        !checkerResult && shouldReject && generateRowDiffset(rejRowDiffSet, i, lastInsertedValueRej);\n    });\n    return {\n        rowDiffset: newRowDiffSet.join(','),\n        rejectRowDiffset: rejRowDiffSet.join(',')\n    };\n};\n\n\nexport const rowSplitDiffsetIterator = (rowDiffset, checker, mode, dimensionArr, fieldStoreObj) => {\n    let lastInsertedValue = {};\n    const splitRowDiffset = {};\n    const dimensionMap = {};\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        if (checker(i)) {\n            let hash = '';\n\n            let dimensionSet = { keys: {} };\n\n            dimensionArr.forEach((_) => {\n                const data = fieldStoreObj[_].partialField.data[i];\n                hash = `${hash}-${data}`;\n                dimensionSet.keys[_] = data;\n            });\n\n            if (splitRowDiffset[hash] === undefined) {\n                splitRowDiffset[hash] = [];\n                lastInsertedValue[hash] = -1;\n                dimensionMap[hash] = dimensionSet;\n            }\n\n            generateRowDiffset(splitRowDiffset[hash], i, lastInsertedValue[hash]);\n            lastInsertedValue[hash] = i;\n        }\n    });\n\n    return {\n        splitRowDiffset,\n        dimensionMap\n    };\n};\n\n\nexport const selectHelper = (clonedDm, selectFn, config, sourceDm, iterator) => {\n    let cachedStore = {};\n    let cloneProvider = () => sourceDm.detachedRoot();\n    const { mode } = config;\n    const rowDiffset = clonedDm._rowDiffset;\n    const fields = clonedDm.getPartialFieldspace().fields;\n    const formattedFieldsData = fields.map(field => field.formattedData());\n    const rawFieldsData = fields.map(field => field.data());\n\n    const selectorHelperFn = index => selectFn(\n        prepareSelectionData(fields, formattedFieldsData, rawFieldsData, index),\n        index,\n        cloneProvider,\n        cachedStore\n    );\n\n    return iterator(rowDiffset, selectorHelperFn, mode);\n};\n\nexport const cloneWithAllFields = (model) => {\n    const clonedDm = model.clone(false);\n    const partialFieldspace = model.getPartialFieldspace();\n    clonedDm._colIdentifier = partialFieldspace.fields.map(f => f.name()).join(',');\n\n    // flush out cached namespace values on addition of new fields\n    partialFieldspace._cachedFieldsObj = null;\n    partialFieldspace._cachedDimension = null;\n    partialFieldspace._cachedMeasure = null;\n    clonedDm.__calculateFieldspace().calculateFieldsConfig();\n\n    return clonedDm;\n};\n\nconst getKey = (arr, data, fn) => {\n    let key = fn(arr, data, 0);\n\n    for (let i = 1, len = arr.length; i < len; i++) {\n        key = `${key},${fn(arr, data, i)}`;\n    }\n    return key;\n};\n\nexport const filterPropagationModel = (model, propModels, config = {}) => {\n    let fns = [];\n    const operation = config.operation || LOGICAL_OPERATORS.AND;\n    const filterByMeasure = config.filterByMeasure || false;\n    const clonedModel = cloneWithAllFields(model);\n    const modelFieldsConfig = clonedModel.getFieldsConfig();\n\n    if (!propModels.length) {\n        fns = [() => false];\n    } else {\n        fns = propModels.map(propModel => ((dataModel) => {\n            let keyFn;\n            const dataObj = dataModel.getData();\n            const fieldsConfig = dataModel.getFieldsConfig();\n            const dimensions = Object.keys(dataModel.getFieldspace().getDimension())\n                .filter(d => d in modelFieldsConfig);\n            const dLen = dimensions.length;\n            const indices = dimensions.map(d =>\n                fieldsConfig[d].index);\n            const measures = Object.keys(dataModel.getFieldspace().getMeasure())\n                .filter(d => d in modelFieldsConfig);\n            const fieldsSpace = dataModel.getFieldspace().fieldsObj();\n            const data = dataObj.data;\n            const domain = measures.reduce((acc, v) => {\n                acc[v] = fieldsSpace[v].domain();\n                return acc;\n            }, {});\n            const valuesMap = {};\n\n            keyFn = (arr, row, idx) => row[arr[idx]];\n            if (dLen) {\n                data.forEach((row) => {\n                    const key = getKey(indices, row, keyFn);\n                    valuesMap[key] = 1;\n                });\n            }\n\n            keyFn = (arr, fields, idx) => fields[arr[idx]].internalValue;\n            return data.length ? (fields) => {\n                const present = dLen ? valuesMap[getKey(dimensions, fields, keyFn)] : true;\n\n                if (filterByMeasure) {\n                    return measures.every(field => fields[field].internalValue >= domain[field][0] &&\n                        fields[field].internalValue <= domain[field][1]) && present;\n                }\n                return present;\n            } : () => false;\n        })(propModel));\n    }\n\n    let filteredModel;\n    if (operation === LOGICAL_OPERATORS.AND) {\n        filteredModel = clonedModel.select(fields => fns.every(fn => fn(fields)), {\n            saveChild: false\n        });\n    } else {\n        filteredModel = clonedModel.select(fields => fns.some(fn => fn(fields)), {\n            saveChild: false\n        });\n    }\n\n    return filteredModel;\n};\n\n\nexport const splitWithSelect = (sourceDm, dimensionArr, reducerFn = val => val, config) => {\n    const {\n        saveChild,\n    } = config;\n    const fieldStoreObj = sourceDm.getFieldspace().fieldsObj();\n\n    const {\n        splitRowDiffset,\n        dimensionMap\n    } = selectHelper(\n        sourceDm.clone(saveChild),\n        reducerFn,\n        config,\n        sourceDm,\n        (...params) => rowSplitDiffsetIterator(...params, dimensionArr, fieldStoreObj)\n        );\n\n    const clonedDMs = [];\n    Object.keys(splitRowDiffset).forEach((e) => {\n        if (splitRowDiffset[e]) {\n            const cloned = sourceDm.clone(saveChild);\n            const derivation = dimensionMap[e];\n            cloned._rowDiffset = splitRowDiffset[e].join(',');\n            cloned.__calculateFieldspace().calculateFieldsConfig();\n\n            const derivationFormula = fields => dimensionArr.every(_ => fields[_].internalValue === derivation.keys[_]);\n            // Store reference to child model and selector function\n            if (saveChild) {\n                persistDerivations(sourceDm, cloned, DM_DERIVATIVES.SELECT, config, derivationFormula);\n            }\n            cloned._derivation[cloned._derivation.length - 1].meta = dimensionMap[e];\n\n            clonedDMs.push(cloned);\n        }\n    });\n\n\n    return clonedDMs;\n};\nexport const addDiffsetToClonedDm = (clonedDm, rowDiffset, sourceDm, selectConfig, selectFn) => {\n    clonedDm._rowDiffset = rowDiffset;\n    clonedDm.__calculateFieldspace().calculateFieldsConfig();\n    persistDerivations(\n        sourceDm,\n        clonedDm,\n        DM_DERIVATIVES.SELECT,\n         { config: selectConfig },\n          selectFn\n    );\n};\n\n\nexport const cloneWithSelect = (sourceDm, selectFn, selectConfig, cloneConfig) => {\n    let extraCloneDm = {};\n\n    let { mode } = selectConfig;\n\n    const cloned = sourceDm.clone(cloneConfig.saveChild);\n    const setOfRowDiffsets = selectHelper(\n        cloned,\n        selectFn,\n        selectConfig,\n        sourceDm,\n        selectRowDiffsetIterator\n    );\n    const diffIndex = selectModeMap[mode].diffIndex;\n\n    addDiffsetToClonedDm(cloned, setOfRowDiffsets[diffIndex[0]], sourceDm, selectConfig, selectFn);\n\n    if (diffIndex.length > 1) {\n        extraCloneDm = sourceDm.clone(cloneConfig.saveChild);\n        addDiffsetToClonedDm(extraCloneDm, setOfRowDiffsets[diffIndex[1]], sourceDm, selectConfig, selectFn);\n        return [cloned, extraCloneDm];\n    }\n\n    return cloned;\n};\n\nexport const cloneWithProject = (sourceDm, projField, config, allFields) => {\n    const cloned = sourceDm.clone(config.saveChild);\n    let projectionSet = projField;\n    if (config.mode === FilteringMode.INVERSE) {\n        projectionSet = allFields.filter(fieldName => projField.indexOf(fieldName) === -1);\n    }\n    // cloned._colIdentifier = sourceDm._colIdentifier.split(',')\n    //                         .filter(coll => projectionSet.indexOf(coll) !== -1).join();\n    cloned._colIdentifier = projectionSet.join(',');\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n\n    persistDerivations(\n        sourceDm,\n        cloned,\n        DM_DERIVATIVES.PROJECT,\n        { projField, config, actualProjField: projectionSet },\n        null\n    );\n\n    return cloned;\n};\n\n\nexport const splitWithProject = (sourceDm, projFieldSet, config, allFields) =>\n    projFieldSet.map(projFields =>\n        cloneWithProject(sourceDm, projFields, config, allFields));\n\nexport const sanitizeUnitSchema = (unitSchema) => {\n    // Do deep clone of the unit schema as the user might change it later.\n    unitSchema = extend2({}, unitSchema);\n    if (!unitSchema.type) {\n        unitSchema.type = FieldType.DIMENSION;\n    }\n\n    if (!unitSchema.subtype) {\n        switch (unitSchema.type) {\n        case FieldType.MEASURE:\n            unitSchema.subtype = MeasureSubtype.CONTINUOUS;\n            break;\n        default:\n        case FieldType.DIMENSION:\n            unitSchema.subtype = DimensionSubtype.CATEGORICAL;\n            break;\n        }\n    }\n\n    return unitSchema;\n};\n\nexport const validateUnitSchema = (unitSchema) => {\n    const supportedMeasureSubTypes = [MeasureSubtype.CONTINUOUS];\n    const supportedDimSubTypes = [\n        DimensionSubtype.CATEGORICAL,\n        DimensionSubtype.BINNED,\n        DimensionSubtype.TEMPORAL,\n        DimensionSubtype.GEO\n    ];\n    const { type, subtype, name } = unitSchema;\n\n    switch (type) {\n    case FieldType.DIMENSION:\n        if (supportedDimSubTypes.indexOf(subtype) === -1) {\n            throw new Error(`DataModel doesn't support dimension field subtype ${subtype} used for ${name} field`);\n        }\n        break;\n    case FieldType.MEASURE:\n        if (supportedMeasureSubTypes.indexOf(subtype) === -1) {\n            throw new Error(`DataModel doesn't support measure field subtype ${subtype} used for ${name} field`);\n        }\n        break;\n    default:\n        throw new Error(`DataModel doesn't support field type ${type} used for ${name} field`);\n    }\n};\n\nexport const sanitizeAndValidateSchema = schema => schema.map((unitSchema) => {\n    unitSchema = sanitizeUnitSchema(unitSchema);\n    validateUnitSchema(unitSchema);\n    return unitSchema;\n});\n\nexport const resolveFieldName = (schema, dataHeader) => {\n    schema.forEach((unitSchema) => {\n        const fieldNameAs = unitSchema.as;\n        if (!fieldNameAs) { return; }\n\n        const idx = dataHeader.indexOf(unitSchema.name);\n        dataHeader[idx] = fieldNameAs;\n        unitSchema.name = fieldNameAs;\n        delete unitSchema.as;\n    });\n};\n\nexport const updateData = (relation, data, schema, options) => {\n    schema = sanitizeAndValidateSchema(schema);\n    options = Object.assign(Object.assign({}, defaultConfig), options);\n    const converterFn = converter[options.dataFormat];\n\n    if (!(converterFn && typeof converterFn === 'function')) {\n        throw new Error(`No converter function found for ${options.dataFormat} format`);\n    }\n\n    const [header, formattedData] = converterFn(data, schema, options);\n    resolveFieldName(schema, header);\n    const fieldArr = createFields(formattedData, schema, header);\n\n    // This will create a new fieldStore with the fields\n    const nameSpace = fieldStore.createNamespace(fieldArr, options.name);\n    relation._partialFieldspace = nameSpace;\n\n    // If data is provided create the default colIdentifier and rowDiffset\n    relation._rowDiffset = formattedData.length && formattedData[0].length ? `0-${formattedData[0].length - 1}` : '';\n\n    // This stores the value objects which is passed to the filter method when selection operation is done.\n    const valueObjects = [];\n    const { fields } = nameSpace;\n    const rawFieldsData = fields.map(field => field.data());\n    const formattedFieldsData = fields.map(field => field.formattedData());\n    rowDiffsetIterator(relation._rowDiffset, (i) => {\n        valueObjects[i] = prepareSelectionData(fields, formattedFieldsData, rawFieldsData, i);\n    });\n    nameSpace._cachedValueObjects = valueObjects;\n\n    relation._colIdentifier = (schema.map(_ => _.name)).join();\n    relation._dataFormat = options.dataFormat === DataFormat.AUTO ? detectDataFormat(data) : options.dataFormat;\n    return relation;\n};\n\nexport const fieldInSchema = (schema, field) => {\n    let i = 0;\n\n    for (; i < schema.length; ++i) {\n        if (field === schema[i].name) {\n            return {\n                name: field,\n                type: schema[i].subtype || schema[i].type,\n                index: i,\n            };\n        }\n    }\n    return null;\n};\n\nexport const getDerivationArguments = (derivation) => {\n    let params = [];\n    let operation;\n    operation = derivation.op;\n    switch (operation) {\n    case DM_DERIVATIVES.SELECT:\n        params = [derivation.criteria];\n        break;\n    case DM_DERIVATIVES.PROJECT:\n        params = [derivation.meta.actualProjField];\n        break;\n    case DM_DERIVATIVES.GROUPBY:\n        operation = 'groupBy';\n        params = [derivation.meta.groupByString.split(','), derivation.criteria];\n        break;\n    default:\n        operation = null;\n    }\n\n    return {\n        operation,\n        params\n    };\n};\n\nconst applyExistingOperationOnModel = (propModel, dataModel) => {\n    const derivations = dataModel.getDerivations();\n    let selectionModel = propModel;\n\n    derivations.forEach((derivation) => {\n        if (!derivation) {\n            return;\n        }\n\n        const { operation, params } = getDerivationArguments(derivation);\n        if (operation) {\n            selectionModel = selectionModel[operation](...params, {\n                saveChild: false\n            });\n        }\n    });\n\n    return selectionModel;\n};\n\nconst getFilteredModel = (propModel, path) => {\n    for (let i = 0, len = path.length; i < len; i++) {\n        const model = path[i];\n        propModel = applyExistingOperationOnModel(propModel, model);\n    }\n    return propModel;\n};\n\nconst propagateIdentifiers = (dataModel, propModel, config = {}, propModelInf = {}) => {\n    const nonTraversingModel = propModelInf.nonTraversingModel;\n    const excludeModels = propModelInf.excludeModels || [];\n\n    if (dataModel === nonTraversingModel) {\n        return;\n    }\n\n    const propagate = excludeModels.length ? excludeModels.indexOf(dataModel) === -1 : true;\n\n    propagate && dataModel.handlePropagation(propModel, config);\n\n    const children = dataModel._children;\n    children.forEach((child) => {\n        const selectionModel = applyExistingOperationOnModel(propModel, child);\n        propagateIdentifiers(child, selectionModel, config, propModelInf);\n    });\n};\n\nexport const getRootGroupByModel = (model) => {\n    while (model._parent && model._derivation.find(d => d.op !== DM_DERIVATIVES.GROUPBY)) {\n        model = model._parent;\n    }\n    return model;\n};\n\nexport const getRootDataModel = (model) => {\n    while (model._parent) {\n        model = model._parent;\n    }\n    return model;\n};\n\nexport const getPathToRootModel = (model, path = []) => {\n    while (model._parent) {\n        path.push(model);\n        model = model._parent;\n    }\n    return path;\n};\n\nexport const propagateToAllDataModels = (identifiers, rootModels, propagationInf, config) => {\n    let criteria;\n    let propModel;\n    const { propagationNameSpace, propagateToSource } = propagationInf;\n    const propagationSourceId = propagationInf.sourceId;\n    const propagateInterpolatedValues = config.propagateInterpolatedValues;\n    const filterFn = (entry) => {\n        const filter = config.filterFn || (() => true);\n        return filter(entry, config);\n    };\n\n    let criterias = [];\n\n    if (identifiers === null && config.persistent !== true) {\n        criterias = [{\n            criteria: []\n        }];\n        criteria = [];\n    } else {\n        let actionCriterias = Object.values(propagationNameSpace.mutableActions);\n        if (propagateToSource !== false) {\n            actionCriterias = actionCriterias.filter(d => d.config.sourceId !== propagationSourceId);\n        }\n\n        const filteredCriteria = actionCriterias.filter(filterFn).map(action => action.config.criteria);\n\n        const excludeModels = [];\n\n        if (propagateToSource !== false) {\n            const sourceActionCriterias = Object.values(propagationNameSpace.mutableActions);\n\n            sourceActionCriterias.forEach((actionInf) => {\n                const actionConf = actionInf.config;\n                if (actionConf.applyOnSource === false && actionConf.action === config.action &&\n                        actionConf.sourceId !== propagationSourceId) {\n                    excludeModels.push(actionInf.model);\n                    criteria = sourceActionCriterias.filter(d => d !== actionInf).map(d => d.config.criteria);\n                    criteria.length && criterias.push({\n                        criteria,\n                        models: actionInf.model,\n                        path: getPathToRootModel(actionInf.model)\n                    });\n                }\n            });\n        }\n\n\n        criteria = [].concat(...[...filteredCriteria, identifiers]).filter(d => d !== null);\n        criterias.push({\n            criteria,\n            excludeModels: [...excludeModels, ...config.excludeModels || []]\n        });\n    }\n\n    const rootModel = rootModels.model;\n\n    const propConfig = Object.assign({\n        sourceIdentifiers: identifiers,\n        propagationSourceId\n    }, config);\n\n    const rootGroupByModel = rootModels.groupByModel;\n    if (propagateInterpolatedValues && rootGroupByModel) {\n        propModel = filterPropagationModel(rootGroupByModel, criteria, {\n            filterByMeasure: propagateInterpolatedValues\n        });\n        propagateIdentifiers(rootGroupByModel, propModel, propConfig);\n    }\n\n    criterias.forEach((inf) => {\n        const propagationModel = filterPropagationModel(rootModel, inf.criteria);\n        const path = inf.path;\n\n        if (path) {\n            const filteredModel = getFilteredModel(propagationModel, path.reverse());\n            inf.models.handlePropagation(filteredModel, propConfig);\n        } else {\n            propagateIdentifiers(rootModel, propagationModel, propConfig, {\n                excludeModels: inf.excludeModels,\n                nonTraversingModel: propagateInterpolatedValues && rootGroupByModel\n            });\n        }\n    });\n};\n\nexport const propagateImmutableActions = (propagationNameSpace, rootModels, propagationInf) => {\n    const immutableActions = propagationNameSpace.immutableActions;\n\n    for (const action in immutableActions) {\n        const actionInf = immutableActions[action];\n        const actionConf = actionInf.config;\n        const propagationSourceId = propagationInf.config.sourceId;\n        const filterImmutableAction = propagationInf.propConfig.filterImmutableAction ?\n            propagationInf.propConfig.filterImmutableAction(actionConf, propagationInf.config) : true;\n        if (actionConf.sourceId !== propagationSourceId && filterImmutableAction) {\n            const criteriaModel = actionConf.criteria;\n            propagateToAllDataModels(criteriaModel, rootModels, {\n                propagationNameSpace,\n                propagateToSource: false,\n                sourceId: propagationSourceId\n            }, actionConf);\n        }\n    }\n};\n\nexport const addToPropNamespace = (propagationNameSpace, config = {}, model) => {\n    let sourceNamespace;\n    const isMutableAction = config.isMutableAction;\n    const criteria = config.criteria;\n    const key = `${config.action}-${config.sourceId}`;\n\n    if (isMutableAction) {\n        sourceNamespace = propagationNameSpace.mutableActions;\n    } else {\n        sourceNamespace = propagationNameSpace.immutableActions;\n    }\n\n    if (criteria === null) {\n        delete sourceNamespace[key];\n    } else {\n        sourceNamespace[key] = {\n            model,\n            config\n        };\n    }\n\n    return this;\n};\n\n\nexport const getNormalizedProFields = (projField, allFields, fieldConfig) => {\n    const normalizedProjField = projField.reduce((acc, field) => {\n        if (field.constructor.name === 'RegExp') {\n            acc.push(...allFields.filter(fieldName => fieldName.search(field) !== -1));\n        } else if (field in fieldConfig) {\n            acc.push(field);\n        }\n        return acc;\n    }, []);\n    return Array.from(new Set(normalizedProjField)).map(field => field.trim());\n};\n\n/**\n * Get the numberFormatted value if numberFormat present,\n * else returns the supplied value.\n * @param {Object} field Field Instance\n * @param {Number|String} value\n * @return {Number|String}\n */\nexport const getNumberFormattedVal = (field, value) => {\n    if (field.numberFormat) {\n        return field.numberFormat()(value);\n    }\n    return value;\n};\n","import { FilteringMode } from './enums';\nimport { getUniqueId } from './utils';\nimport {\n    updateFields,\n    cloneWithSelect,\n    cloneWithProject,\n    updateData,\n    getNormalizedProFields\n} from './helper';\nimport { crossProduct, difference, naturalJoinFilter, union } from './operator';\n\n/**\n * Relation provides the definitions of basic operators of relational algebra like *selection*, *projection*, *union*,\n * *difference* etc.\n *\n * It is extended by {@link DataModel} to inherit the functionalities of relational algebra concept.\n *\n * @class\n * @public\n * @module Relation\n * @namespace DataModel\n */\nclass Relation {\n\n    /**\n     * Creates a new Relation instance by providing underlying data and schema.\n     *\n     * @private\n     *\n     * @param {Object | string | Relation} data - The input tabular data in dsv or json format or\n     * an existing Relation instance object.\n     * @param {Array} schema - An array of data schema.\n     * @param {Object} [options] - The optional options.\n     */\n    constructor (...params) {\n        let source;\n\n        this._parent = null;\n        this._derivation = [];\n        this._ancestorDerivation = [];\n        this._children = [];\n\n        if (params.length === 1 && ((source = params[0]) instanceof Relation)) {\n            // parent datamodel was passed as part of source\n            this._colIdentifier = source._colIdentifier;\n            this._rowDiffset = source._rowDiffset;\n            this._dataFormat = source._dataFormat;\n            this._parent = source;\n            this._partialFieldspace = this._parent._partialFieldspace;\n            this._fieldStoreName = getUniqueId();\n            this.__calculateFieldspace().calculateFieldsConfig();\n        } else {\n            updateData(this, ...params);\n            this._fieldStoreName = this._partialFieldspace.name;\n            this.__calculateFieldspace().calculateFieldsConfig();\n            this._propagationNameSpace = {\n                mutableActions: {},\n                immutableActions: {}\n            };\n        }\n    }\n\n    /**\n     * Retrieves the {@link Schema | schema} details for every {@link Field | field} as an array.\n     *\n     * @public\n     *\n     * @return {Array.<Schema>} Array of fields schema.\n     *      ```\n     *      [\n     *          { name: 'Name', type: 'dimension' },\n     *          { name: 'Miles_per_Gallon', type: 'measure', numberFormat: (val) => `${val} miles / gallon` },\n     *          { name: 'Cylinder', type: 'dimension' },\n     *          { name: 'Displacement', type: 'measure', defAggFn: 'max' },\n     *          { name: 'HorsePower', type: 'measure', defAggFn: 'max' },\n     *          { name: 'Weight_in_lbs', type: 'measure', defAggFn: 'avg',  },\n     *          { name: 'Acceleration', type: 'measure', defAggFn: 'avg' },\n     *          { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *          { name: 'Origin' }\n     *      ]\n     *      ```\n     */\n    getSchema () {\n        return this.getFieldspace().fields.map(d => d.schema());\n    }\n\n    /**\n     * Returns the name of the {@link DataModel} instance. If no name was specified during {@link DataModel}\n     * initialization, then it returns a auto-generated name.\n     *\n     * @public\n     *\n     * @return {string} Name of the DataModel instance.\n     */\n    getName() {\n        return this._fieldStoreName;\n    }\n\n    getFieldspace () {\n        return this._fieldspace;\n    }\n\n    __calculateFieldspace () {\n        this._fieldspace = updateFields([this._rowDiffset, this._colIdentifier],\n             this.getPartialFieldspace(), this._fieldStoreName);\n        return this;\n    }\n\n    getPartialFieldspace () {\n        return this._partialFieldspace;\n    }\n\n    /**\n     * Performs {@link link_of_cross_product | cross-product} between two {@link DataModel} instances and returns a\n     * new {@link DataModel} instance containing the results. This operation is also called theta join.\n     *\n     * Cross product takes two set and create one set where each value of one set is paired with each value of another\n     * set.\n     *\n     * This method takes an optional predicate which filters the generated result rows. If the predicate returns true\n     * the combined row is included in the resulatant table.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.join(originDM)));\n     *\n     *  console.log(carsDM.join(originDM,\n     *      obj => obj.[originDM.getName()].Origin === obj.[carsDM.getName()].Origin));\n     *\n     * @text\n     * This is chained version of `join` operator. `join` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel to be joined with the current instance DataModel.\n     * @param {SelectionPredicate} filterFn - The predicate function that will filter the result of the crossProduct.\n     *\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    join (joinWith, filterFn) {\n        return crossProduct(this, joinWith, filterFn);\n    }\n\n    /**\n     * {@link natural_join | Natural join} is a special kind of cross-product join where filtering of rows are performed\n     * internally by resolving common fields are from both table and the rows with common value are included.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.naturalJoin(originDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel with which the current instance of DataModel on which the method is\n     *      called will be joined.\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    naturalJoin (joinWith) {\n        return crossProduct(this, joinWith, naturalJoinFilter(this, joinWith), true);\n    }\n\n    /**\n     * {@link link_to_union | Union} operation can be termed as vertical stacking of all rows from both the DataModel\n     * instances, provided that both of the {@link DataModel} instances should have same column names.\n     *\n     * @example\n     * console.log(EuropeanMakerDM.union(USAMakerDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} unionWith - DataModel instance for which union has to be applied with the instance on which\n     *      the method is called\n     *\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    union (unionWith) {\n        return union(this, unionWith);\n    }\n\n    /**\n     * {@link link_to_difference | Difference } operation only include rows which are present in the datamodel on which\n     * it was called but not on the one passed as argument.\n     *\n     * @example\n     * console.log(highPowerDM.difference(highExpensiveDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} differenceWith - DataModel instance for which difference has to be applied with the instance\n     *      on which the method is called\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    difference (differenceWith) {\n        return difference(this, differenceWith);\n    }\n\n    /**\n     * {@link link_to_selection | Selection} is a row filtering operation. It expects a predicate and an optional mode\n     * which control which all rows should be included in the resultant DataModel instance.\n     *\n     * {@link SelectionPredicate} is a function which returns a boolean value. For selection operation the selection\n     * function is called for each row of DataModel instance with the current row passed as argument.\n     *\n     * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n     * of rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resultant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  // with selection mode NORMAL:\n     *  const normDt = dt.select(fields => fields.Origin.value === \"USA\")\n     *  console.log(normDt));\n     *\n     * // with selection mode INVERSE:\n     * const inverDt = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.INVERSE })\n     * console.log(inverDt);\n     *\n     * // with selection mode ALL:\n     * const dtArr = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.ALL })\n     * // print the selected parts\n     * console.log(dtArr[0]);\n     * // print the inverted parts\n     * console.log(dtArr[1]);\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Function} selectFn - The predicate function which is called for each row with the current row.\n     * ```\n     *  function (row, i, cloneProvider, store)  { ... }\n     * ```\n     * @param {Object} config - The configuration object to control the inclusion exclusion of a row in resultant\n     * DataModel instance.\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection.\n     * @return {DataModel} Returns the new DataModel instance(s) after operation.\n     */\n    select (selectFn, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n        config.mode = config.mode || defConfig.mode;\n\n        const cloneConfig = { saveChild: config.saveChild };\n        return cloneWithSelect(\n            this,\n            selectFn,\n            config,\n            cloneConfig\n        );\n    }\n\n    /**\n     * Retrieves a boolean value if the current {@link DataModel} instance has data.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'CarName', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     * const data = [];\n     *\n     * const dt = new DataModel(data, schema);\n     * console.log(dt.isEmpty());\n     *\n     * @public\n     *\n     * @return {Boolean} True if the datamodel has no data, otherwise false.\n     */\n    isEmpty () {\n        return !this._rowDiffset.length || !this._colIdentifier.length;\n    }\n\n    /**\n     * Creates a clone from the current DataModel instance with child parent relationship.\n     *\n     * @private\n     * @param {boolean} [saveChild=true] - Whether the cloned instance would be recorded in the parent instance.\n     * @return {DataModel} - Returns the newly cloned DataModel instance.\n     */\n    clone (saveChild = true) {\n        const clonedDm = new this.constructor(this);\n        if (saveChild) {\n            clonedDm.setParent(this);\n        } else {\n            clonedDm.setParent(null);\n        }\n        return clonedDm;\n    }\n\n    /**\n     * {@link Projection} is filter column (field) operation. It expects list of fields' name and either include those\n     * or exclude those based on {@link FilteringMode} on the resultant variable.\n     *\n     * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n     * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resulatant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *\n     *  // with projection mode NORMAL:\n     *  const normDt = dt.project([\"Name\", \"HorsePower\"]);\n     *  console.log(normDt.getData());\n     *\n     *  // with projection mode INVERSE:\n     *  const inverDt = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.INVERSE })\n     *  console.log(inverDt.getData());\n     *\n     *  // with selection mode ALL:\n     *  const dtArr = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.ALL })\n     *  // print the normal parts\n     *  console.log(dtArr[0].getData());\n     *  // print the inverted parts\n     *  console.log(dtArr[1].getData());\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n     * @param {Object} [config] - An optional config to control the creation of new DataModel\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n     *\n     * @return {DataModel} Returns the new DataModel instance after operation.\n     */\n    project (projField, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n        const fieldConfig = this.getFieldsConfig();\n        const allFields = Object.keys(fieldConfig);\n        const { mode } = config;\n        const normalizedProjField = getNormalizedProFields(projField, allFields, fieldConfig);\n\n        let dataModel;\n\n        if (mode === FilteringMode.ALL) {\n            let projectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.NORMAL,\n                saveChild: config.saveChild\n            }, allFields);\n            let rejectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.INVERSE,\n                saveChild: config.saveChild\n            }, allFields);\n            dataModel = [projectionClone, rejectionClone];\n        } else {\n            let projectionClone = cloneWithProject(this, normalizedProjField, config, allFields);\n            dataModel = projectionClone;\n        }\n\n        return dataModel;\n    }\n\n    getFieldsConfig () {\n        return this._fieldConfig;\n    }\n\n    calculateFieldsConfig () {\n        this._fieldConfig = this._fieldspace.fields.reduce((acc, fieldObj, i) => {\n            acc[fieldObj.name()] = {\n                index: i,\n                def: fieldObj.schema(),\n            };\n            return acc;\n        }, {});\n        return this;\n    }\n\n\n    /**\n     * Frees up the resources associated with the current DataModel instance and breaks all the links instance has in\n     * the DAG.\n     *\n     * @public\n     */\n    dispose () {\n        this._parent && this._parent.removeChild(this);\n        this._parent = null;\n        this._children.forEach((child) => {\n            child._parent = null;\n        });\n        this._children = [];\n    }\n\n    /**\n     * Removes the specified child {@link DataModel} from the child list of the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\")\n     * dt.removeChild(dt2);\n     *\n     * @private\n     *\n     * @param {DataModel} child - Delegates the parent to remove this child.\n     */\n    removeChild (child) {\n        let idx = this._children.findIndex(sibling => sibling === child);\n        idx !== -1 ? this._children.splice(idx, 1) : true;\n    }\n\n    /**\n     * Sets the specified {@link DataModel} as a parent for the current {@link DataModel} instance.\n     *\n     * @param {DataModel} parent - The datamodel instance which will act as parent.\n     */\n    setParent (parent) {\n        this._parent && this._parent.removeChild(this);\n        this._parent = parent;\n        parent && parent._children.push(this);\n    }\n\n    /**\n     * Returns the parent {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const parentDm = dt2.getParent();\n     *\n     * @return {DataModel} Returns the parent DataModel instance.\n     */\n    getParent () {\n        return this._parent;\n    }\n\n    /**\n     * Returns the immediate child {@link DataModel} instances.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const childDm1 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const childDm2 = dt.select(fields => fields.Origin.value === \"Japan\");\n     * const childDm3 = dt.groupBy([\"Origin\"]);\n     *\n     * @return {DataModel[]} Returns the immediate child DataModel instances.\n     */\n    getChildren () {\n        return this._children;\n    }\n\n    /**\n     * Returns the in-between operation meta data while creating the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const derivations = dt3.getDerivations();\n     *\n     * @return {Any[]} Returns the derivation meta data.\n     */\n    getDerivations () {\n        return this._derivation;\n    }\n\n    /**\n     * Returns the in-between operation meta data happened from root {@link DataModel} to current instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const ancDerivations = dt3.getAncestorDerivations();\n     *\n     * @return {Any[]} Returns the previous derivation meta data.\n     */\n    getAncestorDerivations () {\n        return this._ancestorDerivation;\n    }\n}\n\nexport default Relation;\n","/* eslint-disable default-case */\n\nimport { FieldType, DimensionSubtype, DataFormat, FilteringMode } from './enums';\nimport {\n    persistDerivations,\n    getRootGroupByModel,\n    propagateToAllDataModels,\n    getRootDataModel,\n    propagateImmutableActions,\n    addToPropNamespace,\n    sanitizeUnitSchema,\n    splitWithSelect,\n    splitWithProject,\n    getNormalizedProFields\n} from './helper';\nimport { DM_DERIVATIVES, PROPAGATION } from './constants';\nimport {\n    dataBuilder,\n    rowDiffsetIterator,\n    groupBy\n} from './operator';\nimport { createBinnedFieldData } from './operator/bucket-creator';\nimport Relation from './relation';\nimport reducerStore from './utils/reducer-store';\nimport { createFields } from './field-creator';\nimport InvalidAwareTypes from './invalid-aware-types';\nimport Value from './value';\n\n/**\n * DataModel is an in-browser representation of tabular data. It supports\n * {@link https://en.wikipedia.org/wiki/Relational_algebra | relational algebra} operators as well as generic data\n * processing opearators.\n * DataModel extends {@link Relation} class which defines all the relational algebra opreators. DataModel gives\n * definition of generic data processing operators which are not relational algebra complient.\n *\n * @public\n * @class\n * @extends Relation\n * @memberof Datamodel\n */\nclass DataModel extends Relation {\n    /**\n     * Creates a new DataModel instance by providing data and schema. Data could be in the form of\n     * - Flat JSON\n     * - DSV String\n     * - 2D Array\n     *\n     * By default DataModel finds suitable adapter to serialize the data. DataModel also expects a\n     * {@link Schema | schema} for identifying the variables present in data.\n     *\n     * @constructor\n     * @example\n     * const data = loadData('cars.csv');\n     * const schema = [\n     *      { name: 'Name', type: 'dimension' },\n     *      { name: 'Miles_per_Gallon', type: 'measure', unit : 'cm', scale: '1000', numberformat: val => `${val}G`},\n     *      { name: 'Cylinders', type: 'dimension' },\n     *      { name: 'Displacement', type: 'measure' },\n     *      { name: 'Horsepower', type: 'measure' },\n     *      { name: 'Weight_in_lbs', type: 'measure' },\n     *      { name: 'Acceleration', type: 'measure' },\n     *      { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *      { name: 'Origin', type: 'dimension' }\n     * ];\n     * const dm = new DataModel(data, schema, { name: 'Cars' });\n     * table(dm);\n     *\n     * @public\n     *\n     * @param {Array.<Object> | string | Array.<Array>} data Input data in any of the mentioned formats\n     * @param {Array.<Schema>} schema Defination of the variables. Order of the variables in data and order of the\n     *      variables in schema has to be same.\n     * @param {object} [options] Optional arguments to specify more settings regarding the creation part\n     * @param {string} [options.name] Name of the datamodel instance. If no name is given an auto generated name is\n     *      assigned to the instance.\n     * @param {string} [options.fieldSeparator=','] specify field separator type if the data is of type dsv string.\n     */\n    constructor (...args) {\n        super(...args);\n\n        this._onPropagation = [];\n    }\n\n    /**\n     * Reducers are simple functions which reduces an array of numbers to a representative number of the set.\n     * Like an array of numbers `[10, 20, 5, 15]` can be reduced to `12.5` if average / mean reducer function is\n     * applied. All the measure fields in datamodel (variables in data) needs a reducer to handle aggregation.\n     *\n     * @public\n     *\n     * @return {ReducerStore} Singleton instance of {@link ReducerStore}.\n     */\n    static get Reducers () {\n        return reducerStore;\n    }\n\n    /**\n     * Configure null, undefined, invalid values in the source data\n     *\n     * @public\n     *\n     * @param {Object} [config] - Configuration to control how null, undefined and non-parsable values are\n     * represented in DataModel.\n     * @param {string} [config.undefined] - Define how an undefined value will be represented.\n     * @param {string} [config.null] - Define how a null value will be represented.\n     * @param {string} [config.invalid] - Define how a non-parsable value will be represented.\n     */\n    static configureInvalidAwareTypes (config) {\n        return InvalidAwareTypes.invalidAwareVals(config);\n    }\n\n    /**\n     * Retrieve the data attached to an instance in JSON format.\n     *\n     * @example\n     * // DataModel instance is already prepared and assigned to dm variable\n     *  const data = dm.getData({\n     *      order: 'column',\n     *      formatter: {\n     *          origin: (val) => val === 'European Union' ? 'EU' : val;\n     *      }\n     *  });\n     *  console.log(data);\n     *\n     * @public\n     *\n     * @param {Object} [options] Options to control how the raw data is to be returned.\n     * @param {string} [options.order='row'] Defines if data is retieved in row order or column order. Possible values\n     *      are `'rows'` and `'columns'`\n     * @param {Function} [options.formatter=null] Formats the output data. This expects an object, where the keys are\n     *      the name of the variable needs to be formatted. The formatter function is called for each row passing the\n     *      value of the cell for a particular row as arguments. The formatter is a function in the form of\n     *      `function (value, rowId, schema) => { ... }`\n     *      Know more about {@link Fomatter}.\n     *\n     * @return {Array} Returns a multidimensional array of the data with schema. The return format looks like\n     *      ```\n     *          {\n     *              data,\n     *              schema\n     *          }\n     *      ```\n     */\n    getData (options) {\n        const defOptions = {\n            order: 'row',\n            formatter: null,\n            withUid: false,\n            getAllFields: false,\n            sort: []\n        };\n        options = Object.assign({}, defOptions, options);\n        const fields = this.getPartialFieldspace().fields;\n\n        const dataGenerated = dataBuilder.call(\n            this,\n            this.getPartialFieldspace().fields,\n            this._rowDiffset,\n            options.getAllFields ? fields.map(d => d.name()).join() : this._colIdentifier,\n            options.sort,\n            {\n                columnWise: options.order === 'column',\n                addUid: !!options.withUid\n            }\n        );\n\n        if (!options.formatter) {\n            return dataGenerated;\n        }\n\n        const { formatter } = options;\n        const { data, schema, uids } = dataGenerated;\n        const fieldNames = schema.map((e => e.name));\n        const fmtFieldNames = Object.keys(formatter);\n        const fmtFieldIdx = fmtFieldNames.reduce((acc, next) => {\n            const idx = fieldNames.indexOf(next);\n            if (idx !== -1) {\n                acc.push([idx, formatter[next]]);\n            }\n            return acc;\n        }, []);\n\n        if (options.order === 'column') {\n            fmtFieldIdx.forEach((elem) => {\n                const fIdx = elem[0];\n                const fmtFn = elem[1];\n\n                data[fIdx].forEach((datum, datumIdx) => {\n                    data[fIdx][datumIdx] = fmtFn.call(\n                        undefined,\n                        datum,\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        } else {\n            data.forEach((datum, datumIdx) => {\n                fmtFieldIdx.forEach((elem) => {\n                    const fIdx = elem[0];\n                    const fmtFn = elem[1];\n\n                    datum[fIdx] = fmtFn.call(\n                        undefined,\n                        datum[fIdx],\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        }\n\n        return dataGenerated;\n    }\n\n    /**\n     * Returns the unique ids in an array.\n     *\n     * @return {Array} Returns an array of ids.\n     */\n    getUids () {\n        const rowDiffset = this._rowDiffset;\n        const ids = [];\n\n        if (rowDiffset.length) {\n            const diffSets = rowDiffset.split(',');\n\n            diffSets.forEach((set) => {\n                let [start, end] = set.split('-').map(Number);\n\n                end = end !== undefined ? end : start;\n                ids.push(...Array(end - start + 1).fill().map((_, idx) => start + idx));\n            });\n        }\n\n        return ids;\n    }\n    /**\n     * Groups the data using particular dimensions and by reducing measures. It expects a list of dimensions using which\n     * it projects the datamodel and perform aggregations to reduce the duplicate tuples. Refer this\n     * {@link link_to_one_example_with_group_by | document} to know the intuition behind groupBy.\n     *\n     * DataModel by default provides definition of few {@link reducer | Reducers}.\n     * {@link ReducerStore | User defined reducers} can also be registered.\n     *\n     * This is the chained implementation of `groupBy`.\n     * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n     *\n     * @example\n     * const groupedDM = dm.groupBy(['Year'], { horsepower: 'max' } );\n     * console.log(groupedDm);\n     *\n     * @public\n     *\n     * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n     * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n     *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n     *      schema of the variable.\n     *\n     * @return {DataModel} Returns a new DataModel instance after performing the groupby.\n     */\n    groupBy (fieldsArr, reducers = {}, config = { saveChild: true }) {\n        const groupByString = `${fieldsArr.join()}`;\n        let params = [this, fieldsArr, reducers];\n        const newDataModel = groupBy(...params);\n\n        persistDerivations(\n            this,\n            newDataModel,\n            DM_DERIVATIVES.GROUPBY,\n            { fieldsArr, groupByString, defaultReducer: reducerStore.defaultReducer() },\n            reducers\n        );\n\n        if (config.saveChild) {\n            newDataModel.setParent(this);\n        } else {\n            newDataModel.setParent(null);\n        }\n\n        return newDataModel;\n    }\n\n    /**\n     * Performs sorting operation on the current {@link DataModel} instance according to the specified sorting details.\n     * Like every other operator it doesn't mutate the current DataModel instance on which it was called, instead\n     * returns a new DataModel instance containing the sorted data.\n     *\n     * DataModel support multi level sorting by listing the variables using which sorting needs to be performed and\n     * the type of sorting `ASC` or `DESC`.\n     *\n     * In the following example, data is sorted by `Origin` field in `DESC` order in first level followed by another\n     * level of sorting by `Acceleration` in `ASC` order.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * let sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\"] // Default value is ASC\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * // Sort with a custom sorting function\n     * sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\", (a, b) => a - b] // Custom sorting function\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @text\n     * DataModel also provides another sorting mechanism out of the box where sort is applied to a variable using\n     * another variable which determines the order.\n     * Like the above DataModel contains three fields `Origin`, `Name` and `Acceleration`. Now, the data in this\n     * model can be sorted by `Origin` field according to the average value of all `Acceleration` for a\n     * particular `Origin` value.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * const sortedDm = dm.sort([\n     *     ['Origin', ['Acceleration', (a, b) => avg(...a.Acceleration) - avg(...b.Acceleration)]]\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @public\n     *\n     * @param {Array.<Array>} sortingDetails - Sorting details based on which the sorting will be performed.\n     * @return {DataModel} Returns a new instance of DataModel with sorted data.\n     */\n    sort (sortingDetails, config = { saveChild: false }) {\n        const rawData = this.getData({\n            order: 'row',\n            sort: sortingDetails\n        });\n        const header = rawData.schema.map(field => field.name);\n        const dataInCSVArr = [header].concat(rawData.data);\n\n        const sortedDm = new this.constructor(dataInCSVArr, rawData.schema, { dataFormat: 'DSVArr' });\n\n        persistDerivations(\n            this,\n            sortedDm,\n            DM_DERIVATIVES.SORT,\n            config,\n            sortingDetails\n        );\n\n        if (config.saveChild) {\n            sortedDm.setParent(this);\n        } else {\n            sortedDm.setParent(null);\n        }\n\n        return sortedDm;\n    }\n\n    /**\n     * Performs the serialization operation on the current {@link DataModel} instance according to the specified data\n     * type. When an {@link DataModel} instance is created, it de-serializes the input data into its internal format,\n     * and during its serialization process, it converts its internal data format to the specified data type and returns\n     * that data regardless what type of data is used during the {@link DataModel} initialization.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance.\n     * const csvData = dm.serialize(DataModel.DataFormat.DSV_STR, { fieldSeparator: \",\" });\n     * console.log(csvData); // The csv formatted data.\n     *\n     * const jsonData = dm.serialize(DataModel.DataFormat.FLAT_JSON);\n     * console.log(jsonData); // The json data.\n     *\n     * @public\n     *\n     * @param {string} type - The data type name for serialization.\n     * @param {Object} options - The optional option object.\n     * @param {string} options.fieldSeparator - The field separator character for DSV data type.\n     * @return {Array|string} Returns the serialized data.\n     */\n    serialize (type, options) {\n        type = type || this._dataFormat;\n        options = Object.assign({}, { fieldSeparator: ',' }, options);\n\n        const fields = this.getFieldspace().fields;\n        const colData = fields.map(f => f.formattedData());\n        const rowsCount = colData[0].length;\n        let serializedData;\n        let rowIdx;\n        let colIdx;\n\n        if (type === DataFormat.FLAT_JSON) {\n            serializedData = [];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = {};\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row[fields[colIdx].name()] = colData[colIdx][rowIdx];\n                }\n                serializedData.push(row);\n            }\n        } else if (type === DataFormat.DSV_STR) {\n            serializedData = [fields.map(f => f.name()).join(options.fieldSeparator)];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row.join(options.fieldSeparator));\n            }\n            serializedData = serializedData.join('\\n');\n        } else if (type === DataFormat.DSV_ARR) {\n            serializedData = [fields.map(f => f.name())];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row);\n            }\n        } else {\n            throw new Error(`Data type ${type} is not supported`);\n        }\n\n        return serializedData;\n    }\n\n    addField (field) {\n        const fieldName = field.name();\n        this._colIdentifier += `,${fieldName}`;\n        const partialFieldspace = this._partialFieldspace;\n        const cachedValueObjects = partialFieldspace._cachedValueObjects;\n        const formattedData = field.formattedData();\n        const rawData = field.partialField.data;\n\n        if (!partialFieldspace.fieldsObj()[field.name()]) {\n            partialFieldspace.fields.push(field);\n            cachedValueObjects.forEach((obj, i) => {\n                obj[field.name()] = new Value(formattedData[i], rawData[i], field);\n            });\n        } else {\n            const fieldIndex = partialFieldspace.fields.findIndex(fieldinst => fieldinst.name() === fieldName);\n            fieldIndex >= 0 && (partialFieldspace.fields[fieldIndex] = field);\n        }\n\n        // flush out cached namespace values on addition of new fields\n        partialFieldspace._cachedFieldsObj = null;\n        partialFieldspace._cachedDimension = null;\n        partialFieldspace._cachedMeasure = null;\n\n        this.__calculateFieldspace().calculateFieldsConfig();\n        return this;\n    }\n\n    /**\n    * Creates a new variable calculated from existing variables. This method expects the definition of the newly created\n    * variable and a function which resolves the value of the new variable from existing variables.\n    *\n    * Can create a new measure based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const newDm = dataModel.calculateVariable({\n    *      name: 'powerToWeight',\n    *      type: 'measure'\n    *  }, ['horsepower', 'weight_in_lbs', (hp, weight) => hp / weight ]);\n    *\n    *\n    * Can create a new dimension based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const child = dataModel.calculateVariable(\n    *     {\n    *       name: 'Efficiency',\n    *       type: 'dimension'\n    *     }, ['horsepower', (hp) => {\n    *      if (hp < 80) { return 'low'; },\n    *      else if (hp < 120) { return 'moderate'; }\n    *      else { return 'high' }\n    *  }]);\n    *\n    * @public\n    *\n    * @param {Object} schema - The schema of newly defined variable.\n    * @param {Array.<string|function>} dependency - An array containing the dependency variable names and a resolver\n    * function as the last element.\n    * @param {Object} config - An optional config object.\n    * @param {boolean} [config.saveChild] - Whether the newly created DataModel will be a child.\n    * @param {boolean} [config.replaceVar] - Whether the newly created variable will replace the existing variable.\n    * @return {DataModel} Returns an instance of DataModel with the new field.\n    */\n    calculateVariable (schema, dependency, config) {\n        schema = sanitizeUnitSchema(schema);\n        config = Object.assign({}, { saveChild: true, replaceVar: false }, config);\n\n        const fieldsConfig = this.getFieldsConfig();\n        const depVars = dependency.slice(0, dependency.length - 1);\n        const retrieveFn = dependency[dependency.length - 1];\n\n        if (fieldsConfig[schema.name] && !config.replaceVar) {\n            throw new Error(`${schema.name} field already exists in datamodel`);\n        }\n\n        const depFieldIndices = depVars.map((field) => {\n            const fieldSpec = fieldsConfig[field];\n            if (!fieldSpec) {\n                // @todo dont throw error here, use warning in production mode\n                throw new Error(`${field} is not a valid column name.`);\n            }\n            return fieldSpec.index;\n        });\n\n        const clone = this.clone(config.saveChild);\n\n        const fs = clone.getFieldspace().fields;\n        const suppliedFields = depFieldIndices.map(idx => fs[idx]);\n\n        let cachedStore = {};\n        let cloneProvider = () => this.detachedRoot();\n\n        const computedValues = [];\n        rowDiffsetIterator(clone._rowDiffset, (i) => {\n            const fieldsData = suppliedFields.map(field => field.partialField.data[i]);\n            computedValues[i] = retrieveFn(...fieldsData, i, cloneProvider, cachedStore);\n        });\n        const [field] = createFields([computedValues], [schema], [schema.name]);\n        clone.addField(field);\n\n        persistDerivations(\n            this,\n            clone,\n            DM_DERIVATIVES.CAL_VAR,\n            { config: schema, fields: depVars },\n            retrieveFn\n        );\n\n        return clone;\n    }\n\n    /**\n     * Propagates changes across all the connected DataModel instances.\n     *\n     * @param {Array} identifiers - A list of identifiers that were interacted with.\n     * @param {Object} payload - The interaction specific details.\n     *\n     * @return {DataModel} DataModel instance.\n     */\n    propagate (identifiers, config = {}, addToNameSpace, propConfig = {}) {\n        const isMutableAction = config.isMutableAction;\n        const propagationSourceId = config.sourceId;\n        const payload = config.payload;\n        const rootModel = getRootDataModel(this);\n        const propagationNameSpace = rootModel._propagationNameSpace;\n        const rootGroupByModel = getRootGroupByModel(this);\n        const rootModels = {\n            groupByModel: rootGroupByModel,\n            model: rootModel\n        };\n\n        addToNameSpace && addToPropNamespace(propagationNameSpace, config, this);\n        propagateToAllDataModels(identifiers, rootModels, { propagationNameSpace, sourceId: propagationSourceId },\n            Object.assign({\n                payload\n            }, config));\n\n        if (isMutableAction) {\n            propagateImmutableActions(propagationNameSpace, rootModels, {\n                config,\n                propConfig\n            }, this);\n        }\n\n        return this;\n    }\n\n    /**\n     * Associates a callback with an event name.\n     *\n     * @param {string} eventName - The name of the event.\n     * @param {Function} callback - The callback to invoke.\n     * @return {DataModel} Returns this current DataModel instance itself.\n     */\n    on (eventName, callback) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation.push(callback);\n            break;\n        }\n        return this;\n    }\n\n    /**\n     * Unsubscribes the callbacks for the provided event name.\n     *\n     * @param {string} eventName - The name of the event to unsubscribe.\n     * @return {DataModel} Returns the current DataModel instance itself.\n     */\n    unsubscribe (eventName) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation = [];\n            break;\n\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to invoke the method associated with propagation.\n     *\n     * @param {Object} payload The interaction payload.\n     * @param {DataModel} identifiers The propagated DataModel.\n     * @memberof DataModel\n     */\n    handlePropagation (propModel, payload) {\n        let propListeners = this._onPropagation;\n        propListeners.forEach(fn => fn.call(this, propModel, payload));\n    }\n\n    /**\n     * Performs the binning operation on a measure field based on the binning configuration. Binning means discretizing\n     * values of a measure. Binning configuration contains an array; subsequent values from the array marks the boundary\n     * of buckets in [inclusive, exclusive) range format. This operation does not mutate the subject measure field,\n     * instead, it creates a new field (variable) of type dimension and subtype binned.\n     *\n     * Binning can be configured by\n     * - providing custom bin configuration with non-uniform buckets,\n     * - providing bins count,\n     * - providing each bin size,\n     *\n     * When custom `buckets` are provided as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', buckets: [30, 80, 100, 110] }\n     *  const binnedDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binsCount` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', binsCount: 5, start: 0, end: 100 }\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binSize` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHorsepower', binSize: 20, start: 5}\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @public\n     *\n     * @param {string} measureFieldName - The name of the target measure field.\n     * @param {Object} config - The config object.\n     * @param {string} [config.name] - The name of the new field which will be created.\n     * @param {string} [config.buckets] - An array containing the bucket ranges.\n     * @param {string} [config.binSize] - The size of each bin. It is ignored when buckets are given.\n     * @param {string} [config.binsCount] - The total number of bins to generate. It is ignored when buckets are given.\n     * @param {string} [config.start] - The start value of the bucket ranges. It is ignored when buckets are given.\n     * @param {string} [config.end] - The end value of the bucket ranges. It is ignored when buckets are given.\n     * @return {DataModel} Returns a new {@link DataModel} instance with the new field.\n     */\n    bin (measureFieldName, config) {\n        const fieldsConfig = this.getFieldsConfig();\n\n        if (!fieldsConfig[measureFieldName]) {\n            throw new Error(`Field ${measureFieldName} doesn't exist`);\n        }\n\n        const binFieldName = config.name || `${measureFieldName}_binned`;\n\n        if (fieldsConfig[binFieldName]) {\n            throw new Error(`Field ${binFieldName} already exists`);\n        }\n\n        const measureField = this.getFieldspace().fieldsObj()[measureFieldName];\n        const { binnedData, bins } = createBinnedFieldData(measureField, this._rowDiffset, config);\n\n        const binField = createFields([binnedData], [\n            {\n                name: binFieldName,\n                type: FieldType.DIMENSION,\n                subtype: DimensionSubtype.BINNED,\n                bins\n            }], [binFieldName])[0];\n\n        const clone = this.clone(config.saveChild);\n        clone.addField(binField);\n\n        persistDerivations(\n            this,\n            clone,\n            DM_DERIVATIVES.BIN,\n             { measureFieldName, config, binFieldName },\n             null\n        );\n\n        return clone;\n    }\n\n    /**\n     * Creates a new {@link DataModel} instance with completely detached root from current {@link DataModel} instance,\n     * the new {@link DataModel} instance has no parent-children relationship with the current one, but has same data as\n     * the current one.\n     * This API is useful when a completely different {@link DataModel} but with same data as the current instance is\n     * needed.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *  const detachedDm = dm.detachedRoot();\n     *\n     * // has different namespace\n     * console.log(dm.getPartialFieldspace().name);\n     * console.log(detachedDm.getPartialFieldspace().name);\n     *\n     * // has same data\n     * console.log(dm.getData());\n     * console.log(detachedDm.getData());\n     *\n     * @public\n     *\n     * @return {DataModel} Returns a detached {@link DataModel} instance.\n     */\n    detachedRoot () {\n        const data = this.serialize(DataFormat.FLAT_JSON);\n        const schema = this.getSchema();\n\n        return new DataModel(data, schema);\n    }\n\n    /**\n     * Creates a set of new {@link DataModel} instances by splitting the set of rows in the source {@link DataModel}\n     * instance based on a set of dimensions.\n     *\n     * For each unique dimensional value, a new split is created which creates a unique {@link DataModel} instance for\n     *  that split\n     *\n     * If multiple dimensions are provided, it splits the source {@link DataModel} instance with all possible\n     * combinations of the dimensional values for all the dimensions provided\n     *\n     * Additionally, it also accepts a predicate function to reduce the set of rows provided. A\n     * {@link link_to_selection | Selection} is performed on all the split {@link DataModel} instances based on\n     * the predicate function\n     *\n     * @example\n     *  // without predicate function:\n     *  const splitDt = dt.splitByRow(['Origin'])\n     *  console.log(splitDt));\n     * // This should give three unique DataModel instances, one each having rows only for 'USA',\n     * // 'Europe' and 'Japan' respectively\n     *\n     * @example\n     *  // without predicate function:\n     *  const splitDtMulti = dt.splitByRow(['Origin', 'Cylinders'])\n     *  console.log(splitDtMulti));\n     * // This should give DataModel instances for all unique combinations of Origin and Cylinder values\n     *\n     * @example\n     * // with predicate function:\n     * const splitWithPredDt = dt.select(['Origin'], fields => fields.Origin.value === \"USA\")\n     * console.log(splitWithPredDt);\n     * // This should not include the DataModel for the Origin : 'USA'\n     *\n     *\n     * @public\n     *\n     * @param {Array} dimensionArr - Set of dimensions based on which the split should occur\n     * @param {Object} config - The configuration object\n     * @param {string} [config.saveChild] - Configuration to save child or not\n     * @param {string}[config.mode=FilteringMode.NORMAL] -The mode of the selection.\n     * @return {Array}  Returns the new DataModel instances after operation.\n     */\n    splitByRow (dimensionArr, reducerFn, config) {\n        const fieldsConfig = this.getFieldsConfig();\n\n        dimensionArr.forEach((fieldName) => {\n            if (!fieldsConfig[fieldName]) {\n                throw new Error(`Field ${fieldName} doesn't exist in the schema`);\n            }\n        });\n\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n\n        config = Object.assign({}, defConfig, config);\n\n        return splitWithSelect(this, dimensionArr, reducerFn, config);\n    }\n\n    /**\n     * Creates a set of new {@link DataModel} instances by splitting the set of fields in the source {@link DataModel}\n     * instance based on a set of common and unique field names provided.\n     *\n     * Each DataModel created contains a set of fields which are common to all and a set of unique fields.\n     * It also accepts configurations such as saveChild and mode(inverse or normal) to include/exclude the respective\n     * fields\n     *\n     * @example\n     *  // without predicate function:\n     *  const splitDt = dt.splitByColumn( [['Acceleration'], ['Horsepower']], ['Origin'])\n     *  console.log(splitDt));\n     * // This should give two unique DataModel instances, both having the field 'Origin' and\n     * // one each having 'Acceleration' and 'Horsepower' fields respectively\n     *\n     * @example\n     *  // without predicate function:\n     *  const splitDtInv = dt.splitByColumn( [['Acceleration'], ['Horsepower'],['Origin', 'Cylinders'],\n     *                           {mode: 'inverse'})\n     *  console.log(splitDtInv));\n     * // This should give DataModel instances in the following way:\n     * // All DataModel Instances do not have the fields 'Origin' and 'Cylinders'\n     * // One DataModel Instance has rest of the fields except 'Acceleration' and the other DataModel instance\n     * // has rest of the fields except 'Horsepower'\n     *\n     *\n     *\n     * @public\n     *\n     * @param {Array} uniqueFields - Set of unique fields included in each datamModel instance\n     * @param {Array} commonFields - Set of common fields included in all datamModel instances\n     * @param {Object} config - The configuration object\n     * @param {string} [config.saveChild] - Configuration to save child or not\n     * @param {string}[config.mode=FilteringMode.NORMAL] -The mode of the selection.\n     * @return {Array}  Returns the new DataModel instances after operation.\n     */\n    splitByColumn (uniqueFields = [], commonFields = [], config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        const fieldConfig = this.getFieldsConfig();\n        const allFields = Object.keys(fieldConfig);\n        const normalizedProjFieldSets = [[commonFields]];\n\n        config = Object.assign({}, defConfig, config);\n        uniqueFields = uniqueFields.length ? uniqueFields : [[]];\n\n\n        uniqueFields.forEach((fieldSet, i) => {\n            normalizedProjFieldSets[i] = getNormalizedProFields(\n                [...fieldSet, ...commonFields],\n                allFields,\n                fieldConfig);\n        });\n\n        return splitWithProject(this, normalizedProjFieldSets, config, allFields);\n    }\n\n\n}\n\nexport default DataModel;\n","import { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport DataModel from '../export';\nimport reducerStore from '../utils/reducer-store';\nimport { defaultReducerName } from './group-by-function';\nimport { FieldType } from '../enums';\n\n/**\n * This function sanitize the user given field and return a common Array structure field\n * list\n * @param  {DataModel} dataModel the dataModel operating on\n * @param  {Array} fieldArr  user input of field Array\n * @return {Array}           arrays of field name\n */\nfunction getFieldArr (dataModel, fieldArr) {\n    const retArr = [];\n    const fieldStore = dataModel.getFieldspace();\n    const dimensions = fieldStore.getDimension();\n\n    Object.entries(dimensions).forEach(([key]) => {\n        if (fieldArr && fieldArr.length) {\n            if (fieldArr.indexOf(key) !== -1) {\n                retArr.push(key);\n            }\n        } else {\n            retArr.push(key);\n        }\n    });\n\n    return retArr;\n}\n\n/**\n * This sanitize the reducer provide by the user and create a common type of object.\n * user can give function Also\n * @param  {DataModel} dataModel     dataModel to worked on\n * @param  {Object|function} [reducers={}] reducer provided by the users\n * @return {Object}               object containing reducer function for every measure\n */\nfunction getReducerObj (dataModel, reducers = {}) {\n    const retObj = {};\n    const fieldStore = dataModel.getFieldspace();\n    const measures = fieldStore.getMeasure();\n    const defReducer = reducerStore.defaultReducer();\n\n    Object.keys(measures).forEach((measureName) => {\n        if (typeof reducers[measureName] !== 'string') {\n            reducers[measureName] = measures[measureName].defAggFn();\n        }\n        const reducerFn = reducerStore.resolve(reducers[measureName]);\n        if (reducerFn) {\n            retObj[measureName] = reducerFn;\n        } else {\n            retObj[measureName] = defReducer;\n            reducers[measureName] = defaultReducerName;\n        }\n    });\n    return retObj;\n}\n\n/**\n * main function which perform the group-by operations which reduce the measures value is the\n * fields are common according to the reducer function provided\n * @param  {DataModel} dataModel the dataModel to worked\n * @param  {Array} fieldArr  fields according to which the groupby should be worked\n * @param  {Object|Function} reducers  reducers function\n * @param {DataModel} existingDataModel Existing datamodel instance\n * @return {DataModel} new dataModel with the group by\n */\nfunction groupBy (dataModel, fieldArr, reducers, existingDataModel) {\n    const sFieldArr = getFieldArr(dataModel, fieldArr);\n    const reducerObj = getReducerObj(dataModel, reducers);\n    const fieldStore = dataModel.getFieldspace();\n    const fieldStoreObj = fieldStore.fieldsObj();\n    const dbName = fieldStore.name;\n    const dimensionArr = [];\n    const measureArr = [];\n    const schema = [];\n    const hashMap = {};\n    const data = [];\n    let newDataModel;\n\n    // Prepare the schema\n    Object.entries(fieldStoreObj).forEach(([key, value]) => {\n        if (sFieldArr.indexOf(key) !== -1 || reducerObj[key]) {\n            schema.push(extend2({}, value.schema()));\n\n            switch (value.schema().type) {\n            case FieldType.MEASURE:\n                measureArr.push(key);\n                break;\n            default:\n            case FieldType.DIMENSION:\n                dimensionArr.push(key);\n            }\n        }\n    });\n    // Prepare the data\n    let rowCount = 0;\n    rowDiffsetIterator(dataModel._rowDiffset, (i) => {\n        let hash = '';\n        dimensionArr.forEach((_) => {\n            hash = `${hash}-${fieldStoreObj[_].partialField.data[i]}`;\n        });\n        if (hashMap[hash] === undefined) {\n            hashMap[hash] = rowCount;\n            data.push({});\n            dimensionArr.forEach((_) => {\n                data[rowCount][_] = fieldStoreObj[_].partialField.data[i];\n            });\n            measureArr.forEach((_) => {\n                data[rowCount][_] = [fieldStoreObj[_].partialField.data[i]];\n            });\n            rowCount += 1;\n        } else {\n            measureArr.forEach((_) => {\n                data[hashMap[hash]][_].push(fieldStoreObj[_].partialField.data[i]);\n            });\n        }\n    });\n\n    // reduction\n    let cachedStore = {};\n    let cloneProvider = () => dataModel.detachedRoot();\n    data.forEach((row) => {\n        const tuple = row;\n        measureArr.forEach((_) => {\n            tuple[_] = reducerObj[_](row[_], cloneProvider, cachedStore);\n        });\n    });\n    if (existingDataModel) {\n        existingDataModel.__calculateFieldspace();\n        newDataModel = existingDataModel;\n    }\n    else {\n        newDataModel = new DataModel(data, schema, { name: dbName });\n    }\n    return newDataModel;\n}\n\nexport { groupBy, getFieldArr, getReducerObj };\n","import { rowDiffsetIterator } from './row-diffset-iterator';\nimport InvalidAwareTypes from '../invalid-aware-types';\n\nconst generateBuckets = (binSize, start, end) => {\n    const buckets = [];\n    let next = start;\n\n    while (next < end) {\n        buckets.push(next);\n        next += binSize;\n    }\n    buckets.push(next);\n\n    return buckets;\n};\n\nconst findBucketRange = (bucketRanges, value) => {\n    let leftIdx = 0;\n    let rightIdx = bucketRanges.length - 1;\n    let midIdx;\n    let range;\n\n    // Here use binary search as the bucketRanges is a sorted array\n    while (leftIdx <= rightIdx) {\n        midIdx = leftIdx + Math.floor((rightIdx - leftIdx) / 2);\n        range = bucketRanges[midIdx];\n\n        if (value >= range.start && value < range.end) {\n            return range;\n        } else if (value >= range.end) {\n            leftIdx = midIdx + 1;\n        } else if (value < range.start) {\n            rightIdx = midIdx - 1;\n        }\n    }\n\n    return null;\n};\n\n /**\n  * Creates the bin data from input measure field and supplied configs.\n  *\n  * @param {Measure} measureField - The Measure field instance.\n  * @param {string} rowDiffset - The datamodel rowDiffset values.\n  * @param {Object} config - The config object.\n  * @return {Object} Returns the binned data and the corresponding bins.\n  */\nexport function createBinnedFieldData (measureField, rowDiffset, config) {\n    let { buckets, binsCount, binSize, start, end } = config;\n    const [dMin, dMax] = measureField.domain();\n\n    if (!buckets) {\n        start = (start !== 0 && (!start || start > dMin)) ? dMin : start;\n        end = (end !== 0 && (!end || end < dMax)) ? (dMax + 1) : end;\n\n        if (binsCount) {\n            binSize = Math.ceil(Math.abs(end - start) / binsCount);\n        }\n\n        buckets = generateBuckets(binSize, start, end);\n    }\n\n    if (buckets[0] > dMin) {\n        buckets.unshift(dMin);\n    }\n    if (buckets[buckets.length - 1] <= dMax) {\n        buckets.push(dMax + 1);\n    }\n\n    const bucketRanges = [];\n    for (let i = 0; i < buckets.length - 1; i++) {\n        bucketRanges.push({\n            start: buckets[i],\n            end: buckets[i + 1]\n        });\n    }\n\n    const binnedData = [];\n    rowDiffsetIterator(rowDiffset, (i) => {\n        const datum = measureField.partialField.data[i];\n        if (datum instanceof InvalidAwareTypes) {\n            binnedData.push(datum);\n            return;\n        }\n\n        const range = findBucketRange(bucketRanges, datum);\n        binnedData.push(`${range.start}-${range.end}`);\n    });\n\n    return { binnedData, bins: buckets };\n}\n","import { fnList } from '../operator/group-by-function';\n\nexport const { sum, avg, min, max, first, last, count, std: sd } = fnList;\n","import DataModel from './datamodel';\nimport {\n  compose,\n  bin,\n  select,\n  project,\n  groupby as groupBy,\n  calculateVariable,\n  sort,\n  crossProduct,\n  difference,\n  naturalJoin,\n  leftOuterJoin,\n  rightOuterJoin,\n  fullOuterJoin,\n  union\n} from './operator';\nimport * as Stats from './stats';\nimport * as enums from './enums';\nimport { DateTimeFormatter } from './utils';\nimport { DataFormat, FilteringMode, DM_DERIVATIVES } from './constants';\nimport InvalidAwareTypes from './invalid-aware-types';\nimport pkg from '../package.json';\n\nconst Operators = {\n    compose,\n    bin,\n    select,\n    project,\n    groupBy,\n    calculateVariable,\n    sort,\n    crossProduct,\n    difference,\n    naturalJoin,\n    leftOuterJoin,\n    rightOuterJoin,\n    fullOuterJoin,\n    union\n};\n\nconst version = pkg.version;\nObject.assign(DataModel, {\n    Operators,\n    Stats,\n    DM_DERIVATIVES,\n    DateTimeFormatter,\n    DataFormat,\n    FilteringMode,\n    InvalidAwareTypes,\n    version\n}, enums);\n\nexport default DataModel;\n","import { persistDerivations } from '../helper';\nimport { DM_DERIVATIVES } from '../constants';\n\n/**\n * DataModel's opearators are exposed as composable functional operators as well as chainable operators. Chainable\n * operators are called on the instances of {@link Datamodel} and {@link Relation} class.\n *\n * Those same operators can be used as composable operators from `DataModel.Operators` namespace.\n *\n * All these operators have similar behaviour. All these operators when called with the argument returns a function\n * which expects a DataModel instance.\n *\n * @public\n * @module Operators\n * @namespace DataModel\n */\n\n/**\n * This is functional version of selection operator. {@link link_to_selection | Selection} is a row filtering operation.\n * It takes {@link SelectionPredicate | predicate} for filtering criteria and returns a function.\n * The returned function is called with the DataModel instance on which the action needs to be performed.\n *\n * {@link SelectionPredicate} is a function which returns a boolean value. For selection opearation the selection\n * function is called for each row of DataModel instance with the current row passed as argument.\n *\n * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n * of rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * [Warn] Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * [Error] `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @example\n * const select = DataModel.Operators.select;\n * usaCarsFn = select(fields => fields.Origin.value === 'USA');\n * usaCarsDm = usaCarsFn(dm);\n * console.log(usaCarsDm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {SelectionPredicate} selectFn - Predicate funciton which is called for each row with the current row\n *      ```\n *          function (row, i)  { ... }\n *      ```\n * @param {Object} [config] - The configuration object to control the inclusion exclusion of a row in resultant\n *      DataModel instance\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const select = (...args) => dm => dm.select(...args);\n\n/**\n * This is functional version of projection operator. {@link link_to_projection | Projection} is a column filtering\n * operation.It expects list of fields name and either include those or exclude those based on {@link FilteringMode} on\n * the  resultant variable.It returns a function which is called with the DataModel instance on which the action needs\n * to be performed.\n *\n * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n * @param {Object} [config] - An optional config to control the creation of new DataModel\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const project = (...args) => dm => dm.project(...args);\n\n/**\n * This is functional version of binnig operator. Binning happens on a measure field based on a binning configuration.\n * Binning in DataModel does not aggregate the number of rows present in DataModel instance after binning, it just adds\n * a new field with the binned value. Refer binning {@link example_of_binning | example} to have a intuition of what\n * binning is and the use case.\n *\n * Binning can be configured by\n * - providing custom bin configuration with non uniform buckets\n * - providing bin count\n * - providing each bin size\n *\n * When custom buckets are provided as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const buckets = {\n *      start: 30\n *      stops: [80, 100, 110]\n *  };\n *  const config = { buckets, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(dm);\n *\n * @text\n * When `binCount` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binCount: 5, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @text\n * When `binSize` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binSize: 200, name: 'binnedHorsepower' }\n *  const binnedDm = dataModel.bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {String} name Name of measure which will be used to create bin\n * @param {Object} config Config required for bin creation\n * @param {Array.<Number>} config.bucketObj.stops Defination of bucket ranges. Two subsequent number from arrays\n *      are picked and a range is created. The first number from range is inclusive and the second number from range\n *      is exclusive.\n * @param {Number} [config.bucketObj.startAt] Force the start of the bin from a particular number.\n *      If not mentioned, the start of the bin or the lower domain of the data if stops is not mentioned, else its\n *      the first value of the stop.\n * @param {Number} config.binSize Bucket size for each bin\n * @param {Number} config.binCount Number of bins which will be created\n * @param {String} config.name Name of the new binned field to be created\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const bin = (...args) => dm => dm.bin(...args);\n\n/**\n * This is functional version of `groupBy` operator.Groups the data using particular dimensions and by reducing\n * measures. It expects a list of dimensions using which it projects the datamodel and perform aggregations to reduce\n * the duplicate tuples. Refer this {@link link_to_one_example_with_group_by | document} to know the intuition behind\n * groupBy.\n *\n * DataModel by default provides definition of few {@link reducer | Reducers}.\n * {@link ReducerStore | User defined reducers} can also be registered.\n *\n * This is the chained implementation of `groupBy`.\n * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n *\n * @example\n * const groupBy = DataModel.Operators.groupBy;\n * const groupedFn = groupBy(['Year'], { horsepower: 'max' } );\n * groupedDM = groupByFn(dm);\n *\n * @public\n *\n * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n *      schema of the variable.\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const groupBy = (...args) => dm => dm.groupBy(...args);\n\n/**\n * Enables composing operators to run multiple operations and save group of operataion as named opration on a DataModel.\n * The resulting DataModel will be the result of all the operation provided. The operations provided will be executed in\n * a serial manner ie. result of one operation will be the input for the next operations (like pipe operator in unix).\n *\n * Suported operations in compose are\n * - `select`\n * - `project`\n * - `groupBy`\n * - `bin`\n * - `compose`\n *\n * @example\n * const compose = DataModel.Operators.compose;\n * const select = DataModel.Operators.select;\n * const project = DataModel.Operators.project;\n *\n * let composedFn = compose(\n *    select(fields => fields.netprofit.value <= 15),\n *    project(['netprofit', 'netsales']));\n *\n * const dataModel = new DataModel(data1, schema1);\n *\n * let composedDm = composedFn(dataModel);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<Operators>} operators: An array of operation that will be applied on the\n * datatable.\n *\n * @returns {DataModel} Instance of resultant DataModel\n */\nexport const compose = (...operations) =>\n    (dm, config = { saveChild: true }) => {\n        let currentDM = dm;\n        let firstChild;\n        const derivations = [];\n\n        operations.forEach((operation) => {\n            currentDM = operation(currentDM);\n            derivations.push(...currentDM._derivation);\n            if (!firstChild) {\n                firstChild = currentDM;\n            }\n        });\n\n        if (firstChild && firstChild !== currentDM) {\n            firstChild.dispose();\n        }\n\n        // reset all ancestorDerivation saved in-between compose\n        currentDM._ancestorDerivation = [];\n        persistDerivations(\n            dm,\n            currentDM,\n            DM_DERIVATIVES.COMPOSE,\n            null,\n            derivations\n        );\n\n        if (config.saveChild) {\n            currentDM.setParent(dm);\n        } else {\n            currentDM.setParent(null);\n        }\n\n        return currentDM;\n    };\n","/**\n * Wrapper on calculateVariable() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const calculateVariable = (...args) => dm => dm.calculateVariable(...args);\n\n/**\n * Wrapper on sort() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const sort = (...args) => dm => dm.sort(...args);\n","import { crossProduct } from './cross-product';\nimport { naturalJoinFilter } from './natural-join-filter-function';\n\nexport function naturalJoin (dataModel1, dataModel2) {\n    return crossProduct(dataModel1, dataModel2, naturalJoinFilter(dataModel1, dataModel2), true);\n}\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar _containerManager = require('./container-manager');\n\nvar _containerManager2 = _interopRequireDefault(_containerManager);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    M = slLib.win.Math,\n    max = M.max,\n    round = M.round,\n    BLANK = '',\n    htmlSplCharSpace = { ' ': '&nbsp;' },\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\n/*\n * Create new instance of SmartLabelManager.\n *\n * SmartLabelManager controls the lifetime of the execution space where the text's metrics will be calculated.\n * This takes a string for a given style and returns the height, width.\n * If a bound box is defined it wraps the text and returns the wrapped height and width.\n * It allows to append ellipsis at the end if the text is truncated.\n *\n * @param {String | Number} id - Id of the instance. If the same id is passed, it disposes the old instance and\n *                              save the new one;\n * @param {String | HTMLElement} container - The id or the instance of the container where the intermediate dom\n *                              elements are to be attached. If not passed, it appends in div\n *\n * @param {Boolean} useEllipses - This decides if a ellipses to be appended if the text is truncated.\n * @param {Object} options - Control options\n *                          {\n *                              maxCacheLimit: No of letter to be cached. Default: 500.\n *                          }\n * @constructor\n */\nfunction SmartLabelManager(id, container, useEllipses, options) {\n    var wrapper,\n        prop,\n        max,\n        prevInstance,\n        isBrowserLess = false,\n        store = SmartLabelManager.store;\n\n    if (typeof id === 'undefined' || typeof id === 'object') {\n        return;\n    }\n\n    if (prevInstance = store[id]) {\n        prevInstance.dispose();\n    }\n\n    store[id] = this;\n    options = options || {};\n    options.maxCacheLimit = isFinite(max = options.maxCacheLimit) ? max : slLib.maxDefaultCacheLimit;\n\n    if (typeof container === 'string') {\n        container = doc.getElementById(container);\n    }\n\n    wrapper = slLib.createContainer(container);\n    wrapper.innerHTML = slLib.testStrAvg;\n\n    if (documentSupport.isHeadLess || !documentSupport.isIE && !wrapper.offsetHeight && !wrapper.offsetWidth) {\n        isBrowserLess = true;\n    }\n\n    wrapper.innerHTML = '';\n    for (prop in slLib.parentContainerStyle) {\n        wrapper.style[prop] = slLib.parentContainerStyle[prop];\n    }\n\n    this.id = id;\n    this.parentContainer = wrapper;\n\n    this._containerManager = new _containerManager2['default'](wrapper, isBrowserLess, 10);\n    this._showNoEllipses = !useEllipses;\n    this._init = true;\n    this.style = {};\n    this.options = options;\n\n    this.setStyle();\n}\n\n/*\n * getSmartText returns the text separated by <br/> whenever a break is necessary. This is to recgonize one\n * generalized format independent of the implementation (canvas based solution, svg based solution). This method\n * converts the output of getSmartText().text to array of lines if the text is wrapped. It sets a named property\n * `lines` on the object passed as parameter.\n *\n * @param {Object} smartlabel - the object returned by getSmartText based on which line arr which to be formed.\n *\n * @return {Object} - The same object which was passed in the arguments. Also a named property `lines` is set.\n */\nSmartLabelManager.textToLines = function (smartlabel) {\n    smartlabel = smartlabel || {};\n\n    if (!smartlabel.text) {\n        smartlabel.text = '';\n    } else if (typeof smartlabel.text !== 'string') {\n        smartlabel.text = smartlabel.text.toString();\n    }\n\n    smartlabel.lines = smartlabel.text.split(/\\n|<br\\s*?\\/?>/ig);\n    return smartlabel;\n};\n\n// Saves all the instance created so far\nSmartLabelManager.store = {};\n\n// Calculates space taken by a character with an approximation value which is calculated by repeating the\n// character by string length times.\nSmartLabelManager.prototype._calCharDimWithCache = function (text, calculateDifference, length) {\n    if (!this._init) {\n        return false;\n    }\n\n    var size,\n        csArr,\n        tw,\n        twi,\n        cachedStyle,\n        asymmetricDifference,\n        maxAdvancedCacheLimit = this.options.maxCacheLimit,\n        container = this._container,\n        style = this.style || {},\n        cache = this._advancedCache || (this._advancedCache = {}),\n        advancedCacheKey = this._advancedCacheKey || (this._advancedCacheKey = []),\n        cacheName = text + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK),\n        cacheInitName = text + 'init' + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK);\n\n    htmlSplCharSpace[text] && (text = htmlSplCharSpace[text]);\n\n    if (!calculateDifference) {\n        asymmetricDifference = 0;\n    } else {\n        if ((asymmetricDifference = cache[cacheInitName]) === undefined) {\n            container.innerHTML = text.repeat ? text.repeat(length) : Array(length + 1).join(text); // jshint ignore:line\n            tw = container.offsetWidth;\n\n            container.innerHTML = text;\n            twi = container.offsetWidth;\n\n            asymmetricDifference = cache[cacheInitName] = (tw - length * twi) / (length + 1);\n            advancedCacheKey.push(cacheInitName);\n            if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n                delete cache[advancedCacheKey.shift()];\n            }\n        }\n    }\n\n    if (cachedStyle = cache[cacheName]) {\n        csArr = cachedStyle.split(',');\n        return {\n            width: parseFloat(csArr[0], 10),\n            height: parseFloat(csArr[1], 10)\n        };\n    }\n\n    container.innerHTML = text;\n\n    size = {\n        height: container.offsetHeight,\n        width: container.offsetWidth + asymmetricDifference\n    };\n\n    cache[cacheName] = size.width + ',' + size.height;\n    advancedCacheKey.push(cacheName);\n    if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n        delete cache[advancedCacheKey.shift()];\n    }\n\n    return size;\n};\n\n// Provide function to calculate the height and width based on the environment and available support from dom.\nSmartLabelManager.prototype._getWidthFn = function () {\n    var contObj = this._containerObj,\n        container = this._container,\n        svgText = contObj.svgText;\n\n    if (svgText) {\n        return function (str) {\n            var bbox, width;\n\n            svgText.textContent = str;\n            bbox = svgText.getBBox();\n            width = bbox.width - SVG_BBOX_CORRECTION;\n            if (width < 1) {\n                width = bbox.width;\n            }\n\n            return width;\n        };\n    } else {\n        return function (str) {\n            container.innerHTML = str;\n            return container.offsetWidth;\n        };\n    }\n};\n\n/*\n * Sets the style based on which the text's metrics to be calculated.\n *\n * @param {Object} style - The style object which affects the text size\n *                      {\n *                          fontSize / 'font-size' : MUST BE FOLLOWED BY PX (10px, 11px)\n *                          fontFamily / 'font-family'\n *                          fontWeight / 'font-weight'\n *                          fontStyle / 'font-style'\n *                      }\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.setStyle = function (style) {\n    if (!this._init) {\n        return this;\n    }\n\n    var sCont;\n\n    if (style === this.style && !this._styleNotSet) {\n        return;\n    }\n\n    if (!style) {\n        style = this.style;\n    }\n\n    slLib.setLineHeight(style);\n    this.style = style;\n\n    this._containerObj = sCont = this._containerManager.get(style);\n\n    if (this._containerObj) {\n        this._container = sCont.node;\n        this._context = sCont.context;\n        this._cache = sCont.charCache;\n        this._lineHeight = sCont.lineHeight;\n        this._styleNotSet = false;\n    } else {\n        this._styleNotSet = true;\n    }\n\n    return this;\n};\n\n/*\n * Decides whether ellipses to be shown if the node is truncated\n *\n * @param {Boolean} useEllipses - decides if a ellipses to be appended if the text is truncated. Default: false\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.useEllipsesOnOverflow = function (useEllipses) {\n    if (!this._init) {\n        return this;\n    }\n    this._showNoEllipses = !useEllipses;\n    return this;\n};\n\n/*\n * Get wrapped or truncated text if a bound box is defined around it. The result text would be separated by <br/>\n * if wrapped\n *\n * @param {String} text - the subject text\n * @param {Number} maxWidth - width in px of the the bound box\n * @param {Number} maxHeight - height in px of the the bound box\n * @param {Boolean} noWrap - whether the text to be wrapped. Default false.\n *\n * @return {Object} - The metrics of the text bounded by the box\n *                  {\n *                      height : height of the wrapped text\n *                      width : width of the wrapped text\n *                      isTruncated : whether the text is truncated\n *                      maxHeight : Maximum height given\n *                      maxWidth : Maximum width given\n *                      oriText : Original text sent\n *                      oriTextHeight : Original text height\n *                      oriTextWidth : Original text width\n *                      text : SMART TEXT\n *                  }\n */\nSmartLabelManager.prototype.getSmartText = function (text, maxWidth, maxHeight, noWrap) {\n    if (!this._init) {\n        return false;\n    }\n\n    if (text === undefined || text === null) {\n        text = '';\n    } else if (typeof text !== 'string') {\n        text = text.toString();\n    }\n\n    var len,\n        trimStr,\n        tempArr,\n        tmpText,\n        maxWidthWithEll,\n        toolText,\n        oriWidth,\n        oriHeight,\n        newCharIndex,\n        nearestChar,\n        tempChar,\n        getWidth,\n        initialLeft,\n        initialTop,\n        getOriSizeImproveObj,\n        spanArr,\n        x,\n        y,\n        minWidth,\n        elem,\n        chr,\n        elemRightMostPoint,\n        elemLowestPoint,\n        lastBR,\n        removeFromIndex,\n        removeFromIndexForEllipses,\n        hasHTMLTag = false,\n        maxStrWidth = 0,\n        lastDash = -1,\n        lastSpace = -1,\n        lastIndexBroken = -1,\n        strWidth = 0,\n        strHeight = 0,\n        oriTextArr = [],\n        i = 0,\n        ellipsesStr = this._showNoEllipses ? '' : '...',\n        lineHeight = this._lineHeight,\n        context = this._context,\n        container = this._container,\n        sCont = this._containerObj,\n        ellipsesWidth = sCont.ellipsesWidth,\n        dotWidth = sCont.dotWidth,\n        characterArr = [],\n        dashIndex = -1,\n        spaceIndex = -1,\n        lastLineBreak = -1,\n        fastTrim = function fastTrim(str) {\n        str = str.replace(/^\\s\\s*/, '');\n        var ws = /\\s/,\n            i = str.length;\n        while (ws.test(str.charAt(i -= 1))) {/* jshint noempty:false */}\n        return str.slice(0, i + 1);\n    },\n        smartLabel = {\n        text: text,\n        maxWidth: maxWidth,\n        maxHeight: maxHeight,\n        width: null,\n        height: null,\n        oriTextWidth: null,\n        oriTextHeight: null,\n        oriText: text,\n        isTruncated: false\n    };\n\n    getWidth = this._getWidthFn();\n\n    // In some browsers, offsetheight of a single-line text is getting little (1 px) heigher value of the\n    // lineheight. As a result, smartLabel is unable to return single-line text.\n    // To fix this, increase the maxHeight a little amount. Hence maxHeight =  lineHeight * 1.2\n    if (maxHeight === lineHeight) {\n        maxHeight *= 1.2;\n    }\n\n    if (container) {\n        if (!documentSupport.isBrowserLess) {\n            hasHTMLTag = slLib.xmlTagRegEx.test(text);\n            if (!hasHTMLTag) {\n                // Due to support of <,> for xml we convert &lt;, &gt; to <,> respectively so to get the correct\n                // width it is required to convert the same before calculation for the new improve version of the\n                // get text width.\n                tmpText = text.replace(slLib.ltgtRegex, function (match) {\n                    return match === '&lt;' ? '<' : '>';\n                });\n                getOriSizeImproveObj = this.getOriSize(tmpText, true);\n\n                smartLabel.oriTextWidth = oriWidth = getOriSizeImproveObj.width;\n                smartLabel.oriTextHeight = oriHeight = getOriSizeImproveObj.height;\n            } else {\n                container.innerHTML = text;\n                smartLabel.oriTextWidth = oriWidth = container.offsetWidth;\n                smartLabel.oriTextHeight = oriHeight = container.offsetHeight;\n            }\n\n            if (oriHeight <= maxHeight && oriWidth <= maxWidth) {\n                smartLabel.width = smartLabel.oriTextWidth = oriWidth;\n                smartLabel.height = smartLabel.oriTextHeight = oriHeight;\n                return smartLabel;\n            }\n\n            if (lineHeight > maxHeight) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = 0;\n                smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            }\n        }\n\n        // Calculate width with ellipses\n        text = fastTrim(text).replace(/(\\s+)/g, ' ');\n        maxWidthWithEll = this._showNoEllipses ? maxWidth : maxWidth - ellipsesWidth;\n\n        if (!hasHTMLTag) {\n            oriTextArr = text.split('');\n            len = oriTextArr.length;\n            trimStr = '', tempArr = [];\n            tempChar = oriTextArr[0];\n\n            if (this._cache[tempChar]) {\n                minWidth = this._cache[tempChar].width;\n            } else {\n                minWidth = getWidth(tempChar);\n                this._cache[tempChar] = { width: minWidth };\n            }\n\n            if (maxWidthWithEll > minWidth) {\n                tempArr = text.substr(0, slLib.getNearestBreakIndex(text, maxWidthWithEll, this)).split('');\n                i = tempArr.length;\n            } else if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            } else if (ellipsesStr) {\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            strWidth = getWidth(tempArr.join(''));\n            strHeight = this._lineHeight;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                            smartLabel.tooltext = smartLabel.oriText;\n                            smartLabel.width = getWidth(smartLabel.text);\n                            smartLabel.height = this._lineHeight;\n                            return smartLabel;\n                        }\n                    }\n                }\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = strWidth;\n                smartLabel.height = this._lineHeight;\n                return smartLabel;\n            } else {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (tempChar === ' ' && !context) {\n                        tempChar = '&nbsp;';\n                    }\n\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            /** @todo use regular expressions for better performance. */\n                            lastSpace = text.substr(0, tempArr.length).lastIndexOf(' ');\n                            lastDash = text.substr(0, tempArr.length).lastIndexOf('-');\n                            if (lastSpace > lastIndexBroken) {\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                tempArr.splice(lastSpace, 1, '<br/>');\n                                lastIndexBroken = lastSpace;\n                                newCharIndex = lastSpace + 1;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === tempArr.length - 1) {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '<br/>-');\n                                } else {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '-<br/>');\n                                }\n                                lastIndexBroken = lastDash;\n                                newCharIndex = lastDash + 1;\n                            } else {\n                                tempArr.splice(tempArr.length - 1, 1, '<br/>' + oriTextArr[i]);\n                                lastLineBreak = tempArr.length - 2;\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastLineBreak + 1).join(''));\n                                lastIndexBroken = lastLineBreak;\n                                newCharIndex = i;\n                            }\n                            strHeight += this._lineHeight;\n                            if (strHeight > maxHeight) {\n                                smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                                smartLabel.tooltext = smartLabel.oriText;\n                                // The max width among all the lines will be the width of the string.\n                                smartLabel.width = maxWidth;\n                                smartLabel.height = strHeight - this._lineHeight;\n                                return smartLabel;\n                            } else {\n                                maxStrWidth = max(maxStrWidth, strWidth);\n                                trimStr = null;\n                                nearestChar = slLib.getNearestBreakIndex(text.substr(newCharIndex), maxWidthWithEll, this);\n                                strWidth = getWidth(text.substr(newCharIndex, nearestChar || 1));\n                                if (tempArr.length < newCharIndex + nearestChar) {\n                                    tempArr = tempArr.concat(text.substr(tempArr.length, newCharIndex + nearestChar - tempArr.length).split(''));\n                                    i = tempArr.length - 1;\n                                }\n                            }\n                        }\n                    }\n                }\n\n                maxStrWidth = max(maxStrWidth, strWidth);\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = maxStrWidth;\n                smartLabel.height = strHeight;\n                return smartLabel;\n            }\n        } else {\n            toolText = text.replace(slLib.spanAdditionRegx, '$2');\n            text = text.replace(slLib.spanAdditionRegx, slLib.spanAdditionReplacer);\n            text = text.replace(/(<br\\s*\\/*\\>)/g, '<span class=\"' + [slLib.classNameWithTag, ' ', slLib.classNameWithTagBR].join('') + '\">$1</span>');\n\n            container.innerHTML = text;\n\n            spanArr = container[documentSupport.childRetriverFn](documentSupport.childRetriverString);\n\n            for (x = 0, y = spanArr.length; x < y; x += 1) {\n                elem = spanArr[x];\n                //chech whether this span is temporary inserted span from it's class\n                if (documentSupport.noClassTesting || slLib.classNameReg.test(elem.className)) {\n                    chr = elem.innerHTML;\n                    if (chr !== '') {\n                        if (chr === ' ') {\n                            spaceIndex = characterArr.length;\n                        } else if (chr === '-') {\n                            dashIndex = characterArr.length;\n                        }\n\n                        characterArr.push({\n                            spaceIdx: spaceIndex,\n                            dashIdx: dashIndex,\n                            elem: elem\n                        });\n                        oriTextArr.push(chr);\n                    }\n                }\n            }\n\n            i = 0;\n            len = characterArr.length;\n            minWidth = characterArr[0].elem.offsetWidth;\n\n            if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n\n                return smartLabel;\n            } else if (minWidth > maxWidthWithEll && !this._showNoEllipses) {\n\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            initialLeft = characterArr[0].elem.offsetLeft;\n            initialTop = characterArr[0].elem.offsetTop;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n                        if (container.offsetWidth > maxWidth) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            } else {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemLowestPoint = elem.offsetHeight + (elem.offsetTop - initialTop);\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    lastBR = null;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n\n                        if (elemRightMostPoint > maxWidth) {\n                            lastSpace = characterArr[i].spaceIdx;\n                            lastDash = characterArr[i].dashIdx;\n                            if (lastSpace > lastIndexBroken) {\n                                characterArr[lastSpace].elem.innerHTML = '<br/>';\n                                lastIndexBroken = lastSpace;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === i) {\n                                    // in case the overflowing character itself is the '-'\n                                    characterArr[lastDash].elem.innerHTML = '<br/>-';\n                                } else {\n                                    characterArr[lastDash].elem.innerHTML = '-<br/>';\n                                }\n                                lastIndexBroken = lastDash;\n                            } else {\n                                elem.parentNode.insertBefore(lastBR = doc.createElement('br'), elem);\n                            }\n\n                            //check whether this break made current element outside the area height\n                            if (elem.offsetHeight + elem.offsetTop > maxHeight) {\n                                //remove the lastly inserted line break\n                                if (lastBR) {\n                                    lastBR.parentNode.removeChild(lastBR);\n                                } else if (lastIndexBroken === lastDash) {\n                                    characterArr[lastDash].elem.innerHTML = '-';\n                                } else {\n                                    characterArr[lastSpace].elem.innerHTML = ' ';\n                                }\n                                removeFromIndex = i;\n                                //break the looping condition\n                                i = len;\n                            } else {\n                                removeFromIndexForEllipses = null;\n                            }\n                        }\n                    } else {\n                        //check whether this break made current element outside the area height\n                        if (elemLowestPoint > maxHeight) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            }\n\n            if (removeFromIndex < len) {\n                //set the trancated property of the smartlabel\n                smartLabel.isTruncated = true;\n\n                /** @todo is this really needed? */\n                removeFromIndexForEllipses = removeFromIndexForEllipses ? removeFromIndexForEllipses : removeFromIndex;\n\n                for (i = len - 1; i >= removeFromIndexForEllipses; i -= 1) {\n                    elem = characterArr[i].elem;\n                    //chech whether this span is temporary inserted span from it's class\n                    elem.parentNode.removeChild(elem);\n                }\n\n                for (; i >= 0; i -= 1) {\n                    elem = characterArr[i].elem;\n                    if (slLib.classNameBrReg.test(elem.className)) {\n                        //chech whether this span is temporary inserted span from it's class\n                        elem.parentNode.removeChild(elem);\n                    } else {\n                        i = 0;\n                    }\n                }\n            }\n\n            //get the smart text\n            smartLabel.text = container.innerHTML.replace(slLib.spanRemovalRegx, '$1').replace(/\\&amp\\;/g, '&');\n            if (smartLabel.isTruncated) {\n                smartLabel.text += ellipsesStr;\n                smartLabel.tooltext = toolText;\n            }\n        }\n\n        smartLabel.height = container.offsetHeight;\n        smartLabel.width = container.offsetWidth;\n\n        return smartLabel;\n    } else {\n        smartLabel.error = new Error('Body Tag Missing!');\n        return smartLabel;\n    }\n};\n\n/*\n * Get the height and width of a text.\n *\n * @param {String} text - Text whose metrics to be measured\n * @param {Boolean} Optional detailedCalculationFlag - this flag if set it calculates per letter position\n *                          information and returns it. Ideally you dont need it unless you want to post process the\n *                          string. And its an EXPENSIVE OPERATION.\n *\n * @return {Object} - If detailedCalculationFlag is set to true the returned object would be\n *                  {\n *                      height: height of the text\n *                      width: width of the text\n *                      detailObj: detail calculation of letters in the format {lettername: width}\n *                  }\n *                  If detailedCalculationFlag is set to false the returned object wont have the detailObj prop.\n */\nSmartLabelManager.prototype.getOriSize = function (text, detailedCalculationFlag) {\n    if (!this._init) {\n        return false;\n    }\n\n    var textArr,\n        letter,\n        lSize,\n        i,\n        l,\n        cumulativeSize = 0,\n        height = 0,\n        indiSizeStore = {};\n\n    if (!detailedCalculationFlag) {\n        return this._calCharDimWithCache(text);\n    }\n\n    // Calculate the width of every letter with an approximation\n    textArr = text.split('');\n    for (i = 0, l = textArr.length; i < l; i++) {\n        letter = textArr[i];\n        lSize = this._calCharDimWithCache(letter, true, textArr.length);\n        height = max(height, lSize.height);\n        cumulativeSize += lSize.width;\n        indiSizeStore[letter] = lSize.width;\n    }\n\n    return {\n        width: round(cumulativeSize),\n        height: height,\n        detailObj: indiSizeStore\n    };\n};\n\n/*\n * Dispose the container and object allocated by the smartlabel\n */\nSmartLabelManager.prototype.dispose = function () {\n    if (!this._init) {\n        return this;\n    }\n\n    this._containerManager && this._containerManager.dispose && this._containerManager.dispose();\n\n    delete this._container;\n    delete this._context;\n    delete this._cache;\n    delete this._containerManager;\n    delete this._containerObj;\n    delete this.id;\n    delete this.style;\n    delete this.parentContainer;\n    delete this._showNoEllipses;\n\n    return this;\n};\n\nexports['default'] = SmartLabelManager;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\nvar lib = {\n\tinit: function init(win) {\n\t\tvar doc = win.document,\n\t\t    nav = win.navigator,\n\t\t    userAgent = nav.userAgent,\n\t\t    DIV = 'DIV',\n\t\t    ceil = Math.ceil,\n\t\t    floor = Math.floor,\n\t\t    containerInstanceCount = 0,\n\t\t    clsNameSpace = 'fusioncharts-smartlabel-',\n\t\t    containerClass = clsNameSpace + 'container',\n\t\t    classNameWithTag = clsNameSpace + 'tag',\n\t\t    classNameWithTagBR = clsNameSpace + 'br';\n\n\t\tlib = {\n\t\t\twin: win,\n\n\t\t\tcontainerClass: containerClass,\n\n\t\t\tclassNameWithTag: classNameWithTag,\n\n\t\t\tclassNameWithTagBR: classNameWithTagBR,\n\n\t\t\tmaxDefaultCacheLimit: 500,\n\n\t\t\tclassNameReg: new RegExp('\\b' + classNameWithTag + '\\b'),\n\n\t\t\tclassNameBrReg: new RegExp('\\b' + classNameWithTagBR + '\\b'),\n\n\t\t\tspanAdditionRegx: /(<[^<\\>]+?\\>)|(&(?:[a-z]+|#[0-9]+);|.)/ig,\n\n\t\t\tspanAdditionReplacer: '$1<span class=\"' + classNameWithTag + '\">$2</span>',\n\n\t\t\tspanRemovalRegx: new RegExp('\\\\<span[^\\\\>]+?' + classNameWithTag + '[^\\\\>]{0,}\\\\>(.*?)\\\\<\\\\/span\\\\>', 'ig'),\n\n\t\t\txmlTagRegEx: new RegExp('<[^>][^<]*[^>]+>', 'i'),\n\n\t\t\tltgtRegex: /&lt;|&gt;/g,\n\n\t\t\tbrReplaceRegex: /<br\\/>/ig,\n\n\t\t\ttestStrAvg: 'WgI',\n\n\t\t\t// This style is applied over the parent smartlabel container. The container is kept hidden from the viewport\n\t\t\tparentContainerStyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: '-9999em',\n\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\tpadding: '0px',\n\t\t\t\twidth: '1px',\n\t\t\t\theight: '1px',\n\t\t\t\toverflow: 'hidden'\n\t\t\t},\n\n\t\t\t// All the style which might affect the text metrics\n\t\t\tsupportedStyle: {\n\t\t\t\tfont: 'font',\n\t\t\t\tfontFamily: 'font-family',\n\t\t\t\t'font-family': 'font-family',\n\t\t\t\tfontWeight: 'font-weight',\n\t\t\t\t'font-weight': 'font-weight',\n\t\t\t\tfontSize: 'font-size',\n\t\t\t\t'font-size': 'font-size',\n\t\t\t\tlineHeight: 'line-height',\n\t\t\t\t'line-height': 'line-height',\n\t\t\t\tfontStyle: 'font-style',\n\t\t\t\t'font-style': 'font-style'\n\t\t\t},\n\n\t\t\t// Get the support list for html the document where the text calcution is to be done.\n\t\t\tgetDocumentSupport: function getDocumentSupport() {\n\t\t\t\tvar childRetriverFn, childRetriverString, noClassTesting;\n\n\t\t\t\tif (doc.getElementsByClassName) {\n\t\t\t\t\tchildRetriverFn = 'getElementsByClassName';\n\t\t\t\t\tchildRetriverString = classNameWithTag;\n\t\t\t\t\tnoClassTesting = true;\n\t\t\t\t} else {\n\t\t\t\t\tchildRetriverFn = 'getElementsByTagName';\n\t\t\t\t\tchildRetriverString = 'span';\n\t\t\t\t\tnoClassTesting = false;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tisIE: /msie/i.test(userAgent) && !win.opera,\n\t\t\t\t\thasSVG: Boolean(win.SVGAngle || doc.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1')),\n\t\t\t\t\tisHeadLess: new RegExp(' HtmlUnit').test(userAgent),\n\t\t\t\t\tisWebKit: new RegExp(' AppleWebKit/').test(userAgent),\n\t\t\t\t\tchildRetriverFn: childRetriverFn,\n\t\t\t\t\tchildRetriverString: childRetriverString,\n\t\t\t\t\tnoClassTesting: noClassTesting\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/*\n    * Create a html div element and attach it with a parent. All the subsequent operations are performed\n    * by upding this dom tree only.\n    *\n    * @param {HTMLElement} - The html element where the newly created div is to be attached. If not passed,\n    *                      the new div is appended on the body.\n    */\n\t\t\tcreateContainer: function createContainer(containerParent) {\n\t\t\t\tvar body, container;\n\n\t\t\t\tif (containerParent && (containerParent.offsetWidth || containerParent.offsetHeight)) {\n\t\t\t\t\tif (containerParent.appendChild) {\n\t\t\t\t\t\tcontainerParent.appendChild(container = doc.createElement(DIV));\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbody = doc.getElementsByTagName('body')[0];\n\n\t\t\t\t\tif (body && body.appendChild) {\n\t\t\t\t\t\tcontainer = doc.createElement(DIV);\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\tcontainerInstanceCount += 1;\n\t\t\t\t\t\tbody.appendChild(container);\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Finds a approximate position where the text is to be broken\n\t\t\tgetNearestBreakIndex: function getNearestBreakIndex(text, maxWidth, sl) {\n\t\t\t\tif (!text || !text.length) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tvar difference,\n\t\t\t\t    getWidth = sl._getWidthFn(),\n\t\t\t\t    charLen = 0,\n\t\t\t\t    increment = 0,\n\t\t\t\t    oriWidth = getWidth(text),\n\t\t\t\t    avgWidth = oriWidth / text.length;\n\n\t\t\t\tdifference = maxWidth;\n\t\t\t\tcharLen = ceil(maxWidth / avgWidth);\n\n\t\t\t\tif (oriWidth < maxWidth) {\n\t\t\t\t\treturn text.length - 1;\n\t\t\t\t}\n\n\t\t\t\tif (charLen > text.length) {\n\t\t\t\t\tdifference = maxWidth - oriWidth;\n\t\t\t\t\tcharLen = text.length;\n\t\t\t\t}\n\n\t\t\t\twhile (difference > 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twhile (difference < 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn charLen;\n\t\t\t},\n\n\t\t\t/*\n    * Determine lineheight of a text for a given style. It adds propery lineHeight to the style passed\n    *\n    * @param {Object} - The style based on which the text's metric needs to be calculated. The calculation happens\n    *                  based on fontSize property, if its not present a default font size is assumed.\n    *\n    * @return {Object} - The style that was passed with lineHeight as a named propery set on the object.\n    */\n\t\t\tsetLineHeight: function setLineHeight(styleObj) {\n\t\t\t\tvar fSize = styleObj.fontSize = styleObj.fontSize || '12px';\n\t\t\t\tstyleObj.lineHeight = styleObj.lineHeight || styleObj['line-height'] || parseInt(fSize, 10) * 1.2 + 'px';\n\t\t\t\treturn styleObj;\n\t\t\t}\n\t\t};\n\n\t\treturn lib;\n\t}\n};\n\nexports['default'] = lib;\nmodule.exports = exports['default'];","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"hyperdis\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hyperdis\"] = factory();\n\telse\n\t\troot[\"hyperdis\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const makeEntry = (arr, sCon) => {\n    arr.forEach((elem) => {\n        if (elem === undefined || elem === null) {\n            return;\n        }\n        sCon[elem] = 1;\n    });\n};\n\nexport default class ForeignSet {\n    constructor (arr) {\n        this._set = {};\n        makeEntry(arr, this._set);\n    }\n\n    append (arr) {\n        makeEntry(arr, this._set);\n        return this;\n    }\n\n    toArray () {\n        return Object.keys(this._set);\n    }\n\n    static difference (set1, set2) {\n        let key;\n        const filteredKeys = [],\n            s1 = set1._set,\n            s2 = set2._set;\n        for (key in s1) {\n            if (!({}).hasOwnProperty.call(s1, key)) {\n                continue;\n            }\n            if (key in s2) {\n                continue;\n            }\n            filteredKeys.push(key);\n        }\n        return new ForeignSet(filteredKeys);\n    }\n}\n","/* global window */\n\nimport ForeignSet from './set';\n\nconst\n    isSimpleObject = (obj) => {\n        let token;\n        if (typeof obj === 'object') {\n            if (obj === null) { return false; }\n            token = Object.prototype.toString.call(obj);\n            if (token === '[object Object]') {\n                return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n            }\n        }\n        return false;\n    },\n    minMsThreshold = 16,\n    /* istanbul ignore next */win = typeof window === 'undefined' ? (this || {}) : window,\n    /* istanbul ignore next */ reqAnimFrame = win.requestAnimationFrame || win.webkitRequestAnimationFrame ||\n        win.mozRequestAnimationFrame || win.oRequestAnimationFrame ||\n        win.msRequestAnimationFrame ||\n        function (callback) {\n            setTimeout(callback, minMsThreshold);\n        },\n\n    getTimeBasedId = () => {\n        if (getTimeBasedId.__lastTime === new Date().getTime()) {\n            return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n        }\n\n        getTimeBasedId.__id = 0;\n        getTimeBasedId.__lastTime = new Date().getTime();\n        return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n    },\n    pullableRecent = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const\n                    hist = node.history,\n                    l = hist.length - 1;\n                return [hist[l - 1 < 0 ? 0 : l - 1], hist[l]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    pullableEnd = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const hist = node.history;\n                return [hist[0], hist[hist.length - 1]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    unique = fns => fns\n                    .reduce((store, fn) => {\n                // @warn function with side effect, it mutates the store passed during initialization\n                        if (fn.__id in store.map) {\n                            return store;\n                        }\n\n                        store.map[fn.__id] = 1;\n                        store.unique.push(fn);\n\n                        return store;\n                    }, { map: {}, unique: [] })\n                    .unique,\n    compose = fns => () => {\n        fns.forEach(fn => fn());\n    },\n    flat = (...params) => {\n        const res = [];\n        params.forEach(param => res.push(...param));\n        return res;\n    },\n    identityMap = arrays => arrays,\n    splitPathProp = (path) => {\n        const pathArr = path.split('.'),\n            len = pathArr.length;\n        return [pathArr.slice(0, len - 1), pathArr[len - 1]];\n    },\n    scheduler = (onFinishCallback) => {\n        let queue = [],\n            animationFrame = null;\n\n        onFinishCallback = onFinishCallback &&\n            typeof onFinishCallback === 'function' && onFinishCallback || (() => { });\n\n        return (listeners, payload) => {\n            [].push.apply(queue, listeners);\n            if (animationFrame === null) {\n                animationFrame = reqAnimFrame(() => {\n                    const tempQ = queue.slice(0);\n                    queue.length = 0;\n                    animationFrame = null;\n\n                    unique(tempQ).forEach(fn => fn());\n                    onFinishCallback(payload);\n                });\n            }\n        };\n    },\n    fetch = namedNode => (...params) => params.map((param) => {\n        const node = namedNode[param];\n        return {\n            name: node.name,\n            qualifiedName: node.qualifiedName,\n            value: node.seed\n        };\n    }),\n    fetchAggregator = (...params) => ({\n        dependencies: params.slice(0, params.length - 1),\n        fn: params[params.length - 1]\n    }),\n    getUpstreamNodes = (list) => {\n        let res = [];\n        const map = {};\n        list.forEach(node => map[node.qualifiedName] = -1);\n        function rec (arr) {\n            arr.forEach((node) => {\n                let qname,\n                    placedIndex,\n                    preArr,\n                    postArr;\n                if (!((qname = node.qualifiedName) in map)) {\n                    map[qname] = res.push(node) - 1;\n                } else {\n                    placedIndex = map[qname];\n                    if (placedIndex !== -1 && placedIndex !== res.length - 1) {\n                        // If not the last element, readjust the array so that the later dependency position is saved\n                        preArr = res.slice(0, placedIndex);\n                        postArr = res.slice(placedIndex + 1);\n                        res = preArr.concat(postArr);\n\n                        // reset the index in map\n                        postArr.forEach((elem, i) => map[elem.qualifiedName] = i + preArr.length);\n                        map[qname] = res.push(node) - 1;\n                    }\n                }\n                rec(node.outgoingEdges);\n            });\n        }\n        rec(list);\n        return res;\n    },\n    resolver = {\n        accumulate: (...params) => {\n            const resp = {};\n            params.forEach((nodeDetails) => {\n                Object.assign(resp, { [nodeDetails.name]: nodeDetails.value });\n            });\n            return resp;\n        },\n        identity: nodeDetails => nodeDetails.value\n    };\n\nfunction resolveDependencyOrder (node, resolved, resolveMap) {\n    let qname;\n    node.edges.forEach((neighbour) => {\n        resolveDependencyOrder(neighbour, resolved, resolveMap);\n    });\n\n    if (node.isRoot() || (qname = node.qualifiedName) in resolveMap) {\n        return;\n    }\n    resolved.push(node);\n    resolveMap[qname] = 1;\n}\n\nclass CustomResolver {\n    constructor (resolver) {\n        this.fn = resolver;\n        this.dep = [];\n    }\n\n    addDependencies(...dep) {\n        this.dep.push(...dep);\n        return this;\n    }\n\n    getDependencies () {\n        return this.dep;\n    }\n\n    get () {\n        return this.fn;\n    }\n}\n\nexport {\n    isSimpleObject,\n    scheduler,\n    compose,\n    flat,\n    identityMap,\n    pullableEnd,\n    pullableRecent,\n    unique,\n    splitPathProp,\n    resolver,\n    ForeignSet,\n    resolveDependencyOrder,\n    fetch,\n    fetchAggregator,\n    CustomResolver,\n    getUpstreamNodes\n};\n","export default class GraphNode {\n    constructor (name, qualifiedName, options) {\n        /* istanbul ignore next */options = options || {};\n        this.name = name;\n        this.qualifiedName = qualifiedName;\n        this.edges = [];\n        this.outgoingEdges = [];\n        this._seed = null;\n        this.requireResolve = true;\n        this.retriever = options.retriever;\n        this.history = [];\n        this.resolver = null;\n        this.electricEdges = [];\n    }\n\n    addDependencies (...dep) {\n        this.edges.push(...dep);\n        dep.forEach(entry => entry.outgoingEdges.push(this));\n        return this;\n    }\n\n    addElectricNode (node) {\n        this.electricEdges.push(node);\n        return this;\n    }\n\n    get seed () {\n        return this._seed;\n    }\n\n    set seed (value) {\n        this._seed = value;\n        this.requireResolve = true;\n        return this;\n    }\n\n    resolve () {\n        this.seed = this.resolver(...this.retrieveDetails());\n        this.history.push(this.seed);\n        this.requireResolve = false;\n        return this;\n    }\n\n    retrieveDetails () {\n        if (this.edges.length === 0) {\n            return [{\n                name: this.name,\n                qualifiedName: this.qualifiedName,\n                value: this.seed\n            }];\n        }\n        return this.retriever(...this.edges.map(edge => edge.qualifiedName));\n    }\n\n    repeatHead () {\n        const\n            history = this.history,\n            head = history[history.length - 1];\n        // @todo- Akash, write test case if history.length === 0 to pass code coverage\n        if (history.length === 0) {\n            return this;\n        }\n        history.push(head);\n        return this;\n    }\n\n    flush () {\n        const hist = this.history,\n            head = hist[hist.length - 1];\n        hist.length = 0;\n        hist.push(head);\n        return this;\n    }\n\n    isRoot () {\n        return this.name === null;\n    }\n}\n","import {\n    pullableRecent,\n    pullableEnd\n} from './utils';\n\nexport default class ElectricNode {\n    constructor () {\n        this.edges = [];\n        this.listeners = {\n            nextFrame: [],\n            currentFrame: []\n        };\n    }\n\n    addEdges (...nodes) {\n        this.edges.push(...nodes);\n        return this;\n    }\n\n    regListenerForCurrFrame (fn) {\n        const lstnrs = this.listeners.currentFrame;\n        let index = lstnrs.push(pullableRecent(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.currentFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    regListenerForNextFrame (fn) {\n        const lstnrs = this.listeners.nextFrame;\n        let index = lstnrs.push(pullableEnd(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.nextFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    hasNextFrameListener () {\n        return !!this.listeners.nextFrame.length;\n    }\n}\n","import {\n    isSimpleObject,\n    resolver,\n    // upstreamNodes,\n    flat,\n    resolveDependencyOrder,\n    getUpstreamNodes,\n    ForeignSet,\n    fetch,\n    CustomResolver,\n    scheduler\n} from './utils';\nimport Node from './graph-node';\nimport ElectricNode from './electric-node';\n\nexport default class Graph {\n    constructor () {\n        this.qualifiedNodeMap = {};\n        this.retriever = fetch(this.qualifiedNodeMap);\n        this.root = new Node(null, null, { retriever: this.retriever });\n        this.root.resolver = resolver.accumulate;\n\n        this._wholeSet = null;\n        this._propagate = true;\n        this.propagationOverride = {\n            currentFrameListeners: false,\n            nextFrameListeners: false\n        };\n\n        this._schedule = scheduler((payload) => {\n            let qname;\n            for (qname in payload.flushTarget) {\n                if (!({}).hasOwnProperty.call(this.qualifiedNodeMap, qname)) {\n                    return;\n                }\n                this.qualifiedNodeMap[qname].flush();\n            }\n        });\n    }\n\n    createNodesFrom (obj, mount) {\n        let val,\n            resolveReqList;\n        const qualifiedNodeMap = this.qualifiedNodeMap,\n            root = this.root,\n            retriever = this.retriever;\n\n        (function rec (objn, qualifiedName, history) {\n            let key,\n                qname,\n                perv,\n                node;\n\n            for (key in objn) {\n                if (!({}).hasOwnProperty.call(objn, key)) {\n                    continue;\n                }\n                qname = `${qualifiedName}${key}`;\n                node = new Node(key, qname, { retriever });\n                qualifiedNodeMap[qname] = node;\n\n                if ((perv = history.perv) !== undefined) {\n                    perv.addDependencies(node);\n                } else {\n                    // top most level entries\n                    root.addDependencies(node);\n                }\n\n                if (isSimpleObject(val = objn[key])) {\n                    rec(val, `${qualifiedName}${key}.`, { perv: node });\n                    node.resolver = resolver.accumulate;\n                } else if (val instanceof CustomResolver) {\n                    node.resolver = val.get();\n                    node.addDependencies(...val.getDependencies().map(qname => qualifiedNodeMap[qname]));\n                } else {\n                    node.resolver = resolver.identity;\n                    node.seed = val;\n                    // node.resolve();\n                }\n            }\n        }(obj, mount === null ? '' : `${mount}.`, {\n            perv: qualifiedNodeMap[mount]\n        }));\n\n        this._wholeSet = new ForeignSet(Object.keys(this.qualifiedNodeMap));\n\n        // Recalculate the model without firing the listeners\n        // @todo selective branch resolve. Currently resolve gets called even for a branch which was updated\n        resolveReqList = this.constructor.getResolvedList(root).concat(root).filter(node => node.requireResolve);\n        resolveReqList.forEach(node => node.resolve());\n        getUpstreamNodes(resolveReqList).forEach(node => node.resolve());\n        return this;\n    }\n\n    getNodeValue (prop) {\n        if (prop in this.qualifiedNodeMap) {\n            return this.qualifiedNodeMap[prop].seed;\n        }\n        return undefined;\n    }\n\n    createElectricNodeOf (props, fnSpec) {\n        const nodes = props.map(prop => this.qualifiedNodeMap[prop]),\n            eNode = new ElectricNode().addEdges(...nodes);\n\n        nodes.forEach(node => node.addElectricNode(eNode));\n        return eNode[`regListenerFor${fnSpec.type}`](fnSpec.fn);\n    }\n\n    update (...params) {\n        let changedSet,\n            upstreamNodes;\n        const\n            electricEdges = [],\n            nodes = params.map((entry) => {\n                entry[0].seed = entry[1];\n                return entry[0];\n            });\n        nodes.forEach(node => node.resolve());\n        electricEdges.push(...flat(...nodes.map(node => node.electricEdges)));\n        changedSet = new ForeignSet(nodes.map(node => node.qualifiedName));\n\n        if (!this._propagate) {\n            this.__execUniqueElectricEdges(electricEdges);\n            this._propagate = true;\n            return this;\n        }\n\n        upstreamNodes = getUpstreamNodes(nodes);\n        upstreamNodes.forEach(upstreamNode => upstreamNode.resolve());\n        changedSet.append(upstreamNodes.map(node => node.qualifiedName));\n        electricEdges.push(...flat(...upstreamNodes.map(node => node.electricEdges)));\n\n        this.__execUniqueElectricEdges(Array.from(new Set(electricEdges)), changedSet);\n        return this;\n    }\n\n    __execUniqueElectricEdges (electricEdges, changedSet) {\n        const\n            cfLstnrs = [], // current frame listeners\n            nfLstnrs = []; // next frame listeners\n        if (changedSet) {\n            const\n                differenceSet = ForeignSet.difference(this._wholeSet, changedSet),\n                entries = differenceSet.toArray();\n\n            entries.forEach(entry => this.qualifiedNodeMap[entry].repeatHead());\n        }\n\n        electricEdges.forEach((e) => {\n            cfLstnrs.push(...e.listeners.currentFrame);\n        });\n        electricEdges.forEach((e) => {\n            nfLstnrs.push(...e.listeners.nextFrame);\n        });\n\n        !this.propagationOverride.currentFrameListeners && cfLstnrs.forEach(fn => fn());\n        !this.propagationOverride.nextFrameListeners && this._schedule(nfLstnrs, { flushTarget: changedSet });\n        this.resetPropagationOverride();\n        return this;\n    }\n\n    resetNodeValue (...qnames) {\n        const nodes = qnames.map(qname => this.qualifiedNodeMap[qname]),\n            args = nodes.map(node => [node, node.seed]);\n        this.update(...args);\n        return this;\n    }\n\n    static getResolvedList (node) {\n        const resolved = [];\n        resolveDependencyOrder(node, resolved, {});\n        return resolved;\n    }\n\n    stopPropagation () {\n        this._propagate = false;\n        return this;\n    }\n\n    resetPropagationOverride () {\n        this.propagationOverride.currentFrameListeners = false;\n        this.propagationOverride.nextFrameListeners = false;\n        return this;\n    }\n\n    setPropagationOverride (key) {\n        this.propagationOverride[`${key}Listeners`] = true;\n        return this;\n    }\n\n    getNodeFromQualifiedName (qname) {\n        return this.qualifiedNodeMap[qname];\n    }\n}\n","import Graph from './graph';\nimport { CustomResolver, fetchAggregator } from './utils';\n\n/**\n * The container class for Hyperdis. Hyperdis is an enabler for observable object with few interesting features like,\n * calculated property, next frame and same frame listeners, multiple listeners etc with a dependency resolving system.\n * It internally uses a graph to hold the hierarchial relationship of a object. Model is merely a container which\n * ties all the components together.\n *\n * @todo Circular dependency detection is not present\n *\n * @example check src/index.spec.js\n * @class\n */\nclass Model {\n    constructor () {\n        this._graph = new Graph();\n        this._lockFlag = false;\n        this._reqQ = [];\n    }\n\n    /**\n     * Static method to create and init the model with an observable seed\n     *\n     * @param {Object} obj The target object which is required to be made observable\n     * @return {Model} instance of the observable object model\n     */\n    static create (obj) {\n        return new Model()._addPropInModel(null, obj);\n    }\n\n    /**\n     * Appends more observable property on the already observable instance. This mutates the original model.\n     *\n     * This function works in two mode. One being\n     * @param {String} mountPoint the property on which the new set of properties will be mounted. If its a nested\n     *                          property then the mountPoint has to be written such a way so it feels like you are\n     *                          accessing the object. If the mount point is not found then he obeservables are added in\n     *                          the root.\n     * @param {Object} The target object which is required to be made observable\n     *\n     * Another being\n     * @param {Object} The target object which is required to be made observable\n     *\n     * @return {Model} instance of the observable object model\n     */\n    append (...params) {\n        let mountPoint,\n            obj;\n\n        if (params.length === 1) {\n            mountPoint = null;\n            obj = params[0];\n        } else {\n            mountPoint = params[0];\n            obj = params[1];\n        }\n\n        this._addPropInModel(mountPoint, obj);\n        return this;\n    }\n\n    /**\n     * Creates a calculated variable from existing variable. This variable can't be updated from outside.\n     * @param {string} mountpoint property path on which the new variable will be placed\n     * @param {string} name name of the variable. If the variable could have hierarchy like `limits.start`\n     * @param {Function} fn funtion where the dependent variables are injected based on the dependency requirement\n     */\n    calculatedProp (...params) {\n        let calculationConfig,\n            customResolver,\n            varName,\n            mount,\n            fetchFn;\n\n        if (params.length > 2) {\n            mount = params[0];\n            varName = params[1];\n            fetchFn = params[2];\n        } else {\n            mount = null;\n            varName = params[0];\n            fetchFn = params[1];\n        }\n\n        calculationConfig = fetchFn(fetchAggregator);\n        customResolver = new CustomResolver(calculationConfig.fn);\n        customResolver.addDependencies(...calculationConfig.dependencies);\n\n        this._addPropInModel(mount, { [varName]: customResolver });\n        return this;\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    _addPropInModel (mountPoint, obj) {\n        this._graph.createNodesFrom(obj, mountPoint);\n        return this;\n    }\n\n    /**\n     * Register a listener in the current frame when a property or group of properties is changed.\n     *\n     * @example\n     * This function takes a single or group of property and handler which is called when any of the properties are\n     * changed.\n     * When a single property is changed the handler is called with two parameter, what was the old value of the state\n     * property and what is the new value.\n     * myState.on('range.start', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 9);\n     * // Output\n     * Value before prop change 1\n     * Value after prop change 9\n     *\n     * If a handler is registered on change of a property which has another state property as value, then the handler\n     * gets called whenever any state property connected to it gets changed\n     *\n     * myState.on('range', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 10);\n     * myState.prop('range.type.absolute', false);\n     *\n     * // Output\n     * Value before prop change\n     * range {\n     *      start: 9,\n     *      end: 5,\n     *      type: {\n     *          absolute: true\n     *      }\n     * }\n     * Value after prop change\n     * range: {\n     *      start: 10,\n     *      end: 5,\n     *      type: {\n     *          absolute: false\n     *      }\n     * }\n     * If a handler is registered with more than one property change then, the handler is called when any of the\n     * properties gets changed. In this cast the handler is called with more than one parameter: each for one state\n     * property which is registered for listening. Each parameter is of type array containing [oldValue, newValue]\n     *\n     * myState.on('range.start', 'range.end', (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * myState.prop('range.start', 12);\n     *\n     * // Output\n     * Start [10, 12]\n     * End [5, 5]\n     *\n     * myState.prop('range.end', 7);\n     *\n     * // Output\n     * Start [12, 12]\n     * End [5, 7]\n     *\n     * The on returns a function which is when called the listener registered gets unregistered\n     *\n     * let unsub = myState.on(['range.start', 'range.end'], (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * // Unsubscribe\n     * unsub()\n     *\n     * On takes an optional boolean value as the last parameter, which if passed as a true value the handler gets called\n     * during registration itself.\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    on (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed in the current stack frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'CurrFrame',\n                fn\n            });\n\n        if (instantCall) {\n            // Bar current next frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('nextFrame').resetNodeValue(...props);\n        }\n        return unsub;\n    }\n\n    /**\n     * Register a listener for the next frame when a property or group of properties is changed.\n     *\n     * @example\n     * See the examples for the on listener\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties. Here the oldvalue is last value of the last frame\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    next (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed at the tick of next animation frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'NextFrame',\n                fn\n            });\n\n        // @todo check support for this from the graph side\n        if (instantCall) {\n            // Bar current frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('currentFrame').resetNodeValue(...props);\n        }\n\n        return unsub;\n    }\n\n    /**\n     * Lock queues the request of property change and releases the change when unlock is called. This is helpful when\n     * multiple property is getting called and the model listeners are to be fired once at the end of update.\n     *\n     * @return {Model} instance of the model\n     */\n    lock () {\n        this._lockFlag = true;\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * Unlock unleashes the change done after the lock was called.\n\n     * @return {Model} instance of the model\n     */\n    unlock () {\n        this._lockFlag = false;\n        this.setProp(...this._reqQ);\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * This acts as getter and setter. If the function is called by passing only one argument, it retrieve the value\n     * associated with the property. If the same function is called using two parameters, first one being the property\n     * and second one being the value, then the value is set for the property and the handlers are called (if any)\n     * which got registered using the on function\n     *\n     * Getter\n     * @param {string} prop property path whose value to be retrieved\n     * @return {Object} value of the property at the time of call\n     *\n     * Setter\n     * @param {string} property property path whose value to be ser\n     * @return {Model} instance of the model\n     */\n    prop (...params) {\n        let prop,\n            val,\n            len;\n\n        switch (len = params.length) {\n        case 1:\n            prop = params[0];\n            break;\n\n        case 2:\n            prop = params[0];\n            val = params[1];\n            break;\n\n        default:\n            return this;\n        }\n\n        if (len === 2) {\n            this._lockFlag ? this._reqQ.push([prop, val]) : this.setProp([prop, val]);\n            return this;\n        }\n\n        return this._graph.getNodeValue(prop);\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    setProp (...props) {\n        // Filter out the calculated variables, so that it cant be changed from outside\n        // @todo if a node is not leafValue, and change is called, ignore it too\n        // props = props.filter(prop => !(VirtualObj.walkTill(prop[0].split('.'), this._vObj).leafValue()\n        //     instanceof CalculatedVar));\n\n        if (props.length === 0) {\n            return this;\n        }\n\n        this._graph.update(...props.map(prop => [this._graph.getNodeFromQualifiedName(prop[0]), prop[1]]));\n        return this;\n    }\n\n    /**\n     * Retrieves the graph representation of the object\n     * @return {Graph} instance of the graph associated to the model\n     */\n    graph () {\n        return this._graph;\n    }\n\n    /**\n     * Get serialized data from the model\n     *\n     * @return {Object} Serialized data\n     */\n    serialize () {\n        return this._graph.root.seed;\n    }\n}\n\nexport default Model;\n","import Model from './model';\n\nexport default Model;\n","const Muze = require('./muze');\n\nmodule.exports = Muze.default ? Muze.default : Muze;\n","'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\nfunction ContainerManager(parentContainer, isBrowserLess, maxContainers) {\n    var svg;\n\n    maxContainers = maxContainers > 5 ? maxContainers : 5;\n    maxContainers = maxContainers < 20 ? maxContainers : 20;\n\n    this.maxContainers = maxContainers;\n    this.first = null;\n    this.last = null;\n    this.containers = {};\n    this.length = 0;\n    this.rootNode = parentContainer;\n\n    if (isBrowserLess) {\n        svg = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'xlink', 'http://www.w3.org/1999/xlink');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'height', '0');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'width', '0');\n        this.svgRoot = svg;\n        this.rootNode.appendChild(svg);\n    }\n}\n\nContainerManager.prototype.get = function (style) {\n    var diff,\n        key,\n        containerObj,\n        containers = this.containers,\n        len = this.length,\n        max = this.maxContainers,\n        keyStr = '';\n\n    for (key in slLib.supportedStyle) {\n        if (style[key] !== undefined) {\n            keyStr += slLib.supportedStyle[key] + ':' + style[key] + ';';\n        }\n    }\n\n    if (!keyStr) {\n        return false;\n    }\n\n    if (containerObj = containers[keyStr]) {\n        if (this.first !== containerObj) {\n            containerObj.prev && (containerObj.prev.next = containerObj.next);\n            containerObj.next && (containerObj.next.prev = containerObj.prev);\n            containerObj.next = this.first;\n            containerObj.next.prev = containerObj;\n            this.last === containerObj && (this.last = containerObj.prev);\n            containerObj.prev = null;\n            this.first = containerObj;\n        }\n    } else {\n        if (len >= max) {\n            diff = len - max + 1;\n            // +1 is to remove an extra entry to make space for the new container to be added.\n            while (diff--) {\n                this.removeContainer(this.last);\n            }\n        }\n        containerObj = this.addContainer(keyStr);\n    }\n\n    return containerObj;\n};\n\nContainerManager.prototype.addContainer = function (keyStr) {\n    var node, container;\n\n    this.containers[keyStr] = container = {\n        next: null,\n        prev: null,\n        node: null,\n        ellipsesWidth: 0,\n        lineHeight: 0,\n        dotWidth: 0,\n        avgCharWidth: 4,\n        keyStr: keyStr,\n        charCache: {}\n    };\n\n    // Since the container objects are arranged from most recent to least recent order, we need to add the new\n    // object at the beginning of the list.\n    container.next = this.first;\n    container.next && (container.next.prev = container);\n    this.first = container;\n    if (!this.last) {\n        this.last = container;\n    }\n    this.length += 1;\n\n    node = container.node = doc.createElement('div');\n    this.rootNode.appendChild(node);\n\n    if (documentSupport.isIE && !documentSupport.hasSVG) {\n        node.style.setAttribute('cssText', keyStr);\n    } else {\n        node.setAttribute('style', keyStr);\n    }\n\n    node.setAttribute('aria-hidden', 'true');\n    node.setAttribute('role', 'presentation');\n    node.style.display = 'inline-block';\n\n    node.innerHTML = slLib.testStrAvg; // A test string.\n    container.lineHeight = node.offsetHeight;\n    container.avgCharWidth = node.offsetWidth / 3;\n\n    if (documentSupport.isBrowserLess) {\n        node = container.svgText = doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n        node.setAttribute('style', keyStr);\n        this.svgRoot.appendChild(node);\n\n        node.textContent = slLib.testStrAvg; // A test string.\n        container.lineHeight = node.getBBox().height;\n        container.avgCharWidth = (node.getBBox().width - SVG_BBOX_CORRECTION) / 3;\n\n        node.textContent = '...';\n        container.ellipsesWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n        node.textContent = '.';\n        container.dotWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n    } else {\n        node.innerHTML = '...';\n        container.ellipsesWidth = node.offsetWidth;\n        node.innerHTML = '.';\n        container.dotWidth = node.offsetWidth;\n        node.innerHTML = '';\n    }\n\n    return container;\n};\n\nContainerManager.prototype.removeContainer = function (cObj) {\n    var keyStr = cObj.keyStr;\n\n    if (!keyStr || !this.length || !cObj) {\n        return;\n    }\n    this.length -= 1;\n\n    cObj.prev && (cObj.prev.next = cObj.next);\n    cObj.next && (cObj.next.prev = cObj.prev);\n    this.first === cObj && (this.first = cObj.next);\n    this.last === cObj && (this.last = cObj.prev);\n\n    cObj.node.parentNode.removeChild(cObj.node);\n\n    delete this.containers[keyStr];\n};\n\nContainerManager.prototype.dispose = function () {\n    var key,\n        containers = this.containers;\n\n    this.maxContainers = null;\n    for (key in containers) {\n        this.removeContainer(containers[key]);\n    }\n\n    this.rootNode.parentNode.removeChild(this.rootNode);\n\n    this.rootNode = null;\n    this.first = null;\n    this.last = null;\n};\n\nmodule.exports = ContainerManager;","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  scale.invertExtent = function(r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1, a, b, t,\n        hiIndex;\n    values.push(values[n] + this.step());\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo));\n    hiIndex = getClosestIndexOf(values, hi);\n    b = lo===hi ? a : Math.max(a, hiIndex - 1);\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    if (reverse) t = a, a = n - b, b = n - t; // map + swap\n    return (a > b) ? undefined : domain().slice(a, b+1);\n  };\n\n  scale.invert = function (r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1,\n        a,\n        t;\n\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo, 'left'));\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    return domain()[reverse ? n - a : a];\n  }\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n\nfunction getClosestIndexOf (arr, value, side) {\n  var low = 0,\n      arrLen = arr.length,\n      high = arrLen - 1,\n      highVal,\n      mid,\n      d1,\n      d2;\n\n  while (low < high) {\n      mid = Math.floor((low + high) / 2);\n      d1 = Math.abs(arr[mid] - value);\n      d2 = Math.abs(arr[mid + 1] - value);\n\n      if (d2 <= d1) {\n          low = mid + 1;\n      }\n      else {\n          high = mid;\n      }\n  }\n\n  if (!side) {\n      return high;\n  }\n\n  highVal = arr[high];\n  if (highVal === value) {\n      return high;\n  } else if (highVal > value) {\n      if (high === 0) { return high; }\n      return side === 'left'? high - 1 : high;\n  } else {\n      if (high === arr.length - 1) { return high; }\n      return side === 'left'? high : high + 1;\n  }\n}","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy: function(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n}\n\nfunction rgb_formatRgb() {\n  var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n  return (a === 1 ? \"rgb(\" : \"rgba(\")\n      + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n      + (a === 1 ? \")\" : \", \" + a + \")\");\n}\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"hsl(\" : \"hsla(\")\n        + (this.h || 0) + \", \"\n        + (this.s || 0) * 100 + \"%, \"\n        + (this.l || 0) * 100 + \"%\"\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) return hcl2lab(o);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\nfunction hcl2lab(o) {\n  if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n  var h = o.h * deg2rad;\n  return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return hcl2lab(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(date - date.getMilliseconds());\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationSecond} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration\";\n\nvar hour = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","export default function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n}\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"./colors\";\n\nexport default colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n","import colors from \"./colors\";\n\nexport default colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}\n","import colors from \"./colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export const UNIT_GLOBAL_NAMESPACE = 'app.units';\nexport const UNIT_LOCAL_NAMESPACE = 'local.units';\nexport const LAYER_LOCAL_NAMESPACE = 'local.layers';\nexport const LAYER_GLOBAL_NAMESPACE = 'app.layers';\nexport const GROUP_GLOBAL_NAMESPACE = 'app.group';\nexport const GROUP_LOCAL_NAMESPACE = 'local.group';\nexport const CANVAS_LOCAL_NAMESPACE = 'local.canvas';\nexport const CANVAS_GLOBAL_NAMESPACE = 'app.canvas';\n\n","const ReservedFields = {\n    ROW_ID: '__id__'\n};\n\nexport default ReservedFields;\n","const CommonProps = {\n    ACTION_INF: 'actionInf',\n    ON_LAYER_DRAW: 'onLayerDraw',\n    MATRIX_CREATED: 'matrixCreated'\n};\n\nexport default CommonProps;\n","export const COORD_TYPES = {\n    POLAR: 'polar',\n    CARTESIAN: 'cartesian'\n};\nexport const DATA_TYPE = {\n    FUNCTION: 'function',\n    STRING: 'string',\n    NUMBER: 'number',\n    BOOLEAN: 'Boolean'\n};\nexport const SORT_ORDER_ASCENDING = 'asc';\nexport const SORT_ORDER_DESCENDING = 'desc';\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickTransform = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"))\n        .style('transform', tickTransform);\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.tickTransform = function(_) {\n    return arguments.length ? (tickTransform = _, axis) : tickTransform;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {\n          var ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","export var slice = Array.prototype.slice;\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","import { defaultValue } from '../common-utils';\n\nconst sortSelection = (dataObjects, updateData, sortFn) =>\n    (a, b) => {\n        const kA = a[0];\n        const kB = b[0];\n        return sortFn([a[0], dataObjects.get(kA), updateData.get(kA)], [kB, dataObjects.get(kB), updateData.get(kB)]);\n    };\n\n/**\n * This class represents a selection applied on a data array.\n *\n * @class Selection\n */\nclass Selection {\n    /**\n     * Creates an instance of Selection.\n     * @param {Array<DataObject>} data Array of DataObjects.\n     * @memberof Selection\n     */\n    constructor (idGetter) {\n        this._dataObjects = new Map();\n        this._updateData = new Map();\n        this._enterData = new Map();\n        this._exitData = new Map();\n        this._idGetter = idGetter;\n    }\n\n    /**\n     * This method is used to supply seed data to a selection.\n     *\n     * @param {Array} newData Seed data to create the enter selection.\n     * @param {Functon | undefined } idGetter This function is used to uniqely identify a data entry.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    data (newData) {\n        const entryData = new Map();\n        const exitdata = new Map();\n        const tempMap = new Map();\n        const duplicateData = new Map();\n        const updatedData = this._updateData;\n        const idGetter = this._idGetter;\n\n        newData.forEach((...params) => {\n            const key = idGetter ? idGetter(...params) : params[1];\n            if (!tempMap.has(key)) {\n                tempMap.set(key, params[0]);\n            } else {\n                duplicateData.push(key, params[0]);\n            }\n        });\n\n        let val;\n        // prepare enter data\n        let entries = tempMap.entries();\n        while (val = entries.next().value) {\n            if (!updatedData.has(val[0])) {\n                entryData.set(val[0], val[1]);\n            } else {\n                updatedData.set(val[0], val[1]);\n            }\n        }\n        // prepare exit data\n        entries = updatedData.entries();\n        while (val = entries.next().value) {\n            if (!tempMap.has(val[0])) {\n                exitdata.set(val[0], val[1]);\n            }\n        }\n\n        // put duplicate data to exit list\n        entries = duplicateData.entries();\n        while (val = entries.next().value) {\n            exitdata.set(val[0], val[1]);\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updateData = updatedData;\n        newSelection._dataObjects = this._dataObjects;\n        newSelection._enterData = entryData;\n        newSelection._exitData = exitdata;\n\n        return newSelection;\n    }\n\n    /**\n     * Applies the supplied callback to each data element\n     * and returns a new selection.\n     *\n     * @param {Function} callback Callback to execute on each item.\n     * @return {Selection} New selection with data created using callback.\n     * @memberof Selection\n     */\n    append (callback) {\n        let val;\n        const dataObjects = new Map();\n        const data = new Map();\n        const mode = defaultValue(this._mode, 'update');\n        const currentData = this[`_${mode}Data`];\n        const entries = currentData.entries();\n\n        while (val = entries.next().value) {\n            dataObjects.set(val[0], callback(val[1]));\n            data.set(val[0], val[1]);\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updateData = data;\n        newSelection._dataObjects = dataObjects;\n\n        return newSelection;\n    }\n\n     /**\n     * This method returns an enter selection that\n     * allows or update operations.\n     *\n     * @return {Selection} Instance of enter selection.\n     * @memberof Selection\n     */\n    enter () {\n        this._mode = 'enter';\n        return this;\n    }\n\n    /**\n     * Returns a selection with exit data.\n     *\n     * @return {Selection} Instance of selection.\n     * @memberof Selection\n     */\n    exit () {\n        this._mode = 'exit';\n        return this;\n    }\n\n     /**\n     * This method merges the data of one selection with another.\n     *\n     * @param {Selection} selection Instance of selection.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    merge (target) {\n        const mergedObjects = new Map();\n        const mergedData = new Map();\n        let val;\n        let entries;\n\n        // merge Object and data present in this selection\n        entries = this._updateData.entries();\n        while (val = entries.next().value) {\n            if (!this._exitData.has(val[0])) {\n                mergedData.set(val[0], val[1]);\n                mergedObjects.set(val[0], this._dataObjects.get(val[0]));\n            }\n        }\n\n        // merge object from target selection\n        entries = target._updateData.entries();\n        while (val = entries.next().value) {\n            if (!(mergedData.has(val[0]) || target._exitData.has(val[0]))) {\n                mergedData.set(val[0], val[1]);\n                mergedObjects.set(val[0], target._dataObjects.get(val[0]));\n            }\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updateData = mergedData;\n        newSelection._dataObjects = mergedObjects;\n\n        return newSelection;\n    }\n\n    each (fn) {\n        let val;\n        const entries = this._dataObjects.entries();\n\n        while (val = entries.next().value) {\n            fn(val[1], this._updateData.get(val[0]), val[0]);\n        }\n    }\n\n    map (fn) {\n        const newdata = new Map();\n        let val;\n        const entries = this._dataObjects.entries();\n\n        while (val = entries.next().value) {\n            newdata.set(val[0], fn(val[1], this._updateData.get(val[0]), val[0]));\n        }\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updateData = this._updateData;\n        newSelection._dataObjects = newdata;\n\n        return newSelection;\n    }\n\n    remove () {\n        const mode = defaultValue(this._mode, 'update');\n        const currentData = this[`_${mode}Data`];\n\n        currentData.clear();\n\n        return this;\n    }\n\n    sort (sortFn) {\n        const updateData = this._updateData;\n        const dataObjects = this._dataObjects;\n        const sortSel = sortSelection(dataObjects, updateData, sortFn);\n\n        this._updateData = new Map([...updateData.entries()].sort(sortSel));\n        this._dataObjects = new Map([...dataObjects.entries()].sort(sortSel));\n        return this;\n    }\n\n    /**\n     *  Gets the object bound to a class\n     *\n     * @return {Object} current data set bound to the class\n     * @memberof Selection\n     */\n    getObjects () {\n        let val;\n        const objects = [];\n        const dataObjects = this._dataObjects;\n        // select the data to create object\n        const mode = defaultValue(this._mode, 'update');\n        const currentData = this[`_${mode}Data`];\n        const entries = currentData.entries();\n\n        while (val = entries.next().value) {\n            if (dataObjects.has(val[0])) {\n                objects.push(dataObjects.get(val[0]));\n            }\n        }\n\n        return objects;\n    }\n}\n\nexport default Selection;\n","export const ORDER_ASCENDING = 'ascending';\nexport const ORDER_DESCENDING = 'descending';\nexport const ORDER_NONE = 'none';\nexport const OFFSET_DIVERGING = 'diverging';\nexport const OFFSET_NONE = 'none';\nexport const OFFSET_EXPAND = 'expand';\nexport const OFFSET_WIGGLE = 'wiggle';\n","/* global window, requestAnimationFrame, cancelAnimationFrame */\nimport { FieldType, DimensionSubtype, DateTimeFormatter, DM_DERIVATIVES, default as DataModel } from 'datamodel';\nimport {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom\n} from 'd3-axis';\nimport {\n    symbolCircle,\n    symbolCross,\n    symbolDiamond,\n    symbolSquare,\n    symbolStar,\n    symbolWye,\n    symbolTriangle,\n    symbol,\n    stack as d3Stack,\n    stackOffsetDiverging,\n    stackOrderNone,\n    stackOrderAscending,\n    stackOrderDescending,\n    stackOffsetNone,\n    stackOffsetExpand,\n    stackOffsetWiggle,\n    pie,\n    arc,\n    line,\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    area\n} from 'd3-shape';\nimport { scaleBand } from 'd3-scale';\nimport { nest } from 'd3-collection';\nimport {\n    interpolate,\n    interpolateRgb,\n    piecewise,\n    interpolateNumber,\n    interpolateHslLong\n} from 'd3-interpolate';\nimport {\n    easeCubic,\n    easeBounce,\n    easePoly,\n    easeBack,\n    easeCircle,\n    easeLinear,\n    easeElastic\n} from 'd3-ease';\nimport {\n   color,\n   rgb,\n   hsl\n} from 'd3-color';\nimport { voronoi } from 'd3-voronoi';\nimport { dataSelect } from './DataSystem';\nimport { DATA_TYPE, SORT_ORDER_ASCENDING, SORT_ORDER_DESCENDING } from './enums';\nimport * as STACK_CONFIG from './enums/stack-config';\n\nconst { CATEGORICAL, TEMPORAL } = DimensionSubtype;\nconst { STRING, FUNCTION } = DATA_TYPE;\nconst { InvalidAwareTypes } = DataModel;\nconst HTMLElement = window.HTMLElement;\n\nconst isSimpleObject = (obj) => {\n    let token;\n    if (typeof obj === 'object') {\n        if (obj === null) { return false; }\n        token = Object.prototype.toString.call(obj);\n        if (token === '[object Object]') {\n            return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n        }\n    }\n    return false;\n};\n\n/**\n * Returns unique id\n * @return {string} Unique id string\n */\nconst\n    getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Deep copies an object and returns a new object.\n * @param {Object} o Object to clone\n * @return {Object} New Object.\n */\nconst clone = (o) => {\n    const output = {};\n    let v;\n    for (const key in o) {\n        if ({}.hasOwnProperty.call(o, key)) {\n            v = o[key];\n            output[key] = isSimpleObject(v) ? clone(v) : v;\n        }\n    }\n    return output;\n};\n\n/**\n* Checks the existence of keys in an object\n* @param {Array} keys Set of keys which are to be checked\n* @param {Object} obj whose keys are checked from the set of keys provided\n* @return {Object} Error if the keys are absent, or the object itself\n*/\nconst checkExistence = (keys, obj) => {\n    const nonExistentKeys = [];\n    keys.forEach((key) => {\n        if (key in obj) {\n            return;\n        }\n        nonExistentKeys.push(key);\n    });\n    return nonExistentKeys;\n};\n\nconst sanitizeIP = {\n    typeObj: (keys, obj) => {\n        if (typeof obj !== 'object') {\n            return Error('Argument type object expected');\n        }\n\n        const nonExistentKeys = checkExistence(keys, obj);\n        if (nonExistentKeys.length) {\n            return Error(`Missing keys from parameter ${nonExistentKeys.join(', ')}`);\n        }\n        return obj;\n    },\n\n    /* istanbul ignore next */ htmlElem: (elem) => {\n        if (!(elem instanceof HTMLElement)) {\n            return Error('HTMLElement required');\n        }\n        return elem;\n    }\n};\n\n/**\n * Gets the maximum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Maximum value\n */\nconst getMax = (data, field) => Math.max(...data.map(d => d[field]));\n\n/**\n * Gets the minimum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Minimum value\n */\nconst getMin = (data, field) => Math.min(...data.map(d => d[field]));\n\n/**\n * Gets the domain from the data based on the field name and type of field\n * @param  {Array.<Object> | Array.<Array>} data       Data Array\n * @param  {Array.<string>} fields    Array of fields from where the domain will be calculated\n * @param {string} fieldType Type of field - nominal, quantitiative, temporal.\n * @return {Array} Usually contains a min and max value if field is quantitative or\n * an array of values if field type is nominal or ordinal\n */\nconst getDomainFromData = (data, fields, fieldType) => {\n    let domain;\n    const domArr = [];\n    data = data[0] instanceof Array ? data : [data];\n    switch (fieldType) {\n    case CATEGORICAL:\n        domain = [].concat(...data.map(arr => arr.map(d => d[fields[0]]).filter(d => d !== undefined)));\n        break;\n    default:\n        for (let i = 0, len = data.length; i < len; i++) {\n            const arr = data[i];\n            const [field0, field1] = fields;\n            const arr0 = arr.filter(d => !isNaN(d[field0]));\n            const arr1 = arr.filter(d => !isNaN(d[field1]));\n            if (arr0.length || arr1.length) {\n                const firstMin = getMin(arr0, field0);\n                const secondMin = getMin(arr1, field1);\n                const firstMax = getMax(arr0, field0);\n                const secondMax = getMax(arr1, field1);\n                domArr.push([Math.min(firstMin, secondMin), Math.max(firstMax, secondMax)]);\n            }\n        }\n        domain = domArr.length ? [Math.min(...domArr.map(d => d[0])), Math.max(...domArr.map(d => d[1]))] : [];\n        break;\n    }\n    return domain;\n};\n\nconst sanitizeDomainWhenEqual = (domain) => {\n    if (domain[0] === domain[1]) {\n        domain[0] = domain[0] > 0 ? 0 : domain[0];\n        domain[1] = domain[1] > 0 ? domain[1] : 0;\n    }\n    return domain;\n};\n\n/**\n * Union Domain values\n * @param {Array.<Array>} domains Array of domain values\n * @param {string} fieldType type of field - dimension,measure or datetime.\n * @return {Array} Unioned domain of all domain values.\n */\nconst unionDomain = (domains, fieldType) => {\n    let domain = [];\n    domains = domains.filter(dom => dom && dom.length);\n    if (domains.length) {\n        if (fieldType === CATEGORICAL) {\n            domain = [].concat(...domains);\n        } else {\n            domain = [Math.min(...domains.map(d => d[0])), Math.max(...domains.map(d => d[1]))];\n        }\n    }\n\n    return domain;\n};\n\nconst symbolFns = {\n    circle: symbolCircle,\n    cross: symbolCross,\n    diamond: symbolDiamond,\n    square: symbolSquare,\n    star: symbolStar,\n    wye: symbolWye,\n    triangle: symbolTriangle\n};\n\nconst easeFns = {\n    cubic: easeCubic,\n    bounce: easeBounce,\n    linear: easeLinear,\n    elastic: easeElastic,\n    back: easeBack,\n    poly: easePoly,\n    circle: easeCircle\n};\n\n/**\n * Returns the maximum or minimum points of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @param {string} minOrMax minimum or maximum.\n * @return {Object} Minimum or maximum point.\n */\nconst getExtremePoint = (points, compareValue, minOrMax) => {\n    let extremePoint;\n    let point;\n    const len = points.length;\n    let minOrMaxVal = minOrMax === 'max' ? -Infinity : Infinity;\n    let val;\n\n    for (let i = 0; i < len; i++) {\n        point = points[i];\n        val = point[compareValue];\n        if (minOrMax === 'min' ? val < minOrMaxVal : val > minOrMaxVal) {\n            minOrMaxVal = val;\n            extremePoint = point;\n        }\n    }\n\n    return extremePoint;\n};\n\n/**\n * Returns the minimum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Minimum point.\n */\nconst getMinPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'min');\n\n/**\n * Returns the maximum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Maximum point.\n */\nconst getMaxPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'max');\n\n/**\n * Gets the index of the closest value of the given value from the array.\n * @param {Array} arr Array of values\n * @param {number} value Value from which the nearest value will be calculated.\n * @param {string} side side property.\n * @return {number} index of the closest value\n */\n/* istanbul ignore next */const getClosestIndexOf = (arr, value, side) => {\n    let low = 0;\n    const arrLen = arr.length;\n    let high = arrLen - 1;\n\n    let mid;\n    let d1;\n    let d2;\n\n    while (low < high) {\n        mid = Math.floor((low + high) / 2);\n        d1 = Math.abs(arr[mid] - value);\n        d2 = Math.abs(arr[mid + 1] - value);\n\n        if (d2 <= d1) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n\n    if (!side) {\n        return high;\n    }\n\n    const highVal = arr[high];\n    if (highVal === value) {\n        return high;\n    } else if (highVal > value) {\n        if (high === 0) { return high; }\n        return side === 'left' ? high - 1 : high;\n    }\n    if (high === arr.length - 1) { return high; }\n    return side === 'left' ? high : high + 1;\n};\n\nconst getNearestValue = (data, key) => {\n    const filterData = data.filter(d => typeof d === 'number');\n    return filterData[getClosestIndexOf(filterData, key)];\n};\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst getWindow = () => window;\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst reqAnimFrame = (() => requestAnimationFrame)();\n\nconst cancelAnimFrame = (() => cancelAnimationFrame)();\n\n/**\n * Capitalizes the first letter of the word\n * @param {string} text word\n * @return {string} Capitalized word\n */\nconst capitalizeFirst = (text) => {\n    text = text.toLowerCase();\n\n    return text.replace(/\\w\\S*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1));\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst unique = arr => ([...new Set(arr)]);\n\n/**\n * Gets the minimum difference between two consecutive numbers  in an array.\n * @param {Array} arr Array of numbers\n * @param {number} index index of the value\n * @return {number} minimum difference between values\n */\n/* istanbul ignore next */ const getMinDiff = (arr, index) => {\n    let diff;\n    let uniqueVals;\n    if (index !== undefined) {\n        uniqueVals = unique(arr.map(d => d[index]));\n    } else {\n        uniqueVals = unique(arr);\n    }\n    if (uniqueVals.length > 1) {\n        diff = Math.abs(uniqueVals[1] - uniqueVals[0]);\n        for (let i = 2, len = uniqueVals.length; i < len; i++) {\n            diff = Math.min(diff, Math.abs(uniqueVals[i] - uniqueVals[i - 1]));\n        }\n    } else {\n        diff = uniqueVals[0];\n    }\n\n    return diff;\n};\n\n/**\n * Returns the class name appended with a given id.\n * @param {string} cls class name\n * @param {string} id unique identifier\n * @param {string} prefix string needed to add before the classname\n * @return {string} qualified class name\n */\n/* istanbul ignore next */const getQualifiedClassName = (cls, id, prefix) => {\n    cls = cls.replace(/^\\.*/, '');\n    return [`${prefix}-${cls}`, `${prefix}-${cls}-${id}`];\n};\n\n/**\n * This method is used to set the default value for variables\n * without sullying the code with conditional statements.\n *\n * @export\n * @param {any} param The parameter to test.\n * @param {any} value The default value to assign.\n * @return {any} The value.\n */\n/* istanbul ignore next */ const defaultValue = (param, value) => {\n    if (typeof param === 'undefined' || (typeof param === 'object' && !param)) {\n        return value;\n    }\n    return param;\n};\n\n/**\n * DESCRIPTION TODO\n *\n * @export\n * @param {Object} graph graph whose dependency order has to be generated\n * @return {Object}\n */\nconst getDependencyOrder = (graph) => {\n    const dependencyOrder = [];\n    const visited = {};\n    const keys = Object.keys(graph);\n    /**\n     * DESCRIPTION TODO\n     *\n     * @export\n     * @param {Object} name\n     * @return {Object}\n     */\n    const visit = (name) => {\n        if (dependencyOrder.length === keys.length) {\n            return true;\n        }\n        visited[name] = true;\n        const edges = graph[name];\n        for (let e = 0; e < edges.length; e++) {\n            const dep = edges[e];\n            if (!visited[dep]) {\n                visit(dep);\n            }\n        }\n\n        dependencyOrder.push(name);\n        return false;\n    };\n\n    for (let i = 0; i < keys.length; i++) {\n        if (visit(keys[i], i)) break;\n    }\n\n    return dependencyOrder;\n};\n\n/**\n * Iterates over the properties of an object and applies the function\n *\n * @param {any} obj object to be iterated upon\n * @param {any} fn  function to be applied on it\n */\nconst objectIterator = (obj, fn) => {\n    for (const key in obj) {\n        if (Object.hasOwnProperty.call(obj, key)) {\n            fn(key, obj);\n        }\n    }\n};\n\n/**\n * This class creates a d3 voronoi for retrieving the nearest neighbour of any point from a set of two\n * dimensional points\n * @class Voronoi\n */\n/* istanbul ignore next */ class Voronoi {\n    /**\n     * Initialize the voronoi with the data given.\n     * @param {Array.<Object>} data Array of points.\n     */\n    constructor (data = []) {\n        this._voronoi = voronoi().x(d => d.x).y(d => d.y);\n        this.data(data);\n    }\n\n    /**\n     * Sets the data to voronoi\n     * @param {Array.<Object>} data Array of objects.\n     * @return {Voronoi} Instance of voronoi.\n     */\n    data (data) {\n        if (data) {\n            this._voronoiFn = this._voronoi(data);\n        }\n        return this;\n    }\n\n    /**\n     * Finds the closest point to the x and y position given.\n     * @param {number} x x value\n     * @param {number} y y value\n     * @param {number} radius search radius.\n     * @return {Object} Details of the nearest point.\n     */\n    find (x, y, radius) {\n        return this._voronoiFn.find(x, y, radius);\n    }\n}\n\nconst getObjProp = (obj, ...fields) => {\n    if (obj === undefined || obj === null) {\n        return obj;\n    }\n    let retObj = obj;\n    for (let i = 0, len = fields.length; i < len; i++) {\n        retObj = retObj[fields[i]];\n        if (retObj === undefined || retObj === null) {\n            break;\n        }\n    }\n    return retObj;\n};\n\n/**\n * Sanitize an input number / string mixed number. Currently dot in the no is not supported.\n *\n * @param {number | string} val pure number or string mixed number\n * @return {number | null}  Number if it can be extracted. Otherwise null\n */\nconst intSanitizer = (val) => {\n    const arr = val.toString().match(/(\\d+)(px)*/g);\n    if (!arr) {\n        // If only characters are passed\n        return null;\n    }\n\n    return parseInt(arr[0], 10);\n};\n\nconst generateGetterSetters = (context, props) => {\n    Object.entries(props).forEach((propInfo) => {\n        const prop = propInfo[0];\n        const { sanitization, preset, onset, typeChecker, defaultValue: defVal } = propInfo[1];\n        const prototype = context.constructor.prototype;\n        if (!(Object.hasOwnProperty.call(prototype, prop))) {\n            if (defVal) {\n                context[`_${prop}`] = defVal;\n            }\n            context[prop] = (...params) => {\n                if (params.length) {\n                    let value = params[0];\n                    if (sanitization) {\n                        value = sanitization(context, params[0], context[`_${prop}`]);\n                    }\n                    if (preset) {\n                        preset(context, value);\n                    }\n                    if (typeChecker && !typeChecker(value)) {\n                        return context[`_${prop}`];\n                    }\n                    context[`_${prop}`] = value;\n                    if (onset) {\n                        onset(context, value);\n                    }\n                    return context;\n                } return context[`_${prop}`];\n            };\n        }\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} prop\n */\nconst getArraySum = (arr, prop) => arr.reduce((total, elem) => {\n    total += prop ? elem[prop] : elem;\n    return total;\n}, 0);\n\n/**\n *\n *\n * @param {*} arr1\n * @param {*} arr2\n *\n */\nconst arraysEqual = (arr1, arr2) => {\n    if (arr1.length !== arr2.length) { return false; }\n    for (let i = arr1.length; i >= 0; i--) {\n        if (arr1[i] !== arr2[i]) { return false; }\n    }\n\n    return true;\n};\n\n/* eslint valid-typeof:0 */\n/**\n * Returns a validation function which can be used to validate variables against a type and value\n *\n * @param {any} type type of value that the object should have\n * @return {Object} validation function\n */\nconst isEqual = type => (oldVal, newVal) => {\n    if (type === 'Array') {\n        if (!oldVal) {\n            return false;\n        }\n        return arraysEqual(oldVal, newVal);\n    } else if (type === 'Object') {\n        return Object.is(oldVal, newVal);\n    } return oldVal === newVal;\n};\n\n/**\n * Description @todo\n *\n * @param {any} transactionModel @todo\n * @param {any} transactionEndpoint @todo\n * @param {any} transactionItems @todo\n * @return {any} @todo\n */\nconst enableChainedTransaction = (transactionModel, transactionEndpoint, transactionItems) =>\n    transactionItems.forEach(item => transactionModel\n        .registerImmediateListener(item, ([, newVal]) => transactionEndpoint[item](newVal)));\n\n/**\n * Chceks if the element is istanceof HTMLElement\n *\n * @param {Object} elem any JS Object\n */\nconst isHTMLElem = elem => elem instanceof HTMLElement;\n\nconst ERROR_MSG = {\n    INTERFACE_IMPL: 'Method not implemented'\n};\n\n/**\n * Merges the sink object in the source by recursively iterating through the object properties\n * @param {Object} source Source Object\n * @param {Object} sink Sink Object\n * @return {Object} Merged object\n */\nconst mergeRecursive = (source, sink) => {\n    for (const prop in sink) {\n        if (isSimpleObject(source[prop]) && isSimpleObject(sink[prop])) {\n            mergeRecursive(source[prop], sink[prop]);\n        } else if (sink[prop] instanceof Object && sink[prop].constructor === Object) {\n            source[prop] = {};\n            mergeRecursive(source[prop], sink[prop]);\n        } else {\n            source[prop] = sink[prop];\n        }\n    }\n    return source;\n};\n\n/**\n * Creates a selection set from a data set with corresponding attributes\n *\n * @export\n * @param {Selection} sel contains previous selection\n * @param {Object} appendObj Object to be appended\n * @param {Array} data Data based on which the selection is entered/updated/removed\n * @param {Object} [attrs={}] Attributes to be set on the data\n * @return {Selection} Merged selection\n */\nconst createSelection = (sel, appendObj, data, idFn) => {\n    let selection = sel || dataSelect(idFn);\n\n    selection = selection.data(data);\n\n    const enter = selection.enter().append(appendObj);\n    const mergedSelection = enter.merge(selection);\n\n    const exitSelection = selection.exit();\n    exitSelection.getObjects().forEach(inst => inst.remove());\n    exitSelection.remove();\n    return mergedSelection;\n};\n\nconst interpolateArray = (data, fitCount) => {\n    const linearInterpolate = function (before, after, atPoint) {\n        return before + (after - before) * atPoint;\n    };\n    const newData = [];\n    const springFactor = ((data.length - 1) / (fitCount - 1));\n    newData[0] = data[0]; // for new allocation\n    for (let i = 1; i < fitCount - 1; i++) {\n        const tmp = i * springFactor;\n        const before = (Math.floor(tmp)).toFixed();\n        const after = (Math.ceil(tmp)).toFixed();\n        const atPoint = tmp - before;\n        newData[i] = linearInterpolate(data[before], data[after], atPoint);\n    }\n    newData[fitCount - 1] = data[data.length - 1]; // for new allocation\n    return newData;\n};\n\n/**\n *\n *\n * @param {*} fn\n */\nconst nextFrame = (fn) => {\n    setTimeout(() => {\n        fn();\n    }, 0);\n};\n\n/**\n *\n *\n * @param {*} angle\n */\nconst angleToRadian = angle => angle * Math.PI / 180;\n\n/**\n *\n *\n * @param {*} newName\n * @param {*} oldName\n */\nconst replaceCSSPrefix = () => {\n    // @todo\n};\n\n/**\n * Gets the  interpolator function from d3 color\n *\n */\nconst interpolator = () => interpolate;\n\n/**\n * Gets the number interpolator from d3 color\n *\n */\nconst numberInterpolator = () => interpolateNumber;\n\n/**\n * Gets the rgb interpolator from d3 color\n *\n */\nconst colorInterpolator = () => interpolateRgb;\n\n/**\n * Gets the hsl interpolator from d3 color\n *\n */\nconst hslInterpolator = () => interpolateHslLong;\n\nconst transformColors = () => ({\n    color,\n    rgb,\n    hsl\n});\n\n/**\n * Gets the piecewise interpolator from d3 color\n *\n */\nconst piecewiseInterpolator = () => piecewise;\n\nfunction hue2rgb (p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n\n  /**\n   * Converts an HSL color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n   * Assumes h, s, and l are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  l       The lightness\n   * @return  Array           The RGB representation\n   */\nconst hslToRgb = (h, s, l, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    if (s === 0) {\n        r = g = b = l; // achromatic\n    } else {\n        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const p = 2 * l - q;\n\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\n  /**\n   * Converts an RGB color value to HSV. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes r, g, and b are contained in the set [0, 255] and\n   * returns h, s, and v in the set [0, 1].\n   *\n   * @param   Number  r       The red color value\n   * @param   Number  g       The green color value\n   * @param   Number  b       The blue color value\n   * @return  Array           The HSV representation\n   */\nconst rgbToHsv = (r, g, b, a = 1) => {\n    r = +r; g = +g; b = +b; a = +a;\n    r /= 255; g /= 255; b /= 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let h;\n    let s;\n    const l = (max + min) / 2;\n\n    if (max === min) {\n        h = s = 0; // achromatic\n    } else {\n        const d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n        case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n        case g: h = (b - r) / d + 2; break;\n        case b: h = (r - g) / d + 4; break;\n        default: break;\n        }\n        h /= 6;\n    }\n    return [h, s, l, a];\n};\n\n  /**\n   * Converts an HSV color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes h, s, and v are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  v       The value\n   * @return  Array           The RGB representation\n   */\nconst hsvToRgb = (h, s, v, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    const i = Math.floor(h * 6);\n    const f = h * 6 - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n    case 0: r = v; g = t; b = p; break;\n    case 1: r = q; g = v; b = p; break;\n    case 2: r = p; g = v; b = t; break;\n    case 3: r = p; g = q; b = v; break;\n    case 4: r = t; g = p; b = v; break;\n    case 5: r = v; g = p; b = q; break;\n    default: break;\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\nconst hexToHsv = (hex) => {\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    hex = hex.replace(shorthandRegex, (m, r, g, b) => r + r + g + g + b + b);\n\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? rgbToHsv(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) : '';\n};\n\nconst detectColor = (col) => {\n    const matchRgb = /rgb\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})\\)/;\n    const matchHsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g;\n\n    // Source :  https://gist.github.com/sethlopezme/d072b945969a3cc2cc11\n     // eslint-disable-next-line\n    const matchRgba = /rgba?\\(((25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,\\s*?){2}(25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,?\\s*([01]\\.?\\d*?)?\\)/;\n     // eslint-disable-next-line\n    const matchHsla = /^hsla\\(([\\d.]+),\\s*([\\d.]+)%,\\s*([\\d.]+)%,\\s*(\\d*(?:\\.\\d+)?)\\)$/;\n    const matchHex = /^#([0-9a-f]{3}){1,2}$/i;\n\n    if (matchRgb.test(col) || matchRgba.test(col)) {\n        return 'rgb';\n    } else if (matchHsl.test(col) || matchHsla.test(col)) {\n        return 'hsl';\n    } else if (matchHex.test(col)) {\n        return 'hex';\n    } return col;\n};\n\nconst assembleModelFromIdentifiers = (model, identifiers) => {\n    let schema = [];\n    let data;\n    const fieldMap = model.getFieldsConfig();\n    if (identifiers.length) {\n        const fields = identifiers[0];\n        const len = fields.length;\n        for (let i = 0; i < len; i++) {\n            const field = fields[i];\n            const fieldObj = fieldMap[field] && Object.assign({}, fieldMap[field].def);\n            if (fieldObj) {\n                schema.push(Object.assign(fieldObj));\n            }\n        }\n\n        data = [];\n        const header = identifiers[0];\n        for (let i = 1; i < identifiers.length; i += 1) {\n            const vals = identifiers[i];\n            const temp = {};\n            vals.forEach((fieldVal, cIdx) => {\n                temp[header[cIdx]] = fieldVal;\n            });\n            data.push(temp);\n        }\n    } else {\n        data = [];\n        schema = [];\n    }\n\n    return new model.constructor(data, schema);\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} criteria\n *\n */\nconst getDataModelFromRange = (dataModel, criteria, mode) => {\n    if (criteria === null) {\n        return null;\n    }\n    const selFields = Object.keys(criteria);\n    const selFn = fields => selFields.every((field) => {\n        const val = fields[field].internalValue;\n        const range = criteria[field][0] instanceof Array ? criteria[field][0] : criteria[field];\n        if (typeof range[0] === STRING) {\n            return range.find(d => d === val) !== undefined;\n        }\n        return range ? val >= range[0] && val <= range[1] : true;\n    });\n\n    return dataModel.select(selFn, {\n        saveChild: false,\n        mode\n    });\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} identifiers\n *\n */\nconst getDataModelFromIdentifiers = (dataModel, identifiers, mode) => {\n    let filteredDataModel;\n    if (identifiers instanceof Array) {\n        const fieldsConfig = dataModel.getFieldsConfig();\n\n        const dataArr = identifiers.slice(1, identifiers.length);\n        if (identifiers instanceof Function) {\n            filteredDataModel = identifiers(dataModel, {}, false);\n        } else if (identifiers instanceof Array && identifiers[0].length) {\n            const filteredSchema = identifiers[0].filter(d => d in fieldsConfig);\n            filteredDataModel = dataModel.select((fields) => {\n                let include = true;\n                filteredSchema.forEach((propField, idx) => {\n                    const value = fields[propField].internalValue;\n                    const index = dataArr.findIndex(d => d[idx] === value);\n                    include = include && index !== -1;\n                });\n                return include;\n            }, {\n                saveChild: false,\n                mode\n            });\n        } else {\n            filteredDataModel = dataModel.select(() => false, {\n                saveChild: false,\n                mode\n            });\n        }\n    } else {\n        filteredDataModel = getDataModelFromRange(dataModel, identifiers, mode);\n    }\n    return filteredDataModel;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} listenerMap\n */\nconst registerListeners = (context, listenerMap, ...params) => {\n    const propListenerMap = listenerMap(context, ...params);\n    for (const key in propListenerMap) {\n        if ({}.hasOwnProperty.call(propListenerMap, key)) {\n            const { namespace } = params[1];\n            let ns = null;\n            if (namespace) {\n                ns = namespace;\n            }\n            const mapObj = propListenerMap[key];\n            const propType = mapObj.type;\n            const props = mapObj.props;\n            const listenerFn = mapObj.listener;\n            context.store()[propType](props, listenerFn, false, {\n                namespace: ns\n            });\n        }\n    }\n};\n\nconst isValidValue = value => !isNaN(value) && value !== -Infinity && value !== Infinity;\n/**\n *\n *\n * @param {*} str\n *\n */\nconst escapeHTML = (str) => {\n    const htmlEscapes = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#x27;',\n        '/': '&#x2F;'\n    };\n    const htmlEscaper = /[&<>\"'/]/g;\n    return (`${str}`).replace(htmlEscaper, match => htmlEscapes[match]);\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst transposeArray = arr => arr[0].map((col, i) => arr.map(row => row[i]));\nconst toArray = arr => (arr instanceof Array ? arr : [arr]);\nconst extendsClass = (cls, extendsFrom, found) => {\n    if (!cls) {\n        return false;\n    }\n    const prototype = cls.prototype;\n    if (prototype instanceof extendsFrom) {\n        found = true;\n    } else {\n        found = extendsClass(prototype, extendsFrom, found);\n    }\n    return found;\n};\n\n/**\n *\n * @param {*} dm1\n * @param {*} dm2\n */\nconst concatModels = (dm1, dm2) => {\n    const dataObj1 = dm1.getData();\n    const dataObj2 = dm2.getData();\n    const data1 = dataObj1.data;\n    const data2 = dataObj2.data;\n    const schema1 = dataObj1.schema;\n    const schema2 = dataObj2.schema;\n    const tuples1 = {};\n    const tuples2 = {};\n    const commonTuples = {};\n    for (let i = 0; i < data1.length; i++) {\n        for (let ii = 0; ii < data2.length; ii++) {\n            const row1 = data1[i];\n            const row2 = data2[ii];\n            const dim1Values = row1.filter((d, idx) => schema1[idx].type === FieldType.DIMENSION);\n            const dim2Values = row2.filter((d, idx) => schema2[idx].type === FieldType.DIMENSION);\n            const allDimSame = dim1Values.every(value => dim2Values.indexOf(value) !== -1);\n            if (allDimSame) {\n                const key = dim1Values.join();\n                !commonTuples[key] && (commonTuples[key] = {});\n                row1.forEach((value, idx) => {\n                    commonTuples[key][schema1[idx].name] = value;\n                });\n                row2.forEach((value, idx) => {\n                    commonTuples[key][schema2[idx].name] = value;\n                });\n            } else {\n                const dm1Key = dim1Values.join();\n                const dm2Key = dim2Values.join();\n                if (!commonTuples[dm1Key] && !commonTuples[dm2Key]) {\n                    !tuples1[dm1Key] && (tuples1[dm1Key] = {});\n                    !tuples2[dm2Key] && (tuples2[dm2Key] = {});\n                    row1.forEach((value, idx) => {\n                        tuples1[dm1Key][schema1[idx].name] = value;\n                    });\n                    row2.forEach((value, idx) => {\n                        tuples2[dm2Key][schema2[idx].name] = value;\n                    });\n                }\n            }\n        }\n    }\n\n    const commonSchema = [...schema1, ...schema2.filter(s2 => schema1.findIndex(s1 => s1.name === s2.name) === -1)];\n    const data = [...Object.values(tuples1), ...Object.values(tuples2), ...Object.values(commonTuples)];\n    return [data, commonSchema];\n};\n\nconst getSymbol = type => symbol().type(symbolFns[type]);\n\nconst stackOrders = {\n    [STACK_CONFIG.ORDER_NONE]: stackOrderNone,\n    [STACK_CONFIG.ORDER_ASCENDING]: stackOrderAscending,\n    [STACK_CONFIG.ORDER_DESCENDING]: stackOrderDescending\n};\nconst stackOffsets = {\n    [STACK_CONFIG.OFFSET_DIVERGING]: stackOffsetDiverging,\n    [STACK_CONFIG.OFFSET_NONE]: stackOffsetNone,\n    [STACK_CONFIG.OFFSET_EXPAND]: stackOffsetExpand,\n    [STACK_CONFIG.OFFSET_WIGGLE]: stackOffsetWiggle\n};\n\n// eslint-disable-next-line require-jsdoc\nconst stack = params => d3Stack().keys(params.keys).offset(stackOffsets[params.offset])\n                .order(stackOrders[params.order])(params.data);\n\n/**\n * Groups the data into a hierarchical tree structure based on one or more fields.\n * @param { Object } params Configuration properties for nesting data\n * @param { Array.<Array> } params.data Data which needs to be grouped\n * @param { Array.<number> } params.keys Field indices by which the data will be grouped\n * @return { Array.<Object> } Grouped data array\n */\nconst nestCollection = (params) => {\n    const nestFn = nest();\n    params.keys.forEach(key => nestFn.key(d => d[key]));\n    return nestFn.entries(params.data);\n};\n\nconst pathInterpolators = {\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    stepAfter: curveStepAfter,\n    catmullRom: curveCatmullRom,\n    step: curveStep,\n    stepBefore: curveStepBefore,\n    linear: curveLinear\n};\n\nconst Symbols = {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom,\n    line,\n    area,\n    pie,\n    arc,\n    nest\n};\n\nconst Scales = {\n    band: scaleBand\n};\n\nconst getSmallestDiff = (points) => {\n    points = points.sort((a, b) => a - b);\n    let minDiff = points[1] - points[0];\n    for (let i = 2; i < points.length; i++) {\n        minDiff = Math.min(minDiff, points[i] - points[i - 1]);\n    }\n\n    return minDiff;\n};\n\nconst timeFormats = {\n    millisecond: '%A, %b %e, %H:%M:%S.%L',\n    second: '%A, %b %e, %H:%M:%S',\n    minute: '%A, %b %e, %H:%M',\n    hour: '%A, %b %e, %H:%M',\n    day: '%A, %b %e, %Y',\n    month: '%B %Y',\n    year: '%Y'\n};\n\nconst timeDurations = [\n    ['millisecond', 'second', 'minute', 'hour', 'day', 'month', 'year'],\n    [1, 1000, 60000, 3600000, 86400000, 2592000000, 31536000000]\n];\n\nconst getNearestInterval = (interval) => {\n    const index = getClosestIndexOf(timeDurations[1], interval);\n    return timeDurations[0][index];\n};\n\nconst formatTemporal = (value, interval) => {\n    const nearestInterval = getNearestInterval(interval);\n    return DateTimeFormatter.formatAs(value, timeFormats[nearestInterval]);\n};\n\nconst temporalFields = (dataModel) => {\n    const filteredFields = {};\n    Object.entries(dataModel.getFieldspace().getDimension()).forEach(([fieldName, fieldObj]) => {\n        if (fieldObj.subtype() === TEMPORAL) {\n            filteredFields[fieldName] = fieldObj;\n        }\n    });\n    return filteredFields;\n};\n\nconst require = (lookupWhat, lookupDetails) => ({\n    resolvable: (store) => {\n        const lookupTarget = store[lookupWhat];\n        const depArr = lookupDetails.slice(0, lookupDetails.length - 1);\n        const fn = lookupDetails[lookupDetails.length - 1]; // fn\n\n        const deps = depArr.map(str => lookupTarget[str]);\n        return {\n            fn: fn(...deps),\n            depArr\n        };\n    }\n});\n\nconst nextAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||\n    function (callback) {\n        setTimeout(callback, 16);\n    };\n\nconst getValueParser = config => (val) => {\n    if (val instanceof InvalidAwareTypes) {\n        return val in config ? config[val] : `${val}`;\n    }\n    return val;\n};\n\nconst retrieveNearestGroupByReducers = (dataModel, ...measureFieldNames) => {\n    const filteredReducers = {};\n    if (dataModel instanceof DataModel) {\n        const derivations = [...dataModel.getDerivations().reverse(), ...dataModel.getAncestorDerivations().reverse()];\n        const nearestReducers = defaultValue(\n            getObjProp(derivations.find(derv => derv.op === DM_DERIVATIVES.GROUPBY), 'criteria'), {});\n\n        const measures = dataModel.getFieldspace().getMeasure();\n        measureFieldNames = measureFieldNames.length ? measureFieldNames : Object.keys(measures);\n        measureFieldNames.forEach((measureName) => {\n            if (nearestReducers[measureName]) {\n                filteredReducers[measureName] = nearestReducers[measureName];\n            } else {\n                const measureField = measures[measureName];\n                if (measureField) {\n                    filteredReducers[measureName] = measureField.defAggFn();\n                }\n            }\n        });\n    }\n    return filteredReducers;\n};\n\nconst retrieveFieldDisplayName = (dm, fieldName) => dm.getFieldspace().fieldsObj()[fieldName].displayName();\n/**\n * Fetches the nearest sort operation details by traversing the chain of parent DataModels\n * @param {Object} dataModel Instance of DataModel\n *\n * @return {Array|null} sort criteria, null if no sort operation found\n */\nconst nearestSortingDetails = (dataModel) => {\n    const allDerivations = [...dataModel.getAncestorDerivations(), ...dataModel.getDerivations()];\n    const nearestSortDerivation = allDerivations.reverse().find(derivation => derivation.op === DM_DERIVATIVES.SORT);\n\n    return nearestSortDerivation ? nearestSortDerivation.criteria : null;\n};\n\n/**\n * Map containing key, value sortingOrder pairs\n */\nconst sortOrderMap = {\n    [SORT_ORDER_ASCENDING]: (firstVal, secondVal) => firstVal.localeCompare(secondVal),\n    [SORT_ORDER_DESCENDING]: (firstVal, secondVal) => secondVal.localeCompare(firstVal)\n};\n\n/**\n * Sort categorical field based on it's sorting order\n * @param {string} sortOrder Order by which field is to be sorted (asc or desc or func)\n * @param {string} firstVal First sort parameter\n * @param {string} secondVal Second sort parameter\n * @return {number} position\n*/\nconst sortCategoricalField = (sortOrder, firstVal, secondVal) => {\n    const sortOrderType = typeof sortOrder;\n\n    if (sortOrderType === FUNCTION) {\n        return sortOrder(firstVal, secondVal);\n    } else if (sortOrderType === STRING) {\n        return sortOrderMap[sortOrder](firstVal, secondVal);\n    }\n    return null;\n};\n\nconst intersect = (arr1, arr2, accessors = [v => v, v => v]) => {\n    const [fn1, fn2] = accessors;\n    const set = new Set(arr2.map(v => fn2(v)));\n    return arr1.filter(value => set.has(fn1(value)));\n};\n\nexport {\n    getValueParser,\n    require,\n    intersect,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    stack,\n    nestCollection,\n    getSymbol,\n    transformColors,\n    detectColor,\n    hexToHsv,\n    hslToRgb,\n    rgbToHsv,\n    hsvToRgb,\n    concatModels,\n    toArray,\n    angleToRadian,\n    escapeHTML,\n    generateGetterSetters,\n    getArraySum,\n    interpolator,\n    piecewiseInterpolator,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    colorInterpolator,\n    numberInterpolator,\n    ERROR_MSG,\n    reqAnimFrame,\n    nextAnimFrame,\n    transposeArray,\n    cancelAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    symbolFns,\n    easeFns,\n    clone,\n    isEqual,\n    interpolateArray,\n    getMinPoint,\n    defaultValue,\n    getMaxPoint,\n    getClosestIndexOf,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    enableChainedTransaction,\n    isHTMLElem,\n    isSimpleObject,\n    nextFrame,\n    registerListeners,\n    replaceCSSPrefix,\n    getObjProp,\n    extendsClass,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    hslInterpolator,\n    getSmallestDiff,\n    getNearestValue,\n    retrieveNearestGroupByReducers,\n    nearestSortingDetails,\n    createSelection,\n    formatTemporal,\n    temporalFields,\n    retrieveFieldDisplayName,\n    sanitizeDomainWhenEqual,\n    sortCategoricalField\n};\n","export function linear(t) {\n  return +t;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","import Selection from './selection';\n/**\n * This function applies a selection operation on a data array.\n *\n * @export\n * @param {Array} [data=[]] The data array to be observed.\n * @return {Selection} Instance of a selection.\n */\nexport default function dataSelect (idFn) {\n    return new Selection(idFn);\n}\n\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","export default function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n}\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_join from \"./join\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  join: selection_join,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","export default function(onenter, onupdate, onexit) {\n  var enter = this.enter(), update = this, exit = this.exit();\n  enter = typeof onenter === \"function\" ? onenter(enter) : enter.append(onenter + \"\");\n  if (onupdate != null) update = onupdate(update);\n  if (onexit == null) exit.remove(); else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"cancel\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTED) throw new Error(\"too late; already running\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions.\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(node, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {set} from \"./schedule\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleNull(name, interpolate) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        string1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, string10 = string1);\n  };\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = style(this, name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        value1 = value(this),\n        string1 = value1 + \"\";\n    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction styleMaybeRemove(id, name) {\n  var on0, on1, listener0, key = \"style.\" + name, event = \"end.\" + key, remove;\n  return function() {\n    var schedule = set(this, id),\n        on = schedule.on,\n        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n      .styleTween(name, styleNull(name, i))\n      .on(\"end.style.\" + name, styleRemove(name))\n    : typeof value === \"function\" ? this\n      .styleTween(name, styleFunction(name, i, tweenValue(this, \"style.\" + name, value)))\n      .each(styleMaybeRemove(this._id, name))\n    : this\n      .styleTween(name, styleConstant(name, i, value), priority)\n      .on(\"end.style.\" + name, null);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\nimport transition_end from \"./end\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease,\n  end: transition_end\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttribute(name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttributeNS(fullname.space, fullname.local);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttribute(name);\n    string0 = this.getAttribute(name);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    string0 = this.getAttributeNS(fullname.space, fullname.local);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrInterpolate(name, i) {\n  return function(t) {\n    this.setAttribute(name, i(t));\n  };\n}\n\nfunction attrInterpolateNS(fullname, i) {\n  return function(t) {\n    this.setAttributeNS(fullname.space, fullname.local, i(t));\n  };\n}\n\nfunction attrTweenNS(fullname, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","function styleInterpolate(name, i, priority) {\n  return function(t) {\n    this.style.setProperty(name, i(t), priority);\n  };\n}\n\nfunction styleTween(name, value, priority) {\n  var t, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\n    return t;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {set} from \"./schedule\";\n\nexport default function() {\n  var on0, on1, that = this, id = that._id, size = that.size();\n  return new Promise(function(resolve, reject) {\n    var cancel = {value: reject},\n        end = {value: function() { if (--size === 0) resolve(); }};\n\n    that.each(function() {\n      var schedule = set(this, id),\n          on = schedule.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) {\n        on1 = (on0 = on).copy();\n        on1._.cancel.push(cancel);\n        on1._.interrupt.push(cancel);\n        on1._.end.push(end);\n      }\n\n      schedule.on = on1;\n    });\n  });\n}\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    schedule.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import { select, event as d3event, selection, clientPoint } from 'd3-selection';\nimport { drag as d3drag } from 'd3-drag';\nimport 'd3-transition';\nimport { mergeRecursive } from './common-utils';\n/**\n * This function takes a raw DOM element or\n * a string and returns a d3 selection of that element.\n *\n * @param {HTMLElement | string} element The element to wrap in d3 selection.\n * @return {Selection} Instance of d3 selection.\n */\nconst selectElement = element => select(element);\n\n/**\n * It creates a new d3 element on the parent element\n * @param  {Selection} parent Element to which the element is to be appended\n * @param  {Object} elemType Type of the new element\n * @param  {Array} data Data for the new element\n * @param  {Object} selector classname/id/tagname for the element\n * @return {HTMLElement} Newly Created Element\n */\nconst makeElement = (parent, elemType, data, selector, callbacks = {}, keyFn) => {\n    if ((parent instanceof HTMLElement || parent instanceof SVGElement)) {\n        parent = selectElement(parent);\n    }\n\n    const selectorVal = selector ? selector[0] : null;\n    let selectorType = null;\n    let actualSelector = null;\n    let element = null;\n    let enterSel = null;\n    let mergeSel = null;\n    let filter;\n    if (selectorVal) {\n        if (selectorVal === '#') {\n            selectorType = 'id';\n            actualSelector = selector;\n        } else {\n            selectorType = 'class';\n            actualSelector = selector[0] === '.' ? selector : `.${selector}`;\n        }\n    } else {\n        actualSelector = elemType;\n        filter = true;\n    }\n    element = parent.selectAll(actualSelector);\n\n    filter && (element = element.filter(function () {\n        return this.parentNode === parent.node();\n    }));\n    element = element.data(data, keyFn);\n\n    enterSel = element.enter()\n                            .append(elemType || 'div');\n    callbacks.enter && enterSel.each(function (...params) {\n        callbacks.enter(selectElement(this), ...params);\n    });\n\n    mergeSel = enterSel.merge(element);\n    callbacks.update && mergeSel.each(function (...params) {\n        callbacks.update(selectElement(this), ...params);\n    });\n    if (selectorType === 'class') {\n        mergeSel.classed(selectorVal === '.' ? selector.substring(1, selector.length) : selector, true);\n    } else if (selectorType === 'id') {\n        mergeSel.attr('id', selector.substring(1, selector.length));\n    }\n    const exitSel = element.exit();\n\n    if (callbacks.exit) {\n        exitSel.each(function (...params) {\n            callbacks.exit(selectElement(this), ...params);\n        });\n    } else {\n        exitSel.remove();\n    }\n    return mergeSel;\n};\n\n/**\n * This function applies styles to an element\n *  @param  {Object} elem Element Selection\n * @param  {Object} styleObj Style Object to be applied\n * @return {Element} Newly Created Element\n*/\nconst applyStyle = (elem, styleObj) => {\n    Object.entries(styleObj).forEach((d) => {\n        elem.style(d[0], d[1]);\n    }, this);\n    return elem;\n};\n\n/**\n * This function appends a dom element in another element.\n * @param {HTMLElement | SVGElement} element1 The element in which to append the second element\n * @param {HTMLElement | SVGElement} element2 The element which will be appended.\n */\nconst appendElement = (element1, element2) => {\n    element1.appendChild(element2);\n};\n\n/**\n * Sets the attributes to the element.\n * @param {HTMLElement | SVGElement} element Element on which attributes will be applied\n * @param {Object} attrs Attributes which need to be applied\n */\nconst setElementAttrs = (element, attrs) => {\n    for (const key in attrs) {\n        if ({}.hasOwnProperty.call(attrs, key)) {\n            element.attr(key, attrs[key]);\n        }\n    }\n};\n\n/**\n * Sets attributes in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which attrs will be applied\n * @param {Array.<Object>} attrs Array of attributes\n * @param {string} className className of elements to select.\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setAttrs = (element, attrs, className) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    className !== undefined ? element.selectAll(`.${className}`).each(function () {\n        setElementAttrs(select(this), attrs);\n    }) : setElementAttrs(element, attrs);\n    return element;\n};\n\n/**\n * Adds a css class to elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst addClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, true) :\n                elem.classed(className, true);\n    });\n};\n\n/**\n * Removes the css class from elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst removeClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, false) :\n                elem.classed(className, false);\n    });\n};\n\n/**\n * Sets styles in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which styles will be applied\n * @param {Array.<Object>} styles Array of style attributes\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setStyles = (element, styles) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            element.style(key, styles[key]);\n        }\n    }\n    return element;\n};\n\n/**\n * Creates svg or html elements by binding data to the selection.Removes extra elements\n * on exit.\n * @param {Object} params Parameter object\n * @param {SVGElement | HTMLElement} params.container Container element where all elements will be appended\n * @param {string} params.selector Selector by which elements will be selected from dom\n * @param {string} params.append Append tag\n * @param {Function} params.each Function which will be executed for each data point and element.\n */\nconst createElements = (params) => {\n    const container = select(params.container);\n    let data;\n    let sel;\n\n    data = params.data;\n    if (typeof data === 'number') {\n        data = Array(data).fill().map((d, i) => i);\n    }\n    sel = container.selectAll(params.selector).data(data);\n\n    sel = container.selectAll(params.selector).filter(function () {\n        return this.parentNode === container.node();\n    }).data(params.data);\n\n    const selectionMerge = sel.enter().append(params.append).merge(sel).each(function (d, i) {\n        params.each(d, select(this), i);\n    });\n\n    selectionMerge.attr('class', params.className || '');\n    sel.exit().remove();\n};\n\n/**\n * Clips an element with given measurement. Basically it is used to hide overflowing portions\n * of any element.\n * @param {SVGElement} container svg element which needs to be clipped.\n * @param {Object} measurement Dimensions of the clipped rectangle.\n * @param {string} id Unique id of the clip element\n */\nconst clipElement = (container, measurement, id) => {\n    const clipPathElement = makeElement(select(container), 'clipPath', [1], `#${id}`);\n    const clipPathRect = makeElement(clipPathElement, 'rect', [1]);\n    clipPathRect.attr('x', measurement.x)\n                    .attr('y', measurement.x)\n                    .attr('width', measurement.width)\n                    .attr('height', measurement.height);\n    clipPathElement.attr('clip-path', `url(#${id})`);\n};\n\n/**\n * Returns the element of the corresponding classname.\n * @param {HTMLElement | SVGElement} node html or svg node element.\n * @param {string} className css class to be applied.\n * @return {HTMLElement | SVGElement} html or svg element.\n */\nconst getElementsByClassName = (node, className) => select(node).selectAll(className).nodes();\n\n/**\n * Gets the mouse position relative to an svg type of element\n * @param {SVGElement} element Any svg element like rect, circle, etc.\n * @param {Event} event Event object.\n * @return {Object} x and y position relative to the container element passed.\n */\nconst getMousePos = (element, event) => {\n    const boundingClientRect = element.getBoundingClientRect();\n    return {\n        x: event.x - boundingClientRect.x,\n        y: event.y - boundingClientRect.y\n    };\n};\n\nconst getClientPoint = (...params) => {\n    const pos = clientPoint(...params);\n    return {\n        x: pos[0],\n        y: pos[1]\n    };\n};\n\n/** This function appends a dom element in another element.\n * @param {Object} tag The tag name of the element to append\n * @param {Object} mount Mount point fo the element\n * @return {Object} selection of the appended element\n */\nconst createElement = (tag, mount) => select(mount).append(tag).node();\n\n/**\n * Gets the d3 event function\n * @return {Object} d3 event\n */\nconst getEvent = () => d3event;\n\n/**\n * Gets the d3 drag function\n * @return {Object} d3 drag\n */\nconst getD3Drag = () => d3drag;\n\nconst getSmartComputedStyle = (group, css) => {\n    let textEl;\n    const testText = 'W';\n    const mandatoryStyle = {\n        'fill-opacity': 0\n    };\n    const className = typeof css === 'string' ? css : (css instanceof Array ? css.join(' ') : undefined);\n\n    if (group.node() instanceof HTMLElement) {\n        textEl = group.append('div').html(testText);\n    } else {\n        textEl = group.append('text').text(testText);\n    }\n\n    if (className) {\n        textEl.attr('class', className);\n    } else if (typeof css === 'object') {\n        delete css['fill-opacity'];\n        mergeRecursive(mandatoryStyle, css);\n    }\n\n    textEl.style(mandatoryStyle);\n    const computedStyle = window.getComputedStyle(textEl.node());\n    const styleForSmartLabel = {\n        fontSize: computedStyle.fontSize,\n        fontFamily: computedStyle.fontFamily,\n        fontWeight: computedStyle.fontWeight,\n        fontStyle: computedStyle.fontStyle\n    };\n\n    textEl.remove();\n\n    return styleForSmartLabel;\n};\n\nconst hasTouch = () => 'ontouchstart' in document.documentElement;\n\nexport {\n    hasTouch,\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint\n};\n","import Model from 'hyperdis';\nimport { defaultValue, getObjProp } from './common-utils';\n\nconst initProp = (obj, props, val = () => ({})) => {\n    props.forEach((prop) => {\n        if (!obj[prop]) {\n            obj[prop] = val();\n        }\n        obj = obj[prop];\n    });\n    return obj;\n};\n\nconst fetchPropValues = (propNames, params, deps) => params.map((param, i) => {\n    const prop = propNames[i];\n\n    return param.map(val => (val === undefined || val === null ? val : val[deps[prop]]));\n});\n\nconst addListenerToNamespace = (namespaceInf, fn, context) => {\n    let key = namespaceInf.key;\n    const namespace = namespaceInf.id;\n    const listeners = context._listeners;\n\n    if (namespace) {\n        !listeners.get(namespace) && (listeners.set(namespace, new Map()));\n        const namespaceListeners = listeners.get(namespace);\n\n        if (!key) {\n            key = namespaceListeners.size;\n        }\n        namespaceListeners.set(key, fn);\n    } else {\n        key = key || listeners.size;\n        listeners.set(key, fn);\n    }\n};\n\nconst setContexts = (contexts, propObj, contextMap) => {\n    for (const key of propObj.keys()) {\n        contexts[key] = {\n            context: contextMap[key],\n            deps: propObj.get(key).depProps\n        };\n    }\n    return contexts;\n};\n\nconst registerPropInMaps = (store, props, namespaceInf, type) => {\n    const {\n        _registeredListeners: registeredListeners,\n        _propListenerMap: propListenerMap\n    } = store;\n    const {\n        subNamespace,\n        namespace: ns\n    } = namespaceInf;\n\n    initProp(registeredListeners, [ns]);\n    props.forEach((prop) => {\n        const subNamespaces = defaultValue(getObjProp(registeredListeners, ns, prop, 'subNamespace'), []);\n        let fns = defaultValue(getObjProp(propListenerMap, prop, type, 'fns'), 0);\n\n        fns++;\n        subNamespace && subNamespaces.push(subNamespace);\n        registeredListeners[ns][prop] = {\n            subNamespace: subNamespaces,\n            allProps: props,\n            subNamespaces: {}\n        };\n        initProp(propListenerMap, [prop, type]);\n        propListenerMap[prop][type] = {\n            fns,\n            _fnCount: fns\n        };\n    });\n};\n\nconst registerListener = (context, type, ...options) => {\n    const [propList, callBack, instantCall, namespaceInf = {}] = options;\n    let props = propList;\n\n    if (!Array.isArray(propList)) {\n        props = [propList];\n    }\n\n    const { namespace: ns } = namespaceInf;\n    const callbackFn = ((propNames, namespaceVal) => (...params) => {\n        const { _savedCommits: commits, _propListenerMap: propListenerMap } = context;\n\n        if (!propNames.some(prop => getObjProp(propListenerMap, prop, 'disabled'))) {\n            if (namespaceVal) {\n                const listenersObj = context._registeredListeners[namespaceVal];\n                const contextMap = context._contextMap[namespaceVal];\n                const contextsObj = {};\n\n                propNames.forEach((prop) => {\n                    const commitsObj = defaultValue(getObjProp(commits, prop, type), {});\n                    const listeners = listenersObj[prop].subNamespaces;\n                    const propDeps = propListenerMap[prop][type];\n\n                    for (const nm in commitsObj) {\n                        const fnInf = defaultValue(propDeps[nm], { fns: 0 });\n                        let { fns } = fnInf;\n\n                        if (fns > 0) {\n                            setContexts(contextsObj, listeners[nm], contextMap);\n                            fns--;\n                        }\n\n                        if (fns <= 0) {\n                            delete commitsObj[nm];\n                        }\n                        fnInf.fns = fns;\n                    }\n                });\n                for (const key in contextsObj) {\n                    const obj = contextsObj[key];\n\n                    callBack(obj.context, ...fetchPropValues(propNames, params, obj.deps));\n                }\n            } else {\n                callBack(...params);\n            }\n        }\n    })(props, ns, type);\n\n    const fn = context.model[type](props, callbackFn, instantCall);\n\n    if (ns) {\n        registerPropInMaps(context, props, namespaceInf, type);\n    }\n    addListenerToNamespace(namespaceInf, fn, context);\n};\n\nconst retrieveNamespaces = (names, key) => {\n    if (names instanceof Object) {\n        return [names[key]];\n    } else if (names instanceof Array) {\n        return names;\n    }\n    return [names];\n};\n\nconst createMap = () => new Map();\n\nconst listenerTypes = ['next', 'on'];\n\nconst removePropValue = (context, map, propInf) => {\n    const { subNamespace: sns, prop, propListenerMap } = propInf;\n    const propObj = propListenerMap[prop];\n\n    listenerTypes.forEach((type) => {\n        if (type in propObj) {\n            delete propObj[type][sns];\n        }\n    });\n    if (map.has(sns)) {\n        const value = context.get(prop);\n\n        if (value instanceof Object && sns in value) {\n            delete value[sns];\n        }\n        map.delete(sns);\n    }\n};\n\n/**\n * Methods to handle changes to table configuration and reactivity are handled by this\n * class.\n */\n/**\n *  Common store class\n *\n * @class Store\n */\nexport class Store {\n    /**\n     * Creates an instance of Store.\n     * @param {Object} config The object to create the state store with.\n     * @memberof Store\n     */\n    constructor (config) {\n        // create reactive model\n        this.model = Model.create(config);\n        this._listeners = new Map();\n        this._registeredListeners = {};\n        this._contextMap = {};\n        this._commits = {};\n        this._savedCommits = {};\n        this._queuedProps = {};\n        this._propListenerMap = {};\n        this._locked = false;\n    }\n\n    lockModel () {\n        this.model.lock();\n        this._locked = true;\n        return this;\n    }\n\n    unlockModel () {\n        this._locked = false;\n        this.model.unlock();\n        return this;\n    }\n\n    /**\n     * This method returns a plain JSON object\n     * with all the fields in the state store.\n     *\n     * @return {Object} Serialized representation of state store.\n     * @memberof Store\n     */\n    serialize () {\n        return this.model.serialize();\n    }\n\n    lockCommits (props) {\n        props.forEach((prop) => {\n            this._commits[prop] = {\n                locked: true,\n                queue: []\n            };\n        });\n        return this;\n    }\n\n    unlockCommits (props) {\n        const commitsObj = this._commits;\n\n        this.lockModel();\n        props.forEach((prop) => {\n            commitsObj[prop].locked = false;\n            const queuedProps = {};\n            const { queue } = commitsObj[prop];\n\n            queue.forEach((params) => {\n                const [propName, value, namespace] = params;\n\n                if (namespace) {\n                    const propObj = initProp(queuedProps, [propName, namespace]);\n\n                    Object.assign(propObj, value);\n                }\n            });\n            queue.forEach((params) => {\n                const [propName, value, namespace] = params;\n\n                this.commit(propName, propName in queuedProps ? queuedProps[propName][namespace] : value,\n                    namespace);\n            });\n            delete commitsObj[prop];\n        });\n        this.unlockModel();\n        return this;\n    }\n\n    addSubNamespace (sns, namespace, context) {\n        // Get all the listeners registered by the component\n        const listeners = this._registeredListeners[namespace];\n        const propListenerMap = this._propListenerMap;\n\n        initProp(this._contextMap, [namespace]);\n        this._contextMap[namespace][sns] = context;\n        for (const key in listeners) {\n            const obj = listeners[key];\n            const propObj = propListenerMap[key];\n            const propFns = listenerTypes.reduce((acc, type) => {\n                const val = defaultValue(getObjProp(propObj, type, 'fns'), 0);\n                val && (acc[type] = val);\n                return acc;\n            }, {});\n            const { allProps, subNamespaces, subNamespace } = obj;\n            const snsArr = subNamespace.length ? subNamespace : [sns];\n\n            snsArr.forEach((ns) => {\n                const nsObj = ns instanceof Function ? ns(context) : ns;\n                const names = retrieveNamespaces(nsObj, key);\n                const depProps = allProps.reduce((acc, prop) => {\n                    acc[prop] = ns instanceof Function ? nsObj[prop] : ns;\n                    return acc;\n                }, {});\n\n                names.forEach((nm) => {\n                    initProp(subNamespaces, [nm], createMap).set(sns, {\n                        depProps\n                    });\n\n                    for (const type in propFns) {\n                        initProp(propObj, [type, nm]);\n                        const fns = propFns[type];\n\n                        propObj[type][nm] = {\n                            fns,\n                            _fnCount: fns\n                        };\n                    }\n                });\n            });\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to update the value of a property in the state store.\n     *\n     * @param {string} propName The name of the property.\n     * @param {number} value The new value of the property.\n     * @memberof Store\n     */\n    commit (propName, value, namespace, disableListener = false) {\n        let sanitizedVal = value;\n        const commits = this._commits;\n        const savedCommits = this._savedCommits;\n        const locked = getObjProp(commits, propName, 'locked');\n        const propListenerMap = this._propListenerMap[propName] || {};\n\n        propListenerMap.disabled = disableListener;\n\n        if (locked) {\n            commits[propName].queue.push([propName, value, namespace]);\n            return this;\n        }\n\n        if (namespace) {\n            if (this._locked) {\n                const queuedProps = initProp(this._queuedProps, [propName]);\n                queuedProps[namespace] = value;\n                sanitizedVal = queuedProps;\n            } else {\n                sanitizedVal = defaultValue(this.get(propName), {});\n                sanitizedVal[namespace] = value;\n            }\n\n            listenerTypes.forEach((type) => {\n                initProp(savedCommits, [propName, type]);\n                savedCommits[propName][type][namespace] = true;\n                if (getObjProp(propListenerMap, type, namespace)) {\n                    propListenerMap[type][namespace].fns = propListenerMap[type][namespace]._fnCount;\n                }\n            });\n        }\n\n        this.model.prop(propName, sanitizedVal);\n        return this;\n    }\n\n    /**\n     * This method is used to register a callback that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */registerChangeListener (...params) {\n        registerListener(this, 'next', ...params);\n        return this;\n    }\n\n    /**\n     * This method is used to register a callback that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */ registerImmediateListener (...params) {\n        registerListener(this, 'on', ...params);\n    }\n\n    /**\n     * This method is used to get the name of the property\n     * from the state store.\n     *\n     * @param {string} propName The name of the field in state store.\n     * @return {any} The value of the field.\n     * @memberof Store\n     */\n    get (propName, subNamespace) {\n        const value = this.model.prop(propName);\n        return subNamespace ? value && value[subNamespace] : value;\n    }\n\n    /**\n     * This method is used to register a computed property that is computed every time\n     * the store value changes.\n     *\n     * @param {string} propName The name of the property to create.\n     * @param {Function} callBack The function to execute when depemdent props change.\n     * @memberof Store\n     */\n    computed (propName, callBack) {\n        return this.model.calculatedProp(propName, callBack);\n    }\n\n    append (...params) {\n        this.model.append(...params);\n        return this;\n    }\n\n    unsubscribeAll () {\n        Object.values(this._listeners).forEach(fn => fn());\n        return this;\n    }\n\n    unsubscribe (namespaceInf = {}) {\n        const { id, key } = namespaceInf;\n        const listenersMap = this._listeners;\n        const listeners = listenersMap.get(id);\n\n        if (key) {\n            const fn = listenersMap.get(key);\n\n            fn && fn();\n        } else {\n            for (const fn of listeners.values()) {\n                fn();\n            }\n            listenersMap.set(id, []);\n        }\n        return this;\n    }\n\n    removeSubNamespace (subNamespace, namespace) {\n        const {\n            _registeredListeners: listenerMap,\n            _contextMap: contextMap,\n            _propListenerMap: propListenerMap\n        } = this;\n        const listenersObj = listenerMap[namespace];\n\n        for (const prop in listenersObj) {\n            const { subNamespaces } = listenersObj[prop];\n            const propInf = {\n                subNamespace,\n                prop,\n                propListenerMap\n            };\n\n            if (subNamespaces[subNamespace]) {\n                removePropValue(this, subNamespaces[subNamespace], propInf);\n                delete subNamespaces[subNamespace];\n            } else {\n                for (const ns in subNamespaces) {\n                    const snsMap = subNamespaces[ns];\n\n                    removePropValue(this, snsMap, propInf);\n                    if (!snsMap.size) {\n                        delete subNamespaces[ns];\n                    }\n                }\n            }\n        }\n        delete contextMap[namespace][subNamespace];\n        return this;\n    }\n}\n\n/**\n * Setter getter creator from config\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args. (Optional)\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @param {Object} holder an empty object on which the getters and setters will be mounted\n * @param {Object} options options config based on which the getters and setters are determined.\n * @param {Hyperdis} model optional model to attach the property. If not sent new moel is created.\n * @return {Array}\n */\nexport const transactor = (holder, options, model, namespaceInf = {}) => {\n    let conf;\n    const store = model instanceof Store ? model : new Store({});\n    const stateProps = {};\n    const { namespace, subNamespace } = namespaceInf;\n\n    for (const prop in options) {\n        if ({}.hasOwnProperty.call(options, prop)) {\n            conf = options[prop];\n            const nameSpaceProp = namespace ? `${namespace}.${prop}` : prop;\n\n            if (subNamespace) {\n                const value = defaultValue(store.get(nameSpaceProp), {});\n                value[subNamespace] = conf.value;\n                stateProps[nameSpaceProp] = value;\n            } else {\n                stateProps[prop] = conf.value;\n            }\n\n            holder[prop] = ((context, meta, nsProp) => (...params) => {\n                let val;\n                let compareTo;\n                const paramsLen = params.length;\n                const prevVal = context.get(nsProp, subNamespace);\n                if (paramsLen) {\n                    // If parameters are passed then it's a setter\n                    const spreadParams = meta && meta.spreadParams;\n                    val = params;\n                    const values = [];\n                    if (meta) {\n                        for (let i = 0; i < paramsLen; i++) {\n                            val = params[i];\n                            const sanitization = meta.sanitization && (spreadParams ? meta.sanitization[i] :\n                                meta.sanitization);\n                            const typeCheck = meta.typeCheck && (spreadParams ? meta.typeCheck[i] : meta.typeCheck);\n                            if (sanitization && typeof sanitization === 'function') {\n                                // Sanitize if required\n                                val = sanitization(val, prevVal, holder);\n                            }\n\n                            if (typeCheck) {\n                                // Checking if a setter is valid\n                                if (typeof typeCheck === 'function') {\n                                    let typeExpected = meta.typeExpected;\n                                    if (typeExpected && spreadParams) {\n                                        typeExpected = typeExpected[i];\n                                    }\n                                    if (typeExpected) {\n                                        compareTo = typeExpected;\n                                    } else {\n                                        compareTo = true;\n                                    }\n\n                                    if (typeCheck(val) === compareTo) {\n                                        values.push(val);\n                                    }\n                                } else if (typeof typeCheck === 'string') {\n                                    if (typeCheck === 'constructor') {\n                                        const typeExpected = spreadParams ? meta.typeExpected[i] :\n                                            meta.typeExpected;\n                                        if (val && (val.constructor.name === typeExpected)) {\n                                            values.push(val);\n                                        }\n                                    }\n                                } else {\n                                    // context.prop(key, val);\n                                    values.push(val);\n                                }\n                            } else {\n                                values.push(val);\n                            }\n                        }\n                        const preset = meta.preset;\n                        const oldValues = context.get(nsProp, subNamespace);\n                        preset && preset(values[0], holder);\n                        if (spreadParams) {\n                            oldValues.forEach((value, i) => {\n                                if (values[i] === undefined) {\n                                    values[i] = value;\n                                }\n                            });\n                        }\n                        values.length && context.commit(nsProp, spreadParams ? values : values[0], subNamespace);\n                    } else {\n                        context.commit(nsProp, spreadParams ? val : val[0], subNamespace);\n                    }\n                    return holder;\n                }\n                // No parameters are passed hence its a getter\n                return context.get(nsProp, subNamespace);\n            })(store, conf.meta, nameSpaceProp, subNamespace);\n        }\n    }\n\n    if (subNamespace) {\n        for (const key in stateProps) {\n            store.commit(key, stateProps[key][subNamespace], subNamespace);\n        }\n    } else if (namespace === undefined) {\n        store.append(stateProps);\n    } else {\n        store.append(namespace, stateProps);\n    }\n\n    return [holder, store];\n};\n","const events = [\n    'initialized',\n    'beforeupdate',\n    'updated',\n    'beforedraw',\n    'drawn',\n    'beforeremove',\n    'removed',\n    'animationend'\n];\n\nconst compositions = [\n    'canvas',\n    'unit',\n    'layer',\n    'axis',\n    'facet-headers',\n    'legend',\n    'caption'\n];\n\nconst EVENT_LIST = [];\n\ncompositions.forEach((composition) => {\n    events.forEach((event) => {\n        EVENT_LIST.push(`${composition}.${event}`);\n    });\n});\n\nexport default EVENT_LIST;\n","import EVENT_LIST from './event-list';\nimport { createPromise } from './helper';\n\n/**\n * At first call it accepts one function\n * calling it second time accepts notification object.\n * notification object then called with first accepted function\n *\n * @param {Function} resolveFn a promise's resolve function\n * @return {Function} a function to accept notification object\n */\nconst resolver = resolveFn => notification => resolveFn(notification);\n\n/**\n * Checks if the property string is present in the source object\n *\n * @param {Object} source source object whom you want to check the property\n * @param {string} property key name that need to be checked\n * @return {boolean} returns true if the property found in the source object\n */\nconst hasOwn = (source, property) => Object.prototype.hasOwnProperty.call(source, property);\n\n/**\n * LifeCycleManager which goes as a dependendecy to a muze\n * it accepts notification from the entire library throughout\n * the exeecution life\n *\n * @export\n * @class LifeCycleManager\n */\nexport default class LifeCycleManager {\n\n    /**\n     * Creates an instance of LifeCycleManager.\n     * @memberof LifeCycleManager\n     */\n    constructor () {\n        this._eventList = EVENT_LIST;\n        this._promises = new Map();\n        this._notifiers = {};\n        this._lifeCycles = {};\n        this._unreleasedLifeCycles = {};\n        this._boot();\n    }\n\n    /**\n     * Fills all the notifiers with resolver callback\n     *\n     * @memberof LifeCycleManager\n     */\n    _boot () {\n        this._notifiers = this._eventList.reduce((acc, name) => {\n            acc[name] = resolver;\n            return acc;\n        }, {});\n        this._preparePromises();\n    }\n\n    /**\n     * Public method which gives the promise corresponding\n     * to the event name\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    retrieve (eventName) {\n        return this._promises.get(eventName);\n    }\n\n    /**\n     * Creates a promise that will be passed to user's callback\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} a pending promise waiting for resolve to be called\n     * @memberof LifeCycleManager\n     */\n    _makeNotifierPromise (eventName) {\n        return new Promise((resolve) => {\n            this._notifiers[eventName] = resolver(resolve);\n        });\n    }\n\n    /**\n     * Prepares the promise map with pending promises\n     * all the promises are in a pending state where their's\n     * resolve function waiting to be called with notification object\n     * @memberof LifeCycleManager\n     */\n    _preparePromises () {\n        this._eventList.forEach((eventName) => {\n            const promise = this._makeNotifierPromise(eventName);\n            this._promises.set(eventName, promise);\n            createPromise(promise, eventName, this);\n        });\n    }\n\n    /**\n     * Resolves the promise with notification object\n     *\n     * @param {string} eventName name of the event in the system\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     *\n     * @memberof LifeCycleManager\n     */\n    _resolvePromise (eventName, notification) {\n        this._notifiers[eventName](notification);\n    }\n\n    /**\n     * Public method which is being called by different\n     * subcompoents of the system at different execution atages\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    notify (notification) {\n        // get the composition name from notification\n        // or from static formalName() method\n        const composition = notification.formalName || notification.client.constructor.formalName();\n        notification.formalName = composition;\n        this._releasePromisesFromCache();\n        this._notify(composition, notification);\n    }\n\n    /**\n     * Notify user the with promsie in a callback\n     * if callback not found then cache it\n     *\n     * @param {string} composition\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    _notify (composition, notification) {\n        const stage = notification.action;\n        const eventName = `${composition}.${stage}`;\n\n        // resolves promise with the notification object\n        this._resolvePromise(eventName, notification);\n\n        // get the promise from the promise map\n        const promise = this.retrieve(eventName);\n\n        if (this._lifeCycles[composition]) {\n            if (this._lifeCycles[composition][stage]) {\n                // if user given call back exists, then call with promise\n                this._callLifeCycleCallback(composition, stage, promise);\n            } else {\n                // otherwise cache the promise\n                this._cachePromise(composition, stage, promise);\n            }\n        } else {\n            this._cachePromise(composition, stage, promise);\n        }\n    }\n\n    /**\n     * Calls the user's callback with callback\n     *\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _callLifeCycleCallback (composition, stage, promise) {\n        const eventName = `${composition}.${stage}`;\n        this._lifeCycles[composition][stage](promise);\n        this._resetTargetPromise(eventName);\n    }\n\n    /**\n     * Try to clear the cached promsies once we have\n     * macthed callbacks from the user\n     *\n     * @memberof LifeCycleManager\n     */\n    _releasePromisesFromCache () {\n        const compositions = Object.keys(this._unreleasedLifeCycles);\n        compositions.forEach((composition) => {\n            const stages = Object.keys(this._unreleasedLifeCycles[composition]);\n            stages.forEach((stage) => {\n                if (this._lifeCycles[composition]) {\n                    if (this._lifeCycles[composition][stage]) {\n                        // take the promise from unreleased lifeCycles\n                        const promise = this._unreleasedLifeCycles[composition][stage];\n                        // call the user given callback with that promise\n                        this._callLifeCycleCallback(composition, stage, promise);\n                        // delete promise from unreleased lifeCycles\n                        delete this._unreleasedLifeCycles[composition][stage];\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * Cache the promise in the map. This cache\n     * then get consumed if we get user callbacks\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _cachePromise (composition, stage, promise) {\n        if (!hasOwn(this._unreleasedLifeCycles, composition)) {\n            this._unreleasedLifeCycles[composition] = {};\n        }\n\n        if (!hasOwn(this._unreleasedLifeCycles[composition], stage)) {\n            this._unreleasedLifeCycles[composition][stage] = {};\n        }\n        this._unreleasedLifeCycles[composition][stage] = promise;\n    }\n\n    /**\n     * It register's the callbacks gievn the user\n     *\n     * @param {Object} [lifeCycles={}] a object with list of callbacks\n     * @memberof LifeCycleManager\n     */\n    register (lifeCycles = {}) {\n        this._lifeCycles = lifeCycles;\n        // as we get all the callbacks, try to call them\n        // from unreleased promise map\n        this._releasePromisesFromCache();\n    }\n\n    /**\n     * Reset the promise into pending state\n     *\n     * @param {string} eventName name of the event happening\n     * @memberof LifeCycleManager\n     */\n    _resetTargetPromise (eventName) {\n        setTimeout(() => {\n            this._notifiers[eventName] = resolver;\n            this._promises.set(eventName, this._makeNotifierPromise(eventName));\n        }, 0);\n    }\n}\n","import LifeCycleManager from './lifecycle-manager';\n\nexport default LifeCycleManager;\n","/**\n * Creates a new promise when the given promise is resolved. This needs to be done so that after the lifecycle event\n * is completed, then again when the event gets completed, then a new promise gets resolved.\n *\n * @param {Promise} promise Instance of promise\n * @param {string} eventName name of event\n * @param {LifeCycleManager} context Instance of lifecyclemanager\n */\nexport const createPromise = (promise, eventName, context) => {\n    promise.then(() => {\n        const prm = context._makeNotifierPromise(eventName);\n        context._promises.set(eventName, prm);\n        createPromise(prm, eventName, context);\n    });\n};\n","import { default as DataModel } from 'datamodel';\nimport * as scales from './scales';\nimport * as colorSchemes from './color-schemes';\nimport * as STATE_NAMESPACES from './enums/namespace';\n\nconst InvalidAwareTypes = DataModel.InvalidAwareTypes;\n\nexport {\n    InvalidAwareTypes,\n    DataModel\n};\n\nexport {\n    ReservedFields,\n    CommonProps,\n    COORD_TYPES\n} from './enums';\n\nexport { STATE_NAMESPACES };\n\nexport {\n    scales,\n    colorSchemes\n};\n\nexport {\n    getNearestValue,\n    getValueParser,\n    transformColors,\n    detectColor,\n    hslToRgb,\n    rgbToHsv,\n    hexToHsv,\n    hsvToRgb,\n    escapeHTML,\n    angleToRadian,\n    generateGetterSetters,\n    getArraySum,\n    ERROR_MSG,\n    interpolator,\n    colorInterpolator,\n    numberInterpolator,\n    piecewiseInterpolator,\n    reqAnimFrame,\n    cancelAnimFrame,\n    nextAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    replaceCSSPrefix,\n    symbolFns,\n    defaultValue,\n    easeFns,\n    clone,\n    interpolateArray,\n    getMinPoint,\n    getMaxPoint,\n    getClosestIndexOf,\n    registerListeners,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    enableChainedTransaction,\n    isHTMLElem,\n    isEqual,\n    isSimpleObject,\n    nextFrame,\n    getObjProp,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    transposeArray,\n    toArray,\n    extendsClass,\n    concatModels,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    nestCollection,\n    stack,\n    getSymbol,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    hslInterpolator,\n    getSmallestDiff,\n    require,\n    formatTemporal,\n    nearestSortingDetails,\n    createSelection,\n    temporalFields,\n    retrieveNearestGroupByReducers,\n    retrieveFieldDisplayName,\n    sanitizeDomainWhenEqual,\n    sortCategoricalField,\n    intersect\n} from './common-utils';\n\nexport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint,\n    hasTouch\n} from './renderer-utils';\n\nexport {\n    Store,\n    transactor\n} from './store';\n\nexport {\n    timeMillisecond,\n    timeSecond,\n    timeMinute,\n    timeHour,\n    timeDay,\n    timeWeek,\n    timeMonth,\n    timeYear\n} from 'd3-time';\n\nexport { default as Smartlabel } from 'fusioncharts-smartlabel';\nexport { dataSelect } from './DataSystem';\n\nexport { default as LifeCycleManager } from './lifecycle-manager';\n\nexport {\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    DateTimeFormatter,\n    DM_DERIVATIVES,\n    GROUP_BY_FUNCTIONS\n} from 'datamodel';\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\nexport const LONGTOUCH = 'longtouch';\nexport const TOUCHDRAG = 'touchdrag';\nexport const ALL_ACTIONS = '*';\n","const SELECTION_NEW_ENTRY = 1;\nconst SELECTION_NEW_EXIT = -1;\nconst SELECTION_NULL = 0;\nconst SELECTION_OLD_ENTRY = 2;\nconst SELECTION_OLD_EXIT = -2;\n\nexport {\n    SELECTION_NEW_ENTRY,\n    SELECTION_NEW_EXIT,\n    SELECTION_NULL,\n    SELECTION_OLD_ENTRY,\n    SELECTION_OLD_EXIT\n};\n","import SelectionSet from './selection-set';\n\nexport default SelectionSet;\n","import {\n    SELECTION_NEW_ENTRY, SELECTION_NEW_EXIT, SELECTION_NULL, SELECTION_OLD_ENTRY, SELECTION_OLD_EXIT\n} from '../enums/selection';\n/* eslint-disable guard-for-in */\n\n/**\n * This component is used to keep track of the row tuples of the data which gets added and removed. This keeps\n * information of which rows are in previous and new entry set and previous and new exit set. This is initialized by\n * {@link Firebolt}.\n *\n * @public\n *\n * @class SelectionSet\n */\nclass SelectionSet {\n    /**\n     * Creates an instance of selection set\n     *\n     * @param {Array.<string>} completeSet Set of unique ids.\n     */\n    constructor (completeSet, _volatile) {\n        this.completeSet = completeSet;\n        this._set = completeSet.reduce((obj, key) => {\n            obj[key] = SELECTION_NULL;\n            return obj;\n        }, {});\n        this._volatile = _volatile;\n        this._completeSetCount = completeSet.length;\n        this._lockedSelection = {};\n        this._resetted = true;\n    }\n\n    /**\n     * Adds a set of ids to the selection set. This also moves the other rows to exit set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    add (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_ENTRY;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_ENTRY && set[key] !== SELECTION_OLD_ENTRY) {\n                set[key] = set[key] < 0 ? SELECTION_OLD_EXIT : SELECTION_NEW_EXIT;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Adds an array of ids to the old entry set.\n     *\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    update (ids) {\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_OLD_ENTRY;\n        });\n\n        return this;\n    }\n\n    /**\n     * Moves all ids which in new entry set  to old entry set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateEntry () {\n        const set = this._set;\n\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_ENTRY ? SELECTION_OLD_ENTRY : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Moves an array of ids which are in new exit set to old exit set.\n     *\n     * @public\n     *\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateExit () {\n        const set = this._set;\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_EXIT ? SELECTION_OLD_EXIT : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Removes an array of ids from the selection set. It also moves the remaining row ids to entry set.\n     *\n     * @public\n     * @param {Array.<string>} ids Array of unique ids\n     *\n     * @return {SelectionSet}  Instance of selection set\n     */\n    remove (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_EXIT;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_EXIT && set[key] !== SELECTION_OLD_EXIT) {\n                set[key] = set[key] === 0 ? SELECTION_NEW_ENTRY : SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n\n    getSets () {\n        const set = this._set;\n        const retObj = {\n            entrySet: [[], []],\n            exitSet: [[], []],\n            completeSet: []\n        };\n\n        for (const key in set) {\n            if (set[key] > 0) {\n                set[key] === SELECTION_OLD_ENTRY && retObj.entrySet[0].push(key);\n                set[key] === SELECTION_NEW_ENTRY && retObj.entrySet[1].push(key);\n            } else if (set[key] < 0) {\n                set[key] === SELECTION_OLD_EXIT && retObj.exitSet[0].push(key);\n                set[key] === SELECTION_NEW_EXIT && retObj.exitSet[1].push(key);\n            }\n            retObj.completeSet.push(key);\n        }\n\n        ['entrySet', 'exitSet'].forEach((type) => {\n            retObj[type] = retObj[type].map(e => e.map(Number));\n        });\n        retObj.completeSet = retObj.completeSet.map(Number);\n\n        return retObj;\n    }\n\n    /**\n     * Resets an array of ids in the selection set to initial state. It sets the value of every unique id value to\n     * null in the selection set which means they are neither in entry set nor in exit set. If no ids are passed,\n     * then it resets all the ids to null.\n     *\n     * @public\n     *\n     * @param {Array} ids Array of unique ids.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    reset (ids) {\n        const set = this._set;\n        if (ids) {\n            ids.forEach((i) => {\n                set[i] = SELECTION_NULL;\n            });\n        } else {\n            const lockedSel = this._lockedSelection;\n            for (const key in set) {\n                if (!(key in lockedSel)) {\n                    set[key] = SELECTION_NULL;\n                }\n            }\n        }\n        this._resetted = true;\n        return this;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     *\n     * @public\n     *\n     * @return {Array.<string>} Array of unique ids\n     */\n    getEntrySet () {\n        const set = this._set;\n        const addSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_ENTRY && addSet.push(key);\n        }\n\n        return addSet;\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in entry set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old entry set or new entry set\n     */\n    getExistingEntrySet (addSet) {\n        const set = this._set;\n        return addSet.filter(d => set[d] === SELECTION_NEW_ENTRY || set[d] === SELECTION_OLD_ENTRY);\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old exit set or new exit set\n     */\n    getExistingExitSet (removeSet) {\n        const set = this._set;\n        return removeSet.filter(d => set[d] === SELECTION_NEW_EXIT || set[d] === SELECTION_OLD_EXIT);\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldEntry () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_ENTRY && updateSet.push(key);\n        }\n        return updateSet;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldExit () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_EXIT && updateSet.push(key);\n        }\n\n        return updateSet;\n    }\n\n    /**\n     * Gets the array of ids which are in the exit set.\n     *\n     * @public\n     * @return {Array.<string>} Array of unique ids\n     */\n    getExitSet () {\n        const set = this._set;\n        const removeSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_EXIT && removeSet.push(key);\n        }\n        return removeSet;\n    }\n\n    /**\n     * Gets all the ids which are either in exit or entry set.\n     *\n     * @public\n     * @return {Array} Array of unique ids\n     */\n    getCompleteSet () {\n        const set = this._set;\n        const completeSet = [];\n\n        for (const key in set) {\n            completeSet.push(key);\n        }\n\n        return completeSet;\n    }\n\n    getCompleteSetCount () {\n        return this._completeSetCount;\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Swaps the add set and remove set in the selection set.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    toggle () {\n        const set = this._set;\n\n        for (const key in set) {\n            if (set[key] === SELECTION_NEW_ENTRY) {\n                set[key] = SELECTION_NEW_EXIT;\n            } else if (set[key] === SELECTION_NEW_EXIT) {\n                set[key] = SELECTION_NEW_ENTRY;\n            } else if (set[key] === SELECTION_OLD_ENTRY) {\n                set[key] = SELECTION_OLD_EXIT;\n            } else {\n                set[key] = SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n}\n\nexport default SelectionSet;\n","import { clone, retrieveNearestGroupByReducers } from 'muze-utils';\nimport * as SELECTION from '../enums/selection';\n\nexport const initializeSideEffects = (context, sideEffects) => {\n    const sideEffectsMap = context._sideEffects;\n    sideEffects = sideEffects instanceof Array ? sideEffects : Object.values(sideEffects);\n    sideEffects.forEach((SideEffect) => {\n        const formalName = SideEffect.formalName();\n        const sideEffectInstance = sideEffectsMap[formalName];\n        sideEffectsMap[formalName] = sideEffectInstance || new SideEffect(context);\n    });\n    return sideEffectsMap;\n};\n\nexport const setSideEffectConfig = (sideEffects, config) => {\n    for (const key in sideEffects) {\n        const sideEffect = sideEffects[key];\n        const formalName = sideEffect.constructor.formalName();\n        const sideEffectConf = config[formalName];\n\n        sideEffectConf && sideEffect.config(sideEffectConf);\n    }\n};\n\nexport const initializeBehaviouralActions = (context, actions) => {\n    const dispatchableBehaviours = {};\n\n    actions = actions instanceof Array ? actions : Object.values(actions);\n    actions.forEach((Action) => {\n        dispatchableBehaviours[Action.formalName()] = new Action(context);\n    });\n    return dispatchableBehaviours;\n};\n\nexport const initializePhysicalActions = (context, actions) => {\n    const physicalActions = {};\n\n    for (const name in actions) {\n        if (!({}).hasOwnProperty.call(name, actions)) {\n            physicalActions[name] = actions[name](context);\n        }\n    }\n    return physicalActions;\n};\n\nexport const changeSideEffectAvailability = (context, fn, toEnable) => {\n    const sideEffects = context.sideEffects();\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            let change = true;\n            if (fn && fn(key) === false) {\n                change = false;\n            }\n            if (change) {\n                toEnable ? sideEffects[key].enable() : sideEffects[key].disable();\n            }\n        }\n    }\n};\n\nexport const getMergedSet = set => [...new Set([...set[0], ...set[1]])];\n\nexport const getSourceFields = (propagationInf, criteria = {}) => {\n    const sourceIdentifiers = propagationInf.sourceIdentifiers;\n    let sourceFields;\n    if (sourceIdentifiers) {\n        sourceFields = sourceIdentifiers.getSchema().map(d => d.name);\n    } else if (criteria instanceof Array) {\n        sourceFields = criteria[0];\n    } else {\n        sourceFields = Object.keys(criteria || {});\n    }\n    return sourceFields;\n};\n\nconst conditionsMap = {\n    mergedEnter: [SELECTION.SELECTION_NEW_ENTRY, SELECTION.SELECTION_OLD_ENTRY],\n    mergedExit: [SELECTION.SELECTION_NEW_EXIT, SELECTION.SELECTION_OLD_EXIT],\n    complete: []\n};\n\nexport const getModelFromSet = (type, model, set) => {\n    const conditions = conditionsMap[type];\n    if (model && conditions) {\n        return model.select((fields, i) =>\n           (conditions.some(condition => set[i] === condition)), {\n               saveChild: false\n           });\n    }\n    return null;\n};\n\nexport const getSetInfo = (type, set, config) => {\n    let model = null;\n    const filteredDataModel = config.filteredDataModel;\n    const selectionSet = config.selectionSet;\n    if (!config.propagationData) {\n        if (selectionSet.resetted()) {\n            model = null;\n        } else if (type === 'mergedEnter') {\n            model = getModelFromSet(type, config.dataModel, config.selectionSet._set);\n        }\n    } else if (filteredDataModel) {\n        model = type === 'mergedEnter' ? filteredDataModel[0] : filteredDataModel[1];\n    }\n    return {\n        uids: set,\n        length: set.length,\n        model\n    };\n};\n\nexport const getSideEffects = (behaviour, behaviourEffectMap) => {\n    const sideEffects = [];\n    for (const key in behaviourEffectMap) {\n        const behaviours = key.split(',');\n        const found = behaviours.some(d => d === behaviour);\n        if (found) {\n            sideEffects.push({\n                effects: behaviourEffectMap[key],\n                behaviours\n            });\n        }\n    }\n    return sideEffects;\n};\n\nexport const unionSets = (context, behaviours) => {\n    let combinedSet = {};\n    const models = {\n        mergedEnter: null,\n        mergedExit: null\n    };\n    behaviours.forEach((behaviour) => {\n        const entryExitSet = context._entryExitSet[behaviour];\n        if (entryExitSet) {\n            combinedSet = Object.assign(combinedSet, clone(entryExitSet));\n            ['mergedEnter', 'mergedExit'].forEach((type) => {\n                const model = entryExitSet[type].model;\n                let existingModel = models[type];\n                let aggFns = retrieveNearestGroupByReducers(model);\n                if (!existingModel) {\n                    existingModel = models[type] = model;\n                } else if (`${model.getSchema().map(d => d.name).sort()}` ===\n                    `${existingModel.getSchema().map(d => d.name).sort()}`) {\n                    aggFns = Object.assign({}, retrieveNearestGroupByReducers(existingModel));\n                    existingModel = models[type] = model.union(existingModel);\n                } else {\n                    existingModel = model;\n                }\n                combinedSet[type].model = existingModel;\n                combinedSet[type].aggFns = aggFns;\n            });\n        }\n    });\n    return combinedSet;\n};\n","import {\n    mergeRecursive,\n    hasTouch,\n    selectElement,\n    isSimpleObject\n} from 'muze-utils';\nimport { ALL_ACTIONS } from './enums/actions';\nimport SelectionSet from './selection-set';\nimport {\n    initializeBehaviouralActions,\n    initializeSideEffects,\n    changeSideEffectAvailability,\n    initializePhysicalActions,\n    unionSets,\n    getSideEffects,\n    setSideEffectConfig\n} from './helper';\n\n/**\n * This class is responsible for dispatching behavioural actions and side effects. It also keeps the information of\n * registered physical actions, behavioural actions and side effects. Also, it keeps the map of physical and behavioural\n * actions and behavioural actions and side effects. Whenever any behavioural action is dispatched, it also propagates\n * the rows which got affected to the other datamodels. This class is initialized by {@link VisualUnit} and legend to\n * manage it's interaction.\n *\n * @public\n * @class Firebolt\n * @module Firebolt\n */\nexport default class Firebolt {\n    constructor (context, actions, sideEffects, behaviourEffectMap) {\n        this.context = context;\n        this._sideEffectDefinitions = {};\n        this._sideEffects = {};\n        this._propagationInf = {};\n        this._actions = {\n            behavioural: {},\n            physical: {}\n        };\n        this._selectionSet = {};\n        this._volatileSelectionSet = {};\n        this._propagationFields = {};\n        this._sourceSideEffects = {};\n        this._propagationBehaviourMap = {};\n        this._sourceBehaviours = {};\n        this._actionBehaviourMap = {};\n        this._config = {};\n        this._behaviourEffectMap = {};\n        this._entryExitSet = {};\n        this._actionHistory = {};\n        this._queuedSideEffects = {};\n\n        this.mapSideEffects(behaviourEffectMap);\n        this.registerBehaviouralActions(actions.behavioural);\n        this.registerSideEffects(sideEffects);\n        this.registerPhysicalBehaviouralMap(actions.physicalBehaviouralMap);\n        this.registerPhysicalActions(actions.physical);\n    }\n\n    config (...config) {\n        if (config.length) {\n            this._config = mergeRecursive(this._config, config[0]);\n            setSideEffectConfig(this.sideEffects(), this._config);\n            return this;\n        }\n        return this._config;\n    }\n\n    mapSideEffects (behEffectMap) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        for (const key in behEffectMap) {\n            if ({}.hasOwnProperty.call(behEffectMap, key)) {\n                const sideEffects = behEffectMap[key] || [];\n                let preventDefaultActions = false;\n                let effectNames;\n                if (isSimpleObject(sideEffects)) {\n                    effectNames = sideEffects.effects;\n                    preventDefaultActions = sideEffects.preventDefaultActions;\n                } else {\n                    effectNames = sideEffects;\n                }\n                !behaviourEffectMap[key] && (behaviourEffectMap[key] = []);\n                this._behaviourEffectMap[key] = [...new Set(preventDefaultActions ? effectNames :\n                    [...behaviourEffectMap[key], ...effectNames])];\n            }\n        }\n        return this;\n    }\n\n    registerBehaviouralActions (actions) {\n        const behaviours = initializeBehaviouralActions(this, actions);\n        this.prepareSelectionSets(behaviours);\n        Object.assign(this._actions.behavioural, behaviours);\n        return this;\n    }\n\n    prepareSelectionSets () {\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        this.initializeSideEffects();\n        return this;\n    }\n\n    applySideEffects (sideEffects, selectionSet, payload) {\n        const sideEffectStore = this.sideEffects();\n        const actionHistory = this._actionHistory;\n        const queuedSideEffects = this._queuedSideEffects;\n        sideEffects.forEach((sideEffect) => {\n            let options;\n            let name;\n            const effects = sideEffect.effects;\n            const behaviours = sideEffect.behaviours;\n            const combinedSet = unionSets(this, behaviours, selectionSet);\n            effects.forEach((effect) => {\n                if (typeof effect === 'object') {\n                    name = effect.name;\n                    options = effect.options;\n                } else {\n                    name = effect;\n                }\n\n                const sideEffectInstance = sideEffectStore[name];\n                if (sideEffectInstance.isEnabled()) {\n                    if (!sideEffectInstance.constructor.mutates() &&\n                        Object.values(actionHistory).some(d => d.isMutableAction)) {\n                        queuedSideEffects[`${name}-${behaviours.join()}`] = {\n                            name,\n                            params: [combinedSet, payload, options]\n                        };\n                    } else {\n                        this.dispatchSideEffect(name, combinedSet, payload, options);\n                    }\n                }\n            });\n        });\n        return this;\n    }\n\n    dispatchSideEffect (name, selectionSet, payload, options = {}) {\n        const sideEffectStore = this.sideEffects();\n        const sideEffect = sideEffectStore[name];\n        let disable = false;\n        if (options.filter && options.filter(sideEffect)) {\n            disable = true;\n        }\n        !disable && sideEffectStore[name].apply(selectionSet, payload, options);\n    }\n\n    registerPropagationBehaviourMap (map) {\n        this._propagationBehaviourMap = Object.assign(this._propagationBehaviourMap, map || {});\n        return this;\n    }\n\n    dispatchBehaviour (behaviour, payload, propagationInfo = {}) {\n        const propagate = propagationInfo.propagate !== undefined ? propagationInfo.propagate : true;\n        const behaviouralActions = this._actions.behavioural;\n        const action = behaviouralActions[behaviour];\n        const behaviourEffectMap = this._behaviourEffectMap;\n        const sideEffects = getSideEffects(behaviour, behaviourEffectMap);\n        this._propagationInf = propagationInfo;\n\n        if (action) {\n            const selectionSet = action.dispatch(payload);\n            const propagationSelectionSet = this.getPropagationSelectionSet(selectionSet);\n            this._entryExitSet[behaviour] = propagationSelectionSet;\n            const shouldApplySideEffects = this.shouldApplySideEffects(propagate);\n\n            if (propagate) {\n                this.propagate(behaviour, payload, selectionSet.find(d => d.sourceSelectionSet), sideEffects);\n            }\n            if (shouldApplySideEffects) {\n                const applicableSideEffects = this.getApplicableSideEffects(sideEffects, payload, propagationInfo);\n                this.applySideEffects(applicableSideEffects, propagationSelectionSet, payload);\n            }\n        }\n\n        return this;\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet.find(d => !d.sourceSelectionSet);\n    }\n\n    shouldApplySideEffects () {\n        return true;\n    }\n\n    changeBehaviourStateOnPropagation (behaviour, value, key = 'default') {\n        const behaviourConditions = this._sourceBehaviours[behaviour] || (this._sourceBehaviours[behaviour] = {});\n        if (value instanceof Function) {\n            behaviourConditions[key] = value;\n        } else {\n            behaviourConditions[key] = () => value;\n        }\n        return this;\n    }\n\n    changeSideEffectStateOnPropagation (sideEffect, value, key = 'default') {\n        const sideEffectConditions = this._sourceSideEffects[sideEffect] || (this._sourceSideEffects[sideEffect] = {});\n        if (value instanceof Function) {\n            sideEffectConditions[key] = value;\n        } else {\n            sideEffectConditions[key] = () => value;\n        }\n    }\n\n    removeSideEffectPolicy (sideEffect, key) {\n        delete this._sourceSideEffects[sideEffect][key];\n        return this;\n    }\n\n    removeBehaviourPolicy (behaviour, key) {\n        delete this._sourceBehaviours[behaviour][key];\n        return this;\n    }\n\n    propagate () {\n        return this;\n    }\n\n    sideEffects (...sideEffects) {\n        if (sideEffects.length) {\n            this._sideEffects = sideEffects[0];\n            return this;\n        }\n        return this._sideEffects;\n    }\n\n    enableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, true);\n        return this;\n    }\n\n    disableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, false);\n        return this;\n    }\n\n    dissociateBehaviour (behaviour, physicalAction) {\n        const actionBehaviourMap = this._actionBehaviourMap;\n        for (const key in actionBehaviourMap) {\n            if (key === physicalAction) {\n                const behaviourMap = actionBehaviourMap[key];\n                behaviourMap.behaviours = behaviourMap.behaviours.filter(d => d !== behaviour);\n                this.mapActionsAndBehaviour(key);\n            }\n        }\n\n        return this;\n    }\n\n    dissociateSideEffect (sideEffect, behaviour) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        behaviourEffectMap[behaviour] = behaviourEffectMap[behaviour].filter(d => (d.name || d) !== sideEffect);\n        return this;\n    }\n\n    getApplicableSideEffects (sideEffects) {\n        return sideEffects;\n    }\n\n    attachPropagationListener (dataModel) {\n        dataModel.unsubscribe('propagation');\n        dataModel.on('propagation', this.onDataModelPropagation());\n        return this;\n    }\n\n    onDataModelPropagation () {\n        return (propValue) => {\n            const payload = propValue.payload;\n            const action = payload.action;\n\n            this.dispatchBehaviour(action, payload, {\n                propagate: false\n            });\n        };\n    }\n\n    createSelectionSet (uniqueIds, behaviouralActions) {\n        const behaviours = behaviouralActions || this._actions.behavioural;\n        const selectionSet = this._selectionSet;\n        const volatileSelectionSet = this._volatileSelectionSet;\n\n        for (const key in behaviours) {\n            if ({}.hasOwnProperty.call(behaviours, key)) {\n                selectionSet[key] = new SelectionSet(uniqueIds);\n                volatileSelectionSet[key] = new SelectionSet(uniqueIds, true);\n                this._entryExitSet[key] = null;\n            }\n        }\n        this._volatileSelectionSet = volatileSelectionSet;\n        this.selectionSet(selectionSet);\n        return this;\n    }\n\n    selectionSet (...selectionSet) {\n        if (selectionSet.length) {\n            this._selectionSet = selectionSet[0];\n            return this;\n        }\n        return this._selectionSet;\n    }\n\n    initializeSideEffects () {\n        const sideEffectDefinitions = this._sideEffectDefinitions;\n        this.sideEffects(initializeSideEffects(this, sideEffectDefinitions));\n        return this;\n    }\n\n    registerPhysicalActions (actions) {\n        const initedActions = initializePhysicalActions(this, actions);\n        Object.assign(this._actions.physical, initedActions);\n        return this;\n    }\n\n    /**\n     * Allows to propagate the datamodel with only the supplied fields. When propagation is done, then the fields\n     * which are supplied for the specified behavioural action is propagated.\n     *\n     * @public\n     *\n     * @param {string} action Name of behavioural action. If '*' is specified, then for all behavioural actions it is\n     * applied.\n     * @param {Array} fields Array of field names which will be propagated.\n     * @param {boolean} append If true, then it is appended to the existing propagation data model fields else only\n     * those fields are projected from propagation data model and propagated.\n     *\n     * @return {Firebolt} Instance of firebolt\n     */\n    propagateWith (action, fields, append = false) {\n        const behaviouralActions = this._actions.behavioural;\n        if (action === ALL_ACTIONS) {\n            for (const key in behaviouralActions) {\n                this._propagationFields[key] = {\n                    fields,\n                    append\n                };\n            }\n        } else {\n            this._propagationFields[action] = {\n                fields,\n                append\n            };\n        }\n        return this;\n    }\n\n    /**\n     * Map actions and behaviours\n     * @return {Firebolt} Firebolt instance\n     */\n    mapActionsAndBehaviour (phyAction) {\n        const initedPhysicalActions = this._actions.physical;\n        const map = this._actionBehaviourMap;\n\n        for (const action in map) {\n            if (!({}).hasOwnProperty.call(action, map) && action === (phyAction || action)) {\n                let target;\n                const mapObj = map[action];\n                target = mapObj.target;\n                const touch = mapObj.touch;\n                if (!target) {\n                    target = this.context.getDefaultTargetContainer();\n                }\n                const bind = hasTouch() ? touch === true || touch === undefined : !touch;\n                bind && this.bindActionWithBehaviour(initedPhysicalActions[action],\n                    target, mapObj.behaviours);\n            }\n        }\n        return this;\n    }\n\n    registerPhysicalBehaviouralMap (map) {\n        this._actionBehaviourMap = mergeRecursive(this._actionBehaviourMap, map);\n        return this;\n    }\n\n    /**\n     * Binds a target element with an action.\n     *\n     * @param {Function} action Action method\n     * @param {string} target Class name of element\n     * @param {Array} behaviourList Array of behaviours\n     * @return {FireBolt} Instance of firebolt\n     */\n    bindActionWithBehaviour (action, targets, behaviourList) {\n        if (typeof (targets) === 'string') {\n            targets = [targets];\n        }\n        targets.forEach((target) => {\n            const mount = this.context.mount();\n            const nodes = target.node instanceof Function ? target : selectElement(mount).selectAll(target);\n            if (!nodes.empty()) {\n                if (nodes instanceof Array) {\n                    nodes.forEach((node) => {\n                        action(selectElement(node), behaviourList);\n                    });\n                } else {\n                    action(nodes, behaviourList);\n                }\n            }\n        });\n        return this;\n    }\n\n    getPropagationInf () {\n        return this._propagationInf;\n    }\n\n    getAddSetFromCriteria (criteria, propagationInf = {}) {\n        const context = this.context;\n        const filteredDataModel = propagationInf.data ? propagationInf.data :\n            context.getDataModelFromIdentifiers(criteria, 'all');\n        return {\n            model: filteredDataModel,\n            uids: criteria === null ? null : (propagationInf.data ? propagationInf.entryRowIds :\n                filteredDataModel[0].getUids())\n        };\n    }\n\n    getSelectionSets (action) {\n        const sourceId = this.context.id();\n        const propagationInf = this._propagationInf || {};\n        const propagationSource = propagationInf.sourceId;\n        let applicableSelectionSets = [];\n        if (propagationSource !== sourceId) {\n            applicableSelectionSets = [this._volatileSelectionSet[action]];\n        }\n\n        if (propagationSource) {\n            applicableSelectionSets.push(this.selectionSet()[action]);\n        }\n        return applicableSelectionSets;\n    }\n\n    getFullData () {\n        return this.context.data();\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Returns the entry and exit set information of the specified behavioural action.\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of behavioural action.\n     *\n     * @return {Object} Entry exit set information.\n     */\n    getEntryExitSet (behaviour) {\n        return this._entryExitSet[behaviour];\n    }\n}\n","import { getSetInfo, getMergedSet, getSourceFields } from '../../helper';\n\n/**\n * This is the base class has all the common functionalities needed for all behavioural actions. Any other behavioural\n * action needs to extend this class.\n *\n * @public\n * @class GenericBehaviour\n * @module GenericBehaviour\n */\nexport default class GenericBehaviour {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n    }\n\n    /**\n     * Returns entry and exit set information. This method is called by firebolt when ```dispatchBehaviour``` is called\n     * dynamically or when any physical action is triggered on the chart.\n     *\n     * @param {Object} payload Payload information.\n     * @param {Object|Array} payload.criteria Identifiers of data interacted with.\n     *\n     * @return {Array} Entry and exit set information.\n     */\n    dispatch (payload) {\n        const criteria = payload.criteria;\n        const firebolt = this.firebolt;\n        const formalName = this.constructor.formalName();\n        const selectionSets = firebolt.getSelectionSets(formalName);\n        const {\n            model: filteredDataModel,\n            uids\n        } = this.firebolt.getAddSetFromCriteria(criteria, this.firebolt.getPropagationInf());\n        const entryExitSets = selectionSets.map((selectionSet) => {\n            this.setSelectionSet(uids, selectionSet);\n            return this.getEntryExitSet(selectionSet, filteredDataModel, payload);\n        });\n\n        return entryExitSets;\n    }\n\n    /**\n     * Updates the selection set by adding uids to the instance of {@link SelectionSet} or removing them.\n     * {@link SelectionSet} keeps the information of which rows are in the entry set and exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of row ids which got affected during interaction.\n     * @param {SelectionSet} selectionSet Instance of selection set.\n     *\n     * @return {GenericBehaviour} Instance of behaviour.\n     */\n    setSelectionSet () {\n        return this;\n    }\n\n    getEntryExitSet (selectionSet, filteredDataModel, payload) {\n        const {\n            entrySet,\n            exitSet,\n            completeSet\n        } = selectionSet.getSets();\n        const propagationInf = this.firebolt.getPropagationInf();\n        const dataModel = this.firebolt.getFullData();\n        const setConfig = {\n            dataModel,\n            filteredDataModel,\n            propagationData: propagationInf.data,\n            selectionSet\n        };\n\n        return {\n            entrySet: [getSetInfo('oldEntry', entrySet[0], setConfig),\n                getSetInfo('newEntry', entrySet[1], setConfig)],\n            exitSet: [getSetInfo('oldEntry', exitSet[0], setConfig),\n                getSetInfo('newExit', exitSet[1], setConfig)],\n            mergedEnter: getSetInfo('mergedEnter', getMergedSet(entrySet), setConfig),\n            mergedExit: getSetInfo('mergedExit', getMergedSet(exitSet), setConfig),\n            completeSet: getSetInfo('complete', completeSet, setConfig),\n            fields: getSourceFields(propagationInf, payload.criteria),\n            sourceSelectionSet: selectionSet._volatile === true\n        };\n    }\n\n    static mutates () {\n        return false;\n    }\n\n    enable () {\n        this._enabled = true;\n    }\n\n    disable () {\n        this._enabled = false;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n}\n\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class VolatileBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n                // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                    || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            selectionSet.updateExit();\n            const { entrySet } = selectionSet.getSets();\n            selectionSet.reset(getMergedSet(entrySet));\n            selectionSet.add(addSet);\n            selectionSet.update(existingAddSet);\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n    }\n}\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n","import VolatileBehaviour from './volatile';\nimport { HIGHLIGHT } from '../../enums/behaviours';\n\nexport default class HighlightBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return HIGHLIGHT;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport * as BEHAVIOURNAMES from '../../enums/behaviours';\n\n/**\n * This is the behaviour for brushing a region on the chart. It accepts a payload\n * which contains the x and y range of the data and other configuration. It will then\n * create a selection box from the range and select the points which fall within the range.\n */\nexport default class BrushBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return BEHAVIOURNAMES.BRUSH;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport { FILTER } from '../../enums/behaviours';\n\nexport default class FilterBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return FILTER;\n    }\n\n    static mutates () {\n        return true;\n    }\n}\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class PersistentBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            const propagationInf = this.firebolt.getPropagationInf();\n            // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            if (propagationInf.propagate === false) {\n                selectionSet.updateExit();\n                const { entrySet } = selectionSet.getSets();\n                selectionSet.reset(getMergedSet(entrySet));\n                selectionSet.add(addSet);\n                selectionSet.update(existingAddSet);\n            } else {\n                // existing add set\n                if (existingAddSet.length) {\n                    selectionSet.updateExit();\n                    selectionSet.remove(existingAddSet);\n                } else {\n                    selectionSet.updateEntry();\n                    selectionSet.add(addSet);\n                }\n                const { exitSet } = selectionSet.getSets();\n                const mergedExitSet = getMergedSet(exitSet);\n                const completeSetCount = selectionSet.getCompleteSet().length;\n                if (mergedExitSet.length === completeSetCount) {\n                    selectionSet.reset();\n                }\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n\n        return this;\n    }\n}\n","import PersistentBehaviour from './persistent';\nimport { SELECT } from '../../enums/behaviours';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return SELECT;\n    }\n}\n\n","import { DimensionSubtype, MeasureSubtype } from 'muze-utils';\n/**\n * Gets the drag action configuration\n * @param {VisualUnit} instance instance of visual unit\n * @param {Object} config x y positions\n * @return {Object} Payload of behaviour\n*/\n/* istanbul ignore next */ const getDragActionConfig = (sourceInfo, config, fieldsConfig) => {\n    if (!(sourceInfo.axes.x || sourceInfo.axes.y)) {\n        return {\n            criteria: null\n        };\n    }\n\n    const axes = sourceInfo.axes;\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const axisFields = sourceInfo.fields;\n    const xField = axisFields.x[0].getMembers()[0];\n    const yField = axisFields.y[0].getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n    const dimensions = {};\n    const stPos = config.startPos;\n    const endPos = config.endPos;\n\n    if (stPos.x === endPos.x && stPos.y === endPos.y) {\n        return {\n            criteria: null\n        };\n    }\n\n    const dragDim = xFieldType === MeasureSubtype.CONTINUOUS ? (yFieldType === MeasureSubtype.CONTINUOUS ?\n        ['x', 'y'] : ['y']) : ['x'];\n    const criteria = {};\n    const isXDimension = xFieldType === DimensionSubtype.CATEGORICAL;\n    const isYDimension = yFieldType === DimensionSubtype.CATEGORICAL;\n    const xRange = xAxis.invertExtent(stPos.x, endPos.x);\n    const yRange = yAxis.invertExtent(stPos.y, endPos.y);\n    const selectedDomains = {\n        x: stPos.x === endPos.x ? [] : (isXDimension ? xRange : xRange.sort((a, b) => a - b)),\n        y: stPos.y === endPos.y ? [] : (isYDimension ? yRange : yRange.sort((a, b) => a - b))\n    };\n    const rangeObj = {};\n\n    if (dragDim.length === 2) {\n        rangeObj[xField] = selectedDomains.x;\n        rangeObj[yField] = selectedDomains.y;\n        if (xField === yField) {\n            const xdom = selectedDomains.x;\n            const ydom = selectedDomains.y;\n            const min = xdom[0] > ydom[0] ? ydom : xdom;\n            const max = min === ydom ? xdom : ydom;\n            if (min[1] < max[0]) {\n                rangeObj[xField] = [];\n            } else {\n                rangeObj[xField] = [max[0], min[1] < max[1] ? min[1] : max[1]];\n            }\n            dimensions.x = [stPos.x, endPos.x];\n            dimensions.y = [stPos.y, endPos.y];\n        }\n    } else {\n        criteria[dragDim[0]] = selectedDomains[dragDim[0]] || [];\n\n        if (dragDim[0] === 'x') {\n            rangeObj[xField] = criteria.x;\n            if (xFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.x = (config.snap && stPos.x !== endPos.x) ? xAxis.getNearestRange(stPos.x, endPos.x) :\n                    [stPos.x, endPos.x];\n            }\n        } else {\n            rangeObj[yField] = criteria.y;\n            if (yFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.y = (config.snap && stPos.y !== endPos.y) ? yAxis.getNearestRange(stPos.y, endPos.y) :\n                    [stPos.y, endPos.y];\n            }\n        }\n    }\n\n    return {\n        criteria: rangeObj,\n        dimensions\n    };\n};\n\nexport default getDragActionConfig;\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './drag-action-config';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const attachDragEvent = (targetEl, behaviours, firebolt, touch) => {\n    let startPos = {};\n    let endPos = {};\n    let drawingInf;\n\n    const d3Drag = getD3Drag();\n    let touchStart;\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n        drawingInf = firebolt.context.getDrawingContext();\n        touchStart = new Date().getTime();\n    }).on('drag', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        if (touch && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos\n        }, firebolt.context.data().getFieldsConfig());\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }).on('end', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        const duration = new Date().getTime() - touchStart;\n\n        if (touch && duration > 100 && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos,\n            snap: true\n        }, firebolt.context.data().getFieldsConfig());\n        payload.dragEnd = true;\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }));\n};\n\n","import { getClientPoint, getEvent } from 'muze-utils';\nimport { CONSOLIDATED, FRAGMENTED } from '../../enums/constants';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} instance instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const context = firebolt.context;\n        const tooltipConf = context.config().interaction.tooltip;\n        const mode = tooltipConf.mode;\n        const pos = getClientPoint(context.getDrawingContext().svgContainer, event);\n        const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n            getAllPoints: mode === CONSOLIDATED || mode === FRAGMENTED,\n            data: args,\n            event\n        });\n        const payload = {\n            criteria: nearestPoint ? nearestPoint.id : null,\n            showInPosition: nearestPoint.showInPosition,\n            target: nearestPoint.target,\n            position: pos,\n            mode\n        };\n\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                            criteria: null\n                        }));\n                    });\n};\n\nexport default hover;\n","export const CLASSPREFIX = 'muze';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\n\n","import { getClientPoint } from 'muze-utils';\n\nexport const generatePayloadFromEvent = function (args, event, firebolt) {\n    const context = firebolt.context;\n    const pos = getClientPoint(context.getDrawingContext().svgContainer, event.touches ? event.touches[0] : event);\n    const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n        data: args,\n        event\n    });\n    return {\n        criteria: nearestPoint ? nearestPoint.id : null,\n        showInPosition: nearestPoint.showInPosition,\n        target: nearestPoint.target,\n        position: pos\n    };\n};\n","import { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport { longtouch } from './longtouch';\nimport { touchdrag } from './touch-drag';\nimport * as ACTIONNAMES from '../../enums/actions';\nimport click from './click';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click,\n    [ACTIONNAMES.LONGTOUCH]: longtouch,\n    [ACTIONNAMES.TOUCHDRAG]: touchdrag\n};\n\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt);\n};\n\nexport default drag;\n","/* global setTimeout */\nimport { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nexport const longtouch = firebolt => (targetEl, behaviours) => {\n    let event;\n    let touchEnd;\n    const dispatchBehaviour = function (args) {\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    touchEnd = false;\n    event = getEvent();\n    targetEl.on('touchstart', (args) => {\n        event = getEvent();\n        touchEnd = false;\n        setTimeout(() => {\n            if (!touchEnd) {\n                dispatchBehaviour(args);\n            } else {\n                behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                    criteria: null\n                }));\n            }\n        }, 100);\n    }).on('touchend', () => {\n        touchEnd = true;\n    });\n};\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const touchdrag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt, true);\n};\n\n","const ANCHORS = 'anchors';\nconst TOOLTIP = 'tooltip';\nconst BRUSH_ANCHORS = 'brush-anchors';\nconst PERSISTENT_ANCHORS = 'persistent-anchors';\nconst FILTER = 'filter';\nconst HIGHLIGHTER = 'highlighter';\nconst CROSSLINE = 'crossline';\n\nexport {\n    ANCHORS,\n    BRUSH_ANCHORS,\n    PERSISTENT_ANCHORS,\n    FILTER,\n    HIGHLIGHTER,\n    CROSSLINE,\n    TOOLTIP\n};\n","export const PROPS = {\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import GenericSideEffect from './generic-sideeffect';\n\nexport default GenericSideEffect;\n","import { mergeRecursive, getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { PROPS } from './props';\n\n/**\n * This is the base class of all side effects. It contains all common methods like setting configuration, disabling,\n * enabling side effect, etc. Every new side effect has to inherit this class or {@link SpawnableSideEffect} or\n * {@link SurrogateSideEffect} class. All side effects are initialized by firebolt. The instance of firebolt is\n * passed on initialization. The firebolt instance contains ```context``` which is the instance of visual unit with\n * which the firebolt is attached.\n *\n * @public\n * @class\n * @module GenericSideEffect\n */\nexport default class GenericSideEffect {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n        this._strategy = 'default';\n        this._config = {};\n        this._id = getUniqueId();\n        this._strategies = {};\n        generateGetterSetters(this, PROPS);\n        this.config(this.constructor.defaultConfig());\n    }\n\n    /**\n     * Returns the default configuration of the side effect.\n     *\n     * @public\n     * @return {Object} Default configuration of side effect.\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the formal name of a side effect. This method must be implemented by all side effects which changes\n     * or adds any element in the visualization.\n     *\n     * @return {string} Formal name of side effect.\n     */\n    static formalName () {\n        return 'generic';\n    }\n\n    static target () {\n        return 'all';\n    }\n\n    /**\n     * Returns true if the side effects mutates the data of chart.\n     *\n     * @public\n     *\n     * @return {boolean} If the side effect mutates the data of chart.\n     */\n    static mutates () {\n        return false;\n    }\n\n    /**\n     * Sets or gets the configuration of side effect.\n     *\n     * When setter,\n     * @param {Object} config Configuration of side effect.\n     * @return {GenericSideEffect} Side effect instance.\n     *\n     * When getter,\n     * @return {Object} Side effect configuration.\n     */\n    config (...params) {\n        if (params.length) {\n            this._config = mergeRecursive(this._config, params[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    disable () {\n        this._enabled = false;\n        return this;\n    }\n\n    enable () {\n        this._enabled = true;\n        return this;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n\n    /**\n     * Applies the interaction effect on the chart. This is where the implemntation of the side effect is defined.\n     *\n     * @param {Object} selectionSet Contains the entry and exit set of data which got affected during interaction.\n     * @param {Object} selectionSet.mergedEnter Combined previous entry and new entry set.\n     * @param {DataModel} selectionSet.mergedEnter.model Instance of data model containing all rows which got\n     * affected during interaction.\n     * @param {Array} selectionSet.mergedEnter.uids Ids of all rows which were affected during interaction.\n     * @param {Object} selectionSet.mergedExit Combined previous exit and new exit set.\n     * @param {DataModel} selectionSet.mergedExit.model Instance of data model containing rows which were not affected\n     * during interaction.\n     * @param {Array} selectionSet.mergedExit.uids Ids of all rows which were not affected during interaction.\n     * @param {Object} selectionSet.entrySet Entry set information.\n     * @param {Array} selectionSet.entrySet[0].uids All row ids which got affected during previous interaction.\n     * @param {Array} selectionSet.entrySet[1].uids All row ids which got affected during current interaction.\n     * @param {Array} selectionSet.exitSet[0].uids All row ids which were not affected during previous interaction.\n     * @param {Array} selectionSet.exitSet[1].uids All row ids which were not affected during current interaction.\n     * @param {Object} payload Payload information of the behavioural action on trigger of which this side effect\n     * is applied.\n     * @param {Object} options Optional information for side effect like strategy, etc.\n     */\n    apply () {\n        return this;\n    }\n\n    /**\n     * Adds a new strategy method for this side effect. The strategy method is implemented by side effect class.\n     *\n     * @param {string} name Name of the strategy.\n     * @param {Function} fn Strategy method.\n     *\n     * @return {GenericSideEffect} Instance of side effect.\n     */\n    setStrategy (name, fn) {\n        if (fn) {\n            this._strategies[name] = fn;\n        }\n        return this;\n    }\n}\n","import GenericSideEffect from './generic';\n\n/**\n * This class is inherited by all side effects which changes the look of any existing elements in the visualization.\n * For example, if a side effect wants to change the color of bar plots, then it is a surrogate side effect.\n *\n * To use this,\n * ```\n *      const SurrogateSideEffect = muze.SideEffects.standards.SurrogateSideEffect;\n *\n *      class BarColorChanger extends SurrogateSideEffect {\n *          static formalName () {\n *              return 'colorChanger';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n *\n * @module SurrogateSideEffect\n * @class\n * @extends GenericSideEffect\n */\nexport default class SurrogateSideEffect extends GenericSideEffect {\n    /**\n     * Applies or removes interaction styles from plot elements. An array of row ids needs to be passed\n     * which identifies the plot elements and applies styles to them.\n     *\n     * To apply the interaction style,\n     * ```\n     *      const entryRowIds = entrySet[0].uids;\n     *      const interactionStyle = [{\n     *          type: 'fill',\n     *          intensity: [0, 0, 15, 0] // hsla configuration\n     *      }];\n     *\n     *      this.applyInteractionStyle(entryRowIds, interactionStyle, 'brighten', true);\n     * ```\n     * @public\n     * @param {Array} set Array of row ids.\n     * @param {Array} config Style configuration.\n     * @param {Object} config[0] fill or stroke configuration.\n     * @param {string} config[0].type Type of style - fill or stroke.\n     * @param {Array} config[0].intensity hsla configuration.\n     * @param {string} interactionType Type of interaction. This is needed for storing the styles for\n     * each type of interaction in the plot elements.\n     * @param {boolean} apply Whether to apply or remove the interaction style.\n     *\n     * @return {SurrogateSideEffect} Instance of surrogate side effect.\n     */\n    applyInteractionStyle (set, config = {}, interactionType, apply) {\n        const layers = this.firebolt.context.layers();\n        layers.forEach(layer => layer.config().interactive !== false &&\n            layer.applyInteractionStyle(interactionType, set.uids, apply));\n        return this;\n    }\n}\n","import { makeElement } from 'muze-utils';\n\nimport GenericSideEffect from './generic';\n\n/**\n * Any side effect which will add any new element to the chart like drawing a rectangular box or any annotation over\n * the chart needs to inherit this class. This class has methods which returns the container where the dom elements\n * needs to be created.\n *\n * To use this,\n * ```\n *      const SpawnableSideEffect = muze.SideEffects.standards.SpawnableSideEffect;\n *\n *      class SelectionBox extends SpawnableSideEffect {\n *          static formalName () {\n *              return 'selectionBox';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n * @class\n * @extends GenericSideEffect\n * @module SpawnableSideEffect\n */\nexport default class SpawnableSideEffect extends GenericSideEffect {\n    /**\n     * Creates a html or svg element in the container.\n     *\n     * @public\n     * @param {SVGElement|HTMLElement} container Container where the dom element will be rendered.\n     * @param {string} elemType Type of dom element.\n     * @param {Array} data Array of objects with which the dom elements will be binded.\n     * @param {string} className class name of the element.\n     *\n     * @return {Selection} D3 Selection of the element.\n     */\n    createElement (container, elemType, data, className, callbacks) {\n        return makeElement(container, elemType, data, className, callbacks);\n    }\n\n    /**\n     * Returns the drawing information for side effect like svg container, dimensions of the visual unit.\n     *\n     * @public\n     * @return {Object} Drawing information for side effect.\n     * ```\n     *      sideEffectGroup: // svg container where the side effect needs to be appended.\n     *      svgContainer: // svg container of the {@link VisualUnit}.\n     *      htmlContainer: // html div container of the {@link VisualUnit}.\n     *      width: // Width of the {@link VisualUnit}\n     *      height: // Height of the {@link VisualUnit}\n     * ```\n     */\n    drawingContext (...drawingContext) {\n        if (drawingContext.length) {\n            this._drawingContext = drawingContext[0];\n            return this;\n        }\n        return this._drawingContext();\n    }\n\n    show () {\n        return this;\n    }\n\n    hide () {\n        return this;\n    }\n}\n","import { selectElement } from 'muze-utils';\n\nexport const getBoxDimensionsFromPayload = (payload, axes, axisFields) => {\n    let x1;\n    let x2;\n    let y1;\n    let y2;\n    let xRange;\n    let yRange;\n    let direction;\n    const criteria = payload.criteria;\n    const dimensions = payload.dimensions || {};\n    const xDim = dimensions.x;\n    const yDim = dimensions.y;\n\n    if (criteria === null) {\n        return null;\n    }\n\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const xLinear = xAxis.constructor.type() === 'linear';\n    const yLinear = yAxis.constructor.type() === 'linear';\n    const xField = `${axisFields.x[0]}`;\n    const yField = `${axisFields.y[0]}`;\n    const xCriteria = criteria[xField];\n    const yCriteria = criteria[yField];\n\n    if (xCriteria && xCriteria[0] instanceof Array) {\n        xRange = xCriteria[0];\n        yRange = xCriteria[1];\n    } else {\n        xRange = xCriteria || [];\n        yRange = yCriteria || [];\n    }\n    direction = xCriteria && yCriteria ? 'both' : (xCriteria ? 'vertical' : 'horizontal');\n    if (xRange && xRange.length) {\n        if ((yAxis.constructor.type() === 'band' && xLinear)) {\n            x1 = x2 = undefined;\n            direction = 'horizontal';\n        } else {\n            const domain = xAxis.domain();\n            const bandScale = xAxis.constructor.type() === 'band';\n            let x1Val;\n            let x2Val;\n            if (bandScale) {\n                let x1DomainIndex = domain.indexOf(xRange[0]);\n                let x2DomainIndex = domain.indexOf(xRange[xRange.length - 1]);\n                [x1DomainIndex, x2DomainIndex] = [x1DomainIndex, x2DomainIndex].sort((a, b) => a - b);\n                x1Val = domain[x1DomainIndex];\n                x2Val = domain[x2DomainIndex];\n            } else {\n                x1Val = xRange[0];\n                x2Val = xRange[xRange.length - 1];\n            }\n            x1 = xAxis.getScaleValue(x1Val);\n            x2 = xAxis.getScaleValue(x2Val);\n            x2 += bandScale ? xAxis.getUnitWidth() : 0;\n        }\n    } else {\n        x1 = x2 = undefined;\n    }\n    if (yRange && yRange.length) {\n        if ((xAxis.constructor.type() === 'band' && yLinear)) {\n            y1 = y2 = undefined;\n            direction = 'vertical';\n        } else {\n            const domain = yAxis.domain();\n            const bandScale = yAxis.constructor.type() === 'band';\n            let y1Val;\n            let y2Val;\n            if (bandScale) {\n                let y1DomainIndex = domain.indexOf(yRange[0]);\n                let y2DomainIndex = domain.indexOf(yRange[yRange.length - 1]);\n                [y1DomainIndex, y2DomainIndex] = [y1DomainIndex, y2DomainIndex].sort(((a, b) => b - a));\n                y1Val = domain[y1DomainIndex];\n                y2Val = domain[y2DomainIndex];\n            } else {\n                y1Val = yRange[0];\n                y2Val = yRange[yRange.length - 1];\n            }\n            y1 = yAxis.getScaleValue(y1Val);\n            y2 = yAxis.getScaleValue(y2Val);\n            y2 += yAxis.constructor.type() === 'band' ? yAxis.getUnitWidth() : 0;\n        }\n    } else {\n        y1 = y2 = undefined;\n    }\n\n    if ((yLinear && xLinear) || !payload.dragEnd) {\n        if (xDim) {\n            [x1, x2] = xDim;\n        }\n        if (yDim) {\n            [y1, y2] = yDim;\n        }\n    }\n\n    return {\n        dimension: {\n            x1,\n            x2,\n            y1,\n            y2\n        },\n        direction\n    };\n};\n\nexport const changeVisibility = (context, sideEffectGroup, visible) => {\n    const config = context.config();\n    const className = config.defClassName;\n    const classPrefix = config.classPrefix;\n    selectElement(sideEffectGroup).selectAll(`.${classPrefix}-${className}`)\n                    .style('display', visible ? 'block' : 'none');\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    isValidValue\n} from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport './styles.scss';\nimport SpawnableSideEffect from '../spawnable';\nimport { selectionBoxDrag } from '../../actions/physical/selection-box-drag';\nimport { getBoxDimensionsFromPayload, changeVisibility } from './helper';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\nclass SelectionBox extends SpawnableSideEffect {\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            defClassName: 'selection-box-group',\n            className: '',\n            classPrefix: CLASSPREFIX,\n            box: {\n                defClassName: 'selection-box',\n                className: ''\n            },\n            transition: {\n                duration: 200\n            }\n        };\n    }\n\n    static formalName () {\n        return 'selectionBox';\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     * @param {Object} dimension Dimensions of the selection box.\n     * @param {number} dimension.x1 Starting x position\n     * @param {number} dimension.x2 Ending x position\n     * @param {number} dimension.y1 Starting y position\n     * @param {number} dimension.y2 Ending y position\n     * @param {Object} conf Configuration needed to draw the selection box\n     * @param {number} unitWidth Width of the visual unit.\n     * @param {number} unitHeight Height of the visual unit.\n     */\n    apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const config = this._config;\n        const boxConf = config.box;\n        const firebolt = this.firebolt;\n        const drawingInf = this.drawingContext();\n        const mountPoint = drawingInf.sideEffectGroup;\n        const unitWidth = drawingInf.width;\n        const unitHeight = drawingInf.height;\n        const classPrefix = config.classPrefix;\n        const selectionGroupClassName = config.defClassName;\n\n        if (payload.criteria === null) {\n            this.hide(drawingInf);\n            return this;\n        }\n\n        const sourceInf = firebolt.context.getSourceInfo();\n        const { dimension, direction } = getBoxDimensionsFromPayload(payload, sourceInf.axes,\n            sourceInf.fields);\n        const transition = payload.dragEnd && config.transition;\n\n        if (direction === 'both' || direction === 'vertical') {\n            x = Math.min(dimension.x1, dimension.x2);\n            width = Math.abs(dimension.x2 - dimension.x1);\n        } else {\n            x = 0;\n            width = unitWidth;\n        }\n        if (direction === 'both' || direction === 'horizontal') {\n            y = Math.min(dimension.y1, dimension.y2);\n            height = Math.abs(dimension.y2 - dimension.y1);\n        } else {\n            height = unitHeight;\n            y = 0;\n        }\n        this.show(drawingInf);\n        // Create the data array for drawing the rectangle\n        const points = [\n            {\n                x,\n                y,\n                width,\n                height\n            }\n        ];\n        // Create the container group for selection box.\n        const selectionGroup = makeElement(selectElement(mountPoint), 'g', [1],\n            `.${classPrefix}-${selectionGroupClassName}`);\n        const sideEffect = this;\n        const selection = selectionGroup.selectAll('rect').data(points);\n        const selectionBox = selection.enter().append('rect')\n                        .each(function () {\n                            selectionBoxDrag(firebolt)(selectElement(this), ['brush'], sideEffect);\n                        })\n                        .merge(selection)\n                        .each(function (attrs) {\n                            let element = selectElement(this);\n                            transition && (element = element.transition().duration(transition.duration));\n                            for (const key in attrs) {\n                                if ({}.hasOwnProperty.call(attrs, key)) {\n                                    isValidValue(attrs[key]) && element.attr(key, attrs[key]);\n                                }\n                            }\n                        });\n        // Get the qualified class name for selection box rectangle\n        const boxClassName = getQualifiedClassName(boxConf.defClassName, this._id, classPrefix);\n        selectionBox.classed(boxClassName.join(' '), true);\n        selectionBox.classed(boxConf.className, true);\n\n        return this;\n    }\n\n    hide (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, false);\n    }\n\n    show (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, true);\n    }\n}\n\nexport default SelectionBox;\n\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './helpers/drag-action-config';\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let subject;\n    let drawingInf;\n    const context = firebolt.context;\n    const onDrag = (payload) => {\n        behaviours.forEach(action => firebolt.dispatchBehaviour(action, payload));\n    };\n    const d3Drag = getD3Drag();\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        drawingInf = context.getDrawingContext();\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        subject.x += event.dx;\n        subject.y += event.dy;\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                }\n            }, context.data().getFieldsConfig());\n            onDrag(payload);\n        }\n    }).on('end', () => {\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                },\n                snap: true\n            }, context.data().getFieldsConfig());\n            payload.dragEnd = true;\n            onDrag(payload);\n        }\n    }));\n};\n","export const CLASSPREFIX = 'muze';\nexport const ARROW_RIGHT = 'right';\nexport const ARROW_TOP = 'top';\nexport const ARROW_BOTTOM = 'bottom';\nexport const ARROW_LEFT = 'left';\nexport const TOOLTIP_LEFT = 'left';\nexport const TOOLTIP_RIGHT = 'right';\nexport const TOOLTIP_BOTTOM = 'bottom';\nexport const TOOLTIP_TOP = 'top';\nexport const INITIAL_STYLE = {\n    position: 'absolute',\n    width: 0,\n    height: 0\n};\nexport const TABLE_FORMAT = 'table';\n","import { CLASSPREFIX } from './constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'tooltip-box',\n    connectorClassName: 'tooltip-connectors',\n    className: '',\n    row: {\n        margin: 0\n    },\n    content: {\n        spacing: 5,\n        iconContainerSize: 10,\n        iconScale: 1,\n        iconShape: 'circle',\n        iconColor: '#ff0000',\n        rowMargin: '4px 0 4px 0',\n        margin: 10,\n        separator: ':',\n        className: 'tooltip-content-container',\n        parentClassName: 'tooltip-content-parent-container'\n    },\n    arrow: {\n        size: 10,\n        disabled: false,\n        defClassName: 'tooltip-arrow',\n        className: '',\n        color: 'rgba(195,195,195,0.85)'\n    }\n};\n","import { getQualifiedClassName } from 'muze-utils';\nimport { TOOLTIP_LEFT, TOOLTIP_RIGHT, ARROW_RIGHT, ARROW_LEFT, TOOLTIP_BOTTOM } from './constants';\n\nexport const getArrowPos = (orient, dim, measurement, config) => {\n    let arrowPos;\n    const { x, y, boxHeight, boxWidth } = measurement;\n    const arrowDisabled = config.arrow.disabled;\n    const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n\n    if (orient === ARROW_LEFT || orient === ARROW_RIGHT) {\n        let start = 0;\n        let diff = boxHeight / 2;\n        const plotBottom = dim.y + dim.height;\n        const boxBottom = y + boxHeight;\n\n        if (dim.y > y) {\n            start = dim.y - y;\n            diff = (plotBottom >= boxBottom ? (boxBottom - dim.y) : dim.height) / 2;\n        } else if (boxBottom > plotBottom) {\n            diff = Math.abs(y - (dim.y + dim.height)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    } else {\n        let start = 0;\n        let diff = boxWidth / 2;\n        const plotRight = dim.x + dim.width;\n        const boxRight = x + boxWidth;\n\n        if (dim.x > x) {\n            start = dim.x - x;\n            diff = (plotRight >= boxRight ? (boxRight - dim.x) : dim.width) / 2;\n        } else if (boxRight > plotRight) {\n            diff = Math.abs(x - (dim.x + dim.width)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    }\n    return arrowPos;\n};\n\n/**\n * Places the arrow in the specified arrow position. It also applies appropriate arrow\n * class name to the arrow element.\n * @param {string} position Left, bottom or right position of the arrow;\n * @param {number} arrowPos position of arrow in pixels\n * @return {Tooltip} Instance of tooltip.\n */\nexport const placeArrow = (context, position, arrowPos) => {\n    const tooltipArrow = context._tooltipArrow;\n    const tooltipBackground = context._tooltipBackground;\n    const config = context._config;\n    const classPrefix = config.classPrefix;\n    const arrowConf = config.arrow;\n    const className = getQualifiedClassName(arrowConf.defClassName, context._id, config.classPrefix);\n\n    tooltipArrow.style('display', 'block');\n    tooltipArrow.attr('class', `${className.join(' ')}`);\n    if (position === TOOLTIP_LEFT || position === TOOLTIP_RIGHT) {\n        tooltipArrow.style('top', `${arrowPos}px`);\n        tooltipArrow.style('left', '');\n        tooltipBackground.style('top', `${arrowPos}px`);\n        tooltipBackground.style('left', '');\n    } else {\n        position === TOOLTIP_BOTTOM ? tooltipArrow.style('top', '100%') : tooltipArrow.style('top',\n            `-${arrowConf.size}px`);\n        tooltipArrow.style('left', `${arrowPos}px`);\n        position === TOOLTIP_BOTTOM ? tooltipBackground.style('top', '100%') : tooltipBackground.style('top',\n            `-${arrowConf.size + 3}px`);\n        tooltipBackground.style('left', `${arrowPos}px`);\n    }\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow`, true);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${context._arrowOrientation}`, false);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${position}`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${context._arrowOrientation}`, false);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${position}`, true);\n    return this;\n};\n\nexport const reorderContainers = (parentContainer, className) => {\n    parentContainer.selectAll(className).sort((a, b) => a - b);\n};\n","import {\n    selectElement,\n    mergeRecursive,\n    makeElement,\n    setAttrs,\n    setStyles,\n    getSymbol,\n    isSimpleObject\n} from 'muze-utils';\nimport { TABLE_FORMAT } from './constants';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class is used to manage the content of tooltip.\n */\nexport default class Content {\n    /**\n     * Creates an instance of content.\n     */\n    constructor () {\n        this._model = null;\n        this._formatter = null;\n        this._config = this.constructor.defaultConfig();\n    }\n   /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        const config = defaultConfig.content;\n        config.classPrefix = defaultConfig.classPrefix;\n        return config;\n    }\n\n    config (...c) {\n        if (c.length > 0) {\n            this._config = mergeRecursive(this._config, c[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Update model. The format contains presentation strategy which determines how to show the content.\n     * If no strategy is mentioned then default is to show key value pair\n    */\n    update (item) {\n        this._model = item.model;\n        this._formatter = item.formatter;\n        return this;\n    }\n\n    context (ctx) {\n        this._context = ctx;\n        return this;\n    }\n\n    render (mount) {\n        let data;\n        const config = this._config;\n        const iconContainerSize = config.iconContainerSize;\n        const formatter = this._formatter;\n        const rowMargin = config.rowMargin;\n        const model = this._model;\n        const { classPrefix } = config;\n\n        this._mount = mount;\n        if (model instanceof Array) {\n            data = model;\n        } else {\n            data = formatter(this._model, this.config(), this._context);\n        }\n\n        if (data instanceof Function) {\n            const mountHtmlTooltip = makeElement(mount, 'div', [1], `${classPrefix}-tooltip-html-container`);\n            mountHtmlTooltip.html(data());\n        } else {\n            let content = data;\n            let displayFormat = 'default';\n\n            if (isSimpleObject(data)) {\n                content = data.content;\n                displayFormat = data.displayFormat;\n            }\n\n            const body = makeElement(mount, 'div', [displayFormat], `${classPrefix}-tooltip-content`, {},\n                d => d);\n\n            if (displayFormat === TABLE_FORMAT) {\n                const table = makeElement(body, 'table', [1], `${classPrefix}-tooltip-table`);\n                const tbody = makeElement(table, 'tbody', [1], `${classPrefix}-tooltip-table-tbody`);\n                const rows = makeElement(tbody, 'tr', content, `${classPrefix}-tooltip-table-row`);\n                rows.each(function (d, i) {\n                    selectElement(this).classed(`${classPrefix}-tooltip-table-row-${i}`, true);\n                });\n                const cells = makeElement(rows, 'td', d => d, `${classPrefix}-tooltip-table-cell`);\n                cells.each(function (d) {\n                    selectElement(this).html(d);\n                });\n            } else {\n                const rows = makeElement(body, 'div', content, '', {\n                    update: (elem, elemData) => elem.attr('class', elemData.className)\n                });\n                const cells = makeElement(rows, 'span', d => d.data, `${classPrefix}-tooltip-content`);\n                cells.attr('class', `${classPrefix}-tooltip-content`);\n                setStyles(rows, {\n                    margin: rowMargin\n                });\n                setStyles(cells, {\n                    display: 'inline-block' // 'margin-right': `${config.spacing}px`\n                });\n\n                cells.each(function (d) {\n                    const el = selectElement(this);\n                    el.html('');\n                    if (d instanceof Object) {\n                        if (d.type === 'icon') {\n                            const svg = makeElement(el, 'svg', [1]);\n                            const path = makeElement(svg, 'path', [1]);\n                            const shape = d.shape instanceof Function ? d.shape : getSymbol(d.shape);\n\n                            setAttrs(svg, {\n                                x: 0,\n                                y: 0,\n                                width: iconContainerSize,\n                                height: iconContainerSize\n                            });\n                            setAttrs(path, {\n                                d: shape.size(d.size)(),\n                                transform: `translate(${iconContainerSize / 2}, ${iconContainerSize / 2})`\n                            });\n                            setStyles(path, {\n                                fill: d.color\n                            });\n                            setStyles(svg, {\n                                width: `${iconContainerSize}px`,\n                                height: `${iconContainerSize}px`\n                            });\n                        } else {\n                            el.html(d.value);\n                            d.className && el.classed(d.className, true);\n                            setStyles(el, d.style);\n                        }\n                    } else {\n                        el.html(d);\n                    }\n                });\n            }\n        }\n        return this;\n    }\n\n    clear () {\n        this._model = null;\n        return this;\n    }\n}\n","import {\n    mergeRecursive,\n    getQualifiedClassName,\n    getUniqueId,\n    selectElement,\n    setStyles,\n    makeElement\n} from 'muze-utils';\nimport { ARROW_BOTTOM, ARROW_LEFT, ARROW_RIGHT, TOOLTIP_LEFT, TOOLTIP_RIGHT, TOOLTIP_BOTTOM, TOOLTIP_TOP,\n    INITIAL_STYLE } from './constants';\nimport { defaultConfig } from './default-config';\nimport { getArrowPos, placeArrow, reorderContainers } from './helper';\nimport './styles.scss';\nimport Content from './content';\n\n/**\n * This component is responsible for creating a tooltip element. It appends the tooltip\n * in the body element.\n * @class Tooltip\n */\nexport default class Tooltip {\n    /**\n     * Initializes the tooltip with the container element and configuration\n     * @param {HTMLElement} container container where the tooltip will be mounted.\n     * @param {string} className Class name of the tooltip.\n     */\n    constructor (htmlContainer, svgContainer) {\n        let connectorContainer = svgContainer;\n        this._id = getUniqueId();\n        this._config = {};\n        this.config({});\n        const tooltipConf = this._config;\n        const classPrefix = tooltipConf.classPrefix;\n        const contentClass = tooltipConf.content.parentClassName;\n        const container = makeElement(htmlContainer, 'div', [1], `${classPrefix}-tooltip-container`);\n        this._container = container;\n        this._tooltipContainer = container.append('div').style('position', 'absolute');\n        this._contentContainer = this._tooltipContainer.append('div').attr('class', `${classPrefix}-${contentClass}`);\n        this._tooltipBackground = this._tooltipContainer.append('div').style('position', 'relative');\n        this._tooltipArrow = this._tooltipContainer.append('div');\n\n        if (!svgContainer) {\n            connectorContainer = htmlContainer.append('svg').style('pointer-events', 'none');\n        }\n        this._contents = {};\n        this._tooltipConnectorContainer = selectElement(connectorContainer)\n            .append('g')\n            .attr('class', `${tooltipConf.classPrefix}-${tooltipConf.connectorClassName}`);\n        const id = this._id;\n        const defClassName = tooltipConf.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, id, tooltipConf.classPrefix);\n\n        setStyles(this._tooltipArrow, INITIAL_STYLE);\n        setStyles(this._tooltipBackground, INITIAL_STYLE);\n        this.addClass(qualifiedClassName.join(' '));\n        this.addClass(tooltipConf.className);\n        this.hide();\n    }\n\n    /**\n     * Sets the configuration of tooltip.\n     * @param {Object} config Configuration of tooltip\n     * @return {Tooltip} Instance of tooltip\n     */\n    config (...config) {\n        if (config.length > 0) {\n            const defConf = mergeRecursive({}, this.constructor.defaultConfig());\n            this._config = mergeRecursive(defConf, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n    /**\n     * Sets the class name of tooltip\n     * @param {string} className tooltip class name\n     * @return {Tooltip} Instance of tooltip.\n     */\n    addClass (className) {\n        this._tooltipContainer.classed(className, true);\n        return this;\n    }\n\n    context (...ctx) {\n        if (ctx.length) {\n            this._context = ctx[0];\n            return this;\n        }\n        return this._context;\n    }\n\n    content (name, data, contentConfig = {}) {\n        const config = this.config();\n        const { classPrefix } = config;\n        const contentClass = config.content.className;\n        const formatter = config.formatter;\n        const className = contentConfig.className || `${classPrefix}-${contentClass}-${name}`;\n        const content = this._contents[name] = this._contents[name] || new Content();\n        const container = makeElement(this._contentContainer, 'div', [contentConfig.order], className);\n        container.attr('class', `${classPrefix}-${contentClass} ${className}`);\n        reorderContainers(this._contentContainer, `.${classPrefix}-${contentClass}`);\n        const contentConf = config.content;\n        contentConfig.classPrefix = this._config.classPrefix;\n        content.config(contentConf);\n\n        if (data === null) {\n            content.clear();\n            container.remove();\n            delete this._contents[name];\n        } else {\n            content.update({\n                model: data,\n                formatter: contentConfig.formatter || formatter\n            });\n            content.context(this._context);\n            content.render(container);\n        }\n\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n        }\n        return this;\n    }\n\n    getContents () {\n        return Object.values(this._contents);\n    }\n\n    /**\n     * Positions the tooltip at the given x and y position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Tooltip} Instance of tooltip.\n     */\n    position (x, y, conf = {}) {\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n            return this;\n        }\n        this.show();\n        const target = this._target;\n        const repositionArrow = conf.repositionArrow;\n\n        if (target && repositionArrow) {\n            const node = this._tooltipContainer.node();\n            const config = this._config;\n            const arrowDisabled = config.arrow.disabled;\n            const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n            const arrowOrient = this._arrowOrientation;\n            const outsidePlot = arrowOrient === ARROW_LEFT || arrowOrient === ARROW_RIGHT ?\n                (y + node.offsetHeight - arrowWidth) < target.y || y > (target.y + target.height) :\n                (x + node.offsetWidth - arrowWidth) < target.x || x > (target.x + target.width);\n\n            if (!arrowDisabled) {\n                if (outsidePlot) {\n                    let path;\n                    this._tooltipArrow.style('display', 'none');\n                    this._tooltipBackground.style('display', 'none');\n                    this._tooltipConnectorContainer.style('display', 'block');\n                    const connector = this._tooltipConnectorContainer.selectAll('path').data([1]);\n                    const enter = connector.enter().append('path');\n                    if (arrowOrient === ARROW_LEFT) {\n                        path = `M ${x} ${y + node.offsetHeight / 2} L ${target.x + target.width}`\n                            + ` ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_RIGHT) {\n                        path = `M ${x + node.offsetWidth} ${y + node.offsetHeight / 2}`\n                                + ` L ${target.x} ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_BOTTOM) {\n                        path = `M ${x + node.offsetWidth / 2} ${y + node.offsetHeight}`\n                            + ` L ${target.x + target.width / 2} ${target.y}`;\n                    }\n                    enter.merge(connector).attr('d', path).style('display', 'block');\n                } else {\n                    const arrowPos = getArrowPos(arrowOrient, target, {\n                        x,\n                        y,\n                        boxHeight: node.offsetHeight,\n                        boxWidth: node.offsetWidth\n                    }, this._config);\n\n                    placeArrow(this, this._arrowOrientation, arrowPos);\n                    this._tooltipConnectorContainer.style('display', 'none');\n                }\n            }\n        }\n\n        const offset = this._offset || {\n            x: 0,\n            y: 0\n        };\n        this._tooltipContainer.style('left', `${offset.x + x}px`).style('top',\n            `${offset.y + y}px`);\n\n        return this;\n    }\n\n    /**\n     * Positions the tooltip relative to a rectangular box. It takes care of tooltip overflowing the\n     * boundaries.\n     * @param {Object} dim Dimensions of the plot.\n     */\n    positionRelativeTo (dim, tooltipConf = {}) {\n        let obj;\n        let orientation = tooltipConf.orientation;\n        this.show();\n        if (!dim) {\n            this.hide();\n            return this;\n        }\n\n        const extent = this._extent;\n        const node = this._tooltipContainer.node();\n\n        this._tooltipContainer.style('top', '0px')\n                        .style('left', '0px');\n        const offsetWidth = node.offsetWidth + 2;\n        const offsetHeight = node.offsetHeight + 2;\n        const config = this._config;\n        const offset = this._offset;\n        const arrowDisabled = config.arrow.disabled;\n        const arrowSize = arrowDisabled ? 0 : config.arrow.size;\n        const draw = tooltipConf.draw !== undefined ? tooltipConf.draw : true;\n        const topSpace = dim.y;\n        // When there is no space in right\n        const dimX = dim.x + dim.width + offset.x;\n        const rightSpace = extent.width - dimX;\n        const leftSpace = dim.x + offset.x - extent.x;\n        const positionTop = topSpace > (offsetHeight + arrowSize);\n        const positionRight = rightSpace >= offsetWidth + arrowSize;\n        const positionLeft = leftSpace >= offsetWidth + arrowSize;\n\n        const positionHorizontal = () => {\n            let position;\n            let x = dim.x + dim.width;\n            let y = dim.y;\n\n            if (positionRight) {\n                position = TOOLTIP_LEFT;\n                x += arrowSize;\n            } else if (positionLeft) {\n                x = dim.x - offsetWidth;\n                position = TOOLTIP_RIGHT;\n                x -= arrowSize;\n            } else {\n                position = 'left';\n                x += arrowSize;\n            }\n            if (dim.height < offsetHeight) {\n                y = Math.max(0, dim.y + dim.height / 2 - offsetHeight / 2);\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        const positionVertical = () => {\n            let position;\n            let y;\n            // Position tooltip at the center of plot\n            let x = dim.x - offsetWidth / 2 + dim.width / 2;\n\n            // Overflows to the right\n            if ((extent.width - (dim.x + offset.x)) < offsetWidth) {\n                x = extent.width - offsetWidth - offset.x;\n            } else if ((x + offset.x) < extent.x) { // Overflows to the left\n                x = extent.x;\n            }\n\n            if (positionTop) {\n                y = dim.y - offsetHeight - arrowSize;\n                position = TOOLTIP_BOTTOM;\n            } else {\n                y = dim.y + dim.height + arrowSize;\n                position = TOOLTIP_TOP;\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        this._target = dim;\n        if (!orientation) {\n            if (positionTop) {\n                orientation = 'vertical';\n            } else if (positionRight || positionLeft) {\n                orientation = 'horizontal';\n            } else {\n                orientation = 'vertical';\n            }\n        }\n\n        if (orientation === 'horizontal') {\n            obj = positionHorizontal();\n        } else if (orientation === 'vertical') {\n            obj = positionVertical();\n        }\n\n        this._position = {\n            x: obj.x,\n            y: obj.y\n        };\n\n        this._arrowPos = obj.arrowPos;\n        if (!arrowDisabled) {\n            placeArrow(this, obj.position, obj.arrowPos);\n        } else {\n            this._tooltipArrow.style('display', 'none');\n            this._tooltipBackground.style('display', 'none');\n        }\n        this._arrowOrientation = obj.position;\n        draw && this.position(obj.x, obj.y);\n        return this;\n    }\n\n    /**\n     * Hides the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    hide () {\n        this._tooltipContainer.style('display', 'none');\n        this._tooltipConnectorContainer.style('display', 'none');\n        return this;\n    }\n\n    /**\n     * Shows the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    show () {\n        this._tooltipContainer.style('display', 'block');\n        return this;\n    }\n\n    extent (extent) {\n        this._extent = extent;\n        return this;\n    }\n\n    offset (offset) {\n        this._offset = offset;\n        return this;\n    }\n\n    remove () {\n        this._tooltipContainer.remove();\n        this._tooltipBackground.remove();\n        this._tooltipConnectorContainer.remove();\n        return this;\n    }\n}\n","export const SELECTION_SUMMARY = 'selectionSummary';\nexport const HIGHLIGHT_SUMMARY = 'highlightSummary';\n","import {\n    FieldType,\n    GROUP_BY_FUNCTIONS,\n    formatTemporal,\n    DimensionSubtype,\n    MeasureSubtype,\n    DataModel,\n    defaultValue,\n    retrieveFieldDisplayName,\n    nestCollection,\n    getObjProp,\n    intersect\n} from 'muze-utils';\nimport { TABLE_FORMAT } from '@chartshq/muze-tooltip';\nimport { SELECTION_SUMMARY, HIGHLIGHT_SUMMARY } from '../../enums/tooltip-strategies';\n\nconst { SUM, COUNT } = GROUP_BY_FUNCTIONS;\nconst { InvalidAwareTypes } = DataModel;\nconst FIRST_VALUE_MARGIN = '10px';\nconst SINGLE_DATA_MARGIN = 10;\n\nconst formatters = (formatter, interval, valueParser) => ({\n    [DimensionSubtype.TEMPORAL]: value => (value instanceof InvalidAwareTypes ? valueParser(value) :\n        formatTemporal(Number(value), interval)),\n    [MeasureSubtype.CONTINUOUS]: value => (value instanceof InvalidAwareTypes ? valueParser(value) :\n        formatter(value.toFixed(2))),\n    [DimensionSubtype.CATEGORICAL]: value => valueParser(value)\n});\n\nconst getTabularData = (dataObj, fieldInf) => {\n    const rows = [];\n    const { data, schema } = dataObj;\n    rows.push(schema.map(d => fieldInf[d.name].displayName));\n\n    data.forEach((d) => {\n        const row = [];\n        schema.forEach((fieldObj, i) => {\n            const value = fieldInf[fieldObj.name].fn(d[i]);\n            row.push(value);\n        });\n        rows.push(row);\n    });\n    return rows;\n};\n\nconst getKeyValue = (params) => {\n    const { field, value, classPrefix, margin, isSelected, removeKey } = params;\n\n    if (!removeKey) {\n        const keyObj = {\n            value: field,\n            className: `${classPrefix}-tooltip-key`\n        };\n        const valueObj = {\n            value,\n            className: `${classPrefix}-tooltip-value`\n        };\n        if (margin !== undefined) {\n            keyObj.style = {\n                'margin-left': `${margin}px`\n            };\n            valueObj.style = {\n                'margin-left': `${margin}px`\n            };\n        }\n\n        return ({\n            className: isSelected ? `${classPrefix}-tooltip-row ${classPrefix}-tooltip-selected-row`\n                : `${classPrefix}-tooltip-row`,\n            data: [keyObj, valueObj]\n        }\n        );\n    }\n    return ({\n        data: [{\n            className: '',\n            value,\n            style: {\n                'margin-left': FIRST_VALUE_MARGIN\n            }\n        }],\n        className: `${classPrefix}-tooltip-first`\n    });\n};\n\nconst generateRetinalFieldsValues = (valueArr, retinalFields, content, context) => {\n    const { fieldsConfig, dimensionMeasureMap, axes, config, fieldInf, dataLen, target } = context;\n    const { classPrefix, margin, separator } = config;\n    const colorAxis = axes.color[0];\n    const shapeAxis = axes.shape[0];\n    const sizeAxis = axes.size[0];\n    const REF_VALUES_INDEX = 1;\n    const REF_KEYS_INDEX = 0;\n\n    for (const retField in retinalFields) {\n        const retIndex = fieldsConfig[retField].index;\n        const retinalFieldValue = valueArr[retIndex];\n        const measuresArr = dimensionMeasureMap[retField];\n        const icon = {\n            type: 'icon',\n            color: colorAxis.getColor(retinalFieldValue),\n            shape: shapeAxis.getShape(retinalFieldValue),\n            size: sizeAxis.getSize(retinalFieldValue) * config.iconScale\n        };\n        const { displayName, fn } = fieldInf[retField];\n        const formattedRetinalValue = fn(retinalFieldValue);\n\n        if (dataLen === 1) {\n            content.push(getKeyValue({\n                field: displayName,\n                value: formattedRetinalValue,\n                classPrefix,\n                margin: SINGLE_DATA_MARGIN\n            }));\n        } else {\n            const hasMultipleMeasures = measuresArr.length > 1;\n            hasMultipleMeasures && (content.push({ data: [icon, formattedRetinalValue] }));\n            const selectedContext = target[REF_VALUES_INDEX][target[REF_KEYS_INDEX].indexOf(retField)];\n            const isSelected = selectedContext === retinalFieldValue;\n            measuresArr.forEach((measure) => {\n                const measureIndex = fieldsConfig[measure].index;\n                const { displayName: dName, fn: formatterFn } = fieldInf[measure];\n                const value = formatterFn(valueArr[measureIndex]);\n                const keyValue = getKeyValue({\n                    field: hasMultipleMeasures ? `${dName}${separator}` : formattedRetinalValue,\n                    value,\n                    classPrefix,\n                    margin: hasMultipleMeasures ? margin : undefined,\n                    isSelected\n                });\n                if (!hasMultipleMeasures) {\n                    keyValue.data = [icon, ...keyValue.data];\n                }\n                content.push(keyValue);\n            });\n        }\n    }\n};\n\nconst getFieldInf = (schema, dataModel, context) => {\n    const { valueParser, timeDiffs } = context;\n    const fieldsObj = dataModel.getFieldspace().fieldsObj();\n    const defFormatter = formatters(null, null, valueParser)[DimensionSubtype.CATEGORICAL];\n\n    return schema.reduce((inf, field) => {\n        const { subtype, name, type } = field;\n        const interval = subtype === DimensionSubtype.TEMPORAL ? timeDiffs[name] : 0;\n        const nf = type === FieldType.MEASURE ? fieldsObj[name].numberFormat() : val => val;\n        inf[name] = {\n            fn: defaultValue(formatters(nf, interval, valueParser)[subtype], defFormatter),\n            displayName: `${retrieveFieldDisplayName(dataModel, name)}`\n        };\n        return inf;\n    }, {});\n};\n\nexport const buildTooltipData = (dataModel, config = {}, context) => {\n    let nestedDataObj;\n    let fieldValues = [];\n    const { data, schema } = dataModel.getData();\n    const fieldspace = dataModel.getFieldspace();\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const { color, shape, size } = context.firebolt.context.retinalFields();\n    const detailFields = context.detailFields || [];\n    const dimensions = schema.filter(d => d.type === FieldType.DIMENSION);\n    const measures = schema.filter(d => d.type === FieldType.MEASURE);\n    const containsDetailField = !!intersect(schema, detailFields).length;\n    const dataLen = data.length;\n    const {\n        dimensionMeasureMap,\n        axes\n    } = context;\n    const fieldInf = getFieldInf(schema, dataModel, context);\n\n    let displayFormat;\n    if (dataLen > 1 && containsDetailField) {\n        fieldValues = getTabularData({\n            data,\n            schema,\n            fieldspace\n        }, fieldInf);\n        displayFormat = TABLE_FORMAT;\n    } else {\n        const retinalFields = [color.field, shape.field, size.field].reduce((acc, field) => {\n            field && fieldsConfig[field].def.type === FieldType.DIMENSION && (acc[field] = 1);\n            return acc;\n        }, {});\n        const filteredDimensions = dimensions.filter(field => !retinalFields[field.name]);\n        const indices = filteredDimensions.map(dim => fieldsConfig[dim.name].index);\n        const allMeasures = [...new Set(...Object.values(dimensionMeasureMap))];\n        const filteredMeasures = dataLen > 1 ? measures.filter(d => allMeasures.indexOf(d.name) === -1) : measures;\n\n        nestedDataObj = nestCollection({\n            data,\n            keys: indices\n        });\n        nestedDataObj = !getObjProp(nestedDataObj[0], 'key') ? [{\n            values: nestedDataObj\n        }] : nestedDataObj;\n\n        const generateTooltipContent = (nestedData, index = 0, content = []) => {\n            const { classPrefix, separator } = config;\n            for (let i = 0, len = nestedData.length; i < len; i++) {\n                const { values, key } = nestedData[i];\n                const field = getObjProp(schema, indices[index], 'name');\n                const margin = dataLen === 1 || Object.keys(retinalFields).length === 0\n                ? SINGLE_DATA_MARGIN : undefined;\n                if (field) {\n                    const { displayName, fn } = fieldInf[field];\n                    const formattedValue = fn(key);\n                    const removeKey = values.length > 1;\n                    content.push(getKeyValue({\n                        field: `${displayName}${separator}`,\n                        value: formattedValue,\n                        classPrefix,\n                        margin,\n                        isSelected: undefined,\n                        removeKey\n                    }));\n                }\n\n                if (values[0] && values[0].key) {\n                    generateTooltipContent(values, index + 1, content);\n                } else {\n                    for (let j = 0, len2 = values.length; j < len2; j++) {\n                        const valueArr = values[j];\n                        generateRetinalFieldsValues(valueArr, retinalFields, content, {\n                            fieldInf,\n                            axes,\n                            config,\n                            fieldsConfig,\n                            dimensionMeasureMap,\n                            dataLen,\n                            target: context.payload.target\n                        });\n\n                        filteredMeasures.forEach((measure) => {\n                            const { name } = measure;\n                            const { displayName, fn } = fieldInf[name];\n                            content.push(getKeyValue({\n                                field: `${displayName}${separator}`,\n                                value: fn(valueArr[fieldsConfig[name].index]),\n                                classPrefix,\n                                margin: SINGLE_DATA_MARGIN\n                            }));\n                        });\n                    }\n                }\n            }\n        };\n        generateTooltipContent(nestedDataObj, 0, fieldValues);\n    }\n\n    return {\n        content: fieldValues,\n        displayFormat\n    };\n};\n\nexport const strategies = {\n    [SELECTION_SUMMARY]: (dm, config, context) => {\n        const { selectionSet } = context;\n        const aggFns = selectionSet.mergedEnter.aggFns;\n        const dataObj = dm.getData();\n        const measures = dataObj.schema.filter(d => d.type === FieldType.MEASURE);\n        const aggregatedModel = dm.groupBy([''], measures.reduce((acc, v) => {\n            acc[v.name] = aggFns[v.name] === COUNT ? SUM : aggFns[v.name];\n            return acc;\n        }, {\n            saveChild: false\n        }));\n        const fieldsConf = aggregatedModel.getFieldsConfig();\n        let values = [[{\n            value: `${dataObj.data.length}`,\n            style: {\n                'font-weight': 'bold'\n            }\n        }, 'Items Selected']];\n        const measureNames = measures.map(d => d.name);\n        const data = aggregatedModel.getData().data;\n        measureNames.forEach((measure) => {\n            const value = data[0][fieldsConf[measure].index];\n            value instanceof InvalidAwareTypes ? values.push([]) : values.push([`(${aggFns[measure].toUpperCase()})`,\n                `${retrieveFieldDisplayName(dm, measure)}`,\n                {\n                    value: `${value.toFixed(2)}`,\n                    style: {\n                        'font-weight': 'bold'\n                    }\n                }]);\n        });\n        if (measureNames.length === 1) {\n            values = [[...values[0], ...values[1]]];\n        }\n        return ([{\n            data: values[0]\n        }]);\n    },\n    [HIGHLIGHT_SUMMARY]: (data, config, context) => buildTooltipData(data, config, context)\n};\n","import { Tooltip as TooltipRenderer } from '@chartshq/muze-tooltip';\nimport { FieldType, mergeRecursive, defaultValue } from 'muze-utils';\nimport { spaceOutBoxes } from '../helper';\nimport { strategies } from './strategies';\nimport { FRAGMENTED } from '../../enums/constants';\nimport { TOOLTIP } from '../../enums/side-effects';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\nimport { HIGHLIGHT_SUMMARY } from '../../enums/tooltip-strategies';\n\nconst configResolvers = {\n    [HIGHLIGHT_SUMMARY]: (specificConf, config) => defaultValue(specificConf, config),\n    default: specificConf => defaultValue(specificConf, {})\n};\n\nconst sanitizeConfig = (config, context) => {\n    const strategyObj = context._strategies;\n    const sanitizedConf = Object.assign({}, config);\n    for (const key in strategyObj) {\n        sanitizedConf[key] = defaultValue(configResolvers[key], configResolvers.default)(config[key], config);\n    }\n    return sanitizedConf;\n};\n\nexport default class Tooltip extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._tooltips = {};\n        this._strategies = mergeRecursive({}, strategies);\n        this._strategy = HIGHLIGHT_SUMMARY;\n    }\n\n    static defaultConfig () {\n        return {\n            padding: 5,\n            offset: {\n                x: 0,\n                y: 0\n            },\n            highlightSummary: {\n                dataTransform: (dt, fields) => (fields ? dt.project(fields, { saveChild: false }) : dt\n                )\n            },\n            selectionSummary: {\n                dataTransform: (dt, fields) => {\n                    const fieldspace = dt.getFieldspace();\n                    const dimensions = Object.keys(fieldspace.getDimension());\n                    const measures = Object.keys(fieldspace.getMeasure());\n                    const projectedFields = defaultValue(fields, measures.length ? [measures[0]] : []);\n                    return dt.project([...dimensions, ...projectedFields], {\n                        saveChild: false\n                    });\n                }\n            }\n        };\n    }\n\n    static formalName () {\n        return TOOLTIP;\n    }\n\n    config (...params) {\n        if (params.length) {\n            const config = this._config = mergeRecursive(this._config, sanitizeConfig(params[0], this));\n            const strategyObj = this._strategies;\n            for (const key in strategyObj) {\n                const formatter = config[key].formatter;\n                this.setStrategy(key, formatter);\n            }\n            return this;\n        }\n        return this._config;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        let totalHeight = 0;\n        let totalWidth = 0;\n        const dataModel = selectionSet.mergedEnter.model;\n        const context = this.firebolt.context;\n        const drawingInf = this.drawingContext();\n        if ((dataModel.isEmpty() || payload.criteria === null)) {\n            this.hide(options, null);\n            return this;\n        }\n\n        const tooltips = this._tooltips;\n        const config = this.config();\n        const boundBox = {\n            width: drawingInf.width,\n            height: drawingInf.height\n        };\n        const showInPosition = payload.showInPosition;\n        const pad = config.padding;\n        const dataModels = [];\n        const fragmented = config.mode === FRAGMENTED;\n        const sourceInf = context.getSourceInfo();\n        const fields = sourceInf.fields;\n        const xFieldDim = fields.x[0] ? fields.x[0].type() === FieldType.DIMENSION : false;\n        const showVertically = !!xFieldDim;\n        const tooltipPos = payload.position;\n        const boxes = [];\n        const enter = {};\n        const uids = dataModel.getData().uids;\n        if (fragmented) {\n            dataModels.push(...uids.map(d => dataModel.select((fieldsArr, i) => i === d, {\n                saveChild: false\n            })));\n        } else {\n            dataModels.push(dataModel);\n        }\n\n        let target = payload.target;\n        let targetFields = [];\n        if (target) {\n            targetFields = target[0] || [];\n            const sourceFields = payload.sourceFields;\n            const indices = [];\n            for (let i = 0, len = targetFields.length; i < len; i++) {\n                if (sourceFields.indexOf(targetFields[i]) !== -1) {\n                    indices.push(i);\n                }\n            }\n            target = target.map(d => d.filter((v, i) => indices.indexOf(i) !== -1));\n        }\n\n        const plotDimensions = context.getPlotPointsFromIdentifiers(target || payload.criteria, {\n            getBBox: true\n        });\n\n        const strategy = defaultValue(options.strategy, this._strategy);\n        const strategyConf = config[strategy];\n        const { dataTransform, fields: projectFields } = strategyConf;\n        const strategyObj = this._strategies;\n        // Show tooltip for each datamodel\n        for (let i = 0; i < dataModels.length; i++) {\n            let plotDim = plotDimensions[i];\n            if (fragmented) {\n                const dimensions = dataModels[i].getData().schema.filter(d => d.type === FieldType.DIMENSION)\n                    .map(d => d.name);\n                plotDim = context.getPlotPointsFromIdentifiers(dataModels[i].project(dimensions), { getBBox: true });\n                plotDim = plotDim && plotDim[0];\n            }\n\n            const dt = dataTransform(dataModels[i], projectFields, this);\n\n            enter[i] = true;\n            const { parentContainer: layoutContainer, parentContainerDimensions } = drawingInf;\n            const layoutBoundBox = layoutContainer.getBoundingClientRect();\n            const unitBoundBox = drawingInf.htmlContainer.getBoundingClientRect();\n\n            const offsetLeft = unitBoundBox.left - layoutBoundBox.left;\n            const offsetTop = unitBoundBox.top - layoutBoundBox.top;\n            const tooltipInst = tooltips[i] = tooltips[i] || new TooltipRenderer(layoutContainer,\n                    drawingInf.svgContainer);\n\n            sourceInf.payload = payload;\n            sourceInf.firebolt = this.firebolt;\n            sourceInf.detailFields = context.detailFields();\n            sourceInf.timeDiffs = context.timeDiffsByField();\n            sourceInf.valueParser = context.valueParser();\n            sourceInf.selectionSet = selectionSet;\n            tooltipInst.context(sourceInf);\n            const strategyFn = strategyObj[strategy];\n            tooltipInst.content(strategy, dt, {\n                formatter: strategyFn,\n                order: options.order\n            })\n                            .config(this.config())\n                            .extent({\n                                x: 0,\n                                y: 0,\n                                width: parentContainerDimensions.width,\n                                height: parentContainerDimensions.height\n                            })\n                            .offset({\n                                x: offsetLeft + (config.offset.x || 0),\n                                y: offsetTop + (config.offset.y || 0)\n                            });\n\n            if (showInPosition) {\n                tooltipInst.position(tooltipPos.x + pad, tooltipPos.y + pad);\n            } else if (plotDim) {\n                tooltipInst.positionRelativeTo({\n                    x: plotDim.x,\n                    y: plotDim.y,\n                    width: plotDim.width || 0,\n                    height: plotDim.height || 0\n                }, {\n                    orientation: fragmented ?\n                        (showVertically ? 'horizontal' : 'vertical') : undefined\n                });\n            } else {\n                tooltipInst.hide();\n                break;\n            }\n\n            if (fragmented) {\n                const position = tooltipInst._position;\n                const tooltipBoundBox = tooltipInst._tooltipContainer.node().getBoundingClientRect();\n\n                totalHeight += tooltipBoundBox.height + pad;\n                totalWidth += tooltipBoundBox.width + pad;\n                if (showVertically ? totalHeight > drawingInf.height : totalWidth > drawingInf.width) {\n                    break;\n                }\n                boxes.push({\n                    x: position.x,\n                    y: position.y,\n                    width: tooltipBoundBox.width,\n                    height: tooltipBoundBox.height,\n                    tooltip: tooltipInst\n                });\n            }\n        }\n\n        for (const key in tooltips) {\n            if (!enter[key]) {\n                const tooltip = tooltips[key];\n                tooltip.content(payload.action, null);\n                if (!tooltip.getContents().length) {\n                    tooltip.remove();\n                    delete tooltips[key];\n                }\n            }\n        }\n        if (fragmented) {\n            spaceOutBoxes(boxes, boundBox, showVertically);\n            boxes.forEach(box => box.tooltip.position(box.x, box.y, {\n                repositionArrow: true\n            }));\n        }\n        return this;\n    }\n\n    hide (options) {\n        const tooltips = this._tooltips;\n        for (const key in tooltips) {\n            if ({}.hasOwnProperty.call(tooltips, key)) {\n                const strategy = options.strategy || this._strategy;\n                tooltips[key].content(strategy, null);\n                tooltips[key].hide();\n            }\n        }\n    }\n}\n","export const spaceOutBoxes = (boxes, extent, showVertically) => {\n    let y;\n    let height;\n    let x;\n    let width;\n    let i;\n    const pad = 5;\n    const len = boxes.length;\n    const spaceOutIfOverlap = (firstBox, secondBox, opposite) => {\n        x = firstBox.x;\n        width = firstBox.width;\n        y = firstBox.y;\n        height = firstBox.height;\n        const bottom = y + height;\n        const right = x + width;\n\n        if (showVertically) {\n            if (opposite ? y < (secondBox.y + secondBox.height) : bottom > secondBox.y) {\n                secondBox.y = opposite ? firstBox.y - secondBox.height - pad :\n                        bottom + pad;\n            }\n        } else if (opposite ? x < (secondBox.x + secondBox.width) : right > secondBox.x) {\n            secondBox.x = opposite ? firstBox.x - secondBox.width - pad :\n                    right + pad;\n        }\n    };\n\n    boxes.sort((a, b) => (showVertically ? a.y - b.y : a.x - b.x));\n    i = 0;\n\n    for (i = 0; i < len - 1; i++) {\n        spaceOutIfOverlap(boxes[i], boxes[i + 1]);\n    }\n\n    if ((boxes[i].y + boxes[i].height) > extent.height ||\n            (boxes[i].x + boxes[i].width) > extent.width) {\n        if (showVertically) {\n            boxes[i].y -= (boxes[i].height + boxes[i].y) - extent.height;\n        } else {\n            boxes[i].x -= (boxes[i].width + boxes[i].x) - extent.width;\n        }\n        for (i = len - 1; i > 0; i--) {\n            spaceOutIfOverlap(boxes[i], boxes[i - 1], true);\n        }\n    }\n    return boxes;\n}\n;\n","import { selectElement, FieldType } from 'muze-utils';\n\nimport './styles.scss';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport { CROSSLINE } from '../../enums/side-effects';\nimport SpawnableSideEffect from '../spawnable';\n\nexport default class Crossline extends SpawnableSideEffect {\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-crossline-group`,\n            bandClass: `${CLASSPREFIX}-crossband`,\n            lineClass: `${CLASSPREFIX}-crossline`\n        };\n    }\n\n    static formalName () {\n        return CROSSLINE;\n    }\n\n    apply (selectionSet, payload) {\n        let height;\n        let bandWidth;\n        let px;\n        let width;\n        const {\n            className,\n            bandClass,\n            lineClass\n        } = this.config();\n        const dataModel = selectionSet.mergedEnter.model;\n        const drawingInf = this.drawingContext();\n        if (payload.criteria && dataModel && dataModel.isEmpty()) {\n            return this;\n        }\n        if (payload.criteria === null || !dataModel) {\n            this.hide();\n            return this;\n        }\n\n        const dataObj = dataModel.getData();\n        const sourceInf = this.firebolt.context.getSourceInfo();\n        const axes = sourceInf.axes;\n        const axisFields = sourceInf.fields;\n        const fields = selectionSet.fields;\n        const data = dataObj.data;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const svgContainer = drawingInf.sideEffectGroup;\n\n        const elemData = [];\n        fields.forEach((field) => {\n            const fieldIndex = fieldsConfig[field] && fieldsConfig[field].index;\n            const dataArr = data.map(d => d[fieldIndex]);\n            const axisIndex = [['x', 0], ['x', 1], ['y', 0], ['y', 1]].find((arr) => {\n                const fieldInst = axisFields[arr[0]][arr[1]];\n                return fieldInst && fieldInst.type() === FieldType.DIMENSION &&\n                    fieldInst.getMembers().indexOf(field) !== -1;\n            });\n            if (axisIndex !== undefined && data.length) {\n                const type = axisIndex[0];\n                const axis = axes[type][axisIndex[1]];\n                const value = dataArr[0];\n                bandWidth = axis.getUnitWidth() || 0;\n                px = axis.getScaleValue(value) + bandWidth / 2 + drawingInf.xOffset;\n                const layers = this.firebolt.context.layers();\n                const plotWidth = Math.max(...layers.map(layer => layer.getPlotSpan()[type]));\n                const pad = Math.max(...layers.map(layer => layer.getPlotPadding()[type]));\n                height = drawingInf.height;\n                width = drawingInf.width;\n                const startPx = px - plotWidth / 2 - pad / 2;\n                const endPx = px + plotWidth / 2 + pad / 2;\n                const dataPoint = {};\n                if (type === 'y') {\n                    dataPoint.d = `M 0 ${startPx} L 0 ${endPx} L ${width} ${endPx} L ${width} ${startPx} Z`;\n                } else {\n                    dataPoint.d = `M ${startPx} 0 L ${endPx} 0 L ${endPx} ${height} L ${startPx} ${height} Z`;\n                }\n                dataPoint.className = plotWidth ? bandClass : lineClass;\n                !isNaN(px) && elemData.push(dataPoint);\n            }\n        });\n        if (elemData.length) {\n            const parentGroup = this.createElement(svgContainer, 'g', [1], className);\n            const elem = this.createElement(parentGroup, 'path', elemData);\n            elem.attr('d', d => d.d).style('pointer-events', 'none')\n                            .attr('class', d => d.className);\n        }\n        return this;\n    }\n\n    hide () {\n        const className = this.config().className;\n        const drawingInf = this.drawingContext();\n        selectElement(drawingInf.sideEffectGroup).selectAll(`.${className}`).remove();\n    }\n}\n","const fadeFn = (set, context, strategy) => {\n    const {\n        mergedEnter,\n        mergedExit,\n        exitSet,\n        completeSet\n    } = set;\n\n    if (!mergedEnter.length && !mergedExit.length) {\n        context.applyInteractionStyle(completeSet, {}, strategy, false);\n    } else {\n        context.applyInteractionStyle(exitSet[1], {}, strategy, true);\n        context.applyInteractionStyle(mergedEnter, {}, strategy, false);\n    }\n};\n\nexport const strategies = {\n    fade: fadeFn,\n    focus: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'focus', false);\n        } else {\n            context.applyInteractionStyle(mergedExit, {}, 'focus', true);\n            context.applyInteractionStyle(mergedEnter, {}, 'focus', false);\n        }\n    },\n    highlight: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            entrySet,\n            exitSet,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'highlight', false);\n        } else {\n            context.applyInteractionStyle(entrySet[1], {}, 'highlight', true);\n            context.applyInteractionStyle(exitSet[1], {}, 'highlight', false);\n        }\n    }\n};\n","import SurrogateSideEffect from '../surrogate';\nimport { strategies } from './strategy';\nimport { HIGHLIGHTER } from '../../enums/side-effects';\n\nexport default class PlotHighlighter extends SurrogateSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategy = 'highlight';\n        this._strategies = strategies;\n    }\n\n    static formalName () {\n        return HIGHLIGHTER;\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        strategy(selectionSet, this, options.strategy || this._strategy);\n\n        return this;\n    }\n}\n","import SurrogateSideEffect from '../surrogate';\n\nexport default class FilterEffect extends SurrogateSideEffect {\n    static formalName () {\n        return 'filter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static mutates () {\n        return true;\n    }\n\n    apply (selectionSet, payload) {\n        const context = this.firebolt.context;\n        const entryModel = selectionSet.mergedEnter.model;\n        if (payload.criteria === null) {\n            context.clearCaching().resetData();\n        } else {\n            context.enableCaching().data(entryModel);\n        }\n        return this;\n    }\n}\n","import { DataModel, getObjProp } from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport { ANCHORS } from '../../enums/side-effects';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nconst addLayer = (layerRegistry, context, sideEffect) => {\n    context.addLayer((layerDefs) => {\n        const layers = [];\n\n        if (layerDefs) {\n            layerDefs.forEach((layerDef) => {\n                const mark = layerDef.mark;\n                const layerCls = layerRegistry[mark];\n\n                if (layerCls && layerCls.shouldDrawAnchors()) {\n                    const depLayerEncoding = layerDef.def.encoding;\n                    const encoding = {\n                        x: getObjProp(depLayerEncoding, 'x', 'field'),\n                        y: getObjProp(depLayerEncoding, 'y', 'field'),\n                        color: getObjProp(depLayerEncoding, 'color', 'field'),\n                        size: {\n                            field: getObjProp(depLayerEncoding, 'size', 'field'),\n                            value: sideEffect.defaultSizeValue()\n                        }\n                    };\n                    const commonName = sideEffect.constructor.formalName();\n                    const name = `${layerDef.def.name}-${commonName}`;\n\n                    layers.push({\n                        name,\n                        mark: 'point',\n                        groupId: commonName,\n                        className: sideEffect.constructor.defaultConfig().className,\n                        encoding,\n                        transform: {\n                            type: 'identity'\n                        },\n                        calculateDomain: false,\n                        transition: sideEffect.getTransitionConfig(),\n                        source: dm => dm.select(() => false, {\n                            saveChild: false\n                        }),\n                        interactive: false,\n                        owner: layerDef.def.name\n                    });\n                }\n            });\n        }\n        return layers;\n    });\n};\n\nexport default class AnchorEffect extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._layersMap = {};\n        this.addAnchorLayers();\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-anchors-group`\n        };\n    }\n\n    static formalName () {\n        return ANCHORS;\n    }\n\n    addAnchorLayers () {\n        const context = this.firebolt.context;\n        const layerRegistry = context.registry().layerRegistry;\n\n        addLayer(layerRegistry, context, this);\n        return this;\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n\n    /**\n     * Returns the default area value of the anchor point.\n     * @return { number } Default area value of anchor.\n     */\n    defaultSizeValue () {\n        return 100;\n    }\n\n    apply (selectionSet) {\n        const dataModel = selectionSet.mergedEnter.model;\n        const formalName = this.constructor.formalName();\n\n        const context = this.firebolt.context;\n        const layers = context.layers().filter(layer => layer.config().groupId === formalName);\n\n        layers.forEach((layer) => {\n            const linkedLayer = context.getLayerByName(layer.config().owner);\n            const [transformedData, schema] = linkedLayer.getTransformedDataFromIdentifiers(dataModel);\n            const transformedDataModel = new DataModel(transformedData, schema);\n\n            layer.data(transformedDataModel);\n        });\n        return this;\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\nimport { PERSISTENT_ANCHORS } from '../enums/side-effects';\n\nexport default class PersistentAnchors extends AnchorEffect {\n    static formalName () {\n        return PERSISTENT_ANCHORS;\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-persistent-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\nimport { BRUSH_ANCHORS } from '../enums/side-effects';\n\nexport default class BrushAnchors extends AnchorEffect {\n    static formalName () {\n        return BRUSH_ANCHORS;\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-brush-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import * as BEHAVIOURS from './enums/behaviours';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: ['selectionBox', {\n        name: 'highlighter',\n        options: {\n            strategy: 'fade'\n        }\n    }, 'brush-anchors'],\n    [`${BEHAVIOURS.BRUSH},${BEHAVIOURS.SELECT}`]: [{\n        name: 'tooltip',\n        options: {\n            strategy: 'selectionSummary',\n            order: 0,\n            filter: context => context.config().mode === 'fragmented'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'highlight'\n        }\n    }, 'crossline', {\n        name: 'tooltip',\n        options: {\n            order: 9999\n        }\n    }, 'anchors'],\n    [BEHAVIOURS.FILTER]: ['filter'],\n    [BEHAVIOURS.SELECT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'focus'\n        }\n    }, 'persistent-anchors']\n};\n","export const CLASSPREFIX = 'muze';\nexport const STACK = 'stack';\nexport const GROUP = 'group';\nexport const IDENTITY = 'identity';\nexport const ANGLE = 'angle';\nexport const RADIUS = 'radius';\nexport const SIZE = 'size';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const TEXT = 'text';\nexport const OUTER_RADIUS_VALUE = 'outerRadiusValue';\nexport const TEXT_ANCHOR_MIDDLE = 'middle';\nexport const ENCODING = {\n    X: 'x',\n    Y: 'y',\n    X0: 'x0',\n    Y0: 'y0',\n    RADIUS: 'radius',\n    RADIUS0: 'radius0',\n    ANGLE: 'angle',\n    ANGLE0: 'angle0'\n};\n\nexport const ASCENDING = 'asc';\n\nexport const AGG_FN_SUM = 'sum';\n\nexport const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { CLASSPREFIX, STACK } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-area',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: STACK\n    },\n    interaction: {\n\n    },\n    nearestPointThreshold: 10,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        y0: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * This is an interface class which any new layer class has to extend.\n *\n * @example\n * class BarLayer extends BaseLayer {\n *   update (params) {\n *       // super.update(params);\n *       // Update the bar layer\n *   }\n * }\n * @class\n */\nexport default class SimpleLayer {\n\n    formalName () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets or gets the dependencies.\n     * @param {Object} dependencies Dependencies needed by layer\n     * @return {BaseLayer} Instance of base layer.\n     */\n    dependencies () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the config of the layer\n     *\n     * @param {Object} config Configuration of layer\n     * @return {Object} configuration of layer\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Acts as a getter or setter function\n     * When setter\n     * Returns the datamodel of the layer\n     * @param { DataModel } dataModel instance of DataModel\n     * @return { DataModel } DataModel instance of the layer\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized schema of the layer\n     * @return {Object} Serialized schema\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the unique identifier of this layer\n     * @return {string} id of the layer\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n    /*\n     * This method resolves the x, y, x0 and y0 values from the transformed data.\n     * It also checks the type of transformed data for example, if it is a stacked data\n     * then it fetches the y and y0 values from the stacked data.\n     * @param {Array.<Array>} transformedData transformed data\n     * @param {Object} fieldMap field definitions\n     * @param {string} transformType type of transformed data - stack, group or identity.\n     * @return {Array.<Object>} Normalized data\n     * @private\n     */\n    normalizeTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of dataModel\n     * @param {Object} config configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     * @private\n     */\n    getTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a nominal field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @return {Array} Domain values array.\n     */\n    _calculateDomainFromData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, color, etc.\n     * @return {Object} Axis domains\n     */\n    getDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for getting nearest point\n     * @return {BaseLayer} Instance of base layer\n     */\n    getNearestPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for highlighting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    highlightPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for deselecting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    dehighlightPoint () {\n        return this;\n    }\n\n    linkLayerStore () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets the container element for the layer to be renderered.\n     * @param {SVGElement} mountPoint SVG element or group element.\n     */\n    mount () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n","import { COORD_TYPES, mergeRecursive } from 'muze-utils';\nimport * as PROPS from '../enums/props';\n\nconst { CARTESIAN } = COORD_TYPES;\nexport const props = {\n    axes: {},\n    mount: {},\n    measurement: {},\n    metaInf: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    coord: {\n        defaultValue: CARTESIAN\n    },\n    [PROPS.CONFIG]: {\n        value: null,\n        sanitization: (context, config) => {\n            context._customConfig = config;\n            const constructor = context.constructor;\n            const newConf = mergeRecursive({}, constructor.defaultConfig());\n\n            return constructor.defaultPolicy(newConf, config);\n        }\n    }\n};\n","export const DATA = 'data';\nexport const CONFIG = 'config';\nexport const MEASUREMENT = 'measurement';\nexport const DOMAIN = 'domain';\nexport const MOUNT = 'mount';\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { Symbols } from 'muze-utils';\nimport * as AxisOrientation from '../enums/axis-orientation';\n\n/**\n * @module Axis\n * This file exports constants that are used to reference axis orientations\n * in a consistent manner.\n */\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\n\n/**\n  * This object is used to associate the axis orientation with the d3 class\n  * used to represent that axis.\n  */\nexport const axisOrientationMap = {\n    [AxisOrientation.LEFT]: Symbols.axisLeft,\n    [AxisOrientation.BOTTOM]: Symbols.axisBottom,\n    [AxisOrientation.RIGHT]: Symbols.axisRight,\n    [AxisOrientation.TOP]: Symbols.axisTop\n};\n","/**\n * @module axis\n * This file exports constants used to reference scale type\n * consistently throughout the project.\n */\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const TIME = 'temporal';\nexport const COLOR = 'color';\nexport const ORDINAL = 'ordinal';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\nexport const LOG = 'log';\nexport const POW = 'pow';\nexport const IDENTITY = 'identity';\nexport const SEQUENTIAL = 'sequential';\nexport const THRESHOLD = 'threshold';\n","export const CLASSPREFIX = 'muze';\n\nexport const CONTINOUS = 'continous';\nexport const DISCRETE = 'discrete';\nexport const SEQUENTIAL = 'sequential';\nexport const ORDINAL = 'ordinal';\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const THRESHOLD = 'threshold';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\n\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\n\nexport const DOMAIN = 'domain';\nexport const HIDDEN = 'hidden';\nexport const NUMBER = 'number';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\n\nexport const RGB = 'rgb';\nexport const HEX = 'hex';\nexport const HSLA = 'hsla';\nexport const HSL = 'hsl';\n\nexport const DEFAULT_ANGLE_DOMAIN = [1];\nexport const MIN_NO_OF_TICKS = 2;\nexport const DEFAULT_NO_OF_TICKS = 10;\n\n","import { scales, colorSchemes } from 'muze-utils';\n\nimport {\n    SEQUENTIAL,\n    ORDINAL,\n    LINEAR,\n    CONTINOUS,\n    THRESHOLD,\n    QUANTIZE\n} from './enums/constants';\n\nimport * as ScaleType from './enums/scale-type';\n\nconst {\n    scaleLinear,\n    scaleThreshold,\n    scaleLog,\n    scalePow,\n    scaleIdentity,\n    scaleOrdinal,\n    scaleSequential,\n    scaleQuantize,\n    scaleQuantile,\n    schemeCategory10,\n    schemeCategory20,\n    schemeCategory20b,\n    scaleBand,\n    scaleTime\n} = scales;\nexport const scaleMap = {\n    [ScaleType.LINEAR]: scaleLinear,\n    [ScaleType.BAND]: scaleBand,\n    [ScaleType.QUANTIZE]: scaleQuantize,\n    [ScaleType.QUANTILE]: scaleQuantile,\n    [ScaleType.THRESHOLD]: scaleThreshold,\n    [ScaleType.SEQUENTIAL]: scaleSequential,\n    [ScaleType.LOG]: scaleLog,\n    [ScaleType.POW]: scalePow,\n    [ScaleType.IDENTITY]: scaleIdentity,\n    [ScaleType.TIME]: scaleTime,\n    [ScaleType.COLOR]: scaleLinear,\n    [ScaleType.ORDINAL]: scaleOrdinal\n};\nexport const SCHEMES = {\n    SCHEME1: schemeCategory10,\n    SCHEME2: schemeCategory20,\n    SCHEME3: schemeCategory20b\n};\n\n/**\n * Accepts a scheme in a string format and returns the scale from d3-scale-chromatic\n *\n * @export\n * @param {string} scheme a string representing the kind of scheme for the color axis\n * @return {Object} The corresponding scale from a scheme type from d3 chromatic scale\n */\nexport function getScheme (scheme) {\n    if (scheme[0] === 'i') {\n        return scaleSequential(colorSchemes[scheme]);\n    }\n    return scaleOrdinal(colorSchemes[scheme]);\n}\n\n/**\n *\n *\n * @export\n * @param {*} scheme\n *\n */\nexport function getSchemeType (scheme) {\n    let schemeType = '';\n    if (scheme && typeof (scheme) === 'string') {\n        schemeType = scheme[0] === 'i' ? SEQUENTIAL : ORDINAL;\n    } else {\n        schemeType = ORDINAL;\n    }\n    return schemeType;\n}\n\n/**\n * This function is used to create a scale that is assigned to\n * an instance of axis.\n *\n * @export\n * @param {Object} params the input parameters to create a Scale object\n * @param {string} params.type the type of scale\n * @param {Array} params.range the range of scale\n * @return {Object} instance of scale\n */\nexport function createScale (params) {\n    if (!params.type || !scaleMap[params.type]) {\n        throw new Error(`${params.type} is not a valid scale type`);\n    }\n    if (!Array.isArray(params.range)) {\n        throw new Error('range parameter must be an array');\n    }\n    let scaleFactory = null;\n    const range = params.range;\n    // @todo: do it using scale decorator\n    if (params.type === LINEAR && params.interpolator) {\n        scaleFactory = scaleMap[params.interpolator];\n        if (params.interpolator === ScaleType.POW) {\n            return scaleFactory().range(range).exponent(params.exponent);\n        } else if (params.interpolator === ScaleType.LOG) {\n            return scaleFactory().range(range).base([params.base]);\n        }\n    } else {\n        scaleFactory = scaleMap[params.type];\n    }\n\n    if (params.type === QUANTIZE) {\n        scaleFactory().nice();\n    }\n    return scaleFactory().range(range);\n}\n\n/**\n * This method is used to update the range of a scale\n * so that the core module can remain agnostic of the d3\n * scale api.\n *\n * @export\n * @param {Scale} scale Instance of d3 Scale.\n * @param {Array} range new range of the scale.\n * @return {Scale} Updated scale.\n */\nexport function updateScaleRange (scale, range) {\n    return scale.range(range);\n}\n\n/**\n *\n *\n * @export\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} steps\n *\n */\nexport function getScaleType (domainType, rangeType, steps) {\n    if (rangeType === CONTINOUS) {\n        return LINEAR;\n    }\n    if (domainType === CONTINOUS) {\n        if (steps instanceof Array) {\n            return THRESHOLD;\n        }\n        return QUANTIZE;\n    }\n    return ORDINAL;\n}\n","import { getUniqueId } from 'muze-utils';\nimport { CLASSPREFIX } from '../enums/constants';\n\n/**\n *\n *\n */\nexport const defaultConfig = {\n    id: getUniqueId(),\n    adjustRange: false,\n    axisName: {\n        defClassName: 'axis-name'\n    },\n    axisNamePadding: 12,\n    base: 10,\n    classPrefix: CLASSPREFIX,\n    className: `${CLASSPREFIX}-axis`,\n    exponent: 1,\n    interpolator: 'linear',\n    fixedBaseline: true,\n    labels: {\n        rotation: null,\n        smartTicks: null\n    },\n    orientation: 'left',\n    numberFormat: val => val,\n    padding: 0.3,\n    nice: true,\n    numberOfTicks: null,\n    rotate: false,\n    show: true,\n    showAxisName: true,\n    showInnerTicks: true,\n    showOuterTicks: true,\n    style: {},\n    type: 'linear',\n    tickFormat: null,\n    tickValues: null,\n    xOffset: 0,\n    yOffset: 0\n};\n\n","/**\n * This file exports functionality that is used to render axis.\n */\nimport { selectElement, makeElement, angleToRadian } from 'muze-utils';\nimport * as AxisOrientation from './enums/axis-orientation';\nimport { LINEAR, HIDDEN, BOTTOM, TOP } from './enums/constants';\n\n/**\n *\n *\n * @param {*} instance\n * @param {*} container\n * @param {*} labelManager\n * @param {*} config\n */\nconst rotateAxis = (instance, tickText, labelManager) => {\n    let rotation;\n    const axis = instance.axis();\n    const config = instance.config();\n    const renderConfig = instance.renderConfig();\n    const smartTicks = instance.smartTicks();\n    const scale = axis.scale();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n    const ticks = labelFunc();\n    const {\n        orientation,\n        fixedBaseline,\n        type\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n\n    rotation = labels.rotation;\n\n    const tickSize = instance.getTickSize();\n    tickText.each(function (d, index) {\n        let yShift;\n        let xShift;\n        let datum = smartTicks[index] ? smartTicks[index].text : d;\n\n        datum = datum.toString();\n\n        const tickLabelDim = labelManager.getOriSize(datum);\n\n        const width = tickLabelDim.width * 0.5;\n        const height = tickLabelDim.height * 0.5;\n\n        if (rotation < 0) {\n            rotation = 360 + rotation;\n        }\n\n        const quadrant = 4 - Math.floor(rotation / 90);\n        const rotationNormalizer = ((quadrant % 2 === 0) ? rotation : 180 * Math.ceil(rotation / 180) - rotation) % 180;\n\n        yShift = Math.sqrt(height ** 2 + width ** 2) * Math.sin(angleToRadian(rotationNormalizer));\n\n        if ((quadrant === 3 || quadrant === 2) && !(rotationNormalizer > 67.5 && rotationNormalizer <= 90)) {\n            yShift += height * 2;\n        }\n        xShift = width;\n\n        if (rotation === 90) {\n            xShift = height;\n        } else if (rotation === 270) {\n            xShift = -height;\n        } else {\n            xShift = 0;\n        }\n\n        if (orientation === AxisOrientation.TOP) {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift + xShift / 2 : xShift;\n            selectElement(this)\n                            .attr('transform', `translate(${-xShift + tickSize}\n                                ${-yShift - tickSize}) rotate(${rotation})`);\n        } else {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift - xShift / 2 : xShift;\n\n            selectElement(this)\n                            .attr('transform', `translate(${xShift - tickSize}\n                                ${yShift + tickSize}) rotate(${rotation})`);\n        }\n        selectElement(this).transition()\n                        .duration(1000).text(datum);\n    });\n    return tickText;\n};\n\n/**\n *\n *\n * @param {*} tickText\n * @param {*} axisInstance\n */\nconst changeTickOrientation = (selectContainer, axisInstance, tickSize) => {\n    const {\n        _smartTicks\n    } = axisInstance;\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const {\n        orientation,\n        classPrefix\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n    const {\n        rotation,\n        smartTicks: isSmartTicks\n    } = labels;\n\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.selectAll('tspan').remove();\n\n    // rotate labels if not enough space is available\n    if (rotation && (orientation === TOP || orientation === BOTTOM)) {\n        rotateAxis(axisInstance, tickText, labelManager);\n    } else if (!rotation && !isSmartTicks) {\n        tickText.attr('transform', '');\n    } else {\n        tickText.text('');\n        if (orientation === TOP || orientation === BOTTOM) {\n            tickText.attr('y', 0)\n                            .attr('x', 0)\n                            .attr('transform', '')\n                            .text('');\n            const tspan = makeElement(tickText, 'tspan', (d, i) => {\n                if (_smartTicks[i]) {\n                    return _smartTicks[i].lines;\n                } return [];\n            }, `${classPrefix}-smart-text`);\n\n            tspan.attr('dy', '0')\n                            .style('opacity', '0')\n\n                            .transition()\n                            .duration(1000)\n                            .on('end', axisInstance.registerAnimationDoneHook())\n                            .attr('dy', (d, i) => {\n                                if (orientation === BOTTOM || i !== 0) {\n                                    return _smartTicks[0].oriTextHeight;\n                                }\n                                return -_smartTicks[0].oriTextHeight * (_smartTicks[0].lines.length - 1) - tickSize;\n                            })\n                            .style('opacity', 1)\n                            .text(e => e)\n                            .attr('x', 0);\n        } else {\n            const tspan = makeElement(tickText, 'tspan', (d, i) => _smartTicks[i].lines, `${classPrefix}-smart-text`);\n            tspan.text(e => e);\n        }\n    }\n\n    return tickText;\n};\n\nconst setFixedBaseline = (axisInstance) => {\n    const {\n        fixedBaseline\n    } = axisInstance.config();\n    const {\n        showInnerTicks\n    } = axisInstance.renderConfig();\n    const domain = axisInstance.domain();\n    if (fixedBaseline && domain.length && showInnerTicks) {\n        axisInstance.setFixedBaseline();\n    }\n};\n\n/**\n *\n *\n * @param {*} textNode\n * @param {*} orientation\n * @param {*} measures\n */\nconst setAxisNamePos = (textNode, orientation, measures) => {\n    const {\n        axisNameHeight,\n        availableSpace\n    } = measures;\n\n    switch (orientation) {\n    case AxisOrientation.LEFT:\n        textNode.attr('transform',\n            `translate(${-(availableSpace.width - axisNameHeight)},${availableSpace.height / 2})rotate(-90)`);\n        break;\n    case AxisOrientation.RIGHT:\n        textNode.attr('transform',\n             `translate(${(availableSpace.width - axisNameHeight)},${availableSpace.height / 2})rotate(90)`);\n        break;\n    case AxisOrientation.TOP:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${-availableSpace.height + axisNameHeight})`);\n        break;\n    case AxisOrientation.BOTTOM:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${availableSpace.height - axisNameHeight / 2})`);\n        break;\n    default:\n    }\n    return textNode;\n};\n\n/**\n * This method is used to render the axis inside an\n * svg container.\n *\n * @export\n * @param {Object} axisInstance the nput object required to render axis\n * @param {string} axisInstance.orientation the orientation of axis\n * @param {Object} axisInstance.scale instance of d3 scale\n * @param {SVGElement} axisInstance.container the container in which to render\n */\nexport function renderAxis (axisInstance) {\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const mount = axisInstance.mount();\n    const range = axisInstance.range();\n    const axis = axisInstance.axis();\n    const scale = axisInstance.scale();\n    const {\n        _tickLabelStyle: tickLabelStyle,\n        _tickFormatter: axisTickFormatter\n     } = axisInstance;\n    const {\n        orientation,\n        axisNamePadding,\n        className,\n        id,\n        classPrefix\n     } = config;\n    const {\n        show,\n        xOffset,\n        yOffset,\n        showAxisName,\n        labels,\n        smartAxisName\n    } = renderConfig;\n\n    if (!show) {\n        return;\n    }\n\n    const tickSize = axisInstance.getTickSize();\n\n    const selectContainer = makeElement(selectElement(mount), 'g', [axisInstance], `${className}`, {},\n        key => key.config().id);\n\n    // Set style for tick labels\n    labelManager.setStyle(tickLabelStyle);\n\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    const ticks = axis.tickValues() || labelFunc();\n\n    axis.tickFormat(axisTickFormatter(ticks));\n\n    // Get range(length of range)\n    const availableSpace = Math.abs(range[0] - range[1]);\n\n    // Get width and height taken by axis labels\n    const labelProps = axisInstance.axisComponentDimensions().largestTickDimensions;\n\n    // Draw axis ticks\n    selectContainer.attr('transform', `translate(${xOffset},${yOffset})`);\n    setFixedBaseline(axisInstance);\n    if (labels.smartTicks === false || tickSize === 0) {\n        selectContainer.transition()\n                        .duration(1000)\n                        .on('end', axisInstance.registerAnimationDoneHook())\n                        .call(axis);\n    } else {\n        selectContainer.call(axis);\n    }\n    selectContainer.selectAll('.tick').classed(`${classPrefix}-ticks`, true);\n    selectContainer.selectAll('.tick line').classed(`${classPrefix}-tick-lines`, true);\n\n    // Set classes for ticks\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.classed(`${classPrefix}-ticks`, true)\n                    .classed(`${classPrefix}-ticks-${id}`, true);\n\n    changeTickOrientation(selectContainer, axisInstance, tickSize);\n\n    // Create axis name\n    const textNode = makeElement(selectContainer, 'text', [smartAxisName], `${classPrefix}-axis-name`)\n                    .attr('text-anchor', 'middle')\n                    .classed(`${classPrefix}-axis-name-${id}`, true)\n                    .text(d => d.text);\n\n    // Hide axis name if show is off\n    textNode.classed(HIDDEN, !showAxisName);\n\n    // render labels based on orientation of axis\n    const labelOffset = availableSpace / 2;\n\n    const measures = {\n        labelProps,\n        tickSize,\n        axisNamePadding,\n        axisNameHeight: smartAxisName.height,\n        yOffset,\n        xOffset,\n        labelOffset,\n        availableSpace: axisInstance.availableSpace()\n    };\n    // Set position for axis name\n    setAxisNamePos(textNode, orientation, measures);\n}\n","import {\n    timeMillisecond,\n    timeSecond,\n    timeMinute,\n    timeHour,\n    timeDay,\n    timeWeek,\n    timeMonth,\n    timeYear\n} from 'muze-utils';\n\nconst durationSecond = 1000;\nconst durationMinute = durationSecond * 60;\nconst durationHour = durationMinute * 60;\nconst durationDay = durationHour * 24;\nconst durationWeek = durationDay * 7;\nconst durationMonth = durationDay * 30;\nconst durationYear = durationDay * 365;\n\n// Longest Word for each level based on which tick skipping is decided\nconst longestWord = {\n    month: 'September',\n    quarter: 'October',\n    halfYearly: 'July',\n    year: 9999,\n    day: 'September',\n    hour: '24 AM',\n    mintues: '60:60',\n    seconds: ':60',\n    week: 'Wed 31'\n};\n\n// These are the various levels of ticks that can be shown by Muze.\n// Each level is described as how frequently the ticks appear\n// The format is as follows:\n// [Frequency, Milliseconds, Name of Seconds, Tick Generator, Level Type]\nconst tickIntervals = [\n    [1, 1, 'milliseconds', timeMillisecond.every(1), 'seconds'],\n    [1, durationSecond, 'seconds', timeSecond.every(1), 'seconds'],\n    [5, 5 * durationSecond, 'five seconds', timeSecond.every(5), 'seconds'],\n    [10, 10 * durationSecond, 'ten seconds', timeSecond.every(10), 'seconds'],\n    [15, 15 * durationSecond, 'fifteen seconds', timeSecond.every(15), 'seconds'],\n    [30, 30 * durationSecond, 'thirty seconds', timeSecond.every(30), 'seconds'],\n    [1, durationMinute, 'minute', timeMinute.every(1), 'minutes'],\n    [5, 5 * durationMinute, 'five minutes', timeMinute.every(5), 'minutes'],\n    [10, 10 * durationMinute, 'ten minutes', timeMinute.every(10), 'minutes'],\n    [15, 15 * durationMinute, 'fifteen minutes', timeMinute.every(15), 'minutes'],\n    [30, 30 * durationMinute, 'thirty minutes', timeMinute.every(30), 'minutes'],\n    [1, durationHour, 'hour', timeHour.every(1), 'hour'],\n    [3, 3 * durationHour, 'three hours', timeHour.every(3), 'hour'],\n    [6, 6 * durationHour, 'six hours', timeHour.every(6), 'hour'],\n    [12, 12 * durationHour, 'twelve hours', timeHour.every(12), 'hour'],\n    [1, durationDay, 'daily', timeDay.every(1), 'day'],\n    [1, durationWeek, 'weekly', timeWeek.every(1), 'week'],\n    [1, durationMonth, 'monthly', timeMonth.every(1), 'week'],\n    [3, 3 * durationMonth, 'quaterly', timeMonth.every(3), 'quarter'],\n    [6, 6 * durationMonth, 'half yearly', timeMonth.every(6), 'halfYearly'],\n    [1, durationYear, 'yearly', timeYear.every(1), 'year'],\n    [2, 2 * durationYear, '2 year', timeYear.every(2), 'year'],\n    [3, 3 * durationYear, '3 year', timeYear.every(3), 'year'],\n    [5, 5 * durationYear, '5 year', timeYear.every(5), 'year'],\n    [10, 10 * durationYear, 'decade', timeYear.every(10), 'year'],\n    [100, 100 * durationYear, 'century', timeYear.every(100), 'year'],\n    [1000, 1000 * durationYear, 'millenium', timeYear.every(1000), 'year']\n];\n/**\n * Get the actual tick interval based on the available width, number of ticks\n * and the distance between two ticks\n *\n * @param {Object} context Axis Context\n * @param {number} noOfTicks Number of Ticks based on which interval is calculated\n * @return {number} The width for the tick interval\n */\nconst getActualTickInterval = (context, noOfTicks) => {\n    const minTickDistance = context._minTickDistance;\n    const minWidthBetweenTicks = minTickDistance.width;\n\n    const { width } = context.availableSpace();\n    const actualTickInterval = Math.floor(((width - (noOfTicks - 1) * (minWidthBetweenTicks)) / noOfTicks));\n\n    return actualTickInterval;\n};\n\n/**\n * Get the tick interval based on the current level of ticks. Levels are decided on\n * the number of ticks that are possible to show\n *\n * @param {Object} context Axis Context\n * @param {string} type Type of level (yearly, monthly, etc)\n * @return {number} The width for the tick interval\n */\nconst getTickIntervalBasedOnCurrentLevel = (context, type) => {\n    const labelManager = context._dependencies.labelManager;\n    const longestWordType = longestWord[type];\n    const measure = labelManager.getOriSize(longestWordType);\n\n    return measure.width;\n};\n\nconst getTickIntervalFnBasedOnNumberOfTicks = (interval, count, context) => {\n    let possibleTickLevelIndex = tickIntervals.length - 1;\n    let maxPossibleTicks = 1;\n    let tickIntervalLevelInfo = null;\n\n    // Decide possible tick level based on min tick width (with ellipses)\n    for (let i = tickIntervals.length - 1; i >= 0; i--) {\n        const tickIntervalInfo = tickIntervals[i];\n        const numOfPossibleTicks = Math.floor(interval / tickIntervalInfo[1]);\n        if (numOfPossibleTicks <= count) {\n            possibleTickLevelIndex = i;\n            maxPossibleTicks = numOfPossibleTicks;\n        }\n    }\n\n    tickIntervalLevelInfo = tickIntervals[possibleTickLevelIndex];\n\n    // Get actual tick interval based on the level of ticks generated\n    const actualTickInterval = getActualTickInterval(context, maxPossibleTicks);\n\n    // Maximum Possible tick Interval for a particular level based on a pre decided set of values\n    const maxTickInterval = getTickIntervalBasedOnCurrentLevel(context, tickIntervalLevelInfo[4]);\n\n    // Display the next level involving tick skipping if current level does not meet the requirement\n    // for displaying max tick\n    if (actualTickInterval < maxTickInterval && possibleTickLevelIndex < tickIntervals.length - 1) {\n        tickIntervalLevelInfo = tickIntervals[possibleTickLevelIndex + 1];\n    }\n    return tickIntervalLevelInfo[3];\n};\n\nexport const getSkippedTicks = (context, maxPossibleTicks) => {\n    let actualNumberOfTicks = maxPossibleTicks;\n    const domain = context.domain();\n    const minDiff = context._minDiff;\n    // Get the interval in ms from the domain\n    const millisecondInterval = domain[1] - domain[0];\n    // Get number of ticks based on the minimum difference in the data\n    const numOfTicksAccordingToMinDiff = Math.floor(millisecondInterval / minDiff);\n\n    // Show ticks according to min diff if possible\n    if (maxPossibleTicks >= numOfTicksAccordingToMinDiff) {\n        actualNumberOfTicks = numOfTicksAccordingToMinDiff;\n    }\n\n    return getTickIntervalFnBasedOnNumberOfTicks(millisecondInterval, actualNumberOfTicks, context);\n};\n","import { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { getSkippedTicks } from './skip-ticks';\nimport { TIME, LINEAR, BAND } from '../enums/scale-type';\n\nexport const applyTickSkipping = (context) => {\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minWidthBetweenTicks = minTickDistance.width;\n    const minTickWidth = minTickSpace.width;\n\n    const { width } = context.availableSpace();\n\n    const maxTicks = Math.floor((width + minWidthBetweenTicks) / (minTickWidth + minWidthBetweenTicks));\n\n    const ticks = context.scale().ticks(getSkippedTicks(context, maxTicks));\n\n    context.renderConfig({\n        tickValues: ticks\n    });\n};\n\nconst adjustHorizontalRange = (range, diff) => {\n    range[0] += diff;\n    range[1] -= diff;\n    return range;\n};\n\nconst adjustVerticalRange = (range, diff) => {\n    range[0] -= diff;\n    range[1] += diff;\n    return range;\n};\n\nconst rangeAdjustmentMap = {\n    [TOP]: adjustHorizontalRange,\n    [BOTTOM]: adjustHorizontalRange,\n    [LEFT]: adjustVerticalRange,\n    [RIGHT]: adjustVerticalRange\n};\n\nexport const setAxisRange = (context, type, rangeBounds, offset) => {\n    context.range(rangeBounds);\n    offset && context.renderConfig({ [`${type}Offset`]: offset });\n};\n\nconst getAxisOffset = (timeDiff, range, domain) => {\n    const avWidth = Math.abs(range[1] - range[0]);\n    const pvr = avWidth / (domain[1] - domain[0]);\n    const width = (pvr * timeDiff);\n    const bars = avWidth / width;\n    const barWidth = avWidth / (bars + 1);\n    const diff = avWidth - barWidth * bars;\n\n    return diff / 2;\n};\n\nexport const getAdjustedRange = (minDiff, range, domain, config) => {\n    const {\n        orientation,\n        adjustRange\n    } = config;\n    const diff = getAxisOffset(minDiff, range, domain);\n\n    if (adjustRange) {\n        return rangeAdjustmentMap[orientation](range, diff);\n    }\n    return range;\n};\n\nexport const spaceSetter = (context, spaceConfig) => {\n    let tickInterval;\n    let heightForTicks;\n    const config = context.config();\n    const {\n        width: availWidth,\n        height: availHeight,\n        padding\n    } = context.availableSpace();\n    const {\n        top,\n        left,\n        bottom,\n        right\n    } = padding;\n    const {\n        isOffset\n    } = spaceConfig;\n    const {\n        showAxisName,\n        labels\n    } = context.renderConfig();\n    const {\n        rotation\n    } = labels;\n    const {\n        fixedBaseline,\n        axisNamePadding,\n        tickValues\n    } = config;\n    const {\n        tickDimensions,\n        allTickDimensions,\n        axisNameDimensions,\n        tickSize\n    } = context.getAxisDimensions();\n    const {\n        height: tickDimHeight,\n        width: tickDimWidth\n    } = tickDimensions;\n\n    const namePadding = showAxisName ? axisNamePadding : 0;\n    const labelConfig = { smartTicks: true, rotation: labels.rotation };\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minDiff = context._minDiff;\n    const domain = context.domain();\n    const axisNameHeight = axisNameDimensions.height;\n    const minWidthBetweenTicks = minTickDistance.width;\n    const minTickWidth = Math.min(minTickSpace.width, tickDimWidth);\n    const minTickHeight = Math.min(minTickSpace.height, tickDimHeight);\n\n    return {\n        [TIME]: {\n            x: () => {\n                !tickValues && context.applyTickSkipping();\n                const noOfTicks = context.getTickValues().length;\n\n                // Get the Tick Interval\n                tickInterval = ((availWidth - (noOfTicks - 1) * (minWidthBetweenTicks)) / noOfTicks);\n\n                // Get height for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickWidth && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = rotation;\n                    // Remove ticks if not enough height\n                    if (tickInterval < minTickHeight) {\n                        heightForTicks = availHeight;\n                        tickInterval = minTickHeight;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n\n                const tickShifter = Math.min(tickInterval, tickDimWidth);\n                // set range for axis\n                setAxisRange(context, 'y', getAdjustedRange(minDiff, [tickShifter / 2,\n                    availWidth - left - right - tickShifter / 2], domain, config),\n                        isOffset ? availHeight : null);\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n\n                return labelConfig;\n            },\n            y: () => {\n                let widthForTicks = availWidth;\n                const tickShifter = tickDimHeight / 2;\n\n                setAxisRange(context, 'x', getAdjustedRange(minDiff,\n                    [availHeight - top - bottom - tickShifter, tickShifter], domain, config),\n                        isOffset ? availWidth : null);\n\n                if ((availWidth - axisNameHeight - namePadding) <= minWidthBetweenTicks) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        [BAND]: {\n            x: () => {\n                setAxisRange(context, 'y', [0, availWidth - left - right], isOffset ? availHeight : null);\n                const range = context.range();\n\n                // Get Tick Interval\n                tickInterval = ((range[1] - range[0]) / (tickValues || domain).length) - minWidthBetweenTicks;\n\n                // Get height available for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickWidth && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = rotation === null ? -90 : rotation;\n                    labelConfig.smartTicks = false;\n\n                    tickInterval = Math.max(heightForTicks, minTickWidth);\n\n                    if (heightForTicks < minTickWidth) {\n                        context.renderConfig({ showAxisName: false });\n                    }\n                } else if (tickValues) {\n                    const interval = (availWidth / domain.length) - minWidthBetweenTicks;\n                    if (interval < minTickWidth) {\n                        context.range([minTickHeight / 2, availWidth - minTickHeight / 2]);\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n                return labelConfig;\n            },\n            y: () => {\n                setAxisRange(context, 'x', [availHeight - bottom, top], isOffset ? availWidth : null);\n\n                let widthForTicks = availWidth - axisNameHeight - tickSize - namePadding;\n                if (widthForTicks <= minWidthBetweenTicks) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        [LINEAR]: {\n            x: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimWidth / 2;\n\n                const baseline = fixedBaseline ? 0 : tickShifter;\n\n                setAxisRange(context, 'y', [baseline + left, availWidth - right - tickShifter],\n                    isOffset ? availHeight : null);\n\n                const range = context.range();\n\n                // Get Tick widths and available space\n                const totalTickWidth = allTickDimensions.length * (tickDimWidth + minWidthBetweenTicks);\n                const availableWidth = range[1] - range[0];\n\n                 // Rotate labels if not enough width\n                if (availableWidth < totalTickWidth && labels.rotation !== null) {\n                    if (availHeight - tickDimWidth - namePadding - tickSize > axisNameHeight) {\n                        labelConfig.rotation = null;\n                        context.renderConfig({\n                            showInnerTicks: true,\n                            showAxisName: true\n                        });\n                    } else {\n                        labelConfig.rotation = -90;\n                        context.renderConfig({\n                            showInnerTicks: true,\n                            showAxisName: false\n\n                        });\n                    }\n                }\n\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            },\n            y: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimensions.height / 2;\n                const baseline = fixedBaseline ? 1 : tickShifter;\n\n                setAxisRange(context, 'x', [availHeight - bottom - baseline, tickShifter + top],\n                    isOffset ? availWidth : null);\n\n                // Remove display of ticks if no space is left\n                if (availWidth < tickDimWidth + axisNameHeight + namePadding) {\n                    context.renderConfig({ showInnerTicks: false });\n                    if (availWidth < axisNameHeight) {\n                        context.renderConfig({ show: false });\n                    }\n                }\n                return labelConfig;\n            }\n        }\n    };\n};\n","import { defaultValue } from 'muze-utils';\nimport { TOP, LEFT, BOTTOM } from '../enums/axis-orientation';\nimport { MIN_NO_OF_TICKS, DEFAULT_NO_OF_TICKS } from '../enums/constants';\nimport { setAxisRange, getAdjustedRange } from './space-setter';\n\nexport const getRotatedSpaces = (rotation = 0, width, height) => {\n    let rotatedHeight = height;\n    let rotatedWidth = width;\n    if (rotation) {\n        const angle = ((rotation || 0) * Math.PI) / 180;\n        rotatedWidth = Math.abs(height * Math.sin(angle)) + Math.abs(width * Math.cos(angle));\n        rotatedHeight = Math.abs(width * Math.sin(angle)) + Math.abs(height * Math.cos(angle));\n    }\n    return { width: rotatedWidth, height: rotatedHeight };\n};\n\nexport const setOffset = (context) => {\n    let x = 0;\n    let y = 0;\n    const logicalSpace = context.logicalSpace();\n    const config = context.config();\n    const {\n        orientation,\n        xOffset,\n        yOffset\n    } = config;\n    if (orientation === LEFT) {\n        x = xOffset === undefined ? logicalSpace.width : xOffset;\n    }\n    if (orientation === TOP) {\n        y = yOffset === undefined ? logicalSpace.height : yOffset;\n    }\n    context.renderConfig({ xOffset: x, yOffset: y });\n};\n\nexport const getNumberOfTicks = (availableSpace, labelDim, axis, axisInstance) => {\n    let numberOfValues = 0;\n    let tickValues = [];\n    let { numberOfTicks } = axisInstance.config();\n    const ticks = axis.scale().ticks();\n    const tickLength = ticks.length;\n    const minTickDistance = axisInstance._minTickDistance.width;\n\n    numberOfValues = tickLength;\n\n    if (tickLength * (labelDim + minTickDistance) > availableSpace) {\n        numberOfValues = Math.floor(availableSpace / (labelDim + minTickDistance));\n    }\n\n    numberOfTicks = numberOfTicks || numberOfValues;\n    numberOfValues = Math.min(numberOfTicks, Math.max(MIN_NO_OF_TICKS, numberOfValues));\n\n    tickValues = axis.scale().ticks(numberOfValues);\n\n    if (tickValues.length > numberOfValues) {\n        tickValues = tickValues.filter((e, i) => i % 2 === 0);\n    }\n\n    if (numberOfValues === MIN_NO_OF_TICKS) {\n        tickValues = axis.scale().ticks(DEFAULT_NO_OF_TICKS);\n        tickValues = [tickValues[0], tickValues[tickValues.length - 1]];\n    }\n    return tickValues;\n};\n\nexport const getAxisComponentDimensions = (context) => {\n    let largestTick = '';\n    let largestTickDimensions = { width: 0, height: 0 };\n    let smartTick = {};\n    let axisTicks;\n    const allTickDimensions = [];\n    const scale = context.scale();\n    const { tickValues, showAxisName } = context.renderConfig();\n    const { name } = context.config();\n    const { labelManager } = context.dependencies();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    // set the style on the shared label manager instance\n    labelManager.setStyle(context._tickLabelStyle);\n\n    // get the values along the domain\n    axisTicks = tickValues || labelFunc();\n\n    // Get the tick labels\n    axisTicks = axisTicks.map((originalLabel, i) => {\n        const label = context.getFormattedText(originalLabel, i, axisTicks);\n\n    // convert to string for quant values\n        const tickDimensions = labelManager.getOriSize(label);\n\n    // Get spaces for all labels\n        allTickDimensions.push(tickDimensions);\n\n    // Getting largest label\n        if (tickDimensions.width > largestTickDimensions.width) {\n            largestTick = label;\n            smartTick = context.smartTicks() ? context.smartTicks()[i] : {};\n\n            largestTickDimensions = tickDimensions;\n            smartTick = smartTick || tickDimensions;\n        }\n        return label;\n    });\n\n    labelManager.setStyle(context._axisNameStyle);\n    const axisNameDimensions = showAxisName ? labelManager.getOriSize(name) : { width: 0, height: 0 };\n\n    return {\n        axisNameDimensions,\n        largestTick,\n        largestTickDimensions,\n        allTickDimensions,\n        axisTicks,\n        smartTick,\n        tickSize: context.getTickSize()\n    };\n};\n\nexport const computeAxisDimensions = (context) => {\n    let tickDimensions = {};\n    const { labels } = context.renderConfig();\n    const { smartTicks, rotation } = labels;\n    const {\n        largestTickDimensions,\n        axisTicks,\n        smartTick,\n        axisNameDimensions,\n        allTickDimensions,\n        tickSize\n    } = getAxisComponentDimensions(context);\n    const { height: labelHeight, width: labelWidth } = largestTickDimensions;\n\n    // get the domain of axis\n    const domain = context.domain();\n    // const angle = ((rotation || 0) * Math.PI) / 180;\n\n    if (domain.length === 0) {\n        return null;\n    }\n\n    if (smartTicks) {\n        tickDimensions = smartTick;\n    } else {\n        tickDimensions = { width: labelWidth, height: labelHeight };\n    }\n    tickDimensions = getRotatedSpaces(rotation, tickDimensions.width, tickDimensions.height);\n\n    if (tickSize === 0) {\n        tickDimensions = { width: 0, height: 0 };\n    }\n    return {\n        allTickDimensions,\n        tickSize,\n        tickDimensions,\n        axisNameDimensions,\n        largestTickDimensions,\n        axisTicks\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getHorizontalAxisSpace = (context, axisDimensions, range) => {\n    let width;\n    let height;\n    const domain = context.domain();\n    const minTickDistance = context._minTickDistance.width;\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    width = range && range.length ? range[1] - range[0] : ((tickDimWidth + minTickDistance) * 3);\n\n    height = 0;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        width = ((max - min) / Math.abs(minTickDiff)) * (tickDimWidth + context._minTickDistance.width);\n    }\n    if (!range || !range.length) {\n        height = Math.max(tickDimWidth, tickDimHeight);\n    } else {\n        height = tickDimHeight;\n    }\n\n    height += (showAxisName ? axisDimHeight + axisNamePadding : 0) + tickSize;\n\n    return {\n        width,\n        height\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getVerticalAxisSpace = (context, axisDimensions) => {\n    let height;\n    let width;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    height = 0;\n    width = tickDimWidth;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        height = ((max - min) / Math.abs(minTickDiff)) * tickDimHeight;\n    }\n    width += (showAxisName ? axisDimHeight : 0) + tickSize + axisNamePadding;\n\n    return {\n        height,\n        width\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateBandSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n\n    const { orientation } = context.config();\n    const { show } = context.renderConfig();\n    const { largestTickDimensions, axisTicks, allTickDimensions } = axisDimensions;\n    const { height: largestDimHeight } = largestTickDimensions;\n    const minTickWidth = context._minTickDistance.width;\n    if (orientation === TOP || orientation === BOTTOM) {\n        let {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n\n        if (!range || !range.length) {\n            width = allTickDimensions.reduce((t, n) =>\n                t + Math.min(n.width, n.height) + minTickWidth, 0);\n        }\n\n        if (show === false) {\n            height = 0;\n            width = 0;\n        }\n        return {\n            width,\n            height\n        };\n    }\n\n    let {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    if (!height || height === 0) {\n        height = axisTicks.length * (largestDimHeight + context._minTickDistance.height);\n    }\n    if (show === false) {\n        width = 0;\n    }\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateContinousSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n    const { orientation } = context.config();\n    const { show, showAxisName } = context.renderConfig();\n    const { axisNameDimensions } = axisDimensions;\n\n    if (show === false) {\n        return {\n            width: 0,\n            height: 0\n        };\n    }\n\n    const { width: axisNameWidth } = axisNameDimensions;\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        const {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n        const axisWidth = Math.max(width, axisNameWidth);\n\n        return {\n            width: axisWidth,\n            height\n        };\n    }\n    const {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    const effHeight = Math.max(height, showAxisName ? axisNameWidth : 0);\n\n    return {\n        width,\n        height: effHeight\n    };\n};\n\n/**\n * Overwrites domain with user defined domain (if present)\n * @param {Object} context reference to current axes\n * @param {Array} domain default domain\n *\n * @return {Array} domain\n */\nexport const getValidDomain = (context, domain) => {\n    const { domain: userDom } = context.config();\n\n    if (userDom) {\n        domain = userDom;\n    }\n\n    return defaultValue(domain, []);\n};\n\nexport const setContinousAxisDomain = (context, domain) => {\n    const { nice } = context.config();\n    const scale = context.scale.bind(context);\n\n    scale().domain(domain);\n    nice && scale().nice();\n    context._domain = scale().domain();\n};\n\n/**\n * Checks if any of the properties have changed between two objects\n * @param {Object} obj first object\n * @param {Object} obj1 second object\n * @param {Array} properties properties to be compared between two objects\n *\n * @return {Boolean} boolean value\n */\nexport const hasAxesConfigChanged = (obj = {}, obj1 = {}, properties) => {\n    if (!Object.keys(obj).length || !Object.keys(obj1).length) {\n        return false;\n    }\n    return properties.some(key => obj[key] !== obj1[key]);\n};\n\nexport const resetTickInterval = (context, domain) => {\n    const {\n        orientation,\n        isOffset\n    } = context.config();\n\n    const minDiff = context._minDiff;\n     // Set available space on interaction\n    if (context.range().length && (orientation === TOP || orientation === BOTTOM)) {\n        context.applyTickSkipping();\n        const {\n            largestTickDimensions\n        } = context.getAxisDimensions();\n\n        const noOfTicks = context.getTickValues().length;\n\n        const { width, height, padding } = context.availableSpace();\n        const {\n            left,\n            right\n        } = padding;\n        // Get the Tick Interval\n        const tickInterval = Math.min(largestTickDimensions.width,\n            ((width - (noOfTicks - 1) * (context._minTickDistance.width)) / noOfTicks));\n\n        context.maxTickSpaces({\n            width: tickInterval\n        });\n\n        const adjustedRange = getAdjustedRange(minDiff, [tickInterval / 2,\n            width - left - right - tickInterval / 2], domain, context.config());\n\n         // set range for axis\n        setAxisRange(context, 'y', adjustedRange, isOffset ? height : null);\n\n        context.setTickConfig();\n    }\n};\n\nexport const getSmartAxisName = (name, width, labelManager) => {\n    const oriSize = labelManager.getOriSize(name);\n\n    labelManager.useEllipsesOnOverflow(true);\n\n    return labelManager.getSmartText(name, width, oriSize.height, true);\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { hasAxesConfigChanged } from './helper';\n\nexport const PROPS = {\n    availableSpace: {},\n    axisDimensions: {},\n    axisComponentDimensions: {},\n    config: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._config || {});\n            const mockedOldConfig = mergeRecursive({}, oldConfig);\n            value = mergeRecursive(mockedOldConfig, value);\n\n            value.axisNamePadding = Math.max(value.axisNamePadding, 0);\n            const shouldAxesScaleUpdate = hasAxesConfigChanged(\n                value, oldConfig, ['interpolator', 'exponent', 'base', 'orientation']\n            );\n            const tickFormatter = context.sanitizeTickFormatter(value);\n\n            if (shouldAxesScaleUpdate) {\n                context._scale = context.createScale(value);\n                context._axis = context.createAxis(value);\n            }\n\n            context._tickFormatter = ticks => tickFormatter(ticks);\n\n            context.resetRenderConfig(value);\n            return value;\n        }\n    },\n    renderConfig: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._renderConfig || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    logicalSpace: {},\n    mount: {\n    },\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.logicalSpace(null);\n            return value;\n        }\n    },\n\n    smartTicks: {},\n    tickSize: {},\n    maxTickSpaces: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._maxTickSpaces || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import {\n    mergeRecursive,\n    getSmartComputedStyle,\n    selectElement,\n    generateGetterSetters,\n    getUniqueId\n} from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { defaultConfig } from './default-config';\nimport { renderAxis } from '../axis-renderer';\nimport { spaceSetter } from './space-setter';\nimport {\n    getAxisComponentDimensions,\n    computeAxisDimensions,\n    calculateContinousSpace,\n    setOffset,\n    getValidDomain,\n    getSmartAxisName\n} from './helper';\nimport { PROPS } from './props';\n\nexport default class SimpleAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @memberof SimpleAxis\n     */\n    constructor (config, dependencies) {\n        this._id = getUniqueId();\n\n        this._dependencies = dependencies;\n        this._mount = null;\n        this._range = [];\n        this._domain = [];\n        this._domainLock = false;\n        this._axisDimensions = {};\n        this._smartTicks = [];\n\n        const defCon = mergeRecursive({}, this.constructor.defaultConfig());\n        const simpleConfig = mergeRecursive(defCon, config);\n\n        const bodyElem = selectElement('body');\n        const classPrefix = simpleConfig.classPrefix;\n        this._tickLabelStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-ticks`);\n        this._axisNameStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-axis-name`);\n\n        dependencies.labelManager.setStyle(this._tickLabelStyle);\n        const dist = dependencies.labelManager.getOriSize('w');\n\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n        this._minTickSpace = dependencies.labelManager.getOriSize('www...');\n\n        generateGetterSetters(this, PROPS);\n        this.config(simpleConfig);\n\n        this._scale = this.createScale(this._config);\n        this._axis = this.createAxis(this._config);\n        this._animationDonePromises = [];\n    }\n\n    /**\n     * Returns the default configuration of simple axis\n     *  @return {Object} default configurations\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    scale (...params) {\n        if (params.length) {\n            this._scale = params[0];\n            return this;\n        }\n        return this._scale;\n    }\n\n    resetDomain () {\n        this._domain = [];\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    axis (...params) {\n        if (params.length) {\n            this._axis = params[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            this.scale().domain(domainValue);\n            this._domain = this.scale().domain();\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    setAxisComponentDimensions () {\n        this.axisComponentDimensions(getAxisComponentDimensions(this));\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const scale = createScale({\n            padding,\n            interpolator,\n            exponent,\n            base,\n            range,\n            type: this.constructor.type()\n        });\n\n        return scale;\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat, numberFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(numberFormat(val), val, i, ticks);\n        }\n\n        return () => val => numberFormat(val);\n    }\n\n    resetRenderConfig (config) {\n        const {\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName,\n            xOffset,\n            yOffset,\n            tickValues,\n            smartAxisName\n        } = config;\n        this.renderConfig({\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName,\n            xOffset,\n            yOffset,\n            tickValues,\n            smartAxisName\n        });\n        return this;\n    }\n\n    resetLogicalSpace () {\n        this.logicalSpace(null);\n        this.range([]);\n\n        this.resetRenderConfig(this.config());\n    }\n\n    getFormattedText (text, index, axisTicks) {\n        const formatter = this._tickFormatter;\n\n        return formatter(axisTicks)(text, index);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const { orientation } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            const axis = axisClass(this.scale());\n            return axis;\n        }\n        return null;\n    }\n\n    setTickValues (tickValues) {\n        const renderConfig = this.renderConfig();\n        this.config({ ...renderConfig, tickValues });\n        this.tickValues = tickValues;\n        this.axis().tickValues(tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n        const type = this.constructor.type();\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset })[type].x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset })[type].y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.setSmartAxisName();\n        return this;\n    }\n\n    setSmartAxisName () {\n        const { orientation, name } = this.config();\n        const dimType = (orientation === TOP || orientation === BOTTOM) ? 'width' : 'height';\n        const widthDim = this.availableSpace()[dimType];\n        const labelManager = this.dependencies().labelManager;\n        labelManager.setStyle(this._axisNameStyle);\n        this.renderConfig({\n            smartAxisName: getSmartAxisName(name, widthDim, labelManager)\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        return this;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this.scale()(domainVal);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        return this.axis().tickSize();\n    }\n\n    /**\n     * Gets the space occupied by the parts of an axis\n     *\n     * @return {Object} object with details about sizes of the axis.\n     * @memberof SimpleAxis\n     */\n    getAxisDimensions (...params) {\n        this.axisDimensions(computeAxisDimensions(this, ...params));\n        return this.axisDimensions();\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateContinousSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    /**\n     * Returns the value from the domain when given a value from the range.\n     * @param {number} value Value from the range.\n     * @return {number} Value\n     */\n    invert (value) {\n        return this.scale().invert(value);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     *\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        return [v1, v2];\n    }\n\n    invertExtent (v1, v2) {\n        return [this.invert(v1), this.invert(v2)];\n    }\n\n    getMinTickDifference () {\n        return this.domain();\n    }\n\n    getFormattedTickValues (tickValues) {\n        return tickValues;\n    }\n\n    /**\n     * This method returns the width in pixels for one\n     * unit along the axis. It is only applicable to band scale\n     * and returns undefined for other scale type.\n     *\n     * @return {number} the width of one band along band scale axis\n     * @memberof SimpleAxis\n     */\n    getUnitWidth () {\n        return 0;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof SimpleAxis\n     */\n    serialize () {\n        return {\n            name: this.name,\n            type: this.type,\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to render the axis inside\n     * the supplied svg container.\n     *\n     * @param {SVGElement} svg the svg element in which to render the path\n     * @memberof SimpleAxis\n     */\n    /* istanbul ignore next */render () {\n        if (this.mount()) {\n            this.setTickConfig();\n            renderAxis(this);\n        }\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    remove () {\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    unsubscribe () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    isReverse () {\n        const range = this.range();\n        return range[0] > range[1];\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getPixelToValueRatio () {\n        const scale = this.scale();\n        const range = scale.range();\n        const domain = scale.domain();\n\n        return Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    }\n\n     /**\n     * Notifies when all animations/transitions of the axis are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n}\n\n","import { sanitizeDomainWhenEqual } from 'muze-utils';\nimport { scaleMap } from '../../scale-creator';\n\nexport default class LinearInterpolator {\n\n    createScale (config) {\n        const {\n            range\n        } = config;\n        const scaleFactory = scaleMap.linear;\n        this._scale = scaleFactory().range(range);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain.length) {\n            domain = sanitizeDomainWhenEqual(domain);\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LogInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            base\n        } = config;\n        const scaleFactory = scaleMap.log;\n        this._scale = scaleFactory().range(range).base(base);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        const scale = this._scale;\n        if (domainVal <= 0) {\n            return scale(scale.domain()[0]);\n        }\n\n        return scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain[0] <= 0) {\n            domain[0] = Math.max(1, domain[0]);\n        }\n        if (domain[1] <= 0) {\n            domain[1] = Math.max(1, domain[1]);\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class PowInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            exponent\n        } = config;\n        const scaleFactory = scaleMap.pow;\n        this._scale = scaleFactory().range(range).exponent(exponent);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        return domain;\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { LINEAR, LOG, POW } from '../enums/scale-type';\nimport { LogInterpolator, PowInterpolator, LinearInterpolator } from './interpolators';\nimport {\n    getNumberOfTicks,\n    getValidDomain,\n    setContinousAxisDomain\n} from './helper';\n\nexport const interpolatorMap = {\n    [LOG]: LogInterpolator,\n    [POW]: PowInterpolator,\n    [LINEAR]: LinearInterpolator\n};\n\nexport default class ContinousAxis extends SimpleAxis {\n    constructor (config, dependencies) {\n        config.tickFormat = config.tickFormat || (val => val);\n        super(config, dependencies);\n    }\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const InterpolatorCls = interpolatorMap[interpolator];\n\n        this._interpolator = new InterpolatorCls();\n        let scale = this._interpolator.createScale({\n            padding,\n            exponent,\n            base,\n            range\n        });\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ContinousAxis\n     */\n    static type () {\n        return LINEAR;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this._interpolator.getScaleValue(domainVal);\n    }\n /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n\n        return axis.tickSize();\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainVal = this._interpolator.sanitizeDomain(getValidDomain(this, domain[0]));\n            setContinousAxisDomain(this, domainVal);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (...params) {\n        super.setAvailableSpace(...params);\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} tickValues\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        const {\n            tickValues,\n            showInnerTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        if (!showInnerTicks) {\n            axis.tickValues([]);\n            return this;\n        }\n\n        if (tickValues) {\n            tickValues instanceof Array && this.axis().tickValues(tickValues);\n        }\n        const newTickValues = this.getTickValues();\n\n        axis.tickValues(newTickValues);\n        const smartLabel = this.dependencies().labelManager;\n        smartLabel.setStyle(this._tickLabelStyle);\n        const formatter = this._tickFormatter(newTickValues);\n        const smartTicks = newTickValues.map((val, i) => {\n            const text = formatter(val, i);\n            const tickSpace = smartLabel.getOriSize(text);\n\n            tickSpace.text = text;\n            return tickSpace;\n        });\n\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickValues () {\n        let labelDim = 0;\n        const {\n            orientation\n\n        } = this.config();\n        const {\n            tickValues\n        } = this.renderConfig();\n        const range = this.range();\n        const axis = this.axis();\n\n        const availableSpace = Math.abs(range[0] - range[1]);\n\n        const labelProps = this.axisComponentDimensions().largestTickDimensions;\n\n        if (tickValues) {\n            return tickValues;\n        }\n        labelDim = labelProps[orientation === BOTTOM || orientation === TOP ? 'width' : 'height'];\n\n        return getNumberOfTicks(availableSpace, labelDim, axis, this);\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.renderConfig().tickValues);\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline (tickText) {\n        const {\n            orientation\n        } = this.config();\n        const {\n            labels\n        } = this.renderConfig();\n\n        const {\n            rotation\n        } = labels;\n        const axis = this.axis();\n        const ticks = axis.tickValues();\n        const smartTicks = this.smartTicks();\n\n        if (smartTicks && smartTicks.length) {\n            const { width, height } = this.smartTicks()[0];\n\n            axis.tickTransform((d) => {\n                if (d === ticks[0]) {\n                    if ((orientation === LEFT || orientation === RIGHT)) {\n                        return `translate(0, -${(height) / 3}px)`;\n                    }\n\n                    if ((orientation === TOP || orientation === BOTTOM) && !rotation) {\n                        return `translate(${width / 2}px,  ${0}px)`;\n                    }\n                } return '';\n            });\n        }\n        return tickText;\n    }\n\n}\n","import SimpleAxis from './simple-axis';\nimport { BAND } from '../enums/scale-type';\nimport { calculateBandSpace, setOffset, getRotatedSpaces } from './helper';\n\nexport default class BandAxis extends SimpleAxis {\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BandAxis\n     */\n    static type () {\n        return BAND;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks = '';\n        let smartlabel;\n        const domain = this.domain();\n        const { labelManager } = this._dependencies;\n        const { padding } = this.config();\n        const { labels, tickValues } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        tickValues && this.axis().tickValues(tickValues);\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        // Update padding between plots\n        if (typeof padding === 'number') {\n            const paddingNormalized = Math.min(1, Math.max(0, padding));\n            this.scale().padding(paddingNormalized);\n        }\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    /**\n     *\n     *\n     * @memberof BandAxis\n     */\n    getTickValues () {\n        return this.axis().scale().domain();\n    }\n\n    formatTickValue (val) {\n        return this.valueParser()(val);\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(this.formatTickValue(val), val, i, ticks);\n        }\n        return () => val => this.formatTickValue(val);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    getUnitWidth () {\n        return this.scale().bandwidth();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        axis.tickSizeInner(showInnerTicks ? 6 : 0);\n        axis.tickSizeOuter(showOuterTicks ? 6 : 0);\n        return axis.tickSize();\n    }\n\n    invertExtent (v1, v2) {\n        return this.scale().invertExtent(v1, v2);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        const scale = this.scale();\n        const range = scale.range();\n        const reverse = range[0] > range[1];\n\n        const extent = this.invertExtent(v1, v2);\n        const p1 = scale(reverse ? extent[extent.length - 1] : extent[0]);\n        const p2 = scale(reverse ? extent[0] : extent[extent.length - 1]) + scale.bandwidth();\n        return [p1, p2];\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { TIME } from '../enums/scale-type';\nimport { calculateBandSpace, getRotatedSpaces, getValidDomain, setContinousAxisDomain, setOffset,\n    resetTickInterval } from './helper';\nimport { applyTickSkipping } from './space-setter';\n\n/**\n *\n *\n * @export\n * @class TimeAxis\n * @extends {SimpleAxis}\n */\nexport default class TimeAxis extends SimpleAxis {\n\n    constructor (...params) {\n        super(...params);\n        this._minDiff = Infinity;\n    }\n\n    /**\n     *\n     *\n     * @param {*} range\n     *\n     * @memberof TimeAxis\n     */\n    createScale (range) {\n        let scale = super.createScale(range);\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TimeAxis\n     */\n    static type () {\n        return TIME;\n    }\n\n    formatTickValue (val) {\n        return this.scale().tickFormat()(val);\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return (ticks) => {\n                const rawTicks = ticks.map(t => t.getTime());\n                return (val, i) => tickFormat(this.formatTickValue(val), val.getTime(), i, rawTicks);\n            };\n        }\n        return () => val => this.formatTickValue(val);\n    }\n\n     /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n        return super.getTickSize();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TimeAxis\n     */\n    getTickValues () {\n        return this.renderConfig().tickValues || this.scale().ticks();\n    }\n\n    /**\n     *\n     *\n     * @param {*} diff\n     *\n     * @memberof TimeAxis\n     */\n    minDiff (diff) {\n        this._minDiff = Math.min(this._minDiff, diff);\n        return this;\n    }\n\n    applyTickSkipping () {\n        applyTickSkipping(this);\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            setContinousAxisDomain(this, domainValue);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n\n            resetTickInterval(this, domainValue);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (...params) {\n        super.setAvailableSpace(...params);\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks;\n        let smartlabel;\n\n        const { labels, tickValues } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { labelManager } = this._dependencies;\n        const domain = this.getTickValues();\n\n        tickValues && this.axis().tickValues(tickValues);\n\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n\n        this.smartTicks(smartTicks);\n        return this;\n    }\n}\n","export const x11Colors = {\n    Pink: { hex: 'ffc0cb', rgb: '255,192,203' },\n    LightPink: { hex: 'ffb6c1', rgb: '255,182,193' },\n    HotPink: { hex: 'ff69b4', rgb: '255,105,180' },\n    DeepPink: { hex: 'ff1493', rgb: '255,20,147' },\n    PaleVioletRed: { hex: 'db7093', rgb: '219,112,147' },\n    MediumVioletRed: { hex: 'c71585', rgb: '199,21,133' },\n    LightSalmon: { hex: 'ffa07a', rgb: '255,160,122' },\n    Salmon: { hex: 'fa8072', rgb: '250,128,114' },\n    DarkSalmon: { hex: 'e9967a', rgb: '233,150,122' },\n    LightCoral: { hex: 'f08080', rgb: '240,128,128' },\n    IndianRed: { hex: 'cd5c5c', rgb: '205,92,92' },\n    Crimson: { hex: 'dc143c', rgb: '220,20,60' },\n    FireBrick: { hex: 'b22222', rgb: '178,34,34' },\n    DarkRed: { hex: '8b0000', rgb: '139,0,0' },\n    Red: { hex: 'ff0000', rgb: '255,0,0' },\n    OrangeRed: { hex: 'ff4500', rgb: '255,69,0' },\n    Tomato: { hex: 'ff6347', rgb: '255,99,71' },\n    Coral: { hex: 'ff7f50', rgb: '255,127,80' },\n    DarkOrange: { hex: 'ff8c00', rgb: '255,140,0' },\n    Orange: { hex: 'ffa500', rgb: '255,165,0' },\n    Gold: { hex: 'ffd700', rgb: '255,215,0' },\n    Yellow: { hex: 'ffff00', rgb: '255,255,0' },\n    LightYellow: { hex: 'ffffe0', rgb: '255,255,224' },\n    LemonChiffon: { hex: 'fffacd', rgb: '255,250,205' },\n    LightGoldenrodYellow: { hex: 'fafad2', rgb: '250,250,210' },\n    PapayaWhip: { hex: 'ffefd5', rgb: '255,239,213' },\n    Moccasin: { hex: 'ffe4b5', rgb: '255,228,181' },\n    PeachPuff: { hex: 'ffdab9', rgb: '255,218,185' },\n    PaleGoldenrod: { hex: 'eee8aa', rgb: '238,232,170' },\n    Khaki: { hex: 'f0e68c', rgb: '240,230,140' },\n    DarkKhaki: { hex: 'bdb76b', rgb: '189,183,107' },\n    Cornsilk: { hex: 'fff8dc', rgb: '255,248,220' },\n    BlanchedAlmond: { hex: 'ffebcd', rgb: '255,235,205' },\n    Bisque: { hex: 'ffe4c4', rgb: '255,228,196' },\n    NavajoWhite: { hex: 'ffdead', rgb: '255,222,173' },\n    Wheat: { hex: 'f5deb3', rgb: '245,222,179' },\n    BurlyWood: { hex: 'deb887', rgb: '222,184,135' },\n    Tan: { hex: 'd2b48c', rgb: '210,180,140' },\n    RosyBrown: { hex: 'bc8f8f', rgb: '188,143,143' },\n    SandyBrown: { hex: 'f4a460', rgb: '244,164,96' },\n    Goldenrod: { hex: 'daa520', rgb: '218,165,32' },\n    DarkGoldenrod: { hex: 'b8860b', rgb: '184,134,11' },\n    Peru: { hex: 'cd853f', rgb: '205,133,63' },\n    Chocolate: { hex: 'd2691e', rgb: '210,105,30' },\n    SaddleBrown: { hex: '8b4513', rgb: '139,69,19' },\n    Sienna: { hex: 'a0522d', rgb: '160,82,45' },\n    Brown: { hex: 'a52a2a', rgb: '165,42,42' },\n    Maroon: { hex: '800000', rgb: '128,0,0' },\n    DarkOliveGreen: { hex: '556b2f', rgb: '85,107,47' },\n    Olive: { hex: '808000', rgb: '128,128,0' },\n    OliveDrab: { hex: '6b8e23', rgb: '107,142,35' },\n    YellowGreen: { hex: '9acd32', rgb: '154,205,50' },\n    LimeGreen: { hex: '32cd32', rgb: '50,205,50' },\n    Lime: { hex: '00ff00', rgb: '0,255,0' },\n    LawnGreen: { hex: '7cfc00', rgb: '124,252,0' },\n    Chartreuse: { hex: '7fff00', rgb: '127,255,0' },\n    GreenYellow: { hex: 'adff2f', rgb: '173,255,47' },\n    SpringGreen: { hex: '00ff7f', rgb: '0,255,127' },\n    MediumSpringGreen: { hex: '00fa9a', rgb: '0,250,154' },\n    LightGreen: { hex: '90ee90', rgb: '144,238,144' },\n    PaleGreen: { hex: '98fb98', rgb: '152,251,152' },\n    DarkSeaGreen: { hex: '8fbc8f', rgb: '143,188,143' },\n    MediumSeaGreen: { hex: '3cb371', rgb: '60,179,113' },\n    SeaGreen: { hex: '2e8b57', rgb: '46,139,87' },\n    ForestGreen: { hex: '228b22', rgb: '34,139,34' },\n    Green: { hex: '008000', rgb: '0,128,0' },\n    DarkGreen: { hex: '006400', rgb: '0,100,0' },\n    MediumAquamarine: { hex: '66cdaa', rgb: '102,205,170' },\n    Aqua: { hex: '00ffff', rgb: '0,255,255' },\n    Cyan: { hex: '00ffff', rgb: '0,255,255' },\n    LightCyan: { hex: 'e0ffff', rgb: '224,255,255' },\n    PaleTurquoise: { hex: 'afeeee', rgb: '175,238,238' },\n    Aquamarine: { hex: '7fffd4', rgb: '127,255,212' },\n    Turquoise: { hex: '40e0d0', rgb: '64,224,208' },\n    MediumTurquoise: { hex: '48d1cc', rgb: '72,209,204' },\n    DarkTurquoise: { hex: '00ced1', rgb: '0,206,209' },\n    LightSeaGreen: { hex: '20b2aa', rgb: '32,178,170' },\n    CadetBlue: { hex: '5f9ea0', rgb: '95,158,160' },\n    DarkCyan: { hex: '008b8b', rgb: '0,139,139' },\n    Teal: { hex: '008080', rgb: '0,128,128' },\n    LightSteelBlue: { hex: 'b0c4de', rgb: '176,196,222' },\n    PowderBlue: { hex: 'b0e0e6', rgb: '176,224,230' },\n    LightBlue: { hex: 'add8e6', rgb: '173,216,230' },\n    SkyBlue: { hex: '87ceeb', rgb: '135,206,235' },\n    LightSkyBlue: { hex: '87cefa', rgb: '135,206,250' },\n    DeepSkyBlue: { hex: '00bfff', rgb: '0,191,255' },\n    DodgerBlue: { hex: '1e90ff', rgb: '30,144,255' },\n    CornflowerBlue: { hex: '6495ed', rgb: '100,149,237' },\n    SteelBlue: { hex: '4682b4', rgb: '70,130,180' },\n    RoyalBlue: { hex: '4169e1', rgb: '65,105,225' },\n    Blue: { hex: '0000ff', rgb: '0,0,255' },\n    MediumBlue: { hex: '0000cd', rgb: '0,0,205' },\n    DarkBlue: { hex: '00008b', rgb: '0,0,139' },\n    Navy: { hex: '000080', rgb: '0,0,128' },\n    MidnightBlue: { hex: '191970', rgb: '25,25,112' },\n    Lavender: { hex: 'e6e6fa', rgb: '230,230,250' },\n    Thistle: { hex: 'd8bfd8', rgb: '216,191,216' },\n    Plum: { hex: 'dda0dd', rgb: '221,160,221' },\n    Violet: { hex: 'ee82ee', rgb: '238,130,238' },\n    Orchid: { hex: 'da70d6', rgb: '218,112,214' },\n    Fuchsia: { hex: 'ff00ff', rgb: '255,0,255' },\n    Magenta: { hex: 'ff00ff', rgb: '255,0,255' },\n    MediumOrchid: { hex: 'ba55d3', rgb: '186,85,211' },\n    MediumPurple: { hex: '9370db', rgb: '147,112,219' },\n    BlueViolet: { hex: '8a2be2', rgb: '138,43,226' },\n    DarkViolet: { hex: '9400d3', rgb: '148,0,211' },\n    DarkOrchid: { hex: '9932cc', rgb: '153,50,204' },\n    DarkMagenta: { hex: '8b008b', rgb: '139,0,139' },\n    Purple: { hex: '800080', rgb: '128,0,128' },\n    Indigo: { hex: '4b0082', rgb: '75,0,130' },\n    DarkSlateBlue: { hex: '483d8b', rgb: '72,61,139' },\n    SlateBlue: { hex: '6a5acd', rgb: '106,90,205' },\n    MediumSlateBlue: { hex: '7b68ee', rgb: '123,104,238' },\n    White: { hex: 'ffffff', rgb: '255,255,255' },\n    Snow: { hex: 'fffafa', rgb: '255,250,250' },\n    Honeydew: { hex: 'f0fff0', rgb: '240,255,240' },\n    MintCream: { hex: 'f5fffa', rgb: '245,255,250' },\n    Azure: { hex: 'f0ffff', rgb: '240,255,255' },\n    AliceBlue: { hex: 'f0f8ff', rgb: '240,248,255' },\n    GhostWhite: { hex: 'f8f8ff', rgb: '248,248,255' },\n    WhiteSmoke: { hex: 'f5f5f5', rgb: '245,245,245' },\n    Seashell: { hex: 'fff5ee', rgb: '255,245,238' },\n    Beige: { hex: 'f5f5dc', rgb: '245,245,220' },\n    OldLace: { hex: 'fdf5e6', rgb: '253,245,230' },\n    FloralWhite: { hex: 'fffaf0', rgb: '255,250,240' },\n    Ivory: { hex: 'fffff0', rgb: '255,255,240' },\n    AntiqueWhite: { hex: 'faebd7', rgb: '250,235,215' },\n    Linen: { hex: 'faf0e6', rgb: '250,240,230' },\n    LavenderBlush: { hex: 'fff0f5', rgb: '255,240,245' },\n    MistyRose: { hex: 'ffe4e1', rgb: '255,228,225' },\n    Gainsboro: { hex: 'dcdcdc', rgb: '220,220,220' },\n    LightGray: { hex: 'd3d3d3', rgb: '211,211,211' },\n    Silver: { hex: 'c0c0c0', rgb: '192,192,192' },\n    DarkGrey: { hex: 'a9a9a9', rgb: '169,169,169' },\n    Grey: { hex: '808080', rgb: '128,128,128' },\n    DimGrey: { hex: '696969', rgb: '105,105,105' },\n    LightSlateGrey: { hex: '778899', rgb: '119,136,153' },\n    SlateGrey: { hex: '708090', rgb: '112,128,144' },\n    DarkSlateGrey: { hex: '2f4f4f', rgb: '47,79,79' },\n    Black: { hex: '000000', rgb: '0,0,0' }\n};\n","import {\n    LINEAR\n} from '../enums/constants';\n/**\n * Set of default colors\n */\nexport const palette = [\n    '#086bb6',\n    '#f37d45',\n    '#f5ce02',\n    '#67bda0',\n    '#c54e4e',\n    '#ae70af'\n];\n\nexport const DEFAULT_GRADIENT_COLOR = '#eaeaea';\n\nexport const DEFAULT_CONFIG = {\n    range: palette,\n    value: palette[0],\n    step: false,\n    stops: 5,\n    type: LINEAR\n};\n","import { mergeRecursive, detectColor, hexToHsv, rgbToHsv, defaultValue } from 'muze-utils';\nimport { x11Colors } from './color-maps';\nimport { palette, DEFAULT_GRADIENT_COLOR } from './defaults';\nimport { LINEAR, RGB, HEX, HSL, HSLA } from '../enums/constants';\n\nexport const getHslString = hslArr => `hsla(${hslArr[0] * 360},${hslArr[1] * 100}%,${hslArr[2] * 100}%,\\\n${hslArr[3] || 1})`;\n\nexport const convertToXllString = baseString => (baseString.split(' ') || [])\n                .reduce((x, e) => `${x}${e.charAt(0).toUpperCase()}${e.slice(1)}`, '');\n\nexport const getActualHslColor = (e, paletteColor) => {\n    let color = '';\n    if (typeof e === 'string') {\n        e = e.replace(/ /g, '');\n        e = e.toLowerCase();\n        if (detectColor(e) === HSL || detectColor(e) === HSLA) {\n            color = e.match(/(\\d+(\\.\\d+)?)/g);\n            color = [color[0] / 360, color[1] / 100, color[2] / 100, defaultValue(Number(color[3]), 1)];\n        } else if (detectColor(e) === HEX) {\n            color = hexToHsv(e);\n        } else if (detectColor(e) === RGB) {\n            const col = e.substring(e.indexOf('(') + 1, e.lastIndexOf(')')).split(/,\\s*/);\n            color = rgbToHsv(...col);\n        } else if (x11Colors[convertToXllString(e)]) {\n            color = rgbToHsv(...x11Colors[convertToXllString(e)].rgb.split(','));\n        }\n    } else if (!(e instanceof Array)) {\n        color = rgbToHsv(paletteColor);\n    } else {\n        color = e;\n    }\n    return color;\n};\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => {\n            const defCon = mergeRecursive({}, context.constructor.defaultConfig());\n            if (config.type === LINEAR) {\n                config.range = config.range || [defCon.range[0]];\n                config.range = config.range.length > 1 ? config.range : [DEFAULT_GRADIENT_COLOR, ...config.range];\n            }\n            const oldConfig = mergeRecursive(defCon, context.config());\n            const newConfig = mergeRecursive(oldConfig, config);\n\n            if (newConfig.range instanceof Array) {\n                newConfig.range = newConfig.range.map((e, i) => getActualHslColor(e, palette[i]));\n                newConfig.stops = config.stops || newConfig.range.length;\n            }\n            newConfig.value = getActualHslColor(newConfig.value, newConfig.value);\n            return newConfig;\n        }\n    },\n    domain: {},\n    scale: {},\n    uniqueValues: {}\n};\n","import { InvalidAwareTypes, getObjProp } from 'muze-utils';\n\nexport const treatNullMeasures = (domainVal, scaledVal, minDomainScaledVal) => {\n    if (domainVal instanceof InvalidAwareTypes) {\n        return minDomainScaledVal;\n    }\n    return scaledVal;\n};\n\nexport const resolveAxisConfig = (propVal, defaultVal, context) => {\n    const constructor = getObjProp(propVal, 'constructor');\n    switch (constructor) {\n    case Function:\n        return propVal(defaultVal, context);\n    case Array:\n        return propVal;\n    default:\n        return defaultVal;\n    }\n};\n","import { numberInterpolator, piecewiseInterpolator, hslInterpolator, sanitizeDomainWhenEqual } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, SEQUENTIAL, ORDINAL, QUANTILE } from '../enums/scale-type';\nimport { getHslString } from './props';\nimport { treatNullMeasures } from '../helper';\n\nconst getStops = (domain, stops) => {\n    let newStops = [];\n\n    if (stops instanceof Array) {\n        newStops = stops.slice().sort();\n        newStops = [...new Set([domain[0], ...stops, domain[1]])].sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i <= stops; i++) {\n            newStops[i] = interpolator(i / stops);\n        }\n    }\n\n    if (newStops[0] < domain[0]) {\n        newStops.shift();\n    }\n    return { domain, newStops };\n};\n\nconst rangeStops = (newStopsLength, range) => {\n    let newRange = [];\n    const maxRangeLength = Math.min(range.length, 18);\n\n    if (newStopsLength > maxRangeLength) {\n        const interpolator = piecewiseInterpolator()(hslInterpolator(), range.map(e => getHslString(e)));\n        for (let i = 0; i < newStopsLength; i++) {\n            newRange[i] = interpolator(i / (newStopsLength - 1));\n        }\n    } else {\n        newRange = range.slice(0, newStopsLength);\n    }\n    return { newRange };\n};\n\n/**\n*\n*\n* @param {*} domain\n*\n*/\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomainMeasure = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { domain, uniqueVals, scaleDomain: [0, 1], range };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain, nice: true, range };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} stops\n *\n */\nconst steppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, stops);\n    const { newRange } = rangeStops(newStops.length - 1, range);\n\n    return { uniqueVals, domain: newStops, nice: true, range: newRange };\n};\n\nconst continousSteppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(sanitizeDomainWhenEqual(domain), range.length - 1);\n    const hslRange = range.map(e => getHslString(e));\n    return { uniqueVals, domain: newStops, nice: true, range: hslRange };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst uniqueRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    return scale(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst indexedRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n\n    return treatNullMeasures(domainValue, scale(numVal), scale(0));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) => treatNullMeasures(domainValue, scale(domainValue),\n    scale(domain[0]));\n\n/**\n *\n *\n * @param {*} stops\n */\nconst strategies = () => ({\n    [`${CONTINOUS}-${CONTINOUS}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomain,\n        value: () => uniqueRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${ORDINAL}`]: {\n        scale: ORDINAL,\n        domainRange: () => normalDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}-${ORDINAL}`]: {\n        scale: LINEAR,\n        domainRange: () => continousSteppedDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${ORDINAL}`]: {\n        scale: QUANTILE,\n        domainRange: () => steppedDomain,\n        value: () => normalRange\n\n    }\n});\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} stops\n */\nexport const strategyGetter = (domainType, rangeType, schemeType) =>\n    strategies()[`${domainType}-${rangeType}-${schemeType || ''}`];\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters, rgbToHsv, defaultValue } from 'muze-utils';\nimport { createScale, getScheme, getSchemeType } from '../scale-creator';\nimport { CONTINOUS, DISCRETE, COLOR } from '../enums/constants';\nimport { strategyGetter } from './color-strategy';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { PROPS, getHslString, getActualHslColor } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ColorAxis {\n\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} config input parameters.\n    * @param {Object | undefined} params.range Type of color range.\n    * @param {string} params.name the label to show on axis.\n    * @param {string} params.type The type of scale to handle.\n    * @memberof ColorAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n        this.config(config);\n\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = (this._config.type === 'linear' && !this._config.step) ? CONTINOUS : DISCRETE;\n\n        this._schemeType = getSchemeType(this._config.range);\n\n        this._colorStrategy = this.setColorStrategy(this._domainType, this._rangeType, this._schemeType);\n        this._scale = this.createScale(this._colorStrategy);\n\n        this._id = getUniqueId();\n\n        this.updateDomain(config.domain);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return COLOR;\n    }\n\n    /**\n     *\n     *\n     * @param {*} colorStrategy\n     *\n     * @memberof ColorAxis\n     */\n    createScale (colorStrategy) {\n        const { range } = this.config();\n        if (range && typeof (range) === 'string') {\n            return getScheme(range);\n        }\n        return createScale({\n            type: colorStrategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setColorStrategy (domainType, rangeType, schemeType) {\n        return strategyGetter(domainType, rangeType, schemeType);\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getHslString (hslColorArray) {\n        return getHslString(hslColorArray);\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getColor (domainVal) {\n        return this.getHslString(this.getRawColor(domainVal));\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getRawColor (domainVal) {\n        if (this.domain() && domainVal !== undefined) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const color = this._colorStrategy.value(range)(domainVal, scale, this.domain(), this.uniqueValues());\n            if (color) {\n                if (typeof color === 'string') {\n                    const col = color.substring(color.indexOf('(') + 1, color.lastIndexOf(')')).split(/,\\s*/);\n                    return rgbToHsv(...col);\n                }\n                return [...color];\n            }\n        }\n        return [...this.config().value];\n    }\n\n    /**\n     *\n     *\n     * @param {*} [domain=[]]\n     *\n     * @memberof ColorAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const domainRangeFn = this._colorStrategy.domainRange();\n            const scaleInfo = domainRangeFn(domain, this.config().stops, range);\n\n            this.domain(scaleInfo.domain);\n            scaleInfo.range && this.scale().range(scaleInfo.range);\n            this.uniqueValues(scaleInfo.uniqueVals);\n            this.scale().domain(scaleInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            config: this.config()\n        };\n    }\n\n    transformColor (color, transformationArr) {\n        const h = color[0] * 360;\n        const s = color[1] * 100;\n        const l = color[2] * 100;\n        const a = Math.min(defaultValue(color[3], 0), 1);\n        const newH = h + transformationArr[0];\n        const newS = s + transformationArr[1];\n        const newL = l + transformationArr[2];\n        const newA = Math.min(a + transformationArr[3] || 0, 1);\n\n        return { color: `hsla(${newH},${newS}%,${newL}%,${newA})`, hsla: [newH / 360, newS / 100, newL / 100, newA] };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n\n    getHslArray (color) {\n        return getActualHslColor(color);\n    }\n\n}\n","export const DEFAULT_CONFIG = {\n    value: 36,\n    range: [36, 1000]\n};\n","import { numberInterpolator, piecewiseInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, THRESHOLD } from '../enums/scale-type';\nimport { treatNullMeasures } from '../helper';\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} intervals\n *\n */\nconst steppedDomain = (domain, intervals) => {\n    let newIntervals = [];\n    if (intervals instanceof Array) {\n        newIntervals = intervals.slice().sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i < intervals; i++) {\n            newIntervals[i] = interpolator(i / (intervals - 1));\n        }\n    }\n    if (newIntervals[0] < domain[0]) {\n        newIntervals.shift();\n    }\n    const retDomain = newIntervals;\n    return { uniqueVals: newIntervals, domain: retDomain, nice: true };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst discreteRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n    const interpolator = numberInterpolator()(...scale.range());\n    return treatNullMeasures(domainValue, interpolator(numVal), interpolator(domain[0]));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst pieceWiseRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    const fn = piecewiseInterpolator()(numberInterpolator(), [...scale.range()]);\n    return fn(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) =>\n    treatNullMeasures(domainValue, scale(domainValue), scale(domain[0]));\n\n/**\n *\n *\n * @param {*} intervals\n */\nconst strategies = {\n    [`${DISCRETE}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: indexedDomain,\n        range: pieceWiseRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: normalDomain,\n        range: normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}`]: {\n        scale: THRESHOLD,\n        domain: steppedDomain,\n        range: discreteRange\n    }\n};\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} intervals\n */\nexport const strategyGetter = (domainType, rangeType) =>\n     strategies[`${domainType}-${rangeType}`];\n","export const PROPS = {\n    config: {},\n    domain: {\n        sanitization: (context, value) => {\n            context.scale().domain(value);\n            return value;\n        }\n    },\n    range: {},\n    scale: {},\n    uniqueValues: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SIZE, CONTINOUS, DISCRETE } from '../enums/constants';\nimport { strategyGetter } from './size-strategy';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class SizeAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @param {Object} config input parameters.\n     * @memberof SizeAxis\n     */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig(), config);\n        // @todo: Will use configuration override using scale decorator\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = CONTINOUS;\n\n        this._sizeStrategy = this.setStrategy(this._domainType, this._rangeType);\n        this._scale = this.createScale(this._sizeStrategy);\n        this._range = this._config.range;\n\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setStrategy (domainType, rangeType) {\n        return strategyGetter(domainType, rangeType);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SizeAxis\n     */\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SIZE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof SizeAxis\n     */\n    getSize (domainVal = 0) {\n        let sizeVal = 1;\n        const {\n            value\n        } = this.config();\n        const scale = this.scale();\n        const domain = this.domain() || [1, 1];\n\n        if (!scale || domain[0] === domain[1]) {\n            sizeVal = value;\n        } else {\n            return this._sizeStrategy.range(domainVal, scale, this.domain(), this.uniqueValues());\n        }\n        return sizeVal;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof SizeAxis\n     */\n    updateDomain (domain) {\n        if (domain) {\n            const domainFn = this._sizeStrategy.domain;\n\n            const domainInfo = domainFn(domain, this.config().intervals);\n\n            this.domain(domainInfo.domain);\n            this.uniqueValues(domainInfo.uniqueVals);\n\n            this.scale().domain(domainInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","export const DEFAULT_CONFIG = {\n    generator: null,\n    value: 'circle',\n    range: ['circle', 'diamond', 'star', 'cross', 'square', 'wye', 'triangle']\n};\n","export const PROPS = {\n    config: {},\n    domain: {},\n    scale: {},\n    uniqueValues: {},\n    generator: {}\n};\n\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, getSymbol, generateGetterSetters, mergeRecursive, InvalidAwareTypes } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SHAPE } from '../enums/constants';\nimport { shapeGenerator } from './helper';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ShapeAxis {\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} params input parameters.\n    * @param {Object | undefined} params.range Type of color scheme.\n    * @memberof ShapeAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(this._config, config);\n\n        this._scale = createScale({\n            type: 'ordinal',\n            range: this._config.range\n        });\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SHAPE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} value\n     *\n     * @memberof ShapeAxis\n     */\n    getShape (value) {\n        if (!this.scale() || !this.domain() || !value || value instanceof InvalidAwareTypes) {\n            return this.config().value;\n        }\n\n        if (this._generatedShapes) {\n            return this._generatedShapes[value];\n        }\n\n        const shapeType = this.scale()(value);\n        if (shapeType === 'string') {\n            return getSymbol(shapeType);\n        }\n\n        return shapeType;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof ShapeAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            this.uniqueValues(domain);\n            this.domain(domain);\n            this.scale().domain(domain);\n\n            if (this.config().generator) {\n                this._generatedShapes = shapeGenerator(domain, this.config().generator);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.config().range,\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","/**\n *\n *\n * @param {*} domain\n * @param {*} generatorFn\n *\n */\nexport const shapeGenerator = (domain, generatorFn) => {\n    const generatedShapes = {};\n    domain.forEach((value) => {\n        generatedShapes[value] = generatorFn(value);\n    });\n    return generatedShapes;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => mergeRecursive(context.config(), config),\n        preset: (context, config) => {\n            const { range, domain } = config;\n            range && context.range(range);\n            domain && context.domain(domain);\n        }\n    },\n    domain: {},\n    range: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, Symbols, mergeRecursive, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_ANGLE_DOMAIN } from '../enums/constants';\nimport { PROPS } from './props';\nimport { resolveAxisConfig } from '../helper';\n\nconst { pie } = Symbols;\n\nconst createAngleValues = (context) => {\n    const angleData = context._angleFn(context._domain);\n    angleData.forEach((v) => {\n        v.startAngle -= Math.PI / 2;\n        v.endAngle -= Math.PI / 2;\n    });\n    context._angleValues = angleData.reduce((values, d) => {\n        const key = d.data;\n        !values[key] && (values[key] = []);\n        values[key].push(d);\n        return values;\n    }, {});\n};\n\n/**\n* This class is used to instantiate a AngleAxis.\n* @class AngleAxis\n*/\nexport default class AngleAxis {\n\n    /**\n     * Creates an instance of AngleAxis.\n     * @param {Object} config input parameters.\n     * @memberof AngleAxis\n     */\n    constructor (config = {}) {\n        this._id = getUniqueId();\n        generateGetterSetters(this, PROPS);\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n        this.config(config);\n        this._range = [0, 360];\n        this._angleFn = pie()\n                .value(d => (typeof d === 'string' ? 1 : d))\n                .sortValues(null);\n        this._angleValues = {};\n    }\n\n    static defaultConfig () {\n        return {};\n    }\n\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    getScaleValue (domainVal) {\n        return this._angleValues[domainVal];\n    }\n\n    padAngle (angle) {\n        this._angleFn = this._angleFn.padAngle(angle);\n    }\n\n    domain (...domainVal) {\n        if (domainVal.length) {\n            const { domain: customDomain } = this.config();\n            const domain = domainVal[0].length ? domainVal[0] : DEFAULT_ANGLE_DOMAIN;\n            this._domain = resolveAxisConfig(customDomain, domain, this);\n            createAngleValues(this);\n            return this;\n        }\n        return this._domain;\n    }\n\n    range (...range) {\n        if (range.length) {\n            const { range: customRange } = this.config();\n            this._range = resolveAxisConfig(customRange, range[0], this);\n            const domain = this.domain();\n            const [startAngle, endAngle] = this._range;\n            this._angleFn\n                    .startAngle((startAngle / 180) * Math.PI)\n                    .endAngle(Math.PI * endAngle / 180);\n            if (domain && domain.length) {\n                createAngleValues(this);\n            }\n            return this;\n        }\n        return this._range;\n    }\n}\n","/**\n * This file exports constants that are used as enums in the\n *  crosstab group implementation.\n */\n/**\n * Width of the crosstab.\n */\nexport const X = 'x';\n/**\n * Width of the crosstab.\n */\nexport const Y = 'y';\n/**\n * Width of the crosstab.\n */\nexport const WIDTH = 'width';\n\n/**\n * Height of the crosstab.\n */\nexport const HEIGHT = 'height';\n\n/**\n * Field referring to object storing measurement configuration.\n */\nexport const MEASUREMENT = 'measurement';\n\n/**\n * Field referring to object storing configuration properties.\n */\nexport const CONFIG = 'config';\n\n/**\n * Width of visual unit in crosstab.\n */\nexport const MIN_UNIT_WIDTH = 'minUnitWidth';\n\n/**\n * Height of visual unit.\n */\nexport const MIN_UNIT_HEIGHT = 'minUnitHeight';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSIONS = 'dimensions';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURES = 'measures';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSION = 'dimension';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURE = 'measure';\n\n/**\n * Flag to specify if model should be pivoted.\n */\nexport const PIVOT = 'pivot';\n\n/**\n * Flag to specify format\n */\nexport const FORMAT = 'format';\n\n/**\n * Mount point where the variable will be hosted\n */\nexport const MOUNT = 'mount';\n\n/**\n * Data update flag\n */\nexport const HAS_DATA_UPDATED = 'hasDataUpdated';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROWS = 'rows';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMNS = 'columns';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COL = 'col';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROW = 'row';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMN = 'column';\n\n/**\n * Field referring to object storing color field\n */\nexport const COLOR = 'color';\n\n/**\n * Field referring to object storing shape field\n */\nexport const SHAPE = 'shape';\n\n/**\n * Field referring to object storing size field\n */\nexport const SIZE = 'size';\n\n/**\n * Field referring to object storing detail field\n */\nexport const DETAIL = 'detail';\n\n/**\n * Field referring to object storing set of layers\n */\nexport const LAYERS = 'layers';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const TRANSFORM = 'transform';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const ORDINAL = 'ordinal';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const LINEAR = 'linear';\n/**\n * Field referring to object storing the transforms\n */\nexport const LEFT = 'left';\n/**\n * Field referring to object storing the transforms\n */\nexport const RIGHT = 'right';\n/**\n * Field referring to object storing the transforms\n */\nexport const TOP = 'top';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTTOM = 'bottom';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const RETINAL = 'retinal';\n/**\n * Field referring to object storing the transforms\n */\nexport const CELL = 'cell';\n/**\n * Field referring to object storing the transforms\n */\nexport const X_AXES = 'xAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const Y_AXES = 'yAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const ENTRY_CELLS = 'entryCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const INITIALIZED = 'initialized';\n/**\n * Field referring to object storing the transforms\n */\nexport const EXIT_CELLS = 'exitCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const AXIS = 'axis';\n/**\n * Field referring to object storing the transforms\n */\nexport const UNIT = 'unit';\n/**\n * Field referring to object storing the transforms\n */\nexport const UPDATED = 'updated';\n/**\n * Field referring to object storing the transforms\n */\nexport const BEFORE_UPDATE = 'beforeupdate';\n/**\n * Field referring to object storing the transforms\n */\nexport const VALUE_MATRIX = 'valueMatrix';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET_HEADERS = 'facet-headers';\n/**\n * Field referring to object storing the transforms\n */\nexport const RADIUS = 'radius';\n/**\n * Field referring to object storing the transforms\n */\nexport const ANGLE = 'angle';\n\nexport const ANGLE0 = 'angle0';\n/**\n * Field referring to object storing the transforms\n */\nexport const ARC = 'arc';\n/**\n * Field referring to object storing the transforms\n */\nexport const CATEGORICAL = 'categorical';\n/**\n * Field referring to object storing the transforms\n */\nexport const TEMPORAL = 'temporal';\n/**\n * Field referring to object storing the transforms\n */\nexport const BAR = 'bar';\n/**\n * Field referring to object storing the transforms\n */\nexport const LINE = 'line';\n/**\n * Field referring to object storing the transforms\n */\nexport const POINT = 'point';\n/**\n * Field referring to object storing the transforms\n */\nexport const PRIMARY = 'Primary';\n/**\n * Field referring to object storing the transforms\n */\nexport const SECONDARY = 'Secondary';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTH = 'both';\n/**\n * Field referring to object storing the transforms\n */\nexport const INTERACTION = 'interaction';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_LINES = 'gridLines';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_BANDS = 'gridBands';\n/**\n * Field referring to object storing the transforms\n */\nexport const HEADER = 'header';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET = 'facet';\n/**\n * Ordering type\n */\nexport const ASCENDING = 'asc';\n/**\n * Ordering type\n */\nexport const DESCENDING = 'desc';\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, mergeRecursive, generateGetterSetters, sanitizeDomainWhenEqual } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { LINEAR } from '../../../visual-group/src/enums/constants';\nimport { PROPS } from './props';\nimport { resolveAxisConfig } from '../helper';\n\nconst adjustDomain = (context) => {\n    const minOuterRadius = context.config().minOuterRadius;\n    const domain = context._domain;\n    if (context._range.length) {\n        const scale = context._scale;\n        const value = scale.invert(minOuterRadius) - scale.invert(0);\n        context._domain = [domain[0] - value, domain[1]];\n        scale.domain(context._domain);\n    }\n};\n\n/**\n* This class is used to instantiate a RadiusAxis.\n* @class RadiusAxis\n*/\nexport default class RadiusAxis {\n\n    /**\n     * Creates an instance of RadiusAxis.\n     * @param {Object} config input parameters.\n     * @memberof RadiusAxis\n     */\n    constructor (config = {}) {\n        this._id = getUniqueId();\n        generateGetterSetters(this, PROPS);\n        this._range = [];\n        this._radiusFactor = 1;\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n        this.config(config);\n        this._scale = this.createScale({\n            scale: LINEAR\n        });\n    }\n\n    static defaultConfig () {\n        return {\n            padding: [0, 1],\n            minOuterRadius: 10\n        };\n    }\n\n    config (...params) {\n        if (params.length) {\n            const config = mergeRecursive(this.config(), params[0]);\n            this._config = config;\n            return this;\n        }\n        return this._config;\n    }\n\n    createScale (strategy) {\n        return createScale({\n            type: strategy.scale,\n            range: this.range()\n        });\n    }\n\n    domain (...domainVal) {\n        if (domainVal.length) {\n            const { domain: customDomain } = this.config();\n            let domain = resolveAxisConfig(customDomain, domainVal[0], this);\n            domain = sanitizeDomainWhenEqual(domain);\n            this._scale.domain(domain);\n            this._domain = domain;\n            adjustDomain(this);\n        }\n        return this._domain;\n    }\n\n    getInnerRadius (domainVal) {\n        if (domainVal === undefined) {\n            return this.range()[0];\n        }\n        return this._scale(domainVal);\n    }\n\n    getOuterRadius (domainVal) {\n        if (domainVal === undefined) {\n            return this.range()[1];\n        }\n        const radius = this._scale(domainVal) * this._radiusFactor;\n        return radius;\n    }\n\n    range (...range) {\n        if (range.length) {\n            const { padding, range: customRange } = this.config();\n            const sanitizedRange = range[0].map((v, i) => v + (i ? -padding[i] : padding[i]));\n            const rangeVal = resolveAxisConfig(customRange, sanitizedRange, this);\n            this._range = rangeVal;\n            this._scale.range(rangeVal);\n            adjustDomain(this);\n        }\n        return this._range;\n    }\n\n    setRadiusFactor (val) {\n        this._radiusFactor = val;\n        return this;\n    }\n}\n","import * as ScaleType from './enums/scale-type';\n\nconst DATA_TYPES = {\n    DIMENSION: 'dimension',\n    CATEGORICAL: 'categorical',\n    MEASURE: 'measure',\n    TEMPORAL: 'temporal'\n};\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    [DATA_TYPES.DIMENSION]: ScaleType.BAND,\n    [DATA_TYPES.MEASURE]: ScaleType.LINEAR,\n    [DATA_TYPES.TEMPORAL]: ScaleType.TIME\n};\n\n","import { nestCollection, InvalidAwareTypes } from 'muze-utils';\n\n/**\n * Create multiple datasets from a single dataset by grouping the data using\n * a dimensional field.\n * @param {Array} schema Name and type of fields are stored in schema\n * @param {Array} data Data array\n * @param {Object} config Configuration object\n * @return {Array} Grouped data array\n */\nexport default (schema, data, config) => {\n    const groupBy = config.groupBy instanceof Array ? config.groupBy : [config.groupBy];\n    const groupByIndices = groupBy.map(fieldName => schema.findIndex(d => d.name === fieldName));\n\n    if (groupByIndices.find(d => d === -1) !== undefined) {\n        throw new Error(`Groupby field ${groupBy} not found in schema`);\n    }\n\n    const groupedData = nestCollection({\n        keys: groupByIndices,\n        data\n    });\n\n    groupedData.forEach((d) => {\n        const key = d.key;\n        if (InvalidAwareTypes.isInvalid(key)) {\n            d.key = InvalidAwareTypes.getInvalidType(key);\n        }\n    });\n    return groupedData;\n};\n","/**\n * @module Transform\n * This file exports a function that is used to implement\n * the identity transform\n */\n /* eslint no-unused-vars: 0 */\n /**\n  * This function accepts data and returns the data unchanged.\n  * @param {Object} schema The schema.\n  * @param {Array} data The data array.\n  * @param {Object} config The config object.\n  * @return {Array} The unchanged data.\n  */\n function identityTransform (schema, data, config) {\n     return data;\n }\n\n export default identityTransform;\n","/**\n * @module Transform\n * This file exports the transform factory.\n */\nimport * as TransformType from '../enums/transform-type';\nimport identity from '../identity-transform';\nimport group from '../group-transform';\nimport stack from '../stack-transform';\n\n/* istanbul ignore next */\nconst transformMap = {\n    [TransformType.IDENTITY]: identity,\n    [TransformType.GROUP]: group,\n    [TransformType.STACK]: stack\n};\n\n/**\n * This function is used to retirn a transform associated\n * with the given type.\n *\n * @param {string} type The type of the transform.\n * @return {Function} The transform function.\n */\nfunction transformFactory (type) {\n    const transform = transformMap[type];\n    if (typeof transform !== 'function') {\n        throw new Error('Invalid transform type supplied.');\n    }\n    return transform;\n}\n\nexport default transformFactory;\n","/**\n * @module Transform\n * This module exports constants that are used to reference transforms in\n * a consistent manner throughout the project.\n */\n/* eslint one-var: 0 */\n export const IDENTITY = 'identity';\n export const GROUP = 'group';\n export const STACK = 'stack';\n export const FRACTURE = 'fracture';\n","import { stack } from 'muze-utils';\n\nimport group from '../group-transform';\n/*\n    Normalize the data to a form which can be given to d3 stack for stacking the data\n    ['Product', 'Sales', 'Region'],\n    0 ['A', 2000, 'North'],\n    1 ['A', 3000, 'South'],\n    2 ['B', 3000, 'South'],\n    3 ['B', 2000, 'North'],\n    4 ['C', 3000, 'South'],\n    5 ['C', 2000, 'North']\n            |\n            |\n    ['Product', 'North', 'South'],\n    ['A', 2000, 3000],\n    ['B', 2000, 3000],\n    ['C', 2000, 3000]\n*/\n// eslint-disable-next-line require-jsdoc\nconst normalizeData = (data, schema, valueField, uniqueField, groupBy) => {\n    const groupedData = group(schema, data, {\n        groupBy: uniqueField\n    });\n    const uniqueFieldIndex = schema.findIndex(d => d.name === uniqueField);\n    const valueFieldIndex = schema.findIndex(d => d.name === valueField);\n    const seriesKeyIndex = schema.findIndex(d => d.name === groupBy);\n    const seriesKeys = data.map(d => d[seriesKeyIndex]).filter((item, pos, arr) => arr.indexOf(item) === pos).sort();\n    const fieldNames = schema.reduce((acc, obj, i) => {\n        acc[i] = obj.name;\n        return acc;\n    }, {});\n    const dataArr = groupedData.map((arr) => {\n        const tuples = {};\n        const rowObj = arr.values.reduce((acc, row) => {\n            acc = row.reduce((obj, value, i) => {\n                if (i === seriesKeyIndex) {\n                    obj[value] = row[valueFieldIndex];\n                    tuples[value] = row;\n                } else if (i !== valueFieldIndex) {\n                    obj[fieldNames[i]] = value;\n                }\n                return obj;\n            }, acc);\n            return acc;\n        }, {});\n        rowObj._tuple = tuples;\n            // Set missing values field to zero value\n        seriesKeys.forEach((seriesKey) => {\n            if (rowObj[seriesKey] === undefined) {\n                rowObj[seriesKey] = 0;\n                const newArr = new Array(arr.values[0].length);\n                newArr[uniqueFieldIndex] = arr.key;\n                newArr[seriesKeyIndex] = seriesKey;\n                rowObj._tuple[seriesKey] = newArr;\n            }\n        });\n        return rowObj;\n    });\n\n    return {\n        data: dataArr,\n        keys: seriesKeys\n    };\n};\n/**\n * Generate a stacked representation of data\n * @param {Array} schema schema Array\n * @param {Array} data data array\n * @param {Object} config Configuration object\n * @return {Array} stacked data\n */\nexport default (schema, data, config) => {\n    const uniqueField = config.uniqueField;\n    const valueField = config.value;\n    const groupBy = config.groupBy;\n    const sort = config.sort || 'descending';\n    const normalizedData = normalizeData(data, schema, valueField, uniqueField, groupBy);\n    const keys = normalizedData.keys;\n    const map = {};\n    const orderBy = config.orderBy;\n    const orderIndex = schema.findIndex(d => d.name === orderBy);\n    const groupByIndex = schema.findIndex(d => d.name === groupBy);\n    if (orderIndex !== -1) {\n        keys.forEach((key) => {\n            const name = data.find(d => d[groupByIndex] === key);\n            map[key] = name[orderIndex];\n        });\n        normalizedData.keys.sort((a, b) => map[a].localeCompare(map[b]));\n    }\n\n    const stackData = stack({\n        keys: normalizedData.keys,\n        offset: config.offset || 'diverging',\n        order: sort,\n        data: normalizedData.data\n    });\n    stackData.forEach((seriesData) => {\n        seriesData.forEach((dataObj) => {\n            dataObj.data = dataObj.data._tuple[seriesData.key];\n        });\n    });\n    return stackData;\n};\n\n","import {\n    FieldType,\n    getDomainFromData,\n    setStyles,\n    easeFns,\n    selectElement,\n    DimensionSubtype,\n    retrieveNearestGroupByReducers,\n    getObjProp,\n    COORD_TYPES,\n    CommonProps,\n    defaultValue\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { transformFactory } from '@chartshq/transform';\nimport { IDENTITY, STACK, GROUP, COLOR, SHAPE, SIZE, ENCODING, AGG_FN_SUM, ASCENDING, TEXT } from '../enums/constants';\n\nconst BAND = ScaleType.BAND;\nconst { POLAR, CARTESIAN } = COORD_TYPES;\n\nconst transformColor = (colorAxis, datum, styleType, intensity) => {\n    const meta = datum.meta;\n    const stateColor = defaultValue(meta.stateColor[styleType], meta.originalColor[styleType]);\n    const colorInfo = colorAxis.transformColor(stateColor, intensity);\n\n    meta.stateColor[styleType] = colorInfo.hsla;\n    return colorInfo;\n};\n\nexport const applyInteractionStyle = (context, selectionSet, interactionStyles, config) => {\n    const elements = context.getPlotElementsFromSet(selectionSet);\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const apply = config.apply;\n    const interactionType = config.interactionType;\n    interactionStyles.forEach((style) => {\n        const styleType = style.type;\n        elements.forEach((elem) => {\n            elem.style(styleType, ((d) => {\n                const { colorTransform, stateColor, originalColor } = d.meta;\n                colorTransform[interactionType] = colorTransform[interactionType] || {};\n                if (apply && !colorTransform[interactionType][styleType]) {\n                    // fade selections\n                    colorTransform[interactionType][styleType] = style.intensity;\n                    const color = transformColor(colorAxis, d, styleType, style.intensity).color;\n                    return color;\n                }\n                if (!apply && colorTransform[interactionType][styleType]) {\n                     // unfade selections\n                    colorTransform[interactionType][styleType] = null;\n                    return transformColor(colorAxis, d, styleType, style.intensity.map(e => -e)).color;\n                }\n                const [h, s, l, a] = stateColor[styleType] ? stateColor[styleType] : originalColor[styleType];\n                return `hsla(${h * 360},${s * 100}%,${l * 100}%, ${a})`;\n            }));\n        });\n    });\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const fadeUnfadeSelection = (context, selectionSet, hasFaded, interaction) => {\n    const interactionConfig = { interaction, apply: hasFaded };\n    applyInteractionStyle(context, selectionSet, 'fade', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const focusUnfocusSelection = (context, selectionSet, isFocussed, interaction) => {\n    const interactionConfig = { interaction, apply: isFocussed };\n    applyInteractionStyle(context, selectionSet, 'focus', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} axes\n *\n */\nexport const getAxesScales = (axes) => {\n    const [xAxis, yAxis] = [ENCODING.X, ENCODING.Y].map(e => axes[e]);\n    const [xScale, yScale] = [xAxis, yAxis].map(e => e && e.scale());\n    return {\n        xAxis,\n        yAxis,\n        xScale,\n        yScale\n    };\n};\n\nexport const encodingFieldInfRetriever = {\n    [POLAR]: (encoding, fieldsConfig) => {\n        const encodingInf = {};\n        [ENCODING.RADIUS, ENCODING.RADIUS0, ENCODING.ANGLE, ENCODING.ANGLE0, COLOR, SHAPE, SIZE, TEXT]\n            .forEach((e) => {\n                const field = getObjProp(encoding, e, 'field');\n                encodingInf[`${e}Field`] = field;\n                encodingInf[`${e}FieldIndex`] = getObjProp(fieldsConfig, field, 'index');\n            });\n        return encodingInf;\n    },\n    [CARTESIAN]: (encoding, fieldsConfig) => {\n        const encodingInf = {};\n        [ENCODING.X, ENCODING.Y, ENCODING.X0, ENCODING.Y0, COLOR, SHAPE, SIZE, TEXT].forEach((e) => {\n            const field = getObjProp(encoding, e, 'field');\n            encodingInf[`${e}Field`] = field;\n            encodingInf[`${e}FieldIndex`] = getObjProp(fieldsConfig, field, 'index');\n            encodingInf[`${e}FieldType`] = getObjProp(fieldsConfig, field, 'def', 'type');\n            encodingInf[`${e}FieldSubType`] = getObjProp(fieldsConfig, field, 'def', 'subtype');\n        });\n\n        return encodingInf;\n    }\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} config\n * @param {*} transformType\n *\n */\nexport const transformData = (dataModel, config, transformType, encodingFieldInf) => {\n    const data = dataModel.getData({ withUid: true });\n    const schema = data.schema;\n    const transform = config.transform;\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = encodingFieldInf;\n    const uniqueField = xFieldType === FieldType.MEASURE ? yField : xField;\n\n    return transformFactory(transformType)(schema, data.data, {\n        groupBy: transform.groupBy,\n        uniqueField,\n        sort: transform.sort || 'none',\n        offset: transform.offset,\n        orderBy: transform.orderBy,\n        value: yFieldType === FieldType.MEASURE ? yField : xField\n    }, data.uids);\n};\n\nexport const getIndividualClassName = (d, i, data, context) => {\n    const className = context.config().individualClassName;\n    let classNameStr = '';\n    if (className instanceof Function) {\n        classNameStr = className(d, i, data, context);\n    }\n    return classNameStr;\n};\n\nconst dataNormalizers = {\n    [POLAR]: (transformedData, encodingFieldInf, fieldsConfig) => {\n        const {\n            radiusFieldIndex,\n            angleFieldIndex,\n            radius0FieldIndex,\n            angle0FieldIndex\n        } = encodingFieldInf;\n        const fieldsLen = Object.keys(fieldsConfig).length;\n\n        /**\n         * Returns normalized data from transformed data. It recursively traverses through\n         * the transformed data if there it is nested.\n         */\n        return transformedData.map(data => data.map((d) => {\n            const pointObj = {\n                radius: d[radiusFieldIndex],\n                angle: angleFieldIndex !== undefined ? d[angleFieldIndex] : 1,\n                radius0: d[radius0FieldIndex],\n                angle0: d[angle0FieldIndex]\n            };\n            [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                pointObj[enc] = d[encodingFieldInf[`${enc}FieldIndex`]];\n            });\n            pointObj.source = d;\n            pointObj.rowId = d[fieldsLen];\n            return pointObj;\n        })).filter(d => d.length);\n    },\n    [CARTESIAN]: (transformedData, encodingFieldInf, fieldsConfig, transformType) => {\n        const {\n            xFieldType,\n            xFieldIndex,\n            yFieldIndex,\n            x0FieldIndex,\n            y0FieldIndex\n        } = encodingFieldInf;\n        const fieldsLen = Object.keys(fieldsConfig).length;\n        /**\n         * Returns normalized data from transformed data. It recursively traverses through\n         * the transformed data if there it is nested.\n         */\n        return transformedData.map((data) => {\n            const values = transformType === GROUP ? data.values : data;\n            return values.map((d) => {\n                let pointObj = {};\n                let tuple;\n                if (transformType === STACK) {\n                    tuple = d.data || [];\n                    let y;\n                    let y0;\n                    let x;\n                    let x0;\n                    if (d[1] >= d[0]) {\n                        y = x0 = d[1];\n                        x = y0 = d[0];\n                    } else {\n                        y = x0 = d[0];\n                        x = y0 = d[1];\n                    }\n\n                    pointObj = xFieldType === FieldType.MEASURE ? {\n                        x,\n                        x0,\n                        y: tuple[yFieldIndex],\n                        y0: tuple[yFieldIndex]\n                    } : {\n                        x: tuple[xFieldIndex],\n                        x0: tuple[xFieldIndex],\n                        y,\n                        y0\n                    };\n                    pointObj.source = tuple;\n                    pointObj.rowId = tuple[fieldsLen];\n                    [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                        pointObj[enc] = tuple[encodingFieldInf[`${enc}FieldIndex`]];\n                    });\n                } else {\n                    pointObj = {\n                        x: d[xFieldIndex],\n                        y: d[yFieldIndex],\n                        x0: d[x0FieldIndex],\n                        y0: d[y0FieldIndex]\n                    };\n                    pointObj.source = d;\n                    pointObj.rowId = d[fieldsLen];\n                    [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                        pointObj[enc] = d[encodingFieldInf[`${enc}FieldIndex`]];\n                    });\n                }\n                return pointObj;\n            });\n        }).filter(d => d.length);\n    }\n};\n/*\n * This method resolves the x, y, x0 and y0 values from the transformed data.\n * It also checks the type of transformed data for example, if it is a stacked data\n * then it fetches the y and y0 values from the stacked data.\n * @param {Array.<Array>} transformedData transformed data\n * @param {Object} fieldsConfig field definitions\n * @param {string} transformType type of transformed data - stack, group or identity.\n * @return {Array.<Object>} Normalized data\n*/\nexport const getNormalizedData = (transformedData, context) => {\n    const transformType = context.transformType();\n    const transformedDataArr = transformType === IDENTITY ? [transformedData] : transformedData;\n    const encodingFieldInf = context.encodingFieldsInf();\n    const fieldsConfig = context.data().getFieldsConfig();\n    return dataNormalizers[context.coord()](transformedDataArr, encodingFieldInf, fieldsConfig, transformType);\n};\n\nexport const domainCalculator = {\n    [POLAR]: (data, layerInst) => {\n        const config = layerInst.config();\n        const { sort } = config;\n        let angleValues = data[0];\n        const radius0Field = getObjProp(config.encoding.radius0, 'field');\n        if (sort) {\n            angleValues = angleValues.sort((a, b) => (sort === ASCENDING ? a.radius - b.radius : b.radius - a.radius));\n        }\n        const radiusDomain = getDomainFromData(data, [ENCODING.RADIUS, radius0Field ?\n            ENCODING.RADIUS0 : ENCODING.RADIUS]);\n        return {\n            radius: radiusDomain,\n            angle: angleValues.map(d => d.angle),\n            angle0: angleValues.map(d => d.angle0)\n        };\n    },\n    [CARTESIAN]: (data, layerInst) => {\n        const transformType = layerInst.transformType();\n        const encodingFieldInf = layerInst.encodingFieldsInf();\n        const {\n            xFieldSubType,\n            yFieldSubType,\n            xField,\n            yField,\n            x0Field,\n            y0Field\n        } = encodingFieldInf;\n        const domains = {};\n        const yEnc = ENCODING.Y;\n        const xEnc = ENCODING.X;\n        if (xField) {\n            domains.x = getDomainFromData(data, x0Field || transformType === STACK ? [xEnc, ENCODING.X0] : [xEnc, xEnc],\n                xFieldSubType);\n        }\n        if (yField) {\n            domains.y = getDomainFromData(data, y0Field || transformType === STACK ? [ENCODING.Y0, ENCODING.Y] :\n                [yEnc, yEnc], yFieldSubType);\n        }\n\n        return domains;\n    }\n};\n\nexport const attachDataToVoronoi = (voronoi, points) => {\n    voronoi.data([].concat(...points).filter(d => d.rowId !== undefined).map((d) => {\n        const point = d.update;\n        return {\n            x: point.x,\n            y: point.y,\n            data: d\n        };\n    }));\n};\n\n/**\n *\n *\n * @param {*} target\n * @param {*} styles\n * @param {*} remove\n */\nexport const updateStyle = (target, styles, remove) => {\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            target.style(key, remove ? null : styles[key]);\n        }\n    }\n};\n\n/**\n *\n *\n * @param {*} mount\n * @param {*} context\n */\nexport const animateGroup = (mount, context) => {\n    let groupTransition;\n    let update;\n    const { transition, groupAnimateStyle } = context;\n    const { duration, effect, disabled } = transition;\n    if (groupAnimateStyle) {\n        setStyles(mount.node(), groupAnimateStyle.enter);\n        update = groupAnimateStyle.update;\n        if (!disabled) {\n            groupTransition = mount.transition()\n                .ease(easeFns[effect])\n                .duration(duration)\n                .on('end', function () {\n                    updateStyle(selectElement(this), update, true);\n                });\n        } else {\n            groupTransition = mount;\n        }\n        updateStyle(groupTransition, update);\n    }\n};\n\nexport const positionPoints = (context, points) => {\n    const positioner = context.encodingTransform();\n    if (positioner) {\n        return positioner(points, context, { smartLabel: context._dependencies.smartLabel });\n    }\n    return points;\n};\n\n/**\n  * Gets the width of each group. It gets the width from axis if it is available for\n  * example when the scale is nominal else it calculates the width from the\n  * range of the axis and number of data points.\n  *\n  * @param {SimpleAxis} axis instance of axis\n  * @param {number} minDiff Minimum difference between data points\n  * @return {number} width of each bar\n  * @private\n*/\nexport const getGroupSpan = (axis, minDiff) => {\n    let groupSpan;\n    const width = axis.getUnitWidth();\n    const scale = axis.scale();\n    const range = scale.range();\n    const domain = scale.domain();\n    !width ? groupSpan = (Math.abs(range[1] - range[0]) / Math.abs(domain[1] - domain[0])) * minDiff :\n        (groupSpan = width);\n\n    return groupSpan;\n};\n\nexport const getPlotMeasurement = (context, dimensionalValues) => {\n    const fieldInfo = context.encodingFieldsInf();\n    const axes = context.axes();\n    const transformType = context.transformType();\n    const config = context.config();\n    const bandScale = context._bandScale;\n\n    return ['x', 'y'].map((type) => {\n        let span = 0;\n        let groupSpan = 0;\n        let padding = 0;\n        let offsetValues = [];\n        if (fieldInfo[`${type}FieldType`] === FieldType.DIMENSION) {\n            let actualGroupWidth;\n            const isTemporal = fieldInfo[`${type}FieldSubType`] === DimensionSubtype.TEMPORAL;\n            const timeDiff = isTemporal ? context.dataProps().timeDiffs[type] : 0;\n            const axis = axes[type];\n            const pad = config[`pad${type.toUpperCase()}`];\n            const innerPadding = config.innerPadding;\n            const keys = dimensionalValues;\n            const scale = axis.scale();\n            groupSpan = getGroupSpan(axis, timeDiff);\n            const isAxisBandScale = axis.constructor.type() === BAND;\n            const axisPadding = axis.config().padding;\n            // If it is a grouped bar then the width of each bar in a grouping is retrieved from\n            // a band scale. The band scale will have range equal to width of one group of bars and\n            // the domain is set to series keys.\n            if (transformType === 'group') {\n                const groupPadding = isAxisBandScale ? 0 : axisPadding * groupSpan / 2;\n                bandScale.range([groupPadding, groupSpan - groupPadding]).domain(keys).paddingInner(innerPadding);\n                span = bandScale.bandwidth();\n                actualGroupWidth = groupSpan - (isAxisBandScale ? 0 : axisPadding * groupSpan);\n                offsetValues = keys.map(key => bandScale(key) - (isAxisBandScale ? 0 : (groupSpan / 2)));\n            } else if (pad !== undefined) {\n                let offset;\n                if (isAxisBandScale) {\n                    const step = scale.step();\n                    offset = scale.padding() * step;\n                    span = scale.bandwidth() + offset;\n                } else {\n                    span = groupSpan;\n                }\n                offsetValues = keys.map(() => (isAxisBandScale ? -(offset / 2) : -(span / 2)));\n            } else {\n                padding = isAxisBandScale ? 0 : axisPadding * groupSpan;\n                span = groupSpan - padding;\n                actualGroupWidth = span;\n                offsetValues = keys.map(() => (isAxisBandScale ? 0 : -(span / 2)));\n            }\n\n            groupSpan = actualGroupWidth;\n            padding = isAxisBandScale ? axisPadding * axis.scale().step() : axisPadding * groupSpan;\n        }\n\n        return {\n            span,\n            offsetValues,\n            groupSpan,\n            padding\n        };\n    });\n};\n\nexport const renderLayer = (context) => {\n    const mount = context.mount();\n    if (mount) {\n        context.render(mount);\n        context.dependencies().throwback.commit(CommonProps.ON_LAYER_DRAW, true, context.metaInf().parentNamespace);\n    }\n};\n\nconst transformResolverPredicates = (encodingFieldInf, context, groupByField) => {\n    const fieldsConfig = context.data().getFieldsConfig();\n    const { xField, yField, xFieldType, yFieldType } = encodingFieldInf;\n    const dimensionField = ['xField', 'yField'].find(type =>\n        encodingFieldInf[`${type}Type`] === FieldType.DIMENSION);\n\n    return [\n        !xField,\n        !yField,\n        !groupByField,\n        getObjProp(fieldsConfig[groupByField], 'def', 'type') === FieldType.MEASURE,\n        xFieldType === FieldType.DIMENSION && yFieldType === FieldType.DIMENSION,\n        dimensionField && encodingFieldInf[dimensionField] === groupByField\n    ];\n};\n\nexport const resolveInvalidTransformType = (context) => {\n    const encodingFieldInf = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n\n    if (transformResolverPredicates(encodingFieldInf, context, groupByField).some(value => value)) {\n        return IDENTITY;\n    }\n    return null;\n};\n\nexport const getValidTransform = context => resolveInvalidTransformType(context) || context.config().transform.type;\n\nexport const getValidTransformForAggFn = (context) => {\n    const resolvedInvalidTransformType = resolveInvalidTransformType(context);\n    if (resolvedInvalidTransformType) {\n        return resolvedInvalidTransformType;\n    }\n\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n    const isCustomTransformTypeProvided = !!getObjProp(context._customConfig, 'transform', 'type');\n    let transformType = context.config().transform.type;\n\n    if (!isCustomTransformTypeProvided && groupByField && xFieldType !== yFieldType) {\n        const measureField = xFieldType === FieldType.MEASURE ? xField : yField;\n        const { [measureField]: aggFn } = retrieveNearestGroupByReducers(context.data(), measureField);\n        transformType = aggFn === AGG_FN_SUM ? STACK : GROUP;\n    }\n\n    return transformType;\n};\n\nexport const getMarkId = (source, schema) => source.filter((val, i) => schema[i] &&\n    schema[i].type === FieldType.DIMENSION).join();\n\nexport const resolveEncodingValues = (data, i, dataArr, layerInst) => {\n    const transformedValues = {};\n    const values = data.values;\n    const encoding = layerInst.config().encoding;\n    for (const key in values) {\n        const value = getObjProp(encoding[key], 'value');\n        if (value instanceof Function) {\n            transformedValues[key] = value(values, i, dataArr, layerInst);\n        } else {\n            transformedValues[key] = values[key];\n        }\n    }\n    return transformedValues;\n};\n\nexport const getColorMetaInf = (colorInf, colorAxis) => ({\n    originalColor: Object.keys(colorInf).reduce((acc, key) => {\n        if (colorInf[key]) {\n            acc[key] = colorAxis.getHslArray(colorInf[key]);\n        }\n        return acc;\n    }, {}),\n    stateColor: {},\n    colorTransform: {}\n});\n\nconst getCoordValue = (radius, trig, angle, offset) => radius * Math[trig](angle) + offset;\n\nconst coordValueGetter = (radius, angle, xOffset, yOffset) => ({\n    x: getCoordValue(radius, 'cos', angle, xOffset),\n    y: getCoordValue(radius, 'sin', angle, yOffset)\n});\n\nexport const toCartesianCoordinates = (points, measurement, rangePlot = false) => {\n    const xOffset = measurement.width / 2;\n    const yOffset = measurement.height / 2;\n    for (let i = 0, len = points.length; i < len; i++) {\n        const point = points[i];\n        const { angle, radius, radius0, angle0 } = point.update;\n        point.update = coordValueGetter(radius, angle, xOffset, yOffset);\n        if (rangePlot) {\n            const update = point.update = coordValueGetter(radius0, angle0, xOffset, yOffset);\n            const { x: x0, y: y0 } = coordValueGetter(radius, angle, xOffset, yOffset);\n            update.x0 = x0;\n            update.y0 = y0;\n        }\n    }\n    return points;\n};\n\nexport const sortData = (data, axes) => {\n    const { x: xAxis, y: yAxis } = axes;\n    const axisArr = [xAxis, yAxis];\n    for (let i = 0, len = axisArr.length; i < len; i++) {\n        const axis = axisArr[i];\n        if (axis.constructor.type() === BAND) {\n            const key = i ? 'y' : 'x';\n            const dom = axis.domain();\n            const indices = dom.reduce((acc, v, idx) => {\n                acc[v] = idx;\n                return acc;\n            }, {});\n            data.sort((a, b) => indices[a[key]] - indices[b[key]]);\n            break;\n        }\n    }\n    return data;\n};\n","import * as PROPS from '../enums/props';\n\nexport const localOptions = {\n    [PROPS.DATA]: {\n        value: null\n    }\n};\n","import { STATE_NAMESPACES } from 'muze-utils';\nimport * as PROPS from '../enums/props';\nimport { encodingFieldInfRetriever } from '../helpers';\n\nexport const listenerMap = [\n    {\n        props: [`${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${PROPS.DATA}`],\n        type: 'registerImmediateListener',\n        listener: (context, [, data]) => {\n            const config = context.config();\n            if (data && config) {\n                if (context._cacheEnabled) {\n                    context._cachedData.push(data);\n                } else {\n                    context._cachedData = [data];\n                }\n                const encodingValue = config.encoding;\n                if (encodingValue) {\n                    const fieldsConfig = data.getFieldsConfig();\n                    const encodingFieldsInf = encodingFieldInfRetriever[context.coord()](encodingValue, fieldsConfig);\n                    context.encodingFieldsInf(encodingFieldsInf);\n                    context.resolveTransformType();\n                    context._transformedData = context.getTransformedData(data, config,\n                        context.transformType(), encodingFieldsInf);\n                    context._normalizedData = context.getNormalizedData(context._transformedData, fieldsConfig);\n                    if (config.calculateDomain !== false) {\n                        const domain = context.calculateDomainFromData(context._normalizedData,\n                            context.encodingFieldsInf(), context.data().getFieldsConfig());\n                        context.domain(domain);\n                    }\n                }\n            }\n        },\n        namespace: context => context.metaInf().namespace\n    }\n];\n","import {\n    getUniqueId,\n    mergeRecursive,\n    FieldType,\n    selectElement,\n    ReservedFields,\n    DataModel,\n    clone,\n    generateGetterSetters,\n    STATE_NAMESPACES,\n    COORD_TYPES,\n    transactor,\n    defaultValue,\n    getObjProp\n} from 'muze-utils';\nimport { SimpleLayer } from '../simple-layer';\nimport * as PROPS from '../enums/props';\nimport { props } from './props';\nimport {\n    transformData,\n    getNormalizedData,\n    applyInteractionStyle,\n    getValidTransform,\n    domainCalculator,\n    renderLayer\n} from '../helpers';\nimport { localOptions } from './local-options';\nimport { listenerMap } from './listener-map';\n\nconst layerNs = [STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE, STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE];\nconst groupNs = STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE;\n\n/**\n * An abstract class which gives definition of common layer functionality like\n * - transforming data for various modes. Supported modes: identity, group and stack.\n * - calculating data domain\n * - linking dependent layers\n * - merging policy of configuration\n * - interaction sideffect helpers\n * - retrieving dom elements from data using id\n * - retrieving the physical dimensions of marks\n * - disposing layer\n *\n * Every layer has to extend base layer and give concrete definition.\n * This layer does not have any default visual. A new layer has to define the logic of `render` for rendering the\n * visuals\n *\n * @public\n * @class\n * @module BaseLayer\n */\nexport default class BaseLayer extends SimpleLayer {\n\n    /**\n     * Creates a layer using a configuration and data.\n     *\n     * @public\n     * @constructor\n     * @param {DataModel} data Instance of DataModel to be used. This DataModel instance serves as the data for a layer.\n     * @param {Object} axes Axes instances to be used for rendering the layer. Axes are used for mapping data from\n     *      value to px.\n     * @param {SimpleAxis} axes.x X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {SimpleAxis} axes.y X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {ColorAxis} axes.color Axis for coloring a layer using color interpolators\n     * @param {ShapeAxis} axes.shape Axis for providing a shape\n     * @param {SizeAxis} axes.size Axis for determining size of a mark using size interpolator\n     * @param {LayerConfig} config Configuration of the layer\n     * @param {Object} dependencies Dependencies of the layer\n     * @param {SmartLabel} dependencies.smartLabel Smartlabel singleton instance\n     */\n    constructor (data, axes, config, dependencies = {}) {\n        super();\n\n        generateGetterSetters(this, props);\n        this.axes(axes);\n        this.alias(this.constructor.formalName() + getUniqueId());\n        this.dependencies(dependencies);\n        this._points = [];\n        this._cachedData = [];\n        this._id = getUniqueId();\n        this._measurement = {};\n        this._animationDonePromises = [];\n        this._graphicElems = {};\n        this._customConfig = null;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: null\n            },\n            Object.keys(localOptions).reduce((acc, v) => {\n                acc[v] = localOptions[v].value;\n                return acc;\n            }, {})\n        ];\n    }\n\n    static getListeners () {\n        return {\n            store: [...listenerMap, {\n                type: 'registerChangeListener',\n                props: [`${layerNs[1]}.${PROPS.DATA}`,\n                    ...['x', 'y', 'radius'].map(type => `${groupNs}.domain.${type}`)],\n                listener: (context) => {\n                    renderLayer(context);\n                },\n                subNamespace: (context) => {\n                    const { unitRowIndex, unitColIndex, namespace } = context.metaInf();\n                    return {\n                        [`${layerNs[1]}.${PROPS.DATA}`]: namespace,\n                        [`${groupNs}.domain.x`]: `${unitColIndex}0`,\n                        [`${groupNs}.domain.y`]: `${unitRowIndex}0`,\n                        [`${groupNs}.domain.radius`]: `${unitRowIndex}-${unitColIndex}`\n                    };\n                }\n            }],\n            throwback: []\n        };\n    }\n\n    static getQualifiedStateProps () {\n        const layerState = BaseLayer.getState();\n        return layerState.map((state, i) => Object.keys(state).map(prop => `${layerNs[i]}.${prop}`));\n    }\n\n    store (...params) {\n        if (params.length) {\n            const store = this._store = params[0];\n            const { namespace } = this.metaInf();\n            store.addSubNamespace(namespace, BaseLayer.formalName(), this);\n\n            transactor(this, localOptions, store, {\n                subNamespace: namespace,\n                namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}`\n            });\n            return this;\n        }\n        return this._store;\n    }\n\n    domain (...dom) {\n        const prop = `${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}`;\n        const store = this.store();\n        if (dom.length) {\n            const { parentNamespace, namespace } = this.metaInf();\n            const domain = defaultValue(store.get(prop, parentNamespace), {});\n            domain[namespace] = dom[0];\n            this.store().commit(prop, domain, parentNamespace);\n            return this;\n        }\n        return this.store().get(prop, this.metaInf().namespace);\n    }\n\n    /**\n     * Creates a layer instance\n     * @return {BaseLayer} Instance of a layer\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Default configuration of the layer. This configuration gets merged to the user passed configuration using a\n     * plolicy. Base layer only returns part of configuraion, any layer overridding base layer should return its own\n     * configuration.\n     *\n     * @public\n     * @static\n     *\n     * @return {Object} Default configuration\n     */\n    static defaultConfig () {\n        return {\n            transform: {\n                type: 'identity'\n            }\n        };\n    }\n\n    /**\n     * Policy defines how user config gets merged to default config. The default policy here does a deep copy\n     * operation.\n     * Any policy which does more than deep copying should define the policy as a static member.\n     *\n     * @static\n     * @public\n     *\n     * @param {LayerConfig} conf Configuration with which the user config will be merged\n     * @param {LayerConfig} userConf Configuration given by the user\n     *\n     * @return {LayerConfig} Merged layer configuration\n     */\n    static defaultPolicy (conf, userConf) {\n        return mergeRecursive(conf, userConf);\n    }\n\n    /**\n     * Determines a name for a layer. This name of the layer is used in the input data to refer to this layer.\n     * ```\n     *  .layers([\n     *      mark: 'bar',\n     *      encoding: { ... }\n     *  ])\n     * ```\n     *\n     * @static\n     * @public\n     *\n     * @return {string} name of layer\n     */\n    static formalName () {\n        return 'base';\n    }\n\n    encodingFieldsInf (...fieldsInf) {\n        if (fieldsInf.length) {\n            this._encodingFieldsInf = fieldsInf[0];\n            return this;\n        }\n        return this._encodingFieldsInf;\n    }\n\n    encodingTransform (...encodingTransform) {\n        if (encodingTransform.length) {\n            this._encodingTransform = encodingTransform[0];\n            return this;\n        }\n        return this._encodingTransform;\n    }\n\n    /**\n     * Provides a alias for a layer. Like it's possible to have same layer (like bar) multiple times, but among multiple\n     * layers of same type if one layer has to be referred, alias is used. If no alias is given then `formalName` is set\n     * as the alias name.\n     *\n     *\n     * If used as setter\n     * @param  {string} alias Name of the alias\n     * @return {BaseLayer} Instance of current base layer\n     *\n     * If used as getter\n     * @return {string} Alias of the current layer\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            this._alias = params[0];\n            return this;\n        }\n        return this._alias || this.constructor.formalName();\n    }\n\n    dependencies (...params) {\n        if (params.length) {\n            this._dependencies = params[0];\n            return this;\n        }\n        return this._dependencies;\n    }\n\n    enableCaching () {\n        this._cacheEnabled = true;\n        return this;\n    }\n\n    clearCaching () {\n        this._cacheEnabled = false;\n        return this.data(this._cachedData[0]);\n    }\n\n    /**\n     * Serialize the schema. Merge config is used for serialization.\n     *\n     * @public\n     *\n     * @return {LayerConfig} Serialized schema\n     */\n    serialize () {\n        return this.config();\n    }\n\n    /**\n     * Returns the unique identifier of this layer. Id is auto generated during the creation proceess of a schema.\n     *\n     * @public\n     *\n     * @return {string} id of the layer\n     */\n    id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the transformed data based on given transform type.\n     * It first gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of DataModel\n     * @param {Object} config Configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     */\n    getTransformedData (dataModel, config, transformType, encodingFieldsInf) {\n        return transformData(dataModel, config, transformType, encodingFieldsInf);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a categorical field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @param {Object} fieldsConfig Configuration of fields\n     * @return {Array} Domain values array.\n     */\n    calculateDomainFromData (data) {\n        let domains = {};\n        const isEmpty = this.data().isEmpty();\n\n        if (!isEmpty) {\n            domains = domainCalculator[this.coord()](data, this);\n        }\n        return domains;\n    }\n\n    static shouldDrawAnchors () {\n        return false;\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getDataDomain (encodingType) {\n        const { parentNamespace, namespace } = this.metaInf();\n        const domains = getObjProp(this.store()\n            .get(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}`, parentNamespace), namespace);\n        return encodingType !== undefined ? domains[encodingType] || [] : domains;\n    }\n\n    /**\n     * Normalizes the transformed data and returns it.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getNormalizedData (transformedData) {\n        return getNormalizedData(transformedData, this);\n    }\n\n    /**\n     * Gets the nearest point closest to the given x and y coordinate. If no nearest point is found, then it returns\n     * null.\n     *\n     * @public\n     *\n     * @param {number} x X Coordinate.\n     * @param {number} y Y Coordinate.\n     *\n     * @return {Object} Information of the nearest point.\n     * ```\n     *      {\n     *          // id property contains the field names and their corresponding values in a 2d array. This is the data\n     *          // associated with the nearest point.\n     *          id: // Example data: [['Origin'], ['USA']],\n     *          dimensions: // Physical dimensions of the point.\n     *          layerId: // Id of the layer instance.\n     *      }\n     * ```\n     */\n    getNearestPoint () {\n        return null;\n    }\n\n    applyInteractionStyle (interactionType, selectionSet, apply, styles) {\n        const interactionConfig = this.config().interaction || {};\n\n        let interactionStyles = interactionConfig[interactionType];\n        interactionStyles = styles || interactionStyles;\n        if (interactionStyles) {\n            applyInteractionStyle(this, selectionSet, interactionStyles, {\n                apply,\n                interactionType\n            });\n        }\n    }\n\n    disableUpdate () {\n        this._updateLock = true;\n        return this;\n    }\n\n    enableUpdate () {\n        this._updateLock = false;\n        return this;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransform(this);\n    }\n\n    transformType () {\n        return this._transformType;\n    }\n\n    /**\n     * Renders the layer\n     * @return {BaseLayer} Instance of the layer.\n     */\n    render () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BaseLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Disposes the entire layer.\n     *\n     * @return {BaseLayer} Instance of layer.\n     */\n    remove () {\n        const { namespace, parentNamespace } = this.metaInf();\n        const store = this.store();\n        store.removeSubNamespace(namespace, BaseLayer.formalName());\n        const layersDomain = store.get(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.domain`);\n        const unitDom = layersDomain[parentNamespace];\n        unitDom && (delete unitDom[namespace]);\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     * Stores point in an object with key as the categorical value or temporal value\n     *\n     * @param {string} key categorical value or temporal value\n     * @param {Object} data Information of the data point\n     * @return {BarLayer} Instance of bar layer\n     */\n    cachePoint (key, data) {\n        if (key === null) {\n            return this;\n        }\n        const pointMap = this._pointMap;\n        !pointMap[key] && (pointMap[key] = []);\n        pointMap[key].push(data);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} dataProps\n     *\n     * @memberof BaseLayer\n     */\n    dataProps (...dataProps) {\n        if (dataProps.length) {\n            this._dataProps = dataProps[0];\n            return this;\n        }\n        return this._dataProps;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} id\n     *\n     * @memberof BaseLayer\n     */\n    getIdentifiersFromData (data) {\n        const schema = this.data().getSchema();\n        const fieldsConfig = this.data().getFieldsConfig();\n        const identifiers = [[], []];\n        const {\n                xFieldType,\n                yFieldType,\n                xField,\n                yField\n            } = this.encodingFieldsInf();\n\n        const [xMeasure, yMeasure] = [xFieldType, yFieldType].map(type => type === FieldType.MEASURE);\n        schema.forEach((d, i) => {\n            const name = d.name;\n            if (fieldsConfig[name].def.type === FieldType.DIMENSION) {\n                identifiers[0].push(name);\n                identifiers[1].push(data[i]);\n            }\n        });\n\n        if (xMeasure && yMeasure) {\n            const xMeasureIndex = fieldsConfig[xField].index;\n            const yMeasureIndex = fieldsConfig[yField].index;\n            identifiers[0].push(...[xField, yField]);\n            identifiers[1].push(...[data[xMeasureIndex], data[yMeasureIndex]]);\n        }\n        return identifiers;\n    }\n\n    hasPlotSpan () {\n        return false;\n    }\n\n    getPlotSpan () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    getPlotPadding () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    /**\n     * Returns the information of the marks corresponding to the supplied identifiers. Identifiers are a set of field\n     * names and their corresponding values in an array. It can also be an instance of datamodel.\n     *\n     * For example,\n     * ```\n     *  const identifiers = [\n     *      ['Origin', 'Cylinders'],\n     *      ['USA', '8']\n     *  ];\n     *  const points = barLayer.getPointsFromIdentifiers(identifiers);\n     * ```\n     * @public\n     * @param {Array|DataModel} identifiers Identifiers of the marks.\n     * @param {Object} config Optional configuration which describes how to get the information.\n     * @param {boolean} config.getAllAttrs If true, then returns all the information of the points, else returns only\n     * the positions of the points.\n     * @param {boolean} config.getBBox If true, then returns the bounding box of all the marks.\n     *\n     * @return {Array} Array of points contains\n     */\n    getPointsFromIdentifiers (identifiers, config = {}) {\n        const getAllAttrs = config.getAllAttrs;\n        const getBBox = config.getBBox;\n        if (!this.data()) {\n            return [];\n        }\n        let fieldNames;\n        let values;\n        if (identifiers instanceof DataModel) {\n            const dataObj = identifiers.getData();\n            fieldNames = dataObj.schema.map(d => d.name);\n            values = dataObj.data;\n        } else {\n            fieldNames = identifiers[0];\n            values = identifiers.slice(1, identifiers.length);\n        }\n\n        const points = this._points;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPoints = [].concat(...points).filter((point) => {\n            const { source, rowId } = point;\n\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === source[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === rowId) !== -1;\n                } return true;\n            });\n        });\n        return getAllAttrs ? filteredPoints : filteredPoints.map((d) => {\n            const obj = clone(d);\n            if (getBBox) {\n                const update = obj.update || obj;\n                if (obj.size !== undefined) {\n                    const sizeVal = Math.sqrt(obj.size / Math.PI) * 2;\n                    update.width = sizeVal;\n                    update.height = sizeVal;\n                    update.x -= sizeVal / 2;\n                    update.y -= sizeVal / 2;\n                } else {\n                    if (update.width === undefined) {\n                        update.width = 2;\n                    }\n                    if (update.height === undefined) {\n                        update.height = 2;\n                    }\n                }\n            }\n\n            return obj.update || obj;\n        }).sort((a, b) => a.y - b.y);\n    }\n\n    getTransformedDataFromIdentifiers (identifiers) {\n        const { data: identifierData, schema: identifierSchema } = identifiers.getData();\n        const normalizedData = this._normalizedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            yField,\n            xField,\n            yFieldType,\n            xFieldType\n        } = this.encodingFieldsInf();\n        let measureIndex;\n        let enc;\n        if (xFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[xField].index;\n            enc = 'x';\n        } else if (yFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[yField].index;\n            enc = 'y';\n        }\n\n        const transformedData = [];\n        normalizedData.forEach((dataArr) => {\n            dataArr.forEach((dataObj) => {\n                const tupleArr = dataObj.source;\n                const exist = identifierSchema.every((obj, i) =>\n                    identifierData.findIndex(d => tupleArr[fieldsConfig[obj.name].index] === d[i]) !== -1);\n                if (exist) {\n                    const transformedVal = dataObj[enc];\n                    const row = dataObj.source;\n                    const tuple = {};\n                    for (const key in fieldsConfig) {\n                        const index = fieldsConfig[key].index;\n                        tuple[key] = row[index];\n                        if (index === measureIndex) {\n                            tuple[key] = transformedVal;\n                        }\n                    }\n                    transformedData.push(tuple);\n                }\n            });\n        });\n\n        return [transformedData, this.data().getSchema()];\n    }\n\n    /**\n     * Returns the dom elements associated with the supplied set of row ids.\n     * Each element in the layer is mapped with a row of the datamodel. When given an array of row ids, it returns all\n     * the elements which is mapped with those row ids.\n     *\n     * @public\n     * @param {Array} set Array of row ids\n     *\n     * @return {Selection} D3 Selection of dom elements.\n     */\n    getPlotElementsFromSet (set) {\n        const graphicElems = this._graphicElems;\n        const elems = [];\n        for (let i = 0, len = set.length; i < len; i++) {\n            const elem = graphicElems[set[i]];\n            if (elem) {\n                elems.push(elem);\n            }\n        }\n        return elems;\n    }\n\n    /**\n     * Notifies when all animations/transitions of the layer are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n\n    getRenderProps () {\n        if (this.coord() === COORD_TYPES.POLAR) {\n            return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.radius`];\n        }\n        const { unitRowIndex: rowIndex, unitColIndex: colIndex } = this.metaInf();\n        return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${rowIndex}0`,\n            `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${colIndex}0`];\n    }\n}\n","import {\n    selectElement,\n    makeElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\nimport { updateStyle } from '../../helpers';\n\nconst line = Symbols.line;\n\nconst filterFn = (d) => {\n    const { update } = d;\n    return update.y !== null && update.x !== null;\n};\n\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nexport const drawLine = (context) => {\n    let filteredPoints;\n    const { layer, container, points, interpolate, connectNullData, className, style, transition } = context;\n    const mount = selectElement(container).attr('class', className);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const linepath = line()\n                .curve(curveInterpolatorFn)\n                .x(d => d.update.x)\n                .y(d => d.update.y)\n                .defined(filterFn);\n\n    filteredPoints = points;\n    if (connectNullData) {\n        filteredPoints = points.filter(filterFn);\n    }\n\n    updateStyle(mount, style);\n    let element = makeElement(mount, 'path', points.length ? [points[0].className] : []);\n    element.attr('class', d => d);\n    if (!transition.disabled) {\n        element = element.transition()\n        .duration(transition.duration)\n        .on('end', layer.registerAnimationDoneHook());\n    }\n    element.attr('d', linepath(filteredPoints))\n                    .style('fill-opacity', 0);\n    return element;\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-line',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: 'group'\n    },\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    nearestPointThreshold: 20,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n\n","import {\n    Voronoi,\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    FieldType,\n    InvalidAwareTypes,\n    getObjProp\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawLine } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    animateGroup,\n    positionPoints,\n    getIndividualClassName,\n    getColorMetaInf,\n    resolveEncodingValues,\n    sortData\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to render straight or smoothed line paths. The mark type of this layer is ```line```.\n *\n * @public\n *\n * @class\n * @module LineLayer\n * @extends BaseLayer\n */\nexport default class LineLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of LineLayer.\n     * @param {*} args\n     * @memberof LineLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n    }\n\n    static formalName () {\n        return 'line';\n    }\n\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Default configuration of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField && !transform.groupBy) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     * Returns the draw method for line\n     * @return {Function} Draw method of line layer\n     */\n    getDrawFn () {\n        return drawLine;\n    }\n\n    static shouldDrawAnchors () {\n        return true;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @param {number} seriesIndex index of series\n     * @return {Array} Array of points\n     */\n    translatePoints (data) {\n        let points = [];\n        const axes = this.axes();\n        const xAxis = axes.x;\n        const yAxis = axes.y;\n        const colorAxis = axes.color;\n        const { xFieldType, yFieldType } = this.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        sortData(data, axes);\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y) + yAxis.getUnitWidth() / 2;\n            const color = colorAxis.getColor(d.color);\n\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    color\n                },\n                data: d\n            }, i, data, this);\n\n            const point = {\n                enter: {},\n                update: {\n                    x: d.x instanceof InvalidAwareTypes ? null : resolvedEncodings.x,\n                    y: d.y instanceof InvalidAwareTypes ? null : resolvedEncodings.y\n                },\n                style: {\n                    stroke: resolvedEncodings.color,\n                    'fill-opacity': 0\n                },\n                rowId: d.rowId,\n                source: d.source,\n                meta: getColorMetaInf({\n                    stroke: resolvedEncodings.color\n                }, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n\n        points = points.filter((point) => {\n            const { update } = point;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n\n    /**\n     * Renders the line plot\n     * @param {SVGElement} container svg element\n     * @return {LineLayer} instance of line layer\n     */\n    render (container) {\n        let points;\n        let seriesClassName;\n        let style;\n\n        const config = this.config();\n        const {\n            encoding,\n            interpolate,\n            className,\n            defClassName,\n            transition\n        } = config;\n        const normalizedData = this._normalizedData;\n        const transformedData = this._transformedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const keys = transformedData.map(d => d.key);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n        const colorField = encoding.color.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n        this._points = [];\n        this._pointMap = {};\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        makeElement(container, 'g', normalizedData, null, {\n            enter: (group) => {\n                animateGroup(group, {\n                    transition,\n                    groupAnimateStyle: {\n                        enter: {\n                            'stroke-opacity': 0,\n                            'fill-opacity': this.getPathStyle()['fill-opacity']\n                        },\n                        update: {\n                            'stroke-opacity': encoding.strokeOpacity.value\n                        }\n                    }\n                });\n            },\n            update: (group, dataArr, i) => {\n                points = this.translatePoints(dataArr);\n                this._points.push(points);\n                seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n\n                let color;\n                const colorValFn = encoding.color.value;\n                const colorVal = points.find(d => d.source[colorFieldIndex] !== null &&\n                        d.source[colorFieldIndex] !== undefined);\n\n                if (colorValFn) {\n                    color = colorValFn(dataArr, i, normalizedData);\n                } else {\n                    color = axes.color.getColor(colorVal && colorVal.source[colorFieldIndex]);\n                }\n\n                style = this.getPathStyle(color);\n                this.getDrawFn()({\n                    layer: this,\n                    container: group.node(),\n                    interpolate,\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: style || {},\n                    connectNullData: config.connectNullData\n                });\n            }\n        }, d => d[0].source[colorFieldIndex] || d[0].rowId);\n\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            stroke: color,\n            'fill-opacity': '0'\n        };\n    }\n\n    /**\n     * Gets the nearest point closest to the given position\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point information\n     */\n    getNearestPoint (x, y, config) {\n        let searchRadius = config.searchRadius;\n        const data = this.data();\n\n        if (!data || (data && data.isEmpty())) {\n            return null;\n        }\n\n        searchRadius = searchRadius !== undefined ? searchRadius : this.config().nearestPointThreshold;\n        const point = this._voronoi.find(x, y, searchRadius);\n        const dimensions = getObjProp(point, 'data', 'data', 'update');\n\n        if (point) {\n            const { source, rowId } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(source, rowId);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: 2,\n                    height: 2\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import {\n    easeFns,\n    selectElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\n\nconst area = Symbols.area;\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nconst /* istanbul ignore next */ drawArea = (params) => {\n    let filteredPoints;\n    const { layer, container, points, style, transition, className, connectNullData, interpolate } = params;\n\n    const { effect: easeEffect, duration } = transition;\n    const mount = selectElement(container);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const selection = mount.selectAll('path').data(points.length ? [points[0].className] : []);\n    const [enterAreaPath, updateAreaPath] = ['enter', 'update'].map(e => area().curve(curveInterpolatorFn)\n                    .x(d => d[e].x)\n                    .y1(d => d[e].y)\n                    .y0(d => d[e].y0)\n                    .defined(d => d[e].y !== null\n            ));\n\n    filteredPoints = points;\n    mount.attr('class', className);\n    if (connectNullData) {\n        filteredPoints = points.filter(d => d.update.y !== null);\n    }\n    const selectionEnter = selection.enter().append('path').attr('d', enterAreaPath(filteredPoints));\n    selection.merge(selectionEnter).transition().ease(easeFns[easeEffect])\n                    .duration(duration)\n                    .on('end', layer.registerAnimationDoneHook())\n                    .attr('d', updateAreaPath(filteredPoints))\n                    .each(function (d) {\n                        const element = selectElement(this);\n                        element.attr('class', d);\n                        Object.keys(style).forEach(key => element.style(key, style[key]));\n                    });\n};\n\nexport default drawArea;\n","import { FieldType, InvalidAwareTypes, getObjProp } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { LineLayer } from '../line';\nimport drawArea from './renderer';\nimport './styles.scss';\nimport { STACK, ENCODING } from '../../enums/constants';\nimport {\n    getAxesScales,\n    positionPoints,\n    getIndividualClassName,\n    getValidTransformForAggFn,\n    getColorMetaInf,\n    resolveEncodingValues,\n    sortData\n} from '../../helpers';\n\n/**\n * Area layer renders a closed path. The mark type of this layer is ```area```. This layer can be used\n * to create stacked or multi-series areas and vertical range area plots by using the encoding properties.\n *\n * To create this layer using layer configuration from canvas,\n * ```\n *      canvas.layers([{\n *          mark: 'area',\n *          transform: {\n *              type: 'stack' // Produces a stacked area.\n *          }\n *      }]);\n * ```\n *\n * @public\n *\n * @class\n * @module AreaLayer\n * @extends LineLayer\n */\nexport default class AreaLayer extends LineLayer {\n    /** oation of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof AreaLayer\n     */\n    static formalName () {\n        return 'area';\n    }\n\n    /**\n     * Calculates the domain from data. It calls its parent class's method which is line layer\n     * to get the domain and overwrites the domain according to its need.\n     * @return {Array} Domain values\n     */\n    calculateDomainFromData (data, encodingFieldsInf, fieldsConfig) {\n        const domains = super.calculateDomainFromData(data, fieldsConfig);\n        [ENCODING.X, ENCODING.Y].forEach((type) => {\n            const { [`${type}FieldType`]: fieldType } = encodingFieldsInf;\n            if (fieldType === FieldType.MEASURE && getObjProp(domains[type], 'length')) {\n                domains[type][0] = Math.min(domains[type][0], 0);\n                domains[type][1] = Math.max(0, domains[type][1]);\n            }\n        });\n        return domains;\n    }\n\n    /**\n     * Returns the drawing method of this layer\n     * @return {Function} Draw method\n     */\n    getDrawFn () {\n        return drawArea;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @return {Array} Array of points\n     */\n    translatePoints (data) {\n        let points = [];\n        const transformType = this.transformType();\n        const axes = this.axes();\n        const colorAxis = axes.color;\n        const config = this.config();\n        const fieldsConfig = this.data().getFieldsConfig();\n        const { xField, yField, y0Field } = this.encodingFieldsInf();\n        const {\n            xAxis,\n            yAxis\n       } = getAxesScales(axes);\n        const classNameFn = config.individualClassName;\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n        const minYVal = yAxis.domain()[0];\n        const basePos = minYVal < 0 ? yAxis.getScaleValue(0) : yAxis.getScaleValue(minYVal);\n        sortData(data, axes);\n        points = data.map((d, i) => {\n            let color;\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y);\n            const y0Px = (y0Field || transformType === STACK) ? yAxis.getScaleValue(d.y0) : basePos;\n            color = colorAxis.getColor(d.color);\n            const invalidY = d.y instanceof InvalidAwareTypes;\n            const invalidY0 = d.y0 instanceof InvalidAwareTypes;\n            const resolvedValues = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    y0: y0Px,\n                    color\n                },\n                data: d\n            }, i, data, this);\n            color = resolvedValues.color;\n            const style = {\n                fill: color\n            };\n\n            const point = {\n                enter: {\n                    x: xPx,\n                    y: invalidY ? null : basePos,\n                    y0: invalidY0 ? null : basePos\n                },\n                update: {\n                    x: xPx,\n                    y: invalidY ? null : resolvedValues.y,\n                    y0: invalidY0 ? null : resolvedValues.y0\n                },\n                source: d.source,\n                rowId: d.rowId,\n                className: classNameFn ? classNameFn(d, i, data, this) : '',\n                style,\n                meta: getColorMetaInf(style, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        points = points.filter((point) => {\n            const update = point.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            fill: color\n        };\n    }\n}\n\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-arc',\n    padding: { top: 1, bottom: 1, left: 1, right: 1 },\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    height: 100,\n    width: 100,\n    sort: '',\n    colors: ['#F44336', 'blue', 'green', 'yellow', 'orange', 'purple'],\n    transform: {\n        type: 'identity'\n    },\n    encoding: {\n        'stroke-width': {\n            value: '2px'\n        },\n        'stroke-linejoin': {\n            value: 'round'\n        },\n        angle: {\n            value: '1'\n        },\n        radius: {\n            value: '1'\n        },\n        opacity: {\n            value: '1'\n        },\n        color: {\n            value: '1'\n        },\n        shape: {\n            value: '1'\n        },\n        size: {\n            value: '1'\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 500\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-arc-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-arc-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-arc-selected`\n        }\n    }\n};\n\n","import {\n    makeElement,\n    selectElement,\n    getQualifiedClassName,\n    isSimpleObject,\n    Symbols,\n    FieldType,\n    ReservedFields\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { BaseLayer } from '../../base-layer';\nimport { getIndividualClassName, resolveEncodingValues, getColorMetaInf } from '../../helpers';\nimport { tweenPie, tweenExitPie, getPreviousPoint } from './arc-helper';\nimport './styles.scss';\n\nconst arc = Symbols.arc;\n\n/**\n * Arc Layer creates a plot with polar coordinates.\n *\n * @public\n *\n * @class\n * @module ArcLayer\n * @extends BaseLayer\n */\nexport default class ArcLayer extends BaseLayer {\n\n    constructor (data, axes, config, dependencies) {\n        super(data, axes, config, dependencies);\n        this._prevPieData = {};\n    }\n\n    /**\n     * returns the default configuration of the layer\n     *\n     * @static\n     * @return {Object} Default configuration for arc layer\n     * @memberof ArcLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'arc';\n    }\n\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     *\n     *\n     * @param {Object} x\n     * @param {Object} y\n     * @return {}\n     * @memberof ArcLayer\n     */\n    getNearestPoint (x, y, config = {}) {\n        const dataPoint = selectElement(config.event.target).data()[0];\n        if (isSimpleObject(dataPoint)) {\n            const { source, rowId } = dataPoint;\n            return {\n                id: this.getIdentifiersFromData(source, rowId),\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n\n    translatePoints (data) {\n        const { angle, color: colorAxis, radius: radiusAxis } = this.axes();\n        const pieIndex = {};\n        const prevData = this._points[0] || [];\n        const points = [];\n        const angleV = {};\n\n        this._prevPieData = {};\n        prevData.forEach((e, index) => {\n            this._prevPieData[e.rowId] = [e, index];\n            pieIndex[e.index] = e;\n        });\n        data.forEach((d, i) => {\n            const angles = angle.getScaleValue(d.angle);\n            if (angles) {\n                !angleV[d.angle] && (angleV[d.angle] = 0);\n                const { startAngle, endAngle } = angles[angleV[d.angle]++];\n                const uid = d.rowId;\n                const resolvedEncodings = resolveEncodingValues({\n                    values: {\n                        radius: radiusAxis.getOuterRadius(d.radius),\n                        radius0: radiusAxis.getInnerRadius(d.radius0),\n                        color: colorAxis.getColor(d.color),\n                        angle0: startAngle,\n                        angle: endAngle,\n                        startAngle,\n                        endAngle,\n                        startAngle0: startAngle,\n                        endAngle0: endAngle\n                    },\n                    data: d\n                }, i, data, this);\n                const color = resolvedEncodings.color;\n                points.push({\n                    source: d.source,\n                    index: i,\n                    enter: {},\n                    update: {\n                        angle0: resolvedEncodings.angle0,\n                        angle: resolvedEncodings.angle,\n                        radius0: resolvedEncodings.radius0,\n                        radius: resolvedEncodings.radius\n                    },\n                    color,\n                    meta: getColorMetaInf({\n                        fill: color\n                    }, colorAxis),\n                    rowId: uid,\n                    _previousInfo: this._prevPieData[uid] ? this._prevPieData[uid][0] :\n                        getPreviousPoint(pieIndex, i, this)\n                });\n            }\n        });\n        return points;\n    }\n\n    /**\n     *\n     *\n     * @param {Object} container\n     * @return {}\n     * @memberof ArcLayer\n     */\n    render (container) {\n        const measurement = this.measurement();\n        const {\n            classPrefix,\n            defClassName,\n            cornerRadius,\n            padAngle,\n            padRadius,\n            transition\n       } = this.config();\n        const qualClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        // This returns a function that generates the arc path based on the datum provided\n        const path = this._arcFn = arc()\n                .cornerRadius(cornerRadius)\n                .startAngle(d => d.update.angle0 + Math.PI / 2)\n                .endAngle(d => d.update.angle + Math.PI / 2)\n                .padAngle(padAngle)\n                .padRadius(padRadius)\n                .outerRadius(d => d.update.radius)\n                .innerRadius(d => d.update.radius0);\n\n        this._points = this._normalizedData.map(arr => this.translatePoints(arr));\n        const graphicElems = this._graphicElems = {};\n        // Creating the group that holds all the arcs\n        const g = makeElement(selectElement(container), 'g', this._points, `${qualClassName[0]}-group`)\n                .classed(`${qualClassName[1]}-group`, true)\n                .attr('transform', `translate(${measurement.width / 2},\n                    ${measurement.height / 2})`);\n        const tween = (elem) => {\n            makeElement(elem, 'path', d => [d], `${qualClassName[0]}-path`)\n                .style('fill', d => d.color)\n                .each(function (d) {\n                    graphicElems[d.rowId] = selectElement(this);\n                })\n                .transition()\n                .duration(transition.duration)\n                .on('end', this.registerAnimationDoneHook())\n                .attrTween('d', (...params) => tweenPie(path, params))\n                .attr('class', (d, i) => {\n                    const individualClass = getIndividualClassName(d, i, this._points, this);\n                    return `${qualClassName[0]}-path ${qualClassName[1]}-path-${d.index}\n                        ${individualClass}`;\n                });\n        };\n        const consecutiveExits = [];\n        let exitCounter = 0;\n        const tweenExit = (elem, d) => {\n            let exitArr = consecutiveExits[exitCounter];\n            const oldExitCounter = exitCounter;\n            if (!exitArr) {\n                exitArr = [{ elem, datum: d }];\n            } else if (exitArr[exitArr.length - 1].datum.index === d.index - 1) {\n                exitArr.push({ elem, datum: d });\n            } else {\n                exitCounter++;\n            }\n            consecutiveExits[oldExitCounter] = exitArr;\n        };\n        // Creating groups for all the arcs present individually\n        makeElement(g, 'g', d => d, `${qualClassName[0]}`,\n            {\n                update: tween,\n                exit: tweenExit\n            })\n                        .attr('class', (d, i) => `${qualClassName[0]} ${qualClassName[1]}-${i}`);\n        tweenExitPie(consecutiveExits, transition, path);\n        return this;\n    }\n\n    getPointsFromIdentifiers (identifiers) {\n        if (!this.data()) {\n            return [];\n        }\n        const fieldNames = identifiers[0];\n        const values = identifiers.slice(1, identifiers.length);\n        const pieSlices = selectElement(this.mount()).selectAll('path').data();\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPies = pieSlices.filter((tData) => {\n            const { source, rowId } = tData;\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === source[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === rowId) !== -1;\n                } return true;\n            });\n        });\n\n        const pieSliceInf = filteredPies[0];\n        if (pieSliceInf) {\n            const measurement = this.measurement();\n            const centroid = this._arcFn.centroid(pieSliceInf);\n            return [{\n                x: centroid[0] + measurement.width / 2,\n                y: centroid[1] + measurement.height / 2,\n                width: 2,\n                height: 2\n            }];\n        }\n        return [];\n    }\n}\n","import { getObjProp, interpolator, FieldType, selectElement } from 'muze-utils';\nimport { ANGLE, RADIUS, SIZE, COLOR } from '../../enums/constants';\n\nexport const getPreviousPoint = (prevData, currIndex, context) => {\n    const prevArc = prevData[currIndex - 1];\n    const nextArc = prevData[currIndex];\n    const [startAngle, endAngle] = context.axes().angle.range();\n    if (prevArc && nextArc) {\n        return {\n            update: {\n                angle0: getObjProp(prevArc, 'update', 'angle'),\n                angle: getObjProp(nextArc, 'update', 'angle0')\n            }\n        };\n    } else if (!nextArc) {\n        return {\n            update: {\n                angle0: (endAngle - 90) * Math.PI * 2 / 360,\n                angle: (endAngle - 90) * Math.PI * 2 / 360\n            }\n        };\n    }\n    return {\n        update: {\n            angle0: (startAngle - 90) * Math.PI * 2 / 360,\n            angle: (startAngle - 90) * Math.PI * 2 / 360\n        }\n    };\n};\n\nexport const tweenPie = (path, b) => {\n    const datum = b[0];\n    return function (t) {\n        return path(interpolator()(datum._previousInfo, datum)(t));\n    };\n};\n\nexport const tweenExitPie = (consecutiveExits, transition, path) => {\n    if (consecutiveExits.length > 0) {\n        consecutiveExits.forEach((consecutiveExitArr) => {\n            const startAngle = consecutiveExitArr[0].datum.update.angle0;\n            const endAngle = consecutiveExitArr[consecutiveExitArr.length - 1].datum.update.angle;\n            const mid = (Math.PI * 2 * startAngle) / ((Math.PI * 2) + startAngle - endAngle);\n\n            consecutiveExitArr.forEach((e) => {\n                const { elem, datum } = e;\n\n                elem.each(function () {\n                    const gElem = selectElement(this);\n                    gElem.selectAll('path')\n                                    .transition()\n                                    .duration(transition.duration)\n                                    .attrTween('d', () => function (t) {\n                                        return path(interpolator()(datum, {\n                                            update: {\n                                                angle0: mid,\n                                                angle: mid,\n                                                radius: datum.radius,\n                                                radius0: datum.radius0\n                                            }\n                                        })(t));\n                                    })\n                                    .remove();\n                    gElem.remove();\n                });\n            });\n        });\n    }\n};\n\nexport const getFieldIndices = (encoding, fieldsConfig) => {\n    const [angleField, radiusField, colorField, sizeField] = [ANGLE, RADIUS, COLOR, SIZE]\n            .map(e => encoding[e].field);\n    const [angleIndex, sizeIndex, radiusIndex] = [angleField, sizeField, radiusField]\n        .map((e) => {\n            const conf = fieldsConfig[e];\n            if (conf && conf.def.type === FieldType.MEASURE) {\n                return conf.index;\n            }\n            return null;\n        });\n    const colorIndex = getObjProp(fieldsConfig, colorField, 'index');\n    return {\n        angleIndex,\n        sizeIndex,\n        radiusIndex,\n        colorIndex\n    };\n};\n","import {\n    setAttrs,\n    setStyles,\n    selectElement,\n    makeElement,\n    getSmartComputedStyle\n} from 'muze-utils';\n\n/**\n * Draws svg text in the specified container.\n * @param {SVGElement} container Container where labels will be appended.\n * @param {Array.<Object>} data Data of the elements.\n * @return {Selection} d3 selection of the elements.\n */\nconst drawText = (container, data, config, layerInst) => {\n    const selection = selectElement(container).selectAll('g').data(data);\n    const { smartLabel } = layerInst._dependencies;\n    const graphicElems = layerInst._graphicElems;\n\n    const selectionMerge = selection.enter().append('g')\n        .each(function (dataObj) {\n            setAttrs(this, dataObj.enter);\n        })\n        .merge(selection);\n    const style = getSmartComputedStyle(selectElement(container), config.className);\n    const fontSize = parseInt(style.fontSize, 10);\n\n    smartLabel.setStyle(style);\n    selectionMerge.each(function (dataObj) {\n        const element = selectElement(this);\n        graphicElems[dataObj.rowId] = element;\n        const { update, text, color, textanchor, style: textStyle } = dataObj;\n        const background = dataObj.background;\n        let backgroundVal;\n        if (backgroundVal = background.value) {\n            const backgroundPadding = background.padding;\n            let diff;\n            const { width, height } = smartLabel.getOriSize(dataObj.text);\n            const backgroundEl = makeElement(element, 'rect', [1]);\n\n            if (textanchor === 'end') {\n                diff = width;\n            } else if (textanchor === 'start') {\n                diff = 0;\n            } else {\n                diff = width / 2;\n            }\n\n            setAttrs(backgroundEl.node(), {\n                x: update.x - diff - backgroundPadding / 2,\n                y: update.y - fontSize - backgroundPadding / 2,\n                width: width + backgroundPadding,\n                height: height + backgroundPadding\n            });\n            background && setStyles(backgroundEl, {\n                background: backgroundVal\n            });\n        }\n        const textEl = makeElement(element, 'text', d => [d]).text(text);\n        const textNode = textEl.node();\n        textStyle && setStyles(textNode, textStyle);\n        color && setStyles(textNode, {\n            fill: color\n        });\n        dataObj.className && textEl.classed(dataObj.className, true);\n        setAttrs(textNode, update);\n        textEl.attr('text-anchor', textanchor);\n        textEl.attr('alignment-baseline', dataObj['alignment-baseline']);\n        textEl.attr('transform', `rotate(${dataObj.rotation} ${update.x} ${update.y})`);\n    });\n    selection.exit().remove();\n    return selection;\n};\n\nexport default drawText;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-text',\n    classPrefix: CLASSPREFIX,\n    className: '',\n    transform: {\n        type: 'identity'\n    },\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: {},\n        size: {},\n        radius: {},\n        angle: {},\n        text: {\n            value: '',\n            formatter: (val, i, data, context) => {\n                const valueParser = context.valueParser();\n                return valueParser(val);\n            },\n            background: {\n                padding: 10\n            }\n        },\n        rotation: {\n            value: 0\n        },\n        'alignment-baseline': {\n            value: 'middle'\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-text-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-text-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-text-selected`\n        }\n    }\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    setStyles,\n    createElements\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawText from './renderer';\nimport { defaultConfig } from './default-config';\nimport { positionPoints, getIndividualClassName, resolveEncodingValues, getColorMetaInf, toCartesianCoordinates }\n    from '../../helpers';\nimport { TEXT_ANCHOR_MIDDLE, ENCODING } from '../../enums/constants';\n\nimport './styles.scss';\n\nconst defaultEncoding = defaultConfig.encoding;\nconst alignmentBaseLine = defaultEncoding['alignment-baseline'].value;\nconst defRotation = defaultEncoding.rotation.value;\n\nconst pointTranslators = {\n    polar: (data, config, layerInst) => {\n        let points = [];\n        const axes = layerInst.axes();\n        const encoding = layerInst.config().encoding;\n        const textEncoding = encoding.text;\n        const { radius: radiusAxis, color: colorAxis, angle: angleAxis } = axes;\n        const { formatter: textFormatter } = textEncoding;\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const angleV = {};\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const source = d.source;\n            const text = d.text;\n\n            const color = colorAxis.getColor(d.color);\n            const radius = radiusAxis.getOuterRadius(d.radius);\n            const angles = angleAxis.getScaleValue(d.angle);\n            !angleV[d.angle] && (angleV[d.angle] = 0);\n            const { startAngle, endAngle } = angles[angleV[d.angle]++];\n\n            const angle = (startAngle + endAngle) / 2;\n            const resolvedVal = resolveEncodingValues({\n                values: {\n                    angle,\n                    radius,\n                    color,\n                    text,\n                    startAngle,\n                    endAngle,\n                    rotation: defRotation,\n                    'alignment-baseline': alignmentBaseLine\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    angle: resolvedVal.angle,\n                    radius: resolvedVal.radius\n                },\n                text: textFormatter ? textFormatter(text, i, data, layerInst) : resolvedVal.text,\n                color: resolvedVal.color,\n                rotation: resolvedVal.rotation,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, layerInst) : null,\n                    padding: backgroundPadding\n                },\n                'alignment-baseline': resolvedVal['alignment-baseline'],\n                meta: getColorMetaInf({\n                    fill: resolvedVal.color\n                }, colorAxis),\n                style: {},\n                source,\n                rowId: d.rowId\n            };\n\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n\n        points = toCartesianCoordinates(positionPoints(layerInst, points), layerInst.measurement());\n\n        points = points.filter((d) => {\n            const update = d.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    },\n    cartesian: (data, config, layerInst) => {\n        let points = [];\n        const axes = layerInst.axes();\n        const colorAxis = axes.color;\n        const encoding = layerInst.config().encoding;\n        const textEncoding = encoding.text;\n        const { field: textField, value, formatter: textFormatter } = textEncoding;\n        const fieldsConfig = layerInst.data().getFieldsConfig();\n\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const textFieldIndex = textField ? fieldsConfig[textField] && fieldsConfig[textField].index : -1;\n        const xEnc = ENCODING.X;\n        const yEnc = ENCODING.Y;\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d.source;\n            const textValue = textField ? row[textFieldIndex] : value;\n\n            const [xPx, yPx] = [xEnc, yEnc].map(type => (axes[type] ? axes[type].getScaleValue(d[type]) +\n                    axes[type].getUnitWidth() / 2 : 0));\n\n            const color = colorAxis.getColor(d.color, colorAxis);\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    text: textValue,\n                    color,\n                    rotation: defRotation,\n                    'alignment-baseline': alignmentBaseLine\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    x: resolvedEncodings.x,\n                    y: resolvedEncodings.y\n                },\n                text: textFormatter(resolvedEncodings.text, i, data, layerInst),\n                color: resolvedEncodings.color,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, layerInst) : null,\n                    padding: backgroundPadding\n                },\n                'alignment-baseline': resolvedEncodings['alignment-baseline'],\n                rotation: resolvedEncodings.rotation,\n                meta: getColorMetaInf({\n                    fill: resolvedEncodings.color\n                }, colorAxis),\n                style: {},\n                source: d.source,\n                rowId: d.rowId\n            };\n\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n\n        points = positionPoints(layerInst, points);\n        points = points.filter((d) => {\n            const update = d.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n};\n\n/**\n * This layer is used to create labels for each data point. It has an encoding property ```text```\n * which determines from which field's data the value of the label will be taken. The text encoding\n * property is necessary for the layer to render the text.The mark type of this layer is ```text```.\n *\n * @public\n *\n * @class\n * @module TextLayer\n * @extends BaseLayer\n */\nexport default class TextLayer extends BaseLayer {\n    /**\n     * Returns the default configuration of the text layer\n     * @return {Object} Default configuration of the text layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'text';\n    }\n\n    elemType () {\n        return 'text';\n    }\n\n    getPointTranslator (val) {\n        return pointTranslators[val];\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config = {}) {\n        return pointTranslators[this.coord()](data, config, this);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {textLayer} Instance of text layer\n     */\n    render (container) {\n        const config = this.config();\n        const normalizedData = this._normalizedData;\n        const className = config.className;\n        const qualifiedClassName = getQualifiedClassName(config.defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n\n        containerSelection.classed(`${qualifiedClassName.join(' ')} ${className}`, true);\n        this._graphicElems = {};\n\n        createElements({\n            data: normalizedData,\n            append: 'g',\n            selector: 'g',\n            container,\n            each: (dataArr, group) => {\n                const node = group.node();\n                const points = this.translatePoints(dataArr, {}, this);\n                setStyles(node, {\n                    'text-anchor': TEXT_ANCHOR_MIDDLE\n                });\n                drawText(node, points, {\n                    className: qualifiedClassName[0]\n                }, this);\n            }\n        });\n        return this;\n    }\n}\n","/* global Element, document  */\nimport {\n    makeElement,\n    selectElement,\n    easeFns,\n    objectIterator,\n    getSymbol\n} from 'muze-utils';\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, groupElement) {\n    const { shape, size, update } = d;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            createShape(d, groupElement);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        if (newShape.nodeName === 'path' || newShape.nodeName === 'image') {\n            shapeElement.attr('transform', `scale(${size / 100})`);\n        } else {\n            shapeElement.attr('height', size);\n            shapeElement.attr('width', size);\n        }\n        shapeElement.attr('x', -size / 2);\n        shapeElement.attr('y', -size / 2);\n        makeElement(groupElement, () => newShape, [1]);\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = getSymbol(shape).size(size)(update);\n        }\n        makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    } else {\n        d.shape = 'circle';\n        createShape(d, groupElement);\n    }\n};\n\n/**\n * Draws symbols using d3 symbol api\n * @param {Object} params Contains the svg container, points and other symbol related attributes.\n */\n/* istanbul ignore next */ const drawSymbols = (params) => {\n    const { layer, container, points, transition, className } = params;\n    const { duration, effect, disabled } = transition;\n    const mount = selectElement(container);\n    const graphicElems = layer._graphicElems;\n    mount.attr('class', className);\n    return makeElement(mount, 'g', points, null, {\n        enter: (group, d) => {\n            const { enter } = d;\n            group.attr('transform', `translate(${enter.x},${enter.y})`);\n        },\n        update: (group, d) => {\n            createShape(d, group);\n            graphicElems[d.rowId] = group;\n            const { update, style } = d;\n            objectIterator(style, key => group.style(key, style[key]));\n            group.attr('class', className);\n            group.classed(d.className, true);\n            if (!disabled) {\n                group = group.transition()\n                    .duration(transition.duration)\n                    .on('end', layer.registerAnimationDoneHook());\n            }\n            group.attr('transform', `translate(${update.x},${update.y})`);\n        },\n        exit: (exitGroup) => {\n            if (!disabled) {\n                exitGroup.transition().ease(easeFns[effect])\n                .duration(duration)\n                .on('end', () => exitGroup.remove())\n                .style('fill-opacity', 0)\n                .style('stroke-opacity', 0);\n            } else {\n                exitGroup.remove();\n            }\n        }\n    }, params.keyFn);\n};\n\nexport default drawSymbols;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-point',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    defColorStyle: 'stroke',\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, 0, +1]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }\n        ]\n    },\n    innerPadding: 0.1,\n    nearestPointThreshold: 10,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        size: {\n            value: 30\n        },\n        color: {},\n        stroke: {\n            value: 'hsla(0,0%,0%,0)'\n        },\n        fill: {},\n        shape: {\n            value: 'circle'\n        },\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    shapes: ['circle', 'cross', 'diamond', 'square', 'star', 'wye', 'triangle'],\n    sizes: [20, 30, 40, 50, 60, 70]\n};\n","import {\n    Voronoi,\n    selectElement,\n    getQualifiedClassName,\n    makeElement,\n    FieldType,\n    Scales\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawSymbols from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    positionPoints,\n    getPlotMeasurement,\n    getIndividualClassName,\n    getMarkId,\n    getColorMetaInf,\n    resolveEncodingValues\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to create various symbols for each data point. This is commonly used in\n * scatterplot visualizations. The mark type of this layer is ```point```.\n *\n * @public\n *\n * @class\n * @module PointLayer\n * @extends BaseLayer\n */\nexport default class PointLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of PointLayer.\n     * @param {*} args\n     * @memberof PointLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n        this._bandScale = Scales.band();\n    }\n\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Returns the default configuration of the point layer\n     * @return {Object} Default configuration of the point layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    static formalName () {\n        return 'point';\n    }\n\n    static drawFn () {\n        return drawSymbols;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config = {}) {\n        let points = [];\n        const encoding = this.config().encoding;\n        const axes = this.axes();\n        const {\n            x,\n            y\n        } = encoding;\n        const xField = x.field;\n        const yField = y.field;\n        const { size: sizeAxis, shape: shapeAxis } = axes;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const measurement = this.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n        const stroke = encoding.stroke.value;\n\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const size = sizeAxis.getSize(d.size);\n            const shape = shapeAxis.getShape(d.shape);\n\n            let [xPx, yPx] = [ENCODING.X, ENCODING.Y].map((type) => {\n                const value = d[type] === null ? undefined : d[type];\n                const measure = type === ENCODING.X ? measurement.width : measurement.height;\n                return !encoding[type].field ? measure / 2 : axes[type].getScaleValue(value);\n            });\n\n            xPx += offsetX;\n            yPx += offsetY;\n\n            let color = colorAxis.getColor(d.color);\n\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    color,\n                    shape,\n                    size,\n                    data: d\n                },\n                data: d\n            }, i, data, this);\n            color = resolvedEncodings.color;\n\n            const style = {\n                fill: color,\n                stroke\n            };\n            const pos = {\n                x: resolvedEncodings.x,\n                y: resolvedEncodings.y\n            };\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: pos,\n                    update: pos,\n                    shape: resolvedEncodings.shape,\n                    size: Math.abs(resolvedEncodings.size),\n                    meta: getColorMetaInf(style, colorAxis),\n                    style,\n                    source: d.source,\n                    rowId: d.rowId\n                };\n                point.className = getIndividualClassName(d, i, data, this);\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container.\n     *\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {BarLayer} Instance of bar layer\n     */\n    render (container) {\n        let maxSize = 0;\n        let seriesClassName;\n        const config = this.config();\n        const keys = this._transformedData.map(d => d.key);\n        const { transition, className, defClassName, classPrefix } = config;\n        const normalizedData = this._normalizedData;\n        const containerSelection = selectElement(container);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        this._points = [];\n        this._pointMap = {};\n\n        containerSelection.classed(qualifiedClassName.join(' '), true).classed(className, true);\n\n        this._points = this.generateDataPoints(normalizedData, keys);\n        this._graphicElems = {};\n\n        const schema = this.data().getSchema();\n        makeElement(container, 'g', this._points, null, {\n            update: (group, points) => {\n                maxSize = Math.max(maxSize, ...points.map(d => d.size));\n                seriesClassName = `${qualifiedClassName[0]}`;\n                this.constructor.drawFn()({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    interpolate: config.interpolate,\n                    className: seriesClassName,\n                    transition,\n                    keyFn: v => getMarkId(v.source, schema)\n                });\n            }\n        }, data => data[0].rowId);\n        this._maxSize = Math.sqrt(maxSize / Math.PI) * 2;\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    generateDataPoints (normalizedData, keys) {\n        const [widthMetrics, heightMetrics] = getPlotMeasurement(this, keys);\n        const offsetXValues = widthMetrics.offsetValues || [];\n        const offsetYValues = heightMetrics.offsetValues || [];\n        return normalizedData.map((dataArr, i) => {\n            const measurementConf = this.getMeasurementConfig(offsetXValues[i], offsetYValues[i], widthMetrics.span,\n                heightMetrics.span);\n            return this.translatePoints(dataArr, measurementConf);\n        }).filter(d => d.length);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0) + widthSpan / 2,\n                y: (offsetY || 0) + heightSpan / 2\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n\n    /**\n     * Gets the nearest point from a position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Point details\n     */\n    getNearestPoint (x, y) {\n        const distanceLimit = Math.max(this._maxSize, this.config().nearestPointThreshold);\n\n        if (!this.data()) {\n            return null;\n        }\n\n        const point = this._voronoi.find(x, y, distanceLimit);\n        const dimensions = point && point.data.data.update;\n        const radius = point ? Math.sqrt(point.data.data.size / Math.PI) : 0;\n\n        if (point) {\n            const { source, rowId } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(source, rowId);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: radius,\n                    height: radius\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import { makeElement, easeFns } from 'muze-utils';\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} datum\n * @param {*} index\n * @param {*} context\n */\nconst transitionBars = (layer, elem, datum, index, context) => {\n    const { transition } = context;\n    const { duration, disabled, effect } = transition;\n    const selection = elem;\n\n    const selTransition = disabled ? selection :\n        selection.transition()\n        .duration(duration)\n        .ease(easeFns[effect])\n        .on('end', layer.registerAnimationDoneHook());\n    const update = datum.update || datum;\n    const updateStyle = datum.style || {};\n    datum.className && selection.classed(datum.className, true);\n    Object.entries(update).forEach(attr => (!isNaN(attr[1]) && selTransition.attr(attr[0], attr[1])));\n    Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n};\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} d\n */\nconst barEnterFn = (elem, d) => {\n    const selection = elem;\n    const enter = d.enter || {};\n    Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n};\n\n/**\n * Draws rectangles by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Bar Selection\n */\n/* istanbul ignore next */ export const drawRects = (params) => {\n    const { layer, points, container, keyFn } = params;\n    const graphicElems = layer._graphicElems;\n    const updateFns = {\n        enter (elem, d) { barEnterFn(elem, d); },\n        update (elem, d, i) {\n            graphicElems[d.rowId] = elem;\n            transitionBars(layer, elem, d, i, params);\n        }\n    };\n    return makeElement(container, 'rect', points, null, updateFns, keyFn);\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-bar',\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transform: {\n        type: 'stack'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    innerPadding: 0.1,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        x0: {},\n        y0: {}\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-bar-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-bar-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-bar-selected`\n        }\n    }\n};\n\n","import { MeasureSubtype, DimensionSubtype } from 'muze-utils';\nimport { STACK } from '../../enums/constants';\nimport { positionPoints, getIndividualClassName, getColorMetaInf, resolveEncodingValues } from '../../helpers';\n\nconst positionRetriever = {\n    x: (xPx, isNegativeVal, barBasePos) => (isNegativeVal ? [xPx, barBasePos] : [barBasePos, xPx]),\n    y: (yPx, isNegativeVal, barBasePos) => (isNegativeVal ? [barBasePos, yPx] : [yPx, barBasePos])\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fieldInfo\n * @param {*} config\n * @param {*} data\n *\n */\nconst resolveDimByField = (type, axesInfo, config, data) => {\n    const spaceType = type === 'x' ? 'width' : 'height';\n    const [fieldType, axis] = [config[`${type}FieldType`], axesInfo[`${type}Axis`]];\n    const {\n        transformType,\n        sizeEncoding,\n        sizeConfig,\n        measurement\n    } = config;\n\n    const sizeValue = sizeEncoding.value;\n    let enter = 0;\n    let pos;\n    let space = 0;\n    let enterSpace = 0;\n    if (fieldType !== undefined) {\n        if (config[`${type}0Field`]) {\n            const minVal = data[type];\n            const maxVal = data[`${type}0`];\n            let min;\n            let max;\n            if (minVal === null || maxVal === null) {\n                return {\n                    enterSpace: undefined,\n                    enter: undefined,\n                    pos: undefined,\n                    space: undefined\n                };\n            } else if (fieldType === MeasureSubtype.CONTINUOUS || fieldType === DimensionSubtype.TEMPORAL) {\n                min = Math.min(minVal, maxVal);\n                max = Math.max(minVal, maxVal);\n            } else {\n                min = minVal;\n                max = maxVal;\n            }\n            const scales = type === 'x' ? [min, max] : [max, min];\n            pos = axis.getScaleValue(scales[0]) + axis.getUnitWidth() / 2;\n            space = Math.abs(axis.getScaleValue(scales[1]) - pos) + axis.getUnitWidth() / 2;\n\n            enter = pos;\n            enterSpace = 0;\n        } else if (fieldType === DimensionSubtype.CATEGORICAL || fieldType === DimensionSubtype.TEMPORAL) {\n            pos = axis.getScaleValue(data[type]) +\n                (sizeConfig[type === 'x' ? 'barWidthOffset' : 'barHeightOffset'] || 0);\n\n            space = sizeConfig[type === 'x' ? 'barWidth' : 'barHeight'];\n            if (sizeValue !== undefined) {\n                const diffPx = sizeValue * space;\n                space -= diffPx;\n                pos += diffPx / 2;\n            }\n            enter = pos;\n            enterSpace = space;\n        } else {\n            const minDomVal = axis.domain()[0];\n            const barBasePos = minDomVal < 0 ? axis.getScaleValue(0) : axis.getScaleValue(minDomVal);\n            pos = axis.getScaleValue(data[type]);\n            let endPos = axis.getScaleValue(data[`${type}0`]);\n\n            enterSpace = 0;\n            const isNegativeVal = data[type] < 0;\n            if (transformType !== STACK) {\n                [pos, endPos] = positionRetriever[type](pos, isNegativeVal, barBasePos);\n            }\n            space = Math.abs(pos - endPos);\n            enter = barBasePos;\n        }\n    } else {\n        pos = 0;\n        space = measurement[spaceType];\n    }\n\n    return {\n        enterSpace,\n        enter,\n        pos,\n        space\n    };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} config\n * @param {*} axes\n *\n */\nconst resolveDimensions = (data, config, axes) => {\n    const axesInfo = {\n        xAxis: axes.x,\n        yAxis: axes.y\n    };\n    const {\n        enterSpace: enterWidth,\n        enter: enterX,\n        pos: xPos,\n        space: width\n    } = resolveDimByField('x', axesInfo, config, data);\n\n    const {\n        enterSpace: enterHeight,\n        enter: enterY,\n        pos: yPos,\n        space: height\n    } = resolveDimByField('y', axesInfo, config, data);\n    return {\n        enter: {\n            x: enterX,\n            y: enterY,\n            width: enterWidth,\n            height: enterHeight\n        },\n        update: {\n            x: xPos,\n            y: yPos,\n            width,\n            height\n        }\n    };\n};\n\n/**\n * Generates an array of objects containing x, y, width and height of the bars from the data\n * @param  {Array.<Array>} data Data Array\n * @param  {Object} encoding  Config\n * @param  {Object} axes     Axes object\n * @param {Object} conf config object for point generation\n * @return {Array.<Object>}  Array of points\n */\nexport const getTranslatedPoints = (context, data, sizeConfig) => {\n    let points = [];\n    const encoding = context.config().encoding;\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const sizeEncoding = encoding.size || {};\n    const {\n            x0Field,\n            y0Field,\n            xFieldSubType,\n            yFieldSubType\n        } = context.encodingFieldsInf();\n    const measurement = context.measurement();\n    const isXDim = xFieldSubType === DimensionSubtype.CATEGORICAL || xFieldSubType === DimensionSubtype.TEMPORAL;\n    const isYDim = yFieldSubType === DimensionSubtype.CATEGORICAL || yFieldSubType === DimensionSubtype.TEMPORAL;\n    const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n    const transformType = context.transformType();\n\n    for (let i = 0, len = data.length; i < len; i++) {\n        const d = data[i];\n        const dimensions = resolveDimensions(d, {\n            xFieldType: xFieldSubType,\n            yFieldType: yFieldSubType,\n            x0Field,\n            y0Field,\n            transformType,\n            measurement,\n            sizeConfig,\n            sizeEncoding\n        }, axes);\n\n        let color = colorAxis.getColor(d.color);\n\n        const update = dimensions.update;\n        const resolvedEncodings = resolveEncodingValues({\n            values: {\n                x: update.x,\n                y: update.y,\n                width: update.width,\n                height: update.height,\n                color\n            },\n            data: d\n        }, i, data, context);\n        color = resolvedEncodings.color;\n        const { x, y, width, height } = resolvedEncodings;\n        const style = {\n            fill: color\n        };\n\n        if (!isNaN(x) && !isNaN(y) && d.rowId !== undefined) {\n            let point = null;\n            point = {\n                enter: dimensions.enter,\n                update: {\n                    x,\n                    y,\n                    width,\n                    height\n                },\n                source: d.source,\n                rowId: d.rowId,\n                style,\n                meta: getColorMetaInf(style, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, context);\n            points.push(point);\n            // Store each point in a hashmap with key as the dimensional or temporal field value\n            context.cachePoint(d[key], point);\n        }\n    }\n\n    points = positionPoints(context, points);\n    return points;\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    createElements,\n    clipElement,\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    Scales,\n    getNearestValue,\n    getObjProp\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawRects } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getPlotMeasurement, getValidTransformForAggFn } from '../../helpers';\nimport './styles.scss';\nimport { getTranslatedPoints } from './bar-helper';\n\nconst MEASURE = FieldType.MEASURE;\nconst scaleBand = Scales.band;\n\n/**\n * Bar layer creates rectangle marks. The mark type of this layer is ```bar```. This layer can be used\n * to create stacked or grouped bars, range bars, heatmap plots and also reference bands by using\n * the encoding properties.\n *\n * @public\n *\n * @class\n * @module BarLayer\n * @extends BaseLayer\n */\nexport default class BarLayer extends BaseLayer {\n    /**\n     * Creates an instance of bar layer\n     */\n    constructor (...params) {\n        super(...params);\n        this._bandScale = scaleBand();\n        this._plotPadding = {\n            x: 0,\n            y: 0\n        };\n        this._plotSpan = {\n            x: 0,\n            y: 0\n        };\n        this._pointMap = {};\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BarLayer\n     */\n    elemType () {\n        return 'rect';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BarLayer\n     */\n    static formalName () {\n        return 'bar';\n    }\n\n    /**\n     * Returns the default configuration of the bar layer\n     * @return {Object} Default configuration of the bar layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     *\n     * @memberof BarLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const colorField = encoding.color.field;\n        const transform = config.transform;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} fieldsConfig\n     *\n     * @memberof BarLayer\n     */\n    calculateDomainFromData (data, encodingFieldInf, fieldsConfig) {\n        const domain = super.calculateDomainFromData(data, encodingFieldInf, fieldsConfig);\n        ['x', 'y'].forEach((d) => {\n            if (encodingFieldInf[`${d}FieldType`] === MEASURE && getObjProp(domain[d], 'length')) {\n                if (encodingFieldInf[`${d}0Field`]) {\n                    domain[d] = domain[d].sort((a, b) => a - b);\n                } else {\n                    domain[d][0] = Math.min(domain[d][0], 0);\n                    domain[d][1] = Math.max(0, domain[d][1]);\n                }\n            }\n        });\n        return domain;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the bars from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @param {Object} conf config object for point generation\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, sizeConfig) {\n        return getTranslatedPoints(this, data, sizeConfig);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGGroup} container SVGGroup where plot will be rendered.\n     * @return {BarLayer} Instance of bar layer.\n     */\n    render (container) {\n        const config = this.config();\n        const transition = config.transition;\n        const normalizedDataArr = this._normalizedData;\n        const transformedData = this._transformedData;\n        const keys = transformedData.map(d => d.key);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const height = axes.y && axes.y.scale().range()[0];\n        const width = axes.x && axes.x.scale().range()[1];\n        const defClassName = config.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const className = config.className;\n        const containerSelection = selectElement(container);\n        const dimensions = Object.values(fieldsConfig).filter(e => e.def.type === FieldType.DIMENSION)\n            .map(e => e.index);\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        clipElement(container, {\n            x: 0,\n            y: 0,\n            width,\n            height\n        }, `id-${this.id()}`);\n\n        this._points = this.generateDataPoints(normalizedDataArr, keys);\n        this._graphicElems = {};\n\n        createElements({\n            data: this._points,\n            container,\n            selector: 'g',\n            append: 'g',\n            each: (points, group, i) => {\n                const seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n                group.style('display', 'block');\n                drawRects({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: {},\n                    keyFn: d => dimensions.map(key => d.source[key]).join('-')\n                });\n            }\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} normalizedData\n     * @param {*} keys\n     *\n     * @memberof BarLayer\n     */\n    generateDataPoints (normalizedData, keys) {\n        const [barWidthMetrics, barHeightMetrics] = getPlotMeasurement(this, keys);\n        const barWidthOffsets = barWidthMetrics.offsetValues || [];\n        const barHeightOffsets = barHeightMetrics.offsetValues || [];\n        this._plotSpan = {\n            x: barWidthMetrics.groupSpan || 0,\n            y: barHeightMetrics.groupSpan || 0\n        };\n        this._plotPadding = {\n            x: barWidthMetrics.padding || 0,\n            y: barHeightMetrics.padding || 0\n        };\n\n        this._pointMap = {};\n        return normalizedData.map((data, i) => this.translatePoints(data,\n            {\n                barWidth: barWidthMetrics.span,\n                barWidthOffset: barWidthOffsets[i] || 0,\n                barHeight: barHeightMetrics.span,\n                barHeightOffset: barHeightOffsets[i] || 0\n            }));\n    }\n\n    getPlotPadding () {\n        return this._plotPadding;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Gets the nearest point of the position passed.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point.\n     */\n    getNearestPoint (x, y) {\n        if (!this.data()) {\n            return null;\n        }\n        let axis;\n        let value;\n        let points;\n        let uniqueFieldType;\n        let uniqueFieldIndex;\n        let filterData;\n        let identifiers;\n        let pointFound = null;\n        const dataModel = this.data();\n        const dataObj = dataModel.getData();\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const axes = this.axes();\n        const data = dataObj.data;\n        const pointMap = this._pointMap;\n        const {\n                xField,\n                yField,\n                xFieldSubType,\n                yFieldSubType\n            } = this.encodingFieldsInf();\n\n        if (xFieldSubType === MeasureSubtype.CONTINUOUS) {\n            axis = axes.y;\n            value = axis.invert(y);\n            uniqueFieldIndex = fieldsConfig[yField].index;\n            uniqueFieldType = yFieldSubType;\n        } else {\n            axis = axes.x;\n            value = axis.invert(x);\n            uniqueFieldIndex = fieldsConfig[xField].index;\n            uniqueFieldType = xFieldSubType;\n        }\n\n        if (uniqueFieldType === DimensionSubtype.CATEGORICAL) {\n            points = pointMap[value];\n        }\n\n        if (uniqueFieldType === DimensionSubtype.TEMPORAL) {\n            filterData = [...new Set(data.map(d => d[uniqueFieldIndex]))];\n            value = getNearestValue(filterData, value);\n            points = pointMap[value];\n        }\n        const len = points && points.length;\n        points && points.sort((p1, p2) => p1.update.y - p2.update.y);\n        for (let i = 0; i < len; i++) {\n            const point = points[i];\n            const update = point.update;\n            if (x >= update.x && x <= (update.width + update.x) && y >= update.y && y <= (update.height + update.y)) {\n                pointFound = point;\n                break;\n            }\n            pointFound = null;\n        }\n\n        const values = pointFound && pointFound.source;\n        if (values) {\n            identifiers = this.getIdentifiersFromData(values, pointFound.rowId);\n        }\n        return pointFound ? {\n            dimensions: [pointFound.update],\n            id: identifiers,\n            layerId: this.id()\n        } : pointFound;\n    }\n\n    getPlotSpan () {\n        return this._plotSpan;\n    }\n\n    hasPlotSpan () {\n        return true;\n    }\n}\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-tick',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }]\n    },\n    innerPadding: 0.1,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    interpolate: 'linear',\n    encoding: {\n        color: { },\n        x: {},\n        y: {},\n        x0: {},\n        y0: {},\n        radius: {},\n        radius0: {},\n        angle: {},\n        angle0: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-tick-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-tick-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-tick-selected`\n        }\n    }\n};\n\n","import { selectElement, Symbols, pathInterpolators } from 'muze-utils';\n\nconst line = Symbols.line;\n\n/**\n * Draws ticks by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Ticks Selection\n */\nexport default /* istanbul ignore next */ (params) => {\n    const { points, container, keyFn, className, interpolate, layer } = params;\n    const mount = selectElement(container);\n    const ticks = mount.selectAll('path').data(points, keyFn);\n    const ticksEnter = ticks.enter().append('path');\n    const graphicElems = layer._graphicElems;\n    mount.attr('class', className || '');\n    ticksEnter.each(function (d) {\n        const selection = selectElement(this);\n        const enter = d.enter || {};\n        Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n    });\n\n    ticks.exit().remove();\n    return ticks.merge(ticksEnter)\n                    .each(function (d) {\n                        const selection = selectElement(this);\n                        graphicElems[d.rowId] = selection;\n                        const update = d.update;\n                        const updateStyle = d.style || {};\n                        const x0 = update.x0 !== undefined ? update.x0 : update.x;\n                        const y0 = update.y0 !== undefined ? update.y0 : update.y;\n                        const curveInterpolatorFn = pathInterpolators[interpolate];\n                        const linepath = line()\n                            .curve(curveInterpolatorFn)\n                            .x(e => e[0])\n                            .y(e => e[1]);\n                        d.className && selection.classed(d.className, true);\n                        selection.attr('d', linepath([[update.x, update.y], [x0, y0]]));\n                        Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n                    });\n};\n\n","import { FieldType } from 'muze-utils';\nimport { PointLayer } from '../point';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport drawTicks from './renderer';\nimport './styles.scss';\nimport { getAxesScales, positionPoints, getIndividualClassName,\n    getColorMetaInf, resolveEncodingValues, toCartesianCoordinates } from '../../helpers';\n\nconst pointTranslators = {\n    polar: (data, config = {}, layerInst) => {\n        const axes = layerInst.axes();\n        let points = [];\n        const { radius: radiusAxis, angle: angleAxis, angle0: angle0Axis } = axes;\n        const measurement = layerInst.measurement();\n\n        const colorAxis = axes.color;\n        const angleV = {};\n        const angle0V = {};\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const color = colorAxis.getColor(d.color);\n            const angles = angleAxis.getScaleValue(d.angle);\n            !angleV[d.angle] && (angleV[d.angle] = 0);\n            const { startAngle, endAngle } = angles[angleV[d.angle]++];\n            const angles0 = angle0Axis.getScaleValue(d.angle0);\n            !angle0V[d.angle0] && (angle0V[d.angle0] = 0);\n            const { startAngle: startAngle0, endAngle: endAngle0 } = angles0[angle0V[d.angle0]++];\n            const radius = radiusAxis.getOuterRadius(d.radius);\n            const angle = (startAngle + endAngle) / 2;\n            const angle0 = (startAngle0 + endAngle0) / 2;\n            const resolvedVal = resolveEncodingValues({\n                values: {\n                    radius,\n                    radius0: radiusAxis.getInnerRadius(d.radius0),\n                    color,\n                    angle,\n                    angle0,\n                    startAngle,\n                    endAngle,\n                    startAngle0,\n                    endAngle0\n                },\n                data: d\n            }, i, data, layerInst);\n            const style = {\n                stroke: resolvedVal.color\n            };\n\n            const point = {\n                enter: {},\n                update: {\n                    radius: resolvedVal.radius,\n                    radius0: resolvedVal.radius0,\n                    angle: resolvedVal.angle,\n                    angle0: resolvedVal.angle0\n                },\n                style,\n                source: d.source,\n                rowId: d.rowId,\n                meta: getColorMetaInf(style, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n        points = toCartesianCoordinates(positionPoints(layerInst, points), measurement, true);\n        return points;\n    },\n    cartesian: (data, config = {}, layerInst) => {\n        const axes = layerInst.axes();\n        let points = [];\n        const {\n                xAxis,\n                yAxis\n            } = getAxesScales(axes);\n        const {\n                xField,\n                yField,\n                x0Field,\n                y0Field,\n                xFieldType,\n                yFieldType\n            } = layerInst.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const measurement = layerInst.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n        const { x: xSpan, y: ySpan } = config.span;\n        for (let i = 0, len = data.length; i < len; i++) {\n            let xPx;\n            let x0Px;\n            let y0Px;\n            let yPx;\n            const d = data[i];\n            const row = d.source;\n            if (xField) {\n                xPx = xAxis.getScaleValue(d.x) + offsetX;\n                x0Px = xPx + xSpan;\n            }\n\n            if (yField) {\n                yPx = yAxis.getScaleValue(d.y) + offsetY;\n                y0Px = yPx !== null ? yPx + ySpan : null;\n            }\n\n            if (!xField) {\n                xPx = 0;\n                x0Px = measurement.width;\n                if (!isNaN(yPx)) {\n                    yPx += ySpan / 2;\n                    y0Px = yPx;\n                }\n            }\n\n            if (!yField) {\n                yPx = 0;\n                y0Px = measurement.height;\n                x0Px = xPx += xSpan / 2;\n            }\n\n            if (x0Field) {\n                x0Px = xAxis.getScaleValue(d.x0) + xSpan;\n                yPx += ySpan / 2;\n                y0Px -= ySpan / 2;\n            }\n\n            if (y0Field) {\n                y0Px = yAxis.getScaleValue(d.y0) + ySpan;\n                xPx += xSpan / 2;\n                x0Px -= xSpan / 2;\n            }\n            const color = colorAxis.getColor(d.color);\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    x0: x0Px,\n                    y0: y0Px,\n                    color\n                },\n                data: d\n            }, i, data, layerInst);\n            const style = {\n                stroke: resolvedEncodings.color\n            };\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {},\n                    update: {\n                        x: resolvedEncodings.x,\n                        y: resolvedEncodings.y,\n                        x0: resolvedEncodings.x0,\n                        y0: resolvedEncodings.y0\n                    },\n                    style,\n                    source: row,\n                    rowId: d.rowId,\n                    meta: getColorMetaInf(style, colorAxis)\n                };\n                point.className = getIndividualClassName(d, i, data, layerInst);\n                points.push(point);\n                layerInst.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(layerInst, points);\n        return points;\n    }\n};\n\n/**\n * This layer is used to create small lines. The orientation of the line is determined by the positional\n * encoding properties x0 and y0. The mark type of the layer is ```tick```.\n *\n * @public\n *\n * @class\n * @module TickLayer\n * @extends BaseLayer\n */\nexport default class TickLayer extends PointLayer {\n\n    /**\n     *\n     *\n     * @staticg\n     *\n     * @memberof TickLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static formalName () {\n        return 'tick';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static drawFn () {\n        return drawTicks;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TickLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config) {\n        return pointTranslators[this.coord()](data, config, this);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0),\n                y: (offsetY || 0)\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n}\n","export const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { isSimpleObject, mergeRecursive, getObjProp } from 'muze-utils';\n\nconst parseLayerDefinition = (sink, definition, layerDef, layerType) => {\n    for (const key in definition) {\n        if (Object.hasOwnProperty.call(definition, key)) {\n            let strs;\n            let propValue;\n            const def = definition[key];\n            if (isSimpleObject(def)) {\n                sink[key] = {};\n                parseLayerDefinition(sink[key], def, layerDef, layerType);\n            } else if (typeof def === 'string' && (strs = def.split('.')) && strs[0] === layerType) {\n                propValue = getObjProp(layerDef, ...strs.slice(1, strs.length));\n                if (propValue !== undefined) {\n                    sink[key] = propValue;\n                }\n            } else {\n                sink[key] = def;\n            }\n        }\n    }\n};\n\nconst sanitizeEncoding = (encoding) => {\n    // Create object for each encoding value if encoding value is a string\n    for (const key in encoding) {\n        if (typeof encoding[key] === 'string') {\n            encoding[key] = {\n                field: encoding[key]\n            };\n        }\n    }\n};\n\n/**\n * Layer Factory creates layers based on the layer type. All types of layers needs to register in\n * the layer factory. For getting a layer instance, getLayer method needs to invoked with the\n * layerType and other arguments. It also registers the definition of composite layers.\n *\n * @public\n *\n * @module LayerFactory\n */\nconst layerFactory = (() => {\n    const compositeLayers = {};\n    const factoryObj = {\n        setLayerRegistry: (reg) => {\n            factoryObj._layerRegistry = reg;\n        },\n        getSerializedConf: (mark, layerDef) => {\n            let serializedDefs;\n            const defs = compositeLayers[mark];\n            const newConf = mergeRecursive({}, layerDef);\n\n                // If it is a composite layer then resolve all the definitions of each unit layer\n            if (defs) {\n                serializedDefs = defs.map((unitLayerDef) => {\n                    const sDef = {};\n                    parseLayerDefinition(sDef, unitLayerDef, newConf, mark);\n                    sanitizeEncoding(sDef.encoding);\n                    return sDef;\n                });\n            } else {\n                const encoding = newConf.encoding;\n                // Create object for each encoding value if encoding value is a string\n                sanitizeEncoding(encoding);\n                serializedDefs = newConf;\n            }\n\n            return serializedDefs;\n        },\n        getLayerInstance: (layerDef, ...params) => {\n            const layerRegistry = factoryObj._layerRegistry;\n            layerDef = !(layerDef instanceof Array) ? [layerDef] : layerDef;\n            const instances = layerDef.map((layerObj) => {\n                const layerConstructor = layerRegistry[layerObj.mark];\n                return layerConstructor.create(...params);\n            });\n            return instances.length === 1 ? instances[0] : instances;\n        },\n        getLayerClass: mark => factoryObj._layerRegistry[mark],\n        /**\n         * Registers a new composite layer definition in the layer factory.\n         *\n         * @public\n         *\n         * @param {string} layerType Mark type of the new composite layer.\n         * @param {Array} layerDefs Layer definitions of the composite layer.\n         */\n        composeLayers: (layerType, layerDefs) => {\n            compositeLayers[layerType] = layerDefs;\n        },\n        sanitizeLayerConfig: (layerDef) => {\n            const newConf = mergeRecursive({}, layerDef);\n            sanitizeEncoding(newConf.encoding);\n            return newConf;\n        }\n    };\n    return factoryObj;\n})();\n\nexport default layerFactory;\n","import layerFactory from './layer-factory';\n\nexport default layerFactory;\n","import { AreaLayer } from './layers/area';\nimport { ArcLayer } from './layers/arc';\nimport { LineLayer } from './layers/line';\nimport { TextLayer } from './layers/text';\nimport { PointLayer } from './layers/point';\nimport { BarLayer } from './layers/bar';\nimport { BaseLayer } from './base-layer';\nimport * as LAYER_TYPES from './enums/layer-types';\nimport { TickLayer } from './layers/tick';\n\nexport const DEFAULT_LAYERS = {\n    [LAYER_TYPES.AREA_LAYER]: AreaLayer,\n    [LAYER_TYPES.ARC_LAYER]: ArcLayer,\n    [LAYER_TYPES.LINE_LAYER]: LineLayer,\n    [LAYER_TYPES.TEXT_LAYER]: TextLayer,\n    [LAYER_TYPES.POINT_LAYER]: PointLayer,\n    [LAYER_TYPES.TICK_LAYER]: TickLayer,\n    [LAYER_TYPES.BAR_LAYER]: BarLayer,\n    [LAYER_TYPES.BASE_LAYER]: BaseLayer\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Artboard.\n * Artboard merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module\n */\n\nexport default {\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * Interfaces for VisualGroup. Any new VisualGroup has to implement this class.\n * @class  SimpleGroup\n */\nclass SimpleGroup {\n\n    /**\n     * This method is used to set or get the DataModel instance.\n     *\n     * @param {DataModel | undefined} dataModel Instance of datamodel.\n\n     * @memberof  SimpleGroup\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to set or get the group specific configuration\n     * properties\n     *\n     * @param {Object | undefined} configObj The input configuration.\n     *                                or instance of visual group.\n     * @memberof  SimpleGroup\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to return a serialized representation of the\n     * instance's properties.\n     *\n     * @memberof  SimpleGroup\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to get or set the measurement object which houses\n     * layout properties like width and height.\n     *\n     * @param {Object  | undefined} mObj The measurement properties.\n     * @memberof  SimpleGroup\n     */\n    measurement () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n\nexport default SimpleGroup;\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: false\n    },\n    [ACTIONS.HOVER]: {\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.LONGTOUCH]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: true\n    },\n    [ACTIONS.TOUCHDRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: true\n    },\n    [ACTIONS.CLICK]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: false\n    }\n};\n","import {\n    FieldType,\n    getDependencyOrder,\n    getObjProp,\n    defaultValue,\n    objectIterator,\n    unionDomain,\n    makeElement,\n    DimensionSubtype,\n    toArray,\n    MeasureSubtype,\n    getNearestValue\n} from 'muze-utils';\nimport { layerFactory, ENCODING } from '@chartshq/visual-layer';\n\nexport const getDimensionMeasureMap = (layers, fieldsConfig) => {\n    const retinalEncodingsAndMeasures = {};\n\n    layers.forEach((layer) => {\n        const {\n            colorField,\n            sizeField,\n            shapeField,\n            xField,\n            yField\n        } = layer.encodingFieldsInf();\n        const measures = [xField, yField].filter(field => fieldsConfig[field] && fieldsConfig[field].def.type ===\n            FieldType.MEASURE);\n        [colorField, sizeField, shapeField].forEach((field) => {\n            if (getObjProp(fieldsConfig, field, 'def', 'type') === FieldType.DIMENSION && measures.length) {\n                !retinalEncodingsAndMeasures[field] && (retinalEncodingsAndMeasures[field] = []);\n                retinalEncodingsAndMeasures[field].push(...measures);\n            }\n        });\n    });\n\n    for (const key in retinalEncodingsAndMeasures) {\n        if ({}.hasOwnProperty.call(retinalEncodingsAndMeasures, key)) {\n            retinalEncodingsAndMeasures[key] = [...new Set(retinalEncodingsAndMeasures[key])];\n        }\n    }\n    return retinalEncodingsAndMeasures;\n};\n\nexport const transformDataModels = (transform, dataModel) => {\n    const dataModels = {};\n    for (const key in transform) {\n        if ({}.hasOwnProperty.call(transform, key)) {\n            const transformVal = transform[key];\n            dataModels[key] = transformVal(dataModel);\n        }\n    }\n\n    return dataModels;\n};\n\nexport const getLayerFromDef = (context, definition, existingLayer, namespaces) => {\n    let instances = existingLayer;\n    const dependencies = context._dependencies;\n    const metaInf = context.metaInf();\n    if (!existingLayer) {\n        instances = layerFactory.getLayerInstance(definition);\n        toArray(instances).forEach((inst, i) => {\n            inst.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: namespaces[i],\n                parentNamespace: metaInf.namespace\n            })\n                .dependencies(dependencies)\n                .store(context.store());\n        });\n    }\n    const layers = {};\n    const instanceArr = toArray(instances);\n    definition = toArray(definition);\n    definition.reduce((acc, def, idx) => {\n        const instance = instanceArr[idx];\n        instance.coord(context.coord());\n        instance.config(def);\n        instance.valueParser(context.valueParser());\n        instance.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        if (def.name) {\n            instance.alias(def.name);\n        }\n        layers[instance.alias()] = instance;\n        return acc;\n    }, {});\n    return layers;\n};\n\nexport const resolveEncodingTransform = (layerInst, store) => {\n    const encodingTransform = layerInst.config().encodingTransform || {};\n    const resolvable = encodingTransform.resolvable;\n    let depArr = [];\n    if (resolvable) {\n        const resolved = resolvable(store);\n        depArr = resolved.depArr;\n        layerInst.encodingTransform(resolved.fn);\n    } else if (encodingTransform instanceof Function) {\n        layerInst.encodingTransform(encodingTransform);\n    }\n    return depArr;\n};\n\nexport const sanitizeLayerDef = (layerDefs) => {\n    const sanitizedDefs = [];\n    layerDefs.forEach((layerDef, i) => {\n        const def = layerDef.def;\n        const mark = layerDef.mark;\n        if (!def) {\n            const sConf = layerFactory.getSerializedConf(layerDef.mark, layerDef);\n            if (!sConf.name) {\n                sConf.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push({\n                mark: layerDef.mark,\n                def: sConf\n            });\n        } else {\n            if (!def.name) {\n                def.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push(layerDef);\n        }\n    });\n    return sanitizedDefs;\n};\n\nexport const attachDataToLayers = (layers, dm, transformedDataModels) => {\n    layers.forEach((layer) => {\n        const dataSource = layer.config().source;\n        const dataModel = dataSource instanceof Function ? dataSource(dm) :\n            (transformedDataModels[dataSource] || dm);\n        layer.data(dataModel);\n    });\n};\n\nexport const attachAxisToLayers = (axes, layers, layerAxisIndex) => {\n    layers.forEach((layer) => {\n        const layerId = layer.id();\n        const axesObj = {};\n\n        objectIterator(axes, (key) => {\n            const axisInf = layerAxisIndex[layerId];\n            if (axisInf) {\n                const axisArr = axes[key] || [];\n                const axisIndex = axisInf[key] >= 0 ? axisInf[key] : axisArr.length - 1;\n                axes[key] && (axesObj[key] = defaultValue(axes[key][axisIndex]));\n            }\n        });\n        Object.keys(axesObj).length && layer.axes(axesObj);\n    });\n};\n\nconst { X, Y, RADIUS, ANGLE, ANGLE0, RADIUS0 } = ENCODING;\n\nexport const getLayerAxisIndex = (layers, fields) => {\n    const layerAxisIndex = {};\n    layers.forEach((layer) => {\n        const { axis, encoding } = layer.config();\n        const id = layer.id();\n        [X, Y, ANGLE, ANGLE0, RADIUS].forEach((type) => {\n            let index;\n            const specificField = getObjProp(encoding, type, 'field');\n            const encodingField = type === RADIUS ? defaultValue(specificField, getObjProp(encoding, RADIUS0, 'field'))\n                : getObjProp(encoding, type, 'field');\n            const field = defaultValue(getObjProp(axis, type), encodingField);\n            if (fields[type] && fields[type].length) {\n                index = fields[type].findIndex(fieldInst => fieldInst.getMembers().indexOf(field) !== -1);\n            } else {\n                index = 0;\n            }\n            !layerAxisIndex[id] && (layerAxisIndex[id] = {});\n            layerAxisIndex[id][type] = index;\n        });\n    });\n    return layerAxisIndex;\n};\n\nconst getValidDomain = (domain, domain1, encodingType, fieldType) => {\n    if (encodingType === ANGLE || encodingType === ANGLE0) {\n        return domain.concat(domain1.filter(d => domain.indexOf(d) === -1));\n    }\n    return unionDomain([domain, domain1], fieldType);\n};\n\nexport const unionDomainFromLayers = (layers, axisFields, layerAxisIndex, fieldsConfig) => {\n    let domains = {};\n    layers = layers.filter(layer => layer.getDataDomain() !== null);\n    layers.forEach((layer) => {\n        let domainValues = {};\n        const config = layer.config();\n        // const encoding = config.encoding;\n        const layerDomain = layer.getDataDomain();\n        const layerId = layer.id();\n\n        if (layerDomain !== null && config.calculateDomain !== false) {\n            domainValues = Object.entries(layerDomain);\n            domains = domainValues.reduce((fieldDomain, domain) => {\n                const encodingType = domain[0];\n                const axisIndex = layerAxisIndex[layerId][encodingType];\n                const field = getObjProp(axisFields, encodingType, axisIndex);\n                !fieldDomain[encodingType] && (fieldDomain[encodingType] = {});\n                const encodingDomain = fieldDomain[encodingType];\n                if (field) {\n                    const fieldStr = `${field}`;\n                    encodingDomain[fieldStr] = encodingDomain[fieldStr] || [];\n                    encodingDomain[fieldStr] = getValidDomain(encodingDomain[fieldStr],\n                        domain[1], encodingType, fieldsConfig[field.getMembers()[0]].def.subtype);\n                }\n                return fieldDomain;\n            }, domains);\n        }\n    });\n    return domains;\n};\n\nexport const renderLayers = (context, container, layers, measurement) => {\n    context._lifeCycleManager.notify({ client: layers, action: 'beforedraw', formalName: 'layer' });\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const orderedLayers = context.layers().sort((a, b) => a.config().order - b.config().order);\n    const layerParentGroup = makeElement(container, 'g', [1], `${classPrefix}-layer-group`);\n    const layerDepOrder = getDependencyOrder(context._layerDepOrder);\n    const groups = {};\n    makeElement(layerParentGroup, 'g', orderedLayers, null, {\n        update: (group, layer) => {\n            groups[layer.alias()] = {\n                group,\n                layer\n            };\n        }\n    });\n\n    const layerSeq = layerDepOrder.map(name => groups[name]);\n    layerSeq.forEach((o) => {\n        const layer = o.layer;\n        const group = o.group;\n        layer.measurement(measurement);\n        layer.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        layer.config().render !== false && layer.mount(group.node());\n    });\n    return this;\n};\n\nexport const getNearestDimensionalValue = (context, position) => {\n    const fields = context.fields();\n    if (!fields.x.length || !fields.y.length) {\n        return null;\n    }\n    const data = context.data();\n    const axes = context.axes();\n    const fieldsConfig = data.getFieldsConfig();\n    const xField = getObjProp(fields, 'x', 0).getMembers()[0];\n    const yField = getObjProp(fields, 'y', 0).getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n\n    const entryVal = [['x', xFieldType, xField], ['y', yFieldType, yField]].find(entry =>\n        entry[1] === DimensionSubtype.CATEGORICAL || entry[1] === DimensionSubtype.TEMPORAL);\n\n    if (!entryVal || (xFieldType !== MeasureSubtype.CONTINUOUS && yFieldType !== MeasureSubtype.CONTINUOUS)) {\n        return null;\n    }\n    const field = entryVal[2];\n    const index = fieldsConfig[field].index;\n    let key = axes[entryVal[0]][0].invert(position[entryVal[0]]);\n    if (entryVal[1] === DimensionSubtype.TEMPORAL) {\n        const filterData = [...new Set(data.getData().data.map(d => d[index]))];\n        key = getNearestValue(filterData, key);\n    }\n\n    return key !== undefined ? [[field], [key]] : null;\n};\n\nexport const getLayersBy = (layers, searchBy, value) => layers.filter((layer) => {\n    const name = searchBy === 'type' ? layer.constructor.formalName() : layer.alias();\n    return name === value;\n});\n\nexport const removeLayersBy = (layers, searchBy, value) => {\n    layers.filter((inst) => {\n        const name = searchBy === 'type' ? inst.config().mark : inst.alias();\n        if (name === value) {\n            inst.remove();\n            return false;\n        }\n        return true;\n    });\n};\n\nexport const createSideEffectGroup = (container, className) => makeElement(container, 'g', [1], className).node();\n\nexport const createRenderPromise = (unit) => {\n    const renderedPromise = unit._renderedPromise;\n    renderedPromise.then(() => {\n        unit._renderedPromise = new Promise((resolve) => {\n            unit._renderedResolve = resolve;\n        });\n        createRenderPromise(unit);\n    });\n};\n\nexport const getRadiusRange = (width, height, config = {}) => {\n    const {\n        innerRadius,\n        outerRadius\n    } = config;\n\n    return [innerRadius || 0, outerRadius || Math.min(height,\n        width) / 2];\n};\n\nexport const setAxisRange = (context) => {\n    const axes = context.axes();\n    const { radius: radiusAxes } = axes;\n    if (radiusAxes) {\n        radiusAxes.forEach((axis) => {\n            axis.range(getRadiusRange(context.width(), context.height()));\n        });\n    }\n};\n\nexport const isXandYMeasures = (context) => {\n    const { x: xFields, y: yFields } = context.fields();\n    const [xMeasures, yMeasures] = [xFields, yFields].map(fields => fields\n        .every(field => field.type() === FieldType.MEASURE));\n    return xMeasures && yMeasures;\n};\n\nconst getKey = (arr, row) => {\n    let key = row[arr[0]];\n    for (let i = 1, len = arr.length; i < len; i++) {\n        key = `${key},${row[arr[i]]}`;\n    }\n    return key;\n};\n\nexport const getValuesMap = (model, context) => {\n    const valuesMap = {};\n    const { data: dataArr, schema, uids } = model.getData();\n    const fieldsConfig = model.getFieldsConfig();\n    const fieldIndices = isXandYMeasures(context) ? schema.map((d, i) => i) :\n                            Object.keys(model.getFieldspace().getDimension()).map(d => fieldsConfig[d].index);\n    dataArr.forEach((row, i) => {\n        const key = getKey(fieldIndices, row);\n        valuesMap[key] = uids[i];\n    });\n    return valuesMap;\n};\n\nexport const getSelectionRejectionModel = (model, propModel, measures, propValuesMap) => {\n    let rejectionModel;\n    const { data, schema } = propModel.getData();\n    const entryRowIds = [];\n    const exitRowIds = [];\n\n    if (schema.length) {\n        const fieldMap = model.getFieldsConfig();\n        const rowIdsObj = {};\n        const filteredSchema = measures ? schema.map((d, idx) => idx) :\n            Object.keys(model.getFieldspace().getDimension()).map(d => fieldMap[d].index);\n        data.forEach((row) => {\n            const key = getKey(filteredSchema, row);\n            const id = propValuesMap[key];\n            if (key in propValuesMap) {\n                entryRowIds.push(id);\n                rowIdsObj[id] = 1;\n            }\n        });\n        rejectionModel = model.select((fields, i) => {\n            if (!rowIdsObj[i]) {\n                exitRowIds.push(i);\n                return true;\n            }\n            return false;\n        }, {\n            saveChild: false\n        });\n    } else {\n        rejectionModel = propModel;\n    }\n\n    return {\n        model: [propModel, rejectionModel],\n        entryRowIds,\n        exitRowIds\n    };\n};\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const GRID_LINE_PARENT_GROUP_CLASS = 'grid-lines';\nexport const GRID_BAND_PARENT_GROUP_CLASS = 'grid-bands';\nexport const GRID_PARENT_GROUP = 'grid-parent-group';\nexport const BAND = 'band';\nexport const TICK = 'tick';\nexport const GRID_BAND = 'gridBands';\nexport const GRID_LINE = 'gridLines';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const RETINAL_FIELDS = 'retinalFields';\nexport const PARENT_ALIAS = 'parentAlias';\nexport const LAYERS = 'layers';\nexport const CACHED_DATA = 'cachedData';\nexport const STORE = 'store';\n","import { getObjProp, defaultValue, makeElement, DimensionSubtype, DataModel, createSelection } from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { layerFactory, LAYER_TYPES } from '@chartshq/visual-layer';\nimport {\n    GRID_BAND,\n    GRID_LINE,\n    GRID_BAND_PARENT_GROUP_CLASS,\n    GRID_LINE_PARENT_GROUP_CLASS,\n    GRID_PARENT_GROUP\n} from '../enums/constants';\n\nconst { BAR_LAYER, TICK_LAYER } = LAYER_TYPES;\n\nconst LINEAR = ScaleType.LINEAR;\n\nconst getLayerDefinition = (context, axes, type, orientation) => {\n    let encoding;\n    const config = context.config();\n    const { classPrefix, gridLines, gridBands } = config;\n    const gridLineColor = gridLines.color;\n    const zeroLineColor = gridLines.zeroLineColor;\n    const defClassName = type === GRID_BAND ? gridBands.defClassName : gridLines.defClassName;\n    const gridBandColor = gridBands[orientation].color;\n    const axis = axes[orientation][0];\n    const isLinearScale = axis.constructor.type() === LINEAR;\n\n    if (type === GRID_BAND && isLinearScale) {\n        encoding = {\n            [orientation]: `${orientation}value`,\n            [`${orientation}0`]: `${orientation}value0`\n        };\n    } else {\n        encoding = {\n            [orientation]: isLinearScale ? `${orientation}value` : `${orientation}dim`\n        };\n    }\n    encoding.color = {\n        value: (data, i) => {\n            const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n            if (type === GRID_BAND) {\n                return gridBandColor[i % 2];\n            }\n            return isNegativeDomain && data[orientation] === 0 ? zeroLineColor : gridLineColor;\n        }\n    };\n    const { color, shape, size } = context.axes();\n    return {\n        definition: {\n            defClassName: `${defClassName}-${orientation}`,\n            className: config.className,\n            name: orientation,\n            calculateDomain: false,\n            individualClassName: (data, i) => {\n                let className;\n                const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n                if (isNegativeDomain && data.y === 0 && type !== GRID_BAND) {\n                    className = `${classPrefix}-axis-zero-line`;\n                } else {\n                    className = `${classPrefix}-grid-${type}-${orientation}-${i % 2}`;\n                }\n                return className;\n            },\n            [`pad${orientation.toUpperCase()}`]: type === GRID_BAND ? 0 : undefined,\n            encoding\n        },\n        axes: {\n            [orientation]: axis,\n            color: color[0],\n            shape: shape[0],\n            size: size[0]\n        },\n        interactive: false\n    };\n};\n\nconst getDefaultVisibilty = (show, axis) => {\n    if (axis.constructor.type() === LINEAR) {\n        return show;\n    }\n    return false;\n};\n\nexport const getGridLayerDefinitions = (context, config, type) => ['x', 'y'].map((axisType) => {\n    const axes = context.axes();\n    if (!axes[axisType]) {\n        return null;\n    }\n    const show = defaultValue(config[axisType] && config[axisType].show,\n        getDefaultVisibilty(config.show, axes[axisType][0]));\n\n    return show ? getLayerDefinition(context, axes, type, axisType) : null;\n}).filter(d => d !== null);\n\nconst dimensionSubTypes = Object.values(DimensionSubtype).reduce((acc, v) => {\n    acc[v] = 1;\n    return acc;\n}, {});\nconst getValidSubtype = subtype => (!dimensionSubTypes[subtype] ? DimensionSubtype.CATEGORICAL : subtype);\n\nexport const getGridLayerData = (axes, fields, fieldsConfig) => {\n    const gridData = {};\n\n    ['x', 'y'].forEach((type) => {\n        let ticks = axes[type][0].getTickValues();\n        const subtype = getObjProp(fieldsConfig, getObjProp(fields, type, 0).getMembers()[0], 'def', 'subtype');\n        const jsonData = [];\n        const schema = [\n            {\n                name: 'yvalue',\n                type: 'measure'\n            }, {\n                name: 'xvalue',\n                type: 'measure'\n            },\n            {\n                name: 'yvalue0',\n                type: 'measure'\n            }, {\n                name: 'xvalue0',\n                type: 'measure'\n            }, {\n                name: 'xdim',\n                type: 'dimension',\n                subtype: getValidSubtype(subtype)\n            }, {\n                name: 'ydim',\n                type: 'dimension',\n                subtype: getValidSubtype(subtype)\n            }\n        ];\n        const len = Math.max(ticks.length);\n        ticks = subtype === DimensionSubtype.TEMPORAL ? ticks.map(d => d.getTime()) : ticks;\n        for (let i = 0; i < len; i += 1) {\n            jsonData.push({\n                [`${type}value`]: ticks[i],\n                [`${type}value0`]: ticks[i + 1],\n                [`${type}dim`]: ticks[i],\n                [`${type}dim`]: ticks[i]\n            });\n        }\n        gridData[type] = new DataModel(jsonData, schema);\n    });\n    return gridData;\n};\n\nexport const createGridLineLayer = (context) => {\n    const vuConf = context.config();\n    const metaInf = context.metaInf();\n    const store = context.store();\n    const timeDiffs = context._timeDiffs;\n    [GRID_BAND, GRID_LINE].forEach((type) => {\n        let mark;\n        let config;\n        if (type === GRID_BAND) {\n            mark = BAR_LAYER;\n            config = vuConf.gridBands;\n        } else {\n            mark = TICK_LAYER;\n            config = vuConf.gridLines;\n        }\n        const definitions = getGridLayerDefinitions(context, config, type);\n\n        const sel = `_${type}Selection`;\n        context[sel] = createSelection(context[sel], (atomicDef) => {\n            const inst = layerFactory.getLayerInstance({ mark });\n            inst.dependencies(context._dependencies);\n            const name = atomicDef.definition.name;\n            inst.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: `${metaInf.namespace}${type}${name}`,\n                parentNamespace: metaInf.namespace\n            })\n                .store(store);\n            return inst;\n        }, definitions, atomicDef => atomicDef.definition.name);\n        context[sel].each((layer, atomicDef) => {\n            const definition = atomicDef.definition;\n            const sConf = layerFactory.getSerializedConf(mark, definition);\n            const axesObj = atomicDef.axes;\n            layer.config(sConf)\n                .dataProps({\n                    timeDiffs\n                })\n                .axes(axesObj);\n        });\n        context[`_${type}`] = context[sel].getObjects();\n    });\n};\n\nexport const attachDataToGridLineLayers = (context) => {\n    const axes = context.axes();\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n    if (gridLines.length || gridBands.length) {\n        const gridLayerData = getGridLayerData(axes, context.fields(), context.data().getFieldsConfig());\n        [].concat(...gridBands, ...gridLines).forEach((inst) => {\n            inst.data(inst.axes().x ? gridLayerData.x : gridLayerData.y);\n        });\n    }\n};\n\nexport const renderGridLineLayers = (context, container) => {\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n    const measurement = {\n        width: context.width(),\n        height: context.height()\n    };\n    const gridLineParentGroup = makeElement(container, 'g', [1], `${classPrefix}-${GRID_PARENT_GROUP}`);\n\n    [[gridLines, `${classPrefix}-${GRID_LINE_PARENT_GROUP_CLASS}`],\n            [gridBands, `${classPrefix}-${GRID_BAND_PARENT_GROUP_CLASS}`]].forEach((entry) => {\n                const [instances, parentGroupClass] = entry;\n                const mountPoint = makeElement(gridLineParentGroup, 'g', [1], `.${parentGroupClass}`);\n                const className = `${parentGroupClass}-group`;\n                makeElement(mountPoint, 'g', instances, `.${className}`, {\n                    update: (group, instance) => {\n                        instance.dataProps({ timeDiffs: context._timeDiffs })\n                            .measurement(measurement)\n                            .mount(group.node());\n                    }\n                });\n            });\n};\n","import { STATE_NAMESPACES, temporalFields, getObjProp, defaultValue } from 'muze-utils';\nimport * as PROPS from './enums/reactive-props';\nimport {\n    transformDataModels,\n    getDimensionMeasureMap,\n    attachDataToLayers,\n    attachAxisToLayers,\n    unionDomainFromLayers\n} from './helper';\n\nimport { createGridLineLayer } from './helper/grid-lines';\n\nconst removeExitLayers = (layerDefs, context) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    layerDefs.forEach((layerDef, i) => {\n        const id = defaultValue(layerDef.name, `${layerDef.mark}-${i}`);\n        markSet[id] = true;\n    });\n\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n};\n\nexport const calculateDomainListener = (context) => {\n    const { namespace } = context.metaInf();\n    const domain = unionDomainFromLayers(context.layers(), context.fields(), context._layerAxisIndex,\n        context.data().getFieldsConfig());\n    context.store().commit(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}`, domain, namespace);\n};\n\nexport const listenerMap = [\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.LAYERDEFS],\n        listener: (context, [, layerDefs]) => {\n            const fieldsVal = context.fields();\n            if (layerDefs && fieldsVal) {\n                removeExitLayers(layerDefs, context);\n                const queuedLayerDefs = context._queuedLayerDefs;\n                let layerDefArr = layerDefs;\n                queuedLayerDefs.forEach((defFn) => {\n                    layerDefArr = [...layerDefArr, ...defFn(layerDefs)];\n                });\n                context.addLayer(layerDefArr);\n                const adjustRange = context.layers().some(inst => inst.hasPlotSpan());\n                ['x', 'y'].forEach((type) => {\n                    const axisArr = defaultValue(getObjProp(context.axes(), type), []);\n                    axisArr.forEach((axis) => {\n                        axis.config({\n                            adjustRange\n                        });\n                    });\n                });\n                context._lifeCycleManager.notify({\n                    client: context.layers(),\n                    action: 'initialized',\n                    formalName: 'layer'\n                });\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.DATA],\n        listener: (context, [, dataModel]) => {\n            if (dataModel) {\n                const axesObj = context.axes();\n                const timeDiffs = {};\n                const timeDiffsByField = {};\n\n                Object.entries(temporalFields(dataModel)).forEach(([fieldName, fieldObj]) => {\n                    timeDiffsByField[fieldName] = fieldObj.minimumConsecutiveDifference();\n                });\n\n                Object.entries(context.fields()).forEach(([type, [field]]) => {\n                    if (field) {\n                        const timeDiff = timeDiffsByField[`${field}`];\n                        if (timeDiff) {\n                            timeDiffs[type] = timeDiff;\n                            axesObj[type].forEach(axis => axis.minDiff(timeDiff));\n                        }\n                    }\n                });\n\n                context._timeDiffsByField = timeDiffsByField;\n                context._timeDiffs = timeDiffs;\n                const firebolt = context.firebolt();\n                const originalData = context.cachedData()[0];\n                firebolt.createSelectionSet(context.data().getUids());\n                firebolt.attachPropagationListener(originalData);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.CONFIG],\n        listener: (context, [, config]) => {\n            if (config) {\n                context.firebolt().config(config.interaction);\n                createGridLineLayer(context);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.DATA, PROPS.TRANSFORM],\n        listener: (context, [, dataModel], [, transform]) => {\n            if (dataModel) {\n                const dataModels = transformDataModels(transform, dataModel);\n                const metaInf = context.metaInf();\n                context.store().commit(`${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${PROPS.TRANSFORMEDDATA}`,\n                    dataModels, metaInf.namespace);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.TRANSFORMEDDATA, PROPS.LAYERS],\n        listener: (context, [, transformedData], [, layers]) => {\n            const layerAxisIndexVal = context._layerAxisIndex;\n            const axesVal = context.axes();\n            const dataModel = context.data();\n            if (transformedData && layers && axesVal && layerAxisIndexVal) {\n                context._lifeCycleManager.notify({ client: layers, action: 'beforeupdate', formalName: 'layer' });\n                attachDataToLayers(layers, dataModel, transformedData);\n                context._dimensionMeasureMap = getDimensionMeasureMap(layers,\n                    dataModel.getFieldsConfig(), context.retinalFields());\n                attachAxisToLayers(axesVal, layers, layerAxisIndexVal);\n                context._lifeCycleManager.notify({ client: layers, action: 'updated', formalName: 'layer' });\n            }\n        }\n    }\n];\n","export const CONFIG = 'config';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const MOUNT = 'mount';\nexport const TRANSFORM = 'transform';\nexport const TRANSFORMEDDATA = 'transformedData';\nexport const DATADOMAIN = 'dataDomain';\nexport const FIELDS = 'fields';\nexport const LAYERAXISINDEX = 'layerAxisIndex';\nexport const LAYERS = 'layers';\nexport const DOMAIN = 'domain';\n\n","import { mergeRecursive } from 'muze-utils';\nimport { FACET_BY_FIELDS, RETINAL_FIELDS, PARENT_ALIAS, CACHED_DATA } from './enums/constants';\n\nexport const PROPS = {\n    [FACET_BY_FIELDS]: {},\n    [RETINAL_FIELDS]: {},\n    [PARENT_ALIAS]: {},\n    [CACHED_DATA]: {},\n    detailFields: {},\n    axes: {\n        defaultValue: {\n            x: [],\n            y: []\n        }\n    },\n    fields: {\n        defaultValue: {\n            x: [],\n            y: []\n        },\n        sanitization: (context, value) => mergeRecursive({\n            x: [],\n            y: []\n        }, value)\n    },\n    metaInf: {},\n    registry: {},\n    parentContainerInf: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    coord: {}\n};\n","import { DimensionSubtype } from 'muze-utils';\n\nconst getRangeFromData = (instance, selectionDataModel, propConfig) => {\n    let criteria;\n    const dataObj = selectionDataModel[0].getData();\n    const propCriteria = propConfig.payload.criteria;\n    const sourceIdentifiers = propConfig.sourceIdentifiers;\n    const schema = dataObj.schema;\n    const fieldMap = instance.data().getFieldsConfig();\n    const data = dataObj.data;\n    const isActionSourceSame = instance.id() === propConfig.sourceId;\n\n    if (isActionSourceSame) {\n        criteria = propCriteria;\n    } else {\n        criteria = (sourceIdentifiers !== null) ? schema.reduce((acc, obj, index) => {\n            let range;\n            const field = obj.name;\n            const fieldObj = fieldMap[field];\n            const type = fieldObj && (fieldObj.def.subtype ? fieldObj.def.subtype : fieldObj.def.type);\n            const isDimension = type === DimensionSubtype.CATEGORICAL;\n\n            if (!fieldObj) {\n                return acc;\n            }\n\n            if (!isDimension) {\n                range = [Math.min(...data.map(d => d[index])), Math.max(...data.map(d => d[index]))];\n            } else {\n                range = data.map(d => d[index]);\n            }\n            acc[field] = range;\n            return acc;\n        }, {}) : null;\n    }\n    return criteria;\n};\n\nexport const payloadGenerator = {\n    brush: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const criteria = getRangeFromData(instance, selectionDataModel, propConfig);\n        const payload = Object.assign({}, propPayload);\n        payload.criteria = criteria;\n        return payload;\n    },\n\n    __default: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const sourceIdentifiers = propConfig.sourceIdentifiers;\n        const dataObj = selectionDataModel[0].getData();\n        let schema = dataObj.schema;\n        const payload = Object.assign({}, propPayload);\n        schema = dataObj.schema;\n        const data = dataObj.data;\n        const sourceFields = schema.map(d => d.name);\n        payload.criteria = !sourceIdentifiers && selectionDataModel[0].isEmpty() ? null :\n            [sourceFields, ...data];\n        payload.sourceFields = sourceIdentifiers ? sourceIdentifiers.getSchema().map(d => d.name) : [];\n        return payload;\n    }\n};\n\n","import { isSimpleObject, FieldType, DataModel } from 'muze-utils';\n\nconst getModelWithFacetData = (dm, data) => {\n    const dataObj = dm.getData();\n    const schema1 = dataObj.schema;\n    const data1 = dataObj.data;\n    const jsonData = [];\n    const derivedSchema = data[0].map(d => ({\n        name: `${d}`,\n        type: FieldType.DIMENSION,\n        subtype: d.subtype()\n    }));\n    const dataAtFirstPos = data[1];\n\n    data1.forEach((d) => {\n        const tuple = {};\n        schema1.forEach((obj, i) => {\n            tuple[obj.name] = d[i];\n        });\n        derivedSchema.forEach((obj, i) => {\n            tuple[obj.name] = dataAtFirstPos[i];\n        });\n        jsonData.push(tuple);\n    });\n\n    return new DataModel(jsonData, [...schema1, ...derivedSchema]);\n};\n\nexport const propagateValues = (instance, action, config = {}) => {\n    let propagationData;\n    const payload = config.payload;\n    const selectionSet = config.selectionSet;\n    const propagationFieldInf = config.propagationFields[action] || {};\n    const propagationFields = propagationFieldInf.fields || [];\n    const append = propagationFieldInf.append;\n    const criteria = payload.criteria;\n    const context = instance.context;\n    const dataModel = context.cachedData()[0];\n    const sourceId = context.id();\n    const sideEfffects = instance.sideEffects();\n    const behaviourEffectMap = instance._behaviourEffectMap;\n    const mergedModel = selectionSet.mergedEnter.model;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    payload.sourceUnit = sourceId;\n    payload.action = action;\n    payload.sourceCanvas = context.parentAlias();\n    const propagationBehaviourMap = instance._propagationBehaviourMap;\n    const propagationBehaviour = propagationBehaviourMap[action] || action;\n\n    let propFields = [];\n    if (criteria === null) {\n        propagationData = null;\n    } else if (isSimpleObject(criteria)) {\n        propFields = Object.keys(criteria || {});\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    } else {\n        propFields = criteria[0];\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    }\n\n    const facetByFields = context.facetByFields();\n    if (propagationData !== null && propagationFields.length) {\n        const fields = propagationData.getData().schema.map(d => d.name);\n        propagationData = getModelWithFacetData(propagationData, facetByFields);\n        propFields = append ? [...fields, ...propagationFields] : propagationFields;\n        propagationData = propagationData.project(propFields);\n    }\n\n    let propagateInterpolatedValues = false;\n    if (propFields.length && propFields.every(field => fieldsConfig[field] &&\n        fieldsConfig[field].def.type === FieldType.MEASURE)) {\n        propagateInterpolatedValues = true;\n    }\n\n    const groupId = context.parentAlias();\n    payload.action = action;\n    const behaviourInstance = instance._actions.behavioural[propagationBehaviour];\n    const isMutableAction = behaviourInstance ? behaviourInstance.constructor.mutates() : false;\n\n    const filterFn = (entry, propagationConf) => {\n        const effects = behaviourEffectMap[entry.config.action];\n        const mutates = entry.config.groupId ?\n            effects.some(d => sideEfffects[d.name || d].constructor.mutates()) : true;\n        return entry.config.groupId !== propagationConf.groupId && mutates;\n    };\n\n    const sourceBehaviour = instance._actions.behavioural[action];\n    const mutates = sourceBehaviour ? sourceBehaviour.constructor.mutates() : false;\n    let propConfig = {\n        payload,\n        action,\n        criteria: propagationData,\n        isMutableAction: mutates,\n        propagateInterpolatedValues,\n        groupId,\n        sourceId: mutates ? groupId : sourceId,\n        filterFn,\n        enabled: (propConf, firebolt) => (action !== propagationBehaviour ?\n            propConf.payload.sourceCanvas === firebolt.context.parentAlias() : true)\n    };\n\n    dataModel.propagate(propagationData, propConfig, true);\n\n    if (action !== propagationBehaviour) {\n        propConfig = {\n            payload,\n            sourceId: isMutableAction ? groupId : sourceId,\n            criteria: propagationData,\n            isMutableAction,\n            propagateInterpolatedValues,\n            action: propagationBehaviour,\n            groupId,\n            applyOnSource: action === propagationBehaviour,\n            enabled: (propConf, firebolt) => propConf.payload.sourceCanvas !== firebolt.context.parentAlias(),\n            filterFn\n        };\n\n        dataModel.propagate(propagationData, propConfig, true, {\n            filterImmutableAction: (actionInf, propInf) => actionInf.groupId !== propInf.groupId\n        });\n    }\n};\n","import { FieldType, intersect } from 'muze-utils';\nimport { Firebolt, SIDE_EFFECTS } from '@chartshq/muze-firebolt';\nimport { isXandYMeasures, getSelectionRejectionModel } from '../helper';\nimport { payloadGenerator } from './payload-generator';\nimport { propagateValues } from './data-propagator';\n\nconst sideEffectPolicy = (propPayload, context, propagationInf) => {\n    const { sourceIdentifiers, propagationData } = propagationInf;\n    const fieldsConfig = sourceIdentifiers.getFieldsConfig();\n    const sourceIdentifierFields = Object.keys(fieldsConfig).filter(field =>\n        fieldsConfig[field].def.type !== FieldType.MEASURE);\n    const propFields = Object.keys(propagationData[0].getFieldsConfig());\n    const hasCommonCanvas = propPayload.sourceCanvas === context.parentAlias();\n    return intersect(sourceIdentifierFields, propFields).length || hasCommonCanvas;\n};\n\n/**\n * This class manages the interactions of visual unit. It associates physical actions with\n * behavioural actions. It also propagates the behavioural actions to other datamodels.\n */\nexport default class UnitFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        const {\n            TOOLTIP,\n            HIGHLIGHTER,\n            ANCHORS,\n            BRUSH_ANCHORS,\n            PERSISTENT_ANCHORS\n        } = SIDE_EFFECTS;\n\n        const disabledSideEffects = [TOOLTIP, HIGHLIGHTER, ANCHORS, BRUSH_ANCHORS, PERSISTENT_ANCHORS];\n        disabledSideEffects.forEach((sideEffect) => {\n            this.changeSideEffectStateOnPropagation(sideEffect, sideEffectPolicy, 'sourceTargetPolicy');\n        });\n    }\n    propagate (behaviour, payload, selectionSet, sideEffects) {\n        propagateValues(this, behaviour, {\n            payload,\n            selectionSet,\n            sideEffects,\n            propagationFields: this._propagationFields\n        });\n    }\n\n    getApplicableSideEffects (sideEffects, payload, propagationInf) {\n        const context = this.context;\n        const unitId = context.id();\n        const aliasName = context.parentAlias();\n        const propagationSourceCanvas = propagationInf.propPayload && propagationInf.propPayload.sourceCanvas;\n        const sourceUnitId = propagationInf.propPayload && propagationInf.propPayload.sourceUnit;\n        const sourceSideEffects = this._sourceSideEffects;\n        const sideEffectInstances = this.sideEffects();\n        const actionOnSource = sourceUnitId ? sourceUnitId === unitId : true;\n\n        const applicableSideEffects = payload.sideEffects ? [{\n            effects: payload.sideEffects,\n            behaviours: [payload.action]\n        }] : sideEffects;\n        applicableSideEffects.forEach((d) => {\n            let mappedEffects = d.effects;\n            mappedEffects = mappedEffects.filter((se) => {\n                const mutates = sideEffectInstances[se.name || se].constructor.mutates();\n                if (mutates && propagationInf.isMutableAction === false) {\n                    return false;\n                }\n                if (!actionOnSource && payload.criteria !== null) {\n                    const sideEffectCheckers = Object.values(sourceSideEffects[se.name || se] || {});\n                    const { sourceIdentifiers, data: propagationData } = propagationInf;\n                    return sideEffectCheckers.length ? sideEffectCheckers.every(checker =>\n                        checker(propagationInf.propPayload, context, {\n                            sourceIdentifiers,\n                            propagationData\n                        })) : true;\n                }\n                if (propagationSourceCanvas === aliasName || actionOnSource) {\n                    return se.applyOnSource !== false;\n                }\n\n                return true;\n            });\n            d.effects = mappedEffects;\n        });\n        return applicableSideEffects;\n    }\n\n    shouldApplySideEffects (propagate) {\n        return propagate === false;\n    }\n\n    onDataModelPropagation () {\n        return (data, config) => {\n            let isMutableAction = false;\n            const context = this.context;\n            if (!context.mount()) {\n                return;\n            }\n            const {\n                model: propagationData,\n                entryRowIds,\n                exitRowIds\n            } = getSelectionRejectionModel(context.data(), data, isXandYMeasures(context), context._cachedValuesMap());\n            const {\n                enabled: enabledFn,\n                sourceIdentifiers,\n                action,\n                payload: propPayload\n            } = config;\n\n            const payloadFn = payloadGenerator[action] || payloadGenerator.__default;\n            const payload = payloadFn(context, propagationData, config);\n            const sourceBehaviours = this._sourceBehaviours;\n            const filterFns = Object.values(sourceBehaviours[action] || sourceBehaviours['*'] || {});\n            let enabled = filterFns.every(fn => fn(propPayload || {}, context, {\n                sourceIdentifiers,\n                propagationData\n            }));\n\n            if (enabledFn) {\n                enabled = enabledFn(config, this) && enabled !== false;\n            }\n\n            if (enabled) {\n                const effects = this._behaviourEffectMap[action];\n                const sideEffectInstances = this.sideEffects();\n                isMutableAction = config.groupId ?\n                    effects.some(d => sideEffectInstances[d.name || d].constructor.mutates()) : config.isMutableAction;\n\n                const propagationInf = {\n                    propagate: false,\n                    data: propagationData,\n                    entryRowIds,\n                    exitRowIds,\n                    propPayload,\n                    sourceIdentifiers,\n                    persistent: false,\n                    sourceId: config.propagationSourceId,\n                    isMutableAction: config.isMutableAction\n                };\n\n                this._actionHistory[action] = {\n                    payload,\n                    propagationInf,\n                    isMutableAction\n                };\n                this.dispatchBehaviour(action, payload, propagationInf);\n            }\n        };\n    }\n\n    prepareSelectionSets (behaviours) {\n        const data = this.context.data();\n        if (data) {\n            this.createSelectionSet(data.getData().uids, behaviours);\n        }\n        return this;\n    }\n\n    remove () {\n        this.context.cachedData()[0].unsubscribe('propagation');\n        return this;\n    }\n}\n","import { SpawnableSideEffect } from '@chartshq/muze-firebolt';\n\nexport const initSideEffects = (sideEffects, firebolt) => {\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            sideEffects[key] instanceof SpawnableSideEffect && sideEffects[key].drawingContext(() => {\n                const context = firebolt.context;\n                return context.getDrawingContext();\n            });\n            sideEffects[key].valueParser(firebolt.context.valueParser());\n        }\n    }\n};\n\nexport const clearActionHistory = (context) => {\n    const actionHistory = context._actionHistory;\n    for (const key in actionHistory) {\n        if (actionHistory[key].isMutableAction) {\n            delete context._actionHistory[key];\n        }\n    }\n};\n\nexport const dispatchQueuedSideEffects = (context) => {\n    const queuedSideEffects = context._queuedSideEffects;\n    Object.entries(queuedSideEffects).forEach((entry) => {\n        const sideEffect = entry[1];\n        context.dispatchSideEffect(sideEffect.name, ...sideEffect.params);\n    });\n    context._queuedSideEffects = {};\n};\n","import { CLASSPREFIX, CONSOLIDATED } from './enums/constants';\n\n/**\n * Returns the default configuration of the visual unit\n * @return {Object} Default configuration of visual unit\n */\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'visual-unit',\n    className: '',\n    trackerClassName: 'visual-unit-tracker',\n    minOuterRadius: 10,\n    gridLines: {\n        defClassName: 'axis-grid-lines',\n        className: '',\n        show: true,\n        color: '#efefef',\n        zeroLineColor: '#b6b6b6'\n    },\n    gridBands: {\n        defClassName: 'axis-grid-bands',\n        className: '',\n        show: false,\n        y: {\n            color: ['#fff', '#fbfbfb']\n        },\n        x: {\n            color: ['#fff', '#f9f9f9']\n        }\n    },\n    arcLayerClassName: 'layer-arc',\n    interaction: {\n        tooltip: {\n            mode: CONSOLIDATED\n        }\n    },\n    sideEffectClassName: 'side-effect-container'\n};\n","import { mergeRecursive, DataModel } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { CONFIG, LAYERDEFS, TRANSFORM, DATA, LAYERS, TRANSFORMEDDATA } from './enums/reactive-props';\nimport { sanitizeLayerDef, getValuesMap } from './helper';\n\nexport default {\n    [CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig) => (\n                mergeRecursive(oldConfig || mergeRecursive({}, defaultConfig), config)\n            )\n        }\n    },\n    [LAYERDEFS]: {\n        value: null,\n        meta: {\n            preset: layerDef => sanitizeLayerDef(layerDef)\n        }\n    },\n    [TRANSFORM]: {\n        value: null\n    },\n    [LAYERS]: {\n        value: null\n    },\n    [DATA]: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel,\n            preset: (data, context) => {\n                context._cachedValuesMap = ((model) => {\n                    let valuesMap = null;\n                    return () => {\n                        if (valuesMap) {\n                            return valuesMap;\n                        }\n                        valuesMap = getValuesMap(model, context);\n                        return valuesMap;\n                    };\n                })(data);\n                if (context._cache) {\n                    const cachedData = context.cachedData();\n                    context.cachedData([...cachedData, data]);\n                } else {\n                    const oldData = context.cachedData()[0];\n                    oldData && oldData.unsubscribe('propagation');\n                    context.cachedData([data]);\n                }\n            }\n        }\n    },\n    [TRANSFORMEDDATA]: {\n        value: null\n    },\n    width: {\n        value: null\n    },\n    height: {\n        value: null\n    }\n};\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    setAttrs,\n    getUniqueId,\n    getQualifiedClassName,\n    selectElement,\n    transactor,\n    makeElement,\n    generateGetterSetters,\n    getDataModelFromIdentifiers,\n    isSimpleObject,\n    transposeArray,\n    CommonProps,\n    toArray,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { actionBehaviourMap } from './firebolt/action-behaviour-map';\nimport {\n    renderLayers,\n    getNearestDimensionalValue,\n    removeLayersBy,\n    getLayersBy,\n    getLayerFromDef,\n    getLayerAxisIndex,\n    sanitizeLayerDef,\n    createSideEffectGroup,\n    resolveEncodingTransform,\n    createRenderPromise,\n    setAxisRange\n} from './helper';\nimport { renderGridLineLayers, attachDataToGridLineLayers } from './helper/grid-lines';\nimport { calculateDomainListener, listenerMap } from './listener-map';\nimport { PROPS } from './props';\nimport UnitFireBolt from './firebolt';\nimport { initSideEffects, dispatchQueuedSideEffects, clearActionHistory } from './firebolt/helper';\nimport './styles.scss';\nimport localOptions from './local-options';\nimport { WIDTH, HEIGHT } from './enums/reactive-props';\n\nconst FORMAL_NAME = 'unit';\nconst unitNs = [STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE, STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE];\nconst groupNs = STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE;\n\n/**\n * Visual Unit is hierarchical component created by {@link VisualGroup}. This component accepts layer definitions\n * and creates concrete layer instances from them, binds data and attaches axis to them. It also retreives the domain\n * from the layers and unions them and sets them on corresponding axis instances. This also creates the parent svg\n * groups for all the layers and delegates the rendering to all the layers.\n *\n * @public\n * @module VisualUnit\n * @class\n */\nexport default class VisualUnit {\n\n    /**\n     * Creates instance of visualization unit.\n     *\n     * @param {Object} registry  Component registry\n     * @param {Object} dependencies  Dependencies required by visual unit.\n     */\n    constructor (registry, dependencies) {\n        this._id = getUniqueId();\n        this._dependencies = dependencies;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        createRenderPromise(this);\n        this._lifeCycleManager = dependencies.lifeCycleManager;\n        this._layersMap = {};\n        this._gridLinesSelection = null;\n        this._gridBandsSelection = null;\n        this._gridLines = [];\n        this._gridBands = [];\n        this._layerAxisIndex = {};\n        this._queuedLayerDefs = [];\n        layerFactory.setLayerRegistry(registry.layerRegistry);\n        generateGetterSetters(this, PROPS);\n        this.registry(registry);\n        this.cachedData([]);\n    }\n\n    static formalName () {\n        return FORMAL_NAME;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: null\n            },\n            Object.keys((localOptions)).reduce((acc, v) => {\n                acc[v] = localOptions[v].value;\n                return acc;\n            }, {})\n        ];\n    }\n\n    static getQualifiedStateProps () {\n        const unitState = VisualUnit.getState();\n        return unitState.map((state, i) => Object.keys(state).map(prop => `${unitNs[i]}.${prop}`));\n    }\n\n    static getListeners () {\n        return {\n            store: [...listenerMap.map((d) => {\n                const o = Object.assign({}, d);\n                const localNs = unitNs[1];\n                o.props = o.props.map(prop => `${localNs}.${prop}`);\n                return o;\n            }), {\n                type: 'registerImmediateListener',\n                props: [`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.domain`],\n                listener: calculateDomainListener\n            }, {\n                type: 'registerImmediateListener',\n                props: [`${unitNs[1]}.${WIDTH}`,\n                    `${unitNs[1]}.${HEIGHT}`,\n                    ...['x', 'y'].map(type => `${groupNs}.domain.${type}`)],\n                listener: (context, [, width], [, height]) => {\n                    if (width && height) {\n                        attachDataToGridLineLayers(context);\n                    }\n                },\n                subNamespace: (context) => {\n                    const { rowIndex, colIndex, namespace } = context.metaInf();\n                    return {\n                        [`${unitNs[1]}.${WIDTH}`]: namespace,\n                        [`${unitNs[1]}.${HEIGHT}`]: namespace,\n                        [`${groupNs}.domain.x`]: `${colIndex}0`,\n                        [`${groupNs}.domain.y`]: `${rowIndex}0`\n                    };\n                }\n            }],\n            throwback: [\n                {\n                    type: 'registerChangeListener',\n                    props: [CommonProps.ON_LAYER_DRAW],\n                    listener: (context, [, drawn]) => {\n                        if (drawn) {\n                            const firebolt = context.firebolt();\n                            dispatchQueuedSideEffects(firebolt);\n                            clearActionHistory(firebolt);\n                        }\n                        context._renderedResolve();\n                        context._lifeCycleManager.notify({\n                            client: context.layers(),\n                            action: 'drawn',\n                            formalName: 'layer'\n                        });\n                    }\n                }\n            ]\n        };\n    }\n\n    store (...params) {\n        if (params.length) {\n            const store = this._store = params[0];\n            const { throwback, fireboltDeps } = this._dependencies;\n            const { namespace } = this.metaInf();\n\n            store.addSubNamespace(namespace, FORMAL_NAME, this);\n            throwback.addSubNamespace(namespace, FORMAL_NAME, this);\n            transactor(this, localOptions, store, {\n                subNamespace: namespace,\n                namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}`\n            });\n\n            this.firebolt(new UnitFireBolt(this, {\n                physical: Object.assign({}, physicalActions, fireboltDeps.physicalActions),\n                behavioural: Object.assign({}, behaviouralActions, fireboltDeps.behaviouralActions),\n                physicalBehaviouralMap: actionBehaviourMap\n            }, Object.assign({}, sideEffects, fireboltDeps.sideEffects), behaviourEffectMap));\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Static helper for creates a unit instance\n     *\n     * @param {Object} [id] optional unique identifier for a unit; , id is calculated internally\n     * @param {DataModel} data instance of datamodel\n     * @param {Array.<Layer>} layers layer configuration\n     * @param {Object} config configurtion for the visual unit\n     * @return {VisualUnit} Instance of a unit\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this visual unit. Firebolt dispatches the behavioural actions\n     * when any physical action happens on the elements of visual unit.\n     *\n     * @public\n     *\n     * @return {Firebolt} Instance of firebolt.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Returns the unique id of this visual unit.\n     *\n     * @public\n     * @return {string} Unique identifier.\n     */\n    id () {\n        return this._id;\n    }\n\n    lockModel () {\n        this.store().lockModel();\n        return this;\n    }\n\n    unlockModel () {\n        this.store().unlockModel();\n        return this;\n    }\n\n    timeDiffsByField (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._timeDiffsByField;\n    }\n\n    /**\n     * Renders the visual unit. It creates the layout and renders the axes and layers.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    render (container) {\n        const config = this.config();\n        const { className, defClassName, sideEffectClassName, classPrefix } = config;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const width = this.width();\n        const height = this.height();\n        const containerSelection = selectElement(container).style('position', 'relative');\n\n        this._rootSvg = makeElement(containerSelection, 'svg', [null], className)\n                        .style('width', `${width}px`).style('height', `${height}px`);\n\n        const node = this._rootSvg.node();\n        setAttrs(node, {\n            width,\n            height,\n            class: qualifiedClassName.join(' ')\n        });\n\n        setAxisRange(this);\n        renderGridLineLayers(this, node);\n        renderLayers(this, node, this.layers(), {\n            width,\n            height\n        });\n        this._sideEffectGroup = createSideEffectGroup(node, `${classPrefix}-${sideEffectClassName}`);\n        const firebolt = this.firebolt();\n        initSideEffects(firebolt.sideEffects(), firebolt);\n        return this;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Caches all the datamodels in an array from the next `data()` call on visual unit until `clearCaching()` or\n     * `resetData()` is called on it.\n     *\n     * @public\n     * @return {VisualUnit} Instance of visual unit.\n     */\n\n    enableCaching () {\n        this._cache = true;\n        return this;\n    }\n\n    /**\n     * Clears all the previous cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    clearCaching () {\n        this._cache = false;\n        this.cachedData([this.cachedData()[0]]);\n        return this;\n    }\n\n    /**\n     * Returns the drawing information from visual unit.Drawing context contains the dimensions of unit and the svg\n     * container of the visual unit.\n     *\n     * @public\n     *\n     * @return {Object} Drawing information.\n     *      ```\n     *          {\n     *              htmlContainer: // Html container of svg container of the visual unit\n     *              svgContainer: // Root svg container\n     *              width: // Width of the visual unit\n     *              height: // Height of the visual unit\n     *              sideEffectGroup: // Svg group for drawing side effect elements.\n     *              parentContainer: // Parent html container of the visual unit.\n     *              xOffset: // x offset space from the starting x position of the container,\n     *              yOffset: // y offset space from the starting y position of the container\n     *          }\n     *      ```\n     */\n    getDrawingContext () {\n        const rootSvg = this._rootSvg && this._rootSvg.node();\n        const width = this.width();\n        const height = this.height();\n        const { el, dimensions } = this.parentContainerInf();\n        return {\n            htmlContainer: this.mount(),\n            svgContainer: rootSvg,\n            width,\n            height,\n            sideEffectGroup: this._sideEffectGroup,\n            parentContainer: el,\n            parentContainerDimensions: dimensions,\n            xOffset: 0,\n            yOffset: 0\n        };\n    }\n\n    /**\n     * Returns the serialized configuration of visual unit.\n     *\n     * @return {Object} serialized configuration\n     */\n    serialize () {\n        return {\n            layers: this.layers().map(layer => layer.serialize()),\n            config: this.config(),\n            axes: this.axes().map(axis => axis.serialize())\n        };\n    }\n\n    mount (...mount) {\n        if (mount.length) {\n            this._mount = mount[0];\n            this.render(mount[0]);\n            this.firebolt().mapActionsAndBehaviour();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     * Adds a new layer to the visual unit. It takes a layer definition and creates layer instances from them. It does\n     * not render the layers. It returns the layer instances in an array. If the layer definition is a composite layer,\n     * then multiple layer instances will be returned in the array.\n     *\n     * To add a layer in the unit,\n     * ```\n     *      unit.addLayer({\n     *          name: 'bullet',\n     *          mark: 'bar',\n     *          encoding: {\n     *              x: 'Year',\n     *              y: 'Acceleration',\n     *              color: 'Origin'\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} layerDef Definition of new layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    addLayer (layerDefinition) {\n        if (layerDefinition instanceof Function) {\n            this._queuedLayerDefs.push(layerDefinition);\n            return this;\n        }\n        const layerDefinitions = sanitizeLayerDef(toArray(layerDefinition));\n\n        const layersMap = this._layersMap;\n        const markSet = {};\n        const store = {\n            layers: {},\n            components: {\n                unit: this\n            }\n        };\n        let layerIndex = 0;\n        const metaInf = this.metaInf();\n        const layers = layerDefinitions.sort((a, b) => a.order - b.order).reduce((layersArr, layerDef) => {\n            const definition = layerDef.def;\n            const markId = definition.name;\n            const defArr = toArray(definition);\n            const namespaces = [];\n            defArr.forEach((def) => {\n                def.order = layerDef.order + layerIndex;\n                const namespace = `${metaInf.namespace}-${def.mark}-${getUniqueId()}`;\n                namespaces.push(namespace);\n            });\n            layerIndex += defArr.length;\n            const instances = getLayerFromDef(this, definition, layersMap[markId], namespaces);\n            store.layers = Object.assign(store.layers, instances);\n            const instanceValues = Object.values(instances);\n            layersArr = layersArr.concat(...instanceValues);\n            layersMap[markId] = instanceValues;\n            markSet[markId] = markId;\n            return layersArr;\n        }, []);\n\n        store.unit = this;\n        const layerdeps = {};\n        const layersArr = [].concat(...Object.values(this._layersMap));\n        layersArr.forEach((layer) => {\n            const alias = layer.alias();\n            store.layers[alias] = layer;\n            layerdeps[alias] = [];\n        });\n        layers.forEach((layer) => {\n            const depArr = resolveEncodingTransform(layer, store);\n            layerdeps[layer.alias()] = depArr;\n        });\n\n        this._layerDepOrder = layerdeps;\n        this._layerAxisIndex = Object.assign(this._layerAxisIndex, getLayerAxisIndex(layers, this.fields()));\n        this.layers(layersArr);\n        return layers;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    remove () {\n        const formalName = this.constructor.formalName();\n        const { lifeCycleManager, throwback } = this._dependencies;\n        const { namespace } = this.metaInf();\n        lifeCycleManager.notify({ client: this, action: 'beforeremove', formalName: 'unit' });\n        const layers = this.layers();\n        this.store().removeSubNamespace(namespace, formalName);\n        throwback.removeSubNamespace(namespace, FORMAL_NAME);\n        selectElement(this.mount()).remove();\n        this.firebolt().remove();\n        // Remove layers\n        lifeCycleManager.notify({ client: layers, action: 'beforeremove', formalName: 'layer' });\n        [...layers, ...this._gridLines, ...this._gridBands].forEach(layer => layer.remove());\n        lifeCycleManager.notify({ client: layers, action: 'removed', formalName: 'layer' });\n        lifeCycleManager.notify({ client: this, action: 'removed', formalName: 'unit' });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     *\n     * @memberof VisualUnit\n     */\n    getDataModelFromIdentifiers (identifiers, mode, parentModel) {\n        if (identifiers === null) {\n            return null;\n        }\n        const dataModel = parentModel || this.data();\n        return getDataModelFromIdentifiers(dataModel, identifiers, mode);\n    }\n\n    /**\n     * Resets the data of visual unit to original data model. It also clears the cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    resetData () {\n        this.data(this.cachedData()[0]);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getSourceInfo () {\n        return {\n            dimensionMeasureMap: this._dimensionMeasureMap,\n            fields: this.fields(),\n            data: this.data(),\n            axes: this.axes()\n        };\n    }\n\n    getDataDomain () {\n        return this.store().get(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`, this.metaInf().namespace);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getDefaultTargetContainer () {\n        const { classPrefix, defClassName } = this.config();\n        return [`.${classPrefix}-${defClassName}`];\n    }\n\n    /**\n     * Returns an array of layer instances which matches the supplied mark type.\n     *\n     * @public\n     *\n     * @param {string} type Mark type of layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    getLayersByType (type) {\n        const layers = getLayersBy(this.layers(), 'type', type);\n        return layers;\n    }\n\n    /**\n     * Returns the layer instance which matches the supplied layer name. If no layer is found, then it returns\n     * undefined.\n     *\n     * @public\n     * @param {string} name Name of layer.\n     *\n     * @return {VisualUnit} Layer instance.\n     */\n    getLayerByName (name) {\n        const layers = getLayersBy(this.layers(), 'name', name);\n        return layers[0];\n    }\n\n    /**\n     * Returns the point located nearest to the supplied x and y position. It returns the unique identifiers of the\n     * point. This function also accepts an additional configuration `getAllPoints` inside `config` object in the third\n     * argument which if set to true, then it returns the identifiers of all the points which falls on the nearest\n     * x value or y value if any one of the field is a dimension. Additionally, a target property is also returned\n     * which contains the identifier of the nearest point. If no nearest point is found, then it returns identifier\n     * as null.\n     *\n     * @public\n     *\n     * @param {number} x X Position of the point from where nearest point is to be found.\n     * @param {number} y Y Position of the point from where nearest point is to be found.\n     * @param {Object} config Additional configuration options.\n     * @param {boolean} config.getAllPoints If true, then returns all the points nearest to the x value or y value if\n     * it is dimension.\n     * @param {Object} config.data Data associated with the nearest point.\n     * @return {Object} Nearest point information\n     * ```\n     *      {\n     *          id: [['Origin'], ['USA'], ['Japan']], // Identifiers of all the points closest to the x value.\n     *          target: [['Origin'], ['Japan']] // Identifier of the nearest point.\n     *      }\n     * ```\n     */\n    getNearestPoint (x, y, config) {\n        let pointObj = {\n            id: null\n        };\n        const dimValue = getNearestDimensionalValue(this, {\n            x,\n            y\n        });\n\n        if (dimValue !== null && config.getAllPoints) {\n            pointObj.id = dimValue;\n            const pointInf = this.getMarkInfFromLayers(x, y, config);\n            pointObj.target = pointInf && pointInf.id ? pointInf.id : pointObj.id;\n            return pointObj;\n        }\n\n        const markInf = this.getMarkInfFromLayers(x, y, config) || { id: null };\n        pointObj = Object.assign({}, markInf);\n\n        pointObj.target = markInf.id;\n        return pointObj;\n    }\n\n    getMarkInfFromLayers (x, y, args) {\n        const layers = this.layers();\n        const len = layers.length;\n        let point = null;\n        // Iterate through the layers array and fetch the nearest point from each layer. If a valid\n        // nearest point is found from any layer, then return that point.\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            const config = layer.config();\n            if (config.interactive !== false) {\n                point = layer.getNearestPoint(x, y, args);\n            }\n            if (point) {\n                return point;\n            }\n        }\n        return point;\n    }\n\n    /**\n     * Get the information of all the marks such as x, y position and size from supplied identifiers. It\n     * returns an array of points whose data matches the given identifiers.\n     *\n     * @public\n     *\n     * @param {Array|Object} identifiers Field names and their corresponding values.\n     * ```\n     * identifiers can be given in an array of array,\n     *      ['Origin', 'Name'], // Names of the fields supplied in first array\n     *      ['USA', 'ford'], // Data values of each field supplied in rest of the arrays.\n     *      ['Japan', 'ford']\n     * or in an object,\n     *      {\n     *          Origin: ['USA']\n     *      }\n     * ```\n     * @param {Object} config Optional configurations which decides which information of the mark will\n     * be retrieved.\n     * @param {boolean} [config.getAllAttrs = false] If true, then returns all the information of each mark.\n     * @param {boolean} [config.getBBox = false] If true, then returns the bounding box of each mark.\n     *\n     * @return {Array} Array of objects containing the information of each point.\n     * ```\n     * By default, the method returns the array of points in this structure,\n     *      [\n     *          {\n     *              x: 20,\n     *              y: 100,\n     *              width: 200,\n     *              height: 100\n     *          }\n     *      ]\n     * If 'config.getAllAttrs' is true, then it returns all the information of each mark,\n     *      [\n     *      // Positions of mark on initial state of transition.\n     *          enter: {\n     *              x: 0,\n     *              y: 0\n     *          },\n     *          // Final positions of the mark\n     *          update: {\n     *              x: 20,\n     *              y: 10\n     *          },\n     *          style: // css styles of each mark\n     *          source: [200, 'USA'] // Row information of each mark\n     *          id: 20 // Row id of each mark\n     *      ]\n     * ```\n     */\n    getPlotPointsFromIdentifiers (identifiers, config = {}) {\n        let points = [];\n        let parsedIdentifiers = identifiers;\n        if (identifiers === null) {\n            return [];\n        }\n        const layers = this.layers();\n        const len = layers.length;\n        if (isSimpleObject(identifiers)) {\n            parsedIdentifiers = [Object.keys(identifiers)];\n            parsedIdentifiers = [...parsedIdentifiers, ...transposeArray(Object.values(identifiers))];\n        }\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            if (layer.config().interactive !== false) {\n                points = [...points, ...layer.getPointsFromIdentifiers(parsedIdentifiers, config)];\n            }\n        }\n        return points;\n    }\n\n    /**\n     * Removes the layer instance which matches the supplied layer name.\n     *\n     * @public\n     * @param {string} name Name of layer\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayerByName (name) {\n        removeLayersBy('name', name);\n        return this;\n    }\n\n    /**\n     * Removes all the layer instances which matches the supplied mark type.\n     *\n     * @public\n     * @param {string} type Mark type of layer.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayersByType (type) {\n        removeLayersBy('type', type);\n        return this;\n    }\n}\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n *\n *\n * @export\n * @class Variable\n */\nexport default class Variable {\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    type () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    toString () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n","import Variable from './variable';\n\n/**\n * This is a wrapper on top of multiple variables which are of same type but they are shown in the same axis.This is\n * required in case of range plots or ohlc plots where one plot is mapped to multiple measure fields. At that time,\n * we need to create a composed variable from multiple variables. This class just wraps them into one variable instance\n * and provides methods to get the type and other common functionalities which can be performed on a simple variable\n * instance.\n *\n * @public\n * @class ComposeVars\n */\nclass ComposedVars extends Variable {\n\n    /**\n     * Creates an instance of ComposeVars.\n     *\n     * @param {Array} vars Array of SimpleVars.\n     */\n    constructor (...vars) {\n        super();\n        this.vars(vars);\n    }\n\n    vars (...params) {\n        if (params.length) {\n            this._vars = params[0];\n            return this;\n        }\n        return this._vars;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this.vars().forEach(d => d.data(dm[0]));\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    /**\n     * Get all the field names from composed variable instance.\n     *\n     * @public\n     * @return {Array} Array of field names.\n     */\n    getMembers () {\n        const vars = this.vars();\n        return vars.map(member => member.getMembers()[0]);\n    }\n\n    /**\n     * Type of field associated with this composed variable.\n     *\n     * @return {string} Type of variable (Measure/Dimension).\n     */\n    type () {\n        return this.vars()[0].type();\n    }\n\n    toString () {\n        return this.vars().map(d => d.toString()).join(',');\n    }\n\n    /**\n     * Returns the number formatter function of the variable.\n     *\n     * @return {Function} Number formatter function of the variable.\n     */\n    numberFormat () {\n        return this.vars()[0].numberFormat();\n    }\n\n    format (values) {\n        return this.vars()[0].format(values);\n    }\n\n    getSchemaDef () {\n        return this.data().getFieldsConfig()[this.vars()[0]].def;\n    }\n\n    /**\n     * Returns the subtype of the fields associated with this variable instance.\n     *\n     * @public\n     * @return {string} Subtype of the variable.\n     */\n    subtype () {\n        return this.vars()[0].subtype();\n    }\n\n    /**\n     * Returns the consecutive minimum difference of the field values.\n     *\n     * @public\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        return this.vars()[0].getMinDiff();\n    }\n\n    /**\n     * Returns the display name of the fields.\n     *\n     * @return {string} returns the display name.\n     */\n    displayName () {\n        return this.vars().map(d => d.displayName()).join(',');\n    }\n}\n\nexport default ComposedVars;\n","import { DateTimeFormatter, retrieveFieldDisplayName, DimensionSubtype } from 'muze-utils';\nimport Variable from './variable';\n\n/**\n * This is a wrapper on top of fields passed in rows or columns in canvas. This is used to get the type of field or\n * get min difference from the field values.\n *\n * @public\n * @class SimpleVariable\n */\nexport default class SimpleVariable extends Variable {\n\n    /**\n     * Creates an instance of simple variable instance.\n     *\n     * @param {string} name Field name.\n     */\n    constructor (name) {\n        super();\n        this.oneVar(name);\n    }\n\n    /**\n     * Gets the field name associated with this variable instance.\n     *\n     * @public\n     * @return {string} Name of the field.\n     */\n    oneVar (...oneV) {\n        if (oneV.length) {\n            this._oneVar = oneV[0];\n            return this;\n        }\n        return this._oneVar;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    toString () {\n        return this.oneVar();\n    }\n\n    /**\n     * Gets the number formatter function of this variable.\n     *\n     * @public\n     * @return {Function} Number formatter function.\n     */\n    numberFormat () {\n        if (this.type() === 'measure') {\n            const formatter = this.data().getFieldspace().getMeasure()[this.oneVar()];\n            return formatter.numberFormat();\n        } return val => val;\n    }\n\n    format (values) {\n        if (values && this.subtype() === 'temporal') {\n            const formatter = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            const dtFormat = new DateTimeFormatter(formatter);\n            values = values.map(e => dtFormat.getNativeDate(e));\n        }\n        return values;\n    }\n\n    /**\n     * Returns a formatter function which transforms the input value to its original form.\n     *\n     * @public\n     * @return {Function} Returns raw formatter function.\n     */\n    rawFormat () {\n        if (this.subtype() === DimensionSubtype.TEMPORAL) {\n            const dateFormat = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            return val => DateTimeFormatter.formatAs(val, dateFormat);\n        }\n        return val => val;\n    }\n\n    /**\n     * Return the field names associated with this variable instance.\n     *\n     * @public\n     * @return {Array} Array of fields.\n     */\n    getMembers () {\n        return [this.oneVar()];\n    }\n\n    /**\n     * Returns the type of the variable. Whether it is measure or dimension.\n     *\n     * @public\n     * @return {string} Type of variable.\n     */\n    type () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.type;\n    }\n\n    /**\n     * Returns the subtype of the variable. Subtype can be categorical or temporal. If no subtype is found, then it\n     * returns the type of the variable.\n     *\n     * @public\n     * @return {string} Subtype of variable.\n     */\n    subtype () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.subtype || fieldDef.type;\n    }\n\n    /**\n     * Returns the minimum consecutive difference between the data values of this variable.\n     *\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        const fieldSpace = this.data().getFieldspace();\n        return fieldSpace.fieldsObj()[this.oneVar()].minimumConsecutiveDifference();\n    }\n\n    /**\n     * Returns true if two variable instances are same.If both variable has the same field names, they are equal.\n     *\n     * @return {Boolean} Whether two variable instances are same.\n     */\n    equals (varInst) {\n        return this.oneVar() === varInst.oneVar();\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @return {string} returns the display name.\n     */\n    displayName () {\n        return retrieveFieldDisplayName(this.data(), this.oneVar());\n    }\n\n    /**\n     * Returns the schema defination of the field.\n     *\n     * @return {Object} schema def\n     */\n    getSchemaDef () {\n        return this.data().getFieldsConfig()[this.oneVar()].def;\n    }\n}\n","import { ComposedVars, SimpleVariable } from '../variable';\nimport { DIMENSION, COLUMNS, ROWS, TEMPORAL } from '../enums/constants';\n\n/**\n * Gets the list of fields in a sorted order by measurement and dimension\n *\n * @param {Array} fieldList List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields sorted by measurement and dimensions\n */\nconst orderFields = (fieldArray, type) => {\n    const dimensionArr = [[], []];\n    const measureArr = [[], []];\n    const temporalArr = [[], []];\n    const categoricalArr = [[], []];\n\n    fieldArray.forEach((fieldList, index) => {\n        fieldList.forEach((field) => {\n            if (field.type() === DIMENSION) {\n                dimensionArr[index].push(field);\n                field.subtype() === TEMPORAL ? temporalArr[index].push(field) : categoricalArr[index].push(field);\n            } else {\n                measureArr[index].push(field);\n            }\n        });\n    });\n\n    const numOfMeasures = measureArr[0].length + (measureArr[1] ? measureArr[1].length : 0);\n\n    // Single array of fields\n    if (!fieldArray[1]) {\n        // Push measures to bottom\n        measureArr[1] = type === COLUMNS ? measureArr[0] : [];\n        // Push measures to left\n        measureArr[0] = type !== COLUMNS ? measureArr[0] : [];\n        // Bottom and right dimensions empty\n        dimensionArr[1] = [];\n        // Left and top filled with dimensions\n        dimensionArr[0] = dimensionArr[0];\n        if (numOfMeasures === 0) {\n            const allDimensions = [...dimensionArr[0], ...dimensionArr[1]];\n            if (type === COLUMNS) {\n                dimensionArr[1] = allDimensions[allDimensions.length - 1] ? [allDimensions[allDimensions.length - 1]]\n                        : [];\n                allDimensions.splice(-1, 1);\n            } else {\n                dimensionArr[1] = [];\n            }\n            dimensionArr[0] = [...allDimensions];\n        }\n    }\n\n    if (dimensionArr[0].length && dimensionArr[1].length && numOfMeasures > 0) {\n        dimensionArr[0] = [...dimensionArr[0], ...dimensionArr[1]];\n        dimensionArr[1] = [];\n    }\n    return {\n        fields: dimensionArr.map((list, i) => (i === 1 ?\n            measureArr[i].concat(dimensionArr[i]) : dimensionArr[i].concat(measureArr[i]))),\n        dimensions: [...dimensionArr[0], ...dimensionArr[1]],\n        measures: [...measureArr[0], ...measureArr[1]],\n        temporal: [...temporalArr[0], ...temporalArr[1]],\n        categorical: [...categoricalArr[0], ...categoricalArr[1]]\n    };\n};\n\n/**\n * Gets the list of normalized fields\n *\n * @param {Array} fields List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields normalized by measurement and dimensions\n */\nconst normalizeFields = (config, type) => {\n    const fieldsArr = [];\n    const fields = config[type];\n\n    if (!(fields[0] instanceof Array)) {\n        fieldsArr[0] = fields;\n    } else {\n        fieldsArr[0] = fields[0] || [];\n        fieldsArr[1] = fields[1] || [];\n    }\n    return fieldsArr;\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} datamodel\n *\n */\nconst convertToVar = (datamodel, fields) => {\n    const vars = [];\n\n    fields && fields.forEach((field) => {\n        if (field instanceof ComposedVars) {\n            vars.push(field);\n            field.data(datamodel);\n        } else {\n            vars.push(new SimpleVariable(field).data(datamodel));\n        }\n    });\n    return vars;\n};\n\n/**\n *\n *\n * @param {*} rows\n * @param {*} columns\n * @param {*} datamodel\n *\n */\nexport const transformFields = (datamodel, config) => {\n    const [rowsInfo, columnsInfo] = [ROWS, COLUMNS].map((fields) => {\n        const normalizedFields = normalizeFields(config, fields);\n        const norFields = [convertToVar(datamodel, normalizedFields[0])];\n\n        if (normalizedFields[1]) {\n            norFields[1] = convertToVar(datamodel, normalizedFields[1]);\n        }\n        return orderFields(norFields, fields);\n    });\n    const {\n        fields: rows,\n        dimensions: rowDimensions,\n        measures: rowMeasures,\n        temporal: rowTemporalFields,\n        categorical: rowCategoricalFields\n    } = rowsInfo;\n    const {\n        fields: columns,\n        dimensions: columnDimensions,\n        measures: columnMeasures,\n        temporal: columnTemporalFields,\n        categorical: columnCategoricalFields\n    } = columnsInfo;\n    return {\n        rows,\n        rowDimensions,\n        rowMeasures,\n        rowTemporalFields,\n        rowCategoricalFields,\n        columns,\n        columnTemporalFields,\n        columnCategoricalFields,\n        columnDimensions,\n        columnMeasures\n    };\n};\n","import { ERROR_MSG, mergeRecursive } from 'muze-utils';\nimport { transformFields } from './field-sanitizer';\nimport { getHeaderAxisFrom } from '../group-helper/group-utils';\nimport { ROW, COLUMN } from '../enums/constants';\n\n/**\n *\n *\n * @export\n * @class VisualEncoder\n */\nexport default class VisualEncoder {\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    createAxis () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    setCommonDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    getLayerConfig () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    fieldInfo (...info) {\n        if (info.length) {\n            this._fieldInfo = mergeRecursive(this._fieldInfo || {}, info[0]);\n            return this;\n        }\n        return this._fieldInfo;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof VisualEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        this.fieldInfo(transformFields(datamodel, config));\n        return this.fieldInfo();\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    axisFrom (...params) {\n        if (params.length) {\n            this._axisFrom = params[0];\n            return this;\n        }\n        return this._axisFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    headerFrom (...params) {\n        if (params.length) {\n            this._headerFrom = params[0];\n            return this;\n        }\n        return this.__headerFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axisFrom\n     *\n     * @memberof CartesianEncoder\n     */\n    setAxisAndHeaders (axisFrom = {}, fields) {\n        const [rowHeader, rowAxis] = getHeaderAxisFrom(ROW, fields.rows, axisFrom);\n        const [colHeader, colAxis] = getHeaderAxisFrom(COLUMN, fields.columns, axisFrom);\n\n        this.axisFrom({\n            row: rowAxis,\n            column: colAxis\n        });\n        this.headerFrom({\n            row: rowHeader,\n            column: colHeader\n        });\n        return this;\n    }\n}\n","import { ContinousAxis, BandAxis, TimeAxis, ColorAxis, SizeAxis, ShapeAxis } from '@chartshq/muze-axis';\n\nexport const scaleMaps = {\n    linear: ContinousAxis,\n    band: BandAxis,\n    temporal: TimeAxis,\n    size: SizeAxis,\n    color: ColorAxis,\n    shape: ShapeAxis\n};\n","import { ScaleType } from '@chartshq/muze-axis';\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    dimension: ScaleType.BAND,\n    categorical: ScaleType.BAND,\n    temporal: ScaleType.TIME,\n    measure: ScaleType.LINEAR,\n    continuous: ScaleType.LINEAR\n};\n","import { mergeRecursive, getObjProp } from 'muze-utils';\nimport { AxisOrientation } from '@chartshq/muze-axis';\nimport { ENCODING } from '@chartshq/visual-layer';\nimport { scaleMaps } from '../enums/scale-maps';\nimport { getAxisType, getAxisKey } from '../group-helper';\nimport { dataTypeScaleMap } from '../data-type-scale-map';\nimport { CATEGORICAL, TEMPORAL, BAR, LINE, POINT, BOTH, Y, COLOR, SHAPE, SIZE, ANGLE0 } from '../enums/constants';\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst getAxisConfig = (axisInfo, field, axesCreators, indices, facetFields) => {\n    let axisOrientation;\n    const { index, axisIndex, axisType } = axisInfo;\n    const { config, position } = axesCreators;\n    const { rowIndex, columnIndex } = indices;\n    const rawUserAxisConfig = config.axes ? (config.axes[axisType] || {}) : {};\n\n    // Change config object to a function if not already one\n    const userAxisConfigFn = typeof rawUserAxisConfig !== 'function' ?\n    () => rawUserAxisConfig : rawUserAxisConfig;\n    const userAxisConfig = userAxisConfigFn(rowIndex, columnIndex, {\n        axisFields: field.getMembers(),\n        facetFields\n    });\n\n    // If current config does not specifes config for an axis, retain old config\n    if (!userAxisConfig) {\n        return {};\n    }\n\n    const {\n        LEFT,\n        RIGHT,\n        TOP,\n        BOTTOM\n    } = AxisOrientation;\n    const allOrientations = axisType === Y ? [LEFT, RIGHT] : [TOP, BOTTOM];\n\n    if (position === BOTH) {\n        axisOrientation = allOrientations[axisIndex];\n    } else {\n        axisOrientation = position;\n    }\n    const axisConfig = {\n        id: `${axisType}-${index}-${axisIndex}`,\n        name: field.displayName(),\n        field: field.toString(),\n        numberFormat: field.numberFormat(),\n        orientation: axisOrientation,\n        showAxisName: true,\n        show: true,\n        type: dataTypeScaleMap[field.subtype()]\n    };\n    userAxisConfig.tickValues = field.format(userAxisConfig.tickValues);\n    userAxisConfig.domain = field.format(userAxisConfig.domain);\n\n    return mergeRecursive(axisConfig, userAxisConfig);\n};\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst createSimpleAxis = (axisConfig, field, axesCreators) => {\n    const { labelManager } = axesCreators;\n    const Cls = scaleMaps[dataTypeScaleMap[field.subtype()]];\n    const simpleAxis = new Cls(axisConfig, { labelManager });\n    return simpleAxis;\n};\n\nexport const getAdjustedDomain = (max, min) => {\n    const y1ratio = max[0] / (max[0] - min[0]);\n    const y2ratio = max[1] / (max[1] - min[1]);\n\n    // adjust min/max values for positive negative values zero line etc\n    let allSameSign = false;\n\n    // if all numbers are positive set floor to zero\n    if (min[0] > 0 && min[1] > 0 && min[1] > 0 && max[1] > 0) {\n        allSameSign = true;\n        min[0] = 0;\n        min[1] = 0;\n    }\n\n    // if all numbers are negative set ceiling to zero\n    if (min[0] < 0 && min[1] < 0 && min[1] < 0 && max[1] < 0) {\n        allSameSign = true;\n        max[0] = 0;\n        max[1] = 0;\n    }\n\n    // align zero line if necessary\n    if (!allSameSign && y1ratio !== y2ratio) {\n        if (y1ratio < y2ratio) {\n                    // adjust min[1]\n            min[1] = min[0] / max[0] * max[1];\n        } else {\n                    // adjust min[0]\n            min[0] = min[1] / max[1] * max[0];\n        }\n    }\n    return [\n        [min[0], max[0]],\n        [min[1], max[1]]\n    ];\n};\n\n/**\n *\n *\n * @param {*} axisType\n * @param {*} fieldInfo\n * @param {*} axesCreators\n * @param {*} groupAxes\n *\n */\nexport const generateAxisFromMap = (axisType, fieldInfo, axesCreators, axesInfo, indices, facetFields) => {\n    let axisKey;\n    const { groupAxes, valueParser } = axesInfo;\n    const currentAxes = [];\n    const { fields, index } = fieldInfo;\n    const { cacheMaps } = axesCreators;\n    const map = cacheMaps[`${axisType}AxesMap`];\n\n    const commonAxisKey = getAxisKey(axisType, index);\n    fields.forEach((field, axisIndex) => {\n        axisKey = getAxisKey(axisType, index, axisIndex, dataTypeScaleMap[field.subtype()]);\n        const axisConfig = getAxisConfig({ index, axisIndex, axisType }, field, axesCreators, indices, facetFields);\n\n        let axis;\n        if (!map.has(axisKey)) {\n            axis = createSimpleAxis(axisConfig, field, axesCreators);\n        } else {\n            axis = map.get(axisKey);\n            axis._rotationLock = false;\n            axis.config(axisConfig);\n        }\n        axis.valueParser(valueParser);\n        currentAxes.push(axis);\n        map.set(axisKey, axis);\n    });\n\n    if (currentAxes.length) {\n        map.set(commonAxisKey, currentAxes);\n        groupAxes.add(commonAxisKey);\n    }\n\n    return currentAxes;\n};\n\nexport const sanitizeIndividualLayerConfig = (encodingConfigs, def) => {\n    [COLOR, SHAPE, SIZE].forEach((axis) => {\n        if (encodingConfigs[axis] && encodingConfigs[axis].field) {\n            def.forEach((conf) => {\n                conf.encoding = conf.encoding || {};\n                !conf.encoding[axis] && (conf.encoding[axis] = {});\n                conf.encoding[axis].field = encodingConfigs[axis].field;\n            });\n        }\n    });\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n    const xAxes = [];\n    const yAxes = [];\n\n    xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes.push(xAxis);\n    });\n    yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes.push(yAxis);\n    });\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n * return a default mark based on predefined set of rules of type and subtype of the fields\n *\n * @param {string} colFieldType dimension/measure - temporal/ordinal/nominal\n * @param {string} rowFieldType dimension/measure - temporal/ordinal/nominal\n * @return {Object} return mark type\n */\nexport const getDefaultMark = (colFieldType, rowFieldType) => {\n    let mark;\n\n    if (colFieldType === CATEGORICAL || rowFieldType === CATEGORICAL) {\n        mark = BAR;\n    } else if (colFieldType === TEMPORAL || rowFieldType === TEMPORAL) {\n        mark = LINE;\n    } else {\n        mark = POINT;\n    }\n\n    return mark;\n};\n\n/**\n *\n *\n * @param {*} axesCreators\n * @param {*} [fieldInfo=[]]\n *\n */\nexport const createRetinalAxis = (axesCreators, fieldProps = {}) => {\n    const { axisType, fieldsConfig } = axesCreators;\n    const field = fieldProps.field;\n    const axis = [];\n    const Cls = scaleMaps[axisType];\n\n    fieldProps.type = fieldProps.type ? fieldProps.type : getAxisType(fieldsConfig, field || null);\n    axis.push(new Cls(fieldProps));\n    return axis;\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} val\n *\n */\nexport const getIndex = (arr, val) => {\n    let i = 0;\n    let arrIndex = -1;\n\n    while (arrIndex === -1 && i < arr.length) {\n        if (arr[i].toString() === val.toString()) {\n            arrIndex = i;\n        }\n        i++;\n    }\n    return arrIndex;\n};\n\n/**\n *\n *\n * @param {*} colFields\n * @param {*} rowFields\n * @param {*} userLayerConfig\n *\n * @memberof CartesianEncoder\n */\nexport const getLayerConfFromFields = (colFields, rowFields, userLayerConfig) => userLayerConfig.filter((conf) => {\n    const userConf = conf instanceof Array ? conf : [conf];\n    const encodingArr = [].concat(...userConf.map(d => d.encoding).filter(d => d !== undefined));\n\n    if (!encodingArr.length) {\n        return true;\n    }\n\n    const xFields = [].concat(...encodingArr.map(d => [d.x && d.x.field, d.x0 && d.x0.field]))\n                .filter(d => d !== undefined && d !== null);\n    const yFields = [].concat(...encodingArr.map(d => [d.y && d.y.field, d.y0 && d.y0.field]))\n                .filter(d => d !== undefined && d !== null);\n\n    if (!xFields.length && !yFields.length) {\n        return true;\n    }\n\n    const colFieldExist = xFields.length ? xFields.every(d => colFields.indexOf(d) !== -1) : false;\n    const rowFieldExist = yFields.length ? yFields.every(d => rowFields.indexOf(d) !== -1) : false;\n    if (xFields.length && yFields.length) {\n        return colFieldExist && rowFieldExist;\n    }\n    return colFieldExist || rowFieldExist;\n});\n\nexport const resolveAxisConfig = (context, fieldInf, axisInfo) => {\n    const { rowIndex, columnIndex, axesObj } = axisInfo;\n    const { config, facetFields, resolver } = context;\n    const resolverAxes = resolver.axes();\n    const { RADIUS, ANGLE } = ENCODING;\n    [RADIUS, ANGLE, ANGLE0].forEach((enc) => {\n        const axesArr = resolverAxes[enc];\n        if (!axesArr[rowIndex]) {\n            axesArr[rowIndex] = [];\n        }\n        axesArr[rowIndex][columnIndex] = axesObj[enc];\n        const axisConfig = getObjProp(config.axes, enc) || {};\n\n        axesObj[enc].forEach((axis, i) => {\n            let userConfig = axisConfig;\n            if (axisConfig instanceof Function) {\n                userConfig = axisConfig(rowIndex, columnIndex, {\n                    axisFields: [fieldInf[enc][i]],\n                    facetFields\n                });\n            }\n            axis.config(userConfig);\n        });\n    });\n};\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    mergeRecursive,\n    STATE_NAMESPACES,\n    unionDomain,\n    COORD_TYPES,\n    toArray,\n    sortCategoricalField\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport {\n    generateAxisFromMap,\n    getDefaultMark,\n    getIndex,\n    getLayerConfFromFields,\n    getAdjustedDomain,\n    sanitizeIndividualLayerConfig\n} from './encoder-helper';\nimport { retriveDomainFromData } from '../group-helper';\n\nimport { ROW, COLUMN, COL, LEFT, TOP, MEASURE, BOTH, X, Y } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\nconst CARTESIAN = COORD_TYPES.CARTESIAN;\n\n/**\n *\n *\n * @export\n * @class CartesianEncoder\n * @extends {VisualEncoder}\n */\nexport default class CartesianEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     *\n     * @memberof CartesianEncoder\n     */\n    static type () {\n        return CARTESIAN;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof CartesianEncoder\n     */\n    createAxis (axesCreators, fieldInfo, context) {\n        const geomCellAxes = {};\n        const {\n            axes\n        } = axesCreators;\n        const {\n            projections,\n            indices\n        } = fieldInfo;\n        const {\n            rowFields,\n            columnFields\n        } = projections;\n        const {\n             rowIndex,\n             columnIndex\n        } = indices;\n        const axisFields = [{\n            fields: rowFields,\n            index: rowIndex\n        }, {\n            fields: columnFields,\n            index: columnIndex\n        }];\n        const { resolver, facetFields, geomCell } = context;\n        const xAxes = axes.x || [];\n        const yAxes = axes.y || [];\n\n        [rowFields, columnFields].forEach((fields, i) => {\n            const type = i === 0 ? ROW : COLUMN;\n            const axis = i === 0 ? Y : X;\n\n            if (fields.length > 1) {\n                axesCreators.position = BOTH;\n            } else {\n                axesCreators.position = this.axisFrom()[type];\n            }\n            geomCellAxes[axis] = generateAxisFromMap(axis, axisFields[i], axesCreators, {\n                groupAxes: axis === X ? xAxes : yAxes,\n                valueParser: resolver.valueParser()\n            }, indices, facetFields);\n        });\n        geomCell.axes(geomCellAxes);\n        return geomCellAxes;\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const resolver = context.resolver();\n        const units = resolver.units();\n        const domains = {\n            0: {},\n            1: {}\n        };\n        const config = context.config();\n        const fieldsObj = {\n            0: {},\n            1: {}\n        };\n\n        for (let rIdx = 0, len = units.length; rIdx < len; rIdx++) {\n            const unitsArr = units[rIdx];\n            for (let cIdx = 0, len2 = unitsArr.length; cIdx < len2; cIdx++) {\n                const unit = unitsArr[cIdx];\n                const axisFields = unit.fields();\n                const encodingDomains = unit.getDataDomain();\n                ['x', 'y'].forEach((axisType, axisTypeIndex) => {\n                    const fieldArr = axisFields[axisType];\n                    fieldArr.forEach((field, axisIndex) => {\n                        const key = !axisTypeIndex ? `0${cIdx}${axisIndex}` : `${rIdx}0${axisIndex}`;\n                        const dom = encodingDomains[axisType];\n                        const typeOfField = field.subtype();\n                        fieldsObj[axisTypeIndex][key] = field;\n\n                        if (dom && Object.keys(dom).length !== 0) {\n                            domains[axisTypeIndex][key] = unionDomain([(domains[axisTypeIndex] &&\n                                domains[axisTypeIndex][key]) || [], dom[`${field}`]], typeOfField);\n                        }\n                    });\n                });\n            }\n        }\n\n        const { x: xAxes, y: yAxes } = resolver.axes();\n        store.lockModel();\n        [xAxes, yAxes].forEach((axesArr, axisType) => {\n            axesArr.forEach((axes, idx) => {\n                let key;\n                let domain = [];\n                let adjustedDomain = [];\n                const min = [];\n                const max = [];\n                const typeOfAxis = axes[0].constructor.type();\n\n                if (axes.length > 1 && typeOfAxis === ScaleType.LINEAR && axes[0].config().alignZeroLine) {\n                    axes.forEach((axis, i) => {\n                        key = !axisType ? `0${idx}${i}` : `${idx}0${i}`;\n                        domain = domains[axisType][key];\n                        min[i] = domain[0];\n                        max[i] = domain[1];\n                    });\n                    adjustedDomain = getAdjustedDomain(max, min);\n                } else if (typeOfAxis === ScaleType.BAND) {\n                    /* Sort categorical fields to ensure consistency across all rows\n                    only if sorted by user */\n                    key = !axisType ? `0${idx}0` : `${idx}00`;\n                    const currentFieldName = fieldsObj[axisType][key].oneVar();\n                    const sortingOrder = config.sort && config.sort[currentFieldName];\n\n                    if (sortingOrder) {\n                        domains[axisType][key].sort((a, b) => sortCategoricalField(sortingOrder, a, b));\n                    }\n                }\n\n                axes.forEach((axis, index) => {\n                    key = !axisType ? `0${idx}${index}` : `${idx}0${index}`;\n                    domain = adjustedDomain[index] || domains[axisType][key];\n\n                    domain && axis.domain(domain);\n                    const type = !axisType ? 'x' : 'y';\n                    store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type}`, domain, `${idx}${index}`);\n                });\n            });\n        });\n        store.unlockModel();\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields, type) {\n        let facets = [];\n        let projections = [];\n        let counter = 0;\n        const primaryFacets = [];\n        const secondaryFacets = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n        const axisFrom = this.axisFrom();\n\n        for (let i = 0; i < primaryLen; i++) {\n            let projArr = [primaryFields[i]];\n            const primaryField = primaryFields[i];\n\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter];\n                if (secondaryField && secondaryField.type() === MEASURE) {\n                    counter++;\n                    projArr = [primaryField, secondaryField];\n                }\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n                primaryFacets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                    secondaryFacets.push(secondaryField);\n                }\n            }\n        }\n        if ((primaryFacets.length || secondaryFacets.length) && !projections.length) {\n            type = type === COL ? COLUMN : type;\n            if ((axisFrom[type] === LEFT || axisFrom[type] === TOP) && primaryFacets.length) {\n                const axisFromIndex = primaryFacets.length - 1;\n                const facet = primaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(secondaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    secondaryFacets.splice(existIndex, 1);\n                }\n                primaryFacets.splice(axisFromIndex, 1);\n            } else {\n                const axisFromIndex = 0;\n                const facet = secondaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(primaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    primaryFacets.splice(existIndex, 1);\n                }\n                secondaryFacets.splice(axisFromIndex, 1);\n            }\n        }\n\n        facets = [...primaryFacets, ...secondaryFacets];\n        facets = facets.filter((el, index, self) => index === self.findIndex(t => (t.toString() === el.toString())));\n        return {\n            facets,\n            projections\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof CartesianEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        return super.fieldSanitizer(datamodel, config);\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     *\n     * @memberof CartesianEncoder\n     */\n    getRetinalFieldsDomain (dataModels, encoding) {\n        const groupedModel = dataModels.groupedModel;\n        const domains = {};\n        for (const key in encoding) {\n            if ({}.hasOwnProperty.call(encoding, key)) {\n                const encodingObj = encoding[key];\n                const field = encodingObj.field;\n                if (!encodingObj.domain && field) {\n                    const domain = retriveDomainFromData(groupedModel, field);\n                    domains[field] = domain;\n                }\n            }\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     * @memberof CartesianEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n        // let currentLayerIndex = 0;\n        layerArray.length && layerArray.forEach((layer, i) => {\n            const def = layerFactory.sanitizeLayerConfig(layer);\n            def.order = i;\n            serializedLayers.push(def);\n        });\n        return serializedLayers;\n    }\n\n    sanitizeLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n        userLayerConfig.forEach((config) => {\n            const def = toArray(config.def);\n            sanitizeIndividualLayerConfig(encodingConfigs, def);\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof CartesianEncoder\n     */\n    getLayerConfig (fields, userLayerConfig, retinalConfig) {\n        const layerConfig = [];\n        const {\n            columnFields,\n            rowFields\n        } = fields;\n\n        // let currentLayerIndex = 0;\n        columnFields.forEach((colField) => {\n            const colFieldName = colField.toString();\n            rowFields.forEach((rowField) => {\n                let configs = [];\n                const rowFieldName = rowField.toString();\n                const encoding = {\n                    x: {\n                        field: colFieldName\n                    },\n                    y: {\n                        field: rowFieldName\n                    }\n                };\n                const rowFieldType = rowField.subtype();\n                const colFieldType = colField.subtype();\n                const mark = getDefaultMark(colFieldType, rowFieldType);\n\n                const defConfigs = [{\n                    mark,\n                    def: {\n                        mark,\n                        encoding\n                    }\n                }];\n\n                const layerConfigs = getLayerConfFromFields(colField.getMembers(),\n                    rowField.getMembers(), userLayerConfig || []);\n                if (layerConfigs.length) {\n                    configs = layerConfigs.map((layerConf) => {\n                        const mergedLayerConf = mergeRecursive(mergeRecursive({}, defConfigs[0].def), layerConf);\n                        const serializedLayerConfig = layerFactory.getSerializedConf(mergedLayerConf.mark,\n                            mergedLayerConf);\n                        return {\n                            mark: mergedLayerConf.mark,\n                            order: mergedLayerConf.order,\n                            def: serializedLayerConfig\n                        };\n                    });\n                } else {\n                    configs = defConfigs;\n                }\n\n                layerConfig.push(...configs);\n            });\n        });\n        return this.sanitizeLayerConfig(retinalConfig, layerConfig);\n    }\n}\n","import { AngleAxis, RadiusAxis } from '@chartshq/muze-axis';\nimport { layerFactory, ENCODING } from '@chartshq/visual-layer';\nimport {\n    mergeRecursive,\n    STATE_NAMESPACES,\n    GROUP_BY_FUNCTIONS,\n    COORD_TYPES,\n    toArray,\n    getObjProp,\n    defaultValue\n} from 'muze-utils';\nimport VisualEncoder from './visual-encoder';\nimport { SIZE, MEASURE, ARC, COLOR } from '../enums/constants';\nimport { sanitizeIndividualLayerConfig, resolveAxisConfig } from './encoder-helper';\nimport { SimpleVariable } from '../variable';\n\nconst POLAR = COORD_TYPES.POLAR;\nconst { RADIUS, ANGLE, ANGLE0 } = ENCODING;\n\nconst axesCls = {\n    [RADIUS]: RadiusAxis,\n    [ANGLE]: AngleAxis,\n    [ANGLE0]: AngleAxis\n};\n\nconst getSizeMultiplier = (sizeVal, sizeAxis) => {\n    const sizeAxisDomain = sizeAxis.domain();\n    const sizeMultiplier = sizeAxis.getSize(sizeVal) / (sizeAxisDomain ? sizeAxis.range()[1] : sizeAxis.config().value);\n    return sizeMultiplier;\n};\n\nconst setRadiusFactor = (context) => {\n    const data = context.data();\n    const sizeField = context.retinalFields().size.field;\n    const { radius, size } = context.axes();\n\n    if (sizeField && radius && radius.length) {\n        const sizeFieldIndex = data.getFieldsConfig()[sizeField].index;\n        const sizeVal = data.getData().data.reduce((acc, val) => acc + val[sizeFieldIndex], 1);\n        const sizeMultiplier = getSizeMultiplier(sizeVal, size[0]);\n        radius.forEach(axis => axis.setRadiusFactor(sizeMultiplier));\n    }\n};\n\n/**\n *\n *\n * @export\n * @class PolarEncoder\n * @extends {VisualEncoder}\n */\nexport default class PolarEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof PolarEncoder\n     */\n    createAxis (axesCreators, fieldInfo, context) {\n        const {\n            axes\n        } = axesCreators;\n        const geomCellAxes = axes;\n        const {\n            indices\n        } = fieldInfo;\n        const {\n            rowIndex,\n            columnIndex\n        } = indices;\n        // Dummy axes for polar, to create blank cells\n        const pieAxes = geomCellAxes.pie || [];\n\n        pieAxes[rowIndex] = pieAxes[rowIndex] || [];\n        pieAxes[rowIndex][columnIndex] = [];\n\n        const axesObj = {};\n        const { geomCell, resolver } = context;\n        const layers = resolver.matrixLayers();\n        const resolverAxes = resolver.axes();\n        const cellLayers = layers[rowIndex][columnIndex];\n        const fields = {\n            radius: {},\n            angle: {},\n            angle0: {}\n        };\n\n        cellLayers.forEach((layerConf) => {\n            const def = layerConf.def;\n            [ANGLE, ANGLE0, RADIUS].forEach((enc) => {\n                const field = getObjProp(def.encoding, enc, 'field');\n                field && (fields[enc][field] = 0);\n            });\n        });\n        const fieldInf = {};\n        const varInstances = {};\n\n        for (const encType in fields) {\n            fieldInf[encType] = Object.keys(fields[encType]);\n            axesObj[encType] = [];\n            varInstances[encType] = [];\n            fieldInf[encType].forEach((field, i) => {\n                varInstances[encType][i] = new SimpleVariable(field);\n                axesObj[encType][i] = new axesCls[encType]();\n            });\n            axesObj[encType][axesObj[encType].length] = new axesCls[encType]();\n        }\n        resolveAxisConfig(context, fieldInf, {\n            axesObj,\n            rowIndex,\n            columnIndex\n        });\n        geomCell.axes(axesObj)\n            .fields(Object.assign({}, varInstances, geomCell.fields()));\n        resolverAxes.pie = pieAxes;\n        return geomCellAxes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields) {\n        let counter = 0;\n        const facets = [];\n        const projections = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n\n        for (let i = 0; i < primaryLen; i++) {\n            const primaryField = primaryFields[i];\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter++];\n                const projArr = secondaryField ? [primaryField, secondaryField] : [primaryField];\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                }\n            }\n        }\n        return {\n            facets,\n            projections\n        };\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        store.lockModel();\n        const domainProps = {\n            radius: [],\n            angle: [],\n            angle0: []\n        };\n        const axes = context.resolver().axes();\n        context.matrixInstance().value.each((cell, rIdx, cIdx) => {\n            const unit = cell.valueOf();\n            const unitDomains = unit.getDataDomain();\n            const fields = unit.fields();\n            setRadiusFactor(unit);\n            [RADIUS, ANGLE, ANGLE0].forEach((encType) => {\n                const encodingFields = fields[encType];\n                const domains = unitDomains[encType] || {};\n                encodingFields.forEach((field, i) => {\n                    !domainProps[encType][rIdx] && (domainProps[encType][rIdx] = []);\n                    !domainProps[encType][rIdx][cIdx] && (domainProps[encType][rIdx][cIdx] = []);\n                    domainProps[encType][rIdx][cIdx][i] = domains[`${field}`] || [];\n                });\n            });\n        });\n\n        for (const key in domainProps) {\n            const specificAxes = axes[key];\n            specificAxes.forEach((axesArr, rIdx) => {\n                axesArr.forEach((axisArr, cIdx) => {\n                    axisArr.forEach((axis, i) => {\n                        axis.domain(defaultValue(getObjProp(domainProps[key], rIdx, cIdx, i), []));\n\n                        store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${key}`, domainProps[key],\n                            `${rIdx}-${cIdx}`);\n                    });\n                });\n            });\n        }\n        store.unlockModel();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    setCommonDomain () {\n        // No domain to be set\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    static type () {\n        return POLAR;\n    }\n\n    layers (...layers) {\n        if (layers.length) {\n            this._layers = layers[0];\n            return this;\n        }\n        return this._layers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof PolarEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        let sanitizedRows = [[], []];\n        let sanitizedColumns = [[], []];\n        const fields = super.fieldSanitizer(datamodel, config);\n        const {\n            layers\n        } = config;\n        const {\n            rows,\n            columns\n        } = fields;\n        const layer = layers[0];\n        const encoding = layer.encoding;\n        const radius = encoding && encoding.radius ? encoding.radius.field : null;\n        const angle = encoding && encoding.angle ? encoding.angle.field : null;\n        const sanitizedFields = [sanitizedRows, sanitizedColumns];\n\n        [rows, columns].forEach((fieldType, typeIndex) => {\n            fieldType.forEach((fieldSet, i) => fieldSet.forEach((field) => {\n                if (field.toString() !== radius && field.toString() !== angle && field.type() !== MEASURE) {\n                    sanitizedFields[typeIndex][i].push(field);\n                }\n            }));\n        });\n        sanitizedColumns = [...new Set(sanitizedColumns)];\n        sanitizedRows = [...new Set(sanitizedRows)];\n        this.fieldInfo({ rows: sanitizedRows, columns: sanitizedColumns });\n        return this.fieldInfo();\n    }\n\n    getRetinalFieldsDomain (dataModels, encoding, facetFields, groupBy) {\n        let sizeField;\n        let colorField;\n        const fields = [];\n        const layers = this.layers();\n        const dataModel = dataModels.groupedModel;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const domains = {};\n        if (layers && layers[0]) {\n            const layer = layers[0];\n            const layerEncoding = layer.def.encoding || {};\n\n            [RADIUS, ANGLE, SIZE, COLOR].forEach((encType) => {\n                const field = layerEncoding[encType] ? layerEncoding[encType].field : '';\n                const measureField = fieldsConfig[field] && fieldsConfig[field].def.type === MEASURE;\n                if (encType === SIZE && measureField) {\n                    sizeField = field;\n                }\n                if (encType === COLOR) {\n                    colorField = field;\n                }\n                fieldsConfig[field] && !measureField && fields.push(field);\n            });\n        }\n\n        if (sizeField) {\n            domains[sizeField] = dataModel.groupBy(facetFields, {\n                [sizeField]: GROUP_BY_FUNCTIONS.SUM\n            }).getFieldspace().fieldsObj()[sizeField].domain();\n        }\n\n        if (colorField) {\n            const dm = dataModel.groupBy([...facetFields, ...fields], groupBy.measures);\n            domains[colorField] = dm.getFieldspace().fieldsObj()[colorField].domain();\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof PolarEncoder\n     */\n    getLayerConfig (fields, userLayerConfig, retinalConfig) {\n        let layerConfig = [];\n        const {\n                columnFields,\n                rowFields\n            } = fields;\n        const allFields = [...columnFields, ...rowFields];\n\n        allFields.forEach(() => {\n            const encoding = {};\n            let config = {\n                mark: ARC,\n                def: {\n                    encoding\n                }\n            };\n            if (userLayerConfig && userLayerConfig.length > 0) {\n                config = mergeRecursive(config, userLayerConfig[0]);\n            }\n            layerConfig.push(config);\n        });\n        if (layerConfig.length === 0) {\n            layerConfig = userLayerConfig;\n        }\n        const sanitizedConfig = this.sanitizeLayerConfig(retinalConfig, layerConfig);\n        this.layers(sanitizedConfig);\n        return sanitizedConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     *\n     * @memberof PolarEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n\n        layerArray.length && layerArray.forEach((layer) => {\n            const def = layerFactory.getSerializedConf(layer.mark, layer);\n            serializedLayers.push({\n                mark: layer.mark,\n                def\n            });\n        });\n        return serializedLayers;\n    }\n\n    sanitizeLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n\n        userLayerConfig.forEach((config) => {\n            const def = toArray(config.def);\n            sanitizeIndividualLayerConfig(encodingConfigs, def);\n            def.forEach((conf) => {\n                const encoding = conf.encoding || (conf.encoding = {});\n                !encoding.angle && (encoding.angle = {});\n                const angleField = getObjProp(encoding.angle, 'field');\n                const angle0Field = getObjProp(encoding.angle0, 'field');\n                if (!angleField) {\n                    Object.assign(encoding.angle, {\n                        field: encodingConfigs.color && encodingConfigs.color.field\n                    });\n                }\n                if (!angle0Field) {\n                    !encoding.angle0 && (encoding.angle0 = {});\n                    Object.assign(encoding.angle0, {\n                        field: encoding.angle.field\n                    });\n                }\n            });\n\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n}\n","import { createRetinalAxis } from './encoder-helper';\nimport { COLOR, SHAPE, SIZE } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class RetinalEncoder\n * @extends {VisualEncoder}\n */\nexport default class RetinalEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     *\n     * @memberof RetinalEncoder\n     */\n    createAxis (axesCreators) {\n        const { fieldsConfig, config } = axesCreators;\n        const newAxes = {};\n\n        [COLOR, SHAPE, SIZE].forEach((axisType) => {\n            newAxes[`${axisType}`] = createRetinalAxis({ axisType, fieldsConfig }, config[axisType]);\n        });\n        return newAxes;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof RetinalEncoder\n     */\n    static type () {\n        return 'retinal';\n    }\n\n    /**\n     *\n     *\n     * @param {*} context\n     *\n     * @memberof RetinalEncoder\n     */\n    setCommonDomain (context) {\n        const { domains, axes, encoding } = context;\n\n        Object.entries(encoding).forEach((enc) => {\n            if (enc[1] && enc[1].field) {\n                const encType = enc[0];\n                const field = enc[1].field;\n\n                if (field) {\n                    axes[encType].forEach((axis) => {\n                        const domain = domains[field];\n                        !enc[1].domain && axis.updateDomain(domain);\n                    });\n                }\n            }\n        });\n        return axes;\n    }\n}\n","import { Store, FieldType, COORD_TYPES, getObjProp, DataModel } from 'muze-utils';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { BaseLayer } from '@chartshq/visual-layer';\nimport { DATA_UPDATE_COUNTER } from '../enums/defaults';\nimport { Variable } from '../variable';\nimport { PolarEncoder, CartesianEncoder } from '../encoder';\nimport {\n    DIMENSION,\n    MEASURE,\n    ORDINAL,\n    LINEAR,\n    ROW,\n    COLUMN,\n    COL,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    COLOR,\n    SIZE,\n    TEMPORAL,\n    SHAPE,\n    INTERACTION,\n    GRID_LINES,\n    GRID_BANDS,\n    HEADER,\n    FACET,\n    X,\n    Y,\n    ARC,\n    RADIUS,\n    ANGLE\n} from '../enums/constants';\n\nconst POLAR = COORD_TYPES.POLAR;\n\n/**\n * Creates an instance of a store which contains the arguments to make the class reactive\n *\n * @return {Object} instance of store\n * @memberof VisualGroup\n */\nexport const initStore = () => new Store({\n    [DATA_UPDATE_COUNTER]: DATA_UPDATE_COUNTER\n});\n\n/**\n *\n *\n * @param {*} arr\n */\nexport const isDistributionEqual = arr => [...arr[0], ...arr[1]].reduce((isEqual, row) => {\n    const rowType = row.type();\n\n    if (rowType === MEASURE || rowType === TEMPORAL) {\n        isEqual = true;\n    }\n    return isEqual;\n}, false);\n\n/**\n *\n *\n */\nexport const initializeCacheMaps = () => ({\n    cellMap: new Map(),\n    xAxesMap: new Map(),\n    yAxesMap: new Map(),\n    entryCellMap: new Map(),\n    exitCellMap: new Map()\n});\n\n/**\n *\n *\n * @param {*} axisName\n * @param {*} id\n */\nexport const getAxisKey = (axisName, ...params) => `${axisName}-axis-${params.join('-')}`;\n\n/**\n *\n *\n * @param {*} rowId\n * @param {*} columnId\n */\nexport const getCellKey = (rowId, columnId) => `cell-${rowId}-${columnId}`;\n\n/**\n *\n *\n * @param {*} config\n *\n */\nexport const extractUnitConfig = (config) => {\n    const unitConfig = {};\n    const attrNames = [INTERACTION, GRID_LINES, GRID_BANDS];\n\n    attrNames.forEach((attr) => {\n        if (config[attr] !== undefined) {\n            unitConfig[attr] = config[attr];\n        }\n    });\n    return unitConfig;\n};\n\n/**\n *\n *\n * @param {*} headers\n * @param {*} index\n * @param {*} rowLength\n *\n * @memberof MatrixResolver\n */\nexport const getHeaderText = (headers, index, rowLength) => {\n    let header = '';\n\n    if (index === rowLength - 1 && headers.length > rowLength) {\n        for (let i = index; i < headers.length - 1; i++) {\n            header += `${headers[i].toString()} / `;\n        }\n        header += headers[headers.length - 1].toString();\n        return header;\n    } else if (headers[index]) {\n        return headers[index].toString();\n    }\n    return '';\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} fieldHeaders\n * @param {*} TextCell\n * @param {*} labelManager\n *\n */\nexport const headerCreator = (fields, fieldHeaders, TextCell, { classPrefix, labelManager }) => {\n    const headers = fields.length > 0 ? fields[0].map((cell, i) => new TextCell({\n        type: HEADER,\n        className: `${classPrefix}-grid-headers`\n    }, {\n        labelManager\n    }).source(getHeaderText(fieldHeaders, i, fields[0].length))\n                    .config({ show: cell.config().show })) : [];\n    return headers;\n};\n\n/**\n *\n *\n * @param {*} variable\n * @param {*} allFields\n *\n */\nexport const findInGroup = (variable, allFields) => {\n    let channel = null;\n\n    [COLOR, SIZE, SHAPE].forEach((e) => {\n        if (this.store.get(e) && variable === this.store.get(e)[0]) {\n            channel = e;\n        }\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    [ROW, COL].forEach((facetType) => {\n        allFields[`${facetType}Facets`].forEach((e) => {\n            if (e.toString() === variable) {\n                channel = { channel: FACET, type: facetType === COL ? COLUMN : ROW };\n            }\n        });\n    });\n\n    if (channel) {\n        return channel;\n    }\n\n    [ROW, COL].forEach((projType) => {\n        allFields[`${projType}Projections`].forEach((e) => {\n            e.forEach((m) => {\n                if (m.toString() === variable) {\n                    channel = projType === COL ? X : Y;\n                }\n            });\n        });\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    return null;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} field\n */\nexport const getAxisType = (fieldsConfig, field) => {\n    let fieldType = ORDINAL;\n\n    if (field && fieldsConfig[field].def.type !== DIMENSION) {\n        fieldType = LINEAR;\n    }\n    return fieldType;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} fieldName\n *\n */\nexport const retriveDomainFromData = (datamodel, fieldName) => {\n    const field = datamodel.getFieldspace().fields.find(d => d.name() === fieldName.toString());\n    return field.domain();\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    let xAxes = null;\n    let yAxes = null;\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n\n    xAxisSet && xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes = xAxes || [];\n        xAxes.push(xAxis);\n    });\n\n    yAxisSet && yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes = yAxes || [];\n        yAxes.push(yAxis);\n    });\n\n    return {\n        xAxes, yAxes\n    };\n};\n\nconst hasPolarEncodings = layerConf => layerConf.mark === ARC || [RADIUS, ANGLE].some(field =>\n        getObjProp(layerConf.encoding, field));\n\n/**\n *\n *\n * @param {*} layers\n *\n */\nexport const getEncoder = (layers) => {\n    let encoder = new CartesianEncoder();\n\n    if (layers.length) {\n        // Figuring out the kind of layers the group will have\n        encoder = layers.some(layerConf => hasPolarEncodings(layerConf)) ? new PolarEncoder() : encoder;\n    }\n    return encoder;\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} userAxisFromConfig\n *\n */\nexport const getHeaderAxisFrom = (type, fields, userAxisFromConfig) => {\n    let axisFrom = userAxisFromConfig[type];\n    let headerFrom = '';\n    const options = type === ROW ? [LEFT, RIGHT] : [BOTTOM, TOP];\n    const [firstField, secondField] = fields;\n    const firstFieldType = i => (firstField.length ? firstField[i].type() : null);\n    const secondFieldType = i => (secondField.length ? secondField[i].type() : null);\n\n    if (firstFieldType(firstField.length - 1) === DIMENSION && secondFieldType(0) === DIMENSION) {\n        headerFrom = axisFrom ? options[1 - options.indexOf(axisFrom)] : options[1];\n\n        if (type === COLUMN && (firstField[firstField.length - 1].toString() === secondField[0].toString())) {\n            axisFrom = TOP;\n        } else {\n            axisFrom = axisFrom || options[0];\n        }\n    } else if (secondFieldType(secondField.length - 1) === DIMENSION) {\n        headerFrom = type === ROW ? RIGHT : BOTTOM;\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else {\n        headerFrom = type === ROW ? LEFT : TOP;\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    if (firstFieldType(firstField.length - 1) === MEASURE && secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    } else if (secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else if (firstFieldType(firstField.length - 1) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    return [headerFrom, axisFrom];\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} layers\n *\n * @memberof MatrixResolver\n */\nexport const setFacetsAndProjections = (context, fieldInfo, encoder) => {\n    const {\n        fields,\n        type\n    } = fieldInfo;\n    const { facets, projections } = encoder.simpleEncoder.getFacetsAndProjections(fields, type);\n\n    context.facets({ [`${type}Facets`]: facets });\n    context.projections({ [`${type}Projections`]: projections });\n\n    return { facets, projections, fields };\n};\n\nconst getRowBorders = (left, right) => {\n    const borders = {};\n    borders.top = false;\n    borders.bottom = false;\n    if (left.length > 1 || right.length > 1) {\n        borders.top = true;\n        borders.bottom = true;\n    }\n    return borders;\n};\n\nconst getColumnsBorders = (top, bottom) => {\n    const borders = {};\n    borders.left = false;\n    borders.right = false;\n    if (top.length || bottom.length) {\n        if ((top[0] && top[0].length > 1) || (bottom[0] && bottom[0].length > 1)) {\n            borders.left = true;\n            borders.right = true;\n        }\n    }\n    return borders;\n};\n\nconst getValueBorders = (rows, columns) => {\n    const borders = { top: true, left: true, bottom: true, right: true };\n    const borderTypeRow = [LEFT, RIGHT];\n    const borderTypeCol = [TOP, BOTTOM];\n    rows.forEach((e, i) => {\n        if (e[0] && e[0].length) {\n            borders[borderTypeRow[i]] = true;\n        } else {\n            borders[borderTypeRow[i]] = false;\n        }\n    });\n    columns.forEach((e, i) => {\n        if (e.length) {\n            borders[borderTypeCol[i]] = true;\n        } else {\n            borders[borderTypeCol[i]] = false;\n        }\n    });\n\n    return borders;\n};\n\nexport const getBorders = (matrices, encoder) => {\n    let showRowBorders = { top: false, bottom: false };\n    let showColBorders = { left: false, right: false };\n    let showValueBorders = { top: false, bottom: false, left: false, right: false };\n    const {\n        rows,\n        columns,\n        values: valueMatrix\n    } = matrices;\n    const [leftRows, rightRows] = rows;\n    const [topColumns, bottomColumns] = columns;\n    const {\n        rowDimensions,\n        columnDimensions,\n        rowTemporalFields,\n        columnTemporalFields,\n        columnMeasures,\n        rowMeasures\n    } = encoder.fieldInfo();\n    const allDimensionLength = rowDimensions.length + columnDimensions.length;\n    const allMeasuresLength = rowMeasures.length + columnMeasures.length;\n    const allTemporalFieldsLength = rowTemporalFields.length + columnTemporalFields.length;\n\n    if (encoder.constructor.type() === POLAR) {\n        if (!allDimensionLength) {\n            return { showRowBorders, showColBorders, showValueBorders };\n        }\n    } else if (!allMeasuresLength && !allTemporalFieldsLength && allDimensionLength <= 2) {\n        return { showRowBorders, showColBorders, showValueBorders };\n    }\n\n    showRowBorders = getRowBorders(leftRows, rightRows);\n    showColBorders = getColumnsBorders(topColumns, bottomColumns);\n    showValueBorders = getValueBorders([leftRows, rightRows], [topColumns, bottomColumns]);\n\n    if (valueMatrix.length > 1) {\n        showValueBorders.top = true;\n        showValueBorders.bottom = true;\n    }\n    if (valueMatrix.length && valueMatrix[0].length > 1) {\n        showValueBorders.left = true;\n        showValueBorders.right = true;\n    }\n    return { showRowBorders, showColBorders, showValueBorders };\n};\n\nexport const getFieldsFromSuppliedLayers = (suppliedLayerConfig, fieldsConfig) => {\n    let fields = [];\n    const encodingArr = suppliedLayerConfig.map(conf => (conf.encoding || {}));\n    fields = [...fields, [].concat(...encodingArr.map(enc => Object.values(enc).map(d => d.field)))];\n    fields = fields.filter(field => fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n    return fields;\n};\n\nexport const extractFields = (facetsAndProjections, layerFields) => {\n    const fields = Object.values(facetsAndProjections).map((arr) => {\n        const flattenArray = [].concat(...arr);\n        return [].concat(...flattenArray.map((field) => {\n            if (field instanceof Variable) {\n                return field.getMembers();\n            }\n            return field;\n        }));\n    });\n    return [].concat(...fields, ...layerFields);\n};\n\n/**\n * This method sorts the facets fields inplace if field is of categorical type\n * @param {Object} facets Array of facets\n * @param {Array} keys Array of the facet field values\n * @param {Object} config configuration object\n * @return {Array} Returns sorted facets\n */\nexport const sortFacetFields = (facets, keys, config) => {\n    /**\n     * Check if the facet sorted by the user is plotted\n     * If an incorrect field is sorted, return the keys as is\n     */\n    const schema = [];\n    const facetNames = [];\n    const sortInfo = [];\n    const sortConfig = config.sort;\n\n    facets.forEach((facet) => {\n        const name = `${facet}`;\n        const facetSortConfig = sortConfig[name];\n\n        if (facetSortConfig) {\n            sortInfo.push([name, facetSortConfig]);\n        } else {\n            sortInfo.push([name, null]);\n        }\n        schema.push(facet.getSchemaDef());\n    });\n\n    return new DataModel([facetNames, ...keys], schema).getData({ sort: sortInfo }).data;\n};\n\nexport const removeExitCells = (resolver) => {\n    const exitCells = resolver.cacheMaps().exitCellMap;\n    const store = resolver.store();\n    const qualifiedStateProps = [].concat(...VisualUnit.getQualifiedStateProps(),\n        ...BaseLayer.getQualifiedStateProps());\n    store.lockCommits(qualifiedStateProps);\n    exitCells.forEach((placeholder) => {\n        placeholder.remove();\n    });\n    store.unlockCommits(qualifiedStateProps);\n};\n","import { DataModel } from 'muze-utils';\nimport { sortFacetFields } from './group-utils';\n\n/**\n* Gets name of fields form the variables\n*\n* @param {*} fields1\n* @param {*} [fields2=[]]\n*\n*/\nconst getFieldNames = fieldVar => fieldVar.reduce((acc, d) => {\n    acc = [...acc, ...d.getMembers()];\n    return acc;\n}, []);\n\n/**\n*\n*\n* @param {*} fieldInfo\n* @returns\n*/\nconst prepareProjectionInfo = (fieldInfo) => {\n    const {\n        colProjections,\n        rowProjections\n    } = fieldInfo;\n    const uniqueFields = [];\n    let indices = [];\n    let projections = [];\n\n    rowProjections.forEach((rowProj, rIndex) => {\n        const newRIndex = rIndex;\n        colProjections.forEach((colProj, cIndex) => {\n            const newCIndex = cIndex;\n            const newRowProj = getFieldNames(rowProj);\n            const newColProj = getFieldNames(colProj);\n\n            uniqueFields.push([...newRowProj, ...newColProj]);\n            indices.push({ rowIndex: newRIndex, colIndex: newCIndex });\n            projections.push({ rowFields: rowProj, columnFields: colProj });\n        });\n    });\n    indices = indices.length ? indices : [{ rowIndex: 0, colIndex: 0 }];\n    projections = projections.length ? projections : [{ rowFields: [], columnFields: [] }];\n    return { uniqueFields, indices, projections };\n};\n\n/**\n*\n*\n* @param {*} fieldInfo\n* @returns\n*/\nconst prepareFacetInfo = (fieldInfo) => {\n    const {\n        rowFacets,\n        colFacets\n    } = fieldInfo;\n\n    const rowFacetNames = getFieldNames(rowFacets);\n    const colFacetNames = getFieldNames(colFacets);\n    const allFacets = [...rowFacetNames, ...colFacetNames];\n\n    return { rowFacetNames, colFacetNames, allFacets, rowFacets, colFacets };\n};\n\n/**\n*\n*\n* @param {*} context\n* @param {*} facetNames\n* @param {*} hashMap\n* @param {*} keys\n* @param {*} index\n* @returns\n*/\nconst prepareHashMaps = (context, facetNames, hashMap, keys, index) => {\n    const rowKey = [];\n    facetNames.forEach((name) => {\n        const key = context._derivation[context._derivation.length - 1].meta.keys[name];\n\n        rowKey.push(key);\n    });\n\n    const joinedRowKey = rowKey.join(',');\n\n    if (hashMap[joinedRowKey] === undefined) {\n        hashMap[joinedRowKey] = index++;\n        keys.push(rowKey);\n    }\n    return rowKey;\n};\n\nconst createJoinedKeys = keys => keys.map(e => ({\n    keyArr: e,\n    joinedKey: e.join(',')\n}));\n\n/**\n*\n*\n* @param {*} splitModels\n* @param {*} facetInfo\n* @returns\n*/\nconst getSplitModelHashMap = (splitModels, facetInfo, config) => {\n    const {\n        rowFacetNames,\n        colFacetNames,\n        rowFacets,\n        colFacets\n    } = facetInfo;\n\n    const rowKeyHashMap = {};\n    const colKeyHashMap = {};\n\n    const rowKeys = [];\n    const colKeys = [];\n    const rowIndex = 0;\n\n    const splitModelsHashMap = {};\n\n    splitModels.forEach((splitContext) => {\n        const rowKey = prepareHashMaps(splitContext, rowFacetNames, rowKeyHashMap, rowKeys, rowIndex);\n        const colKey = prepareHashMaps(splitContext, colFacetNames, colKeyHashMap, colKeys, 1);\n\n        splitModelsHashMap[`${rowKey}-${colKey}`] = splitContext;\n    });\n\n    return {\n        splitModelsHashMap,\n        rowKeys: createJoinedKeys(sortFacetFields(rowFacets, rowKeys, config)),\n        colKeys: createJoinedKeys(sortFacetFields(colFacets, colKeys, config))\n    };\n};\n\n/**\n * Formats row or columns keys with the provided formatter.\n *\n * @param {Array} keys - The collection of row or column keys.\n * @param {Array} formatterList - The list of corresponding formatter.\n */\nconst formatKeys = (keys, formatterList) => {\n    const formattedKeys = [];\n    keys.forEach((rKeys, rIdx) => {\n        formattedKeys[rIdx] = [];\n        rKeys.forEach((key, idx) => {\n            formattedKeys[rIdx][idx] = formatterList[idx](key);\n        });\n    });\n    return formattedKeys;\n};\n\n/**\n*\n*\n* @param {Object} context\n* @param {Object} fieldInfo\n* @returns\n*/\nconst splitByColumn = (context, optionalProjections) => {\n    const {\n        matrix,\n        dataModel,\n        rowIndex,\n        colIndex,\n        facetInfo,\n        projectionInfo,\n        geomCellCreator\n    } = context;\n    const {\n        indices,\n        uniqueFields,\n        projections\n    } = projectionInfo;\n\n    const commonFields = optionalProjections;\n\n    dataModel.splitByColumn(uniqueFields, commonFields).forEach((model, i) => {\n        let { rowIndex: row, colIndex: col } = indices[i];\n        row += rowIndex;\n        col += colIndex;\n\n        matrix[row] = matrix[row] || [];\n\n        const projectionIndexObject = {\n            indices: {\n                rowIndex: row,\n                columnIndex: col\n            },\n            projections: projections[i]\n        };\n\n        matrix[row][col] = geomCellCreator(model, projectionIndexObject, facetInfo);\n    });\n    const lastIndex = indices[indices.length - 1];\n\n    return {\n        rowIndex: lastIndex.rowIndex + rowIndex,\n        colIndex: lastIndex.colIndex + colIndex\n    };\n};\n\nconst createColumnDataModels = (colContext, fieldInfo, sourceDM) => {\n    let context = {};\n    const {\n        rowFacets,\n        colFacets\n    } = fieldInfo;\n    const {\n        rowKeyArr,\n        rowKey,\n        colKeyObj,\n        newRowIndex,\n        splitModelsHashMap,\n        currentColumnIndex\n    } = colContext;\n\n    const { keyArr: colKeyArr, joinedKey: colKey } = colKeyObj;\n    const hashMapKey = splitModelsHashMap[`${rowKey}-${colKey}`];\n\n    if (hashMapKey) {\n        context = { dataModel: hashMapKey };\n    } else {\n        const emptyDm = new DataModel([], sourceDM.getData().schema);\n        context = { dataModel: emptyDm };\n    }\n\n    context = {\n        ...context,\n        ...colContext,\n        facetInfo: {\n            rowFacets: [rowFacets, rowKeyArr],\n            colFacets: [colFacets, colKeyArr]\n        },\n        rowIndex: newRowIndex,\n        colIndex: currentColumnIndex\n    };\n    const dataModels = splitByColumn(context, fieldInfo.optionalProjections);\n\n    return {\n        columnIndex: dataModels.colIndex + 1,\n        rowIndex: dataModels.rowIndex\n    };\n};\n\nconst createRowDataModels = (rowContext, fieldInfo, sourceDM) => {\n    let currentColumnIndex = 0;\n    let rowIndexForCurrentKey = 0;\n    const {\n        colKeys,\n        rowKeyObj,\n        currentRowIndex\n    } = rowContext;\n    const newRowIndex = currentRowIndex;\n    const { keyArr: rowKeyArr, joinedKey: rowKey } = rowKeyObj;\n    const colContext = {\n        ...rowContext,\n        rowKeyArr,\n        rowKey,\n        newRowIndex\n    };\n    rowIndexForCurrentKey = currentRowIndex;\n    if (colKeys.length) {\n        colKeys.forEach((colKeyObj) => {\n            colContext.colKeyObj = colKeyObj;\n            colContext.currentColumnIndex = currentColumnIndex;\n            const { columnIndex, rowIndex } = createColumnDataModels(colContext, fieldInfo, sourceDM);\n\n            currentColumnIndex = columnIndex;\n            rowIndexForCurrentKey = rowIndex;\n        });\n    } else {\n        colContext.colKeyObj = { keyArr: [], joinedKey: '' };\n        colContext.currentColumnIndex = currentColumnIndex;\n\n        const { columnIndex, rowIndex } = createColumnDataModels(colContext, fieldInfo, sourceDM);\n\n        currentColumnIndex = columnIndex;\n        rowIndexForCurrentKey = rowIndex;\n    }\n    return {\n        rowIndex: ++rowIndexForCurrentKey\n    };\n};\n\n/**\n* Gets Matrixes for corresponding datamodel, facets and projections\n*\n* @param {Object} dataModel input datamodel\n* @param {Object} fieldInfo Information about the fields\n* @param {Function} geomCellCreator Callback executed after datamodels are prepared after sel/proj\n* @return {Object} set of matrices with the corresponding row and column keys\n*/\nexport const getMatrixModel = (dataModel, fieldInfo, geomCellCreator, globalConfig) => {\n    let currentRowIndex = 0;\n    const matrix = [];\n    const {\n        rowFacets,\n        colFacets\n    } = fieldInfo;\n\n    const projectionInfo = prepareProjectionInfo(fieldInfo);\n    const facetInfo = prepareFacetInfo(fieldInfo);\n    const allSplitModels = dataModel.splitByRow(facetInfo.allFacets);\n\n    const {\n        splitModelsHashMap,\n        rowKeys,\n        colKeys\n    } = getSplitModelHashMap(allSplitModels, facetInfo, globalConfig);\n\n    const generalContext = {\n        matrix,\n        geomCellCreator,\n        projectionInfo,\n        splitModelsHashMap,\n        colKeys\n    };\n    if (rowKeys.length) {\n        rowKeys.forEach((rowKeyObj) => {\n            const rowContext = {\n                ...generalContext,\n                rowKeyObj,\n                currentRowIndex\n            };\n            const { rowIndex } = createRowDataModels(rowContext, fieldInfo, dataModel);\n\n            currentRowIndex = rowIndex;\n        });\n    } else if (colKeys.length) {\n        let currentColumnIndex = 0;\n        const newRowIndex = currentRowIndex;\n\n        colKeys.forEach((colKeyObj) => {\n            const colContext = {\n                ...generalContext,\n                rowKeyArr: [],\n                rowKey: '',\n                colKeyObj,\n                newRowIndex,\n                currentColumnIndex\n            };\n            const { columnIndex, rowIndex } = createColumnDataModels(colContext, fieldInfo, dataModel);\n            currentRowIndex = rowIndex;\n            currentColumnIndex = columnIndex;\n        });\n    } else {\n        let currentColumnIndex = 0;\n        const newRowIndex = currentRowIndex;\n        const colContext = {\n            ...generalContext,\n            rowKeyArr: [],\n            rowKey: '',\n            colKeyObj: { keyArr: [], joinedKey: '' },\n            newRowIndex,\n            currentColumnIndex\n        };\n        const { columnIndex, rowIndex } = createColumnDataModels(colContext, fieldInfo, dataModel);\n        currentRowIndex = rowIndex;\n        currentColumnIndex = columnIndex;\n    }\n\n    const formattedColKeys = formatKeys(colKeys.map(e => e.keyArr),\n        colFacets.map(facetField => facetField.rawFormat()));\n    const formattedRowKeys = formatKeys(rowKeys.map(e => e.keyArr),\n        rowFacets.map(facetField => facetField.rawFormat()));\n\n     // Getting column keys\n    const transposedColKeys = formattedColKeys.length > 0 ? formattedColKeys[0].map((col, i) =>\n     formattedColKeys.map(row => row[i])) : formattedColKeys;\n\n    return { matrix, rowKeys: formattedRowKeys, columnKeys: transposedColKeys };\n};\n","import { AxisOrientation } from '@chartshq/muze-axis';\nimport {\n    getObjProp,\n    FieldType,\n    retrieveNearestGroupByReducers,\n    mergeRecursive,\n    createSelection,\n    DataModel\n} from 'muze-utils';\nimport { getMatrixModel } from './matrix-model';\nimport {\n    getCellKey,\n    isDistributionEqual,\n    mutateAxesFromMap,\n    getFieldsFromSuppliedLayers,\n    extractFields,\n    removeExitCells\n} from './group-utils';\nimport { ROW, ROWS, COLUMNS, COL, LEFT, RIGHT, TOP,\n    BOTTOM, PRIMARY, SECONDARY, X, Y, TEMPORAL } from '../enums/constants';\nimport { SimpleVariable } from '../variable';\n\n/**\n * Updates row and column cells with the geom cell corresponding to the facet keys\n *\n * @param {*} resolver\n * @param {*} facets\n */\nconst updateCells = (resolver, facets, geomCell) => {\n    [ROW, COL].forEach((field) => {\n        const cells = resolver[`${field}Cells`]();\n        const facetKey = facets[`${field}Facets`][1].join();\n\n        !cells[facetKey] && (cells[facetKey] = []);\n        cells[facetKey].push(geomCell);\n        resolver[`${field}Cells`](cells);\n    });\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} datamodel\n * @param {*} fieldInfo\n * @param {*} facets\n *\n */\nexport const createValueCells = (context, datamodel, fieldInfo, facets) => {\n    const {\n        projections,\n        indices\n    } = fieldInfo;\n    const {\n        rowFields,\n        columnFields\n    } = projections;\n    const {\n         rowIndex,\n         columnIndex\n    } = indices;\n    const {\n        suppliedLayers,\n        cell: GeomCell,\n        resolver,\n        config,\n        encoder,\n        detailFields\n    } = context;\n    const axes = resolver.axes();\n    const cacheMaps = resolver.cacheMaps();\n    const matrixLayers = resolver.matrixLayers();\n    const labelManager = resolver.dependencies().smartlabel;\n    const horizontalAxis = resolver.horizontalAxis();\n    const verticalAxis = resolver.verticalAxis();\n    const datamodelTransform = resolver.datamodelTransform();\n    const {\n        entryCellMap,\n        exitCellMap\n    } = cacheMaps;\n    const layerConfigArr = encoder.getLayerConfig({ columnFields, rowFields }, suppliedLayers || [],\n        context.retinalConfig);\n    const axesCreators = { config, labelManager, axes, cacheMaps };\n\n    fieldInfo.normalizedColumns = verticalAxis.fields;\n    fieldInfo.normalizedRows = horizontalAxis.fields;\n\n    const allFacets = [\n        [...facets.rowFacets[0], ...facets.colFacets[0]],\n        [...facets.rowFacets[1], ...facets.colFacets[1]]\n    ];\n    const facetFields = allFacets.slice();\n    facetFields[0] = facetFields[0].map(facetField => facetField.oneVar());\n\n    matrixLayers[rowIndex] = matrixLayers[rowIndex] ? matrixLayers[rowIndex] : [];\n    matrixLayers[rowIndex][columnIndex] = layerConfigArr;\n\n    // return from map if already there otherwise create and put in map\n    const geomCellKey = getCellKey(rowIndex, columnIndex);\n    const fields = {\n        y: rowFields,\n        x: columnFields\n    };\n\n    const geomCell = !exitCellMap.has(geomCellKey) ? new GeomCell() : exitCellMap.get(geomCellKey);\n\n    geomCell.data(datamodel)\n                    .fields(fields)\n                    .transform(datamodelTransform)\n                    .detailFields(detailFields)\n                    .facetByFields(allFacets);\n\n    encoder.createAxis(axesCreators, fieldInfo, Object.assign({}, context, { geomCell, facetFields }));\n    entryCellMap.set(geomCellKey, geomCell);\n    exitCellMap.delete(geomCellKey);\n\n    updateCells(resolver, facets, geomCell);\n\n    return entryCellMap.get(geomCellKey);\n};\n\nconst extractAxisIndex = id => getObjProp(id.match(/^[0-9]*?(?=-)/g), 0);\n\n/**\n * Creates axis cells based on the set of axes\n *\n * @param {Selection} selection Contains a selection of the axis units\n * @param {Array} axes Actual axis units\n * @param {number} axisIndex 0-> primary axis, 1-> secondary axis(when dual axis is made)\n * @param {Object} cells Contains a collection of the cells\n * @return {Object} return either set of axis/blank cells depending on the config\n */\nconst createAxisCells = (selection, axes, axisIndex, cells) =>\n    createSelection(selection, axis => axis, axes, (item, i) => i + item.reduce((e, n) => {\n        const id = n.id + axisIndex;\n        return `${e}-${id}`;\n    }, '')).map((currObj, axis) => {\n        if (axis && axis[axisIndex]) {\n            const axisInst = axis[axisIndex];\n            const { orientation, show } = axisInst.config();\n\n            return new cells.AxisCell().source(axisInst).config({\n                isOffset: orientation === AxisOrientation.LEFT || orientation === AxisOrientation.TOP,\n                show\n            });\n        }\n        return new cells.BlankCell().config({ show: false });\n    }).sort((a, b) => extractAxisIndex(a[0]) - extractAxisIndex(b[0]));\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @retur\n */\nconst axisPlaceholderGn = (context, selObj, cells) => {\n    const {\n        matrices\n    } = context;\n    const {\n        axesMatrix\n    } = matrices;\n\n    return (type, axisFrom) => {\n        const axes = axesMatrix[`${type}`];\n\n        if (axes && axes.length) {\n            if (type === X || type === Y) {\n                const fieldNames = type === Y ? ROWS : COLUMNS;\n\n                [PRIMARY, SECONDARY].forEach((fieldType, index) => {\n                    const selObjProp = `${fieldNames}${fieldType}`;\n                    let axisIndex = index;\n                    let axesForDraw = axes;\n                    if (axisFrom === RIGHT || axisFrom === BOTTOM) {\n                        axisIndex = 1 - axisIndex;\n                    }\n                    if (!getObjProp(axes, 0, axisIndex)) {\n                        axesForDraw = [];\n                    }\n                    selObj[selObjProp] = createAxisCells(selObj[selObjProp], axesForDraw, axisIndex, cells);\n                });\n            } else {\n                selObj.rowsPrimary = createAxisCells(selObj.rowPrime, axes.map(() => []), 0, cells);\n                selObj.rowsSecondary = createAxisCells(selObj.rowSec, axes.map(() => []), 0, cells);\n                selObj.columnsPrimary = createAxisCells(selObj.colPrime, axes[0], 0, cells);\n                selObj.columnsSecondary = createAxisCells(selObj.colSec, axes[0], 0, cells);\n            }\n        }\n        return selObj;\n    };\n};\n\n/**\n * Creates header cells based on the set of headers\n *\n * @param {Object} selection Contains a selection of the header units\n * @param {string} headers Contains a list of the headers\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} return either set of header cells depending on the config\n */\nconst createTextCells = (selection, headers, cells, labelManager) => createSelection(selection,\n        (label) => {\n            const textCell = new cells.TextCell({}, { labelManager });\n            textCell.source(label);\n            return textCell;\n        }, headers, (key, i) => key + i);\n\nconst extractFacetIndex = id => id.split('-').pop();\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @param {*} labelManager\n *\n */\nconst headerPlaceholderGn = (context, selectionObj, cells, labelManager) => {\n    const {\n        axis,\n        keys,\n        type,\n        facet\n    } = context;\n    const counter = axis.length / keys.length;\n    const selectionKeys = keys.length ? axis.map((d, i) => keys[Math.floor(i / counter)]) : [];\n\n    const selObjUpdater = createSelection(selectionObj[`${type}Headers`], keySet => keySet, selectionKeys,\n    (keySet, i) => `${keySet.join(',')}-${i}`)\n        .sort((a, b) => extractFacetIndex(a[0]) - extractFacetIndex(b[0]));\n\n    return selObjUpdater.map((keySet, data) => {\n        let textCells = createTextCells(null, data, cells, labelManager);\n        textCells = textCells.map((cell, k) => cell.source(k).config(facet));\n        return textCells;\n    });\n};\n\n/**\n * Creates a set of placeholders as a part of selection object\n *\n * @param {Array} normalizedOptions contains normalized rows and columns\n * @param {Array} matrices contains axis and value matrices\n * @param {aArrayny} projections contains set of row and column projections\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} Creates a set of placeholders as a part of selections\n */\nconst generatePlaceholders = (context, cells, labelManager) => {\n    let selectionObj;\n    const {\n        matrices,\n        fields,\n        facetsAndProjections,\n        selection,\n        facet,\n        encoders,\n        resolver\n    } = context;\n    const {\n        rows,\n        columns\n    } = fields;\n    const {\n        valuesMatrix\n    } = matrices;\n    const {\n        rowProjections,\n        colProjections\n    } = facetsAndProjections;\n    const {\n        rowKeys,\n        columnKeys\n    } = valuesMatrix;\n    const takeAxisFrom = encoders.simpleEncoder._axisFrom;\n    const takeHeaderFrom = encoders.simpleEncoder._headerFrom;\n\n    selectionObj = selection || {};\n\n    ['pie', X, Y].forEach((axis) => {\n        const axisFrom = axis === X ? takeAxisFrom.column : takeAxisFrom.row;\n        selectionObj = axisPlaceholderGn(context, selectionObj, cells)(axis, axisFrom);\n    });\n\n    const {\n        rowsPrimary,\n        rowsSecondary,\n        columnsPrimary,\n        columnsSecondary\n    } = selectionObj;\n\n    const rowAxis = rowsPrimary && rowsPrimary.getObjects().length ? rowsPrimary.getObjects() :\n        (rowsSecondary && rowsSecondary.getObjects().length ? rowsSecondary.getObjects() : []);\n    const colAxis = columnsPrimary && columnsPrimary.getObjects().length ? columnsPrimary.getObjects() :\n        (columnsSecondary && columnsSecondary.getObjects().length ? columnsSecondary.getObjects() : []);\n\n    const headerConfig = [\n        { type: LEFT, section: rows[0], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: RIGHT, section: rows[1], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: TOP, section: columns[0], axis: colAxis, headerFrom: takeHeaderFrom.column },\n        { type: BOTTOM, section: columns[1], axis: colAxis, headerFrom: takeHeaderFrom.column }\n    ];\n\n    headerConfig.forEach((config, index) => {\n        let keys;\n        let length;\n        const {\n            type,\n            section,\n            axis,\n            headerFrom\n        } = config;\n\n        if (index < 2) {\n            keys = rowKeys;\n            length = rowProjections.length > 0 ? rowProjections.length : 1;\n        } else {\n            keys = columnKeys;\n            length = colProjections.length > 0 ? colProjections.length : 1;\n        }\n        keys = keys.map(arr => arr.map(val => resolver.valueParser()(val)));\n        if (section.length && headerFrom === type && axis && keys.length) {\n            const hContext = { axis, length, type };\n            let headers = [];\n            if (index < 2) {\n                hContext.keys = keys;\n                hContext.facet = facet.rows;\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            } else {\n                hContext.facet = facet.columns;\n                hContext.keys = keys[0].map((key, i) => keys.map(e => e[i]));\n\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            }\n            selectionObj[`${type}Headers`] = headers;\n        } else {\n            selectionObj[`${type}Headers`] = null;\n        }\n    });\n    return selectionObj;\n};\n\n/**\n * Generates matrices\n *\n * @param {Object} config Configuration to generate matrices\n * @param {Array} matrices Matrices containing the set of visual units and axes units\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} contains a collection of matrices\n */\nexport const generateMatrices = (context, matrices, cells, labelManager) => {\n    const {\n        unitHeight,\n        unitWidth,\n        facetsAndProjections,\n        normalizedRows,\n        normalizedColumns,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n     } = context;\n    const placeholderContext = {\n        fields: {\n            rows: normalizedRows,\n            columns: normalizedColumns\n        },\n        matrices,\n        facetsAndProjections,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n    };\n    // Generate placeholders for all matrices\n    const selectionObj = generatePlaceholders(placeholderContext, cells, labelManager);\n    const {\n        columnsPrimary,\n        columnsSecondary,\n        rowsPrimary,\n        rowsSecondary,\n        leftHeaders,\n        topHeaders,\n        bottomHeaders,\n        rightHeaders\n    } = selectionObj;\n    const [rowPrime, rowSec, colPrime, colSec] = [rowsPrimary, rowsSecondary, columnsPrimary, columnsSecondary]\n        .map(d => (d ? d.getObjects() : []));\n    const [leftFacets, rightFacets] = [leftHeaders, rightHeaders]\n        .map(e => (e ? e.getObjects()\n                        .map(f => f.getObjects()) : []));\n    let rowPriority = rowSec.length ? 1 : -1;\n    rowPrime.length && rowPriority++;\n    let colPriority = colSec.length ? 1 : -1;\n    colPrime.length && colPriority++;\n\n    // Compute left matrix using left headers and the axes on the rows\n    let leftMatrix = leftFacets.length ? leftFacets.map((d, i) => {\n        rowPrime[i] = rowPrime[i] ? [rowPrime[i]] : [];\n        return [...d, ...rowPrime[i]];\n    }) : (rowPrime ? rowPrime.map(d => [d]) : []);\n\n    // Compute right matrix using right headers and the axes on the rows\n    const rightMatrix = rowSec.length ? rowSec.map((d, i) => [d, ...(rightFacets[i] || [])]) : (rightFacets.length ?\n        rightFacets.map(d => [...d]) : []);\n\n    const topMatrix = [];\n    if (topHeaders) {\n        const headers = topHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                topMatrix[i] = topMatrix[i] || [];\n                topMatrix[i].push(x);\n            });\n        });\n    }\n    // Compute top matrix using the top headers and axes on the columns\n    if (colPrime.length) {\n        topMatrix.push(colPrime);\n    }\n\n    // Bottom and right matrices are prepared using the user config.\n    let bottomMatrix = [];\n    if (colSec.length) {\n        bottomMatrix.push(colSec);\n    }\n    const currentBottomLength = bottomMatrix.length;\n    if (bottomHeaders) {\n        const headers = bottomHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                bottomMatrix[i + currentBottomLength] = bottomMatrix[i + currentBottomLength] || [];\n                bottomMatrix[i + currentBottomLength].push(x);\n            });\n        });\n    }\n\n    if (!leftMatrix.length && !rightMatrix.length) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        leftMatrix = [[cell]];\n    }\n\n    if (!topMatrix.length && (!bottomMatrix.length || !bottomMatrix[0].length)) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        bottomMatrix = [[cell]];\n    }\n\n    return {\n        rows: [leftMatrix, rightMatrix],\n        columns: [topMatrix, bottomMatrix],\n        selectionObj,\n        colPriority,\n        rowPriority\n    };\n};\n\nconst getAxisFields = (projections, fieldHolder = []) =>\n                            projections.reduce((acc, item) =>\n                                [...acc, ...item.reduce((ac, field) =>\n                                   (field instanceof SimpleVariable ? [...ac, field.oneVar()] : ac), [])], fieldHolder);\n\nconst sortDmTemporalFields = (resolver, datamodel) => {\n    let axisFields = [];\n    const projections = resolver.projections();\n    axisFields = getAxisFields(projections.rowProjections, getAxisFields(projections.colProjections));\n\n    const fieldConfig = datamodel.getFieldsConfig();\n    const temporalFields = axisFields.reduce((acc, field) =>\n        ((fieldConfig[field].def.subtype === TEMPORAL) ? [...acc, [field]] : acc), []);\n    return temporalFields.length ? datamodel.sort(temporalFields, { saveChild: true }) : datamodel;\n};\n\nconst transformDataModel = (dataModel, config, resolver) => {\n    let groupedModel;\n\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const resolvedData = resolver.data();\n    const { groupBy, suppliedLayers, facetsAndProjections } = config;\n\n    if (resolvedData instanceof DataModel) {\n        resolvedData.dispose();\n    }\n    groupedModel = dataModel.project(dataModel.getSchema().map(d => d.name));\n    resolver.data(groupedModel);\n    if (!groupBy.disabled) {\n        const fields = getFieldsFromSuppliedLayers(suppliedLayers, groupedModel.getFieldsConfig());\n        const allFields = extractFields(facetsAndProjections, fields);\n        const dimensions = allFields.filter(field =>\n            getObjProp(fieldsConfig, field, 'def', 'type') === FieldType.DIMENSION);\n        const aggregationFns = groupBy.measures;\n        const measureNames = Object.keys(groupedModel.getFieldspace().getMeasure());\n        const nearestAggFns = retrieveNearestGroupByReducers(groupedModel, ...measureNames);\n        const resolvedAggFns = mergeRecursive(nearestAggFns, aggregationFns);\n\n        groupedModel = groupedModel.groupBy(dimensions.length ? dimensions : [''], resolvedAggFns)\n                                            .project(allFields);\n    }\n    // sort temporal fields if any in the given rows and columns\n    groupedModel = sortDmTemporalFields(resolver, groupedModel);\n    return groupedModel;\n};\n\n/**\n * Computes matrices for a group\n *\n * @param {Object} datamodel on which the matrices are to be computed\n * @param {Object} config configuration of the matrices\n * @param {Object} layerRegistry contains the registered layers\n * @return {Object} conputed matrices\n * @memberof MatrixResolver\n */\nexport const computeMatrices = (context, config) => {\n    const {\n        resolver,\n        datamodel,\n        componentRegistry,\n        encoders\n    } = context;\n    const {\n            globalConfig,\n            selection,\n            transform\n        } = config;\n    const groupBy = globalConfig.autoGroupBy;\n    const { smartlabel: labelManager } = resolver.dependencies();\n    const fieldMap = datamodel.getFieldsConfig();\n    const layerConfig = resolver.layerConfig();\n    const registry = resolver.registry();\n    const { fields: normalizedRows } = resolver.horizontalAxis();\n    const { fields: normalizedColumns } = resolver.verticalAxis();\n    const otherEncodings = resolver.optionalProjections(config, layerConfig);\n    const facetsAndProjections = resolver.getAllFields();\n    const matrixGnContext = {\n        // Configuration to be passed to generate the  different matrices.\n        // A common config is used for both value matrices and other matrices\n        normalizedColumns,\n        normalizedRows,\n        facetsAndProjections,\n        layers: layerConfig,\n        fieldMap,\n        otherEncodings,\n        encoders,\n        facet: globalConfig.facet || {},\n        axisFrom: globalConfig.axisFrom || {},\n        selection,\n        resolver\n    };\n    const cells = {\n        GeomCell: resolver.getCellDef(registry.GeomCell),\n        AxisCell: resolver.getCellDef(registry.AxisCell),\n        BlankCell: resolver.getCellDef(registry.BlankCell),\n        TextCell: resolver.getCellDef(registry.TextCell)\n    };\n    const isRowSizeEqual = isDistributionEqual(normalizedRows);\n    const isColumnSizeEqual = isDistributionEqual(normalizedColumns);\n\n    resolver.colCells({});\n    resolver.rowCells({});\n    resolver.datamodelTransform(transform || {});\n\n    // Cell creation begins here\n    resolver.resetSimpleAxes();\n\n    const {\n        entryCellMap\n    } = resolver.cacheMaps();\n    const newCacheMap = {\n        exitCellMap: entryCellMap,\n        entryCellMap: new Map()\n    };\n\n    resolver.cacheMaps(newCacheMap);\n\n    const valueCellContext = {\n        config: globalConfig,\n        suppliedLayers: encoders.simpleEncoder.serializeLayerConfig(resolver.layerConfig()),\n        resolver,\n        cell: cells.GeomCell,\n        encoder: encoders.simpleEncoder,\n        newCacheMap,\n        detailFields: config.detail,\n        retinalConfig: {\n            color: config.color,\n            size: config.size,\n            shape: config.shape\n        }\n    };\n\n    const groupedModel = transformDataModel(datamodel, {\n        facetsAndProjections,\n        suppliedLayers: valueCellContext.suppliedLayers,\n        groupBy\n    }, resolver);\n\n    // return a callback function to create the cells from the matrix\n    const cellCreator = resolver.valueCellsCreator(valueCellContext);\n    // Creates value matrices from the datamodel and configs\n    const valueMatrixInfo = getMatrixModel(groupedModel, facetsAndProjections, cellCreator, globalConfig);\n\n    removeExitCells(resolver);\n    resolver.cacheMaps().exitCellMap.clear();\n    resolver.valueMatrix(valueMatrixInfo.matrix);\n\n    const { xAxes, yAxes } = mutateAxesFromMap(resolver.cacheMaps(), resolver.axes());\n\n    resolver.axes({\n        x: xAxes,\n        y: yAxes\n    });\n\n    resolver.createUnits(componentRegistry, config);\n\n    const matrices = {\n        valuesMatrix: valueMatrixInfo,\n        axesMatrix: resolver.axes()\n    };\n    // Create all matrices\n    const {\n        rows,\n        columns,\n        selectionObj,\n        rowPriority,\n        colPriority\n    } = generateMatrices(matrixGnContext, matrices, cells, labelManager);\n\n    resolver.rowMatrix(rows);\n    resolver.columnMatrix(columns);\n\n    return {\n        rows: resolver.rowMatrix(),\n        columns: resolver.columnMatrix(),\n        values: resolver.valueMatrix(),\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority: {\n            row: rowPriority,\n            col: colPriority\n        },\n        selection: selectionObj,\n        dataModels: {\n            groupedModel,\n            parentModel: datamodel\n        }\n    };\n};\n","export const RESOLVER_PROPS = {\n    dependencies: {},\n    units: {},\n    datamodelTransform: {},\n    layerConfig: {},\n    matrixLayers: {},\n    colCells: {},\n    rowCells: {},\n    rowMatrix: {},\n    columnMatrix: {},\n    valueMatrix: {},\n    encoder: {},\n    valueParser: {},\n    data: {}\n};\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { generateGetterSetters, STATE_NAMESPACES, getUniqueId } from 'muze-utils';\nimport {\n     initializeCacheMaps,\n     headerCreator,\n     extractUnitConfig,\n     setFacetsAndProjections\n} from './group-utils';\nimport {\n     ROW, COL, LEFT, RIGHT, COLOR, SIZE, SHAPE, DETAIL, CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS, INITIALIZED,\n     AXIS, UNIT, BEFORE_UPDATE, UPDATED, VALUE_MATRIX, FACET_HEADERS\n} from '../enums/constants';\nimport { createValueCells, computeMatrices } from './cell-creator';\nimport { RESOLVER_PROPS } from './resolver-props';\n\n/**\n * Resolves the matrices from configuration provided\n *\n * @export\n * @class MatrixResolver\n */\nexport default class MatrixResolver {\n\n    /**\n     * Creates an instance of MatrixResolver.\n     * @param {Object} dependencies needed to run the resolver\n     * @memberof MatrixResolver\n     */\n    constructor (dependencies) {\n        this._registry = {};\n        this._layerConfig = [];\n        this._matrixLayers = [];\n        this._dependencies = dependencies;\n        this._rowMatrix = [];\n        this._columnMatrix = [];\n        this._valueMatrix = [];\n        this._facets = { rowFacets: [], colFacets: [] };\n        this._projections = { rowProjections: [], colProjections: [] };\n        this._datamodelTransform = {};\n        this._units = [];\n        this._cacheMaps = {};\n        this._fireboltDeps = {};\n        this._axes = {\n            x: {},\n            y: {},\n            color: [],\n            size: [],\n            shape: [],\n            radius: [],\n            angle: [],\n            angle0: []\n        };\n        generateGetterSetters(this, RESOLVER_PROPS);\n        this.cacheMaps(initializeCacheMaps());\n    }\n\n    /**\n     * Set:  Registers placeholders, Get: return {Object} those placeholders\n     *\n     * @param {Object} placeholders cells that will construct the group\n     * @return {Object} Either current instance or the set of placeholders\n     * @memberof MatrixResolver\n     */\n    registry (...placeholders) {\n        if (placeholders.length) {\n            Object.entries(placeholders[0]).forEach((val) => {\n                this._registry[val[0]] = val[1];\n            });\n            return this;\n        }\n        return this._registry;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    cacheMaps (...maps) {\n        if (maps.length) {\n            [CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS].forEach((e) => {\n                this._cacheMaps[`${e}Map`] = maps[0][`${e}Map`] || this._cacheMaps[`${e}Map`];\n            });\n            return this;\n        }\n        return this._cacheMaps;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    axes (...axes) {\n        if (axes.length) {\n            this._axes = Object.assign({}, this._axes, axes[0]);\n            return this;\n        }\n        return this._axes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} facets\n     *\n     * @memberof MatrixResolver\n     */\n    facets (...facets) {\n        if (facets.length) {\n            Object.entries(facets[0]).forEach((e) => {\n                this._facets[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._facets;\n    }\n\n    /**\n     *\n     *\n     * @param {*} projections\n     *\n     * @memberof MatrixResolver\n     */\n    projections (...projections) {\n        if (projections.length) {\n            Object.entries(projections[0]).forEach((e) => {\n                this._projections[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._projections;\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @param {*} layerConfig\n     *\n     * @memberof MatrixResolver\n     */\n    optionalProjections (config, layerConfig) {\n        const otherEncodings = {};\n        const optionalProjections = [];\n        const otherEncodingTypes = [SIZE, COLOR, SHAPE];\n\n        otherEncodingTypes.forEach((type) => {\n            if (config[type] && config[type].field) {\n                const enc = config[type];\n                otherEncodings[type] = enc.field;\n                optionalProjections.push(enc.field);\n            }\n        });\n\n        if (config[DETAIL]) {\n            optionalProjections.push(...config.detail);\n        }\n\n        if (layerConfig.length) {\n            layerConfig.forEach((layer) => {\n                if (layer.encoding) {\n                    Object.values(layer.encoding).forEach((enc) => {\n                        if (enc && optionalProjections.indexOf(enc.field) === -1) {\n                            optionalProjections.push(enc.field ? enc.field : enc);\n                        }\n                    });\n                }\n            });\n        }\n        this.projections({ optionalProjections });\n        return otherEncodings;\n    }\n\n    /**\n     * return the normalized set of rows and facets and projections\n     *\n     * @param {Object} rows parameters needed to set horizontal axis consisiting of rows\n     * @return {Object} facets, projections and normalized rows\n     * @memberof MatrixResolver\n     */\n    horizontalAxis (rows, encoder) {\n        if (rows) {\n            this._horizontalAxis = setFacetsAndProjections(this, { type: ROW, fields: rows }, encoder);\n            return this;\n        }\n        return this._horizontalAxis;\n    }\n\n    /**\n     * return the normalized set of columns and facets and projections\n     *\n     * @param {Object} columns parameters needed to set vertical axis consisiting of columns\n     * @return {Object} facets, projections and normalized columns\n     * @memberof MatrixResolver\n     */\n    verticalAxis (columns, encoder) {\n        if (columns) {\n            this._verticalAxis = setFacetsAndProjections(this, { type: COL, fields: columns }, encoder);\n            return this;\n        }\n        return this._verticalAxis;\n    }\n\n    /**\n     * Gets the class definition of a particular cell type(if the particular type has been extended, that particular\n     * definition is returned)\n     *\n     * @param {Object} cell cell whose class definition is to be retrieved\n     * @return {Object} cell definition\n     * @memberof MatrixResolver\n     */\n    getCellDef (cell) {\n        const registry = this.registry();\n\n        Object.values(registry).forEach((e) => {\n            if (e.prototype instanceof cell) {\n                cell = e;\n            }\n        });\n        return cell;\n    }\n\n    /**\n     * return a visual cell creator along with its axis information to be injected to the datamodel creation\n     * function\n     *\n     * @param {Object} GeomCell Type of cell to be created\n     * @return {Object} Created cell\n     * @memberof MatrixResolver\n     */\n    valueCellsCreator (context) {\n        // reset matrix layers\n        this.matrixLayers([]);\n\n        return (datamodel, fieldInfo, facets) => createValueCells(context, datamodel, fieldInfo, facets);\n    }\n\n    /**\n     * Callback to be applied on each cell of a matrix of a particular type\n     *\n     * @param {string} matrixType type of matrix on which callback is to be applied\n     * @param {Function} callback function to be applied to each cell\n     * @memberof MatrixResolver\n     */\n    forEach (matrixType, callback) {\n        this[matrixType]().forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                callback(rIndex, cIndex, col);\n            });\n        });\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getAllFields () {\n        const retObj = this.projections();\n\n        Object.entries(this.facets()).forEach((e) => {\n            retObj[e[0]] = e[1];\n        });\n        return retObj;\n    }\n\n    /**\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    resetSimpleAxes () {\n        return this.axes({\n            x: new Set(),\n            y: new Set(),\n            radius: [],\n            angle: [],\n            angle0: [],\n            pie: []\n        });\n    }\n\n    setFireboltDependencies (prop, deps) {\n        Object.assign(this._fireboltDeps, {\n            [prop]: deps\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} componentRegistry\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createUnits (componentRegistry, config) {\n        const {\n            globalConfig,\n            alias,\n            coord\n        } = config;\n        const {\n            layerRegistry,\n            sideEffectRegistry\n        } = componentRegistry;\n        const {\n            smartlabel: smartLabel,\n            lifeCycleManager,\n            throwback\n        } = this.dependencies();\n        const fireboltDeps = this._fireboltDeps;\n\n        // Provide the source for the matrix\n        const units = [[]];\n        // Setting unit configuration\n        const unitConfig = extractUnitConfig(globalConfig || {});\n        const store = this.store();\n        store.lockModel();\n\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            let unit = el.source();\n            if (!unit) {\n                const namespace = `unit${i}-${j}-${getUniqueId()}`;\n\n                unit = VisualUnit.create({\n                    layerRegistry,\n                    sideEffectRegistry\n                }, {\n                    smartLabel,\n                    lifeCycleManager,\n                    throwback,\n                    fireboltDeps\n                });\n                unit.metaInf({\n                    rowIndex: i,\n                    colIndex: j,\n                    namespace\n                });\n                unit.store(store);\n                unit.coord(coord);\n                el.source(unit);\n            }\n            !units[i] && (units[i] = []);\n            units[i][j] = unit;\n            unit.parentAlias(alias)\n                .valueParser(this.valueParser())\n                .coord(coord);\n            el.config(unitConfig);\n        });\n        store.unlockModel();\n        lifeCycleManager.notify({ client: units, action: INITIALIZED, formalName: UNIT });\n        return this.units(units);\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    setDomains (config, datamodel, encoders) {\n        const {\n            color,\n            shape,\n            size,\n            globalConfig\n        } = config;\n        const groupBy = globalConfig.autoGroupBy;\n        const {\n            rowFacets,\n            colFacets\n        } = this.getAllFields();\n        const encoding = {\n            color,\n            shape,\n            size\n        };\n        const facetFields = [...rowFacets.map(e => e.toString()), ...colFacets.map(e => e.toString())];\n        const retContext = {\n            domains: encoders.simpleEncoder.getRetinalFieldsDomain(datamodel, encoding, facetFields, groupBy),\n            axes: this.axes(),\n            encoding\n        };\n        encoders.retinalEncoder.setCommonDomain(retContext);\n        return this;\n    }\n\n    resetFacetsAndProjections () {\n        this._facets = {};\n        this._projections = {};\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getRetinalAxes () {\n        const {\n            color,\n            shape,\n            size\n        } = this.axes();\n\n        return {\n            color: [...color],\n            shape: [...shape],\n            size: [...size]\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} type\n     *\n     * @memberof MatrixResolver\n     */\n    getSimpleAxes (type) {\n        return this.axes()[`${type}`];\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createRetinalAxes (fieldsConfig, config, encoders) {\n        const layerConfig = this.layerConfig();\n        this.optionalProjections(config, layerConfig);\n        const retinalAxes = encoders.retinalEncoder.createAxis({\n            fieldsConfig,\n            config,\n            axes: this.axes()\n        });\n        const {\n            lifeCycleManager\n        } = this.dependencies();\n\n        [COLOR, SHAPE, SIZE].forEach((e) => {\n            this.axes()[e] = retinalAxes[e];\n        });\n\n        lifeCycleManager.notify({ client: this.axes(), action: INITIALIZED, formalName: AXIS });\n        lifeCycleManager.notify({ client: this.units(), action: BEFORE_UPDATE, formalName: UNIT });\n\n        const units = [];\n        const matrixLayers = this.matrixLayers();\n        const props = [`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.domain`,\n            `${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`];\n        const store = this.store();\n        store.lockCommits(props);\n        store.lockModel();\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            el.axes(Object.assign(el.axes(), retinalAxes));\n            el.source() && el.source().retinalFields(config);\n            el.layerDef(matrixLayers[i][j]);\n            el.updateModel();\n\n            units.push(el.source());\n        });\n        store.unlockModel()\n            .unlockCommits([props[0]])\n            .unlockCommits([props[1]]);\n        lifeCycleManager.notify({ client: units, action: UPDATED, formalName: UNIT });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} placeholders\n     * @param {*} fieldNames\n     *\n     * @memberof MatrixResolver\n     */\n    createHeaders (placeholders, fieldNames, config) {\n        let bottomLeft = [];\n        let bottomRight = [];\n        const {\n            rows,\n            columns\n        } = placeholders;\n        const {\n            smartlabel: labelManager,\n            lifeCycleManager\n        } = this.dependencies();\n        const {\n            showHeaders,\n            classPrefix\n        } = config;\n        const TextCell = this.getCellDef(this.registry().TextCell);\n        const BlankCell = this.getCellDef(this.registry().BlankCell);\n        const [leftRows, rightRows] = rows;\n        const [topCols, bottomCols] = columns;\n        const rowHeaders = fieldNames.rows;\n        const blankCellCreator = cell => new BlankCell().config({ show: cell.config().show });\n\n        // Headers and footers are created based on the rows. Thereafter, using the column information\n        // they are tabularized into the current structure\n        const headers = {\n            left: headerCreator(leftRows, rowHeaders[0], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager }),\n            right: headerCreator(rightRows, rowHeaders[1], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager })\n        };\n        const footers = {\n            left: leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : [],\n            right: rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []\n        };\n        const [topLeft, topRight] = [LEFT, RIGHT].map(type => topCols.map((col, i) => {\n            if (i === topCols.length - 1) {\n                return headers[type];\n            }\n            return footers[type];\n        }));\n\n        // Creating only bottom matrices if there is no information on the top\n        if (topCols.length === 0) {\n            [bottomLeft, bottomRight] = [LEFT, RIGHT].map(type => bottomCols.map((col, i) => {\n                if (i === 0) {\n                    return headers[type];\n                }\n                return footers[type];\n            }));\n        } else {\n            bottomLeft = bottomCols.map(() => (leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : []));\n            bottomRight = bottomCols.map(() => (rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []));\n        }\n\n        lifeCycleManager.notify({\n            client: [topLeft, topRight, bottomLeft, bottomRight],\n            action: INITIALIZED,\n            formalName: FACET_HEADERS\n        });\n\n        return { topLeft, topRight, bottomLeft, bottomRight };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @param {*} componentRegistry\n     * @param {*} encoders\n     *\n     * @memberof MatrixResolver\n     */\n    getMatrices (datamodel, config, componentRegistry, encoders) {\n        const context = {\n            datamodel,\n            componentRegistry,\n            encoders,\n            resolver: this\n        };\n\n        return computeMatrices(context, config);\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            return this;\n        }\n        return this._store;\n    }\n\n    clear () {\n        const cacheMaps = this._cacheMaps;\n        for (const key in cacheMaps) {\n            cacheMaps[key].clear();\n        }\n    }\n\n}\n","/**\n * This is a wrapper class over the matrix of cells which gets created in visual group. Visual Group creates left,\n * right, bottom and top and center matrices and wraps them using this class.\n *\n * @public\n * @class ValueMatrix\n */\nclass ValueMatrix {\n\n    /**\n     * Creates an instance of ValueMatrix.\n     *\n     * @param {Array} matrixArr Matrix array.\n     */\n    constructor (matrixArr) {\n        const instancesById = {};\n\n        this.matrix(matrixArr || []);\n        this.filter(() => true);\n\n        this.each((el, rIdx, cIdx) => {\n            const cellValue = el.valueOf();\n            if (cellValue && cellValue.id) {\n                const id = cellValue.id();\n                instancesById[id] = {\n                    instance: cellValue,\n                    rowIndex: rIdx,\n                    colIndex: cIdx\n                };\n            }\n        });\n\n        this.instancesById(instancesById);\n    }\n\n    instancesById (...id) {\n        if (id.length) {\n            this._instancesById = id[0];\n            return this;\n        }\n        return this._instancesById;\n    }\n\n    /**\n     * Returns the array of matrices contained in this instance.\n     *\n     * @public\n     * @return {Array} Array of matrices.\n     */\n    matrix (...matrix) {\n        if (matrix.length) {\n            this._matrix = matrix[0];\n            return this;\n        }\n        return this._matrix;\n    }\n\n    /**\n     * Sets a filter criteria. This filter criteria gets applied when each function is called.\n     *\n     * @public\n     * @param {Function} fn Filter function.\n     *\n     * @return {ValueMatrix} Instance of value matrix.\n     */\n    filter (...fn) {\n        if (fn.length) {\n            this._filterFn = fn[0];\n            return this;\n        }\n        return this._filterFn;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    width () {\n        let rowWidth = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowWidth = 0;\n            row.forEach((cell) => {\n                currentRowWidth += cell.getLogicalSpace().width;\n            });\n            rowWidth = Math.max(rowWidth, currentRowWidth);\n        });\n        return rowWidth;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    height () {\n        let rowHeight = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowHeight = 0;\n            row.forEach((cell) => {\n                currentRowHeight = Math.max(currentRowHeight, cell.getLogicalSpace().height);\n            });\n            rowHeight += currentRowHeight;\n        });\n        return rowHeight;\n    }\n\n    /**\n     * Iterates through the two dimensional matrix array and calls the given callback function with the cell instance,\n     * row index, column index and the matrix array.\n     *\n     * @param {Function} fn Callback function which will get called for every cell.\n     * @return {ValueMatrix} Instance of the value matrix.\n     */\n    each (fn) {\n        const matrix = this.matrix();\n        const filterFn = this.filter();\n\n        matrix.forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                if (filterFn(col)) {\n                    fn(col, rIndex, cIndex, matrix);\n                }\n            });\n        });\n        return this;\n    }\n\n    findPlaceHolderById (id) {\n        return this.instancesById()[id];\n    }\n\n    clear () {\n        this.each(cell => cell.remove());\n        this.matrix([]);\n    }\n}\n\nexport default ValueMatrix;\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { BaseLayer } from '@chartshq/visual-layer';\nimport { getEncoder, getBorders } from '../group-helper';\nimport { RetinalEncoder } from '../encoder';\nimport { registerDomainChangeListener, unsubscribeChangeListeners } from './change-listener';\nimport ValueMatrix from './value-matrix';\n\nexport const createUnitState = (context) => {\n    const [globalState, localState] = VisualUnit.getState();\n    const store = context.store();\n    store.append(STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE, globalState)\n        .append(STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE, localState);\n};\n\nexport const initializeGlobalState = (context) => {\n    const globalState = context.constructor.getState()[0];\n    const store = context.store();\n    store.append(STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const createLayerState = (context) => {\n    const [globalState, localState] = BaseLayer.getState();\n    context.store().append(STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE, globalState)\n        .append(STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE, localState);\n};\n\nconst sanitizeRetinalConfig = (retinalConf) => {\n    const conf = {};\n    for (const key in retinalConf) {\n        const confValue = retinalConf[key];\n        if (typeof confValue === 'string' || !confValue) {\n            conf[key] = {\n                field: retinalConf[key]\n            };\n        } else {\n            conf[key] = confValue;\n        }\n    }\n    return conf;\n};\n\nexport const setMatrixInstances = (context, placeholder) => {\n    let {\n        values,\n        rows,\n        columns\n    } = placeholder;\n    values = values || [];\n    rows = rows || [];\n    columns = columns || [];\n    context._composition.matrices = {\n        value: new ValueMatrix(values),\n        left: new ValueMatrix(rows[0]),\n        right: new ValueMatrix(rows[1]),\n        top: new ValueMatrix(columns[0]),\n        bottom: new ValueMatrix(columns[1])\n    };\n\n    context._dependencies.throwback.commit(CommonProps.MATRIX_CREATED, true);\n    return context;\n};\n\nexport const createMatrices = (context) => {\n    const rows = context.rows();\n    const columns = context.columns();\n    const color = context.color();\n    const datamodel = context.data();\n    const size = context.size();\n    const detail = context.detail();\n    const layers = context.layers();\n    const transform = context.transform();\n    const config = context.config();\n    const shape = context.shape();\n\n    // Get the resolver for the matrices\n    const resolver = context.resolver();\n    resolver.store(context.store());\n    resolver.valueParser(context.valueParser());\n    // Prepare configuration for matrix preparation\n    let matrixConfig = {\n        selection: context.selection(),\n        alias: context.alias(),\n        globalConfig: config || {},\n        rows,\n        columns,\n        detail,\n        layers,\n        transform\n    };\n\n    unsubscribeChangeListeners(context);\n\n    const retinalConfig = sanitizeRetinalConfig({\n        color,\n        shape,\n        size\n    });\n\n    matrixConfig = Object.assign(matrixConfig, retinalConfig);\n    // Create the encoders for the group\n    const encoders = {};\n    encoders.retinalEncoder = new RetinalEncoder();\n    encoders.simpleEncoder = getEncoder(layers);\n    matrixConfig.coord = encoders.simpleEncoder.constructor.type();\n    resolver.encoder(encoders.simpleEncoder);\n\n    // Set the group type\n    context.groupType(encoders.simpleEncoder.constructor.type());\n\n    // Get sanitized fields as instances of the Vars Class\n    const fields = encoders.simpleEncoder.fieldSanitizer(datamodel, matrixConfig);\n    encoders.simpleEncoder.setAxisAndHeaders(config ? config.axisFrom : {}, fields);\n    // Setting layers for the code\n    layers && resolver.layerConfig(layers);\n    // Set the row and column axes\n    resolver.horizontalAxis(fields.rows, encoders).verticalAxis(fields.columns, encoders);\n    // Getting the placeholders\n    const placeholderInfo = resolver.getMatrices(datamodel, matrixConfig, context.registry(), encoders);\n    context._groupedDataModel = placeholderInfo.dataModels.groupedModel;\n    // Set the selection object\n    context.selection(placeholderInfo.selection);\n\n    // Create retinal axes\n    resolver.createRetinalAxes(placeholderInfo.dataModels.parentModel.getFieldsConfig(), retinalConfig,\n            encoders);\n\n    // Domains are evaluated for each of the axes for commonality\n    resolver.setDomains(matrixConfig, placeholderInfo.dataModels, encoders);\n\n    // Create matrix instances\n    setMatrixInstances(context, placeholderInfo);\n\n    // Prepare corner matrices\n    context.cornerMatrices(resolver.createHeaders(placeholderInfo, fields, config));\n\n    // Set placeholder information\n    context.placeholderInfo(placeholderInfo);\n\n    context._composition.axes = resolver.axes();\n    context.metaData({\n        border: getBorders(placeholderInfo, encoders.simpleEncoder)\n    });\n\n    resolver.encoder().unionUnitDomains(context);\n\n    registerDomainChangeListener(context);\n    return context;\n};\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { BaseLayer } from '@chartshq/visual-layer';\n\nimport { STATE_NAMESPACES } from 'muze-utils';\n\nexport const setupChangeListeners = (context) => {\n    const store = context.store();\n    const stores = {\n        throwback: context._dependencies.throwback,\n        store\n    };\n\n    ['x', 'y'].forEach((axisType) => {\n        store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${axisType}`], () => {\n            const groupAxes = context.resolver().axes();\n            groupAxes[axisType].forEach(axes => axes.forEach((axis) => {\n                axis.render();\n            }));\n        });\n    });\n\n    [VisualUnit, BaseLayer].forEach((comp) => {\n        const formalName = comp.formalName();\n        ['store', 'throwback'].forEach((type) => {\n            const listeners = comp.getListeners()[type];\n            const storeInst = stores[type];\n            listeners.forEach((listenerInf) => {\n                storeInst[listenerInf.type](listenerInf.props, listenerInf.listener, false, {\n                    namespace: formalName,\n                    subNamespace: listenerInf.subNamespace\n                });\n            });\n        });\n    });\n};\n\nexport const registerDomainChangeListener = (context) => {\n    const store = context.store();\n    store.registerChangeListener([`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`], () => {\n        context.resolver().encoder().unionUnitDomains(context);\n    }, false, {\n        key: 'unionDomain'\n    });\n};\n\nexport const unsubscribeChangeListeners = (context) => {\n    context.store().unsubscribe({\n        key: 'unionDomain'\n    });\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\nexport const PROPS = {\n    alias: {},\n    data: {},\n    cornerMatrices: {\n        defaultValue: {\n            topLeft: [],\n            topRight: [],\n            bottomLeft: [],\n            bottomRight: []\n        }\n    },\n    groupType: {},\n\n    metaData: {\n        defaultValue: {\n            border: {}\n        }\n    },\n    placeholderInfo: {\n        defaultValue: {}\n    },\n    resolver: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    registry: {\n        sanitization: (context, value) => {\n            if (context.resolver) {\n                context.resolver().registry(value.cellRegistry);\n            }\n            return value;\n        }\n    },\n    selection: {},\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { generateGetterSetters } from 'muze-utils';\nimport localOptions from './local-options';\nimport { SimpleGroup } from '../simple-group';\nimport {\n    MatrixResolver,\n    findInGroup\n} from '../group-helper';\nimport { createUnitState, initializeGlobalState, setMatrixInstances, createMatrices, createLayerState } from './helper';\nimport { setupChangeListeners } from './change-listener';\nimport { PROPS } from './props';\nimport {\n    CONFIG,\n    MOUNT,\n    RETINAL,\n    Y\n} from '../enums/constants';\n\n/**\n * VisualGroup is instantiated by canvas for creating {@link VisualUnit} and axes instances.It creates the\n * the matrix of visual units and axes. It also creates the layout instance which manages the allocation\n * of space of matrices.\n *\n * To get instance of visual group,\n * ```\n *      const visualGroup = canvas.composition().visualGroup;\n * ```\n * @public\n *\n * @class VisualGroup\n */\nclass VisualGroup extends SimpleGroup {\n\n    /**\n     * Creates an instance of VisualGroup. Requires dependencies and other registry options for placeholders\n     * and layers that create individual units.\n     *\n     * @param {Object} registry Key value pair of compostions for the group\n     * @param {Object} dependencies Dependencies needed to run the group\n     * @memberof VisualGroup\n     */\n    constructor (registry, dependencies) {\n        super();\n\n        const {\n            componentSubRegistry\n        } = registry;\n\n        this._dependencies = dependencies;\n        // Generate getter/setter methods for all properties of the class\n        // One can get each property by calling the method and can set it\n        // by passing paramaters for the same. Thus, one can chain setter\n        // getter methods.\n        generateGetterSetters(this, PROPS);\n        generateGetterSetters(this, localOptions);\n        // Populate the store with default values\n        // initialize group compositions\n        this._composition = {};\n        // store reference to data\n        this._data = [];\n        // store reference to mountpoint\n        this._mount = null;\n        // selection object that takes care of updating of components\n        this._selection = {};\n        // Create instance of matrix resolver\n        this.resolver(new MatrixResolver(this._dependencies));\n        // matrix instance store each of the matrices\n        setMatrixInstances(this, {});\n         // Getting indiviual registered items\n        this.registry({\n            layerRegistry: componentSubRegistry.layerRegistry.get(),\n            cellRegistry: componentSubRegistry.cellRegistry.get()\n        });\n    }\n\n    static getState () {\n        return [{\n            domain: {\n                x: null,\n                y: null,\n                radius: null,\n                angle: null,\n                angle0: null\n            }\n        }, {}];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            initializeGlobalState(this);\n            createUnitState(this);\n            createLayerState(this);\n            // Register listeners\n            setupChangeListeners(this);\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Return the instances of matrices created by the visual group.\n     *\n     * @return {Object} Instance of matrices.\n     */\n    matrixInstance (...matrices) {\n        if (matrices.length) {\n            return this;\n        }\n        return this.composition().matrices;\n    }\n\n    /**\n     * Returns the composition of visual group.\n     *\n     * @public\n     *\n     * @return {Object} Composition of visual group. It contains instance of matrices {@link ValueMatrix}\n     * and instances of axis.\n     * ```\n     *          {\n     *              matrices: {\n     *                  value: // Instance of center value matrix.\n     *                  left: // Instance of left value matrix\n     *                  right: // Instance of right value matrix\n     *                  bottom: // Instance of bottom value matrix\n     *                  top: // Instance of top value matrix.\n     *              },\n     *              axes: {\n     *                  x: // Array of x axis.\n     *                  y: // Array of y axis\n     *                  color: // Array of color axis\n     *                  shape: // Array of shape axis\n     *                  size: // Array of size axis.\n     *              }\n     *          }\n     * ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    /**\n     * Locks the model to prevent change listeners to be triggered until unlocked\n     *\n     * @return {Object} Instance of class VisualGroup\n     * @memberof VisualGroup\n     */\n    lockModel () {\n        this.store().model.lock();\n        return this;\n    }\n\n    /**\n     * Unlocks the model so that all change listeners can be triggered\n     *\n     * @return {Object} Instance of class VisualGroup\n     */\n    unlockModel () {\n        this.store().model.unlock();\n        return this;\n    }\n\n    /**\n     * Returns the channel name of the variable. Channels are rows, columns, color, shape and size.\n     *\n     * @public\n     * @param {string} variable Name of the variable.\n     *\n     * @return {string} Name of the channel.\n     */\n    where (variable) {\n        return findInGroup(variable, this.resolver().getAllFields());\n    }\n\n    /**\n     * Gets the axis instances of the visual group based on the given axis type.\n     *\n     * @public\n     * @param {string} type Type of axis. X,Y or retinal axes.\n     *\n     * @return {Array} Array of axis instances.\n     */\n    getAxes (type) {\n        if (type === RETINAL) {\n            return this.resolver().getRetinalAxes();\n        }\n        return this.resolver().getSimpleAxes(type);\n    }\n\n    /**\n     * Returns the instances of cells based on the given type. Type can be given as `row' or `col`.\n     *\n     * @public\n     * @return {Array} Two dimensional array of cells.\n     */\n    getCells (type) {\n        return this.resolver()[`${type}Cells`]();\n    }\n\n    getFieldsFromChannel (channel) {\n        const {\n            rowProjections,\n            colProjections\n        } = this.resolver().getAllFields();\n        return channel === Y ? rowProjections : colProjections;\n    }\n\n    getCellsByFacetKey (facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey] || [];\n        return cells;\n    }\n\n    getAxesByFacetKey (axisType, facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey];\n        const axes = cells[0].valueOf().axes()[axisType] || [];\n\n        return axes;\n    }\n\n    /**\n     * This method is used to return a serialized representation of the instance's properties.\n     *\n     * @return {Object} Object with config proprties.\n     * @memberof VisualGroup\n     */\n    serialize () {\n        const store = this.store();\n\n        return {\n            [CONFIG]: store.get(CONFIG),\n            [MOUNT]: store.get(MOUNT)\n        };\n    }\n\n    /**\n     * Returns the grouped datamodel prepared by visual group. If there is no group by performed, then it returns the\n     * original data model passed to visual group.\n     *\n     * @return {DataModel} Grouped data model.\n     */\n    getGroupByData () {\n        return this._groupedDataModel;\n    }\n\n    createMatrices () {\n        createMatrices(this);\n    }\n\n    remove () {\n        this.matrixInstance().value.clear();\n        this.resolver().clear();\n        const info = this.placeholderInfo();\n        info.rows = null;\n        info.columns = null;\n        info.values = null;\n    }\n}\n\nexport default VisualGroup;\n","import { PersistentBehaviour, SELECTION } from '@chartshq/muze-firebolt';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return 'select';\n    }\n\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            // new add set\n            const existingRemoveSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_OLD_EXIT\n                || selectionSet._set[d] === SELECTION.SELECTION_NEW_EXIT);\n                // existing add set\n            if (existingRemoveSet.length) {\n                selectionSet.updateEntry();\n                selectionSet.add(existingRemoveSet);\n            } else {\n                selectionSet.updateExit();\n                selectionSet.remove(addSet);\n            }\n            const { exitSet } = selectionSet.getSets();\n            const mergedExitSet = [...new Set(exitSet[1]), ...new Set(exitSet[0])];\n            const completeSetCount = selectionSet.getCompleteSet().length;\n            if (exitSet[1].length !== completeSetCount && mergedExitSet.length === completeSetCount) {\n                selectionSet.reset();\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n        return this;\n    }\n}\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nconst CLASSPREFIX = 'muze';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        target: `.${CLASSPREFIX}-gradient-rect`,\n        behaviours: [BEHAVIOURS.BRUSH]\n    },\n    [ACTIONS.HOVER]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.CLICK]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.SELECT]\n    }\n};\n\nexport const propagationBehaviourMap = {\n    [BEHAVIOURS.SELECT]: BEHAVIOURS.FILTER,\n    [BEHAVIOURS.BRUSH]: BEHAVIOURS.HIGHLIGHT\n};\n","import * as BEHAVIOURS from '../enums/behaviours';\nimport * as sideEffects from '../enums/side-effects';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: [sideEffects.SELECTIONBOX, {\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [sideEffects.Highlighter],\n    select: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }]\n};\n\nexport const propagationSideEffects = {\n    [BEHAVIOURS.BRUSH]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.SELECT]: ['filter']\n};\n\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n\n","export const SELECTIONBOX = 'selectionBox';\nexport const Highlighter = 'highlighter';\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const CONFIG = 'config';\nexport const DATAMODEL = 'dataModel';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const MAXWIDTH = 'max-width';\nexport const HEIGHT = 'height';\nexport const MOUNTPOINT = 'mountPoint';\nexport const GRIDLINEPARENTGROUPCLASS = 'grid-lines';\nexport const TRANSFORM = 'transform';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const DEFAULTCOLOR = '#F44336';\nexport const DEFAULTSIZE = 50;\nexport const DEFAULTSHAPE = 'circle';\nexport const STEP = 'step';\nexport const GRADIENT = 'gradient';\nexport const ORDINAL = 'ordinal';\nexport const SCALE_FUNCTIONS = {\n    size: 'getSize',\n    shape: 'getShape',\n    color: 'getColor'\n};\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const HORIZONTAL = 'horizontal';\nexport const VERTICAL = 'vertical';\nexport const CENTER = 'center';\nexport const VALUE = 'value';\nexport const PATH = 'path';\nexport const SHAPE = 'shape';\nexport const ICON = 'icon';\nexport const RECT = 'rect';\nexport const START = 'start';\nexport const UPPER = 'upper';\nexport const LOWER = 'lower';\nexport const END = 'end';\nexport const SIZE = 'size';\nexport const DISCRETE = 'discrete';\nexport const MEASURE = 'measure';\n\n","import { assembleModelFromIdentifiers, getDataModelFromRange } from 'muze-utils';\nimport { propagationBehaviourMap } from './action-behaviour-map';\nimport { propagationSideEffects } from './behaviour-effect-map';\nimport { STEP, GRADIENT, DISCRETE, MEASURE } from '../enums/constants';\n\nexport const propagate = (firebolt, action, selectionSet, config = {}) => {\n    let propagationData;\n    const context = firebolt.context;\n    const type = context.constructor.type();\n    const payload = config.payload;\n    const data = context.data();\n    const metaData = context.metaData();\n    const fieldType = metaData.getData().schema[0].type;\n\n    const propPayload = {};\n    const sourceId = context._id;\n    propPayload.action = propagationBehaviourMap[action] || action;\n    propPayload.sideEffects = propagationSideEffects[action];\n    propPayload.sourceCanvas = context.canvasAlias();\n    const isMutableAction = firebolt._actions.behavioural[propPayload.action].constructor.mutates();\n    if (payload.criteria === null) {\n        propagationData = null;\n    } else {\n        const entrySet = selectionSet.mergedEnter;\n        let values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.rawVal);\n        if (type === STEP || (type === DISCRETE && fieldType === MEASURE)) {\n            const field = Object.keys(payload.criteria || {})[0];\n            values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.range);\n            propagationData = values.length ? metaData.select((fields) => {\n                let check = false;\n                for (let i = 0; i < values.length; i++) {\n                    check = fields[field].internalValue >= values[i][0] && fields[field].internalValue <= values[i][1];\n                    if (check === true) {\n                        break;\n                    }\n                }\n                return check;\n            }, {\n                saveChild: false\n            }) : null;\n        } else if (type === GRADIENT) {\n            propagationData = getDataModelFromRange(metaData, payload.criteria);\n        } else if (values.length) {\n            propagationData = assembleModelFromIdentifiers(metaData, [payload.criteria[0], ...values.map(d => [d])]);\n        } else {\n            propPayload.criteria = null;\n            propagationData = metaData.select(() => true, {\n                saveChild: false\n            });\n        }\n    }\n\n    let propagateInterpolatedValues = false;\n\n    if (propagationData) {\n        const schema = propagationData.getSchema();\n        propagateInterpolatedValues = schema.every(d => d.type === MEASURE);\n    }\n\n    const propConfig = {\n        sourceId: `legend-${sourceId}`,\n        payload: propPayload,\n        criteria: propPayload.criteria === null ? null : propagationData,\n        isMutableAction,\n        propagateInterpolatedValues,\n        action: propPayload.action\n    };\n\n    metaData.propagate(propagationData, propConfig, true);\n};\n","import { Firebolt } from '@chartshq/muze-firebolt';\nimport { propagate } from './helper';\nimport { STEP, GRADIENT } from '../enums/constants';\n\n/**\n * This class manages the interactions of legend.\n * @export\n * @class LegendFireBolt\n * @extends {Firebolt}\n */\nexport class LegendFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this.initializeSideEffects();\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet[0];\n    }\n\n    propagate (behaviourName, payload, selectionSet) {\n        propagate(this, behaviourName, selectionSet, {\n            payload\n        });\n    }\n\n    getAddSetFromCriteria (criteria) {\n        let values;\n        let uniqueIds;\n        const type = this.context.constructor.type();\n\n        if (criteria === null) {\n            uniqueIds = null;\n        } else if (type === STEP) {\n            values = Object.values(criteria);\n            uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n        } else if (type === GRADIENT) {\n            uniqueIds = [];\n        } else {\n            values = criteria[1];\n            if (values) {\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.rawVal) !== -1).map(d => d.id);\n            } else {\n                values = Object.values(criteria);\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n            }\n        }\n        return {\n            uids: uniqueIds,\n            model: null\n        };\n    }\n\n    getFullData () {\n        return null;\n    }\n}\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\n/**\n * Adds dragging action to the target element.\n * @param {firebolt} firebolt firebolt\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let endPos = {};\n    let payload;\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const boundingBox = context.measurement().gradientDimensions;\n    const axisType = context.config().align === 'horizontal' ? 'x' : 'y';\n    const axisScale = context.axis().source().scale();\n    const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n    }).on('drag', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                    axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n            }\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }).on('end', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n        if (startPos[axisType] === endPos[axisType]) {\n            payload = {\n                criteria: {}\n            };\n        } else {\n            payload = {\n                criteria: {\n                    [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                        axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n                }\n            };\n        }\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }));\n};\n\nexport default drag;\n","import { getEvent } from 'muze-utils';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} Firebolt instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        const event = getEvent();\n                        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, {\n                            criteria: null\n                        }));\n                        event.stopPropagation();\n                    });\n};\n\nexport default hover;\n","/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nconst click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\n\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport click from './click';\nimport * as ACTIONNAMES from '../../enums/actions';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click\n};\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\n","import {\n    getMousePos,\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\nimport { HEIGHT, WIDTH, HORIZONTAL } from '../../enums/constants';\n\nconst getSelectionCriteria = (subject, axis, measures) => {\n    let criteria = [];\n    const {\n        axisScale,\n        axisType\n    } = axis;\n    const {\n        startPos,\n        endPos,\n        selectionBoxMeasure,\n        drawingInfMeasure,\n        offset\n    } = measures;\n    const subjectStartPoint = subject[axisType];\n\n    if (startPos[axisType] === endPos[axisType]) {\n        criteria = [];\n    } else if (subjectStartPoint + selectionBoxMeasure >= drawingInfMeasure + offset) {\n        criteria = [axisScale.invert(drawingInfMeasure + offset - selectionBoxMeasure),\n            axisScale.invert(drawingInfMeasure + offset)];\n    } else if (subjectStartPoint - offset < offset) {\n        criteria = [axisScale.invert(offset * 2), axisScale.invert(selectionBoxMeasure + offset * 2)];\n    } else {\n        criteria = [axisScale.invert(subjectStartPoint), axisScale.invert(subjectStartPoint + selectionBoxMeasure)];\n    }\n    axisType === 'x' ? criteria : criteria.reverse();\n    return criteria;\n};\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let payload;\n    const endPos = {};\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const axisScale = context.axis().source().scale();\n    const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n    const drawingInfMeasure = context.measurement().gradientDimensions[axisType === 'x' ?\n        WIDTH : HEIGHT];\n    const offset = axisScale.range()[axisType === 'x' ? 0 : 1];\n    const measures = {\n        drawingInfMeasure,\n        offset\n    };\n    let subject = {};\n\n    targetEl.call(d3Drag().on('start', function () {\n        const event = getEvent();\n        startPos = getMousePos(this, event.sourceEvent);\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n\n        subject.x += event.dx;\n        subject.y += event.dy;\n\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(subject, { axisScale, axisType }, measures);\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }).on('end', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(event, { axisScale, axisType }, measures);\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true,\n            config: {\n                transition: {\n                    duration: 200\n                }\n            }\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }));\n};\n\n","import { makeElement } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { CLASSPREFIX, HEIGHT, WIDTH, HORIZONTAL, RECT } from '../../../enums/constants';\nimport { SELECTIONBOX } from '../../../enums/side-effects';\nimport { selectionBoxDrag } from '../../physical/selection-box-drag';\nimport './styles.scss';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\n/* istanbul ignore next */ class SelectionBox extends SpawnableSideEffect {\n    static formalName () {\n        return SELECTIONBOX;\n    }\n\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            className: 'legend-selection-box',\n            classPrefix: CLASSPREFIX\n        };\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     */\n    /* istanbul ignore next */ apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const firebolt = this.firebolt;\n        const context = firebolt.context;\n        const config = this.config();\n        const axis = context.axis().source();\n        const className = `${config.classPrefix}-${config.className}`;\n\n        const domain = payload.criteria[firebolt.context.fieldName()];\n        const axisScale = axis.scale();\n        const range = domain ? [axis.getScaleValue(domain[0]), axis.getScaleValue(domain[1])] : [];\n\n        const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n\n        const gradientDimension = firebolt.context.measurement().gradientDimensions[axisType === 'x' ?\n            HEIGHT : WIDTH];\n\n        const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n        const legendGradContainer = context.getDrawingContext().svgContainer;\n        const legendSelGroup = makeElement(legendGradContainer, 'g', [1], `${config.classPrefix}-selection-box-group`);\n\n        if (firebolt.context.config().align === HORIZONTAL) {\n            x = range[0] - rangeShifter || 0;\n            y = 0;\n            width = range[1] - range[0] || 0;\n            height = gradientDimension;\n        } else {\n            x = 0;\n            y = range[1] - rangeShifter || 0;\n            height = range[0] - range[1] || 0;\n            width = gradientDimension;\n        }\n        const enterFn = function (el) {\n            selectionBoxDrag(firebolt)(el, ['brush']);\n        };\n        const selBox = makeElement(legendSelGroup, RECT, [{ domain, x, y, width, height }], className,\n            { enter: enterFn });\n        selBox.attr('y', y)\n                        .attr('x', x)\n                        .attr(WIDTH, width)\n                        .attr(HEIGHT, height);\n    }\n}\n\nexport default SelectionBox;\n\n","import { selectElement } from 'muze-utils';\n\nexport const strategies = (firebolt) => {\n    const context = firebolt.context;\n    const classed = (set, className, change) => {\n        const classPrefix = context.config().classPrefix;\n        selectElement(context.mount())\n                        .selectAll(`.${classPrefix}-legend-columns`)\n                        .filter(d => set.uids.indexOf(d.id) !== -1)\n                        .selectAll('div')\n                        .classed(className, change);\n    };\n\n    return {\n        fade: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-fadeout`, false);\n            } else {\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-fadeout`, true);\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-fadeout`, false);\n            }\n        },\n        brighten: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-brighten`, false);\n            } else {\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-brighten`, true);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n            }\n        }\n    };\n};\n","import { GenericSideEffect } from '@chartshq/muze-firebolt';\nimport { strategies } from './strategies';\nimport { Highlighter } from '../../../enums/side-effects';\n\nexport default class LegendHighlighter extends GenericSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategies = strategies(this.firebolt);\n        this._strategy = 'brighten';\n    }\n\n    static formalName () {\n        return Highlighter;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        strategy(selectionSet, this);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    data: {},\n    fieldName: {},\n    legendContainer: {},\n    measurement: {\n        sanitization: (context, value) => {\n            const measurement = mergeRecursive(context._measurement, value);\n            ['padding', 'border', 'margin'].forEach((space) => {\n                measurement[space] = Math.min(measurement[space] > 0 ? measurement[space] : 0,\n                     measurement.maxWidth * 0.1, measurement.maxHeight * 0.1);\n            });\n            return measurement;\n        }\n    },\n    logicalSpace: {},\n    metaData: {},\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.resetLogicalSpace();\n            context.store().commit('range', value);\n            return value;\n        }\n    },\n    scale: {},\n    smartTicks: {},\n    store: {},\n    title: {\n        sanitization: (context, value) => mergeRecursive(context._title || {}, value)\n    },\n    labelManager: {},\n    minTickDistance: {},\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import { getSymbol } from 'muze-utils';\nimport {\n    CENTER,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\nexport const ALIGN = {\n    HORIZONTAL: 'horizontal',\n    VERTICAL: 'vertical'\n};\n\nexport const DEFAULT_MEASUREMENT = {\n    height: 30,\n    width: 30,\n    maxWidth: Infinity,\n    maxHeight: Infinity,\n    padding: 2,\n    margin: 2,\n    border: 1\n};\n\nexport const LEGEND_TITLE = {\n    text: '',\n    orientation: (pos) => {\n        if (pos === LEFT || pos === RIGHT) {\n            return LEFT;\n        } return CENTER;\n    }\n};\n\nexport const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    borderStyle: 'solid',\n    borderColor: 'rgba(0,0,0,0)',\n    formatter: {\n        bounds: {\n            lower: 'less than',\n            upper: 'more than'\n        }\n    },\n    item: {\n        text: {\n            orientation: 'right',\n            width: 10,\n            formatter: (val, i, data, context) => context.valueParser()(val)\n        },\n        icon: {\n            className: 'legend-icon',\n            height: 20,\n            width: 20,\n            color: 'rgba(0,0,0,.5)',\n            type: 'square'\n        }\n    }\n};\n\n/**\n * Creates a map of pre defined icons\n *\n * @param {string} icon Accepts a icon name like 'square', 'cross', 'diamond' etc\n * @return {Object} icon object which can be used to draw the icons\n */\nexport const ICON_MAP = (icon) => {\n    if (icon && typeof (icon) === 'string') {\n        return getSymbol(icon);\n    } return icon;\n};\n","import { makeElement, numberInterpolator } from 'muze-utils';\n\nimport {\n    SCALE_FUNCTIONS,\n    WIDTH,\n    HEIGHT,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    MAXWIDTH\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} scale\n *\n */\nexport const getScaleInfo = (scale) => {\n    const scaleType = scale.constructor.type();\n    const domain = scale.uniqueValues();\n    const steps = scale.config().stops || 1;\n    const scaleFn = SCALE_FUNCTIONS[scaleType];\n\n    return { scaleType, domain, steps, scaleFn };\n};\n\n/**\n * Function to recompute the stops in array in case to left and right alignment of legend.\n *\n * @param  {string} param - parameter to measure\n * @param  {Object} requiredMeasure - required measure parameters\n * @param  {Object} availableMeasure - available meassure parameters\n * @param  {Array} domainForLegend - array\n * @param  {Object} smartLabelCalc - smartLabel Manager\n * @return {Array} - Array\n */\nconst getcomputedArray = (computationhelper, requiredMeasure, availableMeasure, domainForLegend) => {\n    // declaring Current and Next Tick Value variable\n    let currentTickValue;\n    let nextTickValue;\n    const upperBound = domainForLegend[domainForLegend.length - 1];\n    const param = computationhelper.measureParam;\n    const smartLabelCalc = computationhelper.smartLabelCalc;\n\n    // calculating pixel required per Tick Values\n    const pixelPerTick = (availableMeasure[param] / upperBound);\n\n    // checking if available max width is smaller than required width for legend.\n    if (availableMeasure[param] >= requiredMeasure[param]) {\n        return domainForLegend;\n    }\n\n    currentTickValue = (smartLabelCalc.getOriSize((domainForLegend[0]))[param]);\n    for (let i = 1; i < domainForLegend.length - 1; i++) {\n        nextTickValue = Math.floor((currentTickValue / pixelPerTick) + domainForLegend[i - 1]);\n        if (domainForLegend[i] < nextTickValue) {\n            domainForLegend.splice(i, 1);\n            i -= 1;\n        }\n        currentTickValue = (smartLabelCalc.getOriSize((domainForLegend[i]))[param]);\n    }\n    return domainForLegend;\n};\n\n/**\n * function to recompute the Stops Array provided to prevent the Overlapping of values\n * @param  {Array} domainForLegend - Stops Array\n * @param  {Object} scaleParams - Scale Parameters\n * @return {Array} - modified Stops Array\n */\nexport const getInterpolatedArrayData = (domainForLegend, scaleParams) => {\n    // defining param for height/width selector\n    let measureParam;\n\n    // declaring variable for required Width\n    let requiredWidth;\n\n    // declaring variable for required height\n    let requiredHeight;\n\n    // declaring the variable for upperbound\n    let upperBound = domainForLegend[domainForLegend.length - 1];\n\n    // Initializing Minimum Tick Difference Variable and checking if it's less than 1 or not\n    let minTickDiff = Math.ceil(domainForLegend[1] - domainForLegend[0]);\n\n    // calculating max tick difference\n    const maxTickDiff = Math.ceil(upperBound - domainForLegend[0]);\n\n    // gradient Alignment\n    const { alignment } = scaleParams;\n\n    // getting SmartLabel Manager to calculate tick Params\n    const smartLabelCalc = scaleParams.smartLabel;\n\n    // scale Measurements (i.e MaxWidth and MaxHeight available)\n    const availableSpace = scaleParams.measures;\n\n    // getting minimum Tick size (i.e height and width)\n    const minimumTickSize = scaleParams.minTickDistance;\n\n    // getting domain upperbound dimensions\n    const { height: tickDimHeight, width: tickDimWidth } = smartLabelCalc.getOriSize((upperBound));\n\n    /* Checking if UpperBound of Domain is Floating or Not.\n    In case of floating constricting it to 2 decimals after point. */\n    if (!Number.isInteger(upperBound)) {\n        upperBound = ((upperBound).toFixed(2));\n    }\n\n    // Calculating minimum tick difference\n    minTickDiff = minTickDiff < 1 ? 1 : minTickDiff;\n\n    // required width to render legend\n    requiredWidth = (Math.abs(maxTickDiff) / Math.abs(minTickDiff)) * (tickDimWidth + (minimumTickSize.width));\n\n    requiredWidth -= Math.abs(maxTickDiff);\n\n    // require height to render legend\n    requiredHeight = (Math.abs(maxTickDiff) / Math.abs(minTickDiff)) * tickDimHeight;\n\n    requiredHeight -= Math.abs(maxTickDiff);\n\n    // checking the alignment of legend\n    if (alignment === TOP || alignment === BOTTOM) {\n        measureParam = WIDTH;\n    } else {\n        measureParam = HEIGHT;\n    }\n\n    // calculating computed array\n    domainForLegend = getcomputedArray({\n        smartLabelCalc,\n        measureParam\n    }, {\n        height: requiredHeight,\n        width: requiredWidth\n    }, {\n        height: availableSpace.maxHeight,\n        width: availableSpace.maxWidth\n    }, domainForLegend);\n\n    return domainForLegend;\n};\n\n/**\n * function to recalculate steps on providing more number of stops than canvas can accomodate.\n * @param  {Array} domain - Array\n * @param  {Array} steps - Array\n * @param  {Object} scaleParams - Scale Parameters\n * @return {Array} - recalculated Step Array\n */\nexport const getInterpolatedData = (domain, steps, scaleParams) => {\n    // declaring recomputeSteps Variable\n    let recomputeSteps = 0;\n\n    const getTickMeasure = scaleParams.smartLabel;\n    const { maxWidth, maxHeight } = scaleParams.measures;\n    const { alignment } = scaleParams;\n    const domainForLegend = [];\n    const interpolatedFn = numberInterpolator()(domain[0], domain[1]);\n\n    // getting tick measure(i.e height and width)\n    const tickValue = getTickMeasure.getOriSize(domain[1].toFixed(2));\n\n    // To round the floating values to Integer and checking if value is 1.\n    steps = Math.round(steps);\n    steps = steps < 1 ? (steps + 1) : steps;\n\n    // checking alignment of the Axis\n    if (alignment === TOP || alignment === BOTTOM) {\n        recomputeSteps = Math.floor(maxWidth / (tickValue.width));\n    } else {\n        recomputeSteps = Math.floor(maxHeight / (tickValue.height));\n    }\n    steps = Math.min(steps, recomputeSteps);\n\n    // scaling the axis based on steps provided\n    for (let i = 0; i <= steps; i++) {\n        domainForLegend[i] = interpolatedFn(i / steps);\n    }\n    return domainForLegend;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} text\n * @param {*} measurement\n * @param {*} classPrefix\n */\nexport const titleCreator = (container, title, measurement, config) => {\n    const titleWidth = Math.min(measurement.maxWidth, measurement.width);\n\n    const titleContainer = makeElement(container, 'table', [1], `${config.classPrefix}-legend-title`)\n            .style(WIDTH, `${titleWidth}px`)\n            .style(HEIGHT, `${measurement.height}px`)\n            .style('border-bottom', `${measurement.border}px ${config.borderStyle} ${config.borderColor}`)\n            .style('text-align', title.orientation instanceof Function ?\n            title.orientation(config.position) : title.orientation);\n    return makeElement(titleContainer, 'td', [1], `${config.classPrefix}-legend-title-text`)\n                    .style(WIDTH, `${titleWidth}px`)\n                    .style(MAXWIDTH, `${titleWidth}px`)\n                    .style(HEIGHT, '100%')\n                    .style('line-height', 1)\n                    .style('padding', `${measurement.padding}px`)\n                    .text(title.text)\n                    .style('overflow-x', 'scroll')\n                    .node();\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getMaxMeasures = (data, prop, labelManager) => {\n    let maxHeight = -Infinity;\n    let maxWidth = -Infinity;\n\n    data.forEach((item) => {\n        const value = prop ? item[prop] : item;\n        const space = labelManager.getOriSize(value);\n        maxHeight = Math.max(space.height + 2, maxHeight);\n        maxWidth = Math.max(space.width + 2, maxWidth);\n    });\n\n    return { height: maxHeight, width: maxWidth };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getItemMeasures = (context, prop, formatter) => {\n    const space = [];\n    const data = context.data();\n    const labelManager = context._labelManager;\n\n    data.forEach((item, index) => {\n        const value = prop ? item[prop] : item;\n        const { height, width } = labelManager.getOriSize(formatter(value, index, data, context));\n        space[index] = { height: height + 1, width: width + 1 };\n    });\n    return space;\n};\n\n/**\n *\n *\n * @param {*} textOrientation\n * @param {*} effPadding\n * @param {*} titleSpace\n *\n * @memberof Legend\n */\nexport const computeItemSpaces = (config, measures, data) => {\n    let totalHeight = 0;\n    let totalWidth = 0;\n    let maxItemSpaces = {\n        width: 0, height: 0\n    };\n    const {\n        effPadding,\n        titleWidth,\n        labelSpaces,\n        titleHeight,\n        maxWidth\n    } = measures;\n    const {\n        item,\n        align\n    } = config;\n    const {\n        icon,\n        text\n    } = item;\n    const textOrientation = text.orientation;\n    const itemSpaces = [];\n    const iconSpaces = [];\n    let maxIconWidth = 0;\n    labelSpaces.forEach((labelSpace, i) => {\n        const itemSpace = { width: 0, height: 0 };\n        const iconSpace = { width: 0, height: 0 };\n        const datum = data[i] || {};\n            // Compute each legend item height/width\n        if (textOrientation === LEFT || textOrientation === RIGHT) {\n            // Get label, icon and item widths\n            labelSpace.width += effPadding;\n            iconSpace.width = (datum.size ? 2 * Math.sqrt(datum.size / Math.PI) : icon.width) + effPadding;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n            itemSpace.width = labelSpace.width + maxIconWidth;\n\n            // Get label, icon and item heights\n            labelSpace.height = Math.max(labelSpace.height, icon.height) + effPadding;\n            iconSpace.height = labelSpace.height;\n            itemSpace.height = labelSpace.height;\n        } else {\n            // Get label, icon and item widths\n            labelSpace.width = Math.max(labelSpace.width, datum.size ? 2 * Math.sqrt(datum.size / Math.PI)\n            : icon.width) + effPadding;\n            iconSpace.width = labelSpace.width;\n            itemSpace.width = labelSpace.width;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n\n            // Get label, icon and item heights\n            labelSpace.height += effPadding;\n            iconSpace.height = icon.height + effPadding;\n            itemSpace.height = labelSpace.height + iconSpace.height;\n        }\n        // Compute height and width of legend for each alignment\n        if (align === 'horizontal') {\n            totalHeight = Math.max(totalHeight, itemSpace.height);\n        } else {\n            totalHeight += itemSpace.height;\n            totalWidth = Math.max(totalWidth, itemSpace.width, titleWidth);\n        }\n        maxItemSpaces = {\n            width: Math.max(itemSpace.width, maxItemSpaces.width),\n            height: Math.max(itemSpace.height, maxItemSpaces.height)\n        };\n        itemSpaces.push(itemSpace);\n        iconSpaces.push(iconSpace);\n    });\n    itemSpaces.forEach((itemSpace, i) => {\n        if (align === 'horizontal') {\n            itemSpace.height = totalHeight;\n            iconSpaces[i].width = maxIconWidth;\n            if (textOrientation === LEFT || textOrientation === RIGHT) {\n                labelSpaces[i].height = totalHeight;\n                iconSpaces[i].height = totalHeight;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n            } else {\n                labelSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = maxIconWidth;\n                labelSpaces[i].width = maxIconWidth;\n            }\n            totalWidth = Math.max(totalWidth + itemSpaces[i].width);\n        } else {\n            itemSpace.width = Math.max(totalWidth, maxWidth);\n            if (textOrientation === TOP || textOrientation === BOTTOM) {\n                labelSpaces[i].width = totalWidth;\n                iconSpaces[i].width = totalWidth;\n                maxIconWidth = totalWidth;\n            } else {\n                const labelWidth = labelSpaces[i].width;\n                const newLabelWidth = (maxItemSpaces.width - maxIconWidth);\n                iconSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n                labelSpaces[i].width = Math.max(labelWidth, newLabelWidth);\n                totalWidth = Math.max(totalWidth, itemSpace.width);\n            }\n        }\n    });\n    totalWidth = Math.ceil(Math.max(totalWidth, titleWidth)) + effPadding;\n    totalHeight += titleHeight + effPadding;\n    totalHeight = Math.ceil(totalHeight);\n    return { totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth };\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} scaleInfo\n * @param {*} domainInfo\n *\n */\nexport const getDomainBounds = (type, scaleInfo, domainInfo) => {\n    const {\n        scaleFn,\n        scaleType,\n        scale\n    } = scaleInfo;\n    const {\n        domain,\n        domainBounds,\n        domainLeg,\n        steps\n    } = domainInfo;\n    const ele = domain[type === 'lower' ? 0 : domain.length - 1];\n    const step = steps[type === 'lower' ? 0 : steps.length - 1];\n\n    return {\n        [scaleType]: scaleType === 'size' ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n        value: domainBounds[type],\n        id: type === 'lower' ? 0 : domainLeg.length + 2,\n        range: [ele, step]\n    };\n};\n","import {\n    makeElement,\n    selectElement,\n    getUniqueId,\n    getSmartComputedStyle,\n    generateGetterSetters,\n    mergeRecursive\n} from 'muze-utils';\nimport { behaviouralActions } from '@chartshq/muze-firebolt';\nimport * as legendBehaviours from '../firebolt/behavioural';\n\nimport { LegendFireBolt } from '../firebolt/legend-firebolt';\nimport { actionBehaviourMap } from '../firebolt/action-behaviour-map';\nimport { physicalActions } from '../firebolt/physical';\nimport * as sideEffects from '../firebolt/side-effects';\nimport { behaviourEffectMap } from '../firebolt/behaviour-effect-map';\nimport { VALUE, PATH, RIGHT, LEFT, TOP, BOTTOM } from '../enums/constants';\nimport { PROPS } from './props';\nimport { DEFAULT_MEASUREMENT, DEFAULT_CONFIG, LEGEND_TITLE } from './defaults';\nimport { getItemMeasures, titleCreator, computeItemSpaces } from './legend-helper';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class SimpleLegend\n */\nexport default class SimpleLegend {\n\n    /**\n     * Creates an instance of Legend.\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @memberof Legend\n     */\n    constructor (dependencies) {\n        this._data = [];\n        this._metaData = [];\n        this._mount = null;\n        this._fieldName = null;\n        this._title = Object.assign({}, LEGEND_TITLE);\n        this._metaData = null;\n        this._labelManager = dependencies.labelManager;\n        this._cells = dependencies.cells;\n        this._id = getUniqueId();\n        this._measurement = Object.assign({}, this.constructor.defaultMeasurement());\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n\n        const dist = dependencies.labelManager.getOriSize('w');\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n\n        generateGetterSetters(this, PROPS);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'),\n            `${this.config().classPrefix}-legend-item-info`);\n\n        this._firebolt = new LegendFireBolt(this, {\n            behavioural: Object.assign({}, behaviouralActions, legendBehaviours),\n            physical: physicalActions,\n            physicalBehaviouralMap: actionBehaviourMap\n        }, sideEffects, behaviourEffectMap);\n    }\n\n    id () {\n        return this._id;\n    }\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new SimpleLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENT;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleLegend\n     */\n    firebolt (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return PATH;\n    }\n\n    canvasAlias (...alias) {\n        if (alias.length) {\n            this._canvasAlias = alias[0];\n            return this;\n        }\n        return this._canvasAlias;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    mount (...params) {\n        if (params.length) {\n            this._mount = params[0];\n            this.render();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces () {\n        const {\n            item,\n            classPrefix\n        } = this.config();\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n            `${classPrefix}-legend-item-info`));\n        return getItemMeasures(this, VALUE, item.text.formatter);\n    }\n\n    /**\n     * Sets the height and width of a legend based on provided max\n     * height and width and based on its contents\n     *\n     * @return {Instance} Current instance\n     * @memberof Legend\n     */\n    setLegendMeasures () {\n        const {\n            width,\n            height,\n            maxWidth,\n            maxHeight,\n            padding,\n            margin,\n            border\n        } = this.measurement();\n        const {\n            align\n        } = this.config();\n\n        // Effective padding, margin and padding\n        const effPadding = padding * 2;\n        const effBorder = border * 2;\n        const effMargin = margin * 2;\n\n        this.data(this.dataFromScale());\n        // Get space occupied by title\n        const titleSpace = this.getTitleSpace();\n        const titleHeight = titleSpace.height > 0 ? titleSpace.height + effPadding : 0;\n        const titleWidth = titleSpace.width + effPadding;\n\n        // Get space occupied by labels\n        const labelSpaces = this.getLabelSpaces(effPadding, align);\n        const {\n            totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth\n        } = computeItemSpaces(this.config(),\n        { effPadding, titleWidth, labelSpaces, titleHeight, maxWidth, maxHeight }, this.data());\n\n        this.measurement({\n            width: Math.max(totalWidth, width) + effMargin + effBorder,\n            height: Math.max(totalHeight, height) + effMargin + effBorder,\n            labelSpaces,\n            iconSpaces,\n            itemSpaces,\n            maxItemSpaces,\n            maxIconWidth,\n            titleSpaces: {\n                width: Math.min(maxWidth, this.measurement().width) - effMargin - effBorder,\n                height: titleHeight\n            }\n        });\n        return this;\n    }\n\n    /**\n     * Returns the space occupied by the legend title\n     *\n     * @return {Object} Space occupied by title\n     * @memberof Legend\n     */\n    getTitleSpace () {\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n                                                `${this.config().classPrefix}-legend-title`));\n        return this._labelManager.getOriSize(this.title().text ? this.title().text : '');\n    }\n\n    /**\n     * Creates the title for the legend\n     *\n     * @param {DOM} container Container made for the title\n     * @return {Selection} Title and it's node\n     * @memberof Legend\n     */\n    renderTitle (container) {\n        const { titleSpaces, border, padding, width, maxWidth } = this.measurement();\n        const { borderStyle, borderColor } = this.config();\n        return titleCreator(container, this.title(), {\n            height: titleSpaces.height,\n            width,\n            maxWidth,\n            border,\n            padding,\n            borderStyle,\n            borderColor\n        }, this.config());\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const {\n            classPrefix,\n            borderStyle,\n            borderColor,\n            position\n        } = this.config();\n        const {\n            maxWidth,\n            maxHeight,\n            width,\n            height,\n            margin,\n            border\n        } = this.measurement();\n        const legendContainer = makeElement(selectElement(this.mount()), 'div', [1], `${classPrefix}-legend-box`);\n        let marginPosition;\n        switch (position) {\n        case TOP:\n            marginPosition = `margin-${BOTTOM}`;\n            break;\n        case LEFT:\n            marginPosition = `margin-${RIGHT}`;\n            break;\n        case BOTTOM:\n            marginPosition = `margin-${TOP}`;\n            break;\n        default:\n            marginPosition = `margin-${LEFT}`;\n        }\n        legendContainer.classed(`${classPrefix}-legend-box-${this._id}`, true);\n        legendContainer.style('float', 'left');\n        // set height and width\n        legendContainer.style('width', `${Math.min(maxWidth, width) - margin * 2}px`)\n                        .style('height', `${Math.min(maxHeight, height) - margin * 2}px`)\n                        .style(`${marginPosition}`, `${margin}px`)\n                        .style('border', `${border}px ${borderStyle} ${borderColor}`);\n        this.legendContainer(legendContainer.node());\n\n        // create title\n        this.renderTitle(legendContainer);\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n  /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        const type = this.metaData().getData().schema[0].type;\n        if (type === 'measure') {\n            return {\n                [fieldName]: data.range\n            };\n        }\n        return [[fieldName], [data.rawVal]];\n    }\n}\n","import {\n    LEFT,\n    RIGHT,\n    START,\n    END,\n    TOP,\n    BOTTOM,\n    HORIZONTAL,\n    VERTICAL,\n    CENTER,\n    SHAPE,\n    VALUE\n} from '../enums/constants';\n\nconst legendOrientation = {\n    [HORIZONTAL]: {\n        datasets: data => ({\n            row: [1],\n            column: data\n        }),\n        itemContainerMeasures: (measurement) => {\n            const {\n                itemSpaces,\n                width\n            } = measurement;\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                },\n                column: {\n                    width: (d, i) => `${itemSpaces[i].width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, height } = measurement;\n            return {\n                iconHeight: height,\n                iconWidth: maxItemSpaces.width,\n                stepPadding: {\n                    horizontal: true,\n                    vertical: false\n                }\n            };\n        }\n    },\n    [VERTICAL]: {\n        datasets: data => ({\n            row: data,\n            column: d => [d]\n        }),\n        itemContainerMeasures: (measurement, config) => {\n            const {\n                width\n            } = measurement;\n            const { padding } = config;\n\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${padding}px`\n                },\n                column: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, width } = measurement;\n            return {\n                iconHeight: maxItemSpaces.height,\n                iconWidth: width,\n                stepPadding: {\n                    horizontal: false,\n                    vertical: true\n                }\n            };\n        }\n    }\n};\n\nexport const positionConfig = {\n    [LEFT]: legendOrientation[VERTICAL],\n    [RIGHT]: legendOrientation[VERTICAL],\n    [TOP]: legendOrientation[HORIZONTAL],\n    [BOTTOM]: legendOrientation[HORIZONTAL]\n};\n\nexport const alignmentMap = {\n    [LEFT]: END,\n    [RIGHT]: START,\n    [TOP]: CENTER,\n    [BOTTOM]: CENTER\n};\n\n// Reverses data for step legend\nexport const stepData = data => ({\n    [LEFT]: data.reverse(),\n    [RIGHT]: data.reverse(),\n    [TOP]: data,\n    [BOTTOM]: data\n});\n\n// Changes the item layout based on the position of the text\nexport const itemStack = {\n    [LEFT]: [VALUE, SHAPE],\n    [RIGHT]: [SHAPE, VALUE],\n    [TOP]: [VALUE, SHAPE],\n    [BOTTOM]: [SHAPE, VALUE]\n};\n","import { makeElement, selectElement, applyStyle } from 'muze-utils';\nimport { ICON_MAP } from './defaults';\nimport { positionConfig, alignmentMap, itemStack } from './position-config';\nimport {\n    WIDTH,\n    HEIGHT,\n    CENTER,\n    VALUE,\n    RECT,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} legendInstance\n * @param {*} align\n *\n */\nexport const getItemContainers = (container, data, legendInstance) => {\n    const measurement = legendInstance.measurement();\n    const config = legendInstance.config();\n    const {\n        itemSpaces\n    } = measurement;\n    const {\n        classPrefix,\n        position\n    } = config;\n    const positionObj = positionConfig[position];\n    const datasets = positionObj.datasets(data);\n    const measures = positionObj.itemContainerMeasures(measurement, config);\n\n    const rows = makeElement(container, 'div', datasets.row, `${classPrefix}-legend-row`);\n    rows.style(HEIGHT, (d, i) => `${itemSpaces[i].height}px`);\n    rows.style(WIDTH, measures.row.width);\n    rows.style('padding', measures.row.padding);\n\n    const columns = makeElement(rows, 'div', datasets.column, `${classPrefix}-legend-columns`);\n    columns.style(WIDTH, measures.column.width);\n    columns.style('padding', measures.column.padding);\n\n    return columns;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} classPrefix\n * @param {*} data\n *\n * @memberof DiscreteLegend\n */\nexport const createLegendSkeleton = (context, container, classPrefix, data) => {\n    let gradWidth = 0;\n    let gradHeight = 0;\n    let maxGradHeight = 0;\n    let maxGradWidth = 0;\n    const measurement = context.measurement();\n    const {\n            margin,\n            border,\n            titleSpaces,\n            width,\n            height,\n            maxWidth,\n            maxHeight\n        } = measurement;\n\n    gradHeight = height - (titleSpaces.height + 2 * margin + 2 * border);\n    gradWidth = width - (margin * 2 + border * 2);\n\n    maxGradHeight = maxHeight - (titleSpaces.height + margin * 2 + border * 2);\n    maxGradWidth = maxWidth - (margin * 2 + border * 2);\n\n    let legendBody = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    legendBody.select(`.${classPrefix}-legend-overflow`).remove();\n        // Create a div with scroll when overflow\n    if (maxGradWidth && maxGradWidth < gradWidth) {\n        legendBody = legendBody.style(WIDTH, `${maxGradWidth}px`).style('overflow-x', 'scroll');\n    }\n        // Create a div with scroll when overflow\n    if (maxGradHeight && maxGradHeight < gradHeight) {\n        legendBody.style(HEIGHT, `${maxGradHeight}px`).style('overflow-y', 'scroll');\n    }\n\n    legendBody = makeElement(legendBody, 'div', [1], `${classPrefix}-legend-overflow`);\n\n    legendBody.style(WIDTH, `${gradWidth}px`);\n    legendBody.style(HEIGHT, `${gradHeight}px`);\n\n    const legendItem = getItemContainers(legendBody, data, context);\n    return { legendItem };\n};\n\n/**\n * Creates legend item based on alignment and text orientation\n *\n * @param {Selection} container Point where items are to be mounted\n * @return {Instance} Current instance\n * @memberof Legend\n */\nexport const createItemSkeleton = (context, container) => {\n    const {\n        classPrefix,\n        item\n    } = context.config();\n    const textOrientation = item.text.orientation;\n\n    const stack = itemStack[textOrientation];\n    const itemSkeleton = makeElement(container, 'div', (d, i) => stack.map(e => [e, d[e], d.color, d.size,\n        d.value, context.fieldName(), i]), `${classPrefix}-legend-item-info`);\n\n    const alignClass = alignmentMap[textOrientation];\n\n    itemSkeleton.classed(alignClass, true);\n    return { itemSkeleton };\n};\n\n/**\n *\n *\n * @param {*} measureType\n * @param {*} stepColorCheck\n */\nexport const applyItemStyle = (item, measureType, stepColorCheck, context) => {\n    const {\n        padding,\n        labelSpaces,\n        iconSpaces,\n        maxIconWidth\n    } = context.measurement();\n    const diff = stepColorCheck ? -padding * 2 : 0;\n\n    if (item[0] === VALUE) {\n        return `${labelSpaces[item[6]][measureType]}px`;\n    }\n    return `${measureType === 'width' && !stepColorCheck ? maxIconWidth : iconSpaces[item[6]][measureType] - diff}px`;\n};\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, elem, defaultIcon, width, height) {\n    const groupElement = elem;\n    // const { shape, size, update } = d;\n    const size = d[3] || Math.min(width, height) * Math.PI;\n    const shape = d[1] || defaultIcon;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            return createShape(d, elem);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        shapeElement.attr('transform', `scale(${size / 100})`);\n        return selectElement(groupElement.node().appendChild(newShape));\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = ICON_MAP(shape).size(size)();\n        }\n        return makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    }\n    d[1] = 'circle';\n    return createShape(d, elem, 'circle');\n};\n\n/**\n * Returns the icon of the legend item\n *\n * @param {Object} datum Data property attached to the item\n * @param {number} width width of the item\n * @param {number} height height of the item\n * @return {Object|string} returns the path string or the string name of the icon\n * @memberof Legend\n */\nexport const getLegendIcon = (datum, width, height, defaultIcon) => {\n    const icon = ICON_MAP(datum[1]);\n\n    if (icon) {\n        return icon.size(datum[3] || Math.min(width, height) * Math.PI);\n    }\n    return ICON_MAP(datum[3] ? 'circle' : defaultIcon).size(datum[3] || Math.min(width, height) * Math.PI);\n};\n\n/**\n *\n *\n */\nexport const renderIcon = (icon, container, datum, context) => {\n    const {\n        classPrefix,\n        iconHeight,\n        iconWidth,\n        maxIconWidth,\n        padding,\n        color\n    } = context;\n    const svg = makeElement(container, 'svg', f => [f], `${classPrefix}-legend-icon-svg`)\n    .attr(WIDTH, maxIconWidth)\n    .attr(HEIGHT, iconHeight)\n    .style(WIDTH, `${maxIconWidth}px`)\n    .style(HEIGHT, `${iconHeight}px`);\n\n    if (icon !== RECT) {\n        const group = makeElement(svg, 'g', [datum[1]], `${classPrefix}-legend-icon`);\n        createShape(datum, group, datum[3] ? 'circle' : 'square', iconWidth, iconHeight)\n                        .attr('transform', `translate(${maxIconWidth / 2 - padding} ${iconHeight / 2})`)\n                        .attr('fill', datum[2] || color);\n    } else {\n        makeElement(svg, RECT, [datum[1]], `${classPrefix}-legend-icon`)\n                        .attr('x', 0)\n                        .attr('y', 0)\n                        .attr(WIDTH, maxIconWidth)\n                        .attr(HEIGHT, iconHeight)\n                        .attr('fill', datum[2] || color);\n    }\n};\n\n/**\n * Renders the items in the legend i.e, icon and text\n *\n * @param {DOM} container Point where item is to be mounted\n * @memberof Legend\n */\nexport const renderDiscreteItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n           item,\n           classPrefix\n    } = context.config();\n    const {\n        maxIconWidth,\n        padding\n    } = context.measurement();\n    const {\n            width: iconWidth,\n            height: iconHeight,\n            color,\n            className\n        } = item.icon;\n\n    const textOrientation = item.text.orientation;\n    const formatter = item.text.formatter;\n\n    labelManager.useEllipsesOnOverflow(true);\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, false, context),\n        height: d => applyItemStyle(d, HEIGHT, false, context),\n        'text-align': CENTER,\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context))\n                            .style(`padding-${textOrientation === RIGHT ? LEFT : RIGHT}`, '0px');\n        } else {\n            // const icon = getLegendIcon(d, iconWidth, iconHeight, type);\n            selectElement(this).classed(`${classPrefix}-${className}`, true);\n            selectElement(this).classed(`${classPrefix}-${className}-${i}`, true);\n            renderIcon('circle', selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                // iconWidth: 2 * Math.sqrt(d[3] / Math.PI) || iconWidth,\n                iconHeight,\n                maxIconWidth,\n                padding,\n                color\n            });\n        }\n    });\n};\n\n/**\n* Renders the items in the legend i.e, icon and text\n*\n* @param {DOM} container Point where item is to be mounted\n* @memberof Legend\n*/\nexport const renderStepItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n      item,\n      position,\n      classPrefix\n   } = context.config();\n    const {\n      maxItemSpaces,\n      maxIconWidth,\n      padding\n   } = context.measurement();\n    const {\n       width,\n       height,\n       color\n   } = item.icon;\n    const {\n        formatter\n   } = item.text;\n\n    labelManager.useEllipsesOnOverflow(true);\n    const { iconHeight, iconWidth, stepPadding } = positionConfig[position].getStepSpacesInfo({\n        maxItemSpaces, height, width\n    });\n\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, stepPadding.horizontal, context),\n        height: d => applyItemStyle(d, HEIGHT, stepPadding.vertical, context),\n        'text-align': 'center',\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context));\n        } else {\n            renderIcon(RECT, selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                iconHeight,\n                maxIconWidth,\n                color\n            });\n        }\n    });\n};\n","import {\n    FieldType,\n    DimensionSubtype,\n    formatTemporal\n} from 'muze-utils';\nimport SimpleLegend from './simple-legend';\nimport { DISCRETE, LEFT, SIZE } from '../enums/constants';\nimport { getScaleInfo } from './legend-helper';\nimport { createLegendSkeleton, createItemSkeleton, renderDiscreteItem } from './renderer';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class DiscreteLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new DiscreteLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof DiscreteLegend\n     */\n    static type () {\n        return DISCRETE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof DiscreteLegend\n     */\n    dataFromScale () {\n        const scale = this.scale();\n        const { scaleType, domain, scaleFn } = getScaleInfo(scale);\n        let domainForLegend = [...new Set(domain)];\n        const field = this.metaData().getFieldspace().fields[0];\n        const { type, subtype } = field.schema();\n\n        domainForLegend = domainForLegend.map((ele, i) => {\n            let value = 0;\n            let range = 0;\n            const rawVal = domainForLegend[i];\n            if (type === FieldType.MEASURE) {\n                value = (+domainForLegend[i]).toFixed(0);\n                const nextVal = domainForLegend[i + 1] ? +domainForLegend[i + 1] : +value;\n                range = [value, nextVal.toFixed(0)];\n            } else {\n                let domainVal = rawVal;\n                if (subtype === DimensionSubtype.TEMPORAL) {\n                    domainVal = formatTemporal(domainForLegend[i], field.minimumConsecutiveDifference());\n                }\n                value = domainVal;\n                range = [domainVal];\n            }\n            return {\n                [scaleType]: scale[scaleFn](ele),\n                value,\n                id: i,\n                range,\n                rawVal\n            };\n        }).filter(d => d.value !== null);\n\n        domainForLegend = scaleType === SIZE ? domainForLegend.sort((a, b) => a[scaleType] - b[scaleType])\n            : domainForLegend;\n        return domainForLegend;\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const data = this.data();\n        const { classPrefix } = this.config();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n        renderDiscreteItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n}\n","import { makeElement, applyStyle } from 'muze-utils';\nimport { ContinousAxis } from '@chartshq/muze-axis';\nimport { BOTTOM, RIGHT } from '../enums/constants';\nimport { ALIGN } from './defaults';\nimport '../styles.scss';\n\n/**\n *\n *\n * @param {*} data\n *\n */\nexport const getGradientDomain = (data) => {\n    if (typeof data[0].value === 'number') {\n        return data.reduce((accumulator, currentValue) =>\n            [Math.min(currentValue.value, accumulator[0]), Math.max(currentValue.value, accumulator[1])],\n                [Number.MAX_VALUE, Number.MIN_VALUE]);\n    }\n    return data.map(e => e.value);\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} domain\n *\n */\nexport const makeLinearGradient = (container, data, domain) => {\n    const defs = makeElement(container, 'defs', [1]);\n    const linearGradient = makeElement(defs, 'linearGradient', [1])\n                .attr('id', 'linear-gradient')\n                .attr('x1', '0%')\n                .attr('y2', '0%');\n\n    makeElement(linearGradient, 'stop', data, 'stop-gradient')\n                    .attr('offset', d => `${(d.value - domain[0]) * 100 / (domain[1] - domain[0]) || 1}%`)\n                    .attr('stop-color', d => d.color);\n    return linearGradient;\n};\n\n/**\n * Creates an axis cell with a linear axis for computing space and\n * creating gradient legend\n *\n * @return {AxisCell} Instance of Axis Cell for the gradient axis\n * @memberof Legend\n */\nexport const createAxis = (context) => {\n    const data = context.data();\n    const { align } = context.config();\n    const AxisCell = context._cells.AxisCell;\n    const newAxis = new ContinousAxis({\n        id: `legend-${context._id}`,\n        orientation: align === ALIGN.VERTICAL ? RIGHT : BOTTOM,\n        style: context._computedStyle,\n        nice: false,\n        showAxisName: false,\n        tickValues: data.map(d => d.value),\n        fixedBaseline: false,\n        labels: {\n            rotation: null\n        }\n    }, { labelManager: context._labelManager });\n\n    newAxis.domain(getGradientDomain(data));\n    newAxis.range([1, 1]);\n    return new AxisCell().source(newAxis).config({\n        margin: { left: 0, bottom: 0, top: 0, right: 0 }\n    });\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} classPrefix\n *\n * @memberof GradientLegend\n */\nconst createLegendSkeleton = (container, classPrefix, data) => {\n    const domain = getGradientDomain(data);\n    const legendContainer = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    const legendGradSvg = makeElement(legendContainer, 'svg', [1], `${classPrefix}-gradient`);\n    const legendGradCont = makeElement(legendGradSvg, 'g', [1], `${classPrefix}-gradient-group`);\n    const linearGradient = makeLinearGradient(legendGradSvg, data, domain);\n    const legendRect = makeElement(legendGradCont, 'rect', [1], `${classPrefix}-gradient-rect`);\n\n    return {\n        legendContainer,\n        legendGradCont,\n        legendGradSvg,\n        linearGradient,\n        legendRect\n    };\n};\n\n/**\n * Renders the axis for the gradient\n *\n * @param {Selection} container Point where axis is to be mounted\n * @param {number} height Height for axis\n * @param {number} width Width for axis\n * @memberof Legend\n */\nexport const renderAxis = (context, container, height, width) => {\n    const axis = context.axis();\n\n    axis.setAvailableSpace(width, height);\n    axis.render(container.node());\n    axis.source().render();\n};\n\n/**\n * Renders gradient legends\n *\n * @param {Selection} container Point where the legend is to be appended\n * @memberof GradientLegend\n */\nexport const renderGradient = (context, container) => {\n    let gradHeight = 0;\n    let gradWidth = 0;\n    const {\n        align,\n        classPrefix,\n        item\n    } = context.config();\n    const data = context.data();\n    // Create the skeleton for the legend\n    const {\n        legendContainer,\n        legendGradSvg,\n        legendGradCont,\n        linearGradient,\n        legendRect\n    } = createLegendSkeleton(container, classPrefix, data);\n    const labelDim = context.axis().source().getAxisDimensions().tickDimensions;\n    const {\n        padding,\n        margin,\n        border,\n        titleSpaces,\n        maxItemSpaces,\n        maxHeight,\n        maxWidth,\n        height,\n        width\n    } = context.measurement();\n    const gradientDimensions = {};\n\n    gradHeight = Math.floor(Math.min(height, maxHeight) - (titleSpaces.height + 2 * margin + 2 * border));\n    gradWidth = Math.floor(Math.min(width, maxWidth) - (margin * 2 + border * 2));\n\n    if (align === ALIGN.HORIZONTAL) {\n        gradientDimensions.height = item.icon.height;\n        gradientDimensions.width = gradWidth - 2 * padding - labelDim.width / 2;\n        linearGradient.attr('x2', '100%').attr('y1', '0%');\n        legendGradCont.attr('transform', `translate( ${labelDim.width / 2} 0)`);\n        renderAxis(context, legendContainer, gradHeight - item.icon.height - padding, gradWidth - 2 * padding - 1);\n\n        applyStyle(legendContainer, {\n            height: `${maxItemSpaces.height + border + padding}px`,\n            width: `${Math.min(width, maxWidth)}px`,\n            padding: `${padding}px`\n        });\n\n        legendRect.attr('height', gradientDimensions.height);\n        legendRect.attr('width', gradientDimensions.width - labelDim.width / 2);\n    } else {\n        gradientDimensions.height = gradHeight - 2 * padding - labelDim.height / 2;\n        gradientDimensions.width = item.icon.width;\n        linearGradient.attr('x2', '0%').attr('y1', '100%');\n        legendGradCont.attr('transform', `translate(0 ${labelDim.height / 2})`);\n        renderAxis(context, legendContainer, gradHeight - 2 * padding - 1, gradWidth - item.icon.width - padding * 2);\n\n        applyStyle(legendContainer, {\n            height: `${Math.min(height, maxHeight)}px`,\n            width: `${maxWidth}px`,\n            padding: `${padding}px`\n        });\n        legendRect.attr('height', gradientDimensions.height - labelDim.height / 2);\n        legendRect.attr('width', gradientDimensions.width);\n    }\n\n    // Apply Styles to the legend plot area\n    applyStyle(legendGradSvg, {\n        height: `${gradientDimensions.height}px`,\n        width: `${gradientDimensions.width}px`\n    });\n\n        // Apply styles to the legend rect\n    applyStyle(legendRect, {\n        fill: 'url(#linear-gradient)'\n    });\n    legendGradSvg.attr('height', gradientDimensions.height);\n    legendGradSvg.attr('width', gradientDimensions.width);\n\n    context.measurement({\n        gradientDimensions\n    });\n    context._legendGradientSvg = legendGradSvg;\n    return context;\n};\n","import SimpleLegend from './simple-legend';\nimport { getScaleInfo, getInterpolatedData, getInterpolatedArrayData } from './legend-helper';\nimport { GRADIENT, LEFT, SIZE } from '../enums/constants';\nimport { renderGradient, createAxis } from './gradient-helper';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class GradientLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new GradientLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof GradientLegend\n     */\n    static type () {\n        return GRADIENT;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axis\n     *\n     * @memberof GradientLegend\n     */\n    axis (...axis) {\n        if (axis.length) {\n            this._axis = axis[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof GradientLegend\n     */\n    dataFromScale () {\n        let domainForLegend = [];\n        const scale = this.scale();\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        // defining scaleParams\n        const scaleParams = {\n            smartLabel: this.labelManager(),\n            measures: this.measurement(),\n            alignment: this.config().position,\n            minTickDistance: this.minTickDistance()\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainForLegend[0] = domain[0];\n            }\n            domainForLegend = [...domainForLegend, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainForLegend.push(domain[1]);\n            }\n            // Sorting the domain Array\n            domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n            domainForLegend = getInterpolatedArrayData(domainForLegend, scaleParams);\n        } else {\n            domainForLegend = getInterpolatedData(domain, steps - 1, scaleParams);\n        }\n        domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n        return domainForLegend.map((ele, i) => {\n            const value = domainForLegend[i];\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor()\n                    : scale[scaleFn](Math.floor(ele)),\n                value: +value.toFixed(2),\n                id: i\n            };\n        }).filter(d => d.value !== null);\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        const axis = createAxis(this);\n        const axisSpace = axis.getLogicalSpace();\n        const space = { width: axisSpace.width - effPadding, height: axisSpace.height - effPadding };\n        const axisDomainLength = axis.source().domain().length;\n        const labelSpaces = new Array(axisDomainLength).fill(space);\n\n        this.axis(axis);\n        return labelSpaces;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof GradientLegend\n     */\n    getDrawingContext () {\n        return {\n            svgContainer: this._legendGradientSvg\n        };\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        renderGradient(this, legendContainer);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof SimpleLegend\n     */\n    getCriteriaFromData (data) {\n        return [[this.fieldName()], [data.value]];\n    }\n}\n","import SimpleLegend from './simple-legend';\nimport {\n    getScaleInfo,\n    getInterpolatedData,\n    getDomainBounds\n} from './legend-helper';\nimport {\n    createLegendSkeleton,\n    createItemSkeleton,\n    renderStepItem\n} from './renderer';\nimport { STEP, RECT, LEFT, SIZE, UPPER, LOWER } from '../enums/constants';\nimport { stepData } from './position-config';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class StepLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new StepLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof StepLegend\n     */\n    static type () {\n        return STEP;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof StepLegend\n     */\n    dataFromScale () {\n        let domainLeg = [];\n        const scale = this.scale();\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        const { formatter } = this.config();\n        const domainBounds = {\n            lower: null, upper: null\n        };\n\n        // defining scaleParams\n        const scaleParams = {\n            smartLabel: this.labelManager(),\n            measures: this.measurement(),\n            alignment: this.config().position,\n            minTickDistance: this.minTickDistance()\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainBounds.lower = [`${formatter.bounds.lower} ${steps[0]}`];\n            }\n            domainLeg = [...domainLeg, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainBounds.upper = [`${formatter.bounds.upper} ${steps[steps.length - 1]}`];\n            }\n        } else {\n            domainLeg = getInterpolatedData(domain, steps, scaleParams);\n        }\n\n        domainLeg = [...new Set(domainLeg)].sort((a, b) => a - b);\n        domainLeg = domainLeg.map((ele, i) => {\n            let value = null;\n            if (i < domainLeg.length - 1) {\n                value = `${(ele.toFixed(1))} - ${(+domainLeg[i + 1].toFixed(1))}`;\n            } else if (domainLeg.length === 1) {\n                value = ele.toFixed(1);\n            }\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n                value,\n                id: i + 1,\n                range: [ele, domainLeg[i + 1]]\n            };\n        }).filter(d => d.value !== null);\n\n        if (domainBounds.lower) {\n            const lowerBounds = getDomainBounds(LOWER, { scale, scaleFn, scaleType },\n                { domain, steps, domainBounds });\n            domainLeg = [lowerBounds, ...domainLeg];\n        }\n        if (domainBounds.upper) {\n            const upperBounds = getDomainBounds(UPPER, { scale, scaleFn, scaleType },\n            { domain, steps, domainBounds, domainLeg });\n            domainLeg = [...domainLeg, upperBounds];\n        }\n\n        return domainLeg;\n    }\n\n     /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding, align) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        return super.getLabelSpaces(effPadding, align);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return RECT;\n    }\n\n     /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const { classPrefix, position } = this.config();\n        const data = stepData(this.data())[position];\n\n        const legendContainer = super.render(this.mount());\n\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n\n        renderStepItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        return {\n            [fieldName]: data.range\n        };\n    }\n}\n","import { GradientLegend, DiscreteLegend, StepLegend } from '@chartshq/muze-legend';\n\n/**\n * Contants to be used as attr\n */\nexport const ROWS = 'rows';\nexport const COLUMNS = 'columns';\nexport const DATA = 'data';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\nexport const DETAIL = 'detail';\nexport const LAYERS = 'layers';\nexport const TRANSFORM = 'transform';\nexport const INITIALIZED = 'isInitialized';\nexport const SOURCE = 'source';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const PADDING = 'padding';\nexport const BORDER = 'border';\nexport const MARGIN = 'margin';\nexport const CONFIG = 'config';\nexport const MOUNT = 'mount';\nexport const CANVAS_UPDATED = 'canvasUpdated';\nexport const CLASSPREFIX = 'classPrefix';\nexport const POLICIES = '_policies';\nexport const LEGEND = 'legend';\nexport const TITLE = 'title';\nexport const SUB_TITLE = 'subtitle';\nexport const RESOLVE = 'resolve';\nexport const DISCRETE = 'discrete';\nexport const STEP_COLOR = 'step-color';\nexport const GRADIENT = 'gradient';\nexport const LINEAR = 'linear';\nexport const ORDINAL = 'ordinal';\nexport const MUZE_PREFIX = 'muze';\n\nexport const TITLE_TEMPLATE_NOT_ALLOWED_TAGS = [\n    'script',\n    'style'\n];\n\nexport const LEGEND_TYPE_MAP = {\n    [`${ORDINAL}-${true}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${COLOR}`]: StepLegend,\n    [`${LINEAR}-${false}-${COLOR}`]: GradientLegend\n};\n\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const GROUP = 'group';\nexport const LAYOUT = 'layout';\nexport const RETINAL = 'retinal';\nexport const DIMENSION = 'dimension';\nexport const MEASURE = 'measure';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\nexport const HORIZONTAL_CENTER = 'h-center';\nexport const VERTICAL_CENTER = 'v-center';\nexport const HIDDEN = 'hidden';\nexport const OVERFLOW = 'overflow';\nexport const OVERFLOW_X = 'overflow-x';\nexport const OVERFLOW_Y = 'overflow-y';\nexport const AUTO = 'auto';\nexport const VISIBLE = 'visible';\nexport const VERTICAL_SCROLL_BAR = 'verticalScrollBar';\nexport const HORIZONTAL_SCROLL_BAR = 'horizontalScrollBar';\nexport const GRID = 'grid';\nexport const MESSAGE = 'message';\nexport const NO_DATA_MESSAGE = 'No data to display';\n\n","import { ComposedVars, SimpleVariable } from '@chartshq/visual-group';\nimport { TITLE_TEMPLATE_NOT_ALLOWED_TAGS } from './constants';\n\n/**\n * This method creates a new composed variable instance from multiple variables. This is required when we have multiple\n * variables on a single axis and the union of domain of all the variables needs to be set on the axis.\n *\n * To create a new composed variable from multiple fields,\n * ```\n *  const sharedVar = share('open', 'high', 'low', 'close');\n *  canvas.rows([sharedVar])\n *      .columns(['date']);\n * ```\n *\n * @module Operators\n * @public\n * @function share\n * @param {Array} vars Variable names.\n *\n * @return {ComposedVars} Instance of composed variable\n */\nexport const share = (...vars) => new ComposedVars(...vars.map(variable => new SimpleVariable(variable)));\n\n/**\n *\n *\n * @param {*} node\n *\n */\nfunction treeShakeNode (node) {\n    if (node.nodeType !== Node.ELEMENT_NODE) { return; }\n\n    if (TITLE_TEMPLATE_NOT_ALLOWED_TAGS.indexOf(node.tagName.toLowerCase()) !== -1) {\n        node.parentNode.removeChild(node);\n    } else {\n        for (const childNode of node.childNodes) {\n            treeShakeNode(childNode);\n        }\n    }\n}\n\n/**\n * A string template tagged function which sanitizes input html formatted string according to the allowed html tags.\n * This is used to render html in canvas components like title and tooltip.\n *\n * To render html in canvas components,\n * ```\n *     canvas.title(html`<span style=font-size:20px;>TITLE</span>`);\n * ```\n *\n * @public\n * @module Operators\n * @function html\n * @param {Array.<string>} strings - The string parts of the template.\n * @param {Array} exps - The list of evaluated expression values.\n *\n * @return {Function} Returns a function which returns the sanitized html string.\n */\nexport function html (strings, ...exps) {\n    let htmlCode = '';\n    const expLn = exps.length;\n    let i = 0;\n\n    for (; i < expLn; ++i) {\n        htmlCode += strings[i] + exps[i];\n    }\n    htmlCode += strings[i];\n\n    const frag = document.createDocumentFragment();\n    const wrapper = document.createElement('div');\n\n    frag.appendChild(wrapper);\n    wrapper.innerHTML = htmlCode;\n\n    treeShakeNode(wrapper);\n    const { innerHTML } = wrapper;\n\n    return () => innerHTML;\n}\n","import { mergeRecursive, CommonProps } from 'muze-utils';\n\nconst defaultPolicy = (registrableComponents) => {\n    const aliases = registrableComponents.map(comp => comp.alias());\n    return {\n        behaviours: {\n            '*': (propagationPayload) => {\n                const propagationCanvas = propagationPayload.sourceCanvas;\n                return propagationCanvas ? aliases.indexOf(propagationCanvas) !== -1 : true;\n            }\n        }\n    };\n};\n\nconst listenerFn = (canvas, fn) => () => {\n    const valueMatrix = canvas.composition().visualGroup.matrixInstance().value;\n    valueMatrix.each(cell => fn(cell.valueOf().firebolt()));\n};\n\nconst canvasIterator = (canvases, iteratorFn, cFn) => {\n    canvases.forEach((canvas) => {\n        const matrix = canvas.composition().visualGroup.matrixInstance().value;\n        matrix.each(cell => iteratorFn(cell.valueOf().firebolt()));\n        cFn && cFn(canvas);\n        // Also register actions on canvas update\n        const throwback = canvas._throwback;\n\n        throwback.registerImmediateListener([CommonProps.MATRIX_CREATED],\n            listenerFn(canvas, iteratorFn));\n    });\n};\n\nconst registerActions = (context, type, fnName, deps) => {\n    const canvases = context._registrableComponents;\n\n    canvases.forEach((canvas) => {\n        const vGroup = canvas.composition().visualGroup;\n\n        vGroup.resolver().setFireboltDependencies(type, deps);\n        canvas.firebolt()[fnName](deps);\n    });\n};\n\n/**\n * This class is initiated only once in lifecycle and is reponsible for regisration of physical and behavioural\n * actions and side effects and the mapping between them.\n *\n * To get the instance of action model\n * ```\n *  const ActionModel = muze.ActionModel;\n * ```\n *\n * @public\n * @module ActionModel\n */\nclass ActionModel {\n    constructor () {\n        this._registrableComponents = [];\n    }\n\n    /**\n     * Takes an array of canvases on which the physical and behavioural actions will get registered.\n     *\n     * @public\n     * @param  {Canvas} components Array of canvases\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    for (...components) {\n        this._registrableComponents = components;\n        return this;\n    }\n\n    /**\n     * Registers physical actions on the canvases. It takes an object with key as the name of action and value having\n     * the definition of the action.\n     *\n     * To register a {@link PhysicalAction},\n     * ```\n     *  const ActionModel = muze.ActionModel;\n     *  ActionModel\n     *       // Physical actions will be registered on these canvases.\n     *      .for(canvas)\n     *      .registerPhysicalActions({\n     *          // Key is the name of physical action.\n     *          ctrlClick: (firebolt) => (targetEl, behaviours) => {\n     *              targetEl.on('click', function (data) {\n     *                  const event = utils.getEvent();\n     *                  const pos = utils.getClientPoint(event, this);\n     *                  // Get the data point nearest to the mouse position.\n     *                  const nearestPoint = firebolt.context.getNearestPoint(pos, {\n     *                      data\n     *                  });\n     *                  // Prepare the payload\n     *                  const payload = {\n     *                      criteria: nearestPoint.id\n     *                  };\n     *                  behaviours.forEach((behaviour) => firebolt.dispatchBehaviour(behaviour, payload));\n     *              });\n     *          }\n     *      });\n     * ```\n     * @public\n     *\n     * @param {Object} action Names of physical actions and their definitions.\n     *\n     * @return {ActionModel} Instance of the action model.\n     */\n    registerPhysicalActions (action) {\n        registerActions(this, 'physicalActions', 'registerPhysicalActions', action);\n        return this;\n    }\n\n    /**\n     * Registers behavioural actions on the canvases. It takes definitions of the behavioural actions and registers\n     * them on the canvases. Every behavioural action must inherit the {@link GenericBehaviour} class.\n     *\n     * To register a behavioural action\n     * ```\n     *  // Define a new behavioural action\n     *  class SingleSelectBehaviour extends GenericBehaviour {\n     *      static formalName () {\n     *          return 'singleSelect';\n     *      }\n     *\n     *      setSelectionSet (addSet, selectionSet) {\n     *          if (addSet === null) {\n     *              selectionSet.reset();\n     *          } else if (addSet.length) {\n     *              const existingAddSet = selectionSet.getExistingEntrySet(addSet);\n     *              if (existingAddSet.length){\n     *                  selectionSet.reset();\n     *              } else {\n     *               selectionSet.add(addSet);\n     *              }\n     *          } else {\n     *              selectionSet.reset();\n     *          }\n     *      }\n     * }\n     * muze.ActionModel.registerBehaviouralActions(SingleSelectBehaviour);\n     * ```\n     *\n     * @public\n     *\n     * @param {GenericBehaviour} actions Definition of behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerBehaviouralActions (...actions) {\n        registerActions(this, 'behaviouralActions', 'registerBehaviouralActions', actions);\n        return this;\n    }\n\n    /**\n     * Registers the mapping of physical and behavioural actions. This mapping is used to establish which behavioural\n     * actions should be dispatched on any triggering of physical actions.\n     *\n     * To map physical actions with behavioural actions,\n     * ```\n     *  muze.ActionModel.registerPhysicalBehaviouralMap({\n     *      ctrlClick: {\n     *          behaviours: ['select'] // This array must be the formal names of the behavioural actions.\n     *      }\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Contains the physical and behavioural action map.\n     * ```\n     *   {\n     *      // Name of the physical action\n     *      click: {\n     *          // Target element selector. This is an optional field. If not passed, then by default takes the\n     *          // container element of visual unit.\n     *          target: '.muze-layers-area path',\n     *          // Behaviours which should be dispatched on triggering of the mapped physical action.\n     *          behaviours: ['select']\n     *      }\n     *   }\n     * ```\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPhysicalBehaviouralMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalBehaviouralMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalBehaviouralMap(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers what behaviour to propagate on dispatch of a certain behavioural action. By default, when any\n     * behavioural action is dispatched, then the same behavioural action gets propagated to all the other canvases.\n     * This can be changed using this api.\n     *\n     * To register what behaviour should be propagated on dispatch of any behavioural action,\n     * ```\n     *  ActionModel.for(canvas1, canvas2).registerPropagationBehaviourMap({\n     *      select: 'filter',\n     *      brush: 'filter'\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Propagation behaviour map.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPropagationBehaviourMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPropagationBehaviourMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPropagationBehaviourMap(map);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of side effects and behavioural actions. It takes an object which contains key as the\n     * name of behavioural action and the side effects which will be linked to it.\n     *\n     * To map side effects to select behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: ['infoBox'] // This array must be the formal names of the side effects\n     *  });\n     * ```\n     *\n     * To map side effects to select behaviour, but disable all the default side effects attached with this behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: {\n     *          effects: ['infoBox'],\n     *          preventDefaultActions: true\n     *      }\n     *  });\n     * @public\n     * @param {Object} map Mapping of behavioural actions and side effects.\n     * ```\n     *     {\n     *          select: ['infoBox']\n     *     }\n     * ```\n     * @return {ActionModel} Instance of action model.\n     */\n    mapSideEffects (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.mapSideEffects(map);\n        }, (canvas) => {\n            canvas.firebolt().mapSideEffects(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers the side effects on the registered canvases. It takes definitions of side effects and registers them\n     * on the canvases. Every side effect must inherit the base class {@link GenericSideEffect} or\n     * {@link SpawnableSideEffect} or {@link SurrogateSideEffect} class.\n     *\n     * ```\n     * // Define a custom side effect\n     *  class InfoBox extends SpawnableSideEffect {\n     *      static formalName () {\n     *          return 'infoBox';\n     *      }\n     *\n     *      apply (selectionSet) {\n     *      }\n     *  }\n     *  muze.ActionModel.registerSideEffects(InfoBox);\n     * ```\n     * @public\n     * @param  {GenericSideEffect} sideEffects Definition of side effects.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerSideEffects (...sideEffects) {\n        registerActions(this, 'sideEffects', 'registerSideEffects', sideEffects);\n        return this;\n    }\n\n    /**\n     * Breaks the link between behavioural actions and physical actions. It takes an array of behavioural action\n     * and it's physical action.\n     *\n     * To dissociate behavioural actions from physical actions\n     * ```\n     *  muze.ActionModel.dissociateBehaviour(['select', 'click'], ['highlight', 'hover']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of behavioural action and physical action.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateBehaviour (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateBehaviour(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateBehaviour(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between side effects and behavioural actions. It takes an array of formal names of the side\n     * effects and it's linked behavioural action.\n     *\n     * To dissociate side effects from behavioural actions\n     * ```\n     *  muze.ActionModel.dissociateSideEffect(['crossline', 'highlight'], ['selectionBox', 'brush']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of side effects and behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateSideEffect (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateSideEffect(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateSideEffect(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * By default cross interactivity is disabled between canvases. This enables cross interaction between the canvases\n     * so that any action happening in one canvas gets dispatched on other canvases as well. An optional policy can also\n     * be passed in this method. The policy can be used to control on which canvases the behavioural actions and\n     * side effects gets dispatched.\n     *\n     * To just enable cross interactivity between two canvases,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity();\n     * ```\n     *\n     * To enable cross interactivity but enable any behavioural action only when it is triggered from canvas1.\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          behaviours: {\n     *              // Here * stands for any behavioural action name. We can also give any name of behavioural action\n     *              // in place of this.\n     *              '*': (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     *\n     * To enable cross interactivity but enable tooltip effect if the action is propagated from canvas1,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          sideEffects: {\n     *              tooltip: (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} policy Policy definition.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    enableCrossInteractivity (policy = {}) {\n        const registrableComponents = this._registrableComponents;\n        const mergedPolicy = mergeRecursive(mergeRecursive({}, defaultPolicy(registrableComponents)), policy);\n\n        registrableComponents.forEach((canvas) => {\n            canvas.firebolt().crossInteractionPolicy(mergedPolicy);\n        });\n\n        return this;\n    }\n}\n\nexport const actionModel = (() => new ActionModel())();\n","import { MUZE_PREFIX } from '../constants';\n\nexport const TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 4,\n    className: `${MUZE_PREFIX}-title-container`\n};\n\nexport const SUB_TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 16,\n    maxLines: 2,\n    className: `${MUZE_PREFIX}-subtitle-container`\n};\n\nexport const MESSAGE_CONFIG = {\n    className: `${MUZE_PREFIX}-message-container`\n};\n\nexport const CANVAS = 'canvas';\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    ROWS,\n    COLUMNS,\n    COLOR,\n    SHAPE,\n    SIZE,\n    DETAIL,\n    LAYERS,\n    TRANSFORM,\n    TITLE,\n    SUB_TITLE\n} from '../constants';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG } from './defaults';\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Canvas.\n * Canvas merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module LocalOptions\n */\n\nexport const localOptions = {\n    [ROWS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLUMNS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLOR]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SHAPE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SIZE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [DETAIL]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n\n    [LAYERS]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [TRANSFORM]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object'\n        }\n    }\n};\n\nexport const canvasOptions = {\n    [TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(title) => {\n                if (typeof title === 'string' || !title) {\n                    const t = () => title;\n                    return t;\n                }\n                return title;\n            }, (titleConfig) => {\n                const defConfig = mergeRecursive({}, TITLE_CONFIG);\n                return mergeRecursive(defConfig, titleConfig);\n            }]\n        }\n    },\n    [SUB_TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(subtitle) => {\n                if (typeof subtitle === 'string' || !subtitle) {\n                    const sub = () => subtitle;\n                    return sub;\n                }\n                return subtitle;\n            }, (subtitleConfig) => {\n                const defConfig = mergeRecursive({}, SUB_TITLE_CONFIG);\n                return mergeRecursive(defConfig, subtitleConfig);\n            }]\n        }\n    }\n};\n","export default class LayoutComponent {\n    constructor (name, dimensions, seed) {\n        this._seed = seed;\n        this._boundBox = {\n            height: dimensions.height,\n            width: dimensions.width,\n            top: null,\n            left: null\n        };\n        this._renderAt = null;\n        this._alignWith = null;\n        this._alignment = null;\n        this._target = null;\n        this._position = null;\n        this._componentName = name;\n        this._className = null;\n    }\n\n    getLogicalSpace () {\n        throw new Error('getLogicalSpace is not defined');\n    }\n\n    setSpatialConfig () {\n        throw new Error('setSpatialSpace is not defined');\n    }\n\n    name (param) {\n        if (param) {\n            this._componentName = param;\n        }\n        return this._componentName;\n    }\n\n    target (param) {\n        if (param) {\n            this._target = param;\n        }\n        return this._target;\n    }\n\n    position (param) {\n        if (param) {\n            this._position = param;\n        }\n        return this._position;\n    }\n\n    alignment (param) {\n        if (param) {\n            this._alignment = param;\n        }\n        return this._alignment;\n    }\n\n    alignWith (param) {\n        if (param) {\n            this._alignWith = param;\n        }\n        return this._alignWith;\n    }\n\n    renderAt (param) {\n        if (param) {\n            this._renderAt = param;\n        }\n        return this._renderAt;\n    }\n\n    boundBox (param) {\n        if (param) {\n            Object.assign(this._boundBox, param);\n        }\n        return this._boundBox;\n    }\n\n    className (param) {\n        if (param) {\n            this._className = param;\n        }\n        return this._className;\n    }\n\n    draw () {\n        throw new Error('draw is not defined');\n    }\n\n    attachListener () {\n        return this;\n    }\n  }\n\n","import LayoutComponent from './layoutComponent';\n\nclass DummyComponent extends LayoutComponent {\n    getLogicalSpace () {\n        return {\n            width: this.boundBox().width,\n            height: this.boundBox().height\n        };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n        return this;\n    }\n\n    draw () {\n        if (!this.component) {\n            throw new Error(`Component not set for ${this.componentName}`);\n        }\n        this.component.mount(document.getElementById(this.renderAt)); // Change the draw method to component draw\n        return this;\n    }\n}\n\nexport default DummyComponent;\n","export const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    interaction: {\n        sideEffect: 'individual'\n    },\n    pagination: 'scroll',\n    scrollBar: {\n        thickness: 10,\n        speed: 2,\n        vertical: {\n            align: 'right'\n        },\n        horizontal: {\n            align: 'bottom'\n        }\n    },\n    legend: {\n        position: 'right',\n        color: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        shape: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        size: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        }\n    },\n    showHeaders: false,\n    minWidth: 100,\n    minHeight: 100,\n    facet: {\n        rows: {\n            minCharacters: 3\n        },\n        columns: {\n            maxLines: 2,\n            verticalAlign: 'middle',\n            minCharacters: 1\n        }\n    },\n    border: {\n        style: 'solid',\n        color: '#d6d6d6',\n        width: 2,\n        collapse: true,\n        spacing: 0\n    },\n    autoGroupBy: {\n        disabled: false\n    },\n    invalidValues: {},\n    sort: {}\n};\n","import { DEFAULT_CONFIG } from '../../../../muze/src/defaults';\n\nconst DEFAULT_WIDTH = 600;\nconst DEFAULT_HEIGHT = 400;\nconst DEFAULT_CLASS_NAME = `${DEFAULT_CONFIG.classPrefix}-layout-container-component`;\nconst NODE_PREFIX = `${DEFAULT_CONFIG.classPrefix}-layout-container`;\n\nexport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT,\n  DEFAULT_CLASS_NAME,\n  NODE_PREFIX\n};\n","export default class DefinitionModel {\n    constructor (config) {\n        this._host = config.host || null;\n        this._cut = config.cut || null;\n        this._ratioWeight = config.ratioWeight === 0 ? 0 : config.ratioWeight || 1;\n        this._preferred = config.preferred || false;\n        this._lanes = config.lanes || [];\n        this._remainingHeight = 0;\n        this._remainingWidth = 0;\n    }\n\n    host (host) {\n        if (host) {\n            this._host = host;\n        }\n        return this._host;\n    }\n\n    preferred (preferred) {\n        if (preferred) {\n            this._preferred = preferred;\n        }\n        return this._preferred;\n    }\n\n    cut (cut) {\n        if (cut) {\n            this._cut = cut;\n        }\n        return this._cut;\n    }\n\n    ratioWeight (ratioWeight) {\n        if (ratioWeight) {\n            this._ratioWeight = ratioWeight;\n        }\n        return this._ratioWeight;\n    }\n\n    lanes (lanes) {\n        if (lanes) {\n            this._lanes = lanes;\n        }\n        return this._lanes;\n    }\n\n    remainingHeight (remainingHeight) {\n        if (remainingHeight) {\n            this._remainingHeight = remainingHeight;\n        }\n        return this._remainingHeight;\n    }\n\n    remainingWidth (remainingWidth) {\n        if (remainingWidth) {\n            this._remainingWidth = remainingWidth;\n        }\n        return this._remainingWidth;\n    }\n}\n","import { NODE_PREFIX } from '../../constants/defaults';\nimport DefinitionModel from '../definition-manager/definitionModel';\nimport DummyComponent from '../../layout-component/dummy-component';\n/**\n * Compares two strings in lowercase\n *\n * @export\n * @param {string} value the value to be compared\n * @param {string} compareTo whom the value would be compared\n * @return {boolean} true if values are equal\n */\nexport function isEqual (value, compareTo) {\n    if (typeof value !== 'string' || typeof compareTo !== 'string') {\n        throw new TypeError('value and compareTo must be string');\n    }\n    return value.toLowerCase() === compareTo.toLowerCase();\n}\n\nexport const getNodeId = (() => {\n    let _uid = 0;\n    return () => `${NODE_PREFIX}-${++_uid}`;\n})();\n\nexport function yExtraSpace (node) {\n    let smallestHeight = 0;\n    if (node.getCutType() === 'v') {\n        smallestHeight = smallestExtraHeightHorizontally(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'h') {\n        node.children().forEach((child) => {\n            smallestHeight += yExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerHeight = node.boundBox().height;\n        const hostHeight = node.model().host().getLogicalSpace().height;\n\n        smallestHeight = containerHeight - hostHeight;\n        if (smallestHeight < 0) {\n            smallestHeight = 0;\n        }\n    } else {\n        smallestHeight = 0;\n    }\n    return smallestHeight;\n}\n\nexport function smallestExtraHeightHorizontally (node) {\n    let smallestHeight = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const h = yExtraSpace(child);\n        if (h < smallestHeight) {\n            smallestHeight = h;\n        }\n    });\n    return smallestHeight;\n}\n\nexport function xExtraSpace (node) {\n    let smallestWidth = 0;\n    if (node.getCutType() === 'h') {\n        smallestWidth = smallestExtraWidthVertically(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'v') {\n        node.children().forEach((child) => {\n            smallestWidth += xExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerWidth = node.boundBox().width;\n        const hostWidth = node.model().host().getLogicalSpace().width;\n        smallestWidth = containerWidth - hostWidth;\n        if (smallestWidth < 0) {\n            smallestWidth = 0;\n        }\n    } else {\n        smallestWidth = 0;\n    }\n    return smallestWidth;\n}\n\nexport function smallestExtraWidthVertically (node) {\n    let smallestWidth = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const w = xExtraSpace(child);\n        if (w < smallestWidth) {\n            smallestWidth = w;\n        }\n    });\n    return smallestWidth;\n}\n\nexport function determineBoundBox (bb, i, arr, instance) {\n    if (i) {\n    // if not first sibling, take boundbox from previous sibling\n        const lastSibling = arr[i - 1];\n        const { top: _top, left: _left, height: _height, width: _width } = lastSibling.boundBox();\n        return {\n            width: bb.width,\n            height: bb.height,\n\n            top: instance.parentCut() === 'h'\n        ? _top + _height : _top,\n\n            left: instance.parentCut() === 'h'\n        ? _left : _left + _width\n        };\n    }\n  // if first sibling, take boundbox from parent\n    const { top: _top, left: _left } = instance.parent().boundBox();\n    return {\n        width: bb.width,\n        height: bb.height,\n        top: _top,\n        left: _left\n    };\n}\n\n// prepares the targetComponent Map for target Mapping ie. where a component should lie\nexport function prepareTargetComponentMap (context) {\n    context.targetComponentMap(new Map());\n    context.componentMap().forEach((value) => {\n        if (context.targetComponentMap().has(value.target())) {\n            context.targetComponentMap().get(value.target()).push(value);\n        } else {\n            const temp = [];\n            temp.push(value);\n            context.targetComponentMap().set(value.target(), temp);\n        }\n    });\n}\n\nexport function getComponent (canvasComponent, componentName) {\n    const comp = canvasComponent.find(component => component.name() === componentName);\n    return (comp && comp !== -1) ? comp : null;\n}\nexport function createPlaceHolderComponent (height, width, position) {\n    const comp = new DummyComponent(0, { height, width });\n    comp.name('placeHolder');\n    comp.position(position);\n    return comp;\n}\n\nexport function placeComponent (definitionModel, component, isPreferred = false, isGridComponent = false) {\n    let cut = '';\n    let componentRatioWidth = 1;\n    let leftOvercomponentRationWidth = 1;\n    let leftHeight = 0;\n    let leftWidth = 0;\n\n    if (!component) {\n        return { first: definitionModel, second: definitionModel };\n    }\n\n    const { height: componentHeight, width: componentWidth } = component.getLogicalSpace();\n    const position = component.position();\n    if (position === 'top' || position === 'bottom') {\n        cut = 'h';\n        componentRatioWidth = componentHeight / definitionModel.remainingHeight();\n        leftHeight = definitionModel.remainingHeight() - componentHeight;\n        leftWidth = definitionModel.remainingWidth();\n    } else {\n        cut = 'v';\n        componentRatioWidth = componentWidth / definitionModel.remainingWidth();\n        leftWidth = definitionModel.remainingWidth() - componentWidth;\n        leftHeight = definitionModel.remainingHeight();\n    }\n    leftOvercomponentRationWidth = 1 - componentRatioWidth;\n\n// update parentModel\n    definitionModel.cut(cut);\n    const firstLaneConfig = {\n        host: component.name(),\n        cut: null,\n        ratioWeight: componentRatioWidth,\n        preferred: isGridComponent ? false : isPreferred,\n        lanes: []\n    };\n    const firstLane = new DefinitionModel(firstLaneConfig);\n    firstLane.remainingHeight(componentHeight);\n    firstLane.remainingWidth(componentWidth);\n\n    const secondLaneConfig = {\n        host: null,\n        cut: null,\n        ratioWeight: leftOvercomponentRationWidth,\n        preferred: isGridComponent ? false : !isPreferred,\n        lanes: []\n    };\n    const secondLane = new DefinitionModel(secondLaneConfig);\n    secondLane.remainingHeight(leftHeight);\n    secondLane.remainingWidth(leftWidth);\n    if (isPreferred) {\n        definitionModel.lanes([firstLane]);\n    } else if (position === 'top' || position === 'left') {\n        definitionModel.lanes([firstLane, secondLane]);\n    } else {\n        definitionModel.lanes([secondLane, firstLane]);\n    }\n    return { first: firstLane, second: secondLane };\n}\n\nexport function placeGridComponent (definitionModel, gridComponents) {\n    let tempDefModel = definitionModel;\n    const rows = gridComponents.length;\n    const column = rows ? gridComponents[0].length : 0;\n    const height = gridComponents.reduce((acc, val) => (acc + val[0].getLogicalSpace().height), 0);\n\n    for (let i = 0; i < column; i++) {\n        const iscolumnPreffered = i === column - 1;\n        const columnPlaceHolderComponent = createPlaceHolderComponent(height,\n                                                    gridComponents[0][i].getLogicalSpace().width, 'left');\n        const { first, second } = placeComponent(tempDefModel, columnPlaceHolderComponent, iscolumnPreffered);\n        tempDefModel = first;\n        for (let j = 0; j < rows; j++) {\n            const rowpreffred = j === (rows - 1);\n            tempDefModel = placeComponent(tempDefModel, gridComponents[j][i], rowpreffred, true).second;\n        }\n        tempDefModel = second;\n    }\n    return tempDefModel;\n}\n\nexport function negotiateDimension (node) {\n    let preferred;\n    let cumultiveExtraSpaceAmt = 0;\n    let alteredDim;\n    let nonAlteredDim;\n\n    const childrenLength = node.children().length;\n\n    for (let index = 0; index < childrenLength; index++) {\n        let fn;\n        let extraSpaceAmt;\n        const child = node.children()[index];\n\n        if (child.parentCut() === 'h') {\n            fn = yExtraSpace;\n            alteredDim = 'height';\n            nonAlteredDim = 'width';\n        } else {\n            fn = xExtraSpace;\n            alteredDim = 'width';\n            nonAlteredDim = 'height';\n        }\n  // if vertical then get extra height from other node and push it to the preferred node.\n  // for horizontal cut the same thing is to be done with width\n        if (child.isPreferred()) {\n    // push extra space in sink. Execute it when all non preferred space are computed.\n            preferred = child;\n\n            continue; // eslint-disable-line no-continue\n        }\n  // reduce own height and save it in a var\n        cumultiveExtraSpaceAmt += (extraSpaceAmt = fn(child));\n        child.boundBox()[alteredDim] -= extraSpaceAmt;\n  // update nonaltered dim from parent for any change which happened during negotiation\n        child.boundBox()[nonAlteredDim] = child.parent().boundBox()[nonAlteredDim];\n\n        negotiateDimension(child);\n    }\n\n    if (preferred) {\n        preferred.boundBox()[alteredDim] += cumultiveExtraSpaceAmt;\n        preferred.boundBox()[nonAlteredDim] = preferred.parent().boundBox()[nonAlteredDim];\n        negotiateDimension(preferred);\n    }\n}\n\nexport function computePosition (node) {\n    node.children().forEach((child, i, children) => {\n        const boundBox = determineBoundBox(child.boundBox(), i, children, child);\n        child.boundBox(boundBox);\n        computePosition(child);\n    });\n}\n\nexport function allocateBoundingBox (node) {\n    const totalWeight = node.children()\n                            .map(child => child.model().ratioWeight())\n                            .reduce((carry, val) => carry + val, 0);\n\n    node.children().forEach((child, i, children) => {\n        const lastSibling = children[i - 1];\n        const ratio = child.model().ratioWeight() / totalWeight;\n\n        if (child.parentCut() === 'h') {\n            child.boundBox({\n                top: i ? lastSibling.boundBox().top + lastSibling.boundBox().height : 0,\n                left: child.parent().boundBox().left,\n                height: child.parent().boundBox().height * ratio,\n                width: child.parent().boundBox().width\n            });\n        } else {\n            child.boundBox({\n                top: child.parent().boundBox().top,\n                left: i ? lastSibling.boundBox().left + lastSibling.boundBox().width : 0,\n                height: child.parent().boundBox().height,\n                width: child.parent().boundBox().width * ratio\n            });\n        }\n        allocateBoundingBox(child);\n    });\n}\n\n","import { getNodeId } from '../helper';\nimport { LayoutComponent } from '../../layout-component';\n\nclass Node {\n    constructor (data) {\n        this._model = data;\n        this._parent = null;\n        this._children = [];\n        this._parentCut = null;\n        this._boundBox = {\n            top: null,\n            left: null,\n            height: null,\n            width: null\n        };\n\n        this._id = this._model.host() instanceof LayoutComponent && this._model.host().renderAt() ?\n                    this._model.host().renderAt() :\n                    getNodeId();\n    }\n\n    addChildren (entries) {\n        this._children.push(...entries);\n        entries.forEach((e) => { e.parent(this); });\n    }\n\n    isRoot () {\n        return this._parent === null;\n    }\n\n    isLeaf () {\n        return !this._children.length;\n    }\n\n    getCutType () {\n        return this._model.cut();\n    }\n\n    isPreferred () {\n        return !!this._model.preferred();\n    }\n\n    children (children) {\n        if (children) {\n            this._children = children;\n        }\n        return this._children;\n    }\n\n    parent (parent) {\n        if (parent) {\n            this._parent = parent;\n        }\n        return this._parent;\n    }\n\n    parentCut (parentCut) {\n        if (parentCut) {\n            this._parentCut = parentCut;\n        }\n        return this._parentCut;\n    }\n\n    id (id) {\n        if (id) {\n            this._id = id;\n        }\n        return this._id;\n    }\n\n    model (model) {\n        if (model) {\n            this._model = model;\n        }\n        return this._model;\n    }\n\n    boundBox (bound) {\n        if (bound) {\n            this._boundBox = {\n                top: bound.top,\n                left: bound.left,\n                height: bound.height,\n                width: bound.width\n            };\n        }\n        return this._boundBox;\n    }\n  /**\n     * function to search a node and update it with the config provided.\n     * @param  {Object} nodeconfig\n     */\n    updateNode (nodeconfig) {\n        if (this._id === nodeconfig._id) {\n            this._model.cut(nodeconfig.cut);\n            this._model.ratioWeight(nodeconfig.ratioWeight);\n        } else {\n            this._children.forEach((node) => {\n                if (node._id === nodeconfig._id) {\n                    node.model.cut(nodeconfig.cut);\n                    node.model.ratioWeight(nodeconfig.ratioWeight);\n                    return;\n                }\n                this.searchNode(node, nodeconfig);\n            });\n        }\n    }\n\n  // Recursive function to search a node\n    searchNode (node, nodeconfig) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeconfig._id) {\n                childNode.model().cut(nodeconfig.cut);\n                childNode.model().ratioWeight(nodeconfig.ratioWeight);\n            } else {\n                this.searchNode(childNode, nodeconfig);\n            }\n        });\n    }\n\n  /**\n     * function to delete a node from tree Structure.\n     * @param  {String} nodeId - node Id of the Node\n     */\n    delete (nodeId) {\n        this._children.forEach((node) => {\n            if (node.id() === nodeId) {\n                const index = this._children.indexOf(node);\n                this._model.lanes().splice(index, 1);\n            }\n            this.deleteSearchNode(node, nodeId);\n        });\n    }\n\n  // Recursive function to search a node\n    deleteSearchNode (node, nodeId) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeId) {\n                const index = node.children().indexOf(childNode);\n                node.model().lanes().splice(index, 1);\n            } else {\n                this.deleteSearchNode(childNode, nodeId);\n            }\n        });\n    }\n}\n\nexport default Node;\n","import Node from '../tree';\nimport {\n    allocateBoundingBox,\n    negotiateDimension,\n    computePosition\n} from '../helper';\n\nexport default class LayoutModel {\n    constructor (measurements, config) {\n        this._measurements = measurements;\n        this._config = config;\n        this._root = this.createTree(this._config, null);\n        this.setBoundBox();\n    }\n\n    createTree (config, parent) {\n        const node = new Node(config);\n        if (parent) {\n            node.parentCut(parent.getCutType());\n            parent.addChildren([node]);\n        } else {\n            this._root = node;\n        }\n        for (const lane of config.lanes()) {\n            this.createTree(lane, node);\n        }\n\n        return this._root;\n    }\n\n    setBoundBox () {\n        this._root.boundBox({\n            top: 0,\n            left: 0,\n            width: this._measurements.width,\n            height: this._measurements.height\n        });\n        allocateBoundingBox(this._root);\n    }\n\n    setHostPosition (node) {\n        node.children().forEach((child) => {\n            LayoutModel.setHostSpatialConfig(child);\n            this.setHostPosition(child);\n        });\n    }\n\n    static setHostSpatialConfig (node) {\n        const bb = node.boundBox();\n        const host = node.model().host();\n        if (host && host.setSpatialConfig) {\n            const conf = {\n                x: bb.left,\n                y: bb.top,\n                width: bb.width,\n                height: bb.height,\n                renderAt: node.id()\n            };\n            host.setSpatialConfig(conf);\n        }\n    }\n\n    negotiate () {\n        negotiateDimension(this._root);\n        computePosition(this._root);\n        return this;\n    }\n\n    broadcast () {\n        this.setHostPosition(this._root);\n        return this;\n    }\n\n    tree () {\n        return this._root;\n    }\n}\n","/**\n * This file exports constants that will be used to\n * create the state store of the table layout.\n */\n/**\n * The index of top, bottom and center in the matrix\n */\nexport const VIEW_INDEX = {\n    top: 0,\n    center: 1,\n    bottom: 2\n};\n\nexport const ROW_MATRIX_INDEX = {\n    0: 'top',\n    1: 'center',\n    2: 'bottom'\n};\n\nexport const COLUMN_MATRIX_INDEX = {\n    0: 'left',\n    1: 'middle',\n    2: 'right'\n};\n\n/**\n * The width of the grid suppied by the user.\n */\nexport const GRID_WIDTH = 'width';\n\n/**\n * The height of the grid supplied by the user.\n */\nexport const GRID_HEIGHT = 'height';\n\n/**\n  * The border for the grid\n  */\nexport const BORDER = 'border';\n\n /**\n  *  The index of the first visible row in view matrix.\n  */\nexport const ROW_POINTER = 'rowPointer';\n\n/**\n * The index of the first visible column in the view matrix.\n */\nexport const COLUMN_POINTER = 'columnPointer';\n\n/**\n * Flag to specify whether row sizes should be equal.\n */\nexport const ROW_SIZE_IS_EQUAL = 'isRowSizeEqual';\n\n/**\n * Flag to specify whether column sizes are equal.\n */\nexport const COLUMN_SIZE_IS_EQUAL = 'isColumnSizeEqual';\n\n/**\n * Field to store an array an of the widths of visible columns.\n * @computed\n */\nexport const COLUMN_WIDTHS = 'visibleColumnWidths';\n\n/**\n * Field to store an array of heights of visible rows.\n * @computed\n */\nexport const ROW_HEIGHTS = 'visibleRowHeights';\n\n/**\n * Field to store the width of the left matrix.\n * @computed\n */\nexport const LEFT_MATRIX_WIDTH = 'leftMatrixWidth';\n\n/**\n * Field to store the width of the right matrix.\n * @computed\n */\nexport const RIGHT_MATRIX_WIDTH = 'rightMatrixWidth';\n\n/**\n * Field to store the height of the top matrix.\n * @computed\n */\nexport const TOP_MATRIX_HEIGHT = 'topMatrixHeight';\n\n/**\n * Field to store the height of the bottom matrix.\n * @computed\n */\nexport const BOTTOM_MATRIX_HEIGHT = 'bottomMatrixHeight';\n\n/**\n * The dom element to render the layout inside.\n */\nexport const MOUNT_POINT = 'mount';\n\n/**\n * The id attribute of the left table element.\n */\nexport const LEFT_TABLE_ID = 'grid-left';\n\n/**\n * The id attribute of the right table element.\n */\nexport const RIGHT_TABLE_ID = 'grid-right';\n\n/**\n * The id attribute of the top table.\n */\nexport const TOP_TABLE_ID = 'grid-top';\n\n/**\n * The id attribute of the bottom table.\n */\nexport const BOTTOM_TABLE_ID = 'grid-bottom';\n\n/**\n * The id attribute of the center table.\n */\nexport const CENTER_TABLE_ID = 'grid-center';\n\n/**\n * The id attribute of the top div.\n */\nexport const TOP_DIV_ID = 'muze-div-top';\n\n/**\n * The id attribute of the bottom div.\n */\nexport const BOTTOM_DIV_ID = 'muze-div-bottom';\n\n/**\n * The id attribute of the center div.\n */\nexport const CENTER_DIV_ID = 'muze-div-center';\n\n/**\n * Field that indicates if the row configuration has changed\n */\nexport const HAVE_ROWS_CHANGED = 'haveRowsChanged';\n\n/**\n * Field that indicates if the column configuration has changed\n */\nexport const HAVE_COLUMNS_CHANGED = 'haveColumnsChanged';\n\n/**\n * Field that indicates if the values configuration for the center matrix has changed\n */\nexport const HAVE_VALUES_CHANGED = 'haveValuesChanged';\n\n/**\n * Field that indicates the width of row matrix\n */\nexport const ROW_MATRIX_WIDTH = 'rowMatrixWidth';\n\n/**\n * Field that indicates the height of row matrix\n */\nexport const COLUMN_MATRIX_HEIGHT = 'columnMatrixHeight';\n\n/**\n * Field that indicates the unit width of layout\n */\nexport const UNIT_WIDTH = 'unitWidth';\n\n/**\n * Field that indicates the unit height of layout\n */\nexport const UNIT_HEIGHT = 'unitHeight';\n\n/**\n * Field that indicates the style object\n */\nexport const STYLE = 'style';\n\n/**\n * Field that indicates the color configuration\n */\nexport const COLOR = 'color';\n\n/**\n * Field that indicates width\n */\nexport const WIDTH = 'width';\n\n/**\n * Field that indicates collpase property for border\n */\nexport const COLLAPSE = 'collapse';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SPACING = 'spacing';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const DISTRIBUTION = 'distribution';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const GUTTERSPACE = 'gutterSpace';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const BREAK_PAGE = 'breakPage';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_ROW_BORDERS = 'showRowBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_COL_BORDERS = 'showColBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_VALUE_BORDERS = 'showValueBorders';\n\nexport const HEIGHT = 'height';\nexport const COLUMN = 'column';\nexport const ROW = 'row';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const CENTER = 'center';\nexport const CLICK = 'click';\nexport const ROW_LEFT = 'rowLeft';\nexport const ROW_RIGHT = 'rowRight';\nexport const COLUMN_BOTTOM = 'colBottom';\nexport const COLUMN_TOP = 'colTop';\nexport const AUTO = 'auto';\nexport const ROW_SPAN = 'rowSpan';\nexport const COL_SPAN = 'colSpan';\nexport const ROW_ROOT = 'rowRoot';\nexport const COLUMN_ROOT = 'columnRoot';\nexport const PRIMARY = 'primary';\nexport const SECONDARY = 'secondary';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\nexport const GRID = 'grid';\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n\nexport const PAGINATION = 'pagination';\nexport const BUFFER = 'buffer';\nexport const HOLISTIC = 'holistic';\nexport const SCROLL = 'scroll';\nexport const MIDDLE = 'middle';\nexport const NO_BORDERS = null;\n\nexport const MAX_WIDTH_AVAIL_FOR_COL_MATRIX = 'maxWidthAvailableForColumnMatrix';\nexport const COLUMN_MATRIX = 'columnMatrix';\nexport const MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX = 'maxHeightAvailableForRowMatrix';\nexport const ROW_MATRIX = 'rowMatrix';\n","/* eslint no-undef: \"off\" */\n/* eslint default-case: \"off\" */\nexport class Utils {\n    static isDOMElement (element) {\n        return element instanceof Element;\n    }\n\n    static getID (element) {\n        return element.id;\n    }\n\n    static getElement (id) {\n        return document.getElementById(id);\n    }\n\n    static findContainer (data) {\n        return data.filter(coordinate => coordinate.parent == null)[0];\n    }\n  /**\n   * static method to remove the div\n   * @param  {} divId - div ID to be removed.\n   */\n    static removeDiv (divId) {\n        if (document.getElementById(divId) !== null) { document.getElementById(divId).remove(); }\n    }\n}\n","import { DEFAULT_CLASS_NAME } from '../constants/defaults';\nimport { LayoutComponent } from '../layout-component';\n\nexport default class DataPoint {\n    constructor (node) {\n        this._node = node;\n        this._className = node.model().host() instanceof LayoutComponent ?\n                            node.model().host().className() : DEFAULT_CLASS_NAME;\n    }\n\n    node () {\n        return this._node;\n    }\n\n    hasHost () {\n        return this._node.model().host() instanceof LayoutComponent;\n    }\n\n    className () {\n        return this._className || DEFAULT_CLASS_NAME;\n    }\n}\n","import { getnodePoints } from './helper';\n\nexport class DataParser {\n    constructor (data) {\n        this._data = data;\n    }\n\n    defaultDataPointLogic () {\n        const nodepoints = [];\n        getnodePoints(this._data, nodepoints);\n        return nodepoints;\n    }\n\n}\n","import DataPoint from './data-point';\n\nexport const getnodePoints = (node, nodepoints) => {\n    const datapoint = new DataPoint(node);\n    nodepoints.push(datapoint);\n    node.children().forEach((child) => {\n        getnodePoints(child, nodepoints);\n    });\n};\n","import { DataParser } from './data-parser';\n\nexport class HTMLDataAdapter extends DataParser {\n    getCoordinates () {\n        return super.defaultDataPointLogic();\n    }\n}\n","export class Renderer {\n\n    initRenderer (node, tree) {\n        node.__logicalTree = tree;\n    }\n}\n","import { HTMLDataAdapter } from '../data-adapters/html-data';\nimport { Utils } from '../utils';\nimport { Renderer } from './renderer';\n\nexport class HTMLRenderer extends Renderer {\n    constructor (data) {\n        super();\n        this._data = data;\n        this._coordinates = new HTMLDataAdapter(this._data).getCoordinates();\n    }\n\n    createhtml (mount, className) {\n        const mainDiv = mount;\n        super.initRenderer(mainDiv, this._data); // Initialise node with layout id\n        this.parentDiv = this.createAndCustomiseParent(className);\n        this._coordinates.forEach((node) => {\n            if (node.hasHost()) {\n                const host = node.node();\n                this.parentDiv.appendChild(this.createAndPositionDiv({ ...host.boundBox(),\n                    id: host.id(),\n                    className: node.className() }));\n            }\n        });\n        mainDiv.appendChild(this.parentDiv);\n    }\n\n    createAndPositionDiv (config) {\n        const { top, left, height, width, className, id } = config;\n        const existingDiv = document.getElementById(id);\n        const div = existingDiv || document.createElement('div');\n        div.style.position = 'absolute';\n        div.style.left = `${left}px`;\n        div.style.top = `${top}px`;\n        div.style.height = `${height}px`;\n        div.style.width = `${width}px`;\n        div.id = id;\n        div.className = className;\n        return div;\n    }\n\n    createAndCustomiseParent (className) {\n        const container = Utils.findContainer(this._coordinates);\n        const host = container.node();\n        const parentDiv = this.createAndPositionDiv({ ...host.boundBox(),\n            id: host.id(),\n            className: container.className() });\n        parentDiv.className = className;\n        parentDiv.style.position = 'relative';\n        return parentDiv;\n    }\n\n    coordinates () {\n        return this._coordinates;\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport { HTMLRenderer } from '../renderers/html-renderer';\nimport { LayoutComponent } from '../layout-component';\n\nexport const getChildNode = (context, config) =>\n    context.renderer().createAndPositionDiv(config);\n\nexport const findNode = (context, nodeID) =>\n    context.renderer().coordinates().find(point => point.node().id() === nodeID);\n\nexport const renderHTML = (context) => {\n    context.renderer(new HTMLRenderer(context.data()));\n    context.renderer().createhtml(context.mount(), context.className());\n};\n\nexport const drawLayout = context => renderHTML(context);\n\nexport const drawComponent = (componentData) => {\n    componentData.children().forEach((node) => {\n        const host = node.model().host();\n        if (host instanceof LayoutComponent) {\n            host.draw();\n        }\n        drawComponent(node);\n    });\n};\n\nexport const removeElement = (elemID) => {\n    if (elemID) {\n        selectElement(`#${elemID}`).remove();\n    }\n};\n\nconst setAlignConfig = (alignment, params) => {\n    let newNodeConfig = {};\n    const { node, refNode } = params;\n    switch (alignment) {\n    case 'left':\n        newNodeConfig = {\n            top: node.top,\n            left: refNode.left,\n            height: node.height,\n            width: Math.abs(node.width - Math.abs(refNode.left - node.left))\n        };\n        break;\n\n    case 'right':\n        newNodeConfig = {\n            top: node.top,\n            left: node.left,\n            height: node.height,\n            width: Math.abs(node.width - Math.abs(node.left + node.width - (refNode.left + refNode.width)))\n        };\n        break;\n\n    case 'top':\n        newNodeConfig = {\n            top: refNode.top,\n            left: node.left,\n            height: Math.abs(node.height - Math.abs(refNode.top - node.top)),\n            width: node.width\n        };\n        break;\n\n    case 'bottom':\n        newNodeConfig = {\n            top: node.top,\n            left: node.left,\n            height: Math.abs(node.top - refNode.top + refNode.height),\n            width: node.width\n        };\n        break;\n\n    case 'h-center':\n        newNodeConfig = {\n            top: node.top,\n            left: refNode.left,\n            height: node.height,\n            width: refNode.width\n        };\n        break;\n\n    case 'v-center':\n        newNodeConfig = {\n            top: refNode.top,\n            left: node.left,\n            height: refNode.top,\n            width: node.width\n        };\n        break;\n    default:\n        break;\n    }\n    return newNodeConfig;\n};\n\nexport const resolveAligment = (context, componentData) => {\n    componentData.children().forEach((component) => {\n        const host = component.model().host();\n\n        if (host instanceof LayoutComponent && host.alignWith()) {\n            const componentToAlign = context.componentMap().get(host.alignWith());\n\n            if (componentToAlign) {\n                const point = findNode(context, component.id()).node();\n                const node = point.boundBox();\n                const refNode = findNode(context, componentToAlign.renderAt())\n                    .node()\n                    .boundBox();\n                const newNodeConfig = setAlignConfig(host.alignment(), { node, refNode });\n\n                // check if model in parent component\n                Object.assign(newNodeConfig, { id: point.id(), className: host.className() });\n                context.renderer().createAndPositionDiv(newNodeConfig);\n                context.componentMap().get(host.name()).setSpatialConfig({\n                    x: newNodeConfig.left,\n                    y: newNodeConfig.top,\n                    height: newNodeConfig.height,\n                    width: newNodeConfig.width\n\n                });\n            }\n        }\n\n        resolveAligment(context, component);\n    });\n};\n","import { Utils } from '../utils';\nimport { drawLayout, resolveAligment, drawComponent } from './helper';\n\nexport class DrawingManager {\n    constructor (data, renderer, container) {\n        this._data = data.tree;\n        this._componentMap = data.componentMap;\n        this._layoutClassName = data.layoutClassName;\n        this._renderer = renderer;\n        this._mount = Utils.isDOMElement(container) ? container : Utils.getElement(container);\n    }\n\n    draw () {\n        drawLayout(this);\n        resolveAligment(this, this._data);\n        drawComponent(this._data);\n        return this;\n    }\n\n    data (data) {\n        if (data) {\n            this._data = data;\n        }\n        return this._data;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    className (param) {\n        if (param) {\n            this._layoutClassName = param;\n        }\n        return this._layoutClassName;\n    }\n\n    renderer (param) {\n        if (param) {\n            this._renderer = param;\n        }\n        return this._renderer;\n    }\n\n    mount (param) {\n        if (param) {\n            this._mount = param;\n        }\n        return this._mount;\n    }\n}\n","import DefinitionModel from './definitionModel';\nimport { prepareTargetComponentMap, getComponent, placeComponent, placeGridComponent } from '../helper';\n\nexport default class DefinitionManager {\n    constructor (componentMap, sequence, totalHeight, totalWidth) {\n        this._componentMap = componentMap;\n        this._prioritySequence = sequence;\n        this._totalHeight = totalHeight;\n        this._totalWidth = totalWidth;\n        this._targetComponentMap = null;\n    }\n\n    // create the config model\n    generateConfigModel () {\n        prepareTargetComponentMap(this);\n        const canvasComponent = this._targetComponentMap.get('canvas');\n        const definitionModel = new DefinitionModel({});\n        let tempDefModel = definitionModel;\n        definitionModel.remainingHeight(this._totalHeight);\n        definitionModel.remainingWidth(this._totalWidth);\n\n        let componentRef = null;\n\n        this._prioritySequence.forEach((name) => {\n            componentRef = getComponent(canvasComponent, name);\n            if (name !== 'grid') {\n                tempDefModel = placeComponent(tempDefModel, componentRef).second;\n            } else {\n                tempDefModel = placeGridComponent(tempDefModel, componentRef.component);\n            }\n        });\n        return definitionModel;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    targetComponentMap (param) {\n        if (param) {\n            this._targetComponentMap = param;\n        }\n        return this._targetComponentMap;\n    }\n}\n","import { sanitizeConfig } from './helper';\n\nexport class LayoutDef {\n    constructor () {\n        this._componentMap = new Map();\n        this._layoutDefinition = null;\n    }\n\n    addComponent (component) {\n        this._componentMap.set(component.name(), component);\n    }\n\n    layoutDefinition (def) {\n        if (def) {\n            this._layoutDefinition = def;\n        }\n        return this._layoutDefinition;\n    }\n\n    addMultipleComponent (componentArray) {\n        componentArray.forEach((comp) => {\n            this.addComponent(comp);\n        });\n    }\n\n    sanitizedDefinition () {\n        sanitizeConfig(this, this._layoutDefinition);\n        return this.layoutDefinition();\n    }\n\n    componentMap () {\n        return this._componentMap;\n    }\n    resetComponentMap () {\n        this._componentMap.clear();\n    }\n}\n","import DefinitionManager from '../layout-definition/definition-manager';\n\nexport function sanitizeConfig (context, hostObj) {\n    const hostID = hostObj.host();\n    if (hostObj.lanes() && hostObj.lanes().length) {\n        hostObj.lanes().forEach(childHost => sanitizeConfig(context, childHost));\n    }\n    if (hostID != null && typeof (hostID) === 'string') {\n        if (context.componentMap().get(hostID) !== undefined) {\n            hostObj.host(context.componentMap().get(hostID));\n        }\n    }\n}\n\nexport function calLayOutDef (context) {\n    const { height, width } = context.dimension();\n    const defManager = new DefinitionManager(context.layoutDef().componentMap(),\n                                              context.prioritySequence(),\n                                              height,\n                                              width);\n    const genLayoutdef = defManager.generateConfigModel();\n    return genLayoutdef;\n}\n","import {\n  LayoutModel\n} from '../layout-definition';\n\nimport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT\n} from '../constants/defaults';\n\nimport {\n   GRID\n} from '../../enums/constants';\n\nimport { DrawingManager } from '../drawing-manager';\nimport { removeElement } from '../drawing-manager/helper';\nimport { Utils } from '../utils';\nimport { LayoutDef } from './layout-def';\nimport { calLayOutDef } from './helper';\n\nexport default class LayoutManager {\n    constructor (conf) {\n        this._renderAt = conf.renderAt;\n        this._layoutClassName = conf.className;\n        this._dimension = {\n            width: conf.width || DEFAULT_WIDTH,\n            height: conf.height || DEFAULT_HEIGHT\n        };\n\n        this._skeletonType = conf.skeletonType || 'html';\n        this._layoutDefinition = null;\n        this._layoutDef = new LayoutDef();\n        this._drawingManager = null;\n        this._prioritySequence = [];\n        this.tree = null;\n        this._rootNodeID = null;\n    }\n\n    layoutDef (param) {\n        if (param) {\n            this._layoutDef = param;\n        }\n        return this._layoutDef;\n    }\n\n    prioritySequence (param) {\n        if (param) {\n            this._prioritySequence = param;\n        }\n        return this._prioritySequence;\n    }\n\n    dimension (param) {\n        if (param) {\n            Object.assign(this._dimension, param);\n        }\n        return this._dimension;\n    }\n\n    addComponent (component) {\n        this._layoutDef.addComponent(component);\n    }\n\n    addMultipleComponent (componentArray) {\n        this._layoutDef.addMultipleComponent(componentArray);\n    }\n\n    resetNode (node) {\n        if (this.con) {\n            this.con.resetNode(node);\n        }\n    }\n\n  /**\n   * function to update the node and rerender the layout.\n   * @param  {} config - node configuration to change.\n   */\n    updateNode (config) {\n        this.tree.updateNode(config);\n        this._layoutDefinition = this.tree.model;\n        this.compute();\n    }\n\n    compute () {\n        //----\n        if (Utils.isDOMElement(this._renderAt)) {\n            this._renderAt._layout = this;\n        } else {\n            document.getElementById(this._renderAt)._layout = this;\n        }\n        //-----\n        this._layoutDefinition = calLayOutDef(this);\n        this._layoutDef.layoutDefinition(this._layoutDefinition);\n        this._layoutDefinition = this._layoutDef.sanitizedDefinition();\n        this._layout = new LayoutModel({\n            width: this._dimension.width,\n            height: this._dimension.height\n        },\n            this._layoutDefinition);\n        this.tree = this._layout.negotiate().tree();\n        this._layout.broadcast();\n        this._drawingManager = new DrawingManager({\n            tree: this.tree,\n            componentMap: this._layoutDef.componentMap(),\n            layoutClassName: this._layoutClassName\n        }, this._skeletonType, this._renderAt);\n\n        if (this._rootNodeID) {\n            this.tree.id(this._rootNodeID);\n        } else {\n            this._rootNodeID = this.tree.id();\n        }\n    // this will draw all the components by calling their draw method\n        this._drawingManager.draw();\n    }\n\n    getRootNodeId () {\n        return this._rootNodeID;\n    }\n\n  /**\n  * This function takes the LayoutComponents and Register them in component store\n  * @param {Array<LayoutComponent>} layoutComponents\n  */\n    registerComponents (layoutComponents) {\n        this._prioritySequence.length = 0;\n        this._layoutDef.resetComponentMap();\n        layoutComponents.forEach((container) => {\n            if (container) {\n                this._prioritySequence.push(container.name());\n                this.addComponent(container);\n                if (container.name() === 'grid') {\n                    container.component.forEach((componentArr) => {\n                        componentArr.forEach((compo) => {\n                            this.addComponent(compo);\n                        });\n                    });\n                }\n            }\n        });\n        return this;\n    }\n\n    getComponent (componentName) {\n        return this._layoutDef.componentMap().get(componentName);\n    }\n\n    deleteElement (component, elementName) {\n        this._layoutDef.componentMap().delete(elementName);\n        const deleteElementId = component.renderAt();\n        return removeElement(deleteElementId);\n    }\n\n    removeComponent (name) {\n        const component = this.getComponent(name);\n        if (component) {\n            if (name === GRID) {\n                return component.component.map(comp => comp.map(\n                    co => this.deleteElement(co, co.name())\n                ));\n            }\n            return this.deleteElement(component, name);\n        }\n        return this;\n    }\n\n    renderAt (mount) {\n        if (mount) {\n            this._renderAt = mount;\n        }\n        return this._renderAt;\n    }\n}\n","import { isEqual, STATE_NAMESPACES, selectElement, getValueParser } from 'muze-utils';\nimport { VisualGroup } from '@chartshq/visual-group';\nimport { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, DATA, CONFIG, GRID }\n    from '../constants';\nimport { canvasOptions } from './local-options';\nimport { LayoutManager } from '../../../layout/src/tree-layout';\n\n/**\n * Instantiate high level components. Canvas knows what all high level component it has.\n * @nice-to-have dynamic high level components.\n *  - Is it even required ?\n *  - Reactive to source (canvas) streaming ?\n * @param {*} context Canvas instance\n * @return {Object.<Array>} Arrays of Title, visualGroup, Legend\n */\nexport const initCanvas = (context) => {\n    const reg = context._registry.components;\n\n    return [new reg.VisualGroup(context._registry, Object.assign({\n        throwback: context._throwback\n    }, context.dependencies()))];\n};\n\nexport const fixScrollBarConfig = (config) => {\n    config.scrollBar.thickness = Math.min(50, Math.max(10, config.scrollBar.thickness));\n    return config;\n};\n\nexport const setLayoutInfForUnits = (context) => {\n    const layoutManager = context._layoutManager;\n    const gridLayout = layoutManager.getComponent(GRID);\n    const boundBox = gridLayout && gridLayout.getBoundBox();\n    const valueMatrix = context.composition().visualGroup.matrixInstance().value;\n    const parentContainer = selectElement(`#${layoutManager.getRootNodeId()}`).node();\n    valueMatrix.each((cell) => {\n        cell.valueOf().parentContainerInf({\n            el: parentContainer,\n            dimensions: boundBox\n        });\n    });\n};\n\n/**\n *\n *\n * @memberof Canvas\n */\nexport const dispatchProps = (context) => {\n    const lifeCycleManager = context.dependencies().lifeCycleManager;\n    lifeCycleManager.notify({ client: context, action: 'beforeupdate' });\n    const visualGroup = context.composition().visualGroup;\n\n    const allOptions = context._allOptions;\n    for (const key in allOptions) {\n        const value = context[key]();\n        if (value !== null) {\n            visualGroup[key] && visualGroup[key](value);\n        }\n    }\n    const { invalidValues } = context.config();\n\n    visualGroup.valueParser(getValueParser(invalidValues));\n    visualGroup.createMatrices();\n    context._cachedProps = {};\n    lifeCycleManager.notify({ client: context, action: 'initialized' });\n    lifeCycleManager.notify({ client: context, action: 'updated' });\n};\n\nconst equalityChecker = (props, params) => {\n    let checker = () => false;\n    return !props.every((option, i) => {\n        switch (option) {\n        case ROWS:\n        case COLUMNS:\n        case DETAIL:\n            checker = isEqual('Array');\n            break;\n\n        case SHAPE:\n        case SIZE:\n        case COLOR:\n        case DATA:\n        case CONFIG:\n            checker = isEqual('Object');\n            break;\n        default:\n            checker = () => true;\n            break;\n        }\n        const oldVal = params[i][0];\n        const newVal = params[i][1];\n\n        return checker(oldVal, newVal);\n    });\n};\n\nconst updateChecker = (props, params) => props.every((option, i) => {\n    const val = params[i][1];\n    switch (option) {\n    case ROWS:\n    case COLUMNS:\n        return val !== null;\n\n    case DATA:\n        return val && !val.isEmpty();\n\n    default:\n        return true;\n\n    }\n});\n\nexport const notifyAnimationEnd = (context) => {\n    const viewInfo = context.layout().viewInfo();\n    const centerMatrix = viewInfo && viewInfo.viewMatricesInfo.matrices.center[1] || [];\n    const promises = [];\n    centerMatrix.forEach((cellArr) => {\n        cellArr.forEach((cell) => {\n            promises.push(cell.valueOf().done());\n        });\n    });\n    const lifeCycleManager = context.lifeCycle();\n    if (promises.length) {\n        Promise.all(promises).then(() => {\n            // Update life cycle\n            lifeCycleManager.notify({ client: context, action: 'drawn' });\n            const animDonePromises = [];\n\n            centerMatrix.forEach((cellArr) => {\n                cellArr.forEach((cell) => {\n                    cell.valueOf().layers().forEach((layer) => {\n                        animDonePromises.push(layer.animationDone());\n                    });\n                });\n            });\n\n            [context.xAxes(), context.yAxes()].forEach((axisArr) => {\n                axisArr = axisArr || [];\n                axisArr.forEach((axes) => {\n                    axes.forEach((axisInst) => {\n                        animDonePromises.push(axisInst.animationDone());\n                    });\n                });\n            });\n\n            Promise.all(animDonePromises).then(() => {\n                lifeCycleManager.notify({ client: context, action: 'animationend' });\n            });\n        });\n    } else {\n        lifeCycleManager.notify({ client: context, action: 'animationend' });\n    }\n};\n\nexport const setupChangeListener = (context) => {\n    const store = context._store;\n\n    const allOptions = Object.keys(context._allOptions);\n    const props = [...allOptions, ...Object.keys(canvasOptions)];\n    const nameSpaceProps = [...allOptions, ...Object.keys(canvasOptions)].map(prop =>\n        `${STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE}.${prop}`);\n    store.registerChangeListener(nameSpaceProps, (...params) => {\n        const equalityProps = equalityChecker(props, params);\n        const updateProps = updateChecker(props, params);\n        // inform attached board to rerender\n        if (equalityProps && context.mount()) {\n            if (updateProps) {\n                dispatchProps(context);\n            } else {\n                context.composition().visualGroup.remove();\n            }\n            context.render();\n        }\n        notifyAnimationEnd(context);\n    }, true);\n};\n\nexport const applyInteractionPolicy = (firebolt) => {\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    if (visualGroup) {\n        const valueMatrix = visualGroup.matrixInstance().value;\n        const interactionPolicy = firebolt._interactionPolicy;\n        interactionPolicy(valueMatrix, firebolt);\n        const crossInteractionPolicy = firebolt._crossInteractionPolicy;\n        const behaviours = crossInteractionPolicy.behaviours;\n        const sideEffects = crossInteractionPolicy.sideEffects;\n        valueMatrix.each((cell) => {\n            const unitFireBolt = cell.valueOf().firebolt();\n            for (const key in behaviours) {\n                unitFireBolt.changeBehaviourStateOnPropagation(key, behaviours[key]);\n            }\n            for (const key in sideEffects) {\n                unitFireBolt.changeSideEffectStateOnPropagation(key, sideEffects[key]);\n            }\n        });\n    }\n};\n\n/**\n * Sets the rotation for all x axes if any axis has the rotation config set in the\n * entire view\n *\n * @param {Array} columns Column cells that contain the axes cells\n */\nexport const setLabelRotationForAxes = (context) => {\n    let rotation = 0;\n\n    const xAxes = context.xAxes() || [];\n\n    (() => {\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                const rotationVal = xAxes[i][j].renderConfig().labels.rotation;\n                if (rotationVal && rotationVal !== 0) {\n                    rotation = rotationVal;\n                    return;\n                }\n            }\n        }\n    })();\n\n    if (rotation) {\n        xAxes.forEach((axes) => {\n            axes.forEach((axis) => {\n                axis.renderConfig({ labels: { rotation } });\n                axis.smartTicks(axis.setTickConfig());\n            });\n        });\n    }\n};\n\nexport const createGroupState = (context) => {\n    const [globalState, localState] = VisualGroup.getState();\n    const store = context._store;\n    store.append('app.group', globalState);\n    store.append('local.group', localState);\n};\n\nexport const removeChild = (mount) => {\n    while (mount.firstChild) {\n        mount.removeChild(mount.firstChild);\n    }\n};\n\nexport const createLayoutManager = () => {\n    const layoutManager = new LayoutManager({\n        className: 'muze-group-container'\n    });\n    return layoutManager;\n};\n","/**\n * This is the global options semantics based on which setters getters are created and reactivity is initiated.\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n * @module GlobalOptions\n */\n\nimport { intSanitizer, mergeRecursive, DataModel } from 'muze-utils';\nimport { fixScrollBarConfig } from './canvas/helper';\nimport { DEFAULT_CONFIG } from './defaults';\n\nexport default {\n    data: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel\n        }\n    },\n    width: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    height: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitWidth: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitHeight: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    config: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config, oldConfig) => {\n                // Reset the configuration when null is passed\n                const oldConf = mergeRecursive({}, config === null ? {} : oldConfig);\n                const defConfig = mergeRecursive(oldConf, DEFAULT_CONFIG);\n                let newConf = mergeRecursive(defConfig, config);\n                newConf = fixScrollBarConfig(newConf);\n\n                return newConf;\n            }\n\n        }\n    }\n};\n","import { sanitizeIP, mergeRecursive } from 'muze-utils';\nimport { TOP, CENTER, BOTTOM } from '../enums/constants';\n\n/*\n * This is the abstract implementation of the root layout. This takes care of common work which all the layouts\n * has to handle. The common work includes sanitizaion of inputs, update, rerender, dispose etc. This class can't be\n * used directly (as ofcourse this is an abstract implementaiton), the class which is implementing it has to implement\n * the necessary methods and gives its on visual.\n */\n\n/**\n * This class is used to create a generic layout. It can be extended to create layouts\n * of different types\n * @class GenericLayout\n */\nexport default class GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config configuration to be given for the layout\n     * @param {Object} dependencies external dependencies.\n     *\n     * @memberof GenericLayout\n     *\n     */\n    constructor (mountPoint, measurement, config, dependencies) {\n        this._config = {};\n        this._measurement = {};\n        this._matrices = [];\n        // External dependencies to be included for the layout. This includes the ext global dependencies like\n        // smartlabel which has one single implementation of throughout the page or per isntance\n        this._dependencies = dependencies;\n\n        this.measurement(measurement);\n        this.mountPoint(mountPoint);\n        this.config(config);\n    }\n\n    /**\n     * Returns an object which is used to recreate the layout.\n     * @return {Object} the serialized components\n     */\n    serialize () {\n        return {\n            measurement: this.measurement(),\n            config: this.config(),\n            matrices: this.matrices()\n        };\n    }\n\n     /**\n     * Sets/Gets the config for the layout\n     * @param {Object} config configuration for the layout\n     * @return {Layout|Object} Gets the Config/ Returns this instance when set\n     */\n    config (config) {\n        if (config) {\n            this._config = mergeRecursive(this._config || {}, config);\n            this._config.border.width = Math.max(0, this._config.border.width);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Sets/Gets the measurement for the layout\n     * @param {Object} measurement measurement for the layout\n     * @return {Layout|Object} Gets the measurement/ Returns this instance when set\n     */\n    measurement (measurement) {\n        if (measurement) {\n            this._measurement = mergeRecursive(this._measurement || {}, measurement);\n\n            return this;\n        }\n        return this._measurement;\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     * @param {Object} matrices matrices for the layout\n     * @return {Layout|Object} Gets the matrices/ Returns this instance when set\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = sanitizeIP.typeObj([TOP, CENTER, BOTTOM], matrices);\n\n            return this;\n        }\n        return this._matrices;\n    }\n\n    /**\n     * Sets/Gets the matrix for row\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    rowMatrix (matrix) {\n        if (matrix) {\n            this._rowMatrix = matrix;\n            return this;\n        }\n        return this._rowMatrix;\n    }\n\n    /**\n     * Sets/Gets the matrix for columns\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    columnMatrix (matrix) {\n        if (matrix) {\n            this._columnMatrix = matrix;\n            return this;\n        }\n        return this._columnMatrix;\n    }\n\n   /**\n     * Sets/Gets the matrix for value\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    centerMatrix (matrix) {\n        if (matrix) {\n            this._centerMatrix = matrix;\n            return this;\n        }\n        return this._centerMatrix;\n    }\n\n    /**\n     * Sets/Gets the mountPoint for the layout\n     * @param {Object} mountPoint mountPoint for the layout\n     * @return {Layout|Object} Gets the mountPoint/ Returns this instance when set\n     */\n    mountPoint (mountPoint) {\n        if (mountPoint) {\n            this._mountPoint = mountPoint;\n\n            return this;\n        }\n        return this._mountPoint;\n    }\n}\n","import * as FieldNames from '../enums/constants';\n\n/**\n * Default configuration of the layout\n * @return {Object} returns the default configuration\n */\nexport const DEFAULT_CONFIGURATION = {\n    [FieldNames.BORDER]: {\n        [FieldNames.STYLE]: 'solid',\n        [FieldNames.COLOR]: '#d6d6d6',\n        [FieldNames.WIDTH]: 2,\n        [FieldNames.COLLAPSE]: true,\n        [FieldNames.SPACING]: 0\n    },\n    [FieldNames.PAGINATION]: 'scroll',\n    [FieldNames.BUFFER]: 20,\n    [FieldNames.GUTTERSPACE]: { rows: [], columns: [] },\n    [FieldNames.DISTRIBUTION]: { rows: [], columns: [] },\n    [FieldNames.BREAK_PAGE]: { rows: [], columns: [] },\n    [FieldNames.ROW_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_POINTER]: 0,\n    [FieldNames.ROW_POINTER]: 0\n};\n\n/**\n * Default measurements for the layout\n * @return {Object} returns the default measurements\n */\nexport const DEFAULT_MEASUREMENTS = {\n    [FieldNames.GRID_WIDTH]: 100,\n    [FieldNames.GRID_HEIGHT]: 100,\n    [FieldNames.UNIT_WIDTH]: 100,\n    [FieldNames.UNIT_HEIGHT]: 100\n};\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n","/**\n * This file exports utility functions that are used across the layout module\n */\nimport { Symbols } from 'muze-utils';\nimport { PRIMARY, SECONDARY, HEIGHT, WIDTH } from '../enums/constants';\n\nconst nest = Symbols.nest;\n/**\n *\n *\n * @param {*} isTransposed\n *\n */\nconst getMeasureInfo = (isTransposed) => {\n    if (isTransposed) {\n        return {\n            firstMeasure: HEIGHT,\n            secondMeasure: WIDTH\n        };\n    }\n    return {\n        firstMeasure: WIDTH,\n        secondMeasure: HEIGHT\n    };\n};\n\n/**\n *\n *\n * @param {*} i\n * @param {*} page\n *\n */\nconst findInPage = (i, page) => {\n    let count = 0;\n    for (const x in page) {\n        if (i < page[x]) {\n            count = x;\n            break;\n        }\n    }\n    return count;\n};\n\n/**\n * Creates a single matrix from two matrices\n *\n * @param {Array<Array>} matrix Input matrix\n * @return {Array<Array>} Joined matrix\n * @memberof VisualMatrix\n */\nexport const combineMatrices = (matrix, config) => {\n    const { isTransposed } = config;\n    let joinedMatrix = matrix[0].length > 0 ? matrix[0] : matrix[1];\n    if (isTransposed) {\n        joinedMatrix = matrix[0].length > 0 ? [...matrix[0]] : [];\n        joinedMatrix = matrix[1].length > 0 ? [...joinedMatrix, ...matrix[1]] : joinedMatrix;\n    } else {\n        joinedMatrix = joinedMatrix.map((row, rowIndex) => {\n            let rowData = [];\n            if (matrix[0].length > 0) {\n                rowData = [...matrix[0][rowIndex]];\n            }\n            if (matrix[1].length > 0) {\n                rowData = [...rowData, ...matrix[1][rowIndex]];\n            }\n            return rowData;\n        });\n    }\n    return joinedMatrix;\n};\n\n/**\n * Creates a hirachical tree from the context\n *\n * @param {Object} context context for creating tree\n * @return {Object} nested tree\n */\nexport const createTree = (context) => {\n    let matrixTree = {};\n    let lastLevelKey = 0;\n    let facet = PRIMARY;\n    const nestFn = nest();\n    const keys = [];\n    const layoutMatrix = context._layoutMatrix;\n    const primaryMatrix = context.primaryMatrix();\n    const secondaryMatrix = context.secondaryMatrix();\n    const { isTransposed, breakPage } = context.config();\n\n    if (!isTransposed) {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix[0].length - 1; i++) {\n                keys.push(i);\n            }\n            keys.push(primaryMatrix[0].length - 1);\n            if (facet === SECONDARY || secondaryMatrix.length === 0) {\n                lastLevelKey = primaryMatrix[0].length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const keyLength = primaryMatrix.length > 0 ? primaryMatrix[0].length : 0;\n            for (let i = secondaryMatrix[0].length - 1; i > 0; i--) {\n                keys.push(i + keyLength);\n            }\n            keys.push(keyLength);\n\n            if (facet === PRIMARY) {\n                lastLevelKey = keyLength;\n            }\n        } else {\n            lastLevelKey = primaryMatrix.length > 0 ? primaryMatrix[0].length - 1 : 0;\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        matrixTree = nestFn.entries(layoutMatrix);\n    } else {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix.length - 1; i++) {\n                keys.push(i);\n            }\n            // if (facet === PRIMARY) {\n            keys.push(primaryMatrix.length - 1);\n            // } else {\n            if (facet === SECONDARY) {\n                lastLevelKey = primaryMatrix.length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const primaryMatrixLength = primaryMatrix.length;\n            for (let i = secondaryMatrix.length - 1; i > 0; i--) {\n                keys.push(i + primaryMatrixLength);\n            }\n            // if (facet === SECONDARY) {\n            keys.push(primaryMatrixLength);\n            // }\n            if (facet === PRIMARY) {\n                lastLevelKey = primaryMatrixLength;\n            }\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        let newMatrix = [];\n        newMatrix = layoutMatrix[0].map((col, colIndex) => layoutMatrix.map(row => row[colIndex]));\n        matrixTree = nestFn.entries(newMatrix);\n    }\n    return { tree: matrixTree, lastLevelKey };\n};\n\n/**\n * Gives the min measues\n *\n * @param {boolean} isTransposed is column matrix\n * @param {Object} unitMeasures min measures to be given to cells\n * @return {Object} dimension min cell\n */\nexport const getMinMeasures = (isTransposed, unitMeasures) => {\n    if (!isTransposed) {\n        return {\n            height: unitMeasures.height,\n            width: 0\n        };\n    }\n    return {\n        height: 0,\n        width: unitMeasures.width\n    };\n};\n\n/**\n * Get the logical space from the tree\n *\n * @param {Node} item tree to be calculated\n * @param {number} measures width and height\n * @param {Array} minMeasures min measures for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} dimension\n */\nexport const getLogicalSpace = (item, measures, minMeasures, maxMeasure = []) => {\n    const { firstMeasure, secondMeasure } = measures;\n    let firstMeasureValue = 0;\n    let secondMeasureValue = 0;\n    item.values.forEach((valueArray) => {\n        let fMeasure = 0;\n        let sMeasure = 0;\n        valueArray.forEach((placeholder, colIndex) => {\n            placeholder.setAvailableSpace();\n            const space = placeholder.getLogicalSpace();\n            const minSecondMeasure = placeholder.getMinMeasures(minMeasures[secondMeasure]);\n\n            sMeasure = Math.max(sMeasure, +space[secondMeasure], minSecondMeasure);\n            maxMeasure[colIndex] = Math.max(maxMeasure[colIndex] || 0, space[firstMeasure]);\n            fMeasure += +maxMeasure[colIndex];\n        });\n        secondMeasureValue += sMeasure;\n        firstMeasureValue = Math.max(firstMeasureValue, fMeasure);\n        item.space = {\n            [secondMeasure]: Math.ceil(secondMeasureValue),\n            [firstMeasure]: Math.ceil(firstMeasureValue)\n        };\n    });\n    return {\n        [secondMeasure]: secondMeasureValue,\n        [firstMeasure]: firstMeasureValue\n    };\n};\n\n/**\n * Computes the logical spcae taken by the matrix tree\n *\n * @param {*} [item={}] tree to be viewed\n * @param {boolean} [isTransposed=false] is column matrix\n * @param {*} unitMeasures min measues for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} logical space taken\n */\nexport const computeLogicalSpace = (item = {}, config, maxMeasures) => {\n    const { isTransposed = false, unitMeasures } = config;\n    const { firstMeasure, secondMeasure } = getMeasureInfo(isTransposed);\n    const { values } = item;\n    const minMeasures = getMinMeasures(isTransposed, unitMeasures);\n\n    if (values[0].key) {\n        const logicalSpace = { [firstMeasure]: 0, [secondMeasure]: 0 };\n\n        values.forEach((valueItem) => {\n            // Compute logical space for lowest level\n            const space = computeLogicalSpace(valueItem, config, maxMeasures);\n            // Set logical space for first measure\n            logicalSpace[firstMeasure] = Math.max(logicalSpace[firstMeasure], space[firstMeasure],\n                minMeasures[firstMeasure]);\n\n            // Set logical space for second measure\n            logicalSpace[secondMeasure] += +space[secondMeasure];\n        });\n        item.space = logicalSpace;\n        return logicalSpace;\n    }\n\n    return getLogicalSpace(item, { firstMeasure, secondMeasure }, minMeasures, maxMeasures);\n};\n\n/**\n * Gives the space taken by a row\n *\n * @param {Array} row matrix array of rows\n * @return {Object} dimension of the row\n */\nexport const spaceTakenByRow = (row) => {\n    let height = 0;\n    let width = 0;\n    row.forEach((col) => {\n        const spaces = col.getLogicalSpace();\n        height = Math.max(height, spaces.height);\n        width += spaces.width;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Gives the space taken by a column\n *\n * @param {Array<Array>} matrix column matrix\n * @param {number} colIndex column index\n * @return {Object} dimension of the column\n */\nexport const spaceTakenByColumn = (matrix, colIndex) => {\n    let height = 0;\n    let width = 0;\n    matrix.forEach((row) => {\n        const col = row[colIndex];\n        const spaces = col.getLogicalSpace();\n        width = Math.max(width, spaces.width);\n        height += spaces.height;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Creates different level matrices\n *\n * @param {Object} item matrix tree\n * @param {boolean} isTransposed is column matrix\n * @return {Object} matrix of each level\n */\nexport const createMatrixEachLevel = (item, isTransposed) => {\n    if (item.values[0].key) {\n        const arr = [];\n        item.values.forEach((child) => {\n            if (!isTransposed) {\n                arr.push(...createMatrixEachLevel(child, isTransposed));\n            } else {\n                const eachLevel = createMatrixEachLevel(child, isTransposed);\n                eachLevel.forEach((e, i) => {\n                    arr[i] = arr[i] || [];\n                    arr[i].push(...e);\n                });\n            }\n        });\n        item.matrix = arr;\n        return arr;\n    }\n    if (!isTransposed) {\n        item.matrix = item.values;\n    } else {\n        item.matrix = item.values[0].map((col, colIndex) => item.values.map(row => row[colIndex]));\n    }\n    return item.matrix;\n};\n\n/**\n * Breaks the matrix into two part\n *\n * @param {Array<Array>} matrix input matrix\n * @param {boolean} isTransposed is column matrix\n * @param {number} breakPointer point in matrix where it is to be broken\n * @return {Array} two broken matrix\n */\nexport const breakMatrix = (matrix, isTransposed, breakPointer) => {\n    const primaryMatrix = [];\n    const secondaryMatrix = [];\n    if (isTransposed) {\n        matrix.forEach((row, rowIndex) => {\n            if (rowIndex >= breakPointer) {\n                secondaryMatrix.push(row);\n            } else {\n                primaryMatrix.push(row);\n            }\n        });\n    } else {\n        matrix.forEach((row, rowIndex) => {\n            row.forEach((column, columnIndex) => {\n                if (columnIndex >= breakPointer) {\n                    secondaryMatrix[rowIndex] = secondaryMatrix[rowIndex] || [];\n                    secondaryMatrix[rowIndex].push(column);\n                } else {\n                    primaryMatrix[rowIndex] = primaryMatrix[rowIndex] || [];\n                    primaryMatrix[rowIndex].push(column);\n                }\n            });\n        });\n    }\n    return [primaryMatrix, secondaryMatrix];\n};\n\n/**\n * Distributed width returned\n *\n * @param {Object} context context for the width distibution\n * @return {number} distributed widths\n */\nexport const getDistributedWidth = (context, layoutConfig) => {\n    const {\n        availableWidth,\n        width,\n        row\n    } = context;\n    const {\n        isDistributionEqual,\n        isTransposed,\n        distribution\n    } = layoutConfig;\n    let distSum = 0;\n    if (distribution && distribution[0]) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    return row.map((col, colIndex) => {\n        const space = col.getLogicalSpace().width;\n        let distWidth = (space + (availableWidth - width) * (space / width));\n        if (isTransposed) {\n            if (distribution.length > 0) {\n                distWidth = (availableWidth * distribution[colIndex] / distSum);\n            } else if (isDistributionEqual || width === 0) {\n                const rowLen = row.length;\n                distWidth = (availableWidth / rowLen);\n            }\n        }\n        return Math.floor(distWidth);\n    });\n};\n\n/**\n * Distributeed heights returned\n *\n * @param {Object} context input for the height distribution\n * @return {Object} distribured heights\n */\nexport const getDistributedHeight = (context) => {\n    let distSum = 0;\n    let gutterSum = 0;\n    let heightWithoutGutter = 0;\n    const {\n        isTransposed,\n        distribution,\n        availableHeight,\n        height,\n        isDistributionEqual,\n        gutter,\n        matrix,\n        cIdx\n    } = context;\n\n    if (distribution && distribution[0] !== undefined) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    if (gutter && gutter[0] !== undefined) {\n        gutterSum = gutter.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    heightWithoutGutter = availableHeight - Math.floor(availableHeight * gutterSum);\n\n    const colLen = matrix.length;\n    return matrix.map((row, rIdx) => {\n        const col = row[cIdx];\n        const space = col.getLogicalSpace().height;\n        let distHeight = (space + (heightWithoutGutter - height) * (space / height));\n\n        if (!isTransposed) {\n            if (distribution.length > 0 && colLen === distribution.length) {\n                distHeight = (heightWithoutGutter * distribution[rIdx] / distSum);\n            } else if (isDistributionEqual || context.height === 0) {\n                distHeight = (heightWithoutGutter / colLen);\n            }\n        }\n        return Math.floor(distHeight);\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} beg\n * @param {*} end\n */\nexport const extraCellsRemover = (arr, beg, end) => arr.slice(beg, -end);\n\n/**\n * Creates matrix instancess\n *\n * @param {Array} [arr=[]] mutated arry\n * @param {number} depth depth of the tree\n * @param {Array} matrixInfo Details about the matrix(tree, etc) to be inserted\n * @param {boolean} layout Instance of layout\n */\nexport const createMatrixInstances = (arr = [], depth, matrixInfo, layout) => {\n    const breakPointer = layout._breakPointer;\n    const config = layout.config();\n    const {\n        isTransposed\n    } = config;\n    const {\n        tree,\n        layoutMatrix\n    } = matrixInfo;\n\n    if (depth === 0) {\n        const brokenMatrix = breakMatrix(tree.matrix, isTransposed, breakPointer);\n        arr.push({\n            matrix: tree.matrix,\n            primaryMatrix: brokenMatrix[0],\n            secondaryMatrix: brokenMatrix[1],\n            space: tree.space\n        });\n        return arr;\n    }\n    const nextLevel = depth - 1;\n    tree.values.forEach((e) => {\n        createMatrixInstances(arr, nextLevel, {\n            tree: e,\n            layoutMatrix\n        }, layout);\n    });\n    return arr;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    maxMeasures: {},\n    availableSpace: {},\n    logicalSpace: {}\n};\n","import { PRIMARY } from '../enums/constants';\n/**\n *\n *\n */\nexport const defaultConfig = {\n    distribution: [],\n    classPrefix: 'muze',\n    isDistributionEqual: true,\n    unitMeasures: {\n        height: 100,\n        width: 100,\n        border: 1\n    },\n    isTransposed: false,\n    facet: PRIMARY,\n    extraCellLengths: []\n};\n","import { mergeRecursive, generateGetterSetters, ERROR_MSG } from 'muze-utils';\nimport {\n    createTree,\n    combineMatrices,\n    createMatrixInstances\n  } from '../utils';\nimport { PROPS } from './props';\nimport { HEIGHT, WIDTH } from '../enums/constants';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        // Prepare matrices\n        this._lastLevelKey = 0;\n        this._primaryMatrix = matrix[0] || [];\n        this._secondaryMatrix = matrix[1] || [];\n        this._maxMeasures = [];\n        this._availableSpace = {};\n\n        // Store the config\n        generateGetterSetters(this, PROPS);\n        const defCon = Object.assign({}, this.constructor.defaultConfig());\n        this.config(mergeRecursive(defCon, config));\n\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n    }\n\n     /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    computeViewableSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getPriorityDistribution () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @returns\n     * @memberof VisualMatrix\n     */\n    primaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._primaryMatrix;\n    }\n\n    secondaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._secondaryMatrix;\n    }\n\n    tree (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._tree;\n    }\n\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    createTree () {\n        const { tree, lastLevelKey } = createTree(this);\n        this._lastLevelKey = lastLevelKey;\n        return tree;\n    }\n\n    /**\n     * Returns the space taken by visual matrix\n     *\n     * @return {Object} space taken by the matrix\n     * @memberof VisualMatrix\n     */\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    /**\n     * Sets the provied space to the visual matrix\n     *\n     * @param {number} width width provided\n     * @param {number} height height provided\n     * @memberof VisualMatrix\n     */\n    setAvailableSpace (width, height) {\n        this.availableSpace({ width, height });\n        const tree = this.tree();\n        const heightMeasures = this.populateMaxMeasures(HEIGHT, tree);\n        const widthMeasures = this.populateMaxMeasures(WIDTH, tree);\n        const depth = this.calculateDepth(widthMeasures, heightMeasures);\n\n        this.viewableMatrix = this.createViewPortMatrix(depth);\n        this.viewableMeasures = this.redistributeSpaces(width, height);\n        return this;\n    }\n\n    /**\n     * Populate the max measures in the array\n     *\n     * @param {Array} measures array to be filled with max measures\n     * @param {Object} matrixTree matrix tree of visual matrix\n     * @param {number} measure width or height\n     * @param {number} [depth=0] depth of the tree that to be calculated\n     * @memberof VisualMatrix\n     */\n    populateMaxMeasures (type, matrixTree, depth = 0, measures = []) {\n        measures[depth] = Math.max(measures[depth] || 0, matrixTree.space[type]);\n        if (matrixTree.values) {\n            const childDepth = depth + 1;\n            matrixTree.values.forEach((child) => {\n                if (child.space) {\n                    measures = this.populateMaxMeasures(type, child, childDepth, measures);\n                }\n            });\n        }\n        return measures;\n    }\n\n    /**\n     * Gets the viewable measures for the current viewable matrix\n     *\n     * @return {Object} Set of viewable measures\n     * @memberof VisualMatrix\n     */\n    getViewableSpaces () {\n        return this.viewableMeasures;\n    }\n\n    /**\n     * Returns the matrix that can be viewed in the current viewport\n     *\n     * @return {Array} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    getViewableMatrices () {\n        return this.viewableMatrix;\n    }\n\n    /**\n     * Creates the viewport that can be viewed together\n     *\n     * @param {number} depth maxDepth that can be viewed in the viewport\n     * @return {Array<Object>} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    createViewPortMatrix (depth) {\n        const arr = [];\n        createMatrixInstances(arr, depth, this.removeExtraCells(), this);\n        return arr;\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    combineMatrices,\n    spaceTakenByColumn,\n    getDistributedHeight,\n    computeLogicalSpace,\n    createMatrixEachLevel\n  } from '../utils';\nimport { ROW_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class RowVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = (matrix[0].length > 0 ? matrix[0][0].length : 0);\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n\n        // Create Tree\n        this._tree = {\n            key: ROW_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, false);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height\n        } = measures;\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i };\n            const { widths, rowHeights, columnWidths } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = [height, height];\n            const columnMeasures = widths;\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n        tree.matrix = extraCellsRemover(tree.matrix, begCellLen, endCellLen);\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        let remainingAvailWidth;\n        let remainingWidth;\n        let cWidths = [];\n        let conditions = [];\n        let maxPrioritySpace = 0;\n        const {\n            matrix,\n            width: availableWidth,\n            maxMeasures: maxWidths,\n            maxWidth: currentWidth,\n            height\n        } = measures;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length ? this.primaryMatrix()[0].length : 0;\n\n        const dist = [];\n\n        remainingAvailWidth = availableWidth;\n        remainingWidth = currentWidth;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            // divider = Math.min(2, matrixLen);\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            // divider = Math.min(1, matrixLen);\n        }\n        conditions.forEach((i) => {\n            dist[i] = maxWidths[i];\n            maxPrioritySpace += maxWidths[i];\n            remainingAvailWidth -= dist[i];\n            remainingWidth -= dist[i];\n        });\n        matrix[0].forEach((e, i) => {\n            if (conditions.indexOf(i) === -1) {\n                dist[i] = remainingAvailWidth * (maxWidths[i] / remainingWidth);\n            }\n        });\n        matrix.forEach(row => row.forEach((col, cIdx) => {\n            if (conditions.indexOf(cIdx) === -1) {\n                col.setAvailableSpace(dist[cIdx], height);\n\n                cWidths[cIdx] = Math.max(cWidths[cIdx] || 0, Math.floor(col.getLogicalSpace().width));\n            } else {\n                cWidths[cIdx] = 0;\n            }\n        }));\n\n        const prioritySpace = availableWidth - cWidths.reduce((t, n) => t + n);\n        if (prioritySpace < 0) {\n            cWidths = cWidths.map(() => 0);\n        } else {\n            conditions.forEach((i) => {\n                cWidths[i] = Math.floor(prioritySpace * (dist[i] / maxPrioritySpace || 1));\n            });\n        }\n        return cWidths;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures, heightMeasures) {\n        let i;\n        const { height } = this.availableSpace();\n\n        for (i = 0; i < heightMeasures.length; i++) {\n            if (heightMeasures[i] <= height) break;\n        }\n\n        return Math.min(widthMeasures.length - 1, i);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n        const maxMeasures = this.maxMeasures();\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        const logicalWidths = this.getPriorityDistribution({\n            matrix: this._layoutMatrix,\n            maxWidth,\n            maxMeasures,\n            width,\n            height\n        });\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths, logicalWidths };\n            const measures = this.redistributeViewSpaces(options);\n            maxWidths = measures.maxWidths;\n            maxHeights = measures.maxHeights;\n        });\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let cWidths = [];\n        let rHeights = [];\n        let mHeight = 0;\n        const maxMeasures = this.maxMeasures();\n\n        const {\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        } = this.config();\n        const { matrix, height, maxHeights, maxWidths, logicalWidths } = measures;\n        mHeight = spaceTakenByColumn(matrix, this._lastLevelKey).height;\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        measures.maxMeasures = maxMeasures;\n        measures.maxWidth = maxWidth;\n        if (maxWidth > 0) {\n            cWidths = logicalWidths;\n        } else {\n            cWidths = maxMeasures.map(() => 0);\n        }\n        rHeights = getDistributedHeight({\n            matrix,\n            cIdx: this._lastLevelKey,\n            height: mHeight,\n            availableHeight: height,\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        });\n        if (maxWidths.length > 0) {\n            cWidths = cWidths.map((e, i) => Math.max(e, maxWidths[0][i] || 0));\n        }\n        maxWidths.push(cWidths);\n        for (let x = 0; x < maxWidths.length; x++) {\n            maxWidths[x] = cWidths;\n        }\n        maxHeights.push(rHeights);\n        return { maxWidths, maxHeights };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = maxHeights[matrixIndex][rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth, colHeight - borderWidth);\n\n                if (rIdx === 0 && cIdx < breakPointer) {\n                    columnWidths[0][cIdx] = colWidth;\n                    widths[0] = (widths[0] || 0) + colWidth;\n                } else if (rIdx === 0 && cIdx >= breakPointer) {\n                    columnWidths[1][cIdx - breakPointer] = colWidth;\n                    widths[1] = (widths[1] || 0) + colWidth;\n                }\n                if (cIdx === this._lastLevelKey) {\n                    rowHeights[0][rIdx] = colHeight;\n                    rowHeights[1][rIdx] = colHeight;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    getDistributedWidth,\n    spaceTakenByRow,\n    createMatrixEachLevel,\n    computeLogicalSpace\n  } from '../utils';\nimport { COLUMN_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class ColumnVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = matrix[0].length;\n\n        // Create Tree\n        this._tree = {\n            key: COLUMN_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, true);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height,\n            width\n        } = measures;\n\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i, height };\n            const {\n                heights,\n                rowHeights,\n                columnWidths\n            } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = heights;\n            const columnMeasures = [width, width];\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n\n        tree.matrix = tree.matrix.map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        const {\n            height,\n            maxHeights\n        } = measures;\n        let remainingHeight = height;\n        let heightDist = [];\n        let conditions = [];\n        let divider = 2;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            divider = 2;\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            divider = 1;\n        }\n        maxHeights.forEach((heights, index) => {\n            if (conditions.indexOf(index) === -1) {\n                heightDist[index] = heights;\n                remainingHeight -= heights;\n            }\n        });\n        if (remainingHeight < 0) {\n            heightDist = heightDist.map(() => 0);\n        } else {\n            conditions.forEach((condition) => {\n                heightDist[condition] = Math.min(maxHeights[condition], (remainingHeight) / divider);\n            });\n        }\n        return heightDist;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures) {\n        let j;\n        const { width } = this.availableSpace();\n\n        for (j = 0; j < widthMeasures.length; j++) {\n            if (widthMeasures[j] <= width) break;\n        }\n        return Math.min(widthMeasures.length - 1, j);\n    }\n\n     /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths };\n            const maxMeasures = this.redistributeViewSpaces(options);\n            maxWidths = maxMeasures.maxWidths;\n            maxHeights = maxMeasures.maxHeights;\n        });\n\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space column wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let rHeights = [];\n        const {\n            matrix,\n            width,\n            maxHeights,\n            maxWidths\n        } = measures;\n        const borderWidth = this.config().unitMeasures.border;\n\n        const mWidth = spaceTakenByRow(matrix[this._lastLevelKey]).width;\n        const cWidths = getDistributedWidth({\n            row: matrix[this._lastLevelKey],\n            width: mWidth,\n            availableWidth: width\n        }, this.config());\n\n        matrix.forEach((row, rIdx) => row.forEach((col, cIdx) => {\n            const oldLogicalSpace = col.getLogicalSpace();\n\n            col.setAvailableSpace(cWidths[cIdx] - borderWidth, oldLogicalSpace.height);\n\n            rHeights[rIdx] = Math.max(rHeights[rIdx] || 0, Math.floor(col.getLogicalSpace().height));\n        }));\n        if (maxHeights.length > 0) {\n            rHeights = rHeights.map((e, i) => Math.max(e, maxHeights[0][i]));\n        }\n        maxHeights.push(rHeights);\n        for (let x = 0; x < maxHeights.length; x++) {\n            maxHeights[x] = rHeights;\n        }\n        maxWidths.push(cWidths);\n        return { maxHeights, maxWidths };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, height, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        const heightDistribution = this.getPriorityDistribution({ height, maxHeights: maxHeights[0] || [] });\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = heightDistribution[rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth - borderWidth, colHeight);\n\n                if (cIdx === 0 && rIdx < breakPointer) {\n                    rowHeights[0][rIdx] = colHeight;\n                    heights[0] = (heights[0] || 0) + colHeight;\n                } else if (cIdx === 0 && rIdx >= breakPointer) {\n                    rowHeights[1][rIdx - breakPointer] = colHeight;\n                    heights[1] = (heights[1] || 0) + colHeight;\n                }\n                if (rIdx === this._lastLevelKey) {\n                    columnWidths[0][cIdx] = colWidth;\n                    columnWidths[1][cIdx] = colWidth;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import {\n    HEIGHT, WIDTH, COLUMN, ROW, HORIZONTAL, VERTICAL, HOLISTIC,\n    MAX_WIDTH_AVAIL_FOR_COL_MATRIX, COLUMN_MATRIX, MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX, ROW_MATRIX, SCROLL\n} from '../enums/constants';\n\n/**\n * Gets measurement for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @return {Object} Logical height/width of the matrix\n */\nexport function getMatrixMeasurement (matrix, type) {\n    if (matrix) {\n        return matrix.getLogicalSpace()[type];\n    }\n    return 0;\n}\n\n/**\n * Sets available space for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @param {number} value Value of measurement\n */\nexport function setMatrixMeasurement (matrix, type, value) {\n    if (matrix) {\n        const spaces = matrix.getLogicalSpace();\n        if (value && spaces[type] !== value) {\n            type === HEIGHT ? matrix.setAvailableSpace(spaces.width, value) :\n                matrix.setAvailableSpace(value, spaces.height);\n        }\n    }\n}\n\nconst setAvailableSpace = (matrix, widths, heights) => {\n    matrix.forEach((row, rIdx) => {\n        row.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(widths[cIdx], heights[rIdx]);\n        });\n    });\n};\n\nconst setViewSpaces = (layout, pointerType, viewSpaces) => {\n    let pointer = layout.config()[`${pointerType}Pointer`];\n    if (viewSpaces.length - 1 < pointer) {\n        pointer = 0;\n        layout.config({ [`${pointerType}Pointer`]: pointer });\n    }\n    return pointer;\n};\n\nconst paginationDetailsMap = {\n    column: {\n        maxMeasure: MAX_WIDTH_AVAIL_FOR_COL_MATRIX,\n        matrix: COLUMN_MATRIX,\n        measureType: WIDTH,\n        scrollType: HORIZONTAL\n    },\n    row: {\n        maxMeasure: MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX,\n        matrix: ROW_MATRIX,\n        measureType: HEIGHT,\n        scrollType: VERTICAL\n    }\n};\n\n/**\n * This method provides the required width/height in the different pagination stages.\n * If the pagination is holistic, then only the max width/height will be provided for layouting\n * If scroll is enabled, then the entire width/height shall be provided for layouting\n * Note: width is required for scrolling the columns while height is required for scrolling rows\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {Object} measureDetails different measure details for row/column\n * @param {number} maxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst getMatrixMeasureForPagination = (layout, measureDetails, maxMeasure, buffer) => {\n    const {\n        pagination\n    } = layout.config();\n    const {\n        matrix,\n        measureType,\n        scrollType\n    } = measureDetails;\n\n    switch (pagination) {\n    case HOLISTIC:\n        return maxMeasure;\n    default: {\n        const actualMeasure = getMatrixMeasurement(layout[matrix](), measureType) + buffer;\n\n        if (actualMeasure > maxMeasure) {\n            layout.scrollInfo({ [scrollType]: true });\n        }\n        return Math.max(maxMeasure, actualMeasure);\n    }\n    }\n};\n\n/**\n * This method uses the getMatrixMeasureForPagination function to calculate maximum measure\n * depending on the layouting algorithm used\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {string} matrixType row/column\n * @param {number} relatedMaxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst paginationMeasureGetter = (layout, matrixType, relatedMaxMeasure, buffer) =>\n    getMatrixMeasureForPagination(layout, paginationDetailsMap[matrixType], relatedMaxMeasure, buffer);\n\nconst getMatrixWidthDetails = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const {\n        width\n    } = layout.measurement();\n    const {\n        border,\n        buffer\n    } = layout.config();\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get width of row matrix\n    const rowMatrixWidth = getMatrixMeasurement(rowMatrix, WIDTH);\n\n    // Get maximum width allowed for the row matrix\n    const maxRowMatrixWidth = Math.min(rowMatrixWidth + buffer, width / 2);\n\n    // Get maximum width available for the column matrix\n    const maxWidthAvailableForColumnMatrix = width - maxRowMatrixWidth - borderWidth;\n\n    // Set width for column matrix\n    const columnMatrixWidth = paginationMeasureGetter(layout, COLUMN, maxWidthAvailableForColumnMatrix, 0);\n\n    return {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n\nconst getHeightRequiredByColMatrix = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const columnMatrix = layout.columnMatrix();\n\n    // Get maximum allowed height for colum matrix\n    const maxColumnMatrixHeight = Math.min(columnMatrix.getLogicalSpace().height, height / 2);\n\n    // Set the computed width and max height to column matrix to determine the actual height\n    // that will be taken by the column matrix\n    columnMatrix.setAvailableSpace(columnMatrixWidth, maxColumnMatrixHeight);\n\n    // Get the set of pages column view\n    const columnViewPages = columnMatrix.getViewableSpaces();\n\n    // Figuring out total space needed by current view space\n    const columnViewSpace = columnViewPages[layout.config().columnPointer];\n\n    // Getting height of column matrix\n    const columnMatrixHeight = columnViewSpace.height.primary + columnViewSpace.height.secondary;\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight\n    };\n};\n\nconst getMatrixHeightDetails = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const {\n        buffer\n    } = layout.config();\n\n    // Get actual height required by column matrix\n    const { columnMatrixHeight, maxColumnMatrixHeight } = getHeightRequiredByColMatrix(layout, columnMatrixWidth);\n\n    // Based on column height, compute max height available for row matrix\n    const maxHeightAvailableForRowMatrix = height - Math.min(maxColumnMatrixHeight, columnMatrixHeight);\n\n    // Get height for row matrix\n    const rowMatrixHeight = paginationMeasureGetter(layout, ROW, maxHeightAvailableForRowMatrix, buffer);\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    };\n};\n\nconst setValueMatrixMeasurements = (layout, rowViewableSpaces, columnViewableSpaces) => {\n    const centerMatrix = layout.centerMatrix();\n\n    const {\n        border\n    } = layout.config();\n    const matrices = layout.matrices();\n    const {\n        top,\n        bottom\n    } = matrices;\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get the heights for each cell in the row matrix\n    const rowHeights = [].concat(...rowViewableSpaces.map(e => e.rowHeights.primary));\n\n    // Get the widths for each of the row matrix cells(primary and secondary)\n    const rowWidthsPrimary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.primary));\n    const rowWidthsSecondary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.secondary));\n\n    // Get the widths for each cell in the column matrix\n    const columnWidths = [].concat(...columnViewableSpaces.map(e => e.columnWidths.primary));\n\n    // Get the widths for each of the column matrix cells(primary and secondary)\n    const columnHeightsPrimary = columnViewableSpaces[0].rowHeights.primary;\n    const columnHeightsSecondary = [].concat(...columnViewableSpaces.map(e => e.rowHeights.secondary));\n\n    // Setting the available space for each cell in the centre matrix computed throught the row and\n    // column matrices\n    centerMatrix.forEach((matrix, rIdx) => {\n        matrix.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(columnWidths[cIdx] - borderWidth, rowHeights[rIdx] - borderWidth);\n        });\n    });\n\n    // Set the heights and widths for the corner matrices namely:\n    // TOP_LEFT\n    setAvailableSpace(top[0], rowWidthsPrimary, columnHeightsPrimary);\n    // TOP_RIGHT\n    setAvailableSpace(top[2], rowWidthsSecondary, columnHeightsPrimary);\n    // BOTTOM_LEFT\n    setAvailableSpace(bottom[0], rowWidthsPrimary, columnHeightsSecondary);\n     // BOTTOM_RIGHT\n    setAvailableSpace(bottom[2], rowWidthsSecondary, columnHeightsSecondary);\n};\n\nconst bufferCondition = {\n    isScroll: true,\n    pagination: SCROLL\n};\n\nconst getBufferFromCondition = (layout, type) => {\n    const scrollInfo = layout.scrollInfo();\n    const {\n        pagination\n    } = layout.config();\n\n    const currentBufferType = {\n        pagination,\n        isScroll: scrollInfo[type]\n    };\n\n    return Object.keys(bufferCondition).every(e => bufferCondition[e] === currentBufferType[e]);\n};\n\nconst getActualBufferFromConfig = (layout) => {\n    const {\n        buffer\n    } = layout.config();\n    const [horizontalBuffer, verticalBuffer] = [HORIZONTAL, VERTICAL].map((type) => {\n        if (getBufferFromCondition(layout, type)) {\n            return buffer;\n        }\n        return 0;\n    });\n\n    return {\n        horizontalBuffer,\n        verticalBuffer\n    };\n};\n/**\n * Computes the measurements of space for all matrices in the\n * layout\n *\n * @param {Object} layout Instance of grid layout\n * @return {Object} set of measurements for the layout\n */\nexport const computeLayoutMeasurements = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n\n    // Compute the widths of the row and column matrices\n    const {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        maxWidthAvailableForColumnMatrix,\n        columnMatrixWidth\n    } = getMatrixWidthDetails(layout);\n\n    // Compute the heights of the row and column matrices\n    const {\n        columnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    } = getMatrixHeightDetails(layout, columnMatrixWidth);\n\n    const {\n        horizontalBuffer,\n        verticalBuffer\n    } = getActualBufferFromConfig(layout);\n    rowMatrix.setAvailableSpace(maxRowMatrixWidth - verticalBuffer, rowMatrixHeight - horizontalBuffer);\n\n    // Get row and columns viewable spaces\n    const rowViewableSpaces = rowMatrix.getViewableSpaces();\n    const columnViewableSpaces = columnMatrix.getViewableSpaces();\n\n    // Set view spaces for row and columns\n    setViewSpaces(layout, ROW, rowViewableSpaces);\n    setViewSpaces(layout, COLUMN, columnViewableSpaces);\n\n    // Set measures for each cell of the value matrix\n    setValueMatrixMeasurements(layout, rowViewableSpaces, columnViewableSpaces);\n\n    return {\n        rowMatrixHeight: rowMatrixHeight - horizontalBuffer,\n        rowMatrixWidth: rowMatrixWidth - verticalBuffer,\n        maxHeightAvailableForRowMatrix: maxHeightAvailableForRowMatrix - horizontalBuffer,\n\n        columnMatrixHeight,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n","/**\n * Gets view matrices based on current pointers for row and column\n *\n * @param {Object} layout instance of layout\n * @param {number} rowPointer current row pointer\n * @param {number} columnPointer current column pointer\n * @return {Object} returns the view matrix and its relevant information\n */\nexport const getViewMatrices = (layout, rowPointer, columnPointer) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const centerMatrix = layout.centerMatrix();\n    const matrices = layout.matrices();\n    const rowMatrices = rowMatrix.getViewableMatrices();\n    const columnMatrices = columnMatrix.getViewableMatrices();\n    const centralMatrixPointer = {\n        row: 0,\n        column: 0\n    };\n\n    for (let i = rowPointer - 1; i >= 0; i--) {\n        const length = Math.max(rowMatrices[i].primaryMatrix.length,\n            rowMatrices[i].secondaryMatrix.length);\n        centralMatrixPointer.row += length;\n    }\n     /* istanbul ignore next */\n    for (let i = columnPointer - 1; i >= 0; i--) {\n        const matrix = columnMatrices[i];\n        const { primaryMatrix, secondaryMatrix } = matrix;\n        const length = Math.max(primaryMatrix[0] ? primaryMatrix[0].length : 0,\n            secondaryMatrix[0] ? secondaryMatrix[0].length : 0);\n        centralMatrixPointer.column += length;\n    }\n\n    matrices.top[1] = columnMatrices[columnPointer].primaryMatrix;\n    matrices.bottom[1] = columnMatrices[columnPointer].secondaryMatrix;\n\n    matrices.center[0] = rowMatrices[rowPointer].primaryMatrix;\n    matrices.center[2] = rowMatrices[rowPointer].secondaryMatrix;\n\n    const rowMatrixLen = Math.max(matrices.center[0].length, matrices.center[2].length);\n     /* istanbul ignore next */\n    const columnMatrixLen = Math.max(matrices.top[1][0] ? matrices.top[1][0].length : 0, matrices.bottom[1][0] ?\n            matrices.bottom[1][0].length : 0);\n    matrices.center[1] = centerMatrix.slice(centralMatrixPointer.row, centralMatrixPointer.row + rowMatrixLen)\n        .map(matrix => matrix.slice(centralMatrixPointer.column, centralMatrixPointer.column + columnMatrixLen));\n\n    return {\n        matrices,\n        rowPages: rowMatrices.length,\n        columnPages: columnMatrices.length\n    };\n};\n\nconst measureSum = measureArr => measureArr.reduce((total, measure) => total + measure, 0);\n/**\n * Returns measurements of the cells of the current matrix\n *\n * @param {Object} layout instance of layout\n * @return {Object} returns the measurements for current view matrix\n */\nexport const getViewMeasurements = (layout, maxRowHeight, maxColWidth) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const {\n        columnPointer,\n        rowPointer\n    } = layout.config();\n\n    const rowSpaces = rowMatrix.getViewableSpaces()[rowPointer];\n    const colSpaces = columnMatrix.getViewableSpaces()[columnPointer];\n\n    const {\n        rowHeights,\n        width: rowMatrixWidth\n    } = rowSpaces;\n    const {\n        columnWidths,\n        height: columnMatrixHeight\n    } = colSpaces;\n\n    const { primary: leftWidth, secondary: rightWidth } = rowMatrixWidth;\n    const { primary: topHeight, secondary: bottomHeight } = columnMatrixHeight;\n\n    const centerHeight = measureSum(rowHeights.primary);\n    const centerWidth = measureSum(columnWidths.primary);\n    const viewWidth = [leftWidth, Math.min(centerWidth, maxColWidth), rightWidth];\n    const viewHeight = [topHeight, Math.min(centerHeight, maxRowHeight), bottomHeight];\n\n    return {\n        viewWidth,\n        viewHeight,\n        actualCenterMeasures: {\n            height: centerHeight,\n            width: centerWidth\n        },\n        totalMeasures: {\n            width: measureSum(viewWidth),\n            height: measureSum(viewHeight)\n        },\n        unitHeights: rowHeights,\n        unitWidths: columnWidths\n    };\n};\n","/**\n * This file declares a table that can be extended to create a Datagrid, crosstab\n * and man other visualzations that require a tabular structure.\n */\n\nimport { getUniqueId, mergeRecursive } from 'muze-utils';\nimport GenericLayout from '../generic-layout';\nimport { DEFAULT_CONFIGURATION, DEFAULT_MEASUREMENTS } from './defaults';\nimport { generateVisualMatrices } from './layout-helper';\nimport { computeLayoutMeasurements } from './computations';\nimport { getViewMeasurements, getViewMatrices } from './view-info-getter';\n/**\n * This class is used to create a tabular structure that\n * can house charts and values.\n *\n * @class GridLayout\n */\nexport default class GridLayout extends GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} matrices Set of upto 9 matrices containing the cells to be rendered\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config external configurations.\n     * @memberof GenericLayout\n     */\n    constructor (matrices, mountPoint, measurement, config) {\n        super(mountPoint, measurement, config);\n        this.matrices(matrices);\n        this.config(this.constructor.defaultConfig());\n        this._layoutId = getUniqueId();\n        this._scrollInfo = { horizontal: false, vertical: false };\n    }\n\n    static defaultViewInfo () {\n        return Object.assign({}, {\n            layoutDimensions: {\n                border: this.defaultConfig().border,\n                viewHeight: [0, 0, 0],\n                viewWidth: [0, 0, 0]\n            },\n            viewMatricesInfo: {\n                columnPages: 0,\n                rowPages: 0,\n                matrices: { top: [], center: [], bottom: [] }\n            }\n        });\n    }\n\n    /**\n     * Returns initial set of measurements for the grid layout\n     *\n     * @static\n     * @return {Object} Returns initial set of measurements\n     * @memberof GridLayout\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENTS;\n    }\n\n    /**\n     * Returns initialconfiguration for grid layout\n     *\n     * @static\n     * @return {Object} Returns initial configuration for grid layout\n     * @memberof GridLayout\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIGURATION;\n    }\n\n    /**\n     * This function is used to return an instance of GridLayout\n     *\n     * @return {GridLayout} Instance of grid layout.\n     * @static\n     * @memberof GridLayout\n     */\n    static create () {\n        return new GridLayout(null, null, this.defaultMeasurement(), this.defaultConfig());\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     *\n     * @param {Array} matrices Set of matrices\n     * @return {Object} Getter/Setter\n     * @memberof GridLayout\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = generateVisualMatrices(this, matrices);\n            return this;\n        }\n        return super.matrices(matrices);\n    }\n\n    /**\n     * Triggers the computations for the layout based on the matrices available\n     * This causes a reflow in the entire layout system.\n     *\n     * @return {Object} Layout instance\n     * @memberof GridLayout\n     */\n    triggerReflow () {\n        this.scrollInfo({ horizontal: false, vertical: false });\n        const {\n            maxHeightAvailableForRowMatrix,\n            maxWidthAvailableForColumnMatrix\n        } = computeLayoutMeasurements(this);\n\n        this.setViewInformation(maxHeightAvailableForRowMatrix, maxWidthAvailableForColumnMatrix);\n        return this;\n    }\n\n    gotoPage (type, pageNumber) {\n        const pageType = type.toLowerCase();\n        const { viewMatricesInfo } = this.viewInfo();\n        const totalPages = viewMatricesInfo[`${pageType}Pages`];\n        const pointer = Math.min(Math.max(1, pageNumber), totalPages);\n        this.config({\n            [`${pageType}Pointer`]: pointer - 1\n        });\n        this.setViewInformation();\n        this.renderGrid();\n        return this;\n    }\n\n    pages (type) {\n        const { viewMatricesInfo } = this.viewInfo();\n        const pageType = type.toLowerCase();\n        return {\n            totalPages: viewMatricesInfo[`${pageType}Pages`],\n            currentPage: this.config()[`${pageType}Pointer`] + 1\n        };\n    }\n\n    viewInfo (...viewInfo) {\n        if (viewInfo.length) {\n            this._viewInfo = viewInfo[0];\n            return this;\n        }\n        return this._viewInfo;\n    }\n\n    scrollInfo (...scrollInfo) {\n        if (scrollInfo.length) {\n            this._scrollInfo = mergeRecursive(this._scrollInfo, scrollInfo[0]);\n            return this;\n        }\n        return this._scrollInfo;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof GridLayout\n     */\n    setViewInformation (maxRowHeight, maxColWidth) {\n        const {\n            rowPointer,\n            columnPointer,\n            border\n        } = this.config();\n        const viewMatricesInfo = getViewMatrices(this, rowPointer, columnPointer);\n        const layoutDimensions = getViewMeasurements(this, maxRowHeight, maxColWidth);\n        layoutDimensions.border = border;\n        this.viewInfo({\n            viewMatricesInfo,\n            layoutDimensions\n        });\n        return this;\n    }\n}\n","import RowMatrix from '../visual-matrix/row-matrix';\nimport ColumnMatrix from '../visual-matrix/column-matrix';\n\nexport const generateVisualMatrices = (context, matrices) => {\n    // Set of matrices for layout is generated starting with the left matrix\n    let leftMatrix = [];\n    let rightMatrix = [];\n    let topMatrix = [];\n    let bottomMatrix = [];\n    let begColCells;\n    let endColCells;\n    const {\n        isRowSizeEqual,\n        isColumnSizeEqual,\n        gutterSpace,\n        distribution,\n        border,\n        breakPage,\n        priority\n    } = context.config();\n    const {\n        minUnitHeight,\n        minUnitWidth\n    } = context.measurement();\n    const { top, center, bottom } = matrices;\n    const [topLeft, topColumns, topRight] = top;\n    const [leftRows, valueMatrix, rightRows] = center;\n    const [bottomLeft, bottomColumns, bottomRight] = bottom;\n\n    if (leftRows.length > 0) {\n        // If no left matrix is present, context will be empty\n        leftMatrix = [...topLeft, ...leftRows, ...bottomLeft];\n    }\n    if (rightRows.length > 0) {\n        // If no right matrix is present, context will be empty\n        rightMatrix = [...topRight, ...rightRows, ...bottomRight];\n    }\n    if (topColumns.length > 0 && topColumns[0].length > 0) {\n        // If no top matrix is present, context will be empty\n        topMatrix = topColumns.map((d, i) => [...topLeft[i], ...d, ...topRight[i]]);\n    }\n    if (bottomColumns.length > 0 && bottomColumns[0].length > 0) {\n        // If no bottom matrix is present, context will be empty\n        bottomMatrix = bottomColumns.map((d, i) => [...bottomLeft[i], ...d, ...bottomRight[i]]);\n    }\n\n    context.rowMatrix(new RowMatrix([leftMatrix, rightMatrix], {\n        isDistributionEqual: isRowSizeEqual,\n        distribution: distribution.rows,\n        gutter: gutterSpace.rows,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.row,\n        breakPage: breakPage.rows.map(e => e + Math.max(topLeft.length, topRight.length)),\n        extraCellLengths: [topLeft.length, bottomLeft.length]\n    }));\n\n    if (topLeft.length > 0) {\n        begColCells = topLeft[0].length;\n    } else {\n        begColCells = bottomLeft.length > 0 ? bottomLeft[0].length : 0;\n    }\n\n    if (topRight.length > 0) {\n        endColCells = topRight[0].length;\n    } else {\n        endColCells = bottomRight.length > 0 ? bottomRight[0].length : 0;\n    }\n\n    context.columnMatrix(new ColumnMatrix([topMatrix, bottomMatrix], {\n        isDistributionEqual: isColumnSizeEqual,\n        distribution: distribution.columns,\n        gutter: gutterSpace.columns,\n        isTransposed: true,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.col,\n        breakPage: breakPage.columns,\n        extraCellLengths: [begColCells, endColCells]\n    }));\n    context.centerMatrix(valueMatrix);\n\n    return matrices;\n};\n","import {\n    TOP, BOTTOM, LEFT, RIGHT, CENTER, BLANK_BORDERS, COLUMN, ROW,\n    VIEW_INDEX, ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, MIDDLE, NO_BORDERS\n} from '../enums/constants';\n\nconst borderMap = {\n    [`${TOP}-${LEFT}`]: NO_BORDERS,\n    [`${TOP}-${MIDDLE}`]: COLUMN,\n    [`${TOP}-${RIGHT}`]: NO_BORDERS,\n    [`${CENTER}-${LEFT}`]: ROW,\n    [`${CENTER}-${MIDDLE}`]: CENTER,\n    [`${CENTER}-${RIGHT}`]: ROW,\n    [`${BOTTOM}-${LEFT}`]: NO_BORDERS,\n    [`${BOTTOM}-${MIDDLE}`]: COLUMN,\n    [`${BOTTOM}-${RIGHT}`]: NO_BORDERS\n};\n\nconst applySpecificBorder = (cells, color, type, style) => {\n    cells.style(`border-${type}`, `${style} ${color}`);\n};\n\nconst specificBorderApplier = (borderTypes, showBorders, cells, borderInfo) => {\n    const {\n        color,\n        width,\n        style\n    } = borderInfo;\n    const borderStyle = `${width}px ${style}`;\n\n    borderTypes.forEach((borderType) => {\n        applySpecificBorder(cells, showBorders[borderType] ? color : BLANK_BORDERS, borderType, borderStyle);\n    });\n};\n\nconst borderApplier = (cells, borderInfo) => {\n    const {\n       showRowBorders,\n      showColBorders,\n      showValueBorders\n  } = borderInfo;\n    return {\n        row: () => specificBorderApplier([TOP, BOTTOM], showRowBorders, cells, borderInfo),\n        column: () => specificBorderApplier([LEFT, RIGHT], showColBorders, cells, borderInfo),\n        center: () => specificBorderApplier([LEFT, RIGHT, TOP, BOTTOM], showValueBorders, cells, borderInfo)\n    };\n};\n\nexport const applyBorders = (cells, border, row, column) => {\n    const borderApplierFn = borderApplier(cells, border);\n    const borderMapVal = borderMap[`${ROW_MATRIX_INDEX[VIEW_INDEX[row]]}-${COLUMN_MATRIX_INDEX[column]}`];\n    if (borderMapVal) {\n        borderApplierFn[borderMapVal]();\n    }\n};\n","import { selectElement } from 'muze-utils';\nimport {\n     TOP, BOTTOM, ROW_SPAN, COL_SPAN, CENTER, ROW, COLUMN\n} from '../enums/constants';\n\nconst orderMaker = arr => Array.from(Array(arr.length).keys());\n\nconst nestByStack = (stack, updateArr, optionalParams = {}) => {\n    let {\n        order,\n        keyFn\n    } = optionalParams;\n    const arr = updateArr.slice();\n    const currStack = stack.slice();\n    const prevStack = currStack.slice();\n    // Order in which element are to be checked for nesting, default normal looping\n    // Order is always in the order of nest, i.e., left to right\n    order = order || Array.from(Array(arr.length).keys());\n\n    // Key function, if array of objects\n    keyFn = keyFn || (v => v);\n\n    // Return same array if stack is empty\n    if (currStack.length === 0) {\n        const newArr = [];\n        order.forEach((e) => {\n            newArr.push(arr[e]);\n        });\n        return { prevStack, currStack: arr, arr: newArr };\n    }\n\n    let arrVal = '';\n    let stackVal = '';\n    const newArr = [];\n\n    // Loop in order\n    for (let i = order.length - 1; i >= 0; i--) {\n        // Get current element index from the order given\n        const currElemIndex = order[i];\n\n        // Crete a hashmap for the hierarchy by joining strings of the array for both stack and input array\n        arrVal += keyFn(arr[currElemIndex]);\n        stackVal += keyFn(currStack[currElemIndex]);\n\n        // If the current value and value in stack is same, convert it to null\n        if (arrVal === stackVal) {\n            newArr[currElemIndex] = null;\n        } else {\n            stackVal = '';\n            // Loop from the current index in order to the last element in order to change the\n            // whole hierarchy\n            for (let j = i; j < order.length; j++) {\n                const newElem = order[j];\n                const arrElem = arr[newElem];\n\n                newArr[newElem] = arrElem;\n\n                // Reset stack to new stack\n                currStack[newElem] = arrElem;\n                stackVal = arrVal;\n            }\n        }\n    }\n    const returnArr = [];\n    order.forEach((e) => {\n        returnArr.push(newArr[e]);\n    });\n    return { prevStack, currStack, arr: returnArr };\n};\n\nconst spanCalculator = (colData, colIdx, matrix, rIdx) => {\n    // if data is not header cell then rowspan\n    // has to be 1\n    if (!colData) {\n        return () => null;\n    }\n\n    const conditions = {\n        row: count => matrix[rIdx + count] && matrix[rIdx + count][colIdx],\n        column: count => matrix[rIdx][colIdx + count]\n    };\n\n    return (type) => {\n        let count = 1;\n        let isNull = false;\n\n        while (!isNull) {\n            if (conditions[type](count) === null) {\n                count += 1;\n            } else {\n                isNull = true;\n            }\n        }\n        return count;\n    };\n};\n\nconst maskCreator = (matrix, order) => ({\n    row: () => {\n        let stack = [];\n        return matrix.map((e) => {\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, e, { keyFn: val => val.valueOf(), order });\n\n            stack = currStack;\n            return arr;\n        });\n    },\n    column: () => {\n        let stack = [];\n        const viewMatrix = [];\n        matrix.length && matrix[0].forEach((cell, colIndex) => {\n            const hierarchy = [];\n            matrix.forEach((row) => {\n                hierarchy.push(row[colIndex]);\n            });\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, hierarchy, { keyFn: val => val.valueOf(), order });\n            stack = currStack;\n\n            matrix.forEach((row, rowIndex) => {\n                viewMatrix[rowIndex] = viewMatrix[rowIndex] || [];\n                viewMatrix[rowIndex][colIndex] = arr[rowIndex];\n            });\n        });\n        return viewMatrix;\n    }\n});\n\nconst spanGenerator = viewMatrix => ({\n    row: () => {\n        const spans = [];\n        viewMatrix.forEach((row, ridx) => {\n            spans[ridx] = spans[ridx] || [];\n            row.forEach((col, i) => {\n                if (viewMatrix[ridx][i]) {\n                    const currSpan = spanCalculator(col, i, viewMatrix, ridx)('row');\n                    currSpan && spans[ridx].push(currSpan);\n                }\n            });\n        });\n        return spans;\n    },\n    column: () => viewMatrix.map((row, ridx) => row.map((col, i) => spanCalculator(col, i, viewMatrix, ridx)('column'))\n                    .filter(col => col !== null))\n});\n\nconst getOrder = () => ({\n    row: matrix => orderMaker(matrix[0]),\n    column: matrix => orderMaker(matrix)\n});\n\nconst matrixSpanGeneratorMap = {\n    [`${TOP}-1`]: {\n        orderGetter: getOrder()[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${BOTTOM}-1`]: {\n        orderGetter: getOrder()[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${CENTER}-0`]: {\n        orderGetter: getOrder()[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    },\n    [`${CENTER}-2`]: {\n        orderGetter: getOrder()[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    }\n};\n\nconst matrixSpanGenerator = (type) => {\n    const generator = matrixSpanGeneratorMap[type];\n    if (generator) {\n        return generator;\n    }\n    return {\n        orderGetter: () => null,\n        viewMatrixMaker: matrix => () => matrix,\n        spanMaker: () => () => null\n    };\n};\n\n/**\n * This function is used to set the col and row spans\n * for the matrices based on repeated/hierarchichal data\n *\n * @export\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {string} type Type of array (center, top, bottom)\n * @param {number} index Index of array in the row\n * @return {Object} containing the view matrix and their spans\n */\nexport function cellSpanMaker (matrix, type, index) {\n    let spans = null;\n    let viewMatrix = matrix;\n    const {\n        orderGetter,\n        viewMatrixMaker,\n        spanMaker\n    } = matrixSpanGenerator(`${type}-${index}`);\n\n    if (matrix.length) {\n        const order = orderGetter(matrix);\n        viewMatrix = viewMatrixMaker(matrix, order)();\n        spans = spanMaker(viewMatrix)();\n    }\n    return { viewMatrix, spans };\n}\n\nconst spaceAllocationDueToSpan = (span = 1, placeholder, config, index) => {\n    const height = placeholder.availHeight();\n    const width = placeholder.availWidth();\n    const borderWidth = config.border.width;\n    const { unitWidths } = config.dimensions;\n    const { col } = index;\n\n    return {\n        [ROW_SPAN] () {\n            placeholder.setAvailableSpace(width, height * span);\n            if (span === 1) {\n                selectElement(this).style('height', `${height * span + borderWidth}px`);\n            }\n        },\n        [COL_SPAN] () {\n            const primaryUnitWidth = unitWidths.primary[col];\n            if (span > 1) {\n                let cumulativeWidth = 0;\n                for (let i = col; i < col + span; i++) {\n                    cumulativeWidth += unitWidths.primary[i] - borderWidth;\n                }\n                placeholder.setAvailableSpace(cumulativeWidth + borderWidth, height);\n            } else if (primaryUnitWidth) {\n                placeholder.setAvailableSpace(primaryUnitWidth - borderWidth, height);\n            }\n            selectElement(this).style('height', `${height}px`);\n        }\n    };\n};\n\nconst spanApplier = (cells, spans, config, type) => {\n    let cellCounter = 0;\n    cells.attr(type, function (cell, colIndex) {\n        if (colIndex === 0) {\n            cellCounter = 0;\n        }\n        const span = spans[cell.rowIndex][colIndex];\n        const placeholder = cell.placeholder;\n        const index = {\n            row: cell.rowIndex,\n            col: cellCounter\n        };\n\n        spaceAllocationDueToSpan(span, placeholder, config, index)[type].bind(this)();\n        cellCounter += span;\n        return span;\n    });\n};\n\nconst spanApplierMap = {\n    [`${TOP}-0`]: null,\n    [`${TOP}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${TOP}-2`]: null,\n    [`${CENTER}-0`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${CENTER}-1`]: null,\n    [`${CENTER}-2`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${BOTTOM}-0`]: null,\n    [`${BOTTOM}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${BOTTOM}-2`]: null\n};\n\nexport const applySpans = (cells, spans, config, type) => {\n    const applier = spanApplierMap[type];\n    if (applier) {\n        applier(cells, spans, config);\n    }\n};\n","import { ERROR_MSG } from 'muze-utils';\n/**\n * An Interface to be implemented if the transaction support is necessary. This class ensures reactivity to\n * global properties.\n */\nexport default class TransactionSupport {\n    /**\n     * Property accessor for data member of the class. Data is passed to the system by calling this method.\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for width of the class. Width is passed as an integer.\n     */\n    width () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for height of the class. Height is passed as an integer.\n     */\n    height () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for config of the class. Config is passed as an object.\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n}\n","import { TOP, BOTTOM, LEFT, TITLE, SUB_TITLE, GROUP, LAYOUT, LEGEND } from '../constants';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const arrangeComponents = (context) => {\n    const legendConfig = context.config().legend;\n    const titleConfig = context.title()[1];\n    const subtitleConfig = context.subtitle()[1];\n    const titleLayouts = {\n        [`${TOP}-${TOP}`]: [TITLE, SUB_TITLE, GROUP],\n        [`${BOTTOM}-${BOTTOM}`]: [GROUP, SUB_TITLE, TITLE],\n        [`${TOP}-${BOTTOM}`]: [TITLE, GROUP, SUB_TITLE],\n        [`${BOTTOM}-${TOP}`]: [SUB_TITLE, GROUP, TITLE]\n    };\n    const legendLayouts = [\n        [LEGEND, LAYOUT],\n        [LAYOUT, LEGEND]\n    ];\n    const titlePosition = titleConfig.position || TOP;\n    const subtitlePosition = subtitleConfig.position || TOP;\n\n    return {\n        headers: titleLayouts[`${titlePosition}-${subtitlePosition}`],\n        legends: legendConfig.position === LEFT || legendConfig.position === TOP ?\n        legendLayouts[0] : legendLayouts[1]\n    };\n};\n","/**\n * Flag to specify whether direction is vertical.\n */\nexport const MARGIN = 'margin';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const SPACE_FIXER = 'spaceFixer';\nexport const CLASSPREFIX = 'muze';\nexport const VERTICAL_ALIGN = 'verticalAlign';\nexport const TEXT_ALIGN = 'textAlign';\nexport const IS_OFFSET = 'isOffset';\nexport const MIDDLE = 'middle';\nexport const BASELINE = 'baseline';\nexport const SHOW = 'show';\nexport const CENTER = 'center';\nexport const TEXT = 'text';\nexport const HEADER = 'header';\nexport const HEIGHT = 'height';\nexport const WIDTH = 'width';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const FIELDS = 'fields';\nexport const TRANSFORM = 'transform';\nexport const LAYER_DEF = 'layerDef';\nexport const CONFIG = 'config';\nexport const DETAIL_FIELDS = 'detailFields';\nexport const MAX_LINES = 'maxLines';\nexport const MIN_CHARS = 'minCharacters';\nexport const ROTATION = 'rotation';\n\nexport const TEXT_CELL = 'text-cell';\nexport const AXIS_CELL = 'axis-cell';\nexport const GEOM_CELL = 'geom-cell';\nexport const BLANK_CELL = 'blank-cell';\n","// eneum to refer to simple cell\nexport const SIMPLE = 'simple';\n// eneum to refer to header cell\nexport const TEXT = 'text';\n// enum to refer to axis cell\nexport const AXIS = 'axis';\n// enum to refer to visual cell\nexport const GEOM = 'geom';\n// enum to refer blank cell\nexport const BLANK = 'blank';\n","import {\n    ERROR_MSG,\n    getUniqueId,\n    mergeRecursive\n} from 'muze-utils';\nimport { SIMPLE } from './enums/cell-type';\n\n/**\n * This file declares a class that is used as an interface to create new\n * SimpleCell elements.\n * @module SimpleCell\n */\n/**\n * Base class for all table cells.\n *\n * @interface\n * @class SimpleCell\n */\nclass SimpleCell {\n\n    /**\n     * Creates an instance of SimpleCell.\n     *\n     * @param {*} config The input configuration.\n     * @memberof SimpleCell\n     */\n    constructor (config) {\n        this._id = getUniqueId();\n\n        const defConfig = mergeRecursive({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(defConfig, config || {});\n\n        this._mount = null;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     */\n    get type () {\n        return SIMPLE;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     * @return {Object} Default config for the placeholder\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the value contained by the SimpleCell.\n     *\n     * @memberof SimpleCell\n     */\n    valueOf () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a unique identifier for the instance used\n     * to control selective rendering.\n     *\n     * @memberof SimpleCell\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized representation of the instance.\n     *\n     * @memberof SimpleCell\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns an object with width and height fields\n     * specifying the space taken up by this metod.\n     *\n     * @memberof SimpleCell\n     */\n    getLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Method used to set the space available to render the SimpleCell\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @memberof SimpleCell\n     */\n    setAvailableSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    remove () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getMinMeasures (providedMinMeasure = 0) {\n        return providedMinMeasure;\n    }\n\n}\n\nexport default SimpleCell;\n","/**\n * This file exports variables that are used as defaults for\n * the placeholders\n */\nimport * as CONSTANTS from './constants';\n\n /**\n * Default Configuration for the cells\n * @return {Object} Default configuration\n */\nexport const DEFAULT_CONFIG = {\n    [CONSTANTS.MARGIN]: {\n        [CONSTANTS.LEFT]: 0,\n        [CONSTANTS.RIGHT]: 0,\n        [CONSTANTS.TOP]: 0,\n        [CONSTANTS.BOTTOM]: 0\n    },\n    [CONSTANTS.SPACE_FIXER]: 2,\n    [CONSTANTS.IS_OFFSET]: false,\n    [CONSTANTS.VERTICAL_ALIGN]: null,\n    [CONSTANTS.TEXT_ALIGN]: CONSTANTS.CENTER,\n    [CONSTANTS.SHOW]: true,\n    [CONSTANTS.MAX_LINES]: 0,\n    [CONSTANTS.MIN_CHARS]: 0,\n    [CONSTANTS.ROTATION]: null\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { GEOM, TEXT, AXIS, BLANK } from './enums/cell-type';\n\nconst DEFAULT_PROPS = {\n    mount: {},\n    availHeight: {},\n    availWidth: {},\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config, value)\n    },\n    logicalSpace: {},\n    minSpacing: {},\n    source: {}\n};\n\nconst geomProps = {\n    data: {},\n    caption: {},\n    config: {},\n    axes: {},\n    facetByFields: {},\n    fields: {},\n    transform: {},\n    layerDef: {},\n    detailFields: {}\n};\n\nconst textProps = {\n    smartText: {}\n};\nexport const PROPS = {\n    [GEOM]: mergeRecursive(geomProps, DEFAULT_PROPS),\n    [TEXT]: mergeRecursive(textProps, DEFAULT_PROPS),\n    [AXIS]: DEFAULT_PROPS,\n    [BLANK]: DEFAULT_PROPS\n};\n","/**\n * This file declares a class that represents a table cell\n * used to house an axis.\n * @module VisualCell\n */\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport { CLASSPREFIX, HEIGHT, WIDTH, AXIS_CELL, BOTTOM, TOP } from './enums/constants';\nimport SimpleCell from './simple-cell';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { AXIS } from './enums/cell-type';\nimport { PROPS } from './props';\n\n/**\n * Computes the logical space of the an axis instance within an axis cell\n *\n * @param {Object} context Required to get the needed parameters to compute axis space\n * @return {Object} Returns the logical space for axis\n */\nconst computeAxisSpace = (context) => {\n    let logicalWidth;\n    let logicalHeight;\n    const axis = context.source();\n    const {\n        spaceFixer,\n        margin\n    } = context.config();\n    const {\n        width,\n        height\n    } = axis.getLogicalSpace();\n    const {\n            show\n        } = axis.config();\n    if (show === true) {\n        logicalHeight = Math.floor(height + margin.top + margin.bottom + spaceFixer);\n        logicalWidth = Math.floor(width + margin.left + margin.right + spaceFixer);\n    } else {\n        [logicalWidth, logicalHeight] = [width, height];\n    }\n    return {\n        width: logicalWidth,\n        height: logicalHeight\n    };\n};\n\n/**\n * Represents an axis cell.\n *\n * @class Axis\n */\nclass AxisCell extends SimpleCell {\n\n    /**\n     * Creates an instance of AxisCell.\n     *\n     * @param {Object} config The input config.\n     * @memberof AxisCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._axis = null;\n        this._availHeight = null;\n        this._availWidth = null;\n        this._logicalSpace = null;\n\n        generateGetterSetters(this, PROPS[AXIS]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof AxisCell\n     */\n    get type () {\n        return AXIS;\n    }\n\n    /**\n     * This method return the value conatined by this SimpleCell.\n     *\n     * @return {SimpleAxis | ColorAxis} Instance of SimpleAxis or ColorAxis.\n     * @memberof AxisCell\n     */\n    valueOf () {\n        return this.source().id;\n    }\n\n    /**\n     * This method return the unique identififer of the axis\n     *\n     * @return {string} Id of the axis.\n     * @memberof AxisCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Retrns the serialized representation of this cell.\n     *\n     * @return {Object}Object with serializable props.\n     * @memberof AxisCell\n     */\n    serialize () {\n        return {\n            type: AXIS,\n            axis: this.source().serialize()\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof AxisCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * return the space taken up by an axis element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof AxisCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeAxisSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @return {Instance} Returns current Instance\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        const {\n            margin,\n            isOffset\n        } = this.config();\n\n        if (width || height) {\n            this.source().setAvailableSpace(width, height, margin, isOffset);\n            this.source().logicalSpace(null);\n        } else {\n            this.source().resetLogicalSpace();\n        }\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the axis inside the axis cell.\n     *\n     * @param {HTMLElement} mount The mount point.\n     * @return {Selection} node where axis mounted\n     * @memberof AxisCell\n     */\n    /* istanbul ignore next */render (mount) {\n        if (!mount) {\n            return this;\n        }\n        let actualWidth = 0;\n        let actualHeight = 0;\n        const axis = this.source();\n        const availHeight = this.availHeight();\n        const availWidth = this.availWidth();\n        const {\n            margin\n        } = this.config();\n        const {\n            top,\n            bottom,\n            left,\n            right\n        } = margin;\n        const {\n            show,\n            orientation\n        } = axis.config();\n        const wrapperDiv = makeElement(selectElement(mount), 'div', [this], `${CLASSPREFIX}-${AXIS_CELL}`);\n        const selection = makeElement(wrapperDiv, 'svg', [1], `${CLASSPREFIX}-axis-container`);\n        selection.classed(`${CLASSPREFIX}-axis-container-${orientation}`, true);\n\n        this.mount(mount);\n        if (!availWidth) {\n            selection.attr(WIDTH, `${0}px`);\n        }\n        if (!availHeight) {\n            selection.attr(HEIGHT, `${0}px`);\n        }\n        actualWidth = availWidth;\n        actualHeight = availHeight;\n        if (!show) {\n            actualWidth = (orientation === TOP || orientation === BOTTOM) ? availWidth : 0;\n            actualHeight = (orientation === TOP || orientation === BOTTOM) ? 0 : availHeight;\n        }\n        wrapperDiv.style(WIDTH, `${actualWidth}px`)\n                        .style(HEIGHT, `${actualHeight}px`)\n                        .style('margin-top', top)\n                        .style('margin-bottom', bottom)\n                        .style('margin-left', left)\n                        .style('margin-right', right);\n\n        axis.mount(selection.node());\n        return selection;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Current instance of AxisCell\n     * @memberof AxisCell\n     */\n    remove () {\n        this.source() && this.source().remove();\n        this.mount() && this.mount().remove();\n        return this;\n    }\n}\n\nexport default AxisCell;\n\n","/**\n * This file declares a class that represents a BLANK element in a  table.\n * @module VisualCell\n */\nimport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    generateGetterSetters\n    } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { CLASSPREFIX, BLANK_CELL } from './enums/constants';\nimport { BLANK } from './enums/cell-type';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { PROPS } from './props';\n\n/**\n * Represents a table haeder.\n *\n * @class BLANK\n */\nclass BlankCell extends SimpleCell {\n\n    /**\n     * Creates an instance of BLANK.\n     * @param {Object} config The input configuration.\n     * @memberof BLANK\n     */\n    constructor (config) {\n        super(config);\n\n        generateGetterSetters(this, PROPS[BLANK]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof BlankCell\n     */\n    get type () {\n        return BLANK;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof BlankCell\n     */\n    valueOf () {\n        return this.id;\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof BlankCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the BLANK cell.\n     *\n     * @return {string} The unique identifier for the BLANK.\n     * @memberof BlankCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof BLANK\n     */\n    serialize () {\n        return {\n            type: BLANK\n        };\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof BLANK\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            return {\n                width: this.width || 0,\n                height: this.height || 0\n            };\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the BLANK cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof BLANK\n     */\n    /* istanbul ignore next */render (mount) {\n        if (mount) {\n            const { style } = this.config();\n            // append span element to mount point\n            this.mount(mount);\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id]);\n            elem.classed(`${CLASSPREFIX}-${BLANK_CELL}`, true);\n            elem.style('width', `${this.availWidth()}px`);\n            elem.style('height', `${this.availHeight()}px`);\n            elem.html('');\n            // apply style on the returned element\n            if (style) {\n                applyStyle(elem, style);\n            }\n        } return this;\n    }\n\n    /**\n     * Removes the cell(Disposal)\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n\n    getMinMeasures () {\n        return 0;\n    }\n }\nexport default BlankCell;\n","/**\n * This file declares a class that represents a Text element in a  table.\n * @module VisualCell\n */\n\nimport {\n    selectElement,\n    makeElement,\n    getSmartComputedStyle,\n    generateGetterSetters\n} from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { TEXT } from './enums/cell-type';\nimport { PROPS } from './props';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { CLASSPREFIX, TOP, BOTTOM, LEFT, RIGHT, HEADER, WIDTH, TEXT_CELL } from './enums/constants';\nimport './text-cell.scss';\n\nconst setSmartText = (context) => {\n    const source = context.source();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       rotation\n   } = context.config();\n    const {\n        left,\n        right,\n        top,\n        bottom\n     } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const labelManager = context.dependencies().labelManager;\n\n    labelManager.setStyle(context._computedStyle);\n\n    !rotation && context.smartText(labelManager.getSmartText(source, availWidth, availHeight, false));\n    rotation && context.smartText(labelManager.getSmartText(source, availHeight, availWidth, true));\n\n    return context;\n};\n\n/**\n* Computes the Logical Space for the text\n*\n* @param {Object} context Required to get the needed parameters to compute text space\n* @return {Object} Logical space taken up by text\n* @memberof TextCell\n*/\nconst computeTextSpace = (context) => {\n    const { labelManager } = context.dependencies();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       show,\n       maxLines,\n       minCharacters\n   } = context.config();\n    const {\n       left,\n       right,\n       top,\n       bottom\n    } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const source = context.source();\n    const space = context.smartText();\n    const minText = new Array(minCharacters).fill('W').join('');\n    const _minTextSpace = labelManager.getOriSize(minText);\n\n    context.config({ rotation: false });\n    if (space.width > (availWidth || 0) && maxLines) {\n        space.height = space.oriTextHeight * maxLines;\n    }\n    if (availWidth && availWidth < space.width) {\n        space.width = _minTextSpace.width;\n    }\n    if (availWidth && availWidth < Math.min(_minTextSpace.width, space.oriTextWidth)) {\n        const smartSpace = labelManager.getSmartText(source, availHeight, _minTextSpace.height, true);\n        space.width = smartSpace.height;\n        space.height = smartSpace.width;\n        context.config({ rotation: true });\n        context.smartText(smartSpace);\n    }\n\n    if (show) {\n        return {\n            width: Math.ceil(space.width) + paddedWidth,\n            height: Math.ceil(space.height) + paddedHeight\n        };\n    } return {\n        width: 0,\n        height: 0\n    };\n};\n\n/**\n * Represents a table haeder.\n *\n * @class Text\n */\nclass TextCell extends SimpleCell {\n\n    /**\n     * Creates an instance of Text.\n     * @param {Object} config The input configuration.\n     * @param {string} dependencies Dependencies for the class(labelManager)\n     * @memberof Text\n     */\n    constructor (config, dependencies) {\n        super(config);\n\n        this._dependencies = dependencies;\n        this._className = this._config.className ||\n                    (this._config.type === HEADER ? `${CLASSPREFIX}-${HEADER}-cell` : `${CLASSPREFIX}-${TEXT}-cell`);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'), this._className);\n        this._dependencies.labelManager.setStyle(this._computedStyle);\n        generateGetterSetters(this, PROPS[TEXT]);\n        const space = this._dependencies.labelManager.getOriSize('w');\n        this.minSpacing({ width: Math.floor(space.width * 3 / 4), height: Math.floor(space.height / 2) });\n        setSmartText(this);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof TextCell\n     */\n    get type () {\n        return TEXT;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof TextCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the Text cell.\n     *\n     * @return {string} The unique identifier for the Text.\n     * @memberof TextCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the dependencies of the instance\n     *\n     * @return {Object} Dependencies needed by the class\n     * @memberof TextCell\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof TextCell\n     */\n    serialize () {\n        return {\n            text: this.source(),\n            type: TEXT\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof TextCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof Text\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeTextSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        setSmartText(this);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the Text cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof Text\n     */\n    render (mount) {\n        const availWidth = this.availWidth();\n        const availHeight = this.availHeight();\n        const {\n            margin,\n            show,\n            verticalAlign,\n            textAlign,\n            rotation\n        } = this.config();\n\n        this.mount(mount);\n        if (show) {\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id], `${CLASSPREFIX}-${TEXT_CELL}`);\n            const vAlign = verticalAlign || rotation ? 'middle' : 'top';\n            const {\n                width,\n                height\n            } = this.smartText();\n            const {\n                height: minHeightSpace\n            } = this.minSpacing();\n            const translation = {\n                top: width + minHeightSpace / 2,\n                middle: width / 2 + minHeightSpace,\n                bottom: minHeightSpace\n            };\n\n            container.style('vertical-align', vAlign);\n\n            // Set class name\n            elem.classed(this._className, true);\n\n            // Apply styles\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            elem.style('transform', rotation ? `translate(${height / 2}px,\n                ${translation[vAlign]}px) rotate(-90deg)` : '');\n            elem.style(WIDTH, availWidth ? `${availWidth}px` : '100%');\n            [TOP, BOTTOM, LEFT, RIGHT].forEach((type) => {\n                container.style(`margin-${type}`, `${margin[type]}px`);\n            });\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            // set the text as the innerHTML\n            this._dependencies.labelManager.setStyle(this._computedStyle);\n            elem.html(this._dependencies.labelManager.getSmartText(this.source(), availWidth, availHeight, true).text);\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\n\nexport default TextCell;\n","/**\n * This file declares a class that is used to represent a table cell\n * that houses a visual unit.\n * @module VisualCell\n */\n\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { GEOM } from './enums/cell-type';\nimport { PROPS } from './props';\nimport {\n    CLASSPREFIX, HEIGHT, WIDTH, DATA, AXES, FACET_BY_FIELDS, FIELDS, TRANSFORM, LAYER_DEF, CONFIG, GEOM_CELL,\n    DETAIL_FIELDS\n} from './enums/constants';\nimport { DEFAULT_CONFIG } from './enums/defaults';\n\n/**\n * Calculates the logical space of the cell\n *\n * @param {Object} context Required to get the needed parameters to compute unit space\n * @return {Object} Logical space taken up by the unit\n * @memberof GeomCell\n */\nconst computeGeomSpace = (context) => {\n    const config = context.source().config();\n    const { width, height } = config;\n    return {\n        width: Math.ceil(width),\n        height: Math.ceil(height + context.getCaptionSpace().height)\n    };\n};\n\n /**\n * This class represents a SimpleCell for visual unit.\n *\n * @class GeomCell\n */\nclass GeomCell extends SimpleCell {\n\n    /**\n     * Creates an instance of GeomCell.\n     * @param {Object} config The input configuration.\n     * @memberof GeomCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._unit = null;\n        this._layers = null;\n        this._axes = {};\n        this._datamodel = {};\n        this._facetByFields = {};\n        this._fields = null;\n        this._transform = null;\n        this._caption = null;\n\n        generateGetterSetters(this, PROPS[GEOM]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof GeomCell\n     */\n    get type () {\n        return GEOM;\n    }\n\n    /**\n     * This method return the value contained by this cell.\n     *\n     * @return {VisualUnit} Instance of visual unit contained by visual unit.\n     * @memberof GeomCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return the id of the\n     * visual unit housed by this cell.\n     *\n     * @return {string} The unique id of the visual unit.\n     * @memberof GeomCell\n     */\n    get id () {\n        return this.source().id();\n    }\n\n    /**\n     * This method return a serialized representation of\n     * this instance.\n     *\n     * @return {Object} Object with serializable props.\n     * @memberof GeomCell\n     */\n    serialize () {\n        return {\n            type: GEOM,\n            unit: this.source().serialize(),\n            caption: this.caption()\n        };\n    }\n\n    /**\n     * return the default configuration for the geom cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof GeomCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * Updates the model based on the changed parameters\n     *\n     * @return {Instance} return instance\n     * @memberof GeomCell\n     */\n    updateModel () {\n        const unit = this.source();\n        unit.clearCaching();\n        [LAYER_DEF, TRANSFORM, AXES, FIELDS, CONFIG, DATA, AXES, FACET_BY_FIELDS, DETAIL_FIELDS].forEach((prop) => {\n            this[prop]() && unit[prop](this[prop]());\n        });\n        return this;\n    }\n\n    /**\n     * It gives the space taken by the caption of the unit\n     *\n     * @return {Object} return the space taken by caption\n     * @memberof GeomCell\n     */\n    getCaptionSpace () {\n        const caption = this.caption();\n\n        let captionSpace = { width: 0, height: 0 };\n        if (caption) {\n            captionSpace = caption.getLogicalSpace();\n        }\n        return captionSpace;\n    }\n\n    /**\n     * return the space taken up by the element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof GeomCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeGeomSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space available to\n     * render the SimpleCell.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    setAvailableSpace (width, height) {\n        const unit = this.source();\n\n        this.availWidth(width);\n        this.availHeight(height);\n        unit.lockModel()\n            .width(width).height(height - this.getCaptionSpace().height)\n            .unlockModel();\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * his method is used to render the visual unit inside the provided cell.\n     *\n     * @param {HTMLElement} mount The mountpoint in the table.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    render (mount) {\n        if (mount) {\n            this.mount(mount);\n            const availHeight = this.availHeight();\n            const availWidth = this.availWidth();\n            const caption = this.caption();\n            const wrapperDiv = makeElement(selectElement(mount), 'div', [1], `${CLASSPREFIX}-${GEOM_CELL}`);\n\n            if (caption) {\n                const captionDom = makeElement(wrapperDiv, 'div', [caption], `${CLASSPREFIX}-unit-caption`).node();\n                caption.render(captionDom);\n            }\n            const selection = makeElement(wrapperDiv, 'div', [1], `${CLASSPREFIX}-unit`);\n            wrapperDiv.style(WIDTH, `${availWidth}px`).style(HEIGHT, `${availHeight}px`);\n            selection.style(WIDTH, `${availWidth}px`)\n                            .style(HEIGHT, `${availHeight - this.getCaptionSpace().height}px`);\n            this.source().mount(selection.node());\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Object} Current instance\n     * @memberof GeomCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        this.source().remove();\n        return this;\n    }\n}\n\nexport default GeomCell;\n","import AxisCell from './axis-cell';\nimport BlankCell from './blank-cell';\nimport TextCell from './text-cell';\nimport GeomCell from './geom-cell';\nimport SimpleCell from './simple-cell';\n\nimport * as CONSTANTS from './constants';\n\nexport const DEFAULT_PLACEHOLDERS = {\n    [CONSTANTS.SIMPLE_CELL]: SimpleCell,\n    [CONSTANTS.TEXT_CELL]: TextCell,\n    [CONSTANTS.AXIS_CELL]: AxisCell,\n    [CONSTANTS.GEOM_CELL]: GeomCell,\n    [CONSTANTS.BLANK_CELL]: BlankCell\n};\n\n","export const SIMPLE_CELL = 'SimpleCell';\nexport const TEXT_CELL = 'TextCell';\nexport const AXIS_CELL = 'AxisCell';\nexport const BLANK_CELL = 'BlankCell';\nexport const GEOM_CELL = 'GeomCell';\n\n","import { DEFAULT_PLACEHOLDERS } from './defaults';\n\n/**\n * Creates a registry for the cells, which can be used for\n * setting a new cell or getting the registered cells\n *\n * @return {Object} Setters and getters for registered cells\n */\nconst cellRegistry = () => {\n    const reg = DEFAULT_PLACEHOLDERS;\n    return {\n        set: (key, def) => {\n            if (key in reg) {\n                reg[key] = def;\n            }\n            return cellRegistry;\n        },\n        get: () => reg\n    };\n};\nexport default cellRegistry;\n","import { TextCell } from '@chartshq/visual-cell';\nimport { escapeHTML } from 'muze-utils';\nimport { TOP } from '../constants';\n\n/**\n *\n *\n * @param {*} rawContent\n *\n */\nconst resolveTitleSubTitleContent = (rawContent) => {\n    if (typeof rawContent === 'function' && !rawContent._sanitize) {\n        return rawContent();\n    }\n    return escapeHTML(rawContent());\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} cellType\n * @param {*} labelManager\n * @param {*} prevCell\n *\n */\nconst headerCreator = (config, cellType, labelManager, prevCell) => {\n    let margin = {};\n    const {\n        content,\n        classPrefix,\n        maxLines\n    } = config;\n    const cell = prevCell || new TextCell(\n        {\n            type: cellType === 'title' ? 'header' : 'text',\n            className: `${classPrefix}-${cellType}-cell`\n        }, {\n            labelManager\n        })\n     .config({ maxLines }).minSpacing({ width: 0, height: 0 });\n\n    cell.source(content);\n    cell._minTickDiff = { height: 0, width: 0 };\n\n    if (config.position === TOP) {\n        margin = { top: 0, bottom: config.padding };\n    } else {\n        margin = { top: config.padding, bottom: 0 };\n    }\n    cell.config({ margin });\n\n    return {\n        height: cell.getLogicalSpace().height,\n        cell\n    };\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} type\n * @param {*} labelManager\n * @param {*} cell\n *\n */\nconst createHeading = (config, type, labelManager, prevCell) => {\n    if (!config) { return ''; }\n\n    return headerCreator(\n        config,\n        type,\n        labelManager,\n        prevCell\n    );\n};\n\n/**\n *\n *\n * @param {*} context\n */\nexport const createHeaders = (context, canvasHeight, canvasWidth) => {\n    let headerHeight = 0;\n    const headers = {};\n    const subtitle = context.subtitle();\n    const isSubtitle = resolveTitleSubTitleContent(subtitle[0]);\n\n    canvasHeight >= 200 && canvasWidth >= 200 && ['title', 'subtitle'].forEach((type) => {\n        const headerOptions = context[type]();\n        const content = resolveTitleSubTitleContent(headerOptions[0]);\n        if (content) {\n            const config = headerOptions[1];\n\n            config.width = context.width();\n            config.height = context.height();\n            config.classPrefix = context.config().classPrefix;\n            config.content = content;\n            config.padding = (type === 'title' && !isSubtitle.length) ? subtitle[1].padding : config.padding;\n\n            const { height, cell } = createHeading(config, type, context.dependencies().smartlabel,\n                context[`${type}Cell`]);\n\n            headers[`${type}Cell`] = cell;\n            context._composition[type] = cell;\n            headerHeight += height;\n        }\n    });\n    return { headerHeight, headers };\n};\n\n","import { TextCell, AxisCell } from '@chartshq/visual-cell';\nimport { getValueParser, retrieveFieldDisplayName, DataModel, getObjProp } from 'muze-utils';\nimport {\n    VERTICAL, HORIZONTAL, LEFT, RIGHT, LEGEND_TYPE_MAP, PADDING, BORDER, MARGIN\n} from '../constants';\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n *\n */\nexport const legendCreator = (canvas) => {\n    let LegendCls;\n    const dataset = [];\n    const axes = canvas.getRetinalAxes();\n\n    Object.entries(axes).forEach((axisInfo) => {\n        const scale = axisInfo[1][0];\n        const scaleType = axisInfo[0];\n        const scaleProps = canvas[scaleType]();\n\n        if (scaleProps.field && scale) {\n            const {\n                type,\n                step\n            } = scale.config();\n\n            const stepMapper = typeof step === 'boolean' ? step : false;\n            LegendCls = LEGEND_TYPE_MAP[`${type}-${stepMapper}-${scaleType}`];\n            dataset.push({\n                scale,\n                canvas,\n                fieldName: scaleProps.field,\n                title: retrieveFieldDisplayName(canvas.data(), scaleProps.field),\n                LegendCls,\n                scaleType\n            });\n        }\n    });\n\n    return dataset;\n};\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n * @param {*} measurement\n * @param {*} prevLegends\n *\n */\nexport const legendInitializer = (legendConfig, canvas, measurement, prevLegends) => {\n    const legends = [];\n    const {\n        height,\n        width,\n        headerHeight\n    } = measurement;\n    const {\n        position,\n        align\n    } = legendConfig;\n\n    const legendInfo = legendCreator(canvas);\n    const { invalidValues } = canvas.config();\n\n    const parser = getValueParser(invalidValues);\n    legendInfo.forEach((dataInfo, index) => {\n        const legendMeasures = {};\n        const {\n                LegendCls,\n                scale,\n                fieldName,\n                title: titleText,\n                scaleType\n            } = dataInfo;\n        const config = legendConfig[scaleType] || {};\n        const title = config.title || {};\n        title.text = title.text || titleText;\n        if (config.show) {\n            config.position = position;\n            config.align = align;\n            let legend = getObjProp(prevLegends[scaleType], index);\n            if (!legend) {\n                legend = LegendCls.create({\n                    labelManager: canvas._dependencies.smartlabel,\n                    cells: {\n                        AxisCell, TextCell\n                    }\n                });\n            }\n            legendMeasures.maxHeight = align === VERTICAL ? (height - headerHeight) : height * 0.2;\n            legendMeasures.maxWidth = align === HORIZONTAL ? width : width * 0.2;\n            legendMeasures.width = Math.min(legendMeasures.maxWidth, config.width);\n            legendMeasures.height = Math.min(legendMeasures.maxHeight, config.height);\n\n            [PADDING, BORDER, MARGIN].forEach((e) => {\n                legendMeasures[e] = config[e];\n            });\n            const metaData = legend.metaData();\n            if (metaData instanceof DataModel) {\n                metaData.dispose();\n            }\n            legend.scale(scale)\n                            .valueParser(parser)\n                            .title(title)\n                            .fieldName(fieldName)\n                            .config(config)\n                            .metaData(canvas.composition().visualGroup.getGroupByData().project([fieldName]))\n                            .measurement(legendMeasures)\n                            .canvasAlias(canvas.alias())\n                            .setLegendMeasures();\n\n            legends.push({ canvas, legend, scaleType });\n        }\n    });\n    return legends;\n};\n\n/**\n *\n *\n * @param {*} legends\n * @param {*} legendConfig\n * @param {*} availableHeight\n * @param {*} availableWidth\n *\n */\nexport const getLegendSpace = (legends, legendConfig, availableHeight, availableWidth) => {\n    const legendMeasures = legends.map(legendInfo => legendInfo.legend.measurement());\n    const legendSpace = { width: 0, height: 0 };\n\n    legendMeasures.forEach((space) => {\n        let height = 0;\n        let width = 0;\n        width = Math.min(space.width, space.maxWidth);\n        height = Math.min(space.height, space.maxHeight);\n\n        if (legendConfig.align === HORIZONTAL) {\n            if (legendSpace.width + width > availableWidth) {\n                legendSpace.width = availableWidth;\n                legendSpace.height += height;\n            } else {\n                legendSpace.width += width;\n                legendSpace.height = Math.max(legendSpace.height, height);\n            }\n        } else if (legendSpace.height + height > availableHeight) {\n            legendSpace.height = height;\n            legendSpace.width += width;\n        } else {\n            legendSpace.height += height;\n            legendSpace.width = Math.max(legendSpace.width, width);\n        }\n    });\n    if (legendConfig.align === HORIZONTAL) {\n        legendSpace.width = availableWidth;\n    }\n    return legendSpace;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} headerHeight\n *\n */\nexport const createLegend = (context, headerHeight, height, width) => {\n    const measurement = {\n        height,\n        width,\n        headerHeight\n    };\n    const { legend } = context.config();\n    const { show, position } = legend;\n\n    legend.classPrefix = context.config().classPrefix;\n    const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n\n    legend.show = show ? ((align === VERTICAL && width > 200) || (align === HORIZONTAL && height > 200)) : show;\n    legend.align = align;\n    return legendInitializer(legend, context, measurement, context.composition().legend || {});\n};\n","import { LayoutComponent } from '../../../../layout/src/tree-layout';\n\nexport default class MuzeComponent extends LayoutComponent {\n    getLogicalSpace () {\n        const { width, height } = this.boundBox();\n        return { width, height };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n    }\n\n    getBoundBox () {\n        return this.boundBox();\n    }\n\n    updateWrapper () {\n        throw Error('Update is not implemented');\n    }\n\n    setParams () {\n        throw Error('set params is not implemented');\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport { LEFT } from '../../constants';\n\nexport default class HeaderComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    renderHeader (container) {\n        const layoutConfig = this.params.config;\n        container = selectElement(container);\n        const { align } = layoutConfig;\n        const sel = container\n          .selectAll(`.${layoutConfig.classPrefix}-inner-container`)\n          .data([this.name]);\n        sel.exit().remove();\n        const selEnter = sel.enter().append('div');\n\n        const cont = selEnter.merge(sel);\n        cont.classed(`${layoutConfig.classPrefix}-inner-container`, true);\n        const { height, width } = this.boundBox();\n        this.component.setAvailableSpace(width, height);\n\n        this.component && this.component.render(cont.node());\n\n        cont.selectAll('div').classed(`${layoutConfig.classPrefix}-inner-content`, true);\n        cont.style('width', `${100}%`);\n\n        if (layoutConfig && this.component) {\n            cont.style('float', LEFT)\n                            .style('text-align', align);\n                            // .style(`padding-${position === TOP ? BOTTOM : TOP}`, `${padding}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderHeader(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.setParams(params);\n        this.name(params.name);\n        this.boundBox(params.component.getLogicalSpace());\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y,\n            left: conf.x,\n            width: conf.width,\n            height: conf.height });\n        this.renderAt(conf.renderAt);\n    }\n}\n","import { makeElement, selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport {\n     LEFT, RIGHT, VERTICAL, HORIZONTAL, TOP, BOTTOM, HORIZONTAL_CENTER, VERTICAL_CENTER\n} from '../../constants';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\n\nfunction defaultAlignmentHelper (position) {\n    let alignment = null;\n    const alignWith = `${ROW_MATRIX_INDEX[1]}-${COLUMN_MATRIX_INDEX[1]}`;\n    switch (position) {\n    case TOP:\n    case BOTTOM:\n        alignment = HORIZONTAL_CENTER;\n        break;\n    case LEFT:\n    case RIGHT:\n        alignment = VERTICAL_CENTER;\n        break;\n    default:\n        alignment = VERTICAL_CENTER;\n    }\n    return { alignment, alignWith };\n}\nexport default class LegendComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.config.measurement.legendSpace, 0);\n        this.setParams(params);\n    }\n\n    renderLegend (container) {\n        container = selectElement(container);\n        const sectionComponents = [];\n        const { position, classPrefix } = this.params.config;\n        const legendMount = makeElement(container, 'div', [this.components],\n                                        `${classPrefix}-inner-content`, {}, d => d);\n        legendMount.classed(`${classPrefix}-legend`, true);\n        const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n        const legWidth = this.newDimensions.width;\n        const legHeight = this.newDimensions.height;\n\n        [container, legendMount].forEach((elem) => {\n            elem.style('width', `${Math.floor(legWidth)}px`)\n                            .style('height', `${legHeight}px`)\n                            .style('float', LEFT);\n        });\n\n        if (align === VERTICAL) {\n            let sections = -1;\n            let currHeight = legHeight;\n            let currWidth = 0;\n\n            this.components.forEach((legendInfo) => {\n                const leg = legendInfo.legend;\n                if (leg.measurement().height > currHeight) {\n                    sections++;\n                    currWidth = 0;\n                    currHeight = legHeight;\n                } else {\n                    sections < 0 && sections++;\n                }\n                sectionComponents[sections] = sectionComponents[sections] || [];\n                currHeight -= Math.min(leg.measurement().height, currHeight);\n                currWidth = Math.max(Math.min(leg.measurement().width, leg.measurement().maxWidth), currWidth);\n                sectionComponents[sections].push({\n                    legend: leg,\n                    legendHeight: legHeight,\n                    legendWidth: currWidth\n                });\n            });\n\n            const mount = makeElement(legendMount, ['div'], sectionComponents, `${classPrefix}-legend-section`);\n            // mount.each((d, i) => selectElement(this).classed(`${classPrefix}-legend-section-${i}`, true));\n            mount.classed(`${classPrefix}-legend-vertical-section`, true)\n                            .style('width', d => `${d[0].legendWidth}px`);\n            makeElement(mount, ['div'], d => d, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) {\n                                d.legend.mount(this);\n                            })\n                            .style('width', d => `${d.legendWidth}px`);\n        } else {\n            const mount = makeElement(legendMount, 'div', [1], `${classPrefix}-legend-section`);\n            mount.classed(`${classPrefix}-legend-horizontal-section`, true);\n            mount.classed(`${classPrefix}-legend-section-${0}`, true)\n                            .style('width', `${legWidth}px`);\n\n            makeElement(mount, 'div', this.components, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) { d.legend.mount(this); })\n                            .style('width', d => `${d.legend.measurement().width}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderLegend(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.measurement.legendSpace);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.components = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        const { alignWith, alignment } = defaultAlignmentHelper(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith || alignWith);\n        this.alignment(params.config.alignment || alignment);\n    }\n\n}\n","import {\n    selectElement,\n    makeElement,\n    getD3Drag,\n    getEvent,\n    getWindow,\n    hasTouch\n} from 'muze-utils';\nimport './scroll-bar.scss';\nimport { WIDTH, HEIGHT } from '../../../constants';\n\nconst d3Drag = getD3Drag();\n\nconst arrowSizeMap = {\n    left: WIDTH,\n    right: WIDTH,\n    top: HEIGHT,\n    bottom: HEIGHT\n};\n\nexport const getUnitPositions = (unitMeasures, totalLength, viewLength) => {\n    let currentLen = 0;\n    const measures = unitMeasures.primary && unitMeasures.primary.length ?\n        unitMeasures.primary : unitMeasures.secondary;\n\n    return measures.map((e) => {\n        const unitPosition = currentLen * 100 / (totalLength - viewLength);\n        currentLen += e;\n        return unitPosition;\n    });\n};\n\nexport const createScrollBarArrow = (mount, type, config) => {\n    const {\n        classPrefix,\n        thickness\n    } = config;\n    const arrow = makeElement(mount, 'div', [type], `${classPrefix}-scroll-arrow-${type}`);\n\n    arrow.classed(`${classPrefix}-scroll-arrow`, true);\n    arrow.style(arrowSizeMap[type], `${thickness}px`);\n\n    const chevron = makeElement(arrow, 'div', [1], `${classPrefix}-scroll-arrow-chevron`);\n\n    chevron.attr('id', `${classPrefix}-scroll-arrow-chevron-${type}`);\n\n    return arrow;\n};\n\nexport const createScrollBarRect = (mount, config) => {\n    const {\n        classPrefix\n    } = config;\n    const rect = makeElement(mount, 'div', [1], `${classPrefix}-scroll-rect`);\n    const mover = makeElement(rect, 'div', [1], `${classPrefix}-scroll-mover`);\n\n    return { rect, mover };\n};\n\nexport const applyRectClick = (scrollMaker, moverRect) => {\n    const {\n        rect\n    } = moverRect;\n\n    rect.on('click', () => {\n        const event = getEvent();\n        scrollMaker.emptyScrollAreaClick(event);\n    });\n};\n\nconst applyMoverDrag = (scrollMaker, moverRect) => {\n    let startPos = {};\n    let moverStartPos = 0;\n    let rectStartPos = 0;\n    let endPos = {};\n    const {\n        mover,\n        rect\n    } = moverRect;\n\n    mover.call(d3Drag()\n                    .on('start', () => {\n                        const event = getEvent();\n\n                        moverStartPos = mover.node().getBoundingClientRect();\n                        rectStartPos = rect.node().getBoundingClientRect();\n                        startPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                    })\n                    .on('drag', () => {\n                        const event = getEvent();\n                        const window = getWindow();\n\n                        endPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                        const distanceMoved = {\n                            x: endPos.x - startPos.x,\n                            y: endPos.y - startPos.y\n                        };\n                        const actualPosition = {\n                            x: moverStartPos.x + distanceMoved.x - rectStartPos.x + window.pageXOffset,\n                            y: moverStartPos.y + distanceMoved.y - rectStartPos.y + window.pageYOffset\n                        };\n\n                        scrollMaker.changeMoverPosition(actualPosition);\n                    }));\n};\n\nconst applyScrollMouseDownAction = (moverRect, scrollMaker, speed) => {\n    const {\n        mover,\n        rect\n    } = moverRect;\n    const { x, y } = mover.node().getBoundingClientRect();\n    const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n    scrollMaker.changeMoverPosition({ x: x - rectX + speed, y: y - rectY + speed });\n};\n\nconst registerListenerOnArrow = (scrollMaker, moverRect, arrowType, speed) => {\n    let timer = '';\n    const arrow = scrollMaker._components[arrowType];\n    const isTouchDevice = hasTouch();\n\n    arrow.on(isTouchDevice ? 'touchstart' : 'mousedown', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        timer = setInterval(() => {\n            applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n        }, 100);\n    }).on(isTouchDevice ? 'touchend' : 'mouseup', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        clearInterval(timer);\n    }).on('click', () => {\n        applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n    });\n};\n\nexport const registerListeners = (scrollMaker) => {\n    const {\n        moverRect\n    } = scrollMaker._components;\n\n    const speed = scrollMaker.config().speed;\n\n    registerListenerOnArrow(scrollMaker, moverRect, 'prevArrow', -speed);\n    applyMoverDrag(scrollMaker, moverRect);\n    applyRectClick(scrollMaker, moverRect);\n    registerListenerOnArrow(scrollMaker, moverRect, 'nextArrow', speed);\n};\n\nexport const scrollContainerHelper = (mountPoint, config, dimensions, type) => {\n    const {\n        classPrefix\n    } = config;\n    const scrollBarContainer = makeElement(selectElement(mountPoint), 'div', [1], `#${classPrefix}-scroll-bar-${type}`);\n\n    scrollBarContainer.classed(`${classPrefix}-scroll-bar`, true);\n    scrollBarContainer.style(WIDTH, `${dimensions.width}px`);\n    scrollBarContainer.style(HEIGHT, `${dimensions.height}px`);\n    return scrollBarContainer;\n};\n\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n\n    config: {\n        sanitization: (context, value) => {\n            value = mergeRecursive(context._config, value);\n            return value;\n        }\n    },\n    manager: {},\n    unitPositions: {},\n    logicalSpace: {}\n};\n\n","import { ERROR_MSG, generateGetterSetters } from 'muze-utils';\nimport {\n    scrollContainerHelper,\n    registerListeners\n} from './helper';\nimport { PROPS } from './props';\n\nexport class ScrollMaker {\n\n    constructor () {\n        this._components = {};\n        this._logicalSpace = {};\n        this._attachedScrollAction = () => {};\n        this._config = {\n            thickness: 10,\n            speed: 2\n        };\n        this._unitPositions = null;\n\n        generateGetterSetters(this, PROPS);\n    }\n\n    static type () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    emptyScrollAreaClick () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    changeMoverPosition () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollDeltaTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    createScroll (mountPoint) {\n        const config = this.config();\n\n        return {\n            scrollBarContainer: scrollContainerHelper(mountPoint, config, this.logicalSpace(), this.constructor.type())\n        };\n    }\n\n    attachScrollAction (externalScrollAction) {\n        this._attachedScrollAction = externalScrollAction;\n        return this;\n    }\n\n    detachScrollAction () {\n        this._attachedScrollAction = () => {};\n        return this;\n    }\n\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    registerListeners () {\n        registerListeners(this);\n        return this;\n    }\n\n    remove () {\n        this._components.scrollBarContainer.remove();\n        return this;\n    }\n}\n\n","import MuzeComponent from './muze-chart-component';\nimport { HorizontalScrollMaker } from './scroll-bar-maker/horizontal-scroll-maker';\nimport { VerticalScrollMaker } from './scroll-bar-maker/vertical-scroll-maker';\n\nconst scrollMakerMap = {\n    horizontal: HorizontalScrollMaker,\n    vertical: VerticalScrollMaker\n};\n\n/**\n * Scroll Component acts as a wrapper over the scoll bars created using the respective Scroll Makers\n * This provides a consistent API for layouting using the tree layout system.\n *\n *\n * @class\n * @public\n * @module ScrollComponent\n */\nexport default class ScrollComponent extends MuzeComponent {\n\n    constructor (params) {\n        const ScrollMaker = scrollMakerMap[params.config.type];\n\n        params.component = new ScrollMaker();\n        params.component.config(params.config.scrollBarComponentConfig);\n        params.component.logicalSpace(params.dimensions);\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    manager (...manager) {\n        if (manager.length) {\n            this.component.manager(manager[0]);\n            return this;\n        }\n        return this.component.manager();\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollDeltaTo (delta) {\n        this.component.scrollDeltaTo(delta);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollTo (scrollPercentage) {\n        this.component.scrollTo(scrollPercentage);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page based on the unit index.\n     * The input is provided as a number represting the index for the unit.\n     * For vertical scroll, it's the row index that will be required.\n     * For horizontal scroll, it's the column index that will be required\n     *\n     * @public\n     *\n     * @param {number} unitIndex Index of the unit appearing in the grid\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollToUnitIndex (unitIndex) {\n        const unitPositions = this.component.unitPositions();\n        const sanitizedUnitIndex = Math.min(Math.max(0, unitIndex), unitPositions.length - 1);\n        this.component.scrollTo(unitPositions[sanitizedUnitIndex]);\n        return this;\n    }\n\n    /**\n     * Provides the positions of the units(either horizontal or vertical based on the type\n     * of scroll bar it wraps) relative to it's container. The position of the first unit starts at 0\n     *\n     *\n     * @public\n     *\n     * @return {Array} Positions of units either horizontal or vertical\n     */\n    getScrollPositionsForUnits () {\n        return this.component.unitPositions();\n    }\n\n    draw (container) {\n        this.component.createScroll(container || document.getElementById(this.renderAt()));\n        return this;\n    }\n\n    /**\n     * Can be used to attach a scroll action whenever scrolling occurs in the canvas\n     *\n     * @public\n     * @param {number} externalAction Action to be attached during scroll\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    attachScrollAction (externalAction) {\n        this.component.attachScrollAction(externalAction);\n        return this;\n    }\n\n    /**\n     * Can be used to detach the scroll action already bound to the scroll bar\n     *\n     * @public\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    detachScrollAction () {\n        this.component.detachScrollAction();\n        return this;\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.component.config(params.config.scrollBarComponentConfig);\n        this.component.logicalSpace(params.dimensions);\n        this.boundBox(this.component.getLogicalSpace());\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component || this.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    remove () {\n        this.component.remove();\n    }\n}\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { HORIZONTAL, HEIGHT, WIDTH, LEFT } from '../../../constants';\n\nexport class HorizontalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: horizontal\n     */\n    static type () {\n        return HORIZONTAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, config, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'left', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'right', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n\n        const { height, width, totalLength, viewLength, unitWidths } = this.logicalSpace();\n        const scrollBarWithouArrowLength = width - height * 2;\n\n        rect.style(WIDTH, `${dimensions.width - height * 2}px`);\n        rect.style(HEIGHT, `${100}%`);\n        mover.style(WIDTH, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(HEIGHT, `${100}%`);\n        mover.style(LEFT, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n        this.unitPositions(getUnitPositions(unitWidths, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n        let positionAdjuster = speed * 10;\n        if (event.x < x) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n        const {\n            totalLength\n         } = this.logicalSpace();\n\n        if (newPosition.x < 0) {\n            currentPos = 0;\n        } else if (newPosition.x + moverPos.width > rectStartPos.width) {\n            currentPos = rectStartPos.width - moverPos.width;\n        } else {\n            currentPos = newPosition.x;\n        }\n\n        mover.style(LEFT, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: 0, x: moverPos.x - rectStartPos.x - delta });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {HorizontalScrollMaker} Instance of the HorizontalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.width)) / 100;\n\n        this.changeMoverPosition({ y: 0, x: movement });\n        return this;\n    }\n\n}\n\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { VERTICAL, TOP, HEIGHT, WIDTH } from '../../../constants';\n\nexport class VerticalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: vertical\n     */\n    static type () {\n        return VERTICAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'top', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'bottom', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n        const { height, width, totalLength, viewLength, unitHeights } = this.logicalSpace();\n        const scrollBarWithouArrowLength = height - width * 2;\n\n        rect.style(HEIGHT, `${scrollBarWithouArrowLength}px`);\n        rect.style(WIDTH, `${100}%`);\n        mover.style(WIDTH, `${100}%`);\n        mover.style(HEIGHT, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(TOP, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n\n        this.unitPositions(getUnitPositions(unitHeights, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n        let positionAdjuster = speed * 10;\n        if (event.y < y) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const {\n            totalLength\n         } = this.logicalSpace();\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n\n        if (newPosition.y < 0) {\n            currentPos = 0;\n        } else if (newPosition.y + moverPos.height > rectStartPos.height) {\n            currentPos = rectStartPos.height - moverPos.height;\n        } else {\n            currentPos = newPosition.y;\n        }\n        mover.style(TOP, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: moverPos.y - rectStartPos.y - delta, x: 0 });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.height)) / 100;\n\n        this.changeMoverPosition({ x: 0, y: movement });\n        return this;\n    }\n\n}\n","import { makeElement } from 'muze-utils';\nimport { cellSpanMaker, applySpans } from '../../../../layout/src/grid-layout/span-maker';\nimport { applyBorders } from '../../../../layout/src/grid-layout/border-helper';\n\nimport {\n     TOP, CENTER\n} from '../../../../layout/src/enums/constants';\nimport MuzeComponent from './muze-chart-component';\nimport { WIDTH, HEIGHT, HIDDEN, OVERFLOW, AUTO, VISIBLE } from '../../constants';\n\nconst renderPlaceholders = (cells) => {\n    // Rendering content within placeholders\n    cells.each(function (cell) {\n        cell.placeholder.render(this);\n    });\n};\n\nexport default class MatrixComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.setParams(params);\n        this.className(params.config.className);\n    }\n\n    applyScroll (container) {\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const { horizontal, vertical } = this.params.config.scrollInfo;\n        container.style(OVERFLOW, VISIBLE);\n        container.style(WIDTH, AUTO);\n        container.style(HEIGHT, AUTO);\n\n        if (horizontal && column === 1) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(WIDTH, '100%');\n        }\n\n        if (vertical && row === CENTER) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(HEIGHT, '100%');\n        }\n    }\n\n    renderMatrix (mountPoint) {\n        // Creating containers for each matrix individually\n        const classPrefix = this.params.config.classPrefix;\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const dimensions = this.params.config.dimensions;\n        const border = this.params.config.border;\n\n        // Creating containers for each matrix individually\n        const containerForMatrix = makeElement(mountPoint, 'div', [1], `${classPrefix}-grid-${row}-${column + 1}`)\n            .classed(`${classPrefix}-grid-${row}`, true)\n            .classed(`${classPrefix}-grid`, true);\n\n        this.applyScroll(containerForMatrix);\n\n        const {\n            viewMatrix,\n            spans\n        } = cellSpanMaker(this.component, row, column);\n\n        // Rendering the table components\n        const { cells } = this.renderTable(containerForMatrix, `${classPrefix}-grid`, viewMatrix);\n\n        applySpans(cells, spans, { dimensions, border }, `${row}-${column}`);\n        renderPlaceholders(cells);\n\n        cells.exit().each((cell) => {\n            cell.placeholder.remove();\n        });\n\n        applyBorders(cells, border, row, column);\n    }\n\n    renderTable (mount, className, rowData) {\n        const table = makeElement(mount, 'table', ['layout'], `${className}-table`);\n        const body = makeElement(table, 'tbody', ['layout'], `${className}-body`);\n        const rows = makeElement(body, 'tr', rowData, `${className}-tr`);\n        const cells = makeElement(rows, 'td', (d, i) => d.filter(e => e !== null).map(e =>\n                                  ({ placeholder: e, rowIndex: i })), `${className}-td`, {}, key => key.placeholder.id);\n\n        return { table, body, rows, cells };\n    }\n\n    draw (container) {\n        this.renderMatrix(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(TOP);\n        this.className(params.config.className);\n    }\n}\n","import { selectElement, getEvent } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport MatrixComponent from './matrix-component';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\nimport { WHEEL_DELTA_MODIFIER } from '../../enums/constants';\n\n/**\n * Based on the type of scroll, it changes the scrollLeft/scrollTop property of the specific\n * elements based on the scroll distance provided\n *\n *\n */\nconst applyScrollAction = (elem, classPrefix, scollDistance, type) => {\n    selectElement(elem)\n                    .selectAll(`.${classPrefix}-grid`)\n                    .property(type, scollDistance);\n};\n\n/**\n * Applies the action of the scroll by actually scrolling the respective matrices based on the\n * type of scroll. It returns a function which has both the scroll methods available\n *\n * @return {Object} contains the horizontal and vertical scroll actions on the grid component\n */\nconst scrollActionApplier = (movement, context) => {\n    const classPrefix = context.params.config.classPrefix;\n\n    return {\n        horizontal: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[e][1].renderAt()}`, classPrefix, movement, 'scrollLeft'));\n        },\n        vertical: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[1][e].renderAt()}`, classPrefix, movement, 'scrollTop'));\n        }\n    };\n};\n\nexport default class GridComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.gridComponents = [];\n        this.setParams(params);\n    }\n\n    sanitizeGrid () {\n        let height = 0;\n        let width = 0;\n        const { viewMatricesInfo, layoutDimensions } = this.component.viewInfo();\n        const scrollInfo = this.component.scrollInfo();\n        const {\n            viewHeight,\n            viewWidth,\n            unitHeights,\n            unitWidths\n        } = layoutDimensions;\n\n        for (let i = 0; i < 3; i++) {\n            if (!(this.gridComponents.length && this.gridComponents[i] instanceof Array)) {\n                this.gridComponents[i] = [];\n            }\n            for (let j = 0; j < 3; j++) {\n                const matrixDim = {\n                    height: viewHeight[i],\n                    width: viewWidth[j],\n                    unitHeights,\n                    unitWidths\n                };\n                const matrix = viewMatricesInfo.matrices[`${ROW_MATRIX_INDEX[i]}`][j];\n                const matrixName = `${ROW_MATRIX_INDEX[i]}-${COLUMN_MATRIX_INDEX[j]}`;\n                const matrixConfig = {\n                    dimensions: matrixDim,\n                    border: layoutDimensions.border,\n                    classPrefix: this.params.config.classPrefix,\n                    scrollInfo,\n                    row: ROW_MATRIX_INDEX[i],\n                    column: j\n                };\n                if (this.gridComponents[i][j] instanceof MuzeComponent) {\n                    this.gridComponents[i][j].updateWrapper({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                } else {\n                    const matrixWrapper = new MatrixComponent({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                    this.gridComponents[i].push(matrixWrapper);\n                }\n                if (i === 0) {\n                    width += matrixDim.width;\n                }\n                if (j === 0) {\n                    height += matrixDim.height;\n                }\n            }\n        }\n        this.boundBox({ height, width });\n\n        this.component = this.gridComponents;\n        this.allComponents = this.gridComponents;\n    }\n\n    scrollBarManager (...manager) {\n        if (manager.length) {\n            this._scrollBarManager = manager[0];\n            return this;\n        }\n        return this._scrollBarManager;\n    }\n\n    /**\n     * Attaches a mousewheel listener to the center matrix, based on which the scrolling can occur.\n     * It uses the scroll component to change the position of the scroller, which ultimately scrolls the center matrix\n     *\n     *\n     * @return {GridComponent} Instance of the GridComponent\n     */\n    attachScrollListener () {\n        const scrollBarManager = this.scrollBarManager();\n        selectElement(`#${this.component[1][1].renderAt()}`)\n            .on('wheel', () => {\n                const event = getEvent();\n                const {\n                    wheelDeltaX,\n                    wheelDeltaY\n                } = event;\n\n                // Scrolling horizontally\n                if (wheelDeltaX !== 0 && Math.abs(wheelDeltaX) > Math.abs(wheelDeltaY)) {\n                    scrollBarManager.preventBrowserScroll('horizontal', event)\n                        .triggerScrollBarAction('horizontal', wheelDeltaX / WHEEL_DELTA_MODIFIER);\n                }\n\n                // Scrolling Vertically\n                if (wheelDeltaY !== 0 && Math.abs(wheelDeltaX) < Math.abs(wheelDeltaY)) {\n                    scrollBarManager.preventBrowserScroll('vertical', event)\n                        .triggerScrollBarAction('vertical', wheelDeltaY / WHEEL_DELTA_MODIFIER);\n                }\n            });\n        return this;\n    }\n\n    performScrollAction (direction, movedView) {\n        scrollActionApplier(movedView, this)[direction]();\n        return this;\n    }\n\n    getBoundBox () {\n        const { top, left } = this.component[0][0].boundBox();\n        const { height, width } = this.boundBox();\n\n        return {\n            top,\n            left,\n            height,\n            width\n        };\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.className(params.config.className);\n        this.sanitizeGrid();\n        return this;\n    }\n\n    attachListener () {\n        this.attachScrollListener();\n        return this;\n    }\n}\n","export const SIDE_EFFECT_COMMON = 'common';\nexport const SIDE_EFFECT_INDIVIDUAL = 'individual';\nexport const TOOLTIP_CONSOLIDATED = 'consolidated';\nexport const TOOLTIP_FRAGMENTED = 'fragmented';\nexport const WHEEL_DELTA_MODIFIER = 30;\n","import { selectElement, makeElement, applyStyle } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\n\nexport default class MessageComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.setParams(params);\n    }\n\n    render (container) {\n        const parent = selectElement(container);\n\n        const { config } = this.params;\n        const { className } = config.classPrefix;\n\n        const node = makeElement(parent, 'div', [1], className);\n        const { height, width } = config.dimensions;\n        const { message } = config;\n\n        applyStyle(node, { width: `${width}px`, height: `${height}px` });\n\n        const child = makeElement(node, 'div', [1], `${className}-child`);\n        const textElement = makeElement(child, 'text', [1]);\n\n        textElement.html(message);\n    }\n\n    draw (container) {\n        this.render(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        const { target, className } = params.config;\n        this.target(target);\n        this.className(className);\n        return this;\n    }\n}\n","import {\n    TITLE,\n    SUB_TITLE,\n    LEGEND, VERTICAL,\n    HORIZONTAL,\n    WIDTH,\n    HEIGHT,\n    TOP,\n    LEFT,\n    RIGHT,\n    MESSAGE,\n    GRID,\n    NO_DATA_MESSAGE,\n    HORIZONTAL_CENTER\n} from '../constants';\nimport HeaderComponent from './components/headerComponent';\nimport LegendComponent from './components/legendComponent';\nimport ScrollComponent from './components/scroll-component';\nimport GridComponent from './components/grid-component';\nimport MessageComponent from './components/message-component';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG, CANVAS, MESSAGE_CONFIG } from './defaults';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, CENTER } from '../../../layout/src/enums/constants';\n\n// Mapping between types of headers and their required configs for wrapper creation\nconst headerMap = {\n    title: {\n        headerCell: 'titleCell',\n        configType: TITLE_CONFIG\n    },\n    subtitle: {\n        headerCell: 'subtitleCell',\n        configType: SUB_TITLE_CONFIG\n    }\n};\n\n// Mapping of header alignment values\nconst headerAlignmentMap = {\n    [LEFT]: LEFT,\n    [RIGHT]: RIGHT,\n    [CENTER]: HORIZONTAL_CENTER\n};\n\n/**\n * returns if data is Valid\n *\n *\n * @param {Object} params object where data has to be checked for validity\n * @return {Boolean} Returns true if all of the params are valid\n */\nconst checkParamsValidation = params => Object.keys(params).every((param => params[param]));\n\n/**\n * returns if message Component is needed or not\n *\n *\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Boolean} Returns if grid is present\n */\nconst isGridPresent = (renderDetails) => {\n    const { rows, columns, values } = renderDetails.components;\n    return checkParamsValidation({ rows, columns, values });\n};\n\n/**\n * Creates the wrapper for the header, i.e., title and subtitle to be used in the tree layout\n *\n *\n * @param {string} headerType type of header: title/subtite\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createHeaderWrapper = (headerType, layoutManager, renderDetails) => {\n    let wrapper = null;\n\n    const { components, layoutConfig } = renderDetails;\n    const { headerCell, configType } = headerMap[headerType];\n    const target = { target: CANVAS };\n\n    if (components.headers && components.headers[headerCell]) {\n        let headerConfig = layoutConfig[headerType];\n        const header = components.headers[headerCell];\n\n        headerConfig = Object.assign({}, headerConfig, {\n            classPrefix: layoutConfig.classPrefix,\n            ...target,\n            alignWith: `${ROW_MATRIX_INDEX[0]}-${COLUMN_MATRIX_INDEX[1]}`,\n            alignment: headerAlignmentMap[headerConfig.align],\n            className: configType.className\n        });\n\n        const wrapperParams = {\n            name: headerType,\n            component: header,\n            config: headerConfig\n        };\n\n        const existingComponent = layoutManager.getComponent(headerType);\n        if (existingComponent) {\n            wrapper = existingComponent\n                        .updateWrapper(wrapperParams);\n        } else {\n            wrapper = new HeaderComponent(wrapperParams);\n        }\n    }\n    return wrapper;\n};\n\n/**\n * Creates the wrapper for the grid layout to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {GridLayout} canvas canvas instance\n * @return {Instance} Returns the respective wrappers\n */\nconst createMessageWrapper = (layoutManager, canvas, renderDetails, renderGrid) => {\n    let messageWrapper = null;\n\n    if (!renderGrid) {\n        const defaultDimensions = { height: canvas.height(), width: canvas.width() };\n        const gridComponent = layoutManager.getComponent(GRID);\n        const { height, width } = (gridComponent && gridComponent.getBoundBox()) || defaultDimensions;\n        const target = { target: CANVAS };\n        const config = {\n            ...target,\n            dimensions: { height, width },\n            message: NO_DATA_MESSAGE,\n            classPrefix: MESSAGE_CONFIG\n        };\n        const wrapperParams = {\n            name: MESSAGE,\n            component: null,\n            config\n        };\n        const existingComponent = layoutManager.getComponent(MESSAGE);\n\n        if (existingComponent) {\n            messageWrapper = existingComponent\n                                    .updateWrapper(wrapperParams);\n        } else {\n            messageWrapper = new MessageComponent(wrapperParams);\n        }\n        return messageWrapper;\n    }\n    return null;\n};\n\n// Mapping between types of scrollBars and their required configs for wrapper creation\nconst scrollBarMap = config => ({\n    vertical: {\n        componentName: 'verticalScrollBar',\n        width: 'thickness',\n        height: 'layoutBasedMeasure',\n        layoutBasedMeasure: HEIGHT,\n        viewMeasure: 'viewHeight',\n        rowAlign: 1,\n        colAlign: config.align === 'right' ? 2 : 0,\n        position: config.align,\n        alignment: TOP\n    },\n    horizontal: {\n        componentName: 'horizontalScrollBar',\n        width: 'layoutBasedMeasure',\n        layoutBasedMeasure: WIDTH,\n        viewMeasure: 'viewWidth',\n        height: 'thickness',\n        rowAlign: config.align === 'top' ? 0 : 2,\n        colAlign: 1,\n        position: config.align,\n        alignment: LEFT\n    }\n});\n\n/**\n * Creates the wrapper for the scroller, i.e., horizontal and vertical to be used in the tree layout\n *\n *\n * @param {string} scrollBarType type of scrollbar: horizontal/vertical\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst createScrollBarWrapper = (scrollBarType, layoutManager, renderDetails, grid, renderGrid) => {\n    if (renderGrid) {\n        let scrollBarWrapper = null;\n        const { layoutConfig } = renderDetails;\n        const target = { target: CANVAS };\n        const { scrollBar } = layoutConfig;\n        const { layoutDimensions } = grid.viewInfo();\n        const {\n            actualCenterMeasures,\n            unitHeights,\n            unitWidths\n        } = layoutDimensions;\n        const {\n            componentName, layoutBasedMeasure, width, height, rowAlign, colAlign,\n            viewMeasure, position, alignment\n        } = scrollBarMap(scrollBar[scrollBarType])[scrollBarType];\n        const dimensions = {\n            thickness: scrollBar.thickness,\n            layoutBasedMeasure: layoutDimensions[viewMeasure][1]\n        };\n        const isScroll = grid.scrollInfo()[scrollBarType];\n        const totalLength = actualCenterMeasures[layoutBasedMeasure];\n        const viewLength = layoutDimensions[viewMeasure][1];\n\n        const scrollConfig = Object.assign({}, {\n            classPrefix: layoutConfig.classPrefix,\n            ...target,\n            scrollBarComponentConfig: {\n                ...scrollBar,\n                classPrefix: layoutConfig.classPrefix\n            },\n\n            type: scrollBarType,\n            alignWith: `${ROW_MATRIX_INDEX[rowAlign]}-${COLUMN_MATRIX_INDEX[colAlign]}`,\n            alignment,\n            position\n        });\n\n        const wrapperParams = {\n            name: componentName,\n            config: scrollConfig,\n            dimensions: {\n                width: dimensions[width],\n                height: dimensions[height],\n                totalLength,\n                viewLength,\n                unitHeights,\n                unitWidths\n            }\n        };\n\n        const existingComponent = layoutManager.getComponent(componentName);\n\n        if (!isScroll) {\n            existingComponent && existingComponent.remove();\n            return null;\n        }\n\n        if (existingComponent) {\n            scrollBarWrapper = existingComponent\n                                    .updateWrapper(wrapperParams);\n        } else {\n            scrollBarWrapper = new ScrollComponent(wrapperParams);\n        }\n\n        return scrollBarWrapper;\n    }\n    return null;\n};\n\n/**\n * Creates the wrapper for the legend to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createLegendWrapper = (layoutManager, renderDetails, renderGrid) => {\n    if (renderGrid) {\n        let legendWrapper = null;\n        const { components, layoutConfig, measurement } = renderDetails;\n        const target = { target: CANVAS };\n\n        if (components.legends && components.legends.length) {\n            const legendConfig = { ...layoutConfig.legend, ...target, measurement };\n            const wrapperParams = {\n                name: LEGEND,\n                component: components.legends,\n                config: legendConfig\n            };\n\n            const existingComponent = layoutManager.getComponent(LEGEND);\n\n            if (existingComponent) {\n                legendWrapper = existingComponent\n                        .updateWrapper(wrapperParams);\n            } else {\n                legendWrapper = new LegendComponent(wrapperParams);\n            }\n        }\n        return legendWrapper;\n    }\n    return null;\n};\n\n/**\n * Creates the wrapper for the grid layout to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst gridLayoutWrapper = (layoutManager, renderDetails, grid, renderGrid) => {\n    if (renderGrid) {\n        let gridWrapper = null;\n        const target = { target: CANVAS };\n        const { layoutConfig } = renderDetails;\n\n        const config = {\n            ...target,\n            pagination: layoutConfig.pagination,\n            classPrefix: layoutConfig.classPrefix,\n            dimensions: { height: 0, width: 0 }\n        };\n        const wrapperParams = {\n            name: GRID,\n            component: grid,\n            config\n        };\n        const existingComponent = layoutManager.getComponent(GRID);\n        if (existingComponent) {\n            gridWrapper = existingComponent\n                        .updateWrapper(wrapperParams);\n        } else {\n            gridWrapper = new GridComponent(wrapperParams);\n        }\n        return gridWrapper;\n    }\n    return null;\n};\n/**\n * Responsible for providing the wrapper creators for every component in Muze.\n * This function, when called, returns the set of components and their respective wrappers.\n *\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {GridLayout} grid Instance of the grid layout\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers for each component\n */\nexport const componentWrapperMaker = (canvas, grid, renderDetails) => {\n    const layoutManager = canvas._layoutManager;\n    const renderGrid = isGridPresent(renderDetails);\n    return {\n        title: createHeaderWrapper(TITLE, layoutManager, renderDetails),\n        subtitle: createHeaderWrapper(SUB_TITLE, layoutManager, renderDetails),\n        message: createMessageWrapper(layoutManager, canvas, renderDetails, renderGrid),\n        legend: createLegendWrapper(layoutManager, renderDetails, renderGrid),\n        grid: gridLayoutWrapper(layoutManager, renderDetails, grid, renderGrid),\n        verticalScrollBar: createScrollBarWrapper(VERTICAL, layoutManager, renderDetails, grid, renderGrid),\n        horizontalScrollBar: createScrollBarWrapper(HORIZONTAL, layoutManager, renderDetails, grid, renderGrid)\n    };\n};\n","export class ScrollManager {\n\n    constructor () {\n        this._scrollBarComponents = {};\n        this._attachedComponents = {};\n    }\n\n    scrollBarComponents (...sbc) {\n        if (sbc.length) {\n            this._scrollBarComponents = sbc[0];\n            return this;\n        }\n        return this._scrollBarComponents;\n    }\n\n    attachedComponents (...abc) {\n        if (abc.length) {\n            this._attachedComponents = abc[0];\n            return this;\n        }\n        return this._attachedComponents;\n    }\n\n    preventBrowserScroll (type, event) {\n        if (this.scrollBarComponents()[type]) {\n        // Prevent default behaviour and stop propagating\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        return this;\n    }\n\n    performAttachedScrollFunction (type, movedViewLength) {\n        Object.values(this.attachedComponents()).forEach((e) => {\n            e.performScrollAction(type, movedViewLength);\n        });\n        return this;\n    }\n\n    triggerScrollBarAction (type, delta) {\n        this.scrollBarComponents()[type] && this.scrollBarComponents()[type].scrollDeltaTo(delta);\n        return this;\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\nimport { arrangeComponents } from './component-resolver';\nimport { createHeaders } from './title-maker';\nimport { createLegend, getLegendSpace } from './legend-maker';\nimport { componentWrapperMaker } from './component-wrapper-maker';\nimport {\n    TOP,\n    BOTTOM,\n    LEFT,\n    RIGHT,\n    TITLE,\n    SUB_TITLE,\n    LEGEND,\n    VERTICAL_SCROLL_BAR,\n    HORIZONTAL_SCROLL_BAR,\n    GRID,\n    MESSAGE\n} from '../constants';\nimport { ScrollManager } from './scroll-manager';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const prepareLayout = (layout, renderDetails) => {\n    const { components, layoutConfig, measurement } = renderDetails;\n    const {\n        rows,\n        columns,\n        values,\n        cornerMatrices\n    } = components;\n    const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n    } = cornerMatrices;\n    if (rows && columns) {\n        layout.measurement(measurement)\n                        .config(layoutConfig)\n                        .matrices({\n                            top: [topLeft, columns[0], topRight],\n                            center: [rows[0], values, rows[1]],\n                            bottom: [bottomLeft, columns[1], bottomRight]\n                        })\n                        .triggerReflow();\n    }\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} mount\n *\n */\nexport const getRenderDetails = (context, mount) => {\n    let layoutConfig = mergeRecursive({}, context.config());\n    // Get height width of the mount point\n    let { height, width } = mount.getBoundingClientRect();\n    const heightAttr = context.height();\n    const widthAttr = context.width();\n    const visGroup = context.composition().visualGroup;\n    const {\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority,\n        rows,\n        columns,\n        values\n    } = visGroup.placeholderInfo();\n    const {\n        minWidth,\n        minHeight,\n        classPrefix,\n        showHeaders,\n        legend,\n        pagination,\n        scrollBar\n    } = context.config();\n\n    // Get title configuration\n    const titleConfig = context.title()[1];\n     // Get subtitle configuration\n    const subtitleConfig = context.subtitle()[1];\n    // Get legend position\n    const legendPosition = legend.position;\n    // Arrange components according to config\n    const layoutArrangement = arrangeComponents(context);\n\n    height = Math.floor(height);\n    width = Math.floor(width);\n\n    const availableHeightForCanvas = Math.max(heightAttr > 0 ? heightAttr : height, minHeight);\n    const availableWidthForCanvas = Math.max(widthAttr > 0 ? widthAttr : width, minWidth);\n\n    // Create headers and determine header height\n    const { headers, headerHeight } = createHeaders(context, availableHeightForCanvas, availableWidthForCanvas);\n\n    // Create legends and determine legend space\n    const legends = createLegend(context, headerHeight, availableHeightForCanvas, availableWidthForCanvas);\n    context._composition.legend = {};\n    legends.forEach((e) => {\n        context._composition.legend[e.scaleType] = e.legend;\n    });\n\n    const legendSpace = getLegendSpace(legends, legend, availableHeightForCanvas, availableWidthForCanvas);\n    const legendWidth = (legendPosition === LEFT || legendPosition === RIGHT) ? legendSpace.width : 0;\n    const legendHeight = (legendPosition === TOP || legendPosition === BOTTOM) ? legendSpace.height : 0;\n\n    // Set components for layouting\n    const components = {\n        headers,\n        legends,\n        canvases: [context],\n        rows,\n        columns,\n        values,\n        cornerMatrices: visGroup.cornerMatrices()\n    };\n\n    const measurement = {\n        mountSpace: {\n            height,\n            width\n        },\n        headerHeight,\n        legendSpace,\n        canvasWidth: availableWidthForCanvas,\n        canvasHeight: availableHeightForCanvas,\n        width: availableWidthForCanvas - legendWidth,\n        height: availableHeightForCanvas - headerHeight - legendHeight,\n        minUnitHeight: context.minUnitHeight(),\n        minUnitWidth: context.minUnitWidth()\n    };\n    layoutConfig = mergeRecursive(layoutConfig, {\n        classPrefix,\n        showHeaders,\n        border: mergeRecursive(visGroup.metaData().border, context.config().border),\n        layoutArrangement,\n        legend,\n        buffer: scrollBar.thickness,\n        pagination,\n        title: titleConfig,\n        subtitle: subtitleConfig,\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        mount,\n        priority\n    });\n    return {\n        layoutConfig,\n        components,\n        measurement\n    };\n};\n\nconst componentIndexes = {\n    title: 0,\n    subtitle: 1,\n    legend: 2,\n    verticalScrollBar: 3,\n    horizontalScrollBar: 4,\n    grid: 5,\n    message: 6\n};\n\nconst componentNames = {\n    0: TITLE,\n    1: SUB_TITLE,\n    2: LEGEND,\n    3: VERTICAL_SCROLL_BAR,\n    4: HORIZONTAL_SCROLL_BAR,\n    5: GRID,\n    6: MESSAGE\n};\n\nconst attachListeners = (componentWrappers) => {\n    componentWrappers.forEach((componentWrapper) => {\n        if (componentWrapper) {\n            componentWrapper.attachListener();\n        }\n    });\n};\n\n/**\n * Responsible for creating a scroll manager that manages interactions between the grid\n * component and the scroll bar components\n *\n * @param {Array} componentWrappers Contains the wrappers for all the components\n * @param {Canvas} canvas Instance of the current canvas\n * @return {Array} Positions of units either horizontal or vertical\n */\nconst createScrollManager = (componentWrappers, canvas) => {\n    const {\n        horizontalScrollBar,\n        verticalScrollBar,\n        grid\n    } = componentIndexes;\n\n    const horizontalScrollWrapper = componentWrappers[horizontalScrollBar];\n    const verticalScrollWrapper = componentWrappers[verticalScrollBar];\n    const gridWrapper = componentWrappers[grid];\n    const scrollBarManager = new ScrollManager();\n    const scrollBarComponents = {};\n\n    verticalScrollWrapper && (scrollBarComponents.vertical = verticalScrollWrapper);\n    horizontalScrollWrapper && (scrollBarComponents.horizontal = horizontalScrollWrapper);\n\n    scrollBarManager\n                    .scrollBarComponents(scrollBarComponents)\n                    .attachedComponents({\n                        grid: gridWrapper\n                    });\n    canvas.composition().hScrollBar = horizontalScrollWrapper;\n    canvas.composition().vScrollBar = verticalScrollWrapper;\n\n    [horizontalScrollWrapper, verticalScrollWrapper].forEach((wrapper) => {\n        wrapper && wrapper.manager(scrollBarManager);\n    });\n\n    gridWrapper.scrollBarManager(scrollBarManager);\n};\n\nexport const renderLayout = (canvas, renderDetails) => {\n    const layoutManager = canvas._layoutManager;\n    const gridLayout = canvas.layout();\n    const {\n\n        grid\n    } = componentIndexes;\n\n    // Get the component wrappers\n    const compWrappers = componentWrapperMaker(canvas, gridLayout, renderDetails);\n    const componentWrappers = Object.keys(componentIndexes).map(e => compWrappers[e]);\n    const gridWrapper = componentWrappers[grid];\n    if (gridWrapper) {\n        createScrollManager(componentWrappers, canvas);\n    }\n\n    componentWrappers.forEach((componentWrapper, index) => {\n        if (!componentWrapper) {\n            const deleteElementName = componentNames[index];\n            layoutManager.removeComponent(deleteElementName);\n        }\n    });\n    layoutManager.registerComponents(componentWrappers).compute();\n    attachListeners(componentWrappers);\n};\n","import {\n    getDataModelFromIdentifiers,\n    FieldType,\n    mergeRecursive,\n    isSimpleObject,\n    CommonProps\n} from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\n\nimport { applyInteractionPolicy } from '../helper';\n\nconst defaultInteractionPolicy = (valueMatrix, firebolt) => {\n    const isMeasure = field => field.type() === FieldType.MEASURE;\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    const xFields = [].concat(...visualGroup.getFieldsFromChannel('x'));\n    const yFields = [].concat(...visualGroup.getFieldsFromChannel('y'));\n    const colDim = xFields.every(field => field.type() === FieldType.DIMENSION);\n    const fieldInf = visualGroup.resolver().getAllFields();\n    const rowFacets = fieldInf.rowFacets;\n    const colFacets = fieldInf.colFacets;\n    valueMatrix.each((cell) => {\n        const unitFireBolt = cell.valueOf().firebolt();\n        if (!(xFields.every(isMeasure) && yFields.every(isMeasure))) {\n            const facetFields = cell.valueOf().facetByFields()[0];\n            const unitColFacets = facetFields.filter(d => colFacets.findIndex(v => v.equals(d)) !== -1);\n            const unitRowFacets = facetFields.filter(d => rowFacets.findIndex(v => v.equals(d)) !== -1);\n            let propFields;\n            if (colDim) {\n                propFields = unitColFacets.map(d => `${d}`);\n            } else {\n                propFields = unitRowFacets.map(d => `${d}`);\n            }\n\n            unitFireBolt.propagateWith('*', propFields, true);\n        }\n    });\n};\n\nconst defaultCrossInteractionPolicy = {\n    behaviours: {\n        '*': (propagationPayload, context) => {\n            const propagationCanvasAlias = propagationPayload.sourceCanvas;\n            const canvasAlias = context.parentAlias();\n            return propagationCanvasAlias ? canvasAlias === propagationCanvasAlias : true;\n        }\n    },\n    sideEffects: {\n        tooltip: (propagationPayload, context) => {\n            const propagationUnit = propagationPayload.sourceUnit;\n            const propagationCanvas = propagationPayload.sourceCanvas;\n            const unitId = context.id();\n            const canvasAlias = context.parentAlias();\n            if (propagationCanvas) {\n                return propagationCanvas !== canvasAlias ? true : unitId === propagationUnit;\n            }\n            return true;\n        },\n        selectionBox: () => false\n    }\n};\n\n/**\n * This class is responsible for dispatching any behavioural action to all the visual units housed by the canvas.\n * It is created by {@link Canvas}. This class does not handle any physical actions. Physical actions get triggered\n * in {@link VisualUnit} which is managed by it's own firebolt instance. The firebolt instance of canvas only\n * propagates the action to all the visual units in it's composition.\n *\n * To get the firebolt instance of {@link Canvas}\n * ```\n *  const firebolt = canvas.firebolt();\n * ```\n *\n * @class GroupFireBolt\n * @public\n */\nexport default class GroupFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this._interactionPolicy = this.constructor.defaultInteractionPolicy();\n        this.crossInteractionPolicy(this.constructor.defaultCrossInteractionPolicy());\n    }\n\n    static defaultInteractionPolicy () {\n        return defaultInteractionPolicy;\n    }\n\n    static defaultCrossInteractionPolicy () {\n        return defaultCrossInteractionPolicy;\n    }\n\n    interactionPolicy (...policy) {\n        if (policy.length) {\n            this._interactionPolicy = policy[0] || this.constructor.defaultInteractionPolicy();\n            return this;\n        }\n        return this._interactionPolicy;\n    }\n\n    crossInteractionPolicy (...policy) {\n        if (policy.length) {\n            this._crossInteractionPolicy = mergeRecursive(mergeRecursive({},\n                this.constructor.defaultCrossInteractionPolicy()), policy[0] || {});\n            const context = this.context;\n            applyInteractionPolicy(this);\n            context._throwback.registerImmediateListener([CommonProps.MATRIX_CREATED], () => {\n                applyInteractionPolicy(this);\n            });\n            return this;\n        }\n        return this._crossInteractionPolicy;\n    }\n\n    /**\n     * Dispatches a behavioural action with a payload. It takes the name of the behavioural action and a payload\n     * object which contains the criteria aend an array of side effects which determines what side effects are\n     * going to be shown in each visual unit of the canvas. It prepares the datamodel from the given criteria\n     * and initiates a propagation from the datamodel of canvas. Then all the visual units of canvas which listens\n     * to the propagation gets informed on which rows got selected and dispatches the behavioural action sent during\n     * propagation.\n     *\n     * To dispatch a behavioural action on the canvas\n     * ```\n     *  // Get the firebolt instance of the canvas\n     *  const firebolt = canvas.firebolt();\n     *  // Dispatch a brush behaviour\n     *  firebolt.dispatchBehaviour('brush', {\n     *      // Selects all the rows with Horsepower having range between 100 and 200.\n     *      criteria: {\n     *          Horsepower: [100, 200]\n     *      }\n     *  });\n     * // On dispatch of this behavioural action, a selection box gets created and plots gets faded out which are the\n     * // default side effects mapped to this behavioural action.\n     * ```\n     *\n     * ```\n     * Additionally, it can also be passed an array of side effects in the payload.\n     *  // Dispatch a select behaviour with only crossline as side effect.\n     *  firebolt.dispatchBehaviour('select', {\n     *      criteria: {\n     *          Cylinders: ['8']\n     *      },\n     *      sideEffects: ['crossline']\n     *  });\n     * ```\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of the behavioural action\n     * @param {Object} payload Object which contains the interaction information.\n     * @param {Object | Array.<Array>} payload.criteria Identifiers by which the selection happens.\n     * @param {Array.<string|Object>} payload.sideEffects Side effects which needs to be shown.\n     *\n     * @return {GroupFireBolt} Instance of firebolt.\n     */\n    dispatchBehaviour (behaviour, payload) {\n        const propPayload = Object.assign(payload);\n        const criteria = propPayload.criteria;\n        const data = this.context.composition().visualGroup.getGroupByData();\n        const fieldsConfig = data.getFieldsConfig();\n        const model = getDataModelFromIdentifiers(data, criteria);\n        const behaviouralAction = this._actions.behavioural[behaviour];\n\n        if (behaviouralAction) {\n            const fields = isSimpleObject(criteria) ? Object.keys(criteria) : (criteria ? criteria[0] : []);\n            const validFields = fields.filter(field => field in fieldsConfig);\n            const mutates = behaviouralAction.constructor.mutates();\n            const propConfig = {\n                payload: propPayload,\n                action: behaviour,\n                criteria: model,\n                sourceId: this.context.alias(),\n                isMutableAction: mutates,\n                propagateInterpolatedValues: validFields.every(field => fieldsConfig[field].def.type ===\n                    FieldType.MEASURE)\n            };\n            data.propagate(model, propConfig, true);\n        }\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        return this;\n    }\n}\n","import GroupFireBolt from './group-firebolt';\n\nexport default GroupFireBolt;\n","export const APP_INITIAL_STATE = {\n    app: {\n        group: {},\n        units: {},\n        layers: {},\n        canvas: {}\n    },\n    local: {\n        canvas: {},\n        group: {},\n        units: {},\n        layers: {}\n    }\n};\n\n","import { GridLayout } from '@chartshq/layout';\nimport { transactor, Store, getUniqueId, selectElement, STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { RETINAL } from '../constants';\nimport TransactionSupport from '../transaction-support';\nimport { getRenderDetails, prepareLayout, renderLayout } from './layout-maker';\nimport { localOptions, canvasOptions } from './local-options';\nimport GroupFireBolt from './firebolt';\nimport options from '../options';\nimport { APP_INITIAL_STATE } from './app-state';\nimport { initCanvas,\n        setupChangeListener,\n        setLabelRotationForAxes,\n        createGroupState,\n        createLayoutManager,\n        setLayoutInfForUnits\n} from './helper';\n/**\n * Canvas is a logical component which houses a visualization by taking multiple variable in different encoding channel.\n * Canvas manages lifecycle of many other logical component and exposes one consistent interface for creation of chart.\n * Canvas is intialized from environment with settings from environment and singleton dependencies.\n *\n * To create an instance of canvas\n * ```\n *  const env = Muze();\n *  const canvas = env.canvas()\n * ```\n *\n *\n * @class\n * @public\n * @module Canvas\n */\nexport default class Canvas extends TransactionSupport {\n\n    /**\n     * Creates reactive property accessors.\n     * - data\n     * - height\n     * - width\n     * - config\n     * This configs are retrieved from options.\n     */\n    constructor (globalDependencies) {\n        super();\n\n        this._allOptions = Object.assign({}, options, localOptions);\n        this._registry = {};\n        this._composition = {};\n        this._cachedProps = {};\n        this._alias = null;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        this._composition.layout = new GridLayout();\n        this._store = new Store(APP_INITIAL_STATE);\n\n        this._throwback = new Store({\n            [CommonProps.MATRIX_CREATED]: false,\n            [CommonProps.ON_LAYER_DRAW]: null\n        });\n\n        // Setters and getters will be mounted on this. The object will be mutated.\n        const namespace = STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE;\n        const allOptions = Object.assign({}, options, localOptions, canvasOptions);\n\n        transactor(this, allOptions, this._store, {\n            namespace\n        });\n\n        this.dependencies(Object.assign({}, globalDependencies, this._dependencies));\n        this.firebolt(new GroupFireBolt(this, {\n            behavioural: behaviouralActions,\n            physical: physicalActions,\n            physicalBehaviouralMap: {}\n        }, sideEffects, behaviourEffectMap));\n        this.alias(`canvas-${getUniqueId()}`);\n        this.title('', {});\n        this.subtitle('', {});\n        this.legend({});\n        this.color({});\n        this.shape({});\n        this.size({});\n        setupChangeListener(this);\n         // init layoutManager\n        this._layoutManager = createLayoutManager();\n    }\n\n    /**\n     * Retrieves an instance of layout which is responsible for layouting. Layout is responsible for creating faceted\n     * presentation using table layout.\n     *\n     * @public\n     *\n     * @return {GridLayout} Instance of layout attached to canvas.\n     */\n    layout (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().layout;\n    }\n\n    /**\n     * Retrieves the composition for a canvas\n     *\n     * @public\n     *\n     * @return {object} Instances of the components which canvas requires to draw the full visualization.\n     *      ```\n     *          {\n     *              layout: // Instance of {@link GridLayout}\n     *              legend: // Instance of {@link Legend}\n     *              subtitle: // Instance of {@link TextCell} using which the title is rendered\n     *              title: // Instance of {@link TextCell} using which the title is rendered\n     *              visualGroup: // Instance of {@link visualGroup}\n     *          }\n     *      ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Sets or gets the alias of the canvas. Alias is a name by which the canvas can be referred.\n     *\n     * When setter\n     * @param {string} alias Name of the alias.\n     *\n     * @return {Canvas} Instance of the canvas.\n     *\n     * When getter\n     *\n     * @return {string} Alias of canvas.\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            const visualGroup = this.composition().visualGroup;\n            this._alias = params[0];\n            visualGroup && visualGroup.alias(this.alias());\n            return this;\n        }\n        return this._alias;\n    }\n\n    /**\n     * Creates an instance initiated with given settings.\n     *\n     * @param {Object} initialSettings Initial settings to be populated in the model\n     * @param {Object} regEntry newly created instance with the initial settings\n     * @param {Object} globalDependencies dependencies which will be created only once in the page\n     *\n     * @return {Object} newly created instance with the initial settings\n     */\n    static withSettings (initialSettings, regEntry, globalDependencies) {\n        const instance = new Canvas(globalDependencies);\n\n        for (const key in initialSettings) {\n            instance[key](initialSettings[key]);\n        }\n        // set registry for instance\n        instance.registry(regEntry);\n        return instance;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof Canvas\n     */\n    static formalName () {\n        return 'canvas';\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this canvas. The firebolt instance can be used to dispatch a\n     * behaviour dynamically on the canvas. This firebolt does not handle any physical actions. It is just used to\n     * propagate the action to all the visual units in it's composition.\n     *\n     * @public\n     *\n     * @return {GroupFireBolt} Instance of firebolt associated with canvas.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Registry peoperty accessor\n     *\n     * @param {Object} reg plain old javascript object keyvalue pairs. Key containing module name and value contains\n     * module definition class. The reg object has to be flat object of level 1.\n     */\n    registry (...params) {\n        if (params.length) {\n            const components = Object.assign({}, params[0].components);\n            const componentSubRegistry = Object.assign({}, params[0].componentSubRegistry);\n\n            this._registry = { components, componentSubRegistry };\n            const initedComponents = initCanvas(this);\n            // @todo is it okay to continue this tight behaviour? If not use a resolver to resolve diff component type.\n            this._composition.visualGroup = initedComponents[0];\n            createGroupState(this);\n            this.composition().visualGroup.alias(this.alias()).store(this._store);\n            return this;\n        }\n        return this._registry;\n    }\n\n    /*\n     * Prepare dependencies for top level elements\n     */\n    dependencies (...param) {\n        if (param.length) {\n            this._dependencies = param[0];\n            return this;\n        }\n        // @todo prepare dependencies here.\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     * @param {*} lifeCycles\n     *\n     * @memberof Canvas\n     */\n    lifeCycle (lifeCycles) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        if (lifeCycles) {\n            lifeCycleManager.register(lifeCycles);\n            return this;\n        }\n        return lifeCycleManager;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof Canvas\n     */\n    legend (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().legend;\n    }\n\n    /**\n     * Returns a promise for various {@link LifecycleEvents} of the various components of canvas. The promise gets\n     * resolved once the particular event gets completed.\n     *\n     * To use this,\n     * ```\n     *      canvas.once('layer.drawn').then(() => {\n     *          // Do any post drawing work here.\n     *      });\n     * ```\n     * @public\n     *\n     * @param {string} eventName Name of the lifecycle event.\n     *\n     * @return {Promise} A pending promise waiting for resolve to be called.\n     */\n    once (eventName) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        return lifeCycleManager.retrieve(eventName);\n    }\n\n    /**\n     * Internal function to trigger render, this method is cognizant of all the properties of the core modules and\n     * establish a passive reactivity. Passive reactivity is not always a bad thing :)\n     * @internal\n     */\n    render () {\n        const mount = this.mount();\n        // removeChild(mount);\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        // Get render details including arrangement and measurement\n        const renderDetails = getRenderDetails(this, mount);\n        lifeCycleManager.notify({ client: this, action: 'beforedraw' });\n        // Prepare the layout by triggering the matrix calculation\n        prepareLayout(this.layout(), renderDetails);\n\n        this._layoutManager.dimension({\n            height: renderDetails.measurement.canvasHeight,\n            width: renderDetails.measurement.canvasWidth\n        });\n\n        this._layoutManager.renderAt(mount);\n\n        // Render each component\n        renderLayout(this, renderDetails);\n\n        setLayoutInfForUnits(this);\n\n        // setLabelRotation\n        setLabelRotationForAxes(this);\n    }\n\n    /**\n     * Returns the instances of x axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the top axis and the second element represents the bottom\n     *   // axis.\n     *   [\n     *      [X1, X2],\n     *      [X3, X4]\n     *   ]\n     * ```\n     * @public\n     *\n     * @return {Array.<Array>} Instances of x axis.\n     */\n    xAxes () {\n        return this.composition().visualGroup.getAxes('x');\n    }\n\n    /**\n     * Returns the instances of y axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the left axis and the second element represents the right\n     *   // axis.\n     *   [\n     *      [Y1, Y2],\n     *      [Y3, Y4]\n     *   ]\n     * ```\n     * @public\n     * @return {Array.<Array>} Instances of y axis.\n     */\n    yAxes () {\n        return this.composition().visualGroup.getAxes('y');\n    }\n\n    /**\n     * Returns all the retinal axis of the canvas. Color, shape and size axis are combinedly called retinal axis.\n     *\n     * @public\n     * @return {Object} Instances of retinal axis.\n     *          ```\n     *              {\n     *                  color: [ColorAxis], // Array of color axis.\n     *                  shape: [ShapeAxis], // Array of shape axis.\n     *                  size: [SizeAxis] // Array of size axis.\n     *              }\n     *          ```\n     */\n    getRetinalAxes () {\n        const visualGroup = this.composition().visualGroup;\n        return visualGroup.getAxes(RETINAL);\n    }\n\n    mount (...params) {\n        if (params.length) {\n            let value = params[0];\n            if (typeof params[0] === 'string') {\n                value = selectElement(params[0]).node();\n            }\n            this._mount = value;\n            return this;\n        }\n        return this._mount;\n    }\n}\n","import { cellRegistry, SimpleCell } from '@chartshq/visual-cell';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { layerRegistry } from '@chartshq/visual-layer';\nimport { SimpleGroup, VisualGroup } from '@chartshq/visual-group';\n\nexport const COMPONENTS = {\n    VisualGroup,\n    VisualUnit\n};\nexport const SUBREGISTRIES = {\n    cellRegistry,\n    layerRegistry\n};\nexport const INTERFACES = {\n    SimpleGroup,\n    SimpleCell\n};\n\n","import { DEFAULT_LAYERS } from './defaults';\n\nexport default () => {\n    const reg = DEFAULT_LAYERS;\n    const regObj = {\n        set: (key, def) => {\n            reg[key] = def;\n            return regObj;\n        },\n        get: () => reg\n    };\n    return regObj;\n};\n","import {\n    transactor,\n    Smartlabel,\n    enableChainedTransaction,\n    LifeCycleManager,\n    DataModel,\n    makeElement,\n    getClientPoint,\n    selectElement,\n    getEvent,\n    require,\n    DateTimeFormatter,\n    Store\n} from 'muze-utils';\n\nimport {\n    SurrogateSideEffect,\n    SpawnableSideEffect,\n    sideEffects,\n    PersistentBehaviour,\n    GenericBehaviour,\n    VolatileBehaviour,\n    behaviouralActions,\n    GenericSideEffect\n} from '@chartshq/muze-firebolt';\nimport { layerFactory } from '@chartshq/visual-layer';\nimport pkg from '../package.json';\nimport * as operators from './operators';\nimport { actionModel as ActionModel } from './action-model';\nimport options from './options';\nimport { Canvas } from './canvas';\nimport { COMPONENTS, SUBREGISTRIES } from './default-registry';\nimport './muze.scss';\n\n// Cache singleton instances which should be included only once in a page\nconst globalCache = {};\nconst defaultRegistry = COMPONENTS;\n\nconst overrideRegistryDefinitions = (overrideRegistry, registry) => {\n    for (const prop in overrideRegistry) {\n        registry.set(prop, overrideRegistry[prop]);\n    }\n};\n\n/**\n * Entry point to renderer. Initializes an environment with settings and registries for canvas. This is a simple wrapper\n * over {@link Canvas} which enables common configuration passing to multiple such canvases.\n *\n * Everytime `muze()` is called it creates an environment. These environment supports subset of APIs of Canvas. If\n * common configuration is used to render multiple canvases then it can be set directly in the env. Like if data is\n * common across all the visulization then its better to set the data in env. When a canvas is created it receives all\n * those configuration from env.\n *\n * ```\n *  // Creates an environment\n *  const env = muze()\n *  // Set data property in environment, so that all the canvas created from the same environment gets this data\n *  // automatically\n *  env.data(dm);\n *  // Creates canvas, by default env pushes data to canvas instance\n *  const canvas = env.canvas();\n * ```\n *\n * If a property is set on both environment and canvas instance, property set on canvas instance gets more priority.\n *\n * @public\n * @module muze\n * @namespace Muze\n *\n * @return {Env} Instance of an environment\n */\nconst muze = () => {\n    // Setters and getters will be mounted on this. Object will be mutated.\n    const [env, globalStore] = transactor({}, options);\n    const components = Object.assign({}, COMPONENTS);\n    const componentSubRegistryDef = Object.assign(SUBREGISTRIES);\n    const componentSubRegistry = {};\n\n    for (const prop in componentSubRegistryDef) {\n        componentSubRegistry[prop] = componentSubRegistryDef[prop]();\n    }\n\n    // Apart form the setter getter, an instance method is injected to create real renderer instances\n    env.canvas = () => {\n        // Create a canvas instance with this settings\n        const settings = globalStore.serialize();\n        const canvas = Canvas.withSettings(settings, { /* registry */\n            components,\n            componentSubRegistry\n        }, env.globalDependencies());\n\n        // Whenever settings is changed canvas is updated\n        enableChainedTransaction(globalStore, canvas, Object.keys(settings));\n\n        return canvas;\n    };\n\n    // Global dependencies for for compositions. Only one copy of the same should be in the page\n    env.globalDependencies = () => {\n        if (!globalCache.smartlabel) {\n            globalCache.smartlabel = new Smartlabel(1, 'body');\n        }\n        return {\n            smartlabel: globalCache.smartlabel,\n            lifeCycleManager: new LifeCycleManager()\n        };\n    };\n\n    // Retrieves global settings. This getter is readonly so that user can't change this as change should happen\n    // only from setter to avoid unwanted sync issues.\n    env.settings = () => globalStore.serialize();\n\n    env.registry = (...overrideRegistry) => {\n        // Selectively copy the properties from COMPONENTS\n        if (overrideRegistry.length) {\n            for (const prop in overrideRegistry) {\n                if (prop in defaultRegistry) {\n                    components[prop] = overrideRegistry[prop];\n                }\n            }\n            return env;\n        }\n        return components;\n    };\n\n    env.cellRegistry = (...overrideRegistry) => {\n        const cellRegistry = componentSubRegistry.cellRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], cellRegistry);\n            return env;\n        }\n        return cellRegistry.get();\n    };\n\n    env.layerRegistry = (...overrideRegistry) => {\n        const layerRegistry = componentSubRegistry.layerRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], layerRegistry);\n            return env;\n        }\n        return layerRegistry.get();\n    };\n\n    return env;\n};\n\nconst SideEffects = {\n    sideEffects,\n    standards: {\n        SurrogateSideEffect,\n        SpawnableSideEffect,\n        GenericSideEffect\n    }\n};\n\nconst Behaviours = {\n    behaviouralActions,\n    standards: {\n        GenericBehaviour,\n        PersistentBehaviour,\n        VolatileBehaviour\n    }\n};\n\nmuze.DataModel = DataModel;\nmuze.version = pkg.version;\nmuze.SideEffects = SideEffects;\nmuze.ActionModel = ActionModel;\nmuze.layerFactory = layerFactory;\nmuze.Operators = operators;\nmuze.Behaviours = Behaviours;\nmuze.utils = {\n    getClientPoint,\n    getEvent,\n    makeElement,\n    selectElement,\n    DateTimeFormatter,\n    require\n};\nmuze.Model = new Store().model.constructor;\nexport default muze;\n"],"sourceRoot":""}