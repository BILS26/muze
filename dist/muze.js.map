{"version":3,"sources":["webpack://muze/webpack/universalModuleDefinition","webpack://muze/webpack/bootstrap","webpack://muze/webpack://DataModel/webpack/universalModuleDefinition","webpack://muze/webpack://DataModel/webpack/bootstrap","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/csv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/dsv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/index.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/tsv.js","webpack://muze/webpack://DataModel/src/constants/index.js","webpack://muze/webpack://DataModel/src/converter/auto-resolver.js","webpack://muze/webpack://DataModel/src/converter/dsv-arr.js","webpack://muze/webpack://DataModel/src/converter/dsv-str.js","webpack://muze/webpack://DataModel/src/converter/flat-json.js","webpack://muze/webpack://DataModel/src/converter/index.js","webpack://muze/webpack://DataModel/src/datamodel.js","webpack://muze/webpack://DataModel/src/default-config.js","webpack://muze/webpack://DataModel/src/enums/data-format.js","webpack://muze/webpack://DataModel/src/enums/dimension-subtype.js","webpack://muze/webpack://DataModel/src/enums/field-type.js","webpack://muze/webpack://DataModel/src/enums/filtering-mode.js","webpack://muze/webpack://DataModel/src/enums/index.js","webpack://muze/webpack://DataModel/src/enums/measure-subtype.js","webpack://muze/webpack://DataModel/src/export.js","webpack://muze/webpack://DataModel/src/field-creator.js","webpack://muze/webpack://DataModel/src/field-store.js","webpack://muze/webpack://DataModel/src/fields/binned/index.js","webpack://muze/webpack://DataModel/src/fields/categorical/index.js","webpack://muze/webpack://DataModel/src/fields/continuous/index.js","webpack://muze/webpack://DataModel/src/fields/dimension/index.js","webpack://muze/webpack://DataModel/src/fields/field/index.js","webpack://muze/webpack://DataModel/src/fields/index.js","webpack://muze/webpack://DataModel/src/fields/measure/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/binned-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/categorical-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/continuous-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/field-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/temporal-parser/index.js","webpack://muze/webpack://DataModel/src/fields/partial-field/index.js","webpack://muze/webpack://DataModel/src/fields/temporal/index.js","webpack://muze/webpack://DataModel/src/helper.js","webpack://muze/webpack://DataModel/src/index.js","webpack://muze/webpack://DataModel/src/invalid-aware-types.js","webpack://muze/webpack://DataModel/src/operator/bucket-creator.js","webpack://muze/webpack://DataModel/src/operator/compose.js","webpack://muze/webpack://DataModel/src/operator/cross-product.js","webpack://muze/webpack://DataModel/src/operator/data-builder.js","webpack://muze/webpack://DataModel/src/operator/difference.js","webpack://muze/webpack://DataModel/src/operator/get-common-schema.js","webpack://muze/webpack://DataModel/src/operator/group-by-function.js","webpack://muze/webpack://DataModel/src/operator/group-by.js","webpack://muze/webpack://DataModel/src/operator/index.js","webpack://muze/webpack://DataModel/src/operator/merge-sort.js","webpack://muze/webpack://DataModel/src/operator/natural-join-filter-function.js","webpack://muze/webpack://DataModel/src/operator/natural-join.js","webpack://muze/webpack://DataModel/src/operator/outer-join.js","webpack://muze/webpack://DataModel/src/operator/pure-operators.js","webpack://muze/webpack://DataModel/src/operator/row-diffset-iterator.js","webpack://muze/webpack://DataModel/src/operator/union.js","webpack://muze/webpack://DataModel/src/relation.js","webpack://muze/webpack://DataModel/src/stats/index.js","webpack://muze/webpack://DataModel/src/utils/column-major.js","webpack://muze/webpack://DataModel/src/utils/date-time-formatter.js","webpack://muze/webpack://DataModel/src/utils/domain-generator.js","webpack://muze/webpack://DataModel/src/utils/extend2.js","webpack://muze/webpack://DataModel/src/utils/helper.js","webpack://muze/webpack://DataModel/src/utils/index.js","webpack://muze/webpack://DataModel/src/utils/reducer-store.js","webpack://muze/webpack://DataModel/src/value.js","webpack://muze/webpack://hyperdis/webpack/universalModuleDefinition","webpack://muze/webpack://hyperdis/webpack/bootstrap","webpack://muze/webpack://hyperdis/src/utils/set.js","webpack://muze/webpack://hyperdis/src/utils/index.js","webpack://muze/webpack://hyperdis/src/graph-node.js","webpack://muze/webpack://hyperdis/src/electric-node.js","webpack://muze/webpack://hyperdis/src/graph.js","webpack://muze/webpack://hyperdis/src/model.js","webpack://muze/webpack://hyperdis/src/index.js","webpack://muze/(webpack)/buildin/module.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/SmartlabelManager.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/lib.js","webpack://muze/./packages/muze/src/index.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/container-manager.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisector.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisect.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/range.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ticks.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/threshold/sturges.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/map.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/nest.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/set.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/ordinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/band.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/define.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/lab.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/rgb.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/object.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/string.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/value.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/parse.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/date.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/round.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/decompose.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/zoom.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hsl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hcl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/piecewise.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/continuous.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatDecimal.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/exponent.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatSpecifier.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTrim.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatPrefixAuto.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatRounded.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTypes.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatGroup.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatNumerals.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionFixed.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/tickFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionPrefix.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionRound.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/nice.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/log.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/pow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/threshold.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/interval.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/millisecond.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/second.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/minute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/hour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/day.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/week.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/month.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/year.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMinute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcHour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcDay.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcWeek.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMonth.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcYear.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoParse.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/time.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20b.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20c.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/viridis.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/sequential.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/ramp.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack://muze/./packages/muze-utils/src/enums/namespace.js","webpack://muze/./packages/muze-utils/src/enums/reserved-fields.js","webpack://muze/./packages/muze-utils/src/enums/common-props.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/axis.js","webpack://muze/./packages/muze-utils/node_modules/d3-path/src/path.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/arc.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/line.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/area.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/radial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/lineRadial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/diamond.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/star.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/square.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/triangle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/wye.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/noop.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/bundle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRom.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linearClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/monotone.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/natural.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/step.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/stack.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/cubic.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/poly.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/sin.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/bounce.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/back.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/elastic.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/RedBlackTree.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Edge.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Cell.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Beach.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Diagram.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/voronoi.js","webpack://muze/./packages/muze-utils/src/DataSystem/selection.js","webpack://muze/./packages/muze-utils/src/common-utils.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/circle.js","webpack://muze/./packages/muze-utils/src/DataSystem/dataSelect.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol.js","webpack://muze/./packages/muze-utils/src/enums/stack-config.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/diverging.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/expand.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/wiggle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/pie.js","webpack://muze/./packages/muze-utils/src/enums/constants.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespaces.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespace.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/creator.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selector.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selectorAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/matcher.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sparse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/enter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/data.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sort.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/window.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/classed.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/html.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/raise.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/lower.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/insert.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/clone.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/exit.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/order.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/call.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/nodes.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/node.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/size.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/empty.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/each.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/property.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/append.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/datum.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/local.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/sourceEvent.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/mouse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/touch.js","webpack://muze/./packages/muze-utils/node_modules/d3-dispatch/src/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/noevent.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/nodrag.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/event.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/drag.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timer.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timeout.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/schedule.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/tween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/interpolate.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selection.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attrTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/styleTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/delay.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/ease.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/interrupt.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/interrupt.js","webpack://muze/./packages/muze-utils/src/renderer-utils.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/event-list.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/lifecycle-manager.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/index.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/helper.js","webpack://muze/./packages/muze-utils/src/index.js","webpack://muze/./packages/muze-firebolt/src/enums/actions.js","webpack://muze/./packages/muze-firebolt/src/enums/selection.js","webpack://muze/./packages/muze-firebolt/src/selection-set/index.js","webpack://muze/./packages/muze-firebolt/src/selection-set/selection-set.js","webpack://muze/./packages/muze-firebolt/src/helper/index.js","webpack://muze/./packages/muze-firebolt/src/firebolt.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/generic.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/volatile.js","webpack://muze/./packages/muze-firebolt/src/enums/behaviours.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/highlight.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/brush.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/filter.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/persistent.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/select.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-action-config.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-event.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/hover.js","webpack://muze/./packages/muze-firebolt/src/enums/constants.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/click.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/drag.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/longtouch.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/touch-drag.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/props.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/generic-sideeffect.js","webpack://muze/./packages/muze-firebolt/src/side-effects/surrogate.js","webpack://muze/./packages/muze-firebolt/src/side-effects/spawnable.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/helper.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/selection-box-drag.js","webpack://muze/./packages/muze-tooltip/src/constants.js","webpack://muze/./packages/muze-tooltip/src/default-config.js","webpack://muze/./packages/muze-tooltip/src/helper.js","webpack://muze/./packages/muze-tooltip/src/strategy.js","webpack://muze/./packages/muze-tooltip/src/content.js","webpack://muze/./packages/muze-tooltip/src/tooltip.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/helper/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/crossline/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/strategy.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/filter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/anchors/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/persistent-anchors.js","webpack://muze/./packages/muze-firebolt/src/side-effects/brush-anchors.js","webpack://muze/./packages/muze-firebolt/src/behaviour-effect-map.js","webpack://muze/./packages/visual-layer/src/enums/constants.js","webpack://muze/./packages/visual-layer/src/layers/area/default-config.js","webpack://muze/./packages/visual-layer/src/simple-layer/simple-layer.js","webpack://muze/./packages/visual-layer/src/base-layer/props.js","webpack://muze/./packages/muze-axis/src/enums/axis-orientation.js","webpack://muze/./packages/muze-axis/src/enums/scale-type.js","webpack://muze/./packages/muze-axis/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/scale-creator.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/default-config.js","webpack://muze/./packages/muze-axis/src/axis-renderer.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/space-setter.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/helper.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/props.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/simple-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/linear.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/log.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/pow.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/continous-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/band-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/time-axis.js","webpack://muze/./packages/muze-axis/src/color-axis/color-maps.js","webpack://muze/./packages/muze-axis/src/color-axis/defaults.js","webpack://muze/./packages/muze-axis/src/color-axis/props.js","webpack://muze/./packages/muze-axis/src/helper.js","webpack://muze/./packages/muze-axis/src/color-axis/color-strategy.js","webpack://muze/./packages/muze-axis/src/color-axis/color-axis.js","webpack://muze/./packages/muze-axis/src/size-axis/defaults.js","webpack://muze/./packages/muze-axis/src/size-axis/size-strategy.js","webpack://muze/./packages/muze-axis/src/size-axis/props.js","webpack://muze/./packages/muze-axis/src/size-axis/size-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/defaults.js","webpack://muze/./packages/muze-axis/src/shape-axis/props.js","webpack://muze/./packages/muze-axis/src/shape-axis/shape-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/helper.js","webpack://muze/./packages/muze-axis/src/data-type-scale-map.js","webpack://muze/./packages/transform/src/group-transform/index.js","webpack://muze/./packages/transform/src/identity-transform/index.js","webpack://muze/./packages/transform/src/transform-factory/index.js","webpack://muze/./packages/transform/src/enums/transform-type.js","webpack://muze/./packages/transform/src/stack-transform/index.js","webpack://muze/./packages/visual-layer/src/helpers/index.js","webpack://muze/./packages/visual-layer/src/base-layer/listener-map.js","webpack://muze/./packages/visual-layer/src/enums/props.js","webpack://muze/./packages/visual-layer/src/base-layer/default-options.js","webpack://muze/./packages/visual-layer/src/base-layer/base-layer.js","webpack://muze/./packages/visual-layer/src/layers/line/renderer.js","webpack://muze/./packages/visual-layer/src/layers/line/default-config.js","webpack://muze/./packages/visual-layer/src/layers/line/line.js","webpack://muze/./packages/visual-layer/src/layers/area/renderer.js","webpack://muze/./packages/visual-layer/src/layers/area/area.js","webpack://muze/./packages/visual-layer/src/layers/arc/default-config.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc-helper.js","webpack://muze/./packages/visual-layer/src/layers/text/renderer.js","webpack://muze/./packages/visual-layer/src/layers/text/default-config.js","webpack://muze/./packages/visual-layer/src/layers/text/text.js","webpack://muze/./packages/visual-layer/src/layers/point/renderer.js","webpack://muze/./packages/visual-layer/src/layers/point/default-config.js","webpack://muze/./packages/visual-layer/src/layers/point/point.js","webpack://muze/./packages/visual-layer/src/layers/bar/renderer.js","webpack://muze/./packages/visual-layer/src/layers/bar/default-config.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar-helper.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar.js","webpack://muze/./packages/visual-layer/src/layers/tick/default-config.js","webpack://muze/./packages/visual-layer/src/layers/tick/renderer.js","webpack://muze/./packages/visual-layer/src/layers/tick/tick.js","webpack://muze/./packages/visual-layer/src/enums/layer-types.js","webpack://muze/./packages/visual-layer/src/layer-factory/layer-factory.js","webpack://muze/./packages/visual-layer/src/layer-factory/index.js","webpack://muze/./packages/visual-layer/src/defaults.js","webpack://muze/./packages/visual-group/src/enums/constants.js","webpack://muze/./packages/visual-group/src/visual-group/local-options.js","webpack://muze/./packages/visual-group/src/simple-group/simple-group.js","webpack://muze/./packages/visual-group/src/variable/variable.js","webpack://muze/./packages/visual-group/src/variable/composed-vars.js","webpack://muze/./packages/visual-group/src/variable/simple-var.js","webpack://muze/./packages/visual-group/src/encoder/field-sanitizer.js","webpack://muze/./packages/visual-group/src/encoder/visual-encoder.js","webpack://muze/./packages/visual-group/src/enums/scale-maps.js","webpack://muze/./packages/visual-group/src/data-type-scale-map.js","webpack://muze/./packages/visual-group/src/encoder/encoder-helper.js","webpack://muze/./packages/visual-group/src/encoder/cartesian-encoder.js","webpack://muze/./packages/visual-group/src/encoder/polar-encoder.js","webpack://muze/./packages/visual-group/src/encoder/retinal-encoder.js","webpack://muze/./packages/visual-group/src/group-helper/group-utils.js","webpack://muze/./packages/visual-unit/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/visual-unit/src/helper/index.js","webpack://muze/./packages/visual-unit/src/enums/constants.js","webpack://muze/./packages/visual-unit/src/helper/grid-lines.js","webpack://muze/./packages/visual-unit/src/default-config.js","webpack://muze/./packages/visual-unit/src/local-options.js","webpack://muze/./packages/visual-unit/src/enums/reactive-props.js","webpack://muze/./packages/visual-unit/src/listener-map.js","webpack://muze/./packages/visual-unit/src/props.js","webpack://muze/./packages/visual-unit/src/firebolt/helper.js","webpack://muze/./packages/visual-unit/src/firebolt/payload-generator.js","webpack://muze/./packages/visual-unit/src/firebolt/data-propagator.js","webpack://muze/./packages/visual-unit/src/firebolt/index.js","webpack://muze/./packages/visual-unit/src/visual-unit.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-model.js","webpack://muze/./packages/visual-group/src/group-helper/cell-creator.js","webpack://muze/./packages/visual-group/src/group-helper/resolver-props.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-resolver.js","webpack://muze/./packages/visual-group/src/visual-group/value-matrix.js","webpack://muze/./packages/visual-group/src/visual-group/helper.js","webpack://muze/./packages/visual-group/src/visual-group/change-listener.js","webpack://muze/./packages/visual-group/src/visual-group/props.js","webpack://muze/./packages/visual-group/src/visual-group/visual-group.js","webpack://muze/./packages/muze-legend/src/firebolt/behavioural/select.js","webpack://muze/./packages/muze-legend/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/muze-legend/src/firebolt/behaviour-effect-map.js","webpack://muze/./packages/muze-legend/src/enums/behaviours.js","webpack://muze/./packages/muze-legend/src/enums/side-effects.js","webpack://muze/./packages/muze-legend/src/enums/constants.js","webpack://muze/./packages/muze-legend/src/firebolt/helper.js","webpack://muze/./packages/muze-legend/src/firebolt/legend-firebolt.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/drag.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/hover.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/click.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/index.js","webpack://muze/./packages/muze-legend/src/enums/actions.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/selection-box-drag.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/selection-box/index.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/strategies.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/index.js","webpack://muze/./packages/muze-legend/src/legend/props.js","webpack://muze/./packages/muze-legend/src/legend/defaults.js","webpack://muze/./packages/muze-legend/src/legend/legend-helper.js","webpack://muze/./packages/muze-legend/src/legend/simple-legend.js","webpack://muze/./packages/muze-legend/src/legend/position-config.js","webpack://muze/./packages/muze-legend/src/legend/renderer.js","webpack://muze/./packages/muze-legend/src/legend/discrete-legend.js","webpack://muze/./packages/muze-legend/src/legend/gradient-helper.js","webpack://muze/./packages/muze-legend/src/legend/gradient-legend.js","webpack://muze/./packages/muze-legend/src/legend/step-legend.js","webpack://muze/./packages/muze/src/constants.js","webpack://muze/./packages/muze/src/operators.js","webpack://muze/./packages/muze/src/action-model.js","webpack://muze/./packages/muze/src/canvas/defaults.js","webpack://muze/./packages/muze/src/canvas/local-options.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/layoutComponent.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/dummy-component.js","webpack://muze/./packages/muze/src/defaults.js","webpack://muze/./packages/layout/src/tree-layout/constants/defaults.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/definitionModel.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/helper/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/tree/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/layout-model/index.js","webpack://muze/./packages/layout/src/tree-layout/utils/index.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-point.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-parser.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/helper.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/html-data.js","webpack://muze/./packages/layout/src/tree-layout/renderers/renderer.js","webpack://muze/./packages/layout/src/tree-layout/renderers/html-renderer.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/layout-def.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/index.js","webpack://muze/./packages/muze/src/canvas/helper.js","webpack://muze/./packages/muze/src/options.js","webpack://muze/./packages/layout/src/enums/constants.js","webpack://muze/./packages/layout/src/generic-layout/index.js","webpack://muze/./packages/layout/src/grid-layout/defaults.js","webpack://muze/./packages/layout/src/utils/index.js","webpack://muze/./packages/layout/src/visual-matrix/props.js","webpack://muze/./packages/layout/src/visual-matrix/default-config.js","webpack://muze/./packages/layout/src/visual-matrix/visual-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/row-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/column-matrix.js","webpack://muze/./packages/layout/src/grid-layout/computations.js","webpack://muze/./packages/layout/src/grid-layout/view-info-getter.js","webpack://muze/./packages/layout/src/grid-layout/layout.js","webpack://muze/./packages/layout/src/grid-layout/layout-helper.js","webpack://muze/./packages/layout/src/grid-layout/border-helper.js","webpack://muze/./packages/layout/src/grid-layout/span-maker.js","webpack://muze/./packages/muze/src/transaction-support.js","webpack://muze/./packages/muze/src/canvas/component-resolver.js","webpack://muze/./packages/visual-cell/src/enums/constants.js","webpack://muze/./packages/visual-cell/src/enums/cell-type.js","webpack://muze/./packages/visual-cell/src/simple-cell.js","webpack://muze/./packages/visual-cell/src/enums/defaults.js","webpack://muze/./packages/visual-cell/src/props.js","webpack://muze/./packages/visual-cell/src/axis-cell.js","webpack://muze/./packages/visual-cell/src/blank-cell.js","webpack://muze/./packages/visual-cell/src/text-cell.js","webpack://muze/./packages/visual-cell/src/geom-cell.js","webpack://muze/./packages/visual-cell/src/defaults.js","webpack://muze/./packages/visual-cell/src/constants.js","webpack://muze/./packages/visual-cell/src/cell-registry.js","webpack://muze/./packages/muze/src/canvas/title-maker.js","webpack://muze/./packages/muze/src/canvas/legend-maker.js","webpack://muze/./packages/muze/src/canvas/components/muze-chart-component.js","webpack://muze/./packages/muze/src/canvas/components/headerComponent.js","webpack://muze/./packages/muze/src/canvas/components/legendComponent.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/helper.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/props.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-component.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/horizontal-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/vertical-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/matrix-component.js","webpack://muze/./packages/muze/src/canvas/components/grid-component.js","webpack://muze/./packages/muze/src/canvas/component-wrapper-maker.js","webpack://muze/./packages/muze/src/canvas/scroll-manager.js","webpack://muze/./packages/muze/src/canvas/layout-maker.js","webpack://muze/./packages/muze/src/canvas/firebolt/group-firebolt.js","webpack://muze/./packages/muze/src/canvas/firebolt/index.js","webpack://muze/./packages/muze/src/canvas/app-state.js","webpack://muze/./packages/muze/src/canvas/canvas.js","webpack://muze/./packages/muze/src/default-registry.js","webpack://muze/./packages/visual-layer/src/layer-registry.js","webpack://muze/./packages/muze/src/muze.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","_typeof2","__WEBPACK_AMD_DEFINE_ARRAY__","undefined","__WEBPACK_AMD_DEFINE_RESULT__","__WEBPACK_AMD_DEFINE_FACTORY__","apply","__webpack_exports__","csvParse","csvParseRows","csvFormat","csvFormatRows","_dsv__WEBPACK_IMPORTED_MODULE_0__","csv","parse","parseRows","format","formatRows","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","columns","Function","map","JSON","join","delimiter","reFormat","RegExp","DELIMITER","text","f","rows","N","length","I","eof","eol","token","j","row","formatRow","formatValue","convert","customConverter","inferColumns","columnSet","column","concat","_csv__WEBPACK_IMPORTED_MODULE_1__","_tsv__WEBPACK_IMPORTED_MODULE_2__","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","tsv","PROPAGATION","ROW_ID","DM_DERIVATIVES","JOINS","LOGICAL_OPERATORS","_enums__WEBPACK_IMPORTED_MODULE_0__","SELECT","PROJECT","GROUPBY","COMPOSE","CAL_VAR","BIN","CROSS","LEFTOUTER","RIGHTOUTER","NATURAL","FULLOUTER","AND","OR","_flat_json__WEBPACK_IMPORTED_MODULE_0__","_dsv_arr__WEBPACK_IMPORTED_MODULE_1__","_dsv_str__WEBPACK_IMPORTED_MODULE_2__","_utils__WEBPACK_IMPORTED_MODULE_3__","Auto","data","options","converters","FlatJSON","DSVStr","DSVArr","dataFormat","Error","arr","firstRowHeader","header","push","_utils__WEBPACK_IMPORTED_MODULE_0__","field","d3_dsv__WEBPACK_IMPORTED_MODULE_0__","str","fieldSeparator","dsv","insertionIndex","item","fields","_dsv_arr__WEBPACK_IMPORTED_MODULE_0__","_dsv_str__WEBPACK_IMPORTED_MODULE_1__","_flat_json__WEBPACK_IMPORTED_MODULE_2__","_auto_resolver__WEBPACK_IMPORTED_MODULE_3__","DataModel","_ref","_classCallCheck","this","_len","arguments","args","Array","_key","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","_onPropagation","_sortingDetails","_relation__WEBPACK_IMPORTED_MODULE_5__","order","formatter","withUid","getAllFields","sort","getPartialFieldspace","dataGenerated","_operator__WEBPACK_IMPORTED_MODULE_3__","_rowDiffset","_colIdentifier","columnWise","addUid","schema","uids","fieldNames","e","fmtFieldIdx","reduce","acc","next","idx","elem","fIdx","fmtFn","datum","datumIdx","fieldsArr","reducers","config","saveChild","groupByString","params","newDataModel","persistDerivation","_constants__WEBPACK_IMPORTED_MODULE_2__","defaultReducer","_utils_reducer_store__WEBPACK_IMPORTED_MODULE_6__","persistAncestorDerivation","sortingDetails","rawData","getData","dataInCSVArr","sortedDm","constructor","type","getFieldspace","colData","formattedData","rowsCount","serializedData","rowIdx","colIdx","FLAT_JSON","DSV_STR","DSV_ARR","fieldName","partialFieldspace","_partialFieldspace","fieldIndex","findIndex","fieldinst","__calculateFieldspace","calculateFieldsConfig","dependency","_this2","_helper__WEBPACK_IMPORTED_MODULE_1__","replaceVar","fieldsConfig","getFieldsConfig","depVars","retrieveFn","depFieldIndices","fieldSpec","index","clone","fs","suppliedFields","cachedStore","cloneProvider","detachedRoot","computedValues","rowDiffsetIterator","fieldsData","_createFields","_field_creator__WEBPACK_IMPORTED_MODULE_7__","_slicedToArray","identifiers","addToNameSpace","propConfig","isMutableAction","propagationSourceId","sourceId","payload","rootModel","propagationNameSpace","_propagationNameSpace","rootModels","groupByModel","model","propagateToAllDataModels","assign","propagateImmutableActions","eventName","callback","propModel","_this3","propListeners","fn","measureFieldName","binFieldName","measureField","fieldsObj","_createBinnedFieldDat","_operator_bucket_creator__WEBPACK_IMPORTED_MODULE_4__","binnedData","bins","binField","DIMENSION","subtype","BINNED","serialize","getSchema","_invalid_aware_types__WEBPACK_IMPORTED_MODULE_8__","invalidAwareVals","AUTO","CATEGORICAL","TEMPORAL","GEO","MEASURE","NORMAL","INVERSE","ALL","_data_format__WEBPACK_IMPORTED_MODULE_0__","_dimension_subtype__WEBPACK_IMPORTED_MODULE_1__","_measure_subtype__WEBPACK_IMPORTED_MODULE_2__","_field_type__WEBPACK_IMPORTED_MODULE_3__","_filtering_mode__WEBPACK_IMPORTED_MODULE_4__","CONTINUOUS","_datamodel__WEBPACK_IMPORTED_MODULE_0__","_operator__WEBPACK_IMPORTED_MODULE_1__","_stats__WEBPACK_IMPORTED_MODULE_2__","_enums__WEBPACK_IMPORTED_MODULE_3__","_utils__WEBPACK_IMPORTED_MODULE_4__","_constants__WEBPACK_IMPORTED_MODULE_5__","_invalid_aware_types__WEBPACK_IMPORTED_MODULE_6__","_package_json__WEBPACK_IMPORTED_MODULE_7__","Operators","compose","bin","select","project","groupBy","calculateVariable","crossProduct","difference","naturalJoin","leftOuterJoin","rightOuterJoin","fullOuterJoin","union","Stats","DateTimeFormatter","DataFormat","FilteringMode","InvalidAwareTypes","version","createUnitFieldFromPartial","createFields","_fields__WEBPACK_IMPORTED_MODULE_1__","partialField","rowDiffset","dataColumn","headers","headersObj","createUnitField","_utils__WEBPACK_IMPORTED_MODULE_1__","fieldStore","createNamespace","fieldArr","dataId","_cachedFieldsObj","forEach","getMeasure","measureFields","_cachedMeasure","getDimension","dimensionFields","_cachedDimension","Binned","_dimension__WEBPACK_IMPORTED_MODULE_0__","binsArr","Categorical","_dimension__WEBPACK_IMPORTED_MODULE_2__","_enums__WEBPACK_IMPORTED_MODULE_1__","hash","Set","domain","Continuous","_measure__WEBPACK_IMPORTED_MODULE_2__","min","Number","POSITIVE_INFINITY","max","NEGATIVE_INFINITY","_invalid_aware_types__WEBPACK_IMPORTED_MODULE_3__","Dimension","_field__WEBPACK_IMPORTED_MODULE_0__","_cachedDomain","calculateDataDomain","Field","description","displayName","_dimension__WEBPACK_IMPORTED_MODULE_1__","_categorical__WEBPACK_IMPORTED_MODULE_2__","_temporal__WEBPACK_IMPORTED_MODULE_3__","_binned__WEBPACK_IMPORTED_MODULE_4__","_measure__WEBPACK_IMPORTED_MODULE_5__","_continuous__WEBPACK_IMPORTED_MODULE_6__","_parsers_field_parser__WEBPACK_IMPORTED_MODULE_7__","_parsers_categorical_parser__WEBPACK_IMPORTED_MODULE_8__","_parsers_temporal_parser__WEBPACK_IMPORTED_MODULE_9__","_parsers_binned_parser__WEBPACK_IMPORTED_MODULE_10__","_parsers_continuous_parser__WEBPACK_IMPORTED_MODULE_11__","_partial_field__WEBPACK_IMPORTED_MODULE_12__","Measure","_field__WEBPACK_IMPORTED_MODULE_2__","unit","defAggFn","_operator_group_by_function__WEBPACK_IMPORTED_MODULE_1__","numberFormat","BinnedParser","_field_parser__WEBPACK_IMPORTED_MODULE_0__","val","String","result","_invalid_aware_types__WEBPACK_IMPORTED_MODULE_1__","isInvalid","getInvalidType","matched","CategoricalParser","ContinuousParser","parsedVal","parseFloat","FieldParser","TemporalParser","_dtf","_field_parser__WEBPACK_IMPORTED_MODULE_1__","_invalid_aware_types__WEBPACK_IMPORTED_MODULE_2__","nativeDate","getNativeDate","PartialField","parser","_sanitize","Temporal","_cachedMinDiff","sortedData","filter","a","b","arrLn","minDiff","prevDatum","nextDatum","processedCount","Math","_utils__WEBPACK_IMPORTED_MODULE_2__","formatAs","prepareJoinData","resp","_value__WEBPACK_IMPORTED_MODULE_2__","updateFields","fieldStoreName","_ref2","colIdentifier","collID","partialFieldMap","newFields","coll","_field_creator__WEBPACK_IMPORTED_MODULE_5__","_field_store__WEBPACK_IMPORTED_MODULE_1__","operation","_model$_derivation","criteriaFn","_constants__WEBPACK_IMPORTED_MODULE_4__","_derivation","_toConsumableArray","op","meta","criteria","sourceDm","newDm","_newDm$_ancestorDeriv","_ancestorDerivation","selectHelper","selectFn","newRowDiffSet","lastInsertedValue","li","selectorHelperFn","prepareSelectionData","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","done","err","return","checker","cloneWithAllFields","clonedDm","filterPropagationModel","propModels","filterByMeasure","fns","dataModel","dataObj","fieldsSpace","values","v","some","every","propField","valueOf","cloneWithSelect","selectConfig","cloneConfig","cloned","cloneWithProject","projField","allFields","projectionSet","actualProjField","sanitizeUnitSchema","unitSchema","_utils__WEBPACK_IMPORTED_MODULE_8__","sanitizeSchema","updateData","relation","_default_config__WEBPACK_IMPORTED_MODULE_6__","converterFn","_converter__WEBPACK_IMPORTED_MODULE_7__","_converterFn","_converterFn2","nameSpace","_","fieldInSchema","getDerivationArguments","derivation","applyExistingOperationOnModel","derivations","getDerivations","selectionModel","rejectionModel","_selectionModel","_rejectionModel","_getDerivationArgumen","propagateIdentifiers","propModelInf","nonTraversingModel","excludeModels","propagate","_children","children","child","_applyExistingOperati","_applyExistingOperati2","getRootGroupByModel","find","getRootDataModel","_parent","getPathToRootModel","path","propagationInf","propagateToSource","propagateInterpolatedValues","criterias","_ref3","actionCriterias","mutableActions","filteredCriteria","filterFn","entry","action","sourceActionCriterias","actionInf","actionConf","models","sourceIdentifiers","rootGroupByModel","inf","propagationModel","filteredModel","getFilteredModel","len","reverse","immutableActions","filterImmutableAction","criteriaModel","addToPropNamespace","sourceNamespace","_value","_invalidAwareValsMap","invalid","NA","nil","NIL","null","NULL","generateBuckets","binSize","start","end","buckets","findBucketRange","bucketRanges","leftIdx","rightIdx","midIdx","range","createBinnedFieldData","binsCount","_measureField$domain","_measureField$domain2","dMin","dMax","dm","_len2","_key2","_len3","_key3","_len4","_key4","_len5","operations","_key5","currentDM","firstChild","_constants__WEBPACK_IMPORTED_MODULE_1__","_get_common_schema__WEBPACK_IMPORTED_MODULE_2__","_row_diffset_iterator__WEBPACK_IMPORTED_MODULE_3__","_helper__WEBPACK_IMPORTED_MODULE_5__","defaultFilterFn","dm1","dm2","replaceCommonSchema","jointype","applicableFilterFn","dm1FieldStore","dm2FieldStore","dm1FieldStoreName","dm2FieldStoreName","commonSchemaList","tmpSchema","rowAdded","rowPosition","ii","tuple","userArg","dm1Fields","dm2Fields","cloneProvider1","cloneProvider2","tupleObj","cellVal","iii","getSortFn","dataType","sortType","retFunc","a1","b1","groupData","hashMap","Map","groupedData","fieldVal","createSortingFnArg","groupedDatum","targetFields","targetFieldDetails","arg","label","dataBuilder","retObj","reqSorting","tmpDataArr","colIArr","colName","insertInd","sortData","sortMeta","fDetails","_helper__WEBPACK_IMPORTED_MODULE_3__","mergeSort","sortingFn","tmpData","_row_diffset_iterator__WEBPACK_IMPORTED_MODULE_2__","_utils_helper__WEBPACK_IMPORTED_MODULE_3__","hashTable","schemaNameArr","dm1FieldStoreFieldObj","dm2FieldStoreFieldObj","prepareDataHelper","addData","hashData","schemaName","getCommonSchema","fs1","fs2","retArr","fs1Arr","getFilteredValues","sum","filteredNumber","curr","avg","totalSum","fnList","filteredValues","first","last","count","std","variance","mean","num","pow","defaultReducerName","getFieldArr","dimensions","getReducerObj","measures","defReducer","_utils_reducer_store__WEBPACK_IMPORTED_MODULE_3__","measureName","reducerFn","resolve","_group_by_function__WEBPACK_IMPORTED_MODULE_4__","existingDataModel","sFieldArr","reducerObj","fieldStoreObj","dbName","dimensionArr","measureArr","_ref4","_enums__WEBPACK_IMPORTED_MODULE_5__","rowCount","_export__WEBPACK_IMPORTED_MODULE_2__","_bucket_creator__WEBPACK_IMPORTED_MODULE_0__","_compose__WEBPACK_IMPORTED_MODULE_1__","_pure_operators__WEBPACK_IMPORTED_MODULE_2__","_cross_product__WEBPACK_IMPORTED_MODULE_3__","_data_builder__WEBPACK_IMPORTED_MODULE_4__","_difference__WEBPACK_IMPORTED_MODULE_5__","_get_common_schema__WEBPACK_IMPORTED_MODULE_6__","_group_by_function__WEBPACK_IMPORTED_MODULE_7__","_group_by__WEBPACK_IMPORTED_MODULE_8__","_merge_sort__WEBPACK_IMPORTED_MODULE_9__","_natural_join_filter_function__WEBPACK_IMPORTED_MODULE_10__","_natural_join__WEBPACK_IMPORTED_MODULE_11__","_outer_join__WEBPACK_IMPORTED_MODULE_12__","_row_diffset_iterator__WEBPACK_IMPORTED_MODULE_13__","_union__WEBPACK_IMPORTED_MODULE_14__","defSortFn","sortFn","lo","hi","mid","merge","mainArr","auxArr","naturalJoinFilter","_get_common_schema__WEBPACK_IMPORTED_MODULE_0__","commonSchemaArr","retainTuple","_cross_product__WEBPACK_IMPORTED_MODULE_0__","_natural_join_filter_function__WEBPACK_IMPORTED_MODULE_1__","dataModel1","dataModel2","_union__WEBPACK_IMPORTED_MODULE_2__","rowDiffArr","diffStr","diffStsArr","_export__WEBPACK_IMPORTED_MODULE_0__","Relation","source","_dataFormat","_fieldStoreName","_fieldspace","_helper__WEBPACK_IMPORTED_MODULE_2__","joinWith","unionWith","differenceWith","defConfig","oDm","fieldConfig","normalizedProjField","from","trim","_fieldConfig","fieldDef","def","removeChild","sibling","splice","parent","sd","_operator_group_by_function__WEBPACK_IMPORTED_MODULE_0__","store","convertToNativeDate","date","Date","pad","dtParams","YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","defVal","isFinite","parseInt","nVal","toLowerCase","daysDef","short","long","monthsDef","H","extract","defaultNumberParser","toString","hours","getHours","P","M","getMinutes","S","getSeconds","K","getMilliseconds","day","getDay","A","getDate","month","getMonth","B","y","presentDate","presentYear","getFullYear","year","Y","definitions","getTokenDefinitions","HOUR_12","AMPM_UPPERCASE","AMPM_LOWERCASE","SHORT_DAY","LONG_DAY","DAY_OF_MONTH","DAY_OF_MONTH_CONSTANT_WIDTH","SHORT_MONTH","LONG_MONTH","MONTH_OF_YEAR","SHORT_YEAR","LONG_YEAR","defaultResolver","targetParam","hourFormat24","hourFormat12","ampmLower","ampmUpper","amOrpm","isPM","tokenPrefix","TOKEN_PREFIX","tokenLiterals","occurrence","forwardChar","nDate","formattedStr","formattedVal","dateTimeStamp","tokenResolver","extractTokenValue","dtParamSeq","DATETIME_PARAM_SEQUENCE","noBreak","dtParamArr","resolverKey","resolverParams","resolverFn","param","resolvedVal","checkIfOnlyYear","tokenObj","lastOccurrenceIndex","occObj","occIndex","targetText","regexFormat","tokenArr","obj","occurrenceLength","extractValues","match","OBJECTSTRING","objectToStrFn","objectToStr","arrayToStr","checkCyclicRef","parentArr","bIndex","extend2","obj1","obj2","skipUndef","_typeof","tgtArr","srcArr","srcVal","tgtVal","cRef","isArray","isObject","isString","isCallable","uniqueValues","getUniqueId","getTime","isArrEqual","arr1","arr2","formatNumber","detectDataFormat","_date_time_formatter__WEBPACK_IMPORTED_MODULE_0__","_column_major__WEBPACK_IMPORTED_MODULE_1__","_domain_generator__WEBPACK_IMPORTED_MODULE_2__","_extend2__WEBPACK_IMPORTED_MODULE_3__","_helper__WEBPACK_IMPORTED_MODULE_4__","ReducerStore","set","_operator__WEBPACK_IMPORTED_MODULE_0__","reducer","__unregister","has","delete","reducerStore","getStore","Value","configurable","writable","default","makeEntry","sCon","_set","keys","set1","set2","filteredKeys","s1","s2","ForeignSet","isSimpleObject","win","reqAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","getTimeBasedId","__lastTime","__id","flat","res","scheduler","onFinishCallback","queue","animationFrame","listeners","tempQ","slice","unique","fetch","node","namedNode","qualifiedName","seed","fetchAggregator","dependencies","getUpstreamNodes","list","rec","qname","placedIndex","preArr","postArr","outgoingEdges","resolver","accumulate","nodeDetails","identity","CustomResolver","utils_classCallCheck","dep","_dep","graph_node_classCallCheck","edges","_seed","requireResolve","retriever","history","electricEdges","_edges","retrieveDetails","edge","head","hist","TypeError","electric_node_classCallCheck","nextFrame","currentFrame","lstnrs","nodes","nFn","qualifiedNodeMap","graph_node","_wholeSet","_propagate","propagationOverride","currentFrameListeners","nextFrameListeners","_schedule","flushTarget","flush","mount","resolveReqList","objn","perv","addDependencies","_node","getDependencies","getResolvedList","prop","props","fnSpec","eNode","electric_node","addEdges","addElectricNode","changedSet","upstreamNodes","upstreamNode","append","__execUniqueElectricEdges","cfLstnrs","nfLstnrs","toArray","repeatHead","resetPropagationOverride","qnames","_this4","update","resolved","resolveDependencyOrder","resolveMap","neighbour","isRoot","model_classCallCheck","_graph","graph","_lockFlag","_reqQ","mountPoint","_addPropInModel","calculationConfig","customResolver","varName","fetchFn","_customResolver","createNodesFrom","instantCall","_graph$stopPropagatio","propsArr","unsub","createElectricNodeOf","stopPropagation","setPropagationOverride","resetNodeValue","_graph$stopPropagatio2","setProp","getNodeValue","getNodeFromQualifiedName","Model","webpackPolyfill","deprecate","paths","_interopRequireDefault","_lib2","require","_containerManager2","slLib","init","doc","document","round","htmlSplCharSpace"," ","documentSupport","getDocumentSupport","SVG_BBOX_CORRECTION","isWebKit","SmartLabelManager","id","container","useEllipses","wrapper","prevInstance","isBrowserLess","dispose","maxCacheLimit","maxDefaultCacheLimit","getElementById","createContainer","innerHTML","testStrAvg","isHeadLess","isIE","offsetHeight","offsetWidth","parentContainerStyle","style","parentContainer","_containerManager","_showNoEllipses","_init","setStyle","textToLines","smartlabel","lines","split","_calCharDimWithCache","calculateDifference","size","csArr","tw","twi","cachedStyle","asymmetricDifference","maxAdvancedCacheLimit","_container","cache","_advancedCache","advancedCacheKey","_advancedCacheKey","cacheName","fontSize","fontFamily","fontWeight","fontStyle","cacheInitName","repeat","shift","width","height","_getWidthFn","contObj","_containerObj","svgText","bbox","textContent","getBBox","_styleNotSet","setLineHeight","sCont","_context","context","_cache","charCache","_lineHeight","lineHeight","useEllipsesOnOverflow","getSmartText","maxWidth","maxHeight","noWrap","trimStr","tempArr","tmpText","maxWidthWithEll","toolText","oriWidth","oriHeight","newCharIndex","nearestChar","tempChar","getWidth","initialLeft","initialTop","getOriSizeImproveObj","spanArr","x","minWidth","chr","elemRightMostPoint","elemLowestPoint","lastBR","removeFromIndex","removeFromIndexForEllipses","hasHTMLTag","maxStrWidth","lastDash","lastSpace","lastIndexBroken","strWidth","strHeight","oriTextArr","ellipsesStr","ellipsesWidth","dotWidth","characterArr","dashIndex","spaceIndex","lastLineBreak","fastTrim","ws","replace","test","charAt","smartLabel","oriTextWidth","oriTextHeight","oriText","isTruncated","xmlTagRegEx","ltgtRegex","getOriSize","substr","getNearestBreakIndex","detailObj","tooltext","lastIndexOf","spanAdditionRegx","spanAdditionReplacer","classNameWithTag","classNameWithTagBR","childRetriverFn","childRetriverString","noClassTesting","classNameReg","className","spaceIdx","dashIdx","offsetLeft","offsetTop","parentNode","insertBefore","createElement","classNameBrReg","spanRemovalRegx","error","detailedCalculationFlag","textArr","letter","lSize","cumulativeSize","indiSizeStore","lib","userAgent","navigator","ceil","floor","clsNameSpace","containerClass","brReplaceRegex","position","top","whiteSpace","padding","overflow","supportedStyle","font","font-family","font-weight","font-size","line-height","font-style","getElementsByClassName","opera","hasSVG","Boolean","SVGAngle","implementation","hasFeature","containerParent","body","appendChild","setAttribute","getElementsByTagName","sl","charLen","increment","avgWidth","styleObj","fSize","Muze","ContainerManager","maxContainers","svg","containers","rootNode","createElementNS","setAttributeNS","svgRoot","diff","containerObj","keyStr","prev","removeContainer","addContainer","avgCharWidth","display","cObj","ascending","NaN","bisector","compare","ascendingComparator","left","right","ascendingBisect","bisectRight","number","array","src_range","stop","step","e10","sqrt","e5","e2","src_ticks","ticks","tickIncrement","power","log","LN10","tickStep","step0","abs","step1","quantile","valueof","i0","value0","each","remove","clear","entries","empty","src_nest","sortValues","rollup","nest","sortKeys","depth","createResult","setResult","keyValue","valuesByKey","createObject","setObject","createMap","setMap","sortKey","k","proto","add","implicit","ordinal","unknown","scale","copy","band","bandwidth","ordinalRange","paddingInner","paddingOuter","align","rescale","sequence","rangeRound","invertExtent","r0","r1","hiIndex","getClosestIndexOf","invert","side","highVal","d1","low","high","extend","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color","exec","Rgb","rgbn","rgba","hsla","g","rgbConvert","rgb","opacity","hex","h","Hsl","hsl","hslConvert","hsl2rgb","m1","m2","displayable","brighter","darker","isNaN","deg2rad","PI","rad2deg","Xn","Yn","Zn","t0","t1","t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl","C","D","E","ED","EB","BC_DA","cubehelix","cubehelixConvert","Cubehelix","bl","basis","v0","v1","v2","v3","cosh","sinh","src_constant","linear","hue","constant","gamma","nogamma","exponential","src_rgb","rgbGamma","colorRgb","rgbSpline","spline","colors","rgbBasis","src_number","reA","reB","src_string","am","bm","bs","bi","lastIndex","q","one","zero","cssNode","cssRoot","cssView","svgNode","src_value","value_typeof","string","setTime","nb","na","src_round","degrees","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","pxComma","pxParen","degParen","pop","translate","xa","ya","xb","yb","interpolateTransformCss","parseCss","documentElement","defaultView","transform","getComputedStyle","getPropertyValue","interpolateTransformSvg","parseSvg","baseVal","consolidate","matrix","SQRT2","colorHsl","hslLong","colorHcl","cubehelixGamma","colorCubehelix","cubehelixLong","piecewise","interpolate","d3_scale_src_constant","d3_scale_src_number","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","polymap","bisect","target","clamp","continuous","output","input","interpolateValue","deinterpolateClamp","reinterpolateClamp","interpolateRound","formatDecimal","toExponential","indexOf","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","fill","sign","symbol","comma","precision","prefixExponent","locale","formatPrefix","formatTrim","out","i1","formatRounded","exponent","formatTypes","%","toFixed","toPrecision","X","toUpperCase","src_identity","prefixes","src_locale","group","grouping","thousands","substring","formatGroup","currency","decimal","numerals","formatNumerals","percent","newFormat","prefix","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","charCodeAt","Infinity","defaultLocale","formatLocale","src_tickFormat","precisionPrefix","precisionRound","precisionFixed","linearish","tickFormat","nice","interval","x0","x1","pow10","powp","base","exp","logp","log10","log2","reflect","logs","pows","u","raise","thresholds","threshold","quantiles","quantize","newInterval","floori","offseti","offset","previous","millisecond","durationMinute","durationWeek","second","getUTCSeconds","minute","hour","getTimezoneOffset","setHours","setDate","weekday","sunday","monday","tuesday","wednesday","thursday","friday","saturday","setMonth","setFullYear","utcMinute","setUTCSeconds","getUTCMinutes","utcHour","setUTCMinutes","getUTCHours","utcDay","setUTCHours","setUTCDate","getUTCDate","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcYear","setUTCFullYear","localDate","L","utcDate","UTC","newYear","timeFormat","utcFormat","utcParse","pads","-","0","numberRe","percentRe","requoteRe","requote","formatRe","names","formatLookup","parseWeekdayNumberSunday","w","parseWeekdayNumberMonday","parseWeekNumberSunday","U","parseWeekNumberISO","V","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","timeDay","timeYear","formatMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","timeSunday","formatWeekNumberISO","timeThursday","formatWeekdayNumberSunday","formatWeekNumberMonday","timeMonday","formatYear","formatFullYear","formatZone","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","getUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatShortWeekday","formatWeekday","formatShortMonth","formatMonth","formatPeriod","utcFormats","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCPeriod","parses","parseShortWeekday","parseWeekday","parseShortMonth","parseMonth","parseLocaleDateTime","parseSpecifier","parsePeriod","parseLocaleDate","parseLocaleTime","newParse","newDate","week","toISOString","durationSecond","durationHour","durationDay","durationMonth","durationYear","calendar","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickIntervals","tickInterval","src_time","timeMonth","timeWeek","timeHour","timeMinute","timeSecond","timeMillisecond","src_colors","interpolateCubehelixLong","ramp","sequential","interpolator","d3_scale_chromatic_src_colors","src_ramp","scheme","interpolateRgbBasis","warm","cool","sequential_multi_rainbow","ts","magma","inferno","plasma","UNIT_GLOBAL_NAMESPACE","UNIT_LOCAL_NAMESPACE","LAYER_LOCAL_NAMESPACE","LAYER_GLOBAL_NAMESPACE","GROUP_GLOBAL_NAMESPACE","GROUP_LOCAL_NAMESPACE","CANVAS_LOCAL_NAMESPACE","CANVAS_GLOBAL_NAMESPACE","ReservedFields","CommonProps","ACTION_INF","ON_LAYER_DRAW","MATRIX_CREATED","d3_axis_src_identity","bottom","epsilon","entering","__axis","axis","orient","tickArguments","tickValues","tickTransform","tickSizeInner","tickSizeOuter","tickPadding","spacing","range0","range1","center","selection","selectAll","tick","tickExit","exit","tickEnter","enter","attr","line","insert","transition","getAttribute","tickSize","pi","tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","ccw","dx","dy","cw","da","rect","d3_shape_src_constant","halfPi","asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","x00","y00","d2","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","areaStart","_line","areaEnd","lineStart","_point","lineEnd","point","curve_linear","src_line","pointX","pointY","defined","curve","curveLinear","buffer","defined0","src_area","area","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","src_descending","d3_shape_src_identity","curveRadial","Radial","_curve","radial","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","kr","kx","ky","star","square","sqrt3","triangle","wye","noop","that","Basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","BasisOpen","Bundle","beta","_basis","_beta","_x","_y","custom","bundle","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","CardinalOpen","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","CatmullRomOpen","LinearClosed","slope3","h0","h1","s0","slope2","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","_t0","px","py","Step","_t","curve_step","stepBefore","stepAfter","none","series","order_none","stackValue","order_ascending","sums","cubicInOut","polyIn","polyOut","polyInOut","b2","b3","b4","b5","b6","b7","b8","b9","b0","bounceOut","backIn","overshoot","backOut","backInOut","elasticOut","elasticIn","amplitude","period","d3_voronoi_src_constant","elasticInOut","RedBlackTree","RedBlackNode","R","RedBlackRotateLeft","tree","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","createEdge","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","ax","ay","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","attachCircle","lArc","rArc","lSite","cSite","rSite","bx","by","epsilon2","ha","hc","circle","Circle","before","circles","detachCircle","beachPool","createBeach","beach","Beach","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","sortCellHalfedges","clipEdges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","cover","dc","v00","v01","v11","v10","polygons","polygon","triangles","e1","links","radius","_found","vx","vy","src_voronoi","voronoi","Selection","_data","_idMap","_dataMap","_mode","_enterdata","_exitdata","newData","idGetter","_idGetter","tempMap","purgedIds","purged","temp","_this5","HTMLElement","common_utils_typeof","random","sanitizeIP","typeObj","nonExistentKeys","checkExistence","getMax","getMin","getDomainFromData","fieldType","domArr","DimensionSubtype","_loop","_fields","field0","field1","arr0","firstMin","secondMin","firstMax","secondMax","unionDomain","domains","dom","symbolFns","symbolCircle","cross","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolWye","symbolTriangle","easeFns","cubic","easeCubic","bounce","easeBounce","elastic","easeElastic","back","easeBack","poly","easePoly","circleInOut","getNearestValue","filterData","getWindow","getQualifiedClassName","cancelAnimationFrame","cls","defaultValue","getDependencyOrder","dependencyOrder","visited","visit","objectIterator","Voronoi","common_utils_classCallCheck","_voronoi","_voronoiFn","addListenerToNamespace","namespaceInf","namespace","_listeners","getObjProp","Store","propName","propNames","callBack","on","calculatedProp","intSanitizer","transactor","holder","conf","stateProps","addAsMethod","nameSpaceProp","nsProp","compareTo","paramsLen","prevVal","spreadParams","sanitization","typeCheck","typeExpected","preset","oldValues","generateGetterSetters","propInfo","typeChecker","isEqual","oldVal","newVal","arraysEqual","is","ERROR_MSG","INTERFACE_IMPL","mergeRecursive","sink","createSelection","sel","appendObj","idFn","dataSelect","mergedSelection","numberInterpolator","interpolateNumber","piecewiseInterpolator","rgbToHsv","detectColor","col","getDataModelFromRange","selFields","selFn","getDataModelFromIdentifiers","filteredDataModel","dataArr","filteredSchema","include","registerListeners","listenerMap","propListenerMap","local","mapObj","propType","listenerFn","listener","isValidValue","getSymbol","stackOrders","_defineProperty","_stackOrders","stackOrderNone","stackOrderAscending","stackOffsets","_stackOffsets","yp","yn","stackOffsetNone","si","sij0","s3","sk","stack","orderNone","offsetNone","oz","kz","sz","sij","ki","d3Stack","pathInterpolators","curveStepAfter","curveStepBefore","curveStep","curveCatmullRom","Symbols","axisLeft","axisRight","axisTop","axisBottom","pie","descending","arcs","pa","cornerRadius","padRadius","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","p0","p1","oc","intersect","x3","y3","x32","y32","kc","lc","centroid","Scales","scaleBand","getSmallestDiff","points","timeFormats","timeDurations","formatTemporal","nearestInterval","getNearestInterval","getValueParser","retrieveNearestGroupByReducers","nearestReducers","groupDerivation","getParent","filteredReducers","measureFieldNames","xhtml","src_namespaces","xlink","xml","xmlns","src_namespace","namespaces","space","creator","fullname","creatorFixed","ownerDocument","creatorInherit","uri","namespaceURI","src_selector","selector","querySelector","selectorAll","querySelectorAll","matcher","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","sparse","EnterNode","_next","__data__","keyPrefix","bindIndex","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","src_window","styleValue","classArray","classList","ClassList","_names","classedAdd","classedRemove","contains","textRemove","htmlRemove","nextSibling","lower","previousSibling","constantNull","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","event","mouseenter","mouseleave","filterContextListener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","typename","__on","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","sourceEvent","dispatchEvent","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","groups","parents","_groups","_parents","subgroups","subnode","subgroup","enterGroup","updateGroup","_enter","_exit","groups0","groups1","m0","merges","group0","group1","compareNode","sortgroups","sortgroup","getAttributeNS","attrRemoveNS","removeAttributeNS","attrRemove","removeAttribute","attrFunctionNS","attrFunction","attrConstantNS","attrConstant","priority","styleRemove","removeProperty","styleFunction","setProperty","styleConstant","propertyRemove","propertyFunction","propertyConstant","classed","classedFunction","classedTrue","classedFalse","textFunction","textConstant","html","htmlFunction","htmlConstant","deep","typenames","parseTypenames","dispatch","dispatchFunction","dispatchConstant","src_select","nextId","Local","current","src_point","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","mouse","changedTouches","src_touch","touches","identifier","touch","Dispatch","T","types","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","__noselect","MozUserSelect","d3_drag_src_constant","DragEvent","subject","active","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","src_drag","mousedownx","mousedowny","mousemoving","touchending","touchable","gestures","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","yesdrag","noclick","clearTimeout","sublisteners","clickDistance","taskHead","taskTail","frame","timeout","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","timer_typeof","now","setFrame","clearNow","Timer","_call","_time","timer","delay","restart","wake","timerFlush","nap","sleep","poke","clearInterval","setInterval","src_timeout","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","duration","ease","schedule","tweenValue","_id","transition_interpolate","interpolateRgb","interpolateString","Transition","_name","newId","selection_prototype","inherit","id0","id1","onFunction","on0","on1","sit","attrTween","value00","value10","interpolate0","value1","attrTweenNS","styleTween","styleRemoveEnd","removeFunction","tweenRemove","tween0","tween1","tweenFunction","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","defaultTiming","easeCubicInOut","interrupt","selectElement","makeElement","elemType","callbacks","keyFn","SVGElement","selectorVal","selectorType","actualSelector","enterSel","mergeSel","exitSel","applyStyle","setElementAttrs","attrs","setAttrs","setStyles","styles","createElements","getClientPoint","pos","clientPoint","getEvent","d3event","getD3Drag","d3drag","getSmartComputedStyle","css","textEl","mandatoryStyle","fill-opacity","renderer_utils_typeof","computedStyle","styleForSmartLabel","hasTouch","events","EVENT_LIST","composition","resolveFn","notification","hasOwn","LifeCycleManager","lifecycle_manager_classCallCheck","_eventList","_promises","_notifiers","_lifeCycles","_unreleasedLifeCycles","_boot","_preparePromises","Promise","promise","_makeNotifierPromise","createPromise","then","prm","formalName","client","_releasePromisesFromCache","_notify","stage","_resolvePromise","retrieve","_callLifeCycleCallback","_cachePromise","_resetTargetPromise","lifeCycles","DRAG","HOVER","SELECTIONDRAG","CLICK","LONGTOUCH","TOUCHDRAG","ALL_ACTIONS","SELECTION_NEW_ENTRY","SELECTION_NEW_EXIT","SELECTION_NULL","SELECTION_OLD_ENTRY","SELECTION_OLD_EXIT","SelectionSet","completeSet","_volatile","selection_set_classCallCheck","_completeSetCount","_lockedSelection","_resetted","ids","entrySet","exitSet","lockedSel","addSet","removeSet","updateSet","changeSideEffectAvailability","toEnable","sideEffects","change","enable","disable","getMergedSet","helper_toConsumableArray","conditionsMap","newEntry","SELECTION","oldEntry","mergedEnter","newExit","oldExit","mergedExit","complete","getSetInfo","selectionSet","propagationData","resetted","getModelFromSet","condition","Firebolt","actions","behaviourEffectMap","firebolt_classCallCheck","_sideEffectDefinitions","_sideEffects","_propagationInf","_actions","behavioural","physical","_selectionSet","_volatileSelectionSet","_propagationFields","_sourceSideEffects","selectionBox","_propagationBehaviourMap","_sourceBehaviours","_actionBehaviourMap","_config","_behaviourEffectMap","_entryExitSet","_actionHistory","_queuedSideEffects","mapSideEffects","registerBehaviouralActions","registerSideEffects","registerPhysicalBehaviouralMap","physicalBehaviouralMap","registerPhysicalActions","behEffectMap","preventDefaultActions","effectNames","effects","firebolt_toConsumableArray","behaviours","initializeBehaviouralActions","dispatchableBehaviours","Action","prepareSelectionSets","initializeSideEffects","sideEffectStore","actionHistory","queuedSideEffects","sideEffect","combinedSet","unionSets","behaviour","entryExitSet","existingModel","effect","firebolt_typeof","sideEffectInstance","isEnabled","mutates","dispatchSideEffect","propagationInfo","getSideEffects","propagationSelectionSet","getPropagationSelectionSet","shouldApplySideEffects","sourceSelectionSet","applicableSideEffects","getApplicableSideEffects","applySideEffects","physicalAction","actionBehaviourMap","behaviourMap","mapActionsAndBehaviour","unsubscribe","onDataModelPropagation","propValue","dispatchBehaviour","uniqueIds","behaviouralActions","volatileSelectionSet","sideEffectDefinitions","sideEffectsMap","SideEffect","sideEffectConf","initedActions","initializePhysicalActions","physicalActions","phyAction","initedPhysicalActions","getDefaultTargetContainer","bindActionWithBehaviour","targets","behaviourList","xFields","yFields","xMeasures","FieldType","yMeasures","_propModel$getData","fieldMap","getFullData","propagationSource","applicableSelectionSets","GenericBehaviour","firebolt","generic_classCallCheck","_enabled","selectionSets","getSelectionSets","_this$firebolt$getAdd","getAddSetFromCriteria","getPropagationInf","setSelectionSet","getEntryExitSet","_selectionSet$getSets","getSets","setConfig","isSourceFieldPresent","getSourceFields","VolatileBehaviour","reset","existingAddSet","updateExit","getCompleteSet","BRUSH","HIGHLIGHT","TOOLTIP","FILTER","HighlightBehaviour","BrushBehaviour","BEHAVIOURNAMES","FilterBehaviour","PersistentBehaviour","updateEntry","mergedExitSet","completeSetCount","SelectBehaviour","getDragActionConfig","sourceInfo","axes","xAxis","yAxis","axisFields","xField","getMembers","yField","xFieldType","yFieldType","stPos","startPos","endPos","dragDim","MeasureSubtype","isXDimension","isYDimension","xRange","yRange","selectedDomains","rangeObj","xdom","ydom","snap","getNearestRange","attachDragEvent","targetEl","drawingInf","touchStart","d3Drag","getDrawingContext","getSourceInfo","beh","dragEnd","hover","interaction","tooltip","svgContainer","nearestPoint","getNearestPoint","getAllPoints","showInPosition","generatePayloadFromEvent","click","physical_defineProperty","_physicalActions","ACTIONNAMES","longtouch","touchEnd","touchdrag","PROPS","valueParser","GenericSideEffect","generic_sideeffect_classCallCheck","_strategy","_strategies","defaultConfig","SurrogateSideEffect","interactionType","layers","layer","interactive","applyInteractionStyle","SpawnableSideEffect","_drawingContext","changeVisibility","sideEffectGroup","visible","defClassName","classPrefix","SelectionBox","boxConf","box","drawingContext","unitWidth","unitHeight","selectionGroupClassName","hide","sourceInf","_getBoxDimensionsFrom","getBoxDimensionsFromPayload","direction","xDim","yDim","xLinear","yLinear","xCriteria","yCriteria","x1Val","x2Val","bandScale","x1DomainIndex","x2DomainIndex","_sort2","helper_slicedToArray","getScaleValue","getUnitWidth","y1Val","y2Val","y1DomainIndex","y2DomainIndex","_sort4","_xDim","_yDim","dimension","show","selectionBoxDrag","onDrag","boxClassName","INITIAL_STYLE","connectorClassName","margin","content","iconContainerSize","iconScale","iconShape","iconColor","rowMargin","separator","parentClassName","arrow","disabled","getArrowPos","dim","measurement","arrowPos","boxHeight","boxWidth","arrowWidth","plotBottom","boxBottom","plotRight","boxRight","placeArrow","tooltipArrow","_tooltipArrow","tooltipBackground","_tooltipBackground","arrowConf","_arrowOrientation","formatters","strategy_defineProperty","getDefaultTooltipFormatterFn","defaultFormatter","buildTooltipData","fieldValues","fieldspace","detailFields","containsDetailField","dataLen","dimensionMeasureMap","timeDiffs","defFormatter","getRowContent","formattedValue","measureIndex","formatterFn","uniqueVals","strategy_toConsumableArray","colorAxis","shapeAxis","shape","sizeAxis","isRetinalField","associatedMeasures","icon","getColor","getShape","getSize","formattedKey","measure","measureFormatter","margin-left","displayFormat","getTabularData","fieldObj","allMeasures","_construct","strategy","DEFAULT_STRATEGY","Content","content_classCallCheck","_model","_formatter","ctx","_mount","table","tbody","margin-right","el","Tooltip","htmlContainer","tooltip_classCallCheck","connectorContainer","tooltipConf","contentClass","_tooltipContainer","_contentContainer","_contents","_tooltipConnectorContainer","qualifiedClassName","addClass","defConf","contentConfig","reorderContainers","contentConf","render","_target","repositionArrow","arrowDisabled","arrowOrient","outsidePlot","connector","_offset","orientation","_extent","arrowSize","topSpace","dimX","rightSpace","leftSpace","positionTop","positionRight","positionLeft","positionHorizontal","positionVertical","_position","_arrowPos","strategies","showSelectedItems","aggregatedModel","fieldsConf","measureNames","strategies_toConsumableArray","_getPrototypeOf2","side_effects_tooltip_classCallCheck","tooltip_possibleConstructorReturn","tooltip_getPrototypeOf","_tooltips","totalHeight","totalWidth","isEmpty","tooltips","boundBox","dataModels","fragmented","showVertically","tooltipPos","boxes","tooltip_toConsumableArray","sourceFields","indices","plotDimensions","getPlotPointsFromIdentifiers","plotDim","dt","dataTransform","layoutContainer","parentContainerDimensions","layoutBoundBox","unitBoundBox","tooltipInst","TooltipRenderer","timeDiffsByField","positionRelativeTo","tooltipBoundBox","getContents","spaceOutBoxes","spaceOutIfOverlap","firstBox","secondBox","opposite","Crossline","bandWidth","_this$config","bandClass","lineClass","elemData","axisIndex","fieldInst","xOffset","plotWidth","crossline_toConsumableArray","getPlotSpan","getPlotPadding","startPx","endPx","dataPoint","parentGroup","fade","fadeFn","focus","highlight","PlotHighlighter","plot_highlighter_classCallCheck","plot_highlighter_possibleConstructorReturn","plot_highlighter_getPrototypeOf","FilterEffect","entryModel","clearCaching","resetData","enableCaching","addLayer","layerDefs","layerRegistry","layerDef","mark","layerCls","shouldDrawAnchors","depLayerEncoding","encoding","defaultSizeValue","layerObj","instances","getTransitionConfig","calculateDomain","linkedLayer","AnchorEffect","anchors_classCallCheck","anchors_possibleConstructorReturn","anchors_getPrototypeOf","_layersMap","addAnchorLayers","metaInf","registry","layerDefsVal","registerImmediateListener","STATE_NAMESPACES","anchors_slicedToArray","_layers","elems","_linkedLayer$getTrans2","getLayerByName","getTransformedDataFromIdentifiers","transformedData","transformedDataModel","PersistentAnchors","BrushAnchors","behaviour_effect_map_defineProperty","BEHAVIOURS","STACK","ANGLE","RADIUS","SIZE","COLOR","SHAPE","ENCODING","X0","Y0","nearestPointThreshold","strokeOpacity","connectNullData","SimpleLayer","BOTTOM","TOP","LEFT","RIGHT","axisOrientationMap","axis_orientation_defineProperty","_axisOrientationMap","AxisOrientation","LINEAR","BAND","TIME","ORDINAL","QUANTIZE","QUANTILE","LOG","POW","IDENTITY","SEQUENTIAL","THRESHOLD","CONTINOUS","DISCRETE","HIDDEN","scaleLinear","scales","scaleThreshold","scaleLog","scalePow","scaleIdentity","scaleOrdinal","scaleSequential","scaleQuantize","scaleQuantile","scaleTime","scaleMap","scale_creator_defineProperty","_scaleMap","ScaleType","createScale","scaleFactory","axisName","axisNamePadding","fixedBaseline","labels","rotation","smartTicks","numberOfTicks","showAxisName","showInnerTicks","showOuterTicks","yOffset","rotateAxis","instance","tickText","labelManager","renderConfig","getTickSize","yShift","xShift","tickFormatter","tickLabelDim","quadrant","rotationNormalizer","angleToRadian","angle","changeTickOrientation","selectContainer","axisInstance","_smartTicks","isSmartTicks","registerAnimationDoneHook","setFixedBaseline","setAxisNamePos","textNode","axisNameHeight","labelOffset","availableSpace","setAxisRange","rangeBounds","space_setter_defineProperty","adjustRange","getAxisOffset","timeDiff","avWidth","bars","spaceSetter","spaceConfig","heightForTicks","_context$availableSpa","availWidth","availHeight","isOffset","_context$renderConfig","_context$config2","_context$getAxisDimen","getAxisDimensions","tickDimensions","allTickDimensions","axisNameDimensions","tickDimHeight","tickDimWidth","namePadding","labelConfig","minTickDistance","_minTickDistance","minTickSpace","_minTickSpace","_minDiff","tickShifter","getTickValues","maxTickSpaces","widthForTicks","continous","totalTickWidth","getRotatedSpaces","rotatedHeight","rotatedWidth","setOffset","logicalSpace","getAxisComponentDimensions","axisTicks","largestTick","largestTickDimensions","smartTick","_context$config","labelFunc","_tickLabelStyle","originalLabel","getFormattedText","_axisNameStyle","getHorizontalAxisSpace","axisDimensions","axisDimHeight","minTickDiff","getMinTickDifference","cartesian_axis_helper_toConsumableArray","getVerticalAxisSpace","_context$config3","calculateBandSpace","largestDimHeight","minTickWidth","_getHorizontalAxisSpa","_getVerticalAxisSpace","getValidDomain","userDom","setContinousAxisDomain","_domain","axisComponentDimensions","oldConfig","mockedOldConfig","shouldAxesScaleUpdate","hasAxesConfigChanged","properties","sanitizeTickFormatter","_scale","_axis","createAxis","_tickFormatter","_renderConfig","SimpleAxis","simple_axis_classCallCheck","_dependencies","_range","_domainLock","_axisDimensions","defCon","simpleConfig","bodyElem","dist","_animationDonePromises","domainValue","setAxisComponentDimensions","axisClass","setTickConfig","domainVal","computeAxisDimensions","_getAxisComponentDime","labelHeight","labelWidth","calculateContinousSpace","_context$renderConfig6","axisNameWidth","_getHorizontalAxisSpa2","_getVerticalAxisSpace2","renderAxis","axisNameStyle","tickLabelStyle","axisTickFormatter","labelProps","axisNameSpace","all","LinearInterpolator","LogInterpolator","PowInterpolator","interpolatorMap","continous_axis_defineProperty","_interpolatorMap","ContinousAxis","continous_axis_classCallCheck","continous_axis_possibleConstructorReturn","continous_axis_getPrototypeOf","InterpolatorCls","_interpolator","_this$renderConfig","sanitizeDomain","_this$config3","getNumberOfTicks","labelDim","tickLength","numberOfValues","_this$axisComponentDi","BandAxis","_this$config2","_this$maxTickSpaces","_getRotatedSpaces","paddingNormalized","formatTickValue","_this$renderConfig2","TimeAxis","time_axis_classCallCheck","time_axis_possibleConstructorReturn","time_axis_getPrototypeOf","_get","rawTicks","x11Colors","Pink","LightPink","HotPink","DeepPink","PaleVioletRed","MediumVioletRed","LightSalmon","Salmon","DarkSalmon","LightCoral","IndianRed","Crimson","FireBrick","DarkRed","Red","OrangeRed","Tomato","Coral","DarkOrange","Orange","Gold","Yellow","LightYellow","LemonChiffon","LightGoldenrodYellow","PapayaWhip","Moccasin","PeachPuff","PaleGoldenrod","Khaki","DarkKhaki","Cornsilk","BlanchedAlmond","Bisque","NavajoWhite","Wheat","BurlyWood","Tan","RosyBrown","SandyBrown","Goldenrod","DarkGoldenrod","Peru","Chocolate","SaddleBrown","Sienna","Brown","Maroon","DarkOliveGreen","Olive","OliveDrab","YellowGreen","LimeGreen","Lime","LawnGreen","Chartreuse","GreenYellow","SpringGreen","MediumSpringGreen","LightGreen","PaleGreen","DarkSeaGreen","MediumSeaGreen","SeaGreen","ForestGreen","Green","DarkGreen","MediumAquamarine","Aqua","Cyan","LightCyan","PaleTurquoise","Aquamarine","Turquoise","MediumTurquoise","DarkTurquoise","LightSeaGreen","CadetBlue","DarkCyan","Teal","LightSteelBlue","PowderBlue","LightBlue","SkyBlue","LightSkyBlue","DeepSkyBlue","DodgerBlue","CornflowerBlue","SteelBlue","RoyalBlue","Blue","MediumBlue","DarkBlue","Navy","MidnightBlue","Lavender","Thistle","Plum","Violet","Orchid","Fuchsia","Magenta","MediumOrchid","MediumPurple","BlueViolet","DarkViolet","DarkOrchid","DarkMagenta","Purple","Indigo","DarkSlateBlue","SlateBlue","MediumSlateBlue","White","Snow","Honeydew","MintCream","Azure","AliceBlue","GhostWhite","WhiteSmoke","Seashell","Beige","OldLace","FloralWhite","Ivory","AntiqueWhite","Linen","LavenderBlush","MistyRose","Gainsboro","LightGray","Silver","DarkGrey","Grey","DimGrey","LightSlateGrey","SlateGrey","DarkSlateGrey","Black","palette","DEFAULT_GRADIENT_COLOR","DEFAULT_CONFIG","stops","getHslString","hslArr","convertToXllString","baseString","getActualHslColor","paletteColor","hexToHsv","props_toConsumableArray","newConfig","treatNullMeasures","scaledVal","minDomainScaledVal","getStops","newStops","color_strategy_toConsumableArray","rangeStops","newStopsLength","newRange","hslInterpolator","interpolateHslLong","indexedDomain","scaleDomain","indexedDomainMeasure","normalDomain","steppedDomain","_getStops","continousSteppedDomain","_getStops2","uniqueRange","indexedRange","numVal","normalRange","strategyGetter","domainType","rangeType","schemeType","color_strategy_defineProperty","domainRange","ColorAxis","color_axis_classCallCheck","_domainType","_rangeType","_schemeType","getSchemeType","_colorStrategy","setColorStrategy","updateDomain","colorStrategy","getScheme","colorSchemes","hslColorArray","getRawColor","color_axis_toConsumableArray","scaleInfo","domainRangeFn","transformationArr","newH","newS","newL","newA","size_strategy_defineProperty","pieceWiseRange","size_strategy_toConsumableArray","intervals","newIntervals","discreteRange","SizeAxis","size_axis_classCallCheck","_sizeStrategy","setStrategy","domainInfo","domainFn","generator","ShapeAxis","shape_axis_classCallCheck","_generatedShapes","shapeType","shapeGenerator","generatorFn","generatedShapes","DATA_TYPES","group_transform","data_type_scale_map_defineProperty","_dataTypeScaleMap","groupByIndices","nestCollection","nestFn","identityTransform","transformMap","transform_factory_defineProperty","_transformMap","uniqueField","valueField","normalizedData","normalizeData","uniqueFieldIndex","valueFieldIndex","seriesKeyIndex","seriesKeys","tuples","rowObj","_tuple","seriesKey","newArr","orderBy","orderIndex","groupByIndex","localeCompare","stackData","seriesData","transformFactory","getLayerColor","colorEncoding","colorFieldIndex","rawColor","transfromColor","styleType","intensity","stateColor","originalColor","fillColorInfo","transformColor","interactionStyles","elements","getPlotElementsFromSet","_d$meta","colorTransform","helpers_slicedToArray","getAxesScales","_map2","_map4","xScale","yScale","getIndividualClassName","individualClassName","classNameStr","attachDataToVoronoi","_ref5","helpers_toConsumableArray","updateStyle","positionPoints","positioner","encodingTransform","getPlotMeasurement","dimensionalValues","fieldInfo","encodingFieldsInf","transformType","_bandScale","span","groupSpan","offsetValues","actualGroupWidth","dataProps","innerPadding","getGroupSpan","isAxisBandScale","axisPadding","groupPadding","resolveInvalidTransformType","_context$encodingFiel","groupByField","groupByFieldMeasure","getValidTransformForAggFn","resolvedInvalidTransformType","_context$encodingFiel2","isCustomTransformTypeProvided","_customConfig","listener_map_slicedToArray","encodingValue","getEncodingFieldInf","_map6","x0Field","y0Field","colorField","shapeField","sizeField","_map8","_map10","xFieldSubType","yFieldSubType","_map12","xFieldIndex","yFieldIndex","x0FieldIndex","y0FieldIndex","resolveTransformType","_transformedData","getTransformedData","_normalizedData","getNormalizedData","calculateDomainFromData","_updateLock","getRenderProps","registerChangeListener","renderLayer","throwback","commit","defaultOptions","default_options_defineProperty","_defaultOptions","newConf","defaultPolicy","_cacheEnabled","_cachedData","BaseLayer","base_layer_classCallCheck","base_layer_possibleConstructorReturn","base_layer_getPrototypeOf","base_layer_assertThisInitialized","alias","_points","_measurement","_store","localNs","initializeGlobalState","globalState","getState","helpers_defineProperty","base_layer_defineProperty","global","unitRowIndex","unitColIndex","_encodingFieldsInf","_encodingTransform","_alias","transformData","encodingFieldInf","yEnc","xEnc","encodingType","transformedDataArr","fieldsLen","pointObj","_transformType","getValidTransform","pointMap","_pointMap","_dataProps","_this$encodingFieldsI","base_layer_slicedToArray","xMeasure","yMeasure","_identifiers$","_identifiers$2","xMeasureIndex","yMeasureIndex","getAllAttrs","filteredPoints","base_layer_toConsumableArray","sizeVal","enc","_identifiers$getData","identifierData","identifierSchema","_this$encodingFieldsI2","tupleArr","transformedVal","base_layer_construct","userConf","drawLine","curveInterpolatorFn","linepath","LineLayer","line_classCallCheck","line_possibleConstructorReturn","line_getPrototypeOf","isXDim","isYDim","xPx","yPx","_getLayerColor","stroke","rowId","cachePoint","seriesClassName","containerSelection","animateGroup","groupTransition","groupAnimateStyle","stroke-opacity","getPathStyle","translatePoints","colorValFn","colorVal","getDrawFn","searchRadius","_point$data$data","getIdentifiersFromData","layerId","drawArea","easeEffect","renderer_slicedToArray","enterAreaPath","updateAreaPath","selectionEnter","AreaLayer","area_get","area_getPrototypeOf","_getAxesScales","classNameFn","y0Px","invalidY","invalidY0","minOuterRadius","stroke-width","stroke-linejoin","innerRadiusFixer","states","fadeout","selected","ArcLayer","arc_classCallCheck","arc_possibleConstructorReturn","arc_getPrototypeOf","_prevPieData","pieData","pieIndex","prevData","_getFieldIndices","getFieldIndices","arc_helper_slicedToArray","angleField","radiusField","angleIndex","sizeIndex","radiusIndex","colorIndex","dataVal","uid","outerRadiusValue","angleVal","_previousInfo","getPreviousPoint","currIndex","prevArc","nextArc","_dataPoint$datum","_this$measurement","chartHeight","chartWidth","qualClassName","getRadiusRange","defaultRadius","radiusDomain","rangeValueGetter","getRangeValue","domainMultiplier","sizeAxisDomain","sizeMultiplier","_chartWidth","_chartHeight","consecutiveExits","exitCounter","arcFn","tweenPie","individualClass","tweenExit","exitArr","oldExitCounter","tweenExitPie","consecutiveExitArr","gElem","pieSlices","pieSliceInf","tData","drawText","selectionMerge","backgroundVal","textanchor","textStyle","background","backgroundPadding","_smartLabel$getOriSiz","backgroundEl","TextLayer","textEncoding","textField","textFormatter","backgroundEncoding","backgroundValue","textFieldIndex","textValue","text_slicedToArray","text-anchor","drawSymbols","createShape","groupElement","Element","newShape","nodeName","src","href","shapeElement","pathStr","checkPath","exitGroup","defColorStyle","fillOpacity","shapes","sizes","PointLayer","point_classCallCheck","point_possibleConstructorReturn","point_getPrototypeOf","sizeEncoding","shapeEncoding","sizeValue","shapeFieldIndex","sizeFieldIndex","_config$offset","offsetX","offsetY","point_slicedToArray","maxSize","generateDataPoints","point_toConsumableArray","drawFn","getMarkId","_maxSize","_getPlotMeasurement2","widthMetrics","heightMetrics","offsetXValues","offsetYValues","measurementConf","getMeasurementConfig","widthSpan","heightSpan","distanceLimit","drawRects","barEnterFn","transitionBars","selTransition","resolveDimByField","axesInfo","spaceType","sizeConfig","enterSpace","minVal","maxVal","diffPx","zeroPos","axisType","axisType0","resolveDimensions","_resolveDimByField","enterWidth","enterX","xPos","_resolveDimByField2","enterHeight","BarLayer","bar_classCallCheck","bar_possibleConstructorReturn","bar_getPrototypeOf","_plotPadding","_plotSpan","bar_get","getTranslatedPoints","normalizedDataArr","clipElement","clipPathElement","bar_slicedToArray","barWidthMetrics","barHeightMetrics","barWidthOffsets","barHeightOffsets","barWidth","barWidthOffset","barHeight","barHeightOffset","uniqueFieldType","pointFound","bar_toConsumableArray","p2","tick_renderer","ticksEnter","TickLayer","_config$span","xSpan","ySpan","x0Px","drawTicks","AREA_LAYER","ARC_LAYER","LINE_LAYER","TEXT_LAYER","POINT_LAYER","BAR_LAYER","TICK_LAYER","SIMPLE_LAYER","BASE_LAYER","sanitizeEncoding","layerFactory","compositeLayers","factoryObj","setLayerRegistry","reg","_layerRegistry","getSerializedConf","serializedDefs","defs","unitLayerDef","sDef","parseLayerDefinition","layerType","strs","layer_factory_toConsumableArray","getLayerInstance","layerConstructor","getLayerClass","composeLayers","sanitizeLayerConfig","DEFAULT_LAYERS","defaults_defineProperty","_DEFAULT_LAYERS","LAYER_TYPES","ROWS","COLUMNS","COL","ROW","CELL","X_AXES","Y_AXES","ENTRY_CELLS","EXIT_CELLS","PRIMARY","SECONDARY","local_options","local_options_defineProperty","_CONFIG$ROWS$COLUMNS$","SimpleGroup","Variable","ComposedVars","composed_vars_classCallCheck","texts","composed_vars_possibleConstructorReturn","composed_vars_getPrototypeOf","vars","_vars","member","getMinDiff","SimpleVariable","simple_var_classCallCheck","simple_var_possibleConstructorReturn","simple_var_getPrototypeOf","oneVar","_oneVar","dtFormat","minimumConsecutiveDifference","varInst","convertToVar","datamodel","transformFields","field_sanitizer_slicedToArray","normalizedFields","normalizeFields","norFields","orderFields","fieldArray","temporalArr","categoricalArr","fieldList","numOfMeasures","allDimensions","field_sanitizer_toConsumableArray","temporal","categorical","rowsInfo","columnsInfo","rowDimensions","rowMeasures","rowTemporalFields","rowCategoricalFields","columnDimensions","columnMeasures","columnTemporalFields","columnCategoricalFields","VisualEncoder","_fieldInfo","_axisFrom","_headerFrom","__headerFrom","axisFrom","_getHeaderAxisFrom2","visual_encoder_slicedToArray","getHeaderAxisFrom","rowHeader","rowAxis","_getHeaderAxisFrom4","colHeader","colAxis","headerFrom","scaleMaps","dataTypeScaleMap","generateAxisFromMap","axesCreators","axisKey","groupAxes","currentAxes","cacheMaps","commonAxisKey","getAxisKey","axisConfig","getAxisConfig","axisInfo","axisOrientation","rowIndex","columnIndex","rawUserAxisConfig","userAxisConfig","_rotationLock","createSimpleAxis","Cls","getIndex","arrIndex","CartesianEncoder","geomCellAxes","projections","rowFields","columnFields","xAxes","yAxes","lock","unlock","unitDomains","units","1","rIdx","unitsArr","_loop2","cIdx","len2","_resolver$axes","axesArr","adjustedDomain","alignZeroLine","getAdjustedDomain","y1ratio","y2ratio","allSameSign","facets","counter","primaryFacets","secondaryFacets","primaryFields","secondaryFields","primaryLen","secondaryLen","projArr","primaryField","secondaryField","facet","existIndex","axisFromIndex","cartesian_encoder_get","cartesian_encoder_getPrototypeOf","groupedModel","encodingObj","retriveDomainFromData","layerArray","serializedLayers","userLayerConfig","layerConfig","colField","colFieldName","rowField","configs","rowFieldName","rowFieldType","getDefaultMark","colFieldType","defConfigs","layerConfigs","getLayerConfFromFields","colFields","encodingArr","encoder_helper_toConsumableArray","colFieldExist","rowFieldExist","layerConf","mergedLayerConf","serializedLayerConfig","cartesian_encoder_toConsumableArray","PolarEncoder","pieAxes","domainProps","sanitizedRows","sanitizedColumns","polar_encoder_get","polar_encoder_getPrototypeOf","sanitizedFields","typeIndex","fieldSet","polar_encoder_toConsumableArray","facetFields","layerEncoding","encType","polar_encoder_defineProperty","RetinalEncoder","newAxes","createRetinalAxis","fieldProps","getAxisType","encodingConfigs","isDistributionEqual","group_utils_toConsumableArray","rowType","initializeCacheMaps","cellMap","xAxesMap","yAxesMap","entryCellMap","exitCellMap","headerCreator","fieldHeaders","TextCell","getHeaderText","rowLength","userAxisFromConfig","group_utils_slicedToArray","firstField","secondField","firstFieldType","secondFieldType","setFacetsAndProjections","encoder","_encoder$simpleEncode","simpleEncoder","getFacetsAndProjections","group_utils_defineProperty","getBorders","matrices","showRowBorders","showColBorders","showValueBorders","valueMatrix","_rows","leftRows","rightRows","_columns","topColumns","bottomColumns","_encoder$fieldInfo","allDimensionLength","allMeasuresLength","allTemporalFieldsLength","getRowBorders","borders","getColumnsBorders","getValueBorders","borderTypeRow","borderTypeCol","action_behaviour_map_defineProperty","ACTIONS","getLayerFromDef","existingLayer","_layerDeps","inst","colIndex","instanceArr","_timeDiffs","resolveEncodingTransform","layerInst","resolvable","depArr","sanitizeLayerDef","sanitizedDefs","sConf","getLayersBy","searchBy","removeLayersBy","createRenderPromise","_renderedPromise","_renderedResolve","GRID_BAND","GRID_LINE","getGridLayerDefinitions","getDefaultVisibilty","getLayerDefinition","_definition","_encoding","gridLines","gridBands","gridLineColor","zeroLineColor","gridBandColor","isLinearScale","grid_lines_defineProperty","isNegativeDomain","attachDataToGridLineLayers","_gridLines","_gridBands","gridLayerData","getGridLayerData","gridData","jsonData","_jsonData$push","grid_lines_toConsumableArray","trackerClassName","arcLayerClassName","sideEffectClassName","src_local_options","src_local_options_defineProperty","_CONFIG$LAYERDEFS$TRA","cachedData","local_options_toConsumableArray","oldData","calculateDomainListener","unionDomainFromLayers","layerAxisIndex","getDataDomain","domainValues","layerDomain","fieldDomain","fieldStr","_layerAxisIndex","src_listener_map_slicedToArray","fieldsVal","removeExitLayers","layersMap","markSet","listenerInf","_lifeCycleManager","notify","axesObj","temporalFields","filteredFields","_ref6","_ref7","_ref8","_ref9","_ref10","_timeDiffsByField","createGridLineLayer","vuConf","createGridLines","createFn","iteratorFn","atomicDef","_ref11","_ref12","transformDataModels","transformVal","_ref15","_ref16","layerAxisIndexVal","axesVal","lyr","disableUpdate","attachDataToLayers","transformedDataModels","dataSource","enableUpdate","_dimensionMeasureMap","getDimensionMeasureMap","retinalEncodingsAndMeasures","_layer$encodingFields","_retinalEncodingsAndM","src_helper_toConsumableArray","retinalFields","attachAxisToLayers","axisInf","props_defineProperty","_PROPS","createSelectionSet","originalData","attachPropagationListener","firebolt_helper_slicedToArray","dispatchQueuedSideEffects","firebolt_helper_toConsumableArray","clearActionHistory","payloadGenerator","brush","selectionDataModel","propPayload","getRangeFromData","propCriteria","isDimension","payload_generator_toConsumableArray","__default","propagateValues","propagationFieldInf","propagationFields","sideEfffects","mergedModel","sourceUnit","sourceCanvas","parentAlias","propagationBehaviour","propFields","facetByFields","getModelWithFacetData","schema1","data1","schema2","data2","data_propagator_toConsumableArray","groupId","behaviourInstance","propagationConf","sourceBehaviour","enabled","propConf","applyOnSource","propInf","UnitFireBolt","src_firebolt_classCallCheck","firebolt_possibleConstructorReturn","firebolt_getPrototypeOf","firebolt_assertThisInitialized","unitId","aliasName","propagationSourceCanvas","sourceUnitId","sourceSideEffects","sideEffectInstances","actionOnSource","mappedEffects","se","sideEffectChecker","enabledFn","payloadFn","sourceIdentifierFields","sourceBehaviours","persistent","firebolt_get","VisualUnit","visual_unit_classCallCheck","visual_unit_defineProperty","lifeCycleManager","_gridLinesSelection","_gridBandsSelection","_layerNamespaces","_transformedDataModels","localOptions","_firebolt","_rootSvg","class","renderGridLineLayers","gridLineParentGroup","_entry","grid_lines_slicedToArray","parentGroupClass","renderLayers","orderedLayers","layerParentGroup","layerDepOrder","_layerDepOrder","_sideEffectGroup","createSideEffectGroup","initSideEffects","rootSvg","_this$parentContainer","parentContainerInf","layerDefinition","layerDefinitions","components","layerIndex","startIndex","visual_unit_toConsumableArray","layersArr","_layersArr","markId","defArr","instanceValues","layerdeps","getLayerAxisIndex","_layer$config","stateStore","parentModel","dimValue","getNearestDimensionalValue","entryVal","pointInf","getMarkInfFromLayers","markInf","parsedIdentifiers","transposeArray","getPointsFromIdentifiers","visual_unit_construct","getFieldNames","fields1","matrix_model_toConsumableArray","createSelectedDataModel","uniqueKeyGenerator","keyArray","nextDepthUniqueValues","projectRows","allColumnProjections","rowProjections","optionalProjections","projectFields","_getFieldNames2","matrix_model_slicedToArray","projFieldNames","colProjFieldNames","pushToMatrix","valueCellCreator","_matrix$rowIndex","facetInfo","colProjections","rowProj","projIdx","_getFieldNames4","rowProjFieldNames","projectedDm","createValueCells","suppliedLayers","GeomCell","matrixLayers","horizontalAxis","verticalAxis","datamodelTransform","layerConfigArr","getLayerConfig","normalizedColumns","normalizedRows","geomCellKey","getCellKey","columnId","allFacets","cell_creator_toConsumableArray","rowFacets","colFacets","geomCell","updateCells","facetKey","createAxisCells","axisInst","_axisInst$config","AxisCell","BlankCell","headerPlaceholderGn","selectionObj","selectionKeys","keySet","createTextCells","generatePlaceholders","facetsAndProjections","encoders","valuesMatrix","rowKeys","columnKeys","takeAxisFrom","takeHeaderFrom","axisPlaceholderGn","selObj","axesMatrix","selObjProp","axesForDraw","rowsPrimary","rowPrime","columnsPrimary","colPrime","_selectionObj","rowsSecondary","columnsSecondary","getObjects","section","hContext","computeMatrices","componentRegistry","globalConfig","autoGroupBy","otherEncodings","matrixGnContext","getCellDef","isRowSizeEqual","isColumnSizeEqual","colCells","rowCells","resetSimpleAxes","newCacheMap","valueCellContext","serializeLayerConfig","extractFields","layerFields","flattenArray","getFieldsFromSuppliedLayers","suppliedLayerConfig","aggregationFns","nearestAggFns","resolvedAggFns","valueMatrixInfo","getMatrixModel","rowDataModels","colProj","firstLevelRowKeys","_rowDataModels","rowFacetFieldNames","selectedDataModel","newProjectedDataModels","_rowDataModels2","colFacetNames","firstLevelColumnKeys","dme","rIndex","cIndex","transposedColKeys","valueCellsCreator","placeholder","_mutateAxesFromMap","mutateAxesFromMap","xAxisSet","yAxisSet","axisId","createUnits","_generateMatrices","generateMatrices","leftHeaders","topHeaders","bottomHeaders","rightHeaders","cell_creator_slicedToArray","rowSec","colSec","leftFacets","rightFacets","rowPriority","colPriority","leftMatrix","rightMatrix","topMatrix","bottomMatrix","currentBottomLength","setAvailableSpace","rowMatrix","columnMatrix","RESOLVER_PROPS","MatrixResolver","matrix_resolver_classCallCheck","_registry","_layerConfig","_matrixLayers","_rowMatrix","_columnMatrix","_valueMatrix","_facets","_projections","_datamodelTransform","_units","_cacheMaps","_axes","maps","matrix_resolver_toConsumableArray","_horizontalAxis","_verticalAxis","matrixType","sideEffectRegistry","_this$dependencies","unitConfig","extractUnitConfig","globalStates","_this$getAllFields","retContext","getRetinalFieldsDomain","retinalEncoder","setCommonDomain","_this$axes","_this6","retinalAxes","updateModel","placeholders","bottomLeft","bottomRight","_this$dependencies3","showHeaders","matrix_resolver_slicedToArray","topCols","bottomCols","rowHeaders","blankCellCreator","footers","topLeft","topRight","ValueMatrix","matrixArr","value_matrix_classCallCheck","instancesById","cellValue","_instancesById","_matrix","_filterFn","rowWidth","currentRowWidth","getLogicalSpace","rowHeight","currentRowHeight","setMatrixInstances","_composition","createMatrices","matrixConfig","unsubscribeChangeListeners","retinalConfig","sanitizeRetinalConfig","retinalConf","confValue","getEncoder","groupType","fieldSanitizer","setAxisAndHeaders","placeholderInfo","getMatrices","_groupedDataModel","createRetinalAxes","setDomains","cornerMatrices","createHeaders","metaData","border","unionUnitDomains","registerDomainChangeListener","visual_group_props_defineProperty","visual_group_props_PROPS","cellRegistry","VisualGroup","visual_group_classCallCheck","visual_group_possibleConstructorReturn","visual_group_getPrototypeOf","componentSubRegistry","visual_group_assertThisInitialized","_selection","createUnitState","visual_group_helper_slicedToArray","createLayerState","setupChangeListeners","variable","findInGroup","channel","group_utils_this","facetType","projType","getRetinalAxes","getSimpleAxes","_this$resolver$getAll","visual_group_defineProperty","existingRemoveSet","select_toConsumableArray","firebolt_action_behaviour_map_defineProperty","action_behaviour_map_actionBehaviourMap","propagationBehaviourMap","_propagationBehaviour","firebolt_behaviour_effect_map_defineProperty","firebolt_behaviour_effect_map_behaviourEffectMap","propagationSideEffects","_propagationSideEffec","SCALE_FUNCTIONS","VALUE","canvasAlias","rawVal","check","assembleModelFromIdentifiers","src_firebolt_helper_toConsumableArray","LegendFireBolt","_Firebolt","legend_firebolt_classCallCheck","legend_firebolt_possibleConstructorReturn","legend_firebolt_getPrototypeOf","legend_firebolt_inherits","legend_firebolt_createClass","behaviourName","getCriteriaFromData","firebolt_physical_defineProperty","physical_physicalActions","boundingBox","gradientDimensions","axisScale","rangeShifter","drag_defineProperty","getSelectionCriteria","selectionBoxMeasure","drawingInfMeasure","subjectStartPoint","gradientDimension","legendGradContainer","legendSelGroup","enterFn","getMousePos","boundingClientRect","selection_box_drag_defineProperty","fadeOut","brighten","LegendHighlighter","legend_highlighter_classCallCheck","legend_highlighter_possibleConstructorReturn","legend_highlighter_getPrototypeOf","legendContainer","resetLogicalSpace","title","_title","ALIGN","DEFAULT_MEASUREMENT","LEGEND_TITLE","borderStyle","borderColor","bounds","upper","ICON_MAP","getScaleInfo","scaleType","steps","scaleFn","getInterpolatedData","domainForLegend","interpolatedFn","getDomainBounds","domainBounds","domainLeg","ele","legend_helper_defineProperty","getScaleFactor","SimpleLegend","simple_legend_classCallCheck","_metaData","_fieldName","_labelManager","_cells","defaultMeasurement","_computedStyle","legendBehaviours","_canvasAlias","getItemMeasures","_labelManager$getOriS","effPadding","effBorder","effMargin","dataFromScale","titleSpace","getTitleSpace","titleHeight","titleWidth","labelSpaces","getLabelSpaces","_computeItemSpaces","computeItemSpaces","maxItemSpaces","textOrientation","itemSpaces","iconSpaces","maxIconWidth","labelSpace","itemSpace","iconSpace","newLabelWidth","titleSpaces","_this$measurement2","titleCreator","titleContainer","marginPosition","_this$config4","_this$measurement3","renderTitle","simple_legend_defineProperty","legendOrientation","position_config_defineProperty","_legendOrientation","datasets","itemContainerMeasures","getStepSpacesInfo","iconHeight","iconWidth","stepPadding","horizontal","vertical","positionConfig","_positionConfig","alignmentMap","_alignmentMap","itemStack","_itemStack","createLegendSkeleton","gradWidth","gradHeight","maxGradHeight","maxGradWidth","legendBody","legendItem","getItemContainers","legendInstance","positionObj","createItemSkeleton","itemSkeleton","alignClass","applyItemStyle","measureType","stepColorCheck","_context$measurement","renderIcon","defaultIcon","DiscreteLegend","_getScaleInfo","discrete_legend_toConsumableArray","_field$schema","discrete_legend_defineProperty","discrete_legend_get","discrete_legend_getPrototypeOf","renderDiscreteItem","_context$measurement2","_item$icon","text-align","getGradientDomain","accumulator","currentValue","MAX_VALUE","MIN_VALUE","legendGradSvg","legendGradCont","linearGradient","makeLinearGradient","legendRect","GradientLegend","gradient_legend_toConsumableArray","gradient_legend_defineProperty","newAxis","axisSpace","axisDomainLength","_legendGradientSvg","gradient_legend_get","gradient_legend_getPrototypeOf","renderGradient","_createLegendSkeleton","StepLegend","step_legend_toConsumableArray","step_legend_defineProperty","lowerBounds","upperBounds","step_legend_get","step_legend_getPrototypeOf","stepData","renderStepItem","_context$measurement3","_item$icon2","_positionConfig$posit","PADDING","BORDER","MARGIN","TITLE_TEMPLATE_NOT_ALLOWED_TAGS","LEGEND_TYPE_MAP","constants_defineProperty","_LEGEND_TYPE_MAP","HORIZONTAL_CENTER","VERTICAL_CENTER","share","operators_construct","operators_toConsumableArray","strings","htmlCode","expLn","frag","createDocumentFragment","treeShakeNode","nodeType","Node","ELEMENT_NODE","tagName","childNodes","canvasIterator","canvases","cFn","canvas","visualGroup","matrixInstance","_throwback","actionModel","ActionModel","action_model_classCallCheck","_registrableComponents","registerPropagationBehaviourMap","dissociateBehaviour","dissociateSideEffect","policy","registrableComponents","mergedPolicy","aliases","comp","*","propagationPayload","propagationCanvas","crossInteractionPolicy","TITLE_CONFIG","SUB_TITLE_CONFIG","maxLines","LAYOUT_ALIGN","canvas_local_options_defineProperty","_localOptions","canvasOptions","_canvasOptions","_sanitized","titleConfig","subtitle","sub","subtitleConfig","LayoutComponent","layoutComponent_classCallCheck","_boundBox","_renderAt","_alignWith","_alignment","_componentName","_className","DummyComponent","newDimensions","renderAt","component","componentName","pagination","scrollBar","thickness","speed","legend","minHeight","minCharacters","verticalAlign","collapse","invalidValues","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_CLASS_NAME","NODE_PREFIX","DefinitionModel","definitionModel_classCallCheck","_host","host","_cut","cut","_ratioWeight","ratioWeight","_preferred","preferred","_lanes","lanes","_remainingHeight","_remainingWidth","remainingHeight","remainingWidth","getNodeId","_uid","yExtraSpace","smallestHeight","getCutType","smallestExtraHeightHorizontally","MAX_SAFE_INTEGER","containerHeight","hostHeight","xExtraSpace","smallestWidth","smallestExtraWidthVertically","containerWidth","hostWidth","createPlaceHolderComponent","placeComponent","definitionModel","leftOvercomponentRationWidth","isPreferred","isGridComponent","componentRatioWidth","leftHeight","leftWidth","_component$getLogical","componentHeight","componentWidth","firstLaneConfig","firstLane","secondLane","tree_classCallCheck","_parentCut","_this$_children","tree_toConsumableArray","parentCut","bound","nodeconfig","searchNode","childNode","nodeId","deleteSearchNode","LayoutModel","measurements","layout_model_classCallCheck","_measurements","_root","createTree","setBoundBox","addChildren","lane","allocateBoundingBox","totalWeight","carry","lastSibling","ratio","setHostSpatialConfig","setHostPosition","negotiateDimension","alteredDim","nonAlteredDim","cumultiveExtraSpaceAmt","childrenLength","extraSpaceAmt","computePosition","determineBoundBox","bb","_lastSibling$boundBox","_top","_left","_height","_width","_instance$parent$boun","setSpatialConfig","Utils","utils_createClass","isDOMElement","getID","getElement","findContainer","coordinate","removeDiv","divId","DataPoint","data_point_classCallCheck","DataParser","data_parser_classCallCheck","data_parser_createClass","defaultDataPointLogic","nodepoints","getnodePoints","datapoint","HTMLDataAdapter","_DataParser","html_data_classCallCheck","html_data_possibleConstructorReturn","html_data_getPrototypeOf","html_data_inherits","html_data_createClass","getCoordinates","html_data_get","Renderer","renderer_classCallCheck","renderer_createClass","initRenderer","__logicalTree","HTMLRenderer","_Renderer","html_renderer_classCallCheck","html_renderer_possibleConstructorReturn","html_renderer_getPrototypeOf","_coordinates","html_renderer_inherits","html_renderer_createClass","createhtml","mainDiv","html_renderer_get","parentDiv","createAndCustomiseParent","hasHost","createAndPositionDiv","_objectSpread","div","coordinates","findNode","nodeID","renderer","renderHTML","DrawingManager","drawing_manager_classCallCheck","_componentMap","componentMap","_layoutClassName","layoutClassName","_renderer","drawing_manager_createClass","drawLayout","resolveAligment","componentData","alignWith","newNodeConfig","refNode","alignment","drawComponent","DefinitionManager","definition_manager_classCallCheck","_prioritySequence","_totalHeight","_totalWidth","_targetComponentMap","prepareTargetComponentMap","targetComponentMap","canvasComponent","tempDefModel","componentRef","getComponent","placeGridComponent","gridComponents","iscolumnPreffered","_placeComponent","rowpreffred","LayoutDef","layout_def_classCallCheck","_layoutDefinition","layout_def_createClass","addComponent","layoutDefinition","addMultipleComponent","componentArray","sanitizedDefinition","sanitizeConfig","hostObj","hostID","childHost","resetComponentMap","LayoutManager","layout_manager_classCallCheck","_dimension","_skeletonType","skeletonType","_layoutDef","_drawingManager","_rootNodeID","con","resetNode","updateNode","compute","_layout","calLayOutDef","_context$dimension","layoutDef","prioritySequence","generateConfigModel","negotiate","broadcast","layoutComponents","componentArr","compo","setupChangeListener","allOptions","_allOptions","canvas_helper_toConsumableArray","nameSpaceProps","equalityChecker","option","updateChecker","dispatchProps","_cachedProps","notifyAnimationEnd","centerMatrix","layout","viewInfo","viewMatricesInfo","promises","cellArr","lifeCycle","animDonePromises","animationDone","axisArr","applyInteractionPolicy","interactionPolicy","_interactionPolicy","_crossInteractionPolicy","unitFireBolt","changeBehaviourStateOnPropagation","changeSideEffectStateOnPropagation","createLayoutManager","src_options","isInteger","minUnitWidth","minUnitHeight","oldConf","fixScrollBarConfig","VIEW_INDEX","ROW_MATRIX_INDEX","2","COLUMN_MATRIX_INDEX","HEIGHT","ROW_ROOT","COLUMN_ROOT","VERTICAL","HORIZONTAL","GenericLayout","generic_layout_classCallCheck","_matrices","_centerMatrix","_mountPoint","DEFAULT_CONFIGURATION","grid_layout_defaults_defineProperty","_DEFAULT_CONFIGURATIO","_FieldNames$BORDER","DEFAULT_MEASUREMENTS","_DEFAULT_MEASUREMENTS","findInPage","page","combineMatrices","isTransposed","joinedMatrix","utils_toConsumableArray","rowData","computeLogicalSpace","maxMeasures","_config$isTransposed","unitMeasures","_getMeasureInfo","getMeasureInfo","firstMeasure","secondMeasure","minMeasures","getMinMeasures","_logicalSpace","utils_defineProperty","valueItem","maxMeasure","firstMeasureValue","secondMeasureValue","valueArray","_item$space","fMeasure","sMeasure","createMatrixEachLevel","_arr$i","extraCellsRemover","beg","distribution","extraCellLengths","VisualMatrix","visual_matrix_classCallCheck","_lastLevelKey","_primaryMatrix","_secondaryMatrix","_maxMeasures","_availableSpace","_layoutMatrix","_tree","_createTree2","matrixTree","lastLevelKey","layoutMatrix","primaryMatrix","secondaryMatrix","breakPage","primaryMatrixLength","newMatrix","keyLength","heightMeasures","populateMaxMeasures","widthMeasures","calculateDepth","viewableMatrix","createViewPortMatrix","viewableMeasures","redistributeSpaces","childDepth","createMatrixInstances","matrixInfo","breakPointer","_breakPointer","brokenMatrix","breakMatrix","nextLevel","removeExtraCells","RowVisualMatrix","row_matrix_classCallCheck","row_matrix_possibleConstructorReturn","row_matrix_getPrototypeOf","maxHeights","maxWidths","matrixInst","cellDimOptions","matrixIndex","_this2$getCellDimensi","getCellDimensions","widths","rowHeights","columnWidths","primary","secondary","begCellLen","endCellLen","remainaingAvailWidth","remainaingWidth","cWidths","conditions","maxPrioritySpace","availableWidth","currentWidth","prioritySpace","logicalWidths","getPriorityDistribution","mWidth","mHeight","redistributeViewSpaces","computeViewableSpaces","rHeights","gutter","spaceTakenByColumn","spaces","getDistributedHeight","heightWithoutGutter","distSum","gutterSum","availableHeight","colLen","distHeight","borderWidth","colHeight","colWidth","heights","ColumnVisualMatrix","column_matrix_classCallCheck","column_matrix_possibleConstructorReturn","column_matrix_getPrototypeOf","remainaingHeight","heightDist","divider","spaceTakenByRow","getDistributedWidth","layoutConfig","distWidth","rowLen","oldLogicalSpace","heightDistribution","getMatrixMeasurement","setViewSpaces","pointerType","viewSpaces","pointer","computations_defineProperty","paginationDetailsMap","scrollType","paginationMeasureGetter","relatedMaxMeasure","getMatrixMeasureForPagination","measureDetails","actualMeasure","scrollInfo","getMatrixHeightDetails","columnMatrixWidth","_getHeightRequiredByC","getHeightRequiredByColMatrix","maxColumnMatrixHeight","columnViewSpace","getViewableSpaces","columnPointer","columnMatrixHeight","maxHeightAvailableForRowMatrix","rowMatrixHeight","bufferCondition","isScroll","getActualBufferFromConfig","computations_slicedToArray","getBufferFromCondition","currentBufferType","horizontalBuffer","verticalBuffer","computeLayoutMeasurements","_getMatrixWidthDetail","getMatrixWidthDetails","_layout$config3","rowMatrixWidth","maxRowMatrixWidth","maxWidthAvailableForColumnMatrix","_getMatrixHeightDetai","_getActualBufferFromC","rowViewableSpaces","columnViewableSpaces","setValueMatrixMeasurements","computations_toConsumableArray","rowWidthsPrimary","rowWidthsSecondary","columnHeightsPrimary","columnHeightsSecondary","measureSum","total","GridLayout","layout_classCallCheck","layout_possibleConstructorReturn","layout_getPrototypeOf","_layoutId","_viewInfo","defaultViewInfo","_scrollInfo","generateVisualMatrices","begColCells","endColCells","gutterSpace","layout_helper_slicedToArray","_center","_bottom","layout_helper_toConsumableArray","RowMatrix","ColumnMatrix","layout_get","_computeLayoutMeasure","setViewInformation","pageNumber","pageType","totalPages","layout_defineProperty","renderGrid","currentPage","maxRowHeight","maxColWidth","rowPointer","getViewMatrices","rowMatrices","getViewableMatrices","columnMatrices","centralMatrixPointer","rowMatrixLen","columnMatrixLen","rowPages","columnPages","layoutDimensions","getViewMeasurements","_layout$config","rowSpaces","colSpaces","rightWidth","topHeight","bottomHeight","centerHeight","centerWidth","viewWidth","viewHeight","actualCenterMeasures","totalMeasures","unitHeights","unitWidths","borderMap","border_helper_defineProperty","_borderMap","specificBorderApplier","borderTypes","showBorders","borderInfo","borderType","applySpecificBorder","applyBorders","borderApplierFn","borderApplier","borderMapVal","orderMaker","nestByStack","updateArr","optionalParams","currStack","prevStack","arrVal","stackVal","currElemIndex","newElem","arrElem","returnArr","spanCalculator","isNull","maskCreator","_nestByStack","viewMatrix","hierarchy","_nestByStack2","spanGenerator","spans","ridx","currSpan","getOrder","isReverse","matrixSpanGeneratorMap","span_maker_defineProperty","_matrixSpanGeneratorM","orderGetter","viewMatrixMaker","spanMaker","matrixSpanGenerator","spanApplier","spaceAllocationDueToSpan","spanApplierMap","_spanApplierMap","TransactionSupport","INTERFACE_IMPl","CLASSPREFIX","HEADER","DATA","AXES","FACET_BY_FIELDS","FIELDS","TRANSFORM","LAYER_DEF","CONFIG","DETAIL_FIELDS","TEXT","AXIS","GEOM","BLANK","SimpleCell","simple_cell_classCallCheck","enums_defaults_defineProperty","_DEFAULT_CONFIG","_CONSTANTS$MARGIN","CONSTANTS","DEFAULT_PROPS","minSpacing","src_props_defineProperty","visual_cell_src_props_PROPS","caption","smartText","axis_cell_classCallCheck","axis_cell_possibleConstructorReturn","axis_cell_getPrototypeOf","_availHeight","_availWidth","axis_cell_assertThisInitialized","computeAxisSpace","logicalWidth","logicalHeight","spaceFixer","_axis$getLogicalSpace","_axis$config2","wrapperDiv","blank_cell_classCallCheck","blank_cell_possibleConstructorReturn","blank_cell_getPrototypeOf","blank_cell_assertThisInitialized","setSmartText","_context$minSpacing","minHeightSpace","minWidthSpace","paddedHeight","paddedWidth","text_cell_classCallCheck","text_cell_possibleConstructorReturn","text_cell_getPrototypeOf","text_cell_assertThisInitialized","computeTextSpace","_context$minSpacing2","minText","_minTextSpace","smartSpace","textAlign","vAlign","_this$smartText","translation","middle","geom_cell_classCallCheck","geom_cell_possibleConstructorReturn","geom_cell_getPrototypeOf","_unit","_datamodel","_facetByFields","_transform","_caption","geom_cell_assertThisInitialized","lockModel","unlockModel","captionSpace","computeGeomSpace","getCaptionSpace","captionDom","DEFAULT_PLACEHOLDERS","src_defaults_defineProperty","_DEFAULT_PLACEHOLDERS","resolveTitleSubTitleContent","rawContent","escapeHTML","htmlEscapes","&","<",">","\"","'","/","createHeading","prevCell","cellType","_minTickDiff","legendInitializer","legendConfig","prevLegends","legends","headerHeight","legendInfo","legendCreator","LegendCls","dataset","scaleProps","_scale$config","stepMapper","dataInfo","legendMeasures","getGroupByData","setLegendMeasures","MuzeComponent","_this$boundBox","HeaderComponent","headerComponent_classCallCheck","headerComponent_possibleConstructorReturn","headerComponent_getPrototypeOf","setParams","cont","renderHeader","LegendComponent","legendComponent_classCallCheck","legendComponent_possibleConstructorReturn","legendComponent_getPrototypeOf","legendSpace","sectionComponents","_this$params$config","legendMount","legWidth","legHeight","sections","currHeight","currWidth","leg","legendHeight","legendWidth","renderLegend","_defaultAlignmentHelp","defaultAlignmentHelper","arrowSizeMap","getUnitPositions","totalLength","viewLength","currentLen","unitPosition","createScrollBarArrow","createScrollBarRect","mover","applyScrollMouseDownAction","moverRect","scrollMaker","_mover$node$getBoundi","_rect$node$getBoundin","rectX","rectY","changeMoverPosition","registerListenerOnArrow","arrowType","_components","isTouchDevice","applyMoverDrag","moverStartPos","rectStartPos","distanceMoved","actualPosition","pageXOffset","pageYOffset","applyRectClick","emptyScrollAreaClick","manager","unitPositions","ScrollMaker","scroll_maker_classCallCheck","_attachedScrollAction","_unitPositions","scroll_maker_createClass","scrollTo","scrollDeltaTo","createScroll","scrollBarContainer","scrollContainerHelper","attachScrollAction","externalScrollAction","detachScrollAction","scrollMakerMap","_ScrollMaker","HorizontalScrollMaker","horizontal_scroll_maker_classCallCheck","horizontal_scroll_maker_possibleConstructorReturn","horizontal_scroll_maker_getPrototypeOf","horizontal_scroll_maker_inherits","horizontal_scroll_maker_createClass","horizontal_scroll_maker_get","prevArrow","nextArrow","_this$logicalSpace","scrollBarWithouArrowLength","_scrollBarWithouArrowLength","_this$_components$mov","positionAdjuster","newPosition","currentPos","_this$_components$mov2","moverPos","movedViewLength","performAttachedScrollFunction","delta","_this$_components$mov3","scrollPercentage","movement","VerticalScrollMaker","vertical_scroll_maker_classCallCheck","vertical_scroll_maker_possibleConstructorReturn","vertical_scroll_maker_getPrototypeOf","vertical_scroll_maker_inherits","vertical_scroll_maker_createClass","vertical_scroll_maker_get","ScrollComponent","scroll_component_classCallCheck","scrollBarComponentConfig","scroll_component_possibleConstructorReturn","scroll_component_getPrototypeOf","unitIndex","sanitizedUnitIndex","externalAction","MatrixComponent","matrix_component_classCallCheck","matrix_component_possibleConstructorReturn","matrix_component_getPrototypeOf","_this$params$config$s","containerForMatrix","applyScroll","_cellSpanMaker","cellSpanMaker","_matrixSpanGenerator","renderTable","applySpans","applier","renderPlaceholders","renderMatrix","applyScrollAction","scollDistance","GridComponent","grid_component_classCallCheck","grid_component_possibleConstructorReturn","grid_component_getPrototypeOf","_this$component$viewI","matrixDim","matrixName","updateWrapper","matrixWrapper","allComponents","_scrollBarManager","wheelDeltaX","wheelDeltaY","scrollBarManager","triggerScrollBarAction","movedView","scrollActionApplier","_this$component$0$0$b","sanitizeGrid","headerMap","headerCell","configType","createHeaderWrapper","headerType","layoutManager","renderDetails","_headerMap$headerType","headerConfig","component_wrapper_maker_objectSpread","wrapperParams","existingComponent","createScrollBarWrapper","scrollBarType","grid","_scrollBarMap$scrollB","scrollBarMap","layoutBasedMeasure","viewMeasure","rowAlign","colAlign","componentWrapperMaker","createLegendWrapper","legendWrapper","gridLayoutWrapper","verticalScrollBar","horizontalScrollBar","ScrollManager","scroll_manager_classCallCheck","_scrollBarComponents","_attachedComponents","scroll_manager_createClass","scrollBarComponents","attachedComponents","performScrollAction","getRenderDetails","_mount$getBoundingCli","heightAttr","widthAttr","visGroup","_visGroup$placeholder","legendPosition","layoutArrangement","arrangeComponents","_titleLayouts","titleLayouts","component_resolver_defineProperty","legendLayouts","titlePosition","subtitlePosition","availableHeightForCanvas","availableWidthForCanvas","_createHeaders","canvasHeight","canvasWidth","isSubtitle","headerOptions","_createHeading","createLegend","getLegendSpace","mountSpace","componentIndexes","renderLayout","_layoutManager","gridLayout","compWrappers","componentWrappers","gridWrapper","createScrollManager","horizontalScrollWrapper","verticalScrollWrapper","hScrollBar","vScrollBar","registerComponents","attachScrollListener","defaultInteractionPolicy","isMeasure","group_firebolt_toConsumableArray","getFieldsFromChannel","colDim","fieldInf","unitColFacets","equals","unitRowFacets","propagateWith","defaultCrossInteractionPolicy","propagationCanvasAlias","propagationUnit","GroupFireBolt","group_firebolt_classCallCheck","group_firebolt_possibleConstructorReturn","group_firebolt_getPrototypeOf","behaviouralAction","validFields","APP_INITIAL_STATE","app","Canvas","globalDependencies","canvas_classCallCheck","canvas_possibleConstructorReturn","canvas_getPrototypeOf","canvas_defineProperty","canvas_slicedToArray","canvas_assertThisInitialized","initedComponents","initCanvas","createGroupState","_VisualGroup$getState2","canvas_helper_slicedToArray","localState","register","prepareLayout","triggerReflow","setLayoutInfForUnits","getBoundBox","getRootNodeId","setLabelRotationForAxes","rotationVal","getAxes","initialSettings","regEntry","COMPONENTS","SUBREGISTRIES","regObj","globalCache","defaultRegistry","overrideRegistryDefinitions","overrideRegistry","muze","_transactor2","muze_slicedToArray","env","globalStore","componentSubRegistryDef","settings","withSettings","enableChainedTransaction","transactionModel","transactionEndpoint","transactionItems","Smartlabel","SideEffects","standards","Behaviours","pkg","operators","utils","lookupWhat","lookupDetails","lookupTarget","deps"],"mappings":"CAAA,SAAAA,iCAAAC,KAAAC,SACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,UACA,mBAAAG,eAAAC,IACAD,OAAA,UAAAH,SACA,iBAAAC,QACAA,QAAA,KAAAD,UAEAD,KAAA,KAAAC,UARA,CASCK,OAAA,WACD,yBCTA,IAAAC,oBAGA,SAAAC,oBAAAC,UAGA,GAAAF,iBAAAE,UACA,OAAAF,iBAAAE,UAAAP,QAGA,IAAAC,OAAAI,iBAAAE,WACAC,EAAAD,SACAE,GAAA,EACAT,YAUA,OANAU,QAAAH,UAAAI,KAAAV,OAAAD,QAAAC,cAAAD,QAAAM,qBAGAL,OAAAQ,GAAA,EAGAR,OAAAD,QA0DA,OArDAM,oBAAAM,EAAAF,QAGAJ,oBAAAO,EAAAR,iBAGAC,oBAAAQ,EAAA,SAAAd,QAAAe,KAAAC,QACAV,oBAAAW,EAAAjB,QAAAe,OACAG,OAAAC,eAAAnB,QAAAe,MAA0CK,YAAA,EAAAC,IAAAL,UAK1CV,oBAAAgB,EAAA,SAAAtB,SACA,oBAAAuB,eAAAC,aACAN,OAAAC,eAAAnB,QAAAuB,OAAAC,aAAwDC,MAAA,WAExDP,OAAAC,eAAAnB,QAAA,cAAiDyB,OAAA,KAQjDnB,oBAAAoB,EAAA,SAAAD,MAAAE,MAEA,GADA,EAAAA,OAAAF,MAAAnB,oBAAAmB,QACA,EAAAE,KAAA,OAAAF,MACA,KAAAE,MAAA,iBAAAF,oBAAAG,WAAA,OAAAH,MACA,IAAAI,GAAAX,OAAAY,OAAA,MAGA,GAFAxB,oBAAAgB,EAAAO,IACAX,OAAAC,eAAAU,GAAA,WAAyCT,YAAA,EAAAK,cACzC,EAAAE,MAAA,iBAAAF,MAAA,QAAAM,OAAAN,MAAAnB,oBAAAQ,EAAAe,GAAAE,IAAA,SAAAA,KAAgH,OAAAN,MAAAM,MAAqBC,KAAA,KAAAD,MACrI,OAAAF,IAIAvB,oBAAA2B,EAAA,SAAAhC,QACA,IAAAe,OAAAf,eAAA2B,WACA,SAAAM,aAA2B,OAAAjC,OAAA,SAC3B,SAAAkC,mBAAiC,OAAAlC,QAEjC,OADAK,oBAAAQ,EAAAE,OAAA,IAAAA,QACAA,QAIAV,oBAAAW,EAAA,SAAAmB,OAAAC,UAAsD,OAAAnB,OAAAoB,UAAAC,eAAA5B,KAAAyB,OAAAC,WAGtD/B,oBAAAkC,EAAA,GAIAlC,wCAAAmC,EAAA,0bClFA,SAAA5C,iCAAAC,KAAAC,SACA,WAAA2C,SAAA1C,UAAA,WAAA0C,SAAAzC,QACAA,OAAAD,QAAAD,WAEA4C,qCAAAC,KAAAC,8BAAA,mBAAAC,+BAAA,SAAAA,+BAAAC,MAAA/C,QAAA2C,8BAAAG,kCAAA7C,OAAAD,QAAA6C,gCAJA,CASCzC,OAAA,WACD,yBCTA,IAAAC,oBAGA,SAAAC,oBAAAC,UAGA,GAAAF,iBAAAE,UACA,OAAAF,iBAAAE,UAAAP,QAGA,IAAAC,OAAAI,iBAAAE,WACAC,EAAAD,SACAE,GAAA,EACAT,YAUA,OANAU,QAAAH,UAAAI,KAAAV,OAAAD,QAAAC,cAAAD,QAAAM,qBAGAL,OAAAQ,GAAA,EAGAR,OAAAD,QA0DA,OArDAM,oBAAAM,EAAAF,QAGAJ,oBAAAO,EAAAR,iBAGAC,oBAAAQ,EAAA,SAAAd,QAAAe,KAAAC,QACAV,oBAAAW,EAAAjB,QAAAe,OACAG,OAAAC,eAAAnB,QAAAe,MAA0CK,YAAA,EAAAC,IAAAL,UAK1CV,oBAAAgB,EAAA,SAAAtB,SACA,oBAAAuB,eAAAC,aACAN,OAAAC,eAAAnB,QAAAuB,OAAAC,aAAwDC,MAAA,WAExDP,OAAAC,eAAAnB,QAAA,cAAiDyB,OAAA,KAQjDnB,oBAAAoB,EAAA,SAAAD,MAAAE,MAEA,GADA,EAAAA,OAAAF,MAAAnB,oBAAAmB,QACA,EAAAE,KAAA,OAAAF,MACA,KAAAE,MAAA,WAAAe,SAAAjB,qBAAAG,WAAA,OAAAH,MACA,IAAAI,GAAAX,OAAAY,OAAA,MAGA,GAFAxB,oBAAAgB,EAAAO,IACAX,OAAAC,eAAAU,GAAA,WAAyCT,YAAA,EAAAK,cACzC,EAAAE,MAAA,iBAAAF,MAAA,QAAAM,OAAAN,MAAAnB,oBAAAQ,EAAAe,GAAAE,IAAA,SAAAA,KAAgH,OAAAN,MAAAM,MAAqBC,KAAA,KAAAD,MACrI,OAAAF,IAIAvB,oBAAA2B,EAAA,SAAAhC,QACA,IAAAe,OAAAf,eAAA2B,WACA,SAAAM,aAA2B,OAAAjC,OAAA,SAC3B,SAAAkC,mBAAiC,OAAAlC,QAEjC,OADAK,oBAAAQ,EAAAE,OAAA,IAAAA,QACAA,QAIAV,oBAAAW,EAAA,SAAAmB,OAAAC,UAAsD,OAAAnB,OAAAoB,UAAAC,eAAA5B,KAAAyB,OAAAC,WAGtD/B,oBAAAkC,EAAA,GAIAlC,wCAAAmC,EAAA,kBDxEA;;;;;gGEVAnC,oBAAAgB,EAAA0B,qBAAA1C,oBAAAQ,EAAAkC,oBAAA,6BAAAC,WAAA3C,oBAAAQ,EAAAkC,oBAAA,iCAAAE,eAAA5C,oBAAAQ,EAAAkC,oBAAA,8BAAAG,YAAA7C,oBAAAQ,EAAAkC,oBAAA,kCAAAI,gBAAA,IAAAC,kCAAA/C;;AAAA,oCAEIgD,IAAMpC,OAAAmC,kCAAA,QAAAnC,CAAV,KAEW+B,SAAWK,IAAfC,MACIL,aAAeI,IAAnBE,UACIL,UAAYG,IAAhBG,OACIL,cAAgBE,IAApBI;;;;;gGCPPpD,oBAAAgB,EAAA0B,qBAAA,IAAIW,OACAC,OACAC,MAFJ,GAGIC,QAHJ,GAIIC,OAJJ,GAMA,SAAAC,gBAAAC,SACE,OAAO,IAAAC,SAAA,IAAkB,WAAaD,QAAAE,IAAY,SAAApD,KAAAP,GAChD,OAAO4D,8BAAP,MADoCC,KAAb,KAAzB,KA4BarB,oBAAA,iBAAAsB,WACb,IAAIC,SAAW,IAAAC,OAAW,KAAAF,UAA1B,SACIG,UAAYH,qBADhB,GAYA,SAAAd,UAAAkB,KAAAC,GACE,IAAAjD,EAAIkD,QACAC,EAAIH,KADRI,OAEIC,EAFJ,EAGI9C,EAHJ,EAKI+C,IAAMH,GALV,EAMII,KAPsB,EAa1B,SAAAC,QACE,GAAAF,IAAS,OAAApB,IACT,GAAAqB,IAAS,OAAOA,OAAPtB,IAGT,IAAAnD,EAAAK,EAAOsE,EAAPJ,EACA,GAAIL,qBAAJb,MAAkC,CAChC,KAAOkB,OAAWL,qBAAXK,OAA2CL,uBAAlDb,QAIA,OAHKrD,EAADuE,IAAJF,EAAkBG,KAAlB,GACUnE,EAAI6D,gBAAgBK,QAAzBjB,QAA4CmB,KAA5C,EACIpE,IAAJkD,SAAoBkB,OAAgBP,qBAAJZ,WAAoCiB,GAClEL,WAAWS,EAAXT,EAAkBlE,EAAlBkE,iBAAP,KAIF,KAAOK,EAAPF,GAAc,CACZ,IAAKhE,EAAI6D,gBAAgBlE,EAAIuE,QAA7BjB,QAAgDmB,KAAhD,OACK,GAAIpE,IAAJkD,OAAoBkB,OAAgBP,qBAAJZ,WAAoCiB,OACpE,GAAIlE,IAAJ4D,UAAqB,SAC1B,OAAOC,aAAPlE,GAIF,OAAOwE,OAAYN,aAAnBG,GAGF,IA7BIH,gBAAgBG,EAAhBH,KAAJZ,WAAwCe,EACpCH,gBAAgBG,EAAhBH,KAAJX,UAAuCc,GA4B/BnD,EAAIwD,WAAZtB,KAA8B,CAE5B,IADA,IAAIwB,OACG1D,SAAaA,IAApBkC,KAA+BwB,YAAa1D,EAAIwD,QAC5CP,GAAJ,OAAUS,IAAMT,MAAO1C,OACvB2C,eAGF,OAAAA,KAgBF,SAAAS,UAAAD,KACE,OAAOA,0BAAPd,WAGF,SAAAgB,YAAAZ,MACE,OAAOA,cACDH,cAAcG,MAAdH,IAA4B,IAAOG,kBAAP,MAA5BH,IADNG,KAKF,OACEnB,MAlFF,SAAAA,MAAAmB,KAAAC,GACE,IAAAY,QAAAtB,QAAsBW,KAAOpB,UAAAkB,KAAgB,SAAAU,IAAA5E,GAC3C,GAAA+E,QAAa,OAAOA,YAAa/E,EAApB,GACbyD,YAAesB,QAAUZ,EA9B/B,SAAAa,gBAAAvB,QAAAU,GACE,IAAIvC,OAAS4B,gBAAbC,SACA,OAAO,SAAAmB,IAAA5E,GACL,OAAOmE,EAAEvC,OAAFuC,OAAPV,UA2B+BuB,KAAJb,GAA8BX,gBAAvDC,OAGF,OADAW,aAAeX,YACfW,MA6EApB,UAFKA,UAGLC,OA1BF,SAAAA,OAAAmB,KAAAX,SAEE,OADA,MAAIA,UAAiBA,QA9EzB,SAAAwB,aAAAb,MACE,IAAIc,UAAYxE,cAAhB,MACI+C,WAUJ,OARAW,aAAa,SAAAQ,KACX,IAAK,IAALO,UAAAP,IACQO,UAAND,WACEzB,aAAayB,kBAAbzB,UAKNA,QAkEiCwB,CAAVxB,QACbA,8BAADK,YAAAsB,OAAkDhB,KAAAT,IAAS,SAAAiB,KAChE,OAAOnB,QAAAE,IAAY,SAAAwB,QACjB,OAAOL,YAAYF,IAAnBO,WADKtB,KAAPC,cADKD,KAAP,OAyBAX,WAlBF,SAAAA,WAAAkB,MACE,OAAOA,yBAAP;;;;;kGC3GJtE,oBAAAgB,EAAA0B,qBAAA,IAAAK,kCAAA/C;;AAAA,oCAAAA,oBAAAQ,EAAAkC,oBAAA,8BAAAK,kCAAA,cAAAwC,kCAAAvF;;AAAA,oCAAAA,oBAAAQ,EAAAkC,oBAAA,6BAAA6C,kCAAA,WAAAvF,oBAAAQ,EAAAkC,oBAAA,iCAAA6C,kCAAA,eAAAvF,oBAAAQ,EAAAkC,oBAAA,8BAAA6C,kCAAA,YAAAvF,oBAAAQ,EAAAkC,oBAAA,kCAAA6C,kCAAA,oBAAAC,kCAAAxF;;AAAA,oCAAAA,oBAAAQ,EAAAkC,oBAAA,6BAAA8C,kCAAA,WAAAxF,oBAAAQ,EAAAkC,oBAAA,iCAAA8C,kCAAA,eAAAxF,oBAAAQ,EAAAkC,oBAAA,8BAAA8C,kCAAA,YAAAxF,oBAAAQ,EAAAkC,oBAAA,kCAAA8C,kCAAA;;;;;gGCAAxF,oBAAAgB,EAAA0B,qBAAA1C,oBAAAQ,EAAAkC,oBAAA,6BAAA+C,WAAAzF,oBAAAQ,EAAAkC,oBAAA,iCAAAgD,eAAA1F,oBAAAQ,EAAAkC,oBAAA,8BAAAiD,YAAA3F,oBAAAQ,EAAAkC,oBAAA,kCAAAkD,gBAAA,IAAA7C,kCAAA/C;;AAAA,oCAEI6F,IAAMjF,OAAAmC,kCAAA,QAAAnC,CAAV,MAEW6E,SAAWI,IAAf5C,MACIyC,aAAeG,IAAnB3C,UACIyC,UAAYE,IAAhB1C,OACIyC,cAAgBC,IAApBzC;;;;;;;;;;0FCPPpD,oBAAAgB,EAAA0B,qBAAA1C,oBAAAQ,EAAAkC,oBAAA,gCAAAoD,cAAA9F,oBAAAQ,EAAAkC,oBAAA,2BAAAqD,SAAA/F,oBAAAQ,EAAAkC,oBAAA,mCAAAsD,iBAAAhG,oBAAAQ,EAAAkC,oBAAA,0BAAAuD,QAAAjG,oBAAAQ,EAAAkC,oBAAA,sCAAAwD,oBAAA,IAAAC,oCAAAnG;;AAAA,wBAAAA,oBAAAQ,EAAAkC,oBAAA,+BAAAyD,oCAAA,aAAAnG,oBAAAQ,EAAAkC,oBAAA,kCAAAyD,oCAAA,gBAIO,IAAML,YAAN,cAKMC,OAAN,SAKMC,gBACTI,OAD0B,SAE1BC,QAF0B,UAG1BC,QAH0B,QAI1BC,QAJ0B,UAK1BC,QAL0B,qBAM1BC,IAAK,OAGIR,OACTS,MADiB,QAEjBC,UAFiB,YAGjBC,WAHiB,aAIjBC,QAJiB,UAKjBC,UAAW,aAGFZ,mBACTa,IAD6B,MAE7BC,GAAI;;;;;iGCjCRhH,oBAAAgB,EAAA0B,qBAAA,IAAAuE,wCAAAjH;;AAAA,gCAAAkH,sCAAAlH;;AAAA,8BAAAmH,sCAAAnH;;AAAA,8BAAAoH,oCAAApH;;AAAA,wBAuBe0C,oBAAA,QAXf,SAAA2E,KAAAC,KAAAC,SACI,IAAMC,YAAeC,yDAAUC,qDAAQC,sDACjCC,WAAahH,OAAAwG,oCAAA,iBAAAxG,CAAnB0G,MAEA,IAAAM,WACI,MAAM,IAAAC,MAAN,mCAGJ,OAAOL,4BAAPD;;;;;;;wBCsBW7E,oBAAA,QAvBf,SAAAiF,OAAAG,IAAAP,SAIIA,QAAU3G,kBAFNmH,gBAAgB,GAEpBR,SAEA,IAAIS,cACErE,WACAsE,KAAOrH,OAAAsH,oCAAA,YAAAtH,CAAb+C,SAYA,OAPIqE,OAHAT,QAAJQ,eAGaD,gBAATE,MAKJF,YAAY,SAAAK,OAAA,OAASF,iLAATE,WAELH,OAAPrE;;;;;2FCvCJ3D,oBAAAgB,EAAA0B,qBAAA,IAAA0F,oCAAApI;;AAAA,sCAAAkH,sCAAAlH;;AAAA,8BAmCe0C,oBAAA,QAXf,SAAAgF,OAAAW,IAAAd,SAKIA,QAAU3G,kBAHNmH,gBADkB,EAElBO,eAAgB,KAEpBf,SAEA,IAAMgB,IAAM3H,OAAAwH,oCAAA,UAAAxH,CAAM2G,QAAlBe,gBACA,OAAO1H,OAAAsG,sCAAA,QAAAtG,CAAO2H,cAAPF,KAAPd;;;;;6FChCJvH,oBAAAgB,EAAA0B,qBAAA,IAAAwF,oCAAAlI;;AAAA,wBAoDe0C,oBAAA,QAxBf,SAAA+E,SAAAK,KACI,IAAME,UACF9H,EAAJ,EACIsI,sBACE7E,WACAsE,KAAOrH,OAAAsH,oCAAA,YAAAtH,CAAb+C,SAgBA,OAdAmE,YAAY,SAAAW,MACR,IAAMC,UACN,IAAK,IAALjH,OAAAgH,KACQhH,OAAJuG,OACIQ,eAAiBR,OAAjBQ,MAEAR,YAAc9H,IACdsI,eAAiBtI,EAAjBsI,GAEJE,uBAAyBD,KAAzBC,KAEJT,6BAGIrH,YAADoH,QAAPrE;;;;;0FCjDJ3D,oBAAAgB,EAAA0B,qBAAA,IAAAiG,sCAAA3I;;AAAA,8BAAAA,oBAAAQ,EAAAkC,oBAAA,2BAAAiG,sCAAA,cAAAC,sCAAA5I;;AAAA,8BAAAA,oBAAAQ,EAAAkC,oBAAA,2BAAAkG,sCAAA,cAAAC,wCAAA7I;;AAAA,gCAAAA,oBAAAQ,EAAAkC,oBAAA,6BAAAmG,wCAAA,cAAAC,4CAAA9I;;AAAA,oCAAAA,oBAAAQ,EAAAkC,oBAAA,yBAAAoG,4CAAA;;;;;;;;;;;;;;;;;;;;;;;6/BCqCMC,8BAqCF,SAAAA,YAAsB,IAAAC,oJAAAC,CAAAC,KAAAH,WAAA,QAAAI,KAAAC,UAAA5E,OAAN6E,KAAMC,MAAAH,MAAAI,KAAA,EAAAA,KAAAJ,KAAAI,OAANF,KAAME,MAAAH,UAAAG,MAAA,IAAAC,8NAAAC,CAAAP,MAAAF,KAAAD,UAAAW,WAAA9I,OAAA+I,eAAAZ,YAAA1I,KAAAoC,MAAAuG,MAAAE,MAAA5D,OAAA+D,QAAA,OAGlBG,MAAAI,kBACAJ,MAAAK,mBAJkBL,kdArCFM,uCAAA,0EAwGXvC,SAQLA,QAAU3G,kBANNmJ,MADe,MAEfC,UAFe,KAGfC,SAHe,EAIfC,cAJe,EAKfC,SAEJ5C,SACA,IAAMmB,OAASQ,KAAAkB,uBAAf1B,OAEM2B,cAAgBC,uCAAA,YAAAjK,KAAA6I,KAElBA,KAAAkB,uBAFkB1B,OAGlBQ,KAHkBqB,YAIlBhD,QAAA2C,aAAuBxB,OAAA7E,IAAW,SAAArD,GAAA,OAAKA,EAALC,SAAlCsD,OAA0DmF,KAJxCsB,eAKlBjD,QALkB4C,MAOdM,WADJ,WACgBlD,cACZmD,SAAUnD,QAAQ0C,UAI1B,IAAK1C,QAALyC,UACI,OAAAK,cAxBU,IA2BNL,UA3BMzC,QAAAyC,UA4BN1C,KAAuB+C,cA5BjB/C,KA4BAqD,OAAiBN,cA5BjBM,OA4BQC,KAASP,cA5BjBO,KA6BRC,WAAaF,OAAA9G,IAAY,SAAAiH,GAAA,OAAKA,EAALrK,OAEzBsK,YADgBnK,YAAtBoJ,WACoBgB,OAAqB,SAAAC,IAAAC,MACrC,IAAMC,IAAMN,mBAAZK,MAIA,OAHA,IAAIC,KACAF,UAASE,IAAMnB,UAAfiB,QAEJA,SAiCJ,MA9BA,WAAI1D,cACAwD,oBAAoB,SAAAK,MAChB,IAAMC,KAAOD,KAAb,GACME,MAAQF,KAAd,GAEA9D,mBAAmB,SAAAiE,MAAAC,UACflE,qBAAuBgE,wBAGnBV,KAHmBU,UAInBX,OAJJrD,WASRA,aAAa,SAAAiE,MAAAC,UACTT,oBAAoB,SAAAK,MAChB,IAAMC,KAAOD,KAAb,GACME,MAAQF,KAAd,GAEAG,YAAcD,kBAEVC,MAFUD,MAGVV,KAHUU,UAIVX,OAJJY,WAUZlB,sDA2BKoB,WAAwD,IAA7CC,SAA6CtC,UAAA5E,OAAA,QAAAlC,IAAA8G,UAAA,GAAAA,UAAA,MAA9BuC,OAA8BvC,UAAA5E,OAAA,QAAAlC,IAAA8G,UAAA,GAAAA,UAAA,IAAnBwC,WAAF,GAClCC,iBAAmBJ,UAAzB1H,OACI+H,QAAS5C,KAAAuC,UAAbC,UACMK,aAAezB,uCAAA,QAAA7H,WAAAH,EAArBwJ,QAgBA,OAdAE,4EAEIC,wCAAA,eAFJD,SAGMP,UAAFA,UAAaI,cAAbA,cAA4BK,eAAgBC,kDAAA,QAHhDH,4BAMAI,0FAEIT,OAAJC,UACIG,6BAEAA,6BAGJA,+CAsDEM,gBACF,IAAMC,QAAUpD,KAAAqD,SACZxC,MADyB,MAEzBI,KAAMkC,iBAGJG,cADSF,QAAA3B,OAAA9G,IAAmB,SAAAsE,OAAA,OAASA,MAAT1H,QACb6E,OAAgBgH,QAArChF,MAEMmF,SAAW,IAAIvD,KAAJwD,YAAAF,aAAmCF,QAAnC3B,QAAqD/C,WAAtE,WAEA,OADA6E,wCACAA,qDAwBOE,KAAMpF,SACboF,KAAOA,MAAQzD,KAAfyD,YACApF,QAAU3G,kBAAoB0H,eAApB1H,KAAV2G,SAEA,IAAMmB,OAASQ,KAAA0D,gBAAflE,OACMmE,QAAUnE,OAAA7E,IAAW,SAAAQ,GAAA,OAAKA,EAALyI,kBACrBC,UAAYF,WAAlBrI,OACIwI,sBACAC,cACAC,cAEJ,GAAIP,OAASxG,oCAAA,WAAbgH,UAEI,IADAH,kBACKC,OAAL,EAAiBA,OAAjBF,UAAqCE,SAAU,CAC3C,IAAMnI,OACN,IAAKoI,OAAL,EAAiBA,OAASxE,OAA1BlE,OAAyC0I,SACrCpI,IAAI4D,eAAJ5D,QAA6B+H,gBAA7B/H,QAEJkI,8BAED,GAAIL,OAASxG,oCAAA,WAAbiH,QAAiC,CAEpC,IADAJ,gBAAkBtE,OAAA7E,IAAW,SAAAQ,GAAA,OAAKA,EAAL5D,SAAXsD,KAA+BwD,QAAjDyF,iBACKC,OAAL,EAAiBA,OAAjBF,UAAqCE,SAAU,CAC3C,IAAMnI,QACN,IAAKoI,OAAL,EAAiBA,OAASxE,OAA1BlE,OAAyC0I,SACrCpI,UAAS+H,gBAAT/H,SAEJkI,oBAAoBlI,UAASyC,QAA7ByF,iBAEJA,eAAiBA,oBAAjBA,UACG,IAAIL,OAASxG,oCAAA,WAAbkH,QAUH,MAAM,IAAAxF,MAAA,aAAA8E,KAAN,qBARA,IADAK,gBAAkBtE,OAAA7E,IAAW,SAAAQ,GAAA,OAAKA,EAAL5D,UACxBwM,OAAL,EAAiBA,OAAjBF,UAAqCE,SAAU,CAC3C,IAAMnI,SACN,IAAKoI,OAAL,EAAiBA,OAASxE,OAA1BlE,OAAyC0I,SACrCpI,WAAS+H,gBAAT/H,SAEJkI,4BAMR,OAAAA,yDAGM7E,OACN,IAAMmF,UAAYnF,MAAlB1H,OACAyI,KAAAsB,gBAAA,IAAA8C,UACA,IAAMC,kBAAoBrE,KAA1BsE,mBAEA,GAAKD,8BAA8BpF,MAAnC1H,QAEO,CACH,IAAMgN,WAAaF,kBAAA7E,OAAAgF,UAAmC,SAAAC,WAAA,OAAaA,mBAAbL,YACtDG,gBAAoBF,qCAApBE,YAHAF,qCAYJ,OALAA,wCACAA,wCACAA,sCAEArE,KAAA0E,wBAAAC,wBACA3E,iEAuCeyB,OAAQmD,WAAYnC,QAAQ,IAAAoC,OAAA7E,KAC3CyB,OAAS/J,OAAAoN,qCAAA,mBAAApN,CAAT+J,QACAgB,OAAS/K,kBAAoBgL,WAAF,EAAmBqC,YAArCrN,GAAT+K,QAEA,IAAMuC,aAAehF,KAArBiF,kBACMC,QAAUN,mBAAoBA,kBAApC,GACMO,WAAaP,WAAWA,kBAA9B,GAEA,GAAII,aAAavD,OAAbuD,QAA8BvC,OAAlCsC,WACI,MAAM,IAAApG,MAAa8C,OAAblK,KAAN,sCAGJ,IAAM6N,gBAAkBF,QAAAvK,IAAY,SAAAsE,OAChC,IAAMoG,UAAYL,aAAlB/F,OACA,IAAAoG,UAEI,MAAM,IAAA1G,MAAaM,MAAnB,gCAEJ,OAAOoG,UAAPC,QAGEC,MAAQvF,KAAAuF,MAAW9C,OAAzBC,WAEM8C,GAAKD,sBAAX/F,OACMiG,eAAiBL,gBAAAzK,IAAoB,SAAAsH,KAAA,OAAOuD,GAAPvD,OAEvCyD,eACAC,cAAgB,SAAhBA,gBAAgB,OAAMd,OAANe,gBAEdC,kBACNC,kEAAmBP,MAAnBO,YAAsC,SAAA9O,GAClC,IAAM+O,WAAaN,eAAA9K,IAAmB,SAAAsE,OAAA,OAASA,wBAATjI,KACtC6O,kBAAoBV,2NAApBU,iBAhCuC,IAAAG,cAkC3BtO,OAAAuO,4CAAA,aAAAvO,EAAAmO,iBAAApE,SAA0CA,OAlCflK,OAkCpC0H,MAlCoCiH,eAAAF,cAAA,MAwC3C,OALAT,sBAEAzC,qEAAyBC,wCAAA,eAAzBD,SAAmDL,OAAFhB,OAAkBjC,OAAnEsD,qBACAI,mFAEAqC,kDAWOY,aAA2D,IAA9C1D,OAA8CvC,UAAA5E,OAAA,QAAAlC,IAAA8G,UAAA,GAAAA,UAAA,MAAjCkG,eAAiClG,UAAA,GAAjBmG,WAAiBnG,UAAA5E,OAAA,QAAAlC,IAAA8G,UAAA,GAAAA,UAAA,MAC5DoG,gBAAkB7D,OAAxB6D,gBACMC,oBAAsB9D,OAA5B+D,SACMC,QAAUhE,OAAhBgE,QACMC,UAAYhP,OAAAoN,qCAAA,iBAAApN,CAAlBsI,MACM2G,qBAAuBD,UAA7BE,sBAEMC,YACFC,aAFqBpP,OAAAoN,qCAAA,oBAAApN,CAAzBsI,MAGI+G,MAAOL,WAgBX,OAbAN,gBAAkB1O,OAAAoN,qCAAA,mBAAApN,CAAAiP,qBAAAlE,OAAlB2D,MACAY,8FAAoDL,qBAAFA,qBAAwBH,SAA1EQ,qBACItP,OAAAuP,QACIR,iBAFRO,SAKAV,iBACIY,wGACIzE,OADwDA,OAExD4D,uBAFJa,MAMJlH,mCAUAmH,UAAWC,UACX,OAAAD,WACA,KAAKpE,wCAAA,YACD/C,KAAAU,eAAA3B,KAAAqI,UAGJ,OAAApH,qDASSmH,WACT,OAAAA,WACA,KAAKpE,wCAAA,YACD/C,KAAAU,kBAIJ,OAAAV,iEAUeqH,UAAWZ,SAAS,IAAAa,OAAAtH,KACfA,KAApBU,eACA6G,QAAsB,SAAAC,IAAA,OAAMA,yBAANf,2CA8CrBgB,iBAAkBhF,QACnB,IAAMuC,aAAehF,KAArBiF,kBAEA,IAAKD,aAALyC,kBACI,MAAM,IAAA9I,MAAA,SAAA8I,iBAAN,kBAGJ,IAAMC,aAAejF,aAAkBgF,iBAAvC,UAEA,GAAIzC,aAAJ0C,cACI,MAAM,IAAA/I,MAAA,SAAA+I,aAAN,mBAGJ,IAAMC,aAAe3H,KAAA0D,gBAAAkE,YAArBH,kBAb2BI,sBAcEnQ,OAAAoQ,sDAAA,sBAAApQ,CAAAiQ,aAAoC3H,KAApCqB,YAdFoB,QAcnBsF,WAdmBF,sBAAAE,WAcPC,KAdOH,sBAAAG,KAgBrBC,SAAWvQ,OAAAuO,4CAAA,aAAAvO,EAAAqQ,cAETxQ,KADJmQ,aAEIjE,KAAMxG,oCAAA,UAFViL,UAGIC,QAASlL,oCAAA,iBAHbmL,OAIIJ,aALSN,eAAjB,GAQMnC,MAAQvF,KAAAuF,MAAW9C,OAAzBC,WAMA,OALA6C,yBAEAzC,qEAAyBC,wCAAA,eAAzBD,KAA+C2E,iBAAFA,iBAAoBhF,OAApBA,OAA4BiF,aAAzE5E,oBACAI,mFAEAqC,0DA8BA,OAAO,IAAA1F,UAHMG,KAAAqI,UAAepL,oCAAA,WAA5BgH,WACejE,KAAfsI,6FAtjB+B7F,QAC/B,OAAO8F,kDAAA,QAAAC,iBAAP/F,6CAfA,OAAOQ,kDAAA,yBA0kBAzJ,oBAAA,QAAfqG;;;;;yFCrqBA/I,oBAAAgB,EAAA0B,qBAAA,IAAAyD,oCAAAnG;;AAAA,wBAEe0C,oBAAA,SACXkF,WAAYzB,oCAAA,WAAWwL;;;;;2FCH3B3R,oBAAAgB,EAAA0B,qBAceA,oBAAA,SANXyK,UADe,WAEfC,QAFe,SAGfC,QAHe,SAIfsE,KAAM;;;;;iGCXV3R,oBAAAgB,EAAA0B,qBAaeA,oBAAA,SANXkP,YADqB,cAErBC,SAFqB,WAGrBC,IAHqB,MAIrBR,OAAQ;;;;;0FCVZtR,oBAAAgB,EAAA0B,qBAYeA,oBAAA,SAJXqP,QADc,UAEdX,UAAW;;;;;8FCTfpR,oBAAAgB,EAAA0B,qBAYeA,oBAAA,SALXsP,OADkB,SAElBC,QAFkB,UAGlBC,IAAK;;;;;sFCTTlS,oBAAAgB,EAAA0B,qBAAA,IAAAyP,0CAAAnS;;AAAA,8BAAAA,oBAAAQ,EAAAkC,oBAAA,+BAAAyP,0CAAA,cAAAC,gDAAApS;;AAAA,oCAAAA,oBAAAQ,EAAAkC,oBAAA,qCAAA0P,gDAAA,cAAAC,8CAAArS;;AAAA,kCAAAA,oBAAAQ,EAAAkC,oBAAA,mCAAA2P,8CAAA,cAAAC,yCAAAtS;;AAAA,6BAAAA,oBAAAQ,EAAAkC,oBAAA,8BAAA4P,yCAAA,cAAAC,6CAAAvS;;AAAA,iCAAAA,oBAAAQ,EAAAkC,oBAAA,kCAAA6P,6CAAA;;;;;+FCAAvS,oBAAAgB,EAAA0B,qBAUeA,oBAAA,SAHX8P,WAAY;;;;;kFCPhBxS,oBAAAgB,EAAA0B,qBAAA,IAAA+P,wCAAAzS;;AAAA,sBAAA0S,uCAAA1S;;AAAA,2BAAA2S,oCAAA3S;;AAAA,wBAAA4S,oCAAA5S;;AAAA,wBAAA6S,oCAAA7S;;AAAA,wBAAA8S,wCAAA9S;;AAAA,4BAAA+S,kDAAA/S;;AAAA,gCAAAgT,2CAAAhT;;AAAA,kBAwBAyS,wCAAA,QAAAQ,WACIC,uDACAC,+CACAC,qDACAC,uDACAC,uDACAC,2EACApJ,iDACAqJ,iEACAC,6DACAC,+DACAC,mEACAC,qEACAC,mEACAC,oDAEJrB,wCAAA,QAAAsB,MAAApB,oCACA/R,cAAc6R,wCAAA,QAAd7R,qCACA6R,wCAAA,QAAAuB,kBAA8BnB,oCAAA,kBAC9BJ,wCAAA,QAAAwB,WAAuBnB,wCAAA,WACvBL,wCAAA,QAAAyB,cAA0BpB,wCAAA,cAC1BL,wCAAA,QAAA0B,kBAA8BpB,kDAAA,QAC9BN,wCAAA,QAAA2B,QAAoBpB,2CAApBoB,QAEe1R,oBAAA,QAAA+P,wCAAA;;;;;wFChDfzS,oBAAAgB,EAAA0B,qBAAA1C,oBAAAQ,EAAAkC,oBAAA,+CAAA2R,6BAAArU,oBAAAQ,EAAAkC,oBAAA,iCAAA4R,eAAA,IAAAnO,oCAAAnG;;AAAA,wBAAAuU,qCAAAvU;;AAAA,yBA+DO,SAAAqU,2BAAAG,aAAAC,YAA8D,IACzD9J,OAAW6J,aAD8C7J,OAGjE,OAAQA,OAARgC,MACA,KAAKxG,oCAAA,UAAL4L,QACI,OAAQpH,OAAR0G,SACA,KAAKlL,oCAAA,eAALqM,WAEA,QACI,OAAO,IAAI+B,qCAAA,WAAJC,aAAPC,YAER,KAAKtO,oCAAA,UAALiL,UACI,OAAQzG,OAAR0G,SACA,KAAKlL,oCAAA,iBAALyL,YACI,OAAO,IAAI2C,qCAAA,YAAJC,aAAPC,YACJ,KAAKtO,oCAAA,iBAAL0L,SACI,OAAO,IAAI0C,qCAAA,SAAJC,aAAPC,YACJ,KAAKtO,oCAAA,iBAALmL,OACI,OAAO,IAAIiD,qCAAA,OAAJC,aAAPC,YACJ,QACI,OAAO,IAAIF,qCAAA,YAAJC,aAAPC,YAER,QACI,OAAO,IAAIF,qCAAA,YAAJC,aAAPC,aAYD,SAAAH,aAAAI,WAAA/J,OAAAgK,SACH,IAAMC,cAUN,OARMD,SAAWA,QAAjBnQ,SACImQ,QAAUhK,OAAA9G,IAAW,SAAA4E,MAAA,OAAQA,KAARhI,QAGzBkU,gBAAgB,SAAA3M,OAAA9H,GACZ0U,uBAGGjK,OAAA9G,IAAW,SAAA4E,MAAA,OAzFtB,SAAAoM,gBAAAvN,KAAAqD,QACIrD,KAAOA,SACP,IAAIkN,oBAEJ,OAAQ7J,OAARgC,MACA,KAAKxG,oCAAA,UAAL4L,QACI,OAAQpH,OAAR0G,SACA,KAAKlL,oCAAA,eAALqM,WAGA,QAEI,OADAgC,aAAe,IAAID,qCAAA,aAAa5J,OAAjBlK,KAAA6G,KAAAqD,OAA4C,IAAI4J,qCAAA,kBACxD,IAAIA,qCAAA,WAAJC,aAAA,MAAkClN,YAAzC,IAER,KAAKnB,oCAAA,UAALiL,UACI,OAAQzG,OAAR0G,SACA,KAAKlL,oCAAA,iBAALyL,YAEI,OADA4C,aAAe,IAAID,qCAAA,aAAa5J,OAAjBlK,KAAA6G,KAAAqD,OAA4C,IAAI4J,qCAAA,mBACxD,IAAIA,qCAAA,YAAJC,aAAA,MAAmClN,YAA1C,IACJ,KAAKnB,oCAAA,iBAAL0L,SAEI,OADA2C,aAAe,IAAID,qCAAA,aAAa5J,OAAjBlK,KAAA6G,KAAAqD,OAA4C,IAAI4J,qCAAA,eAA/DC,SACO,IAAID,qCAAA,SAAJC,aAAA,MAAgClN,YAAvC,IACJ,KAAKnB,oCAAA,iBAALmL,OAEI,OADAkD,aAAe,IAAID,qCAAA,aAAa5J,OAAjBlK,KAAA6G,KAAAqD,OAA4C,IAAI4J,qCAAA,cACxD,IAAIA,qCAAA,OAAJC,aAAA,MAA8BlN,YAArC,IACJ,QAEI,OADAkN,aAAe,IAAID,qCAAA,aAAa5J,OAAjBlK,KAAA6G,KAAAqD,OAA4C,IAAI4J,qCAAA,mBACxD,IAAIA,qCAAA,YAAJC,aAAA,MAAmClN,YAA1C,IAER,QAEI,OADAkN,aAAe,IAAID,qCAAA,aAAa5J,OAAjBlK,KAAA6G,KAAAqD,OAA4C,IAAI4J,qCAAA,mBACxD,IAAIA,qCAAA,YAAJC,aAAA,MAAmClN,YAA1C,KA0DsBuN,CAAgBH,WAAWE,WAAWnM,KAAtCoM,OAARpM;;;;;sFC7GtBzI,oBAAAgB,EAAA0B,qBAAA,IAAAyD,oCAAAnG;;AAAA,wBAAA8U,oCAAA9U;;AAAA,wBAGM+U,YACFzN,QAEA0N,gBAHe,SAAAA,gBAAAC,SAAAxU,MAIX,IAAMyU,OAASzU,MAAQG,OAAAkU,oCAAA,YAAAlU,GA4CvB,OA1CAsI,KAAA5B,KAAA4N,SACIzU,KADgByU,OAEhBxM,OAFgBuM,SAIhBnE,UAJgB,SAAAA,YAKZ,IAAIA,UAAY5H,KAAhBiM,iBAQA,OANArE,YACIA,UAAY5H,KAAAiM,oBACZjM,KAAAR,OAAA0M,QAAoB,SAAAjN,OAChB2I,UAAU3I,MAAV2I,iBAGRA,WAEJuE,WAfgB,SAAAA,aAgBZ,IAAIC,cAAgBpM,KAApBqM,eAUA,OARAD,gBACIA,cAAgBpM,KAAAqM,kBAChBrM,KAAAR,OAAA0M,QAAoB,SAAAjN,OACZA,sBAAwBhC,oCAAA,UAA5B4L,UACIuD,cAAcnN,MAAdmN,kBAIZA,eAEJE,aA5BgB,SAAAA,eA6BZ,IAAIC,gBAAkBvM,KAAtBwM,iBAUA,OARKxM,KAALwM,mBACID,gBAAkBvM,KAAAwM,oBAClBxM,KAAAR,OAAA0M,QAAoB,SAAAjN,OACZA,sBAAwBhC,oCAAA,UAA5BiL,YACIqE,gBAAgBtN,MAAhBsN,kBAIZA,kBAGDvM,KAAA5B,KAAP4N,UAIOxS,oBAAA,QAAfqS;;;;;;;mhBC9CqBY,i8BAAeC,wCAAA,iGAS5B,IAAMC,QAAU3M,KAAAsL,aAAA7J,OAAhBuG,KACA,OAAQ2E,QAAD,GAAaA,QAAQA,eAA5B,wCAUA,OAAO3M,KAAAsL,aAAA7J,OAAPuG,mBApBaxO,oBAAA,QAAAiT;;;;;;;;;;;mhBCCAG,+9BAAoBC,wCAAA,8EASjC,OAAOC,oCAAA,iBAAPpE,8EAUmB,IAAA7D,OAAA7E,KACb+M,KAAO,IAAbC,IACMC,UAUN,OAPAnH,uFAAmB9F,KAAnB8F,WAAoC,SAAA9O,GAChC,IAAMqL,MAAQwC,OAAAyG,aAAAlN,KAAdpH,GACK+V,SAAL1K,SACI0K,gBACAE,sBAGRA,0BA/BazT,oBAAA,QAAAoT;;;;;;;;;;;;;ghBCEAM,u9BAAmBC,sCAAA,6EAShC,OAAOL,oCAAA,eAAPxD,6EAUmB,IAAAzE,OAAA7E,KACfoN,IAAMC,OAAVC,kBACIC,IAAMF,OAAVG,kBAiBA,OAdA1H,uFAAmB9F,KAAnB8F,WAAoC,SAAA9O,GAChC,IAAMqL,MAAQwC,OAAAyG,aAAAlN,KAAdpH,GACIqL,iBAAiBoL,kDAAA,UAIjBpL,MAAJ+K,MACIA,WAEA/K,MAAJkL,MACIA,eAIDH,IAAPG,uBAtCa/T,oBAAA,QAAA0T;;;;;;;+gBCHAQ,+8BAAkBC,oCAAA,0EAY/B,OAHK3N,KAAL4N,gBACI5N,KAAA4N,cAAqB5N,KAArB6N,uBAEG7N,KAAP4N,gFAUA,MAAM,IAAAjP,MAAN,6EAWA,OAAOqB,KAAP5B,wBAjCa5E,oBAAA,QAAAkU;;;;;;;0hBCYAI,iBAQjB,SAAAA,MAAAxC,aAAAC,2JAAuCxL,CAAAC,KAAA8N,OACnC9N,KAAAsL,0BACAtL,KAAAuL,uFAUA,MAAM,IAAA5M,MAAN,+DAUA,OAAOqB,KAAAsL,aAAP7J,2CAUA,OAAOzB,KAAAsL,aAAP/T,yCAUA,OAAOyI,KAAAsL,aAAA7J,OAAPgC,+CAUA,OAAOzD,KAAAsL,aAAA7J,OAAP0G,0DAUA,OAAOnI,KAAAsL,aAAA7J,OAAPsM,8DAUA,OAAO/N,KAAAsL,aAAA7J,OAAAuM,aAAwChO,KAAAsL,aAAA7J,OAA/ClK,yCASI,IAAA+I,MAAAN,KACE5B,QAIN,OAHA0H,uFAAmB9F,KAAnB8F,WAAoC,SAAA9O,GAChCoH,UAAUkC,MAAAgL,aAAAlN,KAAVA,MAEJA,2DAUA,MAAM,IAAAO,MAAN,oCAxGanF,oBAAA,QAAAsU;;;;;uFCrBrBhX,oBAAAgB,EAAA0B,qBAAA,IAAAmU,oCAAA7W;;AAAA,+BAAAA,oBAAAQ,EAAAkC,oBAAA,0BAAAmU,oCAAA,cAAAM,wCAAAnX;;AAAA,mCAAAA,oBAAAQ,EAAAkC,oBAAA,8BAAAyU,wCAAA,cAAAC,0CAAApX;;AAAA,qCAAAA,oBAAAQ,EAAAkC,oBAAA,gCAAA0U,0CAAA,cAAAC,uCAAArX;;AAAA,kCAAAA,oBAAAQ,EAAAkC,oBAAA,6BAAA2U,uCAAA,cAAAC,qCAAAtX;;AAAA,gCAAAA,oBAAAQ,EAAAkC,oBAAA,2BAAA4U,qCAAA,cAAAC,sCAAAvX;;AAAA,iCAAAA,oBAAAQ,EAAAkC,oBAAA,4BAAA6U,sCAAA,cAAAC,yCAAAxX;;AAAA,oCAAAA,oBAAAQ,EAAAkC,oBAAA,+BAAA8U,yCAAA,cAAAC,mDAAAzX;;AAAA,8CAAAA,oBAAAQ,EAAAkC,oBAAA,gCAAA+U,mDAAA,cAAAC,yDAAA1X;;AAAA,oDAAAA,oBAAAQ,EAAAkC,oBAAA,sCAAAgV,yDAAA,cAAAC,sDAAA3X;;AAAA,iDAAAA,oBAAAQ,EAAAkC,oBAAA,mCAAAiV,sDAAA,cAAAC,qDAAA5X;;AAAA,+CAAAA,oBAAAQ,EAAAkC,oBAAA,iCAAAkV,qDAAA,cAAAC,yDAAA7X;;AAAA,mDAAAA,oBAAAQ,EAAAkC,oBAAA,qCAAAmV,yDAAA,cAAAC,6CAAA9X;;AAAA,uCAAAA,oBAAAQ,EAAAkC,oBAAA,iCAAAoV,6CAAA;;;;;;;;;;;+gBCWqBC,m8BAAgBC,oCAAA,wEAY7B,OAHK9O,KAAL4N,gBACI5N,KAAA4N,cAAqB5N,KAArB6N,uBAEG7N,KAAP4N,kDAUA,OAAO5N,KAAAsL,aAAA7J,OAAPsN,iDAUA,OAAO/O,KAAAsL,aAAA7J,OAAAuN,UAAqCC,yDAAA,uEAShC,IACJC,aAAiBlP,KAAAsL,aADb7J,OAAAyN,aAEZ,OAAOA,8CAAkDlQ,oCAAA,+EAUzD,MAAM,IAAAL,MAAN,6EAWA,OAAOqB,KAAP5B,sBAhEa5E,oBAAA,QAAAqV;;;;;;;;;ghBCDAM,u+BAAqBC,2CAAA,yEAQ/BC,KAEHA,IAAMC,OAAND,KACA,IAAIE,cAEJ,GAAKC,kDAAA,QAAAC,UAALJ,KAKIE,OAASC,kDAAA,QAAAE,eAATH,SALmC,CACnC,IAAII,QAAUN,UALlB,2DAMIE,OAASI,QAAatC,kBAAkBsC,QAA/BA,QAA8CtC,kBAAkBsC,QAAhEA,IACUH,kDAAA,QADnBD,GAKJ,OAAAA,2BApBa/V,oBAAA,QAAA2V;;;;;;;;;ghBCAAS,qgCAA0BR,2CAAA,8EAQpCC,KAQH,OALKG,kDAAA,QAAAC,UAALJ,KAGaG,kDAAA,QAAAE,eAATH,KAFSD,YAATC,gCAZS/V,oBAAA,QAAAoW;;;;;;;;;ghBCAAC,+/BAAyBT,2CAAA,6EAQnCC,KACH,IAAIE,cAEJ,GAAKC,kDAAA,QAAAC,UAALJ,KAIIE,OAASC,kDAAA,QAAAE,eAATH,SAJmC,CACnC,IAAIO,UAAYC,eAAhB,IACAR,OAASlC,wBAA0BmC,kDAAA,QAA1BnC,GAATkC,UAIJ,OAAAA,+BAjBa/V,oBAAA,QAAAqW;;;;;woBCJAG,qRAQb,MAAM,IAAArR,MAAN,0CARanF,oBAAA,QAAAwW;;;;;;;;;;;ghBCKAC,sCAOjB,SAAAA,eAAAxO,uJAAqB1B,CAAAC,KAAAiQ,gBAAA,IAAA3P,8NAAAC,CAAAP,MAAAiQ,eAAAzP,WAAA9I,OAAA+I,eAAAwP,iBAAA9Y,KAAA6I,OAAA,OAEjBM,MAAAmB,cACAnB,MAAA4P,KAAY,IAAIlR,oCAAA,kBAAkBsB,MAAAmB,OAAlCxH,QAHiBqG,udAPmB6P,2CAAA,2EAoBjCd,KACH,IAAIE,cAEJ,GAAKa,kDAAA,QAAAX,UAALJ,KAIIE,OAASa,kDAAA,QAAAV,eAATH,SAJmC,CACnC,IAAIc,WAAarQ,KAAAkQ,KAAAI,cAAjBjB,KACAE,OAASc,WAAaA,WAAbA,UAAoCD,kDAAA,QAA7Cb,GAIJ,OAAAA,6BA7Ba/V,oBAAA,QAAAyW;;;;;koBCHAM,wBAUjB,SAAAA,aAAAhZ,KAAA6G,KAAAqD,OAAA+O,uJAAyCzQ,CAAAC,KAAAuQ,cACrCvQ,KAAAzI,UACAyI,KAAAyB,cACAzB,KAAAwQ,cACAxQ,KAAA5B,KAAY4B,KAAAyQ,UAAZrS,kFAUOA,MAAM,IAAAkC,MAAAN,KACb,OAAO5B,KAAAzD,IAAS,SAAA0H,OAAA,OAAS/B,MAAAkQ,OAAAzW,MAATsI,6BAzBH7I,oBAAA,QAAA+W;;;;;;;;;;;;;ghBCIAG,8BAQjB,SAAAA,SAAApF,aAAAC,2JAAuCxL,CAAAC,KAAA0Q,UAAA,IAAApQ,8NAAAC,CAAAP,MAAA0Q,SAAAlQ,WAAA9I,OAAA+I,eAAAiQ,WAAAvZ,KAAA6I,KAAAsL,aAAAC,aAAA,OAGnCjL,MAAAqQ,eAAA,KAHmCrQ,idARL2N,wCAAA,mGAqBX,IAAApJ,OAAA7E,KACb+M,KAAO,IAAbC,IACMC,UAYN,OARAnH,uFAAmB9F,KAAnB8F,WAAoC,SAAA9O,GAChC,IAAMqL,MAAQwC,OAAAyG,aAAAlN,KAAdpH,GACK+V,SAAL1K,SACI0K,gBACAE,sBAIRA,2FAWA,GAAIjN,KAAJ2Q,eACI,OAAO3Q,KAAP2Q,eAUJ,IAPA,IAAMC,WAAa5Q,KAAA5B,OAAAyS,OAAmB,SAAAtR,MAAA,QAAUA,gBAAgBkO,kDAAA,WAA7CxM,KAAsE,SAAA6P,EAAAC,GAAA,OAAUD,EAAVC,IACnFC,MAAQJ,WAAdtV,OACI2V,QAAU5D,OAAdC,kBACI4D,iBACAC,iBACAC,eAAJ,EAESpa,EAAT,EAAgBA,EAAhBga,MAA2Bha,IACvBka,UAAYN,WAAW5Z,EAAvBka,IACAC,UAAYP,WAAZO,MAEAD,YAIAD,QAAUI,iBAAkBF,UAAYP,WAAW5Z,EAAnDia,IACAG,kBAQJ,OALAA,iBACIH,cAEJjR,KAAA2Q,eAAAM,QAEOjR,KAAP2Q,uDAUA,OAAO3Q,KAAAsL,aAAA7J,OAAPxH,6DAUa,IAAAqN,OAAAtH,KACP5B,QASN,OARA0H,uFAAmB9F,KAAnB8F,WAAoC,SAAA9O,GAChC,IAAMqL,MAAQiF,OAAAgE,aAAAlN,KAAdpH,GACIqL,iBAAiBoL,kDAAA,QACjBrP,iBAEAA,UAAUkT,oCAAA,kBAAAC,SAAAlP,MAAkCiF,OAA5ClJ,aAGRA,qBAxGa5E,oBAAA,QAAAkX;;;;;;;;;;;;;;;;;;;;;;;mqBCWd,SAAAc,gBAAAhS,QACH,IAAMiS,QAEN,OADA/Z,4BAA4B,SAAAa,KAAWkZ,UAAY,IAAIC,oCAAA,QAAMlS,OAAVjH,KAAZkZ,OACvCA,KAGG,IAAME,aAAe,SAAfA,aAAe7R,KAAAuE,kBAAAuN,gBAAoE,IAAAC,MAAA3L,eAAApG,KAAA,GAAlEyL,WAAkEsG,MAAA,GAAtDC,cAAsDD,MAAA,GACxFE,OAASD,qBAAuBA,oBAAvBA,QACTE,gBAAkB3N,kBAAtBuD,YACIqK,UAAYF,OAAApX,IAAW,SAAAuX,MAAA,OAAQxa,OAAAya,4CAAA,2BAAAza,CAA2Bsa,sBAA3B1G,aAARC,cAC3B,OAAO6G,0CAAA,QAAAtG,gBAAAmG,UAAPL,iBAGS9O,kBAAoB,SAApBA,kBAAoBiE,MAAAsL,WAA+C,IAClCC,mBADM7P,OAA4BvC,UAAA5E,OAAA,QAAAlC,IAAA8G,UAAA,GAAAA,UAAA,MAAfqS,WAAerS,UAAA,GACxEmS,YAAcG,wCAAA,eAAlBnV,SACI0J,4BACAuL,mBAAAvL,MAAA0L,aAAA1T,KAAAxF,MAAA+Y,mBAAAI,mBAAAH,cAEAxL,wBACI4L,GADmBN,UAEnBO,KAFmBnQ,OAGnBoQ,SAAUN,cAKTrP,0BAA4B,SAA5BA,0BAA4B4P,SAAAC,OAAqB,IAAAC,uBAC1DA,sBAAAD,MAAAE,qBAAAlU,KAAAxF,MAAAyZ,sBAAAN,mBAAkCI,SAAlCG,qBAAA7W,OAAAsW,mBAAmEI,SAAnEL,gBAGSS,aAAe,SAAfA,aAAe3H,WAAA/L,OAAA2T,SAAA1Q,OAAAqQ,UACxB,IAAMM,iBACFC,mBAAJ,EACMlb,KAASsK,OAH6DtK,KAIxEmb,UACA5N,eACAC,cAAgB,SAAhBA,gBAAgB,OAAMmN,SAANlN,gBACd2N,iBAAmB,SAAnBA,iBAAmBjO,OAAA,OAAS6N,SA7CtC,SAAAK,qBAAAhU,OAAAxI,GACI,IAAMya,QADgCgC,2BAAA,EAAAC,mBAAA,EAAAC,oBAAAva,EAAA,IAEtC,QAAAwa,MAAAC,UAAkBrU,OAAlBzH,OAAA+b,cAAAL,2BAAAG,MAAAC,UAAA7R,QAAA+R,MAAAN,2BAAA,EAA0B,KAAjBxU,MAAiB2U,MAAA3b,MACtBwZ,KAAKxS,MAALwS,QAAqB,IAAIC,oCAAA,QAAMzS,wBAAVjI,GAArBya,QAHkC,MAAAuC,KAAAN,mBAAA,EAAAC,eAAAK,IAAA,aAAAP,2BAAAI,UAAAI,QAAAJ,UAAAI,SAAA,WAAAP,kBAAA,MAAAC,gBAKtC,OAAAlC,KAyCI+B,QAD8BL,2BAATzN,cAOrBwO,eAkBJ,OAhBIA,QADA/b,OAAS8E,oCAAA,cAAb8L,QACc,SAAAmL,QAAA5O,OAAA,OAAUiO,iBAAVjO,QAEA,SAAA4O,QAAA5O,OAAA,OAASiO,iBAATjO,QAGdQ,6EAA+B,SAAA9O,GACvBkd,QAAJld,MACQqc,uBAA4Brc,IAAOqc,kBAAvC,GACIC,GAAKF,qBAALE,EACAF,kBAAuBA,6BAAvBA,UAEAA,yBAEJC,uBAGDD,mBAAP,MAGSe,mBAAqB,SAArBA,mBAAqBpN,OAC9B,IAAMqN,SAAWrN,aAAjB,GACM1C,kBAAoB0C,MAA1B7F,uBASA,OARAkT,wBAA0B/P,kBAAA7E,OAAA7E,IAA6B,SAAAQ,GAAA,OAAKA,EAAL5D,SAA7BsD,KAA1BuZ,KAGA/P,wCACAA,wCACAA,sCACA+P,yDAEAA,UAGSC,uBAAyB,SAAzBA,uBAAyBtN,MAAAuN,YAAoC,IAAhB7R,OAAgBvC,UAAA5E,OAAA,QAAAlC,IAAA8G,UAAA,GAAAA,UAAA,MAChEmS,UAAY5P,kBAAoB+P,wCAAA,kBAAtC3U,IACM0W,gBAAkB9R,yBAAxB,EACI+R,OAIAA,IAHCF,WAALhZ,OAGUgZ,WAAA3Z,IAAe,SAAA0M,WAAA,OAAc,SAAAoN,WAC/B,IAAMC,QAAUD,UAAhBpR,UACM5B,OAASiT,QAAfjT,OACMuD,aAAeyP,UAArBxP,kBACM0P,YAAcF,0BAApB7M,YACMxJ,KAAOsW,QAAbtW,KACM6O,OAASvV,OAAAkd,OAAA5P,cAAAlD,OAAmC,SAAAC,IAAA8S,GAE9C,OADA9S,IAAI8S,MAAJ9S,MAAkB4S,YAAYE,MAAZF,MAAlB5S,SACAA,SAGJ,OAAO,SAAAvC,QAgBH,QAfiBpB,KAAD9C,QAAuB8C,KAAA0W,KAAU,SAAAlZ,KAAA,OAAO6F,OAAAsT,MAAa,SAAAC,WACjE,KAAMA,kBAANxV,QACI,SAEJ,IAAMvH,MAAQuH,OAAOwV,UAAPxV,MAAdyV,UACA,GAAIV,iBAAmBS,iBAAmB/X,oCAAA,UAA1C4L,QACI,OAAO5Q,OAASgV,OAAO+H,UAAP/H,MAAThV,IAAsCA,OAASgV,OAAO+H,UAAP/H,MAAtD,GAGJ,GAAI+H,iBAAmB/X,oCAAA,UAAvBiL,UACI,SAEJ,IAAMjG,IAAM+C,aAAagQ,UAAbhQ,MAAZM,MACA,OAAO1J,WAAa4D,OAAOwV,UAAPxV,MAApByV,eAzBuB,CAAd5N,cAFd,sBA+CX,OAZIgL,YAAcG,wCAAA,kBAAlB3U,IACoBsW,mBAAApN,OAAAmD,OAAiC,SAAA1K,QAAA,OAAUgV,IAAAO,MAAU,SAAAvN,IAAA,OAAMA,GAANhI,YACjEkD,WADoF,EAEpFvK,KAAM8E,oCAAA,cAAc+L,MAGRmL,mBAAApN,OAAAmD,OAAiC,SAAA1K,QAAA,OAAUgV,IAAAM,KAAS,SAAAtN,IAAA,OAAMA,GAANhI,YAChErH,KAAM8E,oCAAA,cAD6E+L,IAEnFtG,WAAW,KAOVwS,gBAAkB,SAAlBA,gBAAkBpC,SAAAK,SAAAgC,aAAAC,aAC3B,IAAMC,OAASvC,eAAesC,YAA9B1S,WACM6I,WAAa2H,aACfmC,OADenC,YAEfmC,8BAFenC,6BAAnBJ,UAaA,OANAuC,8BACAA,uDAEAvS,yBAA0B0P,wCAAA,eAA1B1P,QAAmDL,OAAnDK,wBACAI,2CAEAmS,QAGSC,iBAAmB,SAAnBA,iBAAmBxC,SAAAyC,UAAA9S,OAAA+S,WAC5B,IAAMH,OAASvC,eAAerQ,OAA9BC,WACI+S,cAAJF,UAiBA,OAhBI9S,cAAgBxF,oCAAA,cAApB8L,UACI0M,cAAgBD,UAAA3E,OAAiB,SAAAzM,WAAA,WAAamR,gCAIlDF,sBAAwBI,mBAAxBJ,KACAA,uDAEAvS,yBAEI0P,wCAAA,eAFJ1P,SAGMyS,UAAFA,UAAa9S,OAAbA,OAAqBiT,gBAHzB5S,qBAMAI,2CAEAmS,QAGSM,mBAAqB,SAArBA,mBAAqBC,YAO9B,IALAA,WAAale,OAAAme,oCAAA,QAAAne,IAAbke,aACAnS,OACImS,gBAAkB3Y,oCAAA,UAAlB2Y,YAGCA,WAALzN,QACI,OAAQyN,WAARnS,MACA,KAAKxG,oCAAA,UAAL4L,QACI+M,mBAAqB3Y,oCAAA,eAArB2Y,WACA,MACJ,QACA,KAAK3Y,oCAAA,UAALiL,UACI0N,mBAAqB3Y,oCAAA,iBAArB2Y,YAKR,OAAAA,YAGSE,eAAiB,SAAjBA,eAAiBrU,QAAA,OAAUA,OAAA9G,IAAW,SAAAib,YAAA,OAAcD,mBAAdC,eAEtCG,WAAa,SAAbA,WAAaC,SAAA5X,KAAAqD,OAAApD,SACtBoD,OAASqU,eAATrU,QACApD,QAAU3G,cAAcA,iBAAkBue,6CAAA,SAA1C5X,SACA,IAAM6X,YAAcC,wCAAU9X,QAA9BK,YAEA,IAAMwX,aAAN,mBAAqBA,YACjB,MAAM,IAAAvX,MAAA,mCAA6CN,QAA7CK,WAAN,WANuD,IAAA0X,aAS3BF,iBAT2B7X,SAAAgY,cAAAnQ,eAAAkQ,aAAA,GASpDtX,OAToDuX,cAAA,GAS5CzS,cAT4CyS,cAAA,GAUrDtK,SAAWrU,OAAAya,4CAAA,aAAAza,CAAAkM,cAAAnC,OAAjB3C,QAGMwX,UAAYlE,0CAAA,QAAAtG,gBAAAC,SAAqC1N,QAAvD9G,MAMA,OALAye,sCAEAA,qBAAuBpS,sBAAwBA,iBAAxBA,aAAuDA,wBAAvDA,GAAvBoS,GACAA,wBAA2BvU,OAAA9G,IAAW,SAAA4b,GAAA,OAAKA,EAALhf,OAAtCye,OACAA,qBAAuB3X,qBAAuBpB,oCAAA,WAAvBoB,KAAyC3G,OAAAme,oCAAA,iBAAAne,CAAzC2G,MAAkEA,QAAzF2X,WACAA,UAGSQ,cAAgB,SAAhBA,cAAgB/U,OAAAxC,OAGzB,IAFA,IAAIjI,EAAJ,EAEOA,EAAIyK,OAAXnG,SAAAtE,EACI,GAAIiI,QAAUwC,UAAdlK,KACI,OACIkM,KAAMhC,mBAAqBA,UADxBgC,KAEH6B,MAAOtO,GAInB,aAISyf,uBAAyB,SAAzBA,uBAAyBC,YAClC,IAAI9T,UACAyP,iBAEJ,OADAA,UAAYqE,WAAZrE,IAEA,KAAKG,wCAAA,eAALtV,OACI0F,QAAU8T,WAAV9T,UACA,MACJ,KAAK4P,wCAAA,eAALrV,QACIyF,QAAU8T,gBAAV9T,iBACA,MACJ,KAAK4P,wCAAA,eAALpV,QACIiV,oBACAzP,QAAU8T,oCAAD,KAA2CA,WAApD9T,UACA,MACJ,QACIyP,eAGJ,OACIA,UADGA,UAEHzP,gBAIF+T,8BAAgC,SAAhCA,8BAAgCtP,UAAAoN,WAClC,IAAMmC,YAAcnC,UAApBoC,iBACIC,eAAiBzP,UAArB,GACI0P,eAAiB1P,UAArB,GAkBA,OAhBAuP,oBAAoB,SAAAF,YAChB,GAAAA,WAAA,CADgC,IAMjBM,gBAAAC,gBANiBC,sBAKFT,uBALEC,YAKxBrE,UALwB6E,sBAAA7E,UAKbzP,OALasU,sBAAAtU,OAMhC,GAAAyP,UACIyE,gBAAiBE,gBAAAF,gBAAAzE,WAAA9Y,MAAAyd,gBAAAtE,mBAAA9P,QAAAxG,SACbsG,WAAW,MAEfqU,gBAAiBE,gBAAAF,gBAAA1E,WAAA9Y,MAAA0d,gBAAAvE,mBAAA9P,QAAAxG,SACbsG,WAAW,UAKhBoU,eAAPC,iBAWEI,qBAAuB,SAAvBA,qBAAuB1C,UAAApN,WAA0D,IAAnC5E,OAAmCvC,UAAA5E,OAAA,QAAAlC,IAAA8G,UAAA,GAAAA,UAAA,MAAtBkX,aAAsBlX,UAAA5E,OAAA,QAAAlC,IAAA8G,UAAA,GAAAA,UAAA,MAC7EmX,mBAAqBD,aAA3BC,mBACMC,cAAgBF,+BAElB3C,YAAJ4C,uBAIkBC,2BAAuBA,mCAE5B7C,sCAAb8C,QAEiB9C,UAAjB+C,UACAC,QAAiB,SAAAC,OAAW,IAAAC,sBACehB,wCADfe,OAAAE,uBAAA1R,eAAAyR,sBAAA,GACnBb,eADmBc,uBAAA,GACHb,eADGa,uBAAA,GAExBT,4BAA4BL,eAA5BK,yCAIKU,oBAAsB,SAAtBA,oBAAsB9Q,OAC/B,KAAOA,eAAiBA,MAAA0L,YAAAqF,KAAuB,SAAAxgB,GAAA,OAAKA,OAASkb,wCAAA,eAAdpV,WAC3C2J,MAAQA,MAARA,QAEJ,OAAAA,OAGSgR,iBAAmB,SAAnBA,iBAAmBhR,OAC5B,KAAOA,MAAPiR,SACIjR,MAAQA,MAARA,QAEJ,OAAAA,OAGSkR,mBAAqB,SAArBA,mBAAqBlR,OAC9B,IADoD,IAAdmR,KAAchY,UAAA5E,OAAA,QAAAlC,IAAA8G,UAAA,GAAAA,UAAA,MAC7C6G,MAAPiR,SACIE,iBACAnR,MAAQA,MAARA,QAEJ,OAAAmR,MAGSlR,yBAA2B,SAA3BA,yBAA2Bb,YAAAU,WAAAsR,eAAA1V,QACpC,IAAIoQ,gBACAxL,iBACIV,qBAA4CwR,eAHqCxR,qBAG3DyR,kBAAsBD,eAHqCC,kBAInF7R,oBAAsB4R,eAA5B3R,SACM6R,4BAA8B5V,OAApC4V,4BAMIC,aAEJ,GAAInS,qBAAJ,IAA4B1D,kBACxB6V,YACIzF,kBAED,KAAA0F,MACCC,gBAAkB9gB,cAAciP,qBAApC8R,iBACA,IAAIL,oBACAI,gBAAkBA,gBAAA3H,OAAuB,SAAAvZ,GAAA,OAAKA,oBAALiP,uBAG7C,IAAMmS,iBAAmBF,gBAAA3H,OAjBZ,SAAX8H,SAAWC,OAEb,OADenW,iBAAoB,sBAC5BoO,MAAPpO,UAeyB9H,IAAqC,SAAAke,QAAA,OAAUA,cAAVhG,WAExDyE,iBAEN,QAAIc,kBAA6B,CAC7B,IAAMU,sBAAwBphB,cAAciP,qBAA5C8R,gBAEAK,8BAA8B,SAAAC,WAC1B,IAAMC,WAAaD,UAAnBtW,QACIuW,8BAAsCA,oBAAsBvW,OAA5DuW,QACIA,sBADRzS,sBAEI+Q,mBAAmByB,UAAnBzB,QACAzE,SAAWiG,sBAAAjI,OAA6B,SAAAvZ,GAAA,OAAKA,IAALyhB,YAA7Bpe,IAAuD,SAAArD,GAAA,OAAKA,SAALub,YAClEA,QAAmByF,UAAAvZ,MACf8T,SAD8BA,SAE9BoG,OAAQF,UAFsBhS,MAG9BmR,KAAMD,mBAAmBc,UAAnBd,YAOtBpF,UAAW0F,UAAAnc,OAAA7C,MAAAgf,SAAAnc,OAAAsW,mBAAAgG,mBAAAvS,eAAA0K,OAAwD,SAAAvZ,GAAA,cAAKA,IACxEghB,gBACIzF,SADWA,SAEXyE,yDAAqC7U,6BAI7C,IAAMiE,UAAYG,WAAlBE,MAEMV,WAAa3O,OAAAuP,QACfiS,kBAD6B/S,YAE7BI,yCAFJ9D,QAKM0W,iBAAmBtS,WAAzBC,aACIuR,6BAAJc,mBACI9R,UAAYgN,uBAAA8E,iBAAAtG,UACR0B,gBAAiB8D,8BAErBlB,6DAGJmB,kBAAkB,SAAAc,KACd,IAAMC,iBAAmBhF,iCAAkC+E,IAA3DvG,UACMqF,KAAOkB,IAAblB,KAEA,GAAAA,KAAU,CACN,IAAMoB,cA1HO,SAAnBC,iBAAmBlS,UAAA6Q,MACrB,IAAK,IAAIlhB,EAAJ,EAAWwiB,IAAMtB,KAAtB5c,OAAmCtE,EAAnCwiB,IAA4CxiB,IAAK,CAC7C,IAAM+P,MAAQmR,KAAdlhB,GACAqQ,UAAYsP,wCAAZtP,OAEJ,OAAAA,UAqH8BkS,kBAAmCrB,KAAzDuB,WACAL,4DAEAjC,4DACIG,cAAe8B,IAD2C9B,cAE1DD,mBAAoBgB,6BAA+Bc,sBAMtDjS,0BAA4B,SAA5BA,0BAA4BP,qBAAAE,WAAAsR,gBACrC,IAAMuB,iBAAmB/S,qBAAzB+S,iBAEA,IAAK,IAALb,UAAAa,iBAAuC,CACnC,IACMV,WADYU,iBAAlBb,QACApW,OACM8D,oBAAsB4R,sBAA5B3R,SACMmT,uBAAwBxB,iDAC1BA,2DAA4DA,eADlCA,QAE9B,GAAIa,2CAAJW,sBAA0E,CACtE,IAAMC,cAAgBZ,WAAtBnG,SACA7L,mDACIL,qBADgDA,qBAEhDyR,mBAFgD,EAGhD5R,SAAUD,qBAHdS,eASC6S,mBAAqB,SAArBA,mBAAqBlT,sBAA8C,IAAvBlE,OAAuBvC,UAAA5E,OAAA,QAAAlC,IAAA8G,UAAA,GAAAA,UAAA,MAAV6G,MAAU7G,UAAA,GACxE4Z,uBACExT,gBAAkB7D,OAAxB6D,gBACMuM,SAAWpQ,OAAjBoQ,SACMta,IAASkK,OAATlK,WAA0BkK,OAAhC+D,SAGIsT,gBADJxT,gBACsBK,qBAAlBmT,eAEkBnT,qBAAlBmT,iBAGJ,OAAIjH,gBACOiH,gBAAPvhB,KAEAuhB,sBACI/S,MADmBA,MAEnBtE;;;;;wDC7dZ,IAAM5C,UAAY/I;;AAAlB,mBAEAL,eAAiBoJ,kBAAoBA,UAApBA,QAAjBpJ;;;;;4nBCIMwU,6BAqBF,SAAAA,kBAAAhT,sJAAoB8H,CAAAC,KAAAiL,mBAChBjL,KAAA+Z,OAAA9hB,0GAdqBwK,QACrB,OAAAA,OAGO/K,cAAcuT,kBAAdvT,qBAAP+K,QAFWwI,kBAAP+O,6FAsBJ,OAAOha,KAAP+Z,mDAUA,OAAOzK,OAAOtP,KAAd+Z,sDAGa1K,KACb,OAAQA,eAADpE,qBAAwCA,qCAA/CoE,2DAGkBA,KAClB,OAAOA,qCAAyCpE,qCAAhDoE,8BAORpE,uBAAyB,IAAAA,kBAAzBA,QACAA,qBAAuB,IAAAA,kBAAvBA,MACAA,sBAAwB,IAAAA,kBAAxBA,OAOAA,wCACIgP,QAAShP,kBAD4BiP,GAErCC,IAAKlP,kBAFgCmP,IAGrCC,KAAMpP,kBAH+BqP,KAIrClhB,UAAW6R,kBAAkBiP,IAGlB1gB,oBAAA,QAAfyR;;;;;;;;;6gBC5EMsP,gBAAkB,SAAlBA,gBAAkBC,QAAAC,MAAAC,KAIpB,IAHA,IAAMC,WACF3Y,KAAJyY,MAEOzY,KAAP0Y,KACIC,mBACA3Y,cAIJ,OAFA2Y,mBAEAA,SAGEC,gBAAkB,SAAlBA,gBAAkBC,aAAA5iB,OAOpB,IANA,IAAI6iB,QAAJ,EACIC,SAAWF,oBAAf,EACIG,cACAC,aAGGH,SAAPC,UAA4B,CAIxB,GAAI9iB,QAFJgjB,MAAQJ,aADRG,OAASF,QAAUzJ,YAAY0J,SAADD,SAA9BE,KAGI/iB,OAAwBA,MAAQgjB,MAApCP,IACI,OAAAO,MACOhjB,OAASgjB,MAAbP,IACHI,QAAUE,OAAVF,EACO7iB,MAAQgjB,MAAZR,QACHM,SAAWC,OAAXD,GAIR,aAWG,SAAAG,sBAAAvT,aAAA4D,WAAA9I,QAAkE,IAC/DkY,QAA4ClY,OADmBkY,QACtDQ,UAAmC1Y,OADmB0Y,UAC3CX,QAAwB/X,OADmB+X,QAClCC,MAAehY,OADmBgY,MAC3BC,IAAQjY,OADmBiY,IAAAU,qBAEhDzT,aAFgDsF,SAAAoO,sBAAAnV,eAAAkV,qBAAA,GAE9DE,KAF8DD,sBAAA,GAExDE,KAFwDF,sBAAA,GAIrEV,UACIF,MAASA,aAAgBA,OAAUA,MAA3Ba,WAARb,MACAC,IAAOA,WAAcA,KAAQA,IAAvBa,MAAuCA,KAAvC,EAANb,IAEAS,YACIX,QAAUnJ,UAAUA,SAASqJ,IAATrJ,OAApBmJ,YAGJG,QAAUJ,8BAAVI,MAGAA,WAAJW,MACIX,sBAEAA,QAAQA,eAARA,IAAJY,MACIZ,aAAaY,KAAbZ,GAIJ,IADA,IAAME,gBACG7jB,EAAT,EAAgBA,EAAI2jB,eAApB,EAAwC3jB,IACpC6jB,mBACIJ,MAAOE,QADO3jB,GAEd0jB,IAAKC,QAAQ3jB,EAAR2jB,KAIb,IAAM5S,cAYN,OAXAjC,yFAA+B,SAAA9O,GAC3B,IAAMqL,MAAQsF,+BAAd3Q,GACA,GAAIqL,iBAAiBmN,kDAAA,QACjBzH,2BADJ,CAKA,IAAMkT,MAAQL,6BAAdvY,OACA0F,gBAAmBkT,MAAnBlT,UAAkCkT,MAAlClT,SAGKA,WAAFA,WAAcC,KAArB2S;;;;;;;;;4BC9BG,IAAMzQ,OAAS,SAATA,SAAS,QAAAjK,KAAAC,UAAA5E,OAAI6E,KAAJC,MAAAH,MAAAI,KAAA,EAAAA,KAAAJ,KAAAI,OAAIF,KAAJE,MAAAH,UAAAG,MAAA,OAAa,SAAAmb,IAAA,OAAMA,mBAANrb,QAgCtBgK,QAAU,SAAVA,UAAU,QAAAsR,MAAAvb,UAAA5E,OAAI6E,KAAJC,MAAAqb,OAAAC,MAAA,EAAAA,MAAAD,MAAAC,QAAIvb,KAAJub,OAAAxb,UAAAwb,OAAA,OAAa,SAAAF,IAAA,OAAMA,oBAANrb,QA2DvB8J,IAAM,SAANA,MAAM,QAAA0R,MAAAzb,UAAA5E,OAAI6E,KAAJC,MAAAub,OAAAC,MAAA,EAAAA,MAAAD,MAAAC,QAAIzb,KAAJyb,OAAA1b,UAAA0b,OAAA,OAAa,SAAAJ,IAAA,OAAMA,gBAANrb,QA6BnBiK,QAAU,SAAVA,UAAU,QAAAyR,MAAA3b,UAAA5E,OAAI6E,KAAJC,MAAAyb,OAAAC,MAAA,EAAAA,MAAAD,MAAAC,QAAI3b,KAAJ2b,OAAA5b,UAAA4b,OAAA,OAAa,SAAAN,IAAA,OAAMA,oBAANrb,QAoCvB6J,QAAU,SAAVA,UAAU,QAAA+R,MAAA7b,UAAA5E,OAAI0gB,WAAJ5b,MAAA2b,OAAAE,MAAA,EAAAA,MAAAF,MAAAE,QAAID,WAAJC,OAAA/b,UAAA+b,OAAA,OACnB,SAAAT,IAAsC,IAAjC/Y,OAAiCvC,UAAA5E,OAAA,QAAAlC,IAAA8G,UAAA,GAAAA,UAAA,IAAtBwC,WAAF,GACNwZ,UAAJV,GACIW,kBACEvF,eAyBN,OAvBAoF,mBAAmB,SAAA3J,WACf6J,UAAY7J,UAAZ6J,WACAtF,kMAAoBsF,UAApBtF,cACAuF,aACIA,wBAIJA,YAAcA,aAAlBD,WACIC,qBAGJrZ,yEAA6BsZ,wCAAA,eAA7BtZ,0BAEAoZ,iCACAhZ,qFAEIT,OAAJC,UACIwZ,wBAEAA,0BAGJA;;;;;gGCpPRplB,oBAAAgB,EAAA0B,qBAAA1C,oBAAAQ,EAAAkC,oBAAA,iCAAA8Q,eAAA,IAAAf,wCAAAzS;;AAAA,sBAAA8U,oCAAA9U;;AAAA,wBAAAulB,gDAAAvlB;;AAAA,uCAAAwlB,mDAAAxlB;;AAAA,0CAAA0b,wCAAA1b;;AAAA,4BAAAylB,qCAAAzlB;;AAAA,mBAWA,SAAA0lB,kBAA6B,SAYtB,SAAAlS,aAAAmS,IAAAC,IAAA/D,UAAgG,IAArDgE,oBAAqDzc,UAAA5E,OAAA,QAAAlC,IAAA8G,UAAA,IAAAA,UAAA,GAAxB0c,SAAwB1c,UAAA5E,OAAA,QAAAlC,IAAA8G,UAAA,GAAAA,UAAA,GAAbsS,wCAAA,MAAMhV,MACtFiE,UACArD,QACAye,mBAAqBlE,UAA3B6D,gBACMM,cAAgBL,IAAtB/Y,gBACMqZ,cAAgBL,IAAtBhZ,gBACMsZ,kBAAoBF,cAA1BvlB,KACM0lB,kBAAoBF,cAA1BxlB,KACMA,KAAUulB,cAAVvlB,SAAgCwlB,cAAtCxlB,KACM2lB,iBAAmBxlB,OAAA2kB,gDAAA,gBAAA3kB,CAAAolB,cAAzBC,eAEA,GAAIC,oBAAJC,kBACI,MAAM,IAAAte,MAAN,8CA+EJ,OA5EAme,6BAA6B,SAAA7d,OACzB,IAAMke,UAAYzlB,OAAAkU,oCAAA,QAAAlU,IAAYuH,MAA9BwC,WACIyb,6BAAyBC,UAAzBD,OAAJP,sBACIQ,eAAoBL,cAApBK,SAA0CA,UAA1CA,MAEJ1b,yBAEJsb,6BAA6B,SAAA9d,OACzB,IAAMke,UAAYzlB,OAAAkU,oCAAA,QAAAlU,IAAYuH,MAA9BwC,WACA,IAAIyb,yBAAyBC,UAAzBD,MACAP,sBACIQ,eAAoBJ,cAApBI,SAA0CA,UAA1CA,KACA1b,wBAGJA,yBAKRqE,8EAAmB2W,IAAnB3W,YAAoC,SAAA9O,GAChC,IAAIomB,UAAJ,EACIC,mBACJvX,8EAAmB4W,IAAnB5W,YAAoC,SAAAwX,IAChC,IAAMC,SACAC,WACNA,8BACAA,8BACAV,6BAA6B,SAAA7d,OACzBse,WAAWte,wBAAXse,IACAC,2BAA2Bve,MAA3Bue,QAA2Cve,wBAA3Cue,KAEJT,6BAA6B,SAAA9d,QACnBie,6BAAyBje,eAAzBie,OAANP,qBACIY,WAAWte,wBAAXse,KAEJC,2BAA2Bve,MAA3Bue,QAA2Cve,wBAA3Cue,MAGJ,IAIMC,UAAY/lB,OAAA6kB,qCAAA,gBAAA7kB,CAAgB8lB,QAAlCR,oBACMU,UAAYhmB,OAAA6kB,qCAAA,gBAAA7kB,CAAgB8lB,QAAlCP,oBACA,GAAIJ,uCALiB,SAAjBc,iBAAiB,OAAMlB,IAAN7W,gBACA,SAAjBgY,iBAAiB,OAAMlB,IAAN9W,oBAIsE,CACvF,IAAMiY,YACNN,cAAc,SAAAO,QAAAC,KACVF,SAASpc,YAAToc,gBAEAT,UAAY5K,wCAAA,MAAAhV,QAAhBof,SACIxe,4BAGAA,oBACAgf,YACAC,oBAED,IAAKT,WAAapK,wCAAA,MAAboK,WAAgCA,WAAapK,wCAAA,MAA9C9U,cAAJ0f,SAAkF,CACrF,IAAMS,aACFrE,IAAMsD,4BAAV,EACAS,cAAc,SAAAO,QAAAC,KAENF,UAASpc,YAAToc,MADAE,KAAJvE,IACIqE,QAGAA,OAGRT,YACAC,cACAjf,0BAKL,IAAImL,wCAAA,QAAJnL,KAAAqD,QAA8BlK,KAArCA;;;;;;;;;;;;;;;sLCpGJ,SAAAymB,UAAAC,SAAAC,SAAA5Y,OACI,IAAI6Y,eACJ,OAAAF,UACA,KAAKhhB,oCAAA,eAALqM,WACA,KAAKrM,oCAAA,iBAAL0L,SAEQwV,QADJ,SAAID,SACU,SAAAC,QAAArN,EAAAC,GAAA,OAAUA,SAAWD,EAArBxL,QAEA,SAAA6Y,QAAArN,EAAAC,GAAA,OAAUD,SAAWC,EAArBzL,QAEd,MACJ,QACI6Y,QAAU,SAAAA,QAAArN,EAAAC,GACN,IAAMqN,MAAQtN,EAAdxL,OACM+Y,MAAQtN,EAAdzL,OACA,OAAI8Y,GAAJC,GACWH,qBAAP,EAEAE,GAAJC,GACWH,qBAAP,EAEJ,GAGR,OAAAC,QAUJ,SAAAG,UAAAlgB,KAAAmG,YACI,IAAMga,QAAU,IAAhBC,IACMC,eAYN,OAVArgB,aAAa,SAAAiE,OACT,IAAMqc,SAAWrc,MAAjBkC,YACIga,YAAJG,UACID,YAAYF,YAAZE,2BAEAA,kBAAiBC,UAAjBD,SACAF,qBAAsBE,mBAAtBF,MAIRE,YAYJ,SAAAE,mBAAAC,aAAAC,aAAAC,oBACI,IAAMC,KACFC,MAAOJ,iBAQX,OALAC,oBAAoB,SAAA9c,IAAAC,KAAAC,KAEhB,OADAF,UAAY6c,aAAA,GAAAjkB,IAAoB,SAAA0H,OAAA,OAASA,MAAMyc,wBAAfxZ,SAChCvD,KAFJ8c,KAKAE,IA0EG,SAAAE,YAAApT,WAAAN,WAAAuG,cAAA3O,eAAA9E,SACH,IAMM6gB,QACFzd,UACArD,QACAsD,SAEEF,QAPNnD,QAAU3G,kBAHN8J,QADe,EAEfD,YAAY,GAEhBlD,UAOAmD,OACM2d,WAAahc,gBAAkBA,sBAArC,EAEMic,cAiDN,GA/CgBtN,oBAAhB,KAEAuN,QAAgB,SAAAC,SACZ,IAAK,IAAItoB,EAAT,EAAgBA,EAAI6U,WAApBvQ,OAAuCtE,GAAvC,EACI,GAAI6U,uBAAJyT,QAAsC,CAClCF,gBAAgBvT,WAAhBuT,IACA,SAMZA,mBAAmB,SAAAngB,OAEfigB,mBAAmBjgB,MAAnBigB,YAGJ1d,QACI0d,oBACI3nB,KADe,MAEfkM,KAAM,eAIdqC,yFAA+B,SAAA9O,GAC3BkoB,qBACA,IAAMK,UAAYL,mBAAlB,EAEAE,mBAAmB,SAAAngB,MAAAqe,IACf4B,uBAAuB5B,GAF3B,GAEyCre,wBAArCigB,KAEJ1d,SACI0d,uBAAuBE,WAAvBF,WAGJA,oBAIAC,YAAkBD,iCAItBC,YA7HJ,SAAAK,SAAA9K,QAAAvR,gBAOI,IAPuC,IAC/B/E,KAAiBsW,QADctW,KACzBqD,OAAWiT,QADcjT,OAEnC2C,iBACAqb,gBACAC,gBACA1oB,EAAImM,sBAAR,EAEOnM,GAAP,EAAeA,IACXoN,UAAYjB,kBAAZiB,GACAqb,SAAWtc,kBAAXsc,IACAC,SAAWhoB,OAAAioB,qCAAA,cAAAjoB,CAAA+J,OAAXie,cAOIhoB,OAAAiS,oCAAA,WAAAjS,CAAJ+nB,UAEIG,gEAAgB,SAAA9O,EAAAC,GAAA,OAAU0O,SAAS3O,EAAE4O,SAAXD,OAA4B1O,EAAE2O,SAAxCpa,UACT5N,OAAAiS,oCAAA,QAAAjS,CAAJ+nB,UAAuB,WAC1B,IAAMhB,YAAcH,eAAgBoB,SAApCpa,OACMua,UAAYJ,SAASA,gBAA3B,GACMZ,aAAeY,iBAAkBA,gBAAvC,GACMX,mBAAqBD,aAAAlkB,IAAiB,SAAAQ,GAAA,OAAKzD,OAAAioB,qCAAA,cAAAjoB,CAAA+J,OAALtG,KAE5CsjB,oBAAoB,SAAAG,cAChBA,kBAAkBD,6CAAlBC,uBAGJgB,uEAAuB,SAAA9O,EAAAC,GACnB,IAAM3Z,EAAI0Z,EAAV,GACMrY,EAAIsY,EAAV,GACA,OAAO8O,YAAPpnB,KAIJ2F,cACAqgB,oBAAoB,SAAApc,OAChBjE,wCAAaiE,MAAbjE,OAnBsB,IAsB1BqhB,SAAWnQ,+CAAXmQ,MACAG,gEAAgB5B,UAAU0B,SAAV1B,cAAmC0B,SAAnDE,UAIRlL,gBACAtW,aAAa,SAAAnG,OACTyc,kBAAkBzc,MAAlByc,SA6EA8K,wBAGAnhB,QAAJkD,WAAwB,CACpB,IAAMue,QAAU1f,MAAA7G,WAAAH,EAAAsZ,mBAAStS,MAAM8e,cAAf5jB,UAAAX,IAA0C,sBAC1DukB,oBAAoB,SAAA3B,OAChBA,cAAc,SAAAnf,KAAApH,GACV8oB,0BAGRZ,oBAGJ,OAAAA;;;;;8FCxOJpoB,oBAAAgB,EAAA0B,qBAAA1C,oBAAAQ,EAAAkC,oBAAA,+BAAA+Q,aAAA,IAAAhB,wCAAAzS;;AAAA,sBAAA8U,oCAAA9U;;AAAA,wBAAAipB,mDAAAjpB;;AAAA,0CAAAkpB,2CAAAlpB;;AAAA,yBAcO,SAAAyT,WAAAkS,IAAAC,KACH,IAAMuD,aACAxe,UACAye,iBACA9hB,QACA0e,cAAgBL,IAAtB/Y,gBACMqZ,cAAgBL,IAAtBhZ,gBACMyc,sBAAwBrD,cAA9BlV,YACMwY,sBAAwBrD,cAA9BnV,YACMrQ,KAAUulB,cAAVvlB,eAAsCwlB,cAA5CxlB,KAGA,IAAKG,OAAAsoB,2CAAA,WAAAtoB,CAAW+kB,8BAAXxb,OAAiDyb,8BAAtDzb,QACI,YAiBJ,SAAAof,kBAAA7E,GAAA5T,UAAA0Y,SACIxa,8EAAmB0V,GAAnB1V,YAAmC,SAAA9O,GAC/B,IAAMumB,SACFgD,SAAJ,GACAL,sBAAsB,SAAAM,YAClB,IAAMvoB,MAAQ2P,wCAAd5Q,GACAupB,oBACAhD,0BAEC0C,UAALM,YACID,SAAeliB,iBACf6hB,0BASZ,OAjCCxD,yBAAD,KAAAvQ,QAAwC,SAAA9H,WACpC,IAAMnF,MAAQkhB,sBAAd/b,WACA3C,YAAY/J,OAAAkU,oCAAA,QAAAlU,IAAYuH,MAAxBwC,WACAye,mBAAmBjhB,eAAnBihB,QA2BJG,gDACAA,gDAEO,IAAI9W,wCAAA,QAAJnL,KAAAqD,QAA8BlK,KAArCA;;;;;mGCxDG,SAAAkpB,gBAAAC,IAAAC,KACH,IAAMC,UACAC,UASN,OARAH,mBAAmB,SAAAzhB,OACf4hB,YAAY5hB,eAAZ4hB,QAEJF,mBAAmB,SAAA1hB,QACf,IAAI4hB,eAAe5hB,eAAf4hB,OACAD,YAAY3hB,eAAZ2hB,QAGRA,OAnBJ9pB,oBAAAgB,EAAA0B,qBAAA1C,oBAAAQ,EAAAkC,oBAAA,oCAAAinB;;;;;;;;;8LCIA,SAAAK,kBAAAliB,KACI,OAAOA,IAAAiS,OAAW,SAAAtR,MAAA,QAAUA,gBAAgBiQ,kDAAA,WAShD,SAAAuR,IAAAniB,KACI,GAAIlH,OAAAsH,oCAAA,QAAAtH,CAAAkH,QAAkBA,iBAAtBwB,OAAgD,CAC5C,IAAM4gB,eAAiBF,kBAAvBliB,KAIA,OAHiBoiB,eAAA1lB,OACG0lB,eAAAlf,OAAsB,SAAAC,IAAAkf,MAAA,OAAelf,IAAfkf,MADzB,GAEKzR,kDAAA,QAFtB8K,KAKJ,OAAO9K,kDAAA,QAAP8K,KAUJ,SAAA4G,IAAAtiB,KACI,GAAIlH,OAAAsH,oCAAA,QAAAtH,CAAAkH,QAAkBA,iBAAtBwB,OAAgD,CAC5C,IAAM+gB,SAAWJ,IAAjBniB,KACM4a,IAAM5a,YAAZ,EACA,OAAQyO,wBAA0B8T,oBAAoB3R,kDAAA,QAC7CA,kDAAA,QADF8K,KAC2B6G,SADlC3H,IAGJ,OAAOhK,kDAAA,QAAP8K,KAgGJ,IAAM8G,QACFL,IADWA,IAEXG,IAFWA,IAGX9T,IAzFJ,SAAAA,IAAAxO,KACI,GAAIlH,OAAAsH,oCAAA,QAAAtH,CAAAkH,QAAkBA,iBAAtBwB,OAAgD,CAE5C,IAAMihB,eAAiBP,kBAAvBliB,KAEA,OAAQyiB,eAAD/lB,OAA0B+V,uCAA1BgQ,iBAAwD7R,kDAAA,QAA/D8K,KAEJ,OAAO9K,kDAAA,QAAP8K,MAmFA/M,IAzEJ,SAAAA,IAAA3O,KACI,GAAIlH,OAAAsH,oCAAA,QAAAtH,CAAAkH,QAAkBA,iBAAtBwB,OAAgD,CAE5C,IAAMihB,eAAiBP,kBAAvBliB,KAEA,OAAQyiB,eAAD/lB,OAA0B+V,uCAA1BgQ,iBAAwD7R,kDAAA,QAA/D8K,KAEJ,OAAO9K,kDAAA,QAAP8K,MAmEAgH,MAzDJ,SAAAA,MAAA1iB,KACI,OAAOA,IAAP,IAyDA2iB,KA/CJ,SAAAA,KAAA3iB,KACI,OAAOA,IAAIA,WAAX,IA+CA4iB,MArCJ,SAAAA,MAAA5iB,KACI,OAAIlH,OAAAsH,oCAAA,QAAAtH,CAAJkH,KACWA,IAAPtD,OAEGkU,kDAAA,QAAP8K,MAkCAmH,IAbJ,SAAAA,IAAA7iB,KACI,OAAOyS,UAbX,SAAAqQ,SAAA9iB,KACI,IAAI+iB,KAAOT,IAAXtiB,KACA,OAAOsiB,IAAItiB,IAAAjE,IAAQ,SAAAinB,KAAA,OAAAvQ,KAAAwQ,IAAQD,IAARD,KAAA,MAWFD,CAAjB9iB,QAeEkjB,mBAAN;;;;;;;;;;;;;;;;;qgBCpIA,SAAAC,YAAAtN,UAAA1I,UACI,IAAM6U,UAEAoB,WADavN,UAAnB/Q,gBACA4I,eAYA,OAVA5U,mCAAmC,SAAAoI,MAAW,IAATvH,IAAS2N,eAAApG,KAAA,MACtCiM,UAAYA,SAAhBzQ,QACI,IAAIyQ,uBACA6U,iBAGJA,mBAIRA,OAUJ,SAAAqB,cAAAxN,WAAkD,IAAfjS,SAAetC,UAAA5E,OAAA,QAAAlC,IAAA8G,UAAA,GAAAA,UAAA,MACxCgf,UAEAgD,SADazN,UAAnB/Q,gBACAyI,aACMgW,WAAaC,kDAAA,QAAnBpf,iBAcA,OAZAtL,8BAA8B,SAAA2qB,aAC1B,iBAAW7f,SAAP6f,eACA7f,sBAAwB0f,sBAAxB1f,YAEJ,IAAM8f,UAAYF,kDAAA,QAAAG,QAAqB/f,SAAvC6f,cACAC,UACIpD,+BAEAA,+BACA1c,sBAAwBggB,gDAAA,sBAGhCtD,OAYJ,SAAA9U,QAAAqK,UAAA1I,SAAAvJ,SAAAigB,mBACI,IAAMC,UAAYX,sBAAlBhW,UACM4W,WAAaV,wBAAnBzf,UACMqJ,WAAa4I,UAAnB/Q,gBACMkf,cAAgB/W,WAAtBjE,YACMib,OAAShX,WAAftU,KACMurB,gBACAC,cACAthB,UACA8c,WACAngB,QACFyE,oBAGJnL,sCAAsC,SAAA6gB,OAAkB,IAAAyK,MAAA9c,eAAAqS,MAAA,GAAhBhgB,IAAgByqB,MAAA,GAAX/qB,MAAW+qB,MAAA,GACpD,IAAIN,4BAAiCC,WAArCpqB,KAGI,OAFAkJ,YAAY/J,OAAAsH,oCAAA,QAAAtH,IAAYO,MAAxBwJ,WAEQxJ,eAARwL,MACA,KAAKwf,oCAAA,UAALpa,QACIka,qBACA,MACJ,QACA,KAAKE,oCAAA,UAAL/a,UACI4a,0BAKZ,IAAII,SAAJ,EACApd,8EAAmB2O,UAAnB3O,YAA0C,SAAA9O,GACtC,IAAI+V,KAAJ,GACA+V,qBAAqB,SAAAvM,GACjBxJ,KAAUA,KAAVA,IAAkB6V,mCAAlB7V,UAEJ3T,IAAImlB,eACAA,uBACAngB,cACA0kB,qBAAqB,SAAAvM,GACjBnY,kBAAoBwkB,mCAApBxkB,KAEJ2kB,mBAAmB,SAAAxM,GACfnY,mBAAqBwkB,mCAArBxkB,MAEJ8kB,aAEAH,mBAAmB,SAAAxM,GACfnY,KAAKmgB,QAALngB,eAA4BwkB,mCAA5BxkB,QAMZ,IAAIsH,eACAC,cAAgB,SAAhBA,gBAAgB,OAAM8O,UAAN7O,gBAcpB,OAbAxH,aAAa,SAAAxC,KACT,IAAM2hB,MAAN3hB,IACAmnB,mBAAmB,SAAAxM,GACfgH,SAAWoF,cAAc/mB,IAAd+mB,iBAAXpF,iBAGRkF,mBACIA,0CACA5f,gCAGAA,aAAe,IAAIsgB,qCAAA,QAAJ/kB,KAAAqD,QAA8BlK,KAA7CsL,SAEJA;;;;;yFCzIJ/L,oBAAAgB,EAAA0B,qBAAA,IAAA4pB,6CAAAtsB;;AAAA,oCAAAA,oBAAAQ,EAAAkC,oBAAA,0CAAA4pB,6CAAA,4BAAAC,sCAAAvsB;;AAAA,6BAAAA,oBAAAQ,EAAAkC,oBAAA,4BAAA6pB,sCAAA,UAAAvsB,oBAAAQ,EAAAkC,oBAAA,wBAAA6pB,sCAAA,MAAAvsB,oBAAAQ,EAAAkC,oBAAA,2BAAA6pB,sCAAA,SAAAvsB,oBAAAQ,EAAAkC,oBAAA,4BAAA6pB,sCAAA,UAAAvsB,oBAAAQ,EAAAkC,oBAAA,4BAAA6pB,sCAAA,cAAAC,6CAAAxsB;;AAAA,oCAAAA,oBAAAQ,EAAAkC,oBAAA,sCAAA8pB,6CAAA,oBAAAxsB,oBAAAQ,EAAAkC,oBAAA,yBAAA8pB,6CAAA,WAAAC,4CAAAzsB;;AAAA,mCAAAA,oBAAAQ,EAAAkC,oBAAA,iCAAA+pB,4CAAA,mBAAAC,2CAAA1sB;;AAAA,kCAAAA,oBAAAQ,EAAAkC,oBAAA,gCAAAgqB,2CAAA,kBAAAC,yCAAA3sB;;AAAA,gCAAAA,oBAAAQ,EAAAkC,oBAAA,+BAAAiqB,yCAAA,iBAAAC,gDAAA5sB;;AAAA,uCAAAA,oBAAAQ,EAAAkC,oBAAA,oCAAAkqB,gDAAA,sBAAAC,gDAAA7sB;;AAAA,uCAAAA,oBAAAQ,EAAAkC,oBAAA,+BAAAmqB,gDAAA,aAAA7sB,oBAAAQ,EAAAkC,oBAAA,2BAAAmqB,gDAAA,aAAAC,uCAAA9sB;;AAAA,8BAAAA,oBAAAQ,EAAAkC,oBAAA,4BAAAoqB,uCAAA,UAAA9sB,oBAAAQ,EAAAkC,oBAAA,gCAAAoqB,uCAAA,cAAA9sB,oBAAAQ,EAAAkC,oBAAA,kCAAAoqB,uCAAA,oBAAAC,yCAAA/sB;;AAAA,gCAAAA,oBAAAQ,EAAAkC,oBAAA,8BAAAqqB,yCAAA,gBAAAC,4DAAAhtB;;AAAA,kDAAAA,oBAAAQ,EAAAkC,oBAAA,sCAAAsqB,4DAAA,wBAAAC,4CAAAjtB;;AAAA,kCAAAA,oBAAAQ,EAAAkC,oBAAA,gCAAAuqB,4CAAA,kBAAAC,0CAAAltB;;AAAA,gCAAAA,oBAAAQ,EAAAkC,oBAAA,kCAAAwqB,0CAAA,gBAAAltB,oBAAAQ,EAAAkC,oBAAA,mCAAAwqB,0CAAA,iBAAAltB,oBAAAQ,EAAAkC,oBAAA,kCAAAwqB,0CAAA,oBAAAC,oDAAAntB;;AAAA,0CAAAA,oBAAAQ,EAAAkC,oBAAA,uCAAAyqB,oDAAA,yBAAAC,qCAAAptB;;AAAA,2BAAAA,oBAAAQ,EAAAkC,oBAAA,0BAAA0qB,qCAAA;;;;;6FCOA,SAAAC,UAAArT,EAAAC,GACI,IAAMqN,MAANtN,EACMuN,MAANtN,EACA,OAAIqN,GAAJC,IACI,EAEAD,GAAJC,GACI,EAEJ,EAqEG,SAAAuB,UAAAhhB,KAA6C,IAApBwlB,OAAoBlkB,UAAA5E,OAAA,QAAAlC,IAAA8G,UAAA,GAAAA,UAAA,GAAXikB,UAIrC,OAHIvlB,WAAJ,GArBJ,SAAAqC,KAAArC,IAAAylB,GAAAC,GAAAF,QACI,GAAIE,KAAJD,GAAiB,OAAAzlB,IAEjB,IAAM2lB,IAAMF,GAAKhT,YAAYiT,GAADD,IAA5B,GAKA,OAJApjB,wBACAA,SAAUsjB,IAAVtjB,aAzCJ,SAAAujB,MAAA5lB,IAAAylB,GAAAE,IAAAD,GAAAF,QAGI,IAFA,IAAMK,QAAN7lB,IACM8lB,UACG1tB,EAATqtB,GAAiBrtB,GAAjBstB,GAA0BttB,GAA1B,EACI0tB,UAAYD,QAAZC,GAKJ,IAHA,IAAI5T,EAAJuT,GACItT,EAAIwT,IAAR,EAESvtB,GAATqtB,GAAiBrtB,IAAjBstB,GAA0BttB,IAA1B,EACQ8Z,EAAJyT,KACIE,YAAaC,OAAbD,GACA1T,MACOA,EAAJuT,IACHG,YAAaC,OAAbD,GACA3T,MACOsT,OAAOM,OAAPN,GAAkBM,OAAlBN,KAAJ,GACHK,YAAaC,OAAbD,GACA3T,OAEA2T,YAAaC,OAAbD,GACA1T,MAqBRyT,uBAEA5lB,IAcIqC,OAAarC,WAAbqC,UAEJrC,IAzFJ9H,oBAAAgB,EAAA0B,qBAAA1C,oBAAAQ,EAAAkC,oBAAA,8BAAAomB;;;;;6GCAA9oB,oBAAAgB,EAAA0B,qBAAA1C,oBAAAQ,EAAAkC,oBAAA,sCAAAmrB,oBAAA,IAAAC,gDAAA9tB;;AAAA,uCAWO,SAAA6tB,kBAAAlI,IAAAC,KACH,IAAMI,cAAgBL,IAAtB/Y,gBACMqZ,cAAgBL,IAAtBhZ,gBAGMmhB,gBAAkBntB,OAAAktB,gDAAA,gBAAAltB,CAAAolB,cAAxBC,eAEA,OAAO,SAAAU,UAAAC,WACH,IAAIoH,aAAJ,EASA,OARAD,wBAAwB,SAAAzgB,WAGhB0gB,cAFArH,6BACAC,qBADAD,QAAJqH,eAOJA;;;;;+FC5BRhuB,oBAAAgB,EAAA0B,qBAAA1C,oBAAAQ,EAAAkC,oBAAA,gCAAAgR,cAAA,IAAAua,4CAAAjuB;;AAAA,mCAAAkuB,2DAAAluB;;AAAA,kDAGO,SAAA0T,YAAAya,WAAAC,YACH,OAAOxtB,OAAAqtB,4CAAA,aAAArtB,CAAAutB,WAAAC,WAAqCxtB,OAAAstB,2DAAA,kBAAAttB,CAAAutB,WAArCC,aAAP;;;;;6FCJJpuB,oBAAAgB,EAAA0B,qBAAA1C,oBAAAQ,EAAAkC,oBAAA,kCAAAiR,gBAAA3T,oBAAAQ,EAAAkC,oBAAA,mCAAAkR,iBAAA5T,oBAAAQ,EAAAkC,oBAAA,kCAAAmR,gBAAA,IAAAoa,4CAAAjuB;;AAAA,mCAAAslB,wCAAAtlB;;AAAA,4BAAAquB,oCAAAruB;;AAAA,2BAKO,SAAA2T,cAAAwa,WAAAC,WAAAvM,UACH,OAAOjhB,OAAAqtB,4CAAA,aAAArtB,CAAAutB,WAAAC,WAAAvM,UAAA,EAAsDyD,wCAAA,MAA7D3e,WAGG,SAAAiN,eAAAua,WAAAC,WAAAvM,UACH,OAAOjhB,OAAAqtB,4CAAA,aAAArtB,CAAAwtB,WAAAD,WAAAtM,UAAA,EAAsDyD,wCAAA,MAA7D1e,YAGG,SAAAiN,cAAAsa,WAAAC,WAAAvM,UACH,OAAOjhB,OAAAytB,oCAAA,MAAAztB,CAAM+S,oCAANkO,UAAuDjO,qCAA9DiO;;;;;iGCdJ7hB,oBAAAgB,EAAA0B,qBAAA1C,oBAAAQ,EAAAkC,oBAAA,sCAAA6Q,oBAAAvT,oBAAAQ,EAAAkC,oBAAA,yBAAAyH,OAOO,IAAMoJ,kBAAoB,SAApBA,oBAAoB,QAAApK,KAAAC,UAAA5E,OAAI6E,KAAJC,MAAAH,MAAAI,KAAA,EAAAA,KAAAJ,KAAAI,OAAIF,KAAJE,MAAAH,UAAAG,MAAA,OAAa,SAAAmb,IAAA,OAAMA,8BAANrb,QASjCc,KAAO,SAAPA,OAAO,QAAAwa,MAAAvb,UAAA5E,OAAI6E,KAAJC,MAAAqb,OAAAC,MAAA,EAAAA,MAAAD,MAAAC,QAAIvb,KAAJub,OAAAxb,UAAAwb,OAAA,OAAa,SAAAF,IAAA,OAAMA,iBAANrb;;;;;sGCT1B,SAAA2F,mBAAAyF,WAAAnE,UACCmE,kBAAJ,GACuBA,iBAAnB,KACA6Z,QAAmB,SAAAC,SACf,IAAMC,WAAaD,cAAnB,KACM5K,OAAU6K,WAAhB,GACM5K,MAAQ4K,eAAiBA,WAA/B,IACA,GAAI5K,KAAJD,MACI,IAAK,IAAIzjB,EAATyjB,MAAoBzjB,GAApB0jB,IAA8B1jB,GAA9B,EACIoQ,cAhBpBtQ,oBAAAgB,EAAA0B,qBAAA1C,oBAAAQ,EAAAkC,oBAAA,uCAAAsM;;;;;yFCAAhP,oBAAAgB,EAAA0B,qBAAA1C,oBAAAQ,EAAAkC,oBAAA,0BAAAoR,QAAA,IAAA2a,qCAAAzuB;;AAAA,mBAAA8U,oCAAA9U;;AAAA,wBAAAipB,mDAAAjpB;;AAAA,0CAAAkpB,2CAAAlpB;;AAAA,yBAWO,SAAA8T,MAAA6R,IAAAC,KACH,IAAMuD,aACAxe,UACAye,iBACA9hB,QACA0e,cAAgBL,IAAtB/Y,gBACMqZ,cAAgBL,IAAtBhZ,gBACMyc,sBAAwBrD,cAA9BlV,YACMwY,sBAAwBrD,cAA9BnV,YACMrQ,KAAUulB,cAAVvlB,eAAsCwlB,cAA5CxlB,KAGA,IAAKG,OAAAsoB,2CAAA,WAAAtoB,CAAW+kB,8BAAXxb,OAAiDyb,8BAAtDzb,QACI,YAgBJ,SAAAof,kBAAA7E,GAAA5T,WACI9B,8EAAmB0V,GAAnB1V,YAAmC,SAAA9O,GAC/B,IAAMumB,SACFgD,SAAJ,GACAL,sBAAsB,SAAAM,YAClB,IAAMvoB,MAAQ2P,wCAAd5Q,GACAupB,oBACAhD,0BAEC0C,UAALM,YACIniB,iBACA6hB,0BASZ,OAhCCxD,yBAAD,KAAAvQ,QAAwC,SAAA9H,WACpC,IAAMnF,MAAQkhB,sBAAd/b,WACA3C,YAAY/J,OAAAkU,oCAAA,QAAAlU,IAAYuH,MAAxBwC,WACAye,mBAAmBjhB,eAAnBihB,QA0BJG,6CACAA,6CAEO,IAAIkF,qCAAA,QAAJnnB,KAAAqD,QAA8BlK,KAArCA;;;;;;;;;;;;;2gBC5CEiuB,oBAYF,SAAAA,0JAAwBzlB,CAAAC,KAAAwlB,UACpB,IAAIC,cAEJzlB,KAAAgY,QAAA,KACAhY,KAAAyS,eACAzS,KAAAiT,uBACAjT,KAAAwX,aANoB,QAAAvX,KAAAC,UAAA5E,OAARsH,OAAQxC,MAAAH,MAAAI,KAAA,EAAAA,KAAAJ,KAAAI,OAARuC,OAAQvC,MAAAH,UAAAG,MAQhBuC,oBAAyB6iB,OAAS7iB,OAAV,cAA5B4iB,UAEIxlB,KAAAsB,eAAsBmkB,OAAtBnkB,eACAtB,KAAAqB,YAAmBokB,OAAnBpkB,YACArB,KAAA0lB,YAAmBD,OAAnBC,YACA1lB,KAAAgY,QAAAyN,OACAzlB,KAAAsE,mBAA0BtE,KAAAgY,QAA1B1T,mBACAtE,KAAA2lB,gBAAuBjuB,OAAAkU,oCAAA,YAAAlU,GACvBsI,KAAA0E,wBAAAC,0BAEAoR,gDAAUA,cAAVA,sBACA/V,KAAA2lB,gBAAuB3lB,KAAAsE,mBAAvB/M,KACAyI,KAAA0E,wBAAAC,wBACA3E,KAAA4G,uBACI6R,kBACAiB,gGA0BR,OAAO1Z,KAAA0D,gBAAAlE,OAAA7E,IAAgC,SAAArD,GAAA,OAAKA,EAALmK,qDAYvC,OAAOzB,KAAP2lB,sEAIA,OAAO3lB,KAAP4lB,kFAMA,OAFA5lB,KAAA4lB,YAAmBluB,OAAAmuB,qCAAA,aAAAnuB,EAAcsI,KAADqB,YAAmBrB,KAAhCsB,gBACdtB,KADckB,uBACelB,KADlC2lB,iBAEA3lB,yEAIA,OAAOA,KAAPsE,qDAiCEwhB,SAAUnN,UACZ,OAAOjhB,OAAA0J,uCAAA,aAAA1J,CAAAsI,KAAA8lB,SAAPnN,0DAuBSmN,UACT,OAAOpuB,OAAA0J,uCAAA,aAAA1J,CAAAsI,KAAA8lB,SAA6BpuB,OAAA0J,uCAAA,kBAAA1J,CAAAsI,KAA7B8lB,WAAP,uCAqBGC,WACH,OAAOruB,OAAA0J,uCAAA,MAAA1J,CAAAsI,KAAP+lB,yDAoBQC,gBACR,OAAOtuB,OAAA0J,uCAAA,WAAA1J,CAAAsI,KAAPgmB,sDAkDI7S,SAAU1Q,QACd,IAAMwjB,WACF9tB,KAAM8E,oCAAA,cADQ6L,OAEdpG,WAAW,GAIT0S,aAAgB1S,WAFtBD,OAAS/K,2BAAT+K,SAEAC,WACIwjB,WAEAzjB,cAAgBxF,oCAAA,cAApB+L,IAaIkd,KAZiBxuB,OAAAmuB,qCAAA,gBAAAnuB,CAAAsI,KAAAmT,UAGXhb,KAAM8E,oCAAA,cAHK6L,QAAjBsM,aAMiB1d,OAAAmuB,qCAAA,gBAAAnuB,CAAAsI,KAAAmT,UAGXhb,KAAM8E,oCAAA,cAHK8L,SAAjBqM,cAQA8Q,IAAMxuB,OAAAmuB,qCAAA,gBAAAnuB,CAAAsI,KAAAmT,SAAA1Q,OAANyjB,aAQJ,OAAAA,8CAsBA,OAAQlmB,KAAAqB,YAAD/F,SAA6B0E,KAAAsB,eAApChG,6CAUqB,IAAlBoH,YAAkBxC,UAAA5E,OAAA,QAAAlC,IAAA8G,UAAA,KAAAA,UAAA,GACfkU,SAAW,IAAIpU,KAAJwD,YAAjBxD,MAMA,OALA0C,UACI0R,yBAEAA,yBAEJA,iDA8CKmB,UAAW9S,QAChB,IAAMwjB,WACF9tB,KAAM8E,oCAAA,cADQ6L,OAEdpG,WAAW,GAEfD,OAAS/K,2BAAT+K,QACA,IAAM0jB,YAAcnmB,KAApBiF,kBACMuQ,UAAY9d,YAAlByuB,aACQhuB,KARgBsK,OAAAtK,KAUpBiuB,oBAAsB7Q,UAAAzT,OAAiB,SAAAC,IAAA9C,OAMvC,MALA,WAAIA,uBACA8C,kLAAYyT,UAAA3E,OAAiB,SAAAzM,WAAA,WAAaA,4BACnCnF,SAAJknB,aACHpkB,gBAEJA,SAGJqkB,oBAAsBhmB,MAAAimB,KAAW,IAAArZ,IAAXoZ,sBAAAzrB,IAA6C,SAAAsE,OAAA,OAASA,MAATqnB,SACnE,IAAI7R,iBAEAtc,OAAS8E,oCAAA,cAAb+L,IASIyL,WARsB/c,OAAAmuB,qCAAA,iBAAAnuB,CAAAsI,KAAAomB,qBAClBjuB,KAAM8E,oCAAA,cADwD6L,OAE9DpG,UAAWD,OAAOC,WAFtB8S,WAIqB9d,OAAAmuB,qCAAA,iBAAAnuB,CAAAsI,KAAAomB,qBACjBjuB,KAAM8E,oCAAA,cADuD8L,QAE7DrG,UAAWD,OAAOC,WAFtB8S,YAOAf,UADsB/c,OAAAmuB,qCAAA,iBAAAnuB,CAAAsI,KAAAomB,oBAAA3jB,OAAtB+S,WAIJ,OAAAf,oEAIA,OAAOzU,KAAPumB,mFAWA,OAPAvmB,KAAAumB,aAAoBvmB,KAAA4lB,YAAApmB,OAAAsC,OAA+B,SAAAC,IAAAykB,SAAAxvB,GAK/C,OAJA+K,IAAIykB,SAAJzkB,SACIuD,MADmBtO,EAEnByvB,KAAOlvB,KAAMivB,SAARjvB,OAAyBkM,KAAM+iB,SAA/B/iB,OAAgD0E,QAASqe,SAAzDre,YAETpG,SAEJ/B,+CAWAA,KAAAgY,SAAgBhY,KAAAgY,QAAA0O,YAAhB1mB,MACAA,KAAAgY,QAAA,KACAhY,KAAAwX,UAAAtL,QAAuB,SAAAwL,OACnBA,qBAEJ1X,KAAAwX,6DA6BSE,OACT,IAAIzV,IAAMjC,KAAAwX,UAAAhT,UAAyB,SAAAmiB,SAAA,OAAWA,UAAXjP,SACnCzV,SAAajC,KAAAwX,UAAAoP,OAAA3kB,IAAbA,+CAQO4kB,QACP7mB,KAAAgY,SAAgBhY,KAAAgY,QAAA0O,YAAhB1mB,MACAA,KAAAgY,QAAA6O,OACAA,QAAUA,sBAAVA,oDA4BA,OAAO7mB,KAAPgY,0DA6BA,OAAOhY,KAAPwX,kEA4BA,OAAOxX,KAAPyS,oFA4BA,OAAOzS,KAAPiT,oCAIOzZ,oBAAA,QAAfgsB;;;;;sFCvlBA1uB,oBAAAgB,EAAA0B,qBAAA1C,oBAAAQ,EAAAkC,oBAAA,wBAAAunB,MAAAjqB,oBAAAQ,EAAAkC,oBAAA,wBAAA0nB,MAAApqB,oBAAAQ,EAAAkC,oBAAA,wBAAA4T,MAAAtW,oBAAAQ,EAAAkC,oBAAA,wBAAA+T,MAAAzW,oBAAAQ,EAAAkC,oBAAA,0BAAA8nB,QAAAxqB,oBAAAQ,EAAAkC,oBAAA,yBAAA+nB,OAAAzqB,oBAAAQ,EAAAkC,oBAAA,0BAAAgoB,QAAA1qB,oBAAAQ,EAAAkC,oBAAA,uBAAAstB,KAAA,IAAAC,yDAAAjwB;;AAAA,uCAEeiqB,IAAoDgG,yDAAA,OAApDhG,IAAKG,IAA+C6F,yDAAA,OAA/C7F,IAAK9T,IAA0C2Z,yDAAA,OAA1C3Z,IAAKG,IAAqCwZ,yDAAA,OAArCxZ,IAAK+T,MAAgCyF,yDAAA,OAAhCzF,MAAOC,KAAyBwF,yDAAA,OAAzBxF,KAAMC,MAAmBuF,yDAAA,OAAnBvF,MAAYsF,GAAOC,yDAAA,OAAZtF;;;;;4FCFvD3qB,oBAAAgB,EAAA0B,qBAMeA,oBAAA,iBAAAwtB,OACX,IAAIhwB,EAAJ,EACA,OAAO,WAAe,QAAAiJ,KAAAC,UAAA5E,OAAXkE,OAAWY,MAAAH,MAAAI,KAAA,EAAAA,KAAAJ,KAAAI,OAAXb,OAAWa,MAAAH,UAAAG,MAClBb,eAAe,SAAA6P,IAAA9K,YACLyiB,4BAAN5mB,QACI4mB,kBAAoB5mB,YAAa9E,OAAjC0rB,KAEJA,8BAEJhwB;;;;;kGCTR,SAAAiwB,oBAAAC,MACI,OAAIA,gBAAJC,KACID,KAGG,IAAAC,KAAPD,MASJ,SAAAE,IAAA3uB,GACI,OAAQA,EAAD,OAAAA,EAAPA,EA8BuB,SAAAqS,kBAAA7Q,QACvB+F,KAAA/F,cACA+F,KAAAqnB,cAAAjuB,EACA4G,KAAAqQ,gBAAAjX,uIAfJ4B,cAAgB,SAAAE,MACZ,OAAOA,wCAAP,SAkBJ4P,mCAIAA,2CACIwc,KADwC,EAExCC,MAFwC,EAGxCC,IAHwC,EAIxCC,KAJwC,EAKxCC,OALwC,EAMxCC,OANwC,EAOxCC,YAAa,GAUjB9c,sCAAwC,SAAA+c,QACpC,OAAO,SAAAxY,KACH,IAAIS,UACJ,OAAIgY,SAAShY,UAAYiY,aAAzB,KACIjY,UAGJ+X,SAYR/c,qCAAuC,SAAAmQ,MAAA4M,QACnC,OAAO,SAAAxY,KACH,IACIpY,EADAD,SAGJ,IAAAqY,IAAY,OAAAwY,OAEZ,IAAMG,KAAO3Y,IAAb4Y,cAEA,IAAKjxB,IAAOC,EAAIgkB,MAAhB3f,OAA8BtE,EAA9BC,EAAqCD,IACjC,GAAIikB,yBAAJ+M,KACI,OAAAhxB,EAIR,YAAAoC,IAAIpC,EACA6wB,OAEJ,OAqBR/c,sCAAwC,WACpC,IAAMod,SACFC,OAAO,oCADK,OAUZC,MAAM,yEAUJC,WACFF,OAAO,kEADO,OAedC,MAAM,gHAkQV,OAjPIE,GAEI/wB,KAFD,IAGC+N,MAHD,EAICijB,QAJD,SAAAA,UAIc,gBACb/X,OAAQ1F,kBALT0d,sBAMC1nB,UAND,SAAAA,UAAAuO,KASK,OAFU4X,oBAAV5X,KAEO/X,WAAPmxB,aAGRxxB,GAEIM,KAFD,IAGC+N,MAHD,EAICijB,QAJD,SAAAA,UAIc,gBACb/X,OAAQ1F,kBALT0d,sBAMC1nB,UAND,SAAAA,UAAAuO,KAOK,IACMqZ,MADIzB,oBAAV5X,KACc/X,WAAd,GAEA,OAAQoxB,aAADA,OAAPD,aAGRzvB,GAEIzB,KAFD,IAGC+N,MAHD,EAICijB,QAJD,SAAAA,UAIc,iBACb/X,OAAQ,SAAAA,OAAAnB,KACJ,OAAAA,IACWA,IAAP4Y,cAEJ,MAEJnnB,UAAW,SAAAA,UAAAuO,KAIP,OAHU4X,oBAAV5X,KACAsZ,WAEQD,QAAR,OAGRE,GAEIrxB,KAFD,IAGC+N,MAHD,EAICijB,QAJD,SAAAA,UAIc,iBACb/X,OAAQ,SAAAA,OAAAnB,KACJ,OAAAA,IACWA,IAAP4Y,cAEJ,MAEJnnB,UAAW,SAAAA,UAAAuO,KAIP,OAHU4X,oBAAV5X,KACAsZ,WAEQD,QAAR,OAGRG,GAEItxB,KAFD,IAGC+N,MAHD,EAICijB,QAJD,SAAAA,UAIc,gBACb/X,OAAQ1F,kBALT0d,sBAMC1nB,UAND,SAAAA,UAAAuO,KAUK,OAAO+X,IAHGH,oBAAV5X,KACAyZ,gBAKRC,GAEIxxB,KAFD,IAGC+N,MAHD,EAICijB,QAJD,SAAAA,UAIc,gBACb/X,OAAQ1F,kBALT0d,sBAMC1nB,UAND,SAAAA,UAAAuO,KAUK,OAAO+X,IAHGH,oBAAV5X,KACA2Z,gBAKRC,GAEI1xB,KAFD,IAGC+N,MAHD,EAICijB,QAJD,SAAAA,UAIc,gBACb/X,OAAQ1F,kBALT0d,sBAMC1nB,UAND,SAAAA,UAAAuO,KAUK,OAHU4X,oBAAV5X,KACA6Z,kBAEAT,aAGR3X,GAEIvZ,KAFD,IAGC+N,MAHD,EAICijB,QAJD,SAAAA,UAIc,UAAWL,mBAAX,UACb1X,OAAQ1F,qCAAqCod,QAL9CC,OAMCrnB,UAND,SAAAA,UAAAuO,KAOK,IACM8Z,IADIlC,oBAAV5X,KACA+Z,SAEA,OAAQlB,cAADiB,KAAPV,aAGRY,GAEI9xB,KAFD,IAGC+N,MAHD,EAICijB,QAJD,SAAAA,UAIc,UAAWL,kBAAX,UACb1X,OAAQ1F,qCAAqCod,QAL9CE,MAMCtnB,UAND,SAAAA,UAAAuO,KAOK,IACM8Z,IADIlC,oBAAV5X,KACA+Z,SAEA,OAAQlB,aAADiB,KAAPV,aAGR7mB,GAEIrK,KAFD,IAGC+N,MAHD,EAICijB,QAJD,SAAAA,UAIc,gBACb/X,OAAQ1F,kBALT0d,sBAMC1nB,UAND,SAAAA,UAAAuO,KAUK,OAHU4X,oBAAV5X,KACAia,UAEAb,aAGRnxB,GAEIC,KAFD,IAGC+N,MAHD,EAICijB,QAJD,SAAAA,UAIc,gBACb/X,OAAQ1F,kBALT0d,sBAMC1nB,UAND,SAAAA,UAAAuO,KAUK,OAAO+X,IAHGH,oBAAV5X,KACAia,aAKRvY,GAEIxZ,KAFD,IAGC+N,MAHD,EAICijB,QAJD,SAAAA,UAIc,UAAWF,qBAAX,UACb7X,OAAQ1F,qCAAqCud,UAL9CF,OAMCrnB,UAND,SAAAA,UAAAuO,KAOK,IACMka,MADItC,oBAAV5X,KACAma,WAEA,OAAQnB,gBAADkB,OAAPd,aAGRgB,GAEIlyB,KAFD,IAGC+N,MAHD,EAICijB,QAJD,SAAAA,UAIc,UAAWF,oBAAX,UACb7X,OAAQ1F,qCAAqCud,UAL9CD,MAMCtnB,UAND,SAAAA,UAAAuO,KAOK,IACMka,MADItC,oBAAV5X,KACAma,WAEA,OAAQnB,eAADkB,OAAPd,aAGRrxB,GAEIG,KAFD,IAGC+N,MAHD,EAICijB,QAJD,SAAAA,UAIc,gBACb/X,OALD,SAAAA,OAAAnB,KAKgB,OAAOvE,6CAAP,GACfhK,UAND,SAAAA,UAAAuO,KAUK,OAAO+X,IAHGH,oBAAV5X,KACAma,WAEA,KAGRE,GAEInyB,KAFD,IAGC+N,MAHD,EAICijB,QAJD,SAAAA,UAIc,kBACb/X,OALD,SAAAA,OAAAnB,KAMK,IAAIE,cACJ,GAAAF,IAAS,CACL,IAAMpY,EAAIoY,IAAV/T,OACA+T,IAAMA,cAAcpY,EAAdoY,EAANA,GAEJ,IAAIS,UAAYhF,wCAAhBuE,KACIsa,YAAc,IAAlBxC,KACIyC,YAAcvY,WAAYsY,YAADE,cAA7B,KAOA,OAHI5C,oBAFJ1X,iCAEI0X,cAA4C0C,YAAhDE,gBACIta,WAAYqa,YAAZra,cAEG0X,4BAAP4C,eAEJ/oB,UAtBD,SAAAA,UAAAuO,KAuBK,IACIya,KADM7C,oBAAV5X,KACW/X,cAAXmxB,WACIxxB,SAOJ,OALA6yB,OACI7yB,EAAI6yB,KAAJ7yB,OACA6yB,KAAOA,eAAe7yB,EAAf6yB,EAAPA,IAGJA,OAGRC,GAEIxyB,KAFD,IAGC+N,MAHD,EAICijB,QAJD,SAAAA,UAIc,kBACb/X,OAAQ1F,kBALT0d,sBAMC1nB,UAND,SAAAA,UAAAuO,KAUK,OAHU4X,oBAAV5X,KACa/X,cAAbmxB,eAgBhB3d,sCAAwC,WACpC,IAAMkf,YAAclf,kBAApBmf,sBAEA,OACIxC,KAAMuC,YADH1B,EAEH4B,QAASF,YAFN/yB,EAGHkzB,eAAgBH,YAHbhxB,EAIHoxB,eAAgBJ,YAJbpB,EAKHlB,OAAQsC,YALLnB,EAMHlB,OAAQqC,YANLjB,EAOHsB,UAAWL,YAPRlZ,EAQHwZ,SAAUN,YARPX,EASHkB,aAAcP,YATXpoB,EAUH4oB,4BAA6BR,YAV1B1yB,EAWHmzB,YAAaT,YAXVjZ,EAYH2Z,WAAYV,YAZTP,EAaHkB,cAAeX,YAbZ5yB,EAcHwzB,WAAYZ,YAdTN,EAeHmB,UAAWb,YAAYD,IAW/Bjf,gCAAkC,WAC9B,IAAMkf,YAAclf,kBAApBmf,sBACMa,gBAAkB,SAAlBA,kBAMF,IALA,IAAI9zB,EAAJ,EACI+nB,WACAgM,mBACE9zB,EAAIiJ,UAAV5E,OAEOtE,EAAPC,EAAcD,IACV+nB,6CACA7e,UAAA5E,QAAAtE,OAAAoC,EAAA8G,UAAAlJ,MACI+zB,iBAIR,OAAAA,YAEOA,sBAAsBA,YAA7B,IAFoB,MAKxB,OACIzD,MAAO0C,YAADN,EAAgBM,YAAhBD,EADHe,iBAIHvD,OAAQyC,YAADjZ,EAAgBiZ,YAAhBP,EAA+BO,YAA/B5yB,EAJJ0zB,iBAOHtD,KAAMwC,YAADlZ,EAAgBkZ,YAAhBX,EAA+BW,YAA/BpoB,EAA8CooB,YAA9C1yB,EAPFwzB,iBAUHrD,MAAOuC,YAAD1B,EAAgB0B,YAAhB/yB,EAA+B+yB,YAA/BhxB,EAA8CgxB,YAA9CpB,EACF,SAAAoC,aAAAC,aAAAC,UAAAC,WACI,IAAIJ,mBACAK,cACAC,YACAhc,WAcJ,OAZI4b,eAAiBG,OAAUF,WAA/BC,YACI,OAAIC,iBAAiBA,OAAjBA,MACAC,SAGJN,0BAEAA,YADGE,cAGHF,aAGJA,aAEA1b,IAAM0b,sBAAsBA,YAA5B1b,IACAgc,OACIhc,SAEJA,KANoB,OAS5BqY,QAASsC,YAADnB,EAtCLiC,iBAyCHnD,QAASqC,YAADjB,EAAA+B,mBAWhBhgB,6BAA+B,SAAA7Q,QAQ3B,IAPA,IAAMqxB,YAAcxgB,kBAApBygB,aACMvB,YAAclf,kBAApBmf,sBACMuB,cAAgB9zB,YAAtBsyB,aACMyB,cACFz0B,SACA00B,oBAEI10B,EAAIiD,2BAA4BjD,EAAjC,KAAP,GACI00B,YAAczxB,OAAOjD,EAArB00B,IACA,IAAIF,oCAEJC,iBACInmB,MADYtO,EAEZ0E,MAAOgwB,cAIf,OAAAD,YASJ3gB,2BAA6B,SAAAoc,KAAAjtB,QACzB,IAQIhD,EARE00B,MAAQ1E,oBAAdC,MACMuE,WAAa3gB,6BAAnB7Q,QACM+vB,YAAclf,kBAApBmf,sBACI2B,aAAetc,OAAnBrV,QACMqxB,YAAcxgB,kBAApBygB,aACI7vB,aACAmwB,oBACA70B,SAGJ,IAAKA,IAAOC,EAAIw0B,WAAhBnwB,OAAmCtE,EAAnCC,EAA0CD,IAEtC60B,aAAe7B,YADftuB,MAAQ+vB,cAAR/vB,OACesuB,UAAf6B,OACAD,aAAeA,qBAAqB,IAAA5wB,OAAWswB,YAAX5vB,MAArBkwB,KAAfA,cAGJ,OAAAA,cAQJ9gB,kCAAoC,SAAAghB,cAAAztB,SAChC,IAAM0tB,cAAgBjhB,kBAAtBihB,gBACM1E,SAAWrnB,KAAAgsB,kBAAjBF,eACMG,WAAanhB,kBAAnBohB,wBACMC,QAAU9tB,SAAWA,QAA3B8tB,QACMC,cACAjsB,QACFksB,mBACAC,sBACAC,kBACAld,WACArY,SACAw1B,aACAC,mBACAx1B,SACAsY,UAEJ,IAAA8c,eAAAN,cACI,MAAKhzB,eAAA5B,KAAA40B,cAALM,aAAA,CAMA,IAJAlsB,cAEAosB,YADAD,eAAiBP,cAAjBO,cACaA,OAAsBA,sBAAtBA,KAAbC,GAEKv1B,IAAOC,EAAIq1B,eAAhBhxB,OAAuCtE,EAAvCC,EAA8CD,SAI1CoC,KAFAiW,IAAMgY,UADNmF,MAAQF,eAARE,IACAnd,OAGIlP,gBAEAA,WAAUqsB,MAAVrsB,MAMR,SAAKssB,KAFLA,YAAcF,sBAAdE,QAEI,OAA8BA,eAAlCN,QACI,MAGJC,WAAWH,WAAXG,0BAUJ,OAPIA,mBAAqBpsB,KAAA0sB,gBAAqBN,WAA9C9wB,QAEIiU,eAAe6c,WAAf7c,QAEAA,wCAGJA,QAQJzE,8CAAgD,SAAAghB,eAC5C,IAYI70B,EAZEgD,OAAS+F,KAAf/F,OACM+vB,YAAclf,kBAApBmf,sBACMqB,YAAcxgB,kBAApBygB,aACME,WAAa3gB,6BAAnB7Q,QACM0yB,YAEFC,2BACAC,cACAC,gBACAC,kBACAC,mBAGAh2B,SAEJg2B,YAAc1d,OAAd0d,QAEA,IAAMC,SAAWxB,WAAA9wB,IAAe,SAAAuyB,KAAA,OAAOA,IAAPxxB,QAC1ByxB,iBAAmB1B,WAAzBnwB,OACA,IAAKtE,EAAIm2B,iBAAT,EAA+Bn2B,GAA/B,EAAuCA,KACnC81B,SAAWrB,cAAXqB,OAEIA,IAAiBE,mBAArB,QAKA5zB,IAAIwzB,sBACAA,oBAAsBI,YAAtBJ,QAGJG,WAAaC,sBAAsBF,SAAtBE,EAAbD,qBACAC,YAAcA,wBAAyBF,SAAzBE,GACVhyB,cADUgyB,YAEVA,0CAA2CA,YAF/CA,QAIAJ,8BAbIA,6BAgBR,IAAK51B,EAAL,EAAYA,EAAZm2B,iBAAkCn2B,IAC9B61B,OAASpB,WAAToB,GACAG,YAAcA,oBAAoB1B,YAAcuB,OAAlCG,MAAgDhD,YAAY6C,OAAZ7C,OAA9DgD,WAGJ,IAAMI,cAAgBtB,oBAAoB,IAAA9wB,OAApB8wB,kBAGtB,IAFAsB,sBAEKp2B,IAAOC,EAAIg2B,SAAhB3xB,OAAiCtE,EAAjCC,EAAwCD,IACpC21B,SAASM,SAATN,IAAwBS,cAAxBT,GAEJ,OAAAA,UAQJ7hB,0CAA4C,SAAAghB,eACxC,IAAI5E,KAAJ,KACA,GAAI7Z,gBAAJye,eACI5E,KAAO,IAAAC,KAAPD,oBACG,IAAKlnB,KAAD/F,QAAgBktB,WAApB2E,eACH5E,KAAO,IAAAC,KAAPD,mBAEC,CACD,IAAMG,SAAWrnB,KAAAqnB,SAAgBrnB,KAAAjG,MAAjC+xB,eACIzE,SAAJ/rB,SACI0E,KAAAqQ,WAAA,IAAA3V,SAAA5B,UAAAN,KAAAe,MAAA4tB,MAAA,MAAA/qB,qKAAAsW,CAAA2U,aACAH,KAAOlnB,KAAPknB,YAGR,OAAAA,MAGJpc,4CAA8C,SAAA0O,KAC1C,OAAOA,SAAaxZ,KAAA/F,OAAAozB,MAAA,QAApB/xB,QASJwP,qCAAuC,SAAA7Q,OAAA6xB,eACnC,IAAIzb,kBAQJ,OANAyb,cACIzb,WAAarQ,KAAAqQ,WAAkBrQ,KAAAsQ,cAA/BD,gBACSA,WAAarQ,KAAnBqQ,cACHA,WAAarQ,KAAAsQ,cAAbD,gBAGGvF,sCAAP7Q;;;;;gGC3uBJnD,oBAAAgB,EAAA0B,qBAMeA,oBAAA,iBAAA4E,MACX,IAAIgP,IAAMC,OAAVC,kBACIC,IAAMF,OAAVG,kBAWA,OATApP,aAAa,SAAA9G,GACLA,EAAJ8V,MACIA,OAEA9V,EAAJiW,MACIA,UAIDH,IAAPG;;;;;icClBE+f,aAAN,SACMC,cAAgB71B,iBAAtB+wB,SACM+E,YAAN,kBACMC,WAAN,iBAEA,SAAAC,eAAAR,IAAAS,WAII,IAHA,IAAI32B,EAAI22B,UAARryB,OACIsyB,QAAJ,EAEA52B,GAAU,CACN,GAAIk2B,MAAQS,UAAZ32B,GAEI,OADA42B,SAGJ52B,KAGJ,OAAA42B,OA2GJ,SAAAC,QAAAC,KAAAC,KAAAC,WAEI,YAAI,IAAAF,KAAA,YAAAG,QAAAH,SAAAR,oBAAgC,IAAAS,KAAA,YAAAE,QAAAF,SAApCT,aACI,WAGA,IAAAS,KAAA,YAAAE,QAAAF,SAAAT,cAAJ,OAAoCS,KAChCD,YAGA,IAAAA,KAAA,YAAAG,QAAAH,SAAJR,eACIQ,KAAOC,6BAnHf,SAAAvJ,MAAAsJ,KAAAC,KAAAC,UAAAE,OAAAC,QACI,IAAA5uB,KAAA6uB,OAAAC,OAAAlvB,IAAAmvB,KAkBA,GATAH,QAKID,kBACAC,oBALAD,cACAC,eAOAJ,gBAAJ3tB,MACI,IAAKb,KAAL,EAAeA,KAAOwuB,KAAtBzyB,OAAmCiE,MAAnC,EAA8C,CAC1C,IACI6uB,OAASN,KAATM,MACAC,OAASN,KAATM,MAEJ,MAAAzsB,GACI,eAGA,IAAAysB,OAAA,YAAAJ,QAAAI,WAAJf,aACUU,gBAAN50B,IAAmBi1B,SACfP,oBAIAM,qBAAmB,IAAAA,OAAA,YAAAH,QAAAG,WAAvBd,eACIc,OAASN,WAAaO,gCAG1B,KADAC,KAAOZ,sBAAPY,SAEIF,OAASN,WAAaI,OAAtBE,MAGA5J,mDAMZ,IAAAjlB,QAAAwuB,KAAmB,CACf,IACIK,OAASN,KAATM,MACAC,OAASN,KAATM,MAEJ,MAAAzsB,GACI,SAGJ,GAAIysB,qBAAmB,IAAAA,OAAA,YAAAJ,QAAAI,WAAvBf,cAKInuB,IAAMouB,mBAANpuB,WACAquB,aACQY,qBAAmB,IAAAA,OAAA,YAAAH,QAAAG,WAAvBd,eACIc,OAASN,gBAGb,KADAQ,KAAOZ,sBAAPY,SAEIF,OAASN,WAAaI,OAAtBE,MAGA5J,8CAGCrlB,MAAJsuB,YACGW,eAAqBA,kBAAzBhuB,QACIguB,OAASN,gBAGb,KADAQ,KAAOZ,sBAAPY,SAEIF,OAASN,WAAaI,OAAtBE,MAGA5J,8CAIJsJ,sBAGH,CACD,GAAIE,gBAAJ50B,IAAiBi1B,OACb,SAEJP,mBAIZ,OAAAA,KAiBAtJ,sBACAsJ;;;;;;;wBCnIG,SAAAS,QAAAlf,KACH,OAAOjP,cAAPiP,KASG,SAAAmf,SAAAnf,KACH,OAAOA,MAAQ3X,OAAf2X,KASG,SAAAof,SAAApf,KACH,uBAAOA,IASJ,SAAAqf,WAAArf,KACH,yBAAOA,IASJ,SAAAsf,aAAAvwB,MACH,SAAAhC,qKAAAsW,CAAW,IAAA1F,IAAX5O,QAGG,IAAMwwB,YAAc,SAAdA,cAAc,aAAY,IAAAzH,MAAZ0H,UAAmCxd,WAAnC,IAA8CA,gBASlE,SAAAyd,WAAAC,KAAAC,MACH,IAAKT,QAADQ,QAAmBR,QAAvBS,MACI,OAAOD,OAAPC,KAGJ,GAAID,cAAgBC,KAApB1zB,OACI,SAGJ,IAAK,IAAItE,EAAT,EAAgBA,EAAI+3B,KAApBzzB,OAAiCtE,IAC7B,GAAI+3B,UAAYC,KAAhBh4B,GACI,SAIR,SASG,SAAAi4B,aAAA5f,KACH,OAAAA,IASG,IAAM6f,iBAAmB,SAAnBA,iBAAmB9wB,MAC5B,OAAIqwB,SAAJrwB,MACWnB,oCAAA,WAAPiH,QACOqqB,eAAiBA,QAAQnwB,KAA7B,IACInB,oCAAA,WAAPkH,QACOoqB,gBAAkBnwB,iBAAqBowB,SAASpwB,KAApD,KACInB,oCAAA,WAAPgH,UAEJ;;;;;sFCvGJnN,oBAAAgB,EAAA0B,qBAAA,IAAA21B,kDAAAr4B;;AAAA,sCAAAA,oBAAAQ,EAAAkC,oBAAA,sCAAA21B,kDAAA,cAAAC,2CAAAt4B;;AAAA,+BAAAA,oBAAAQ,EAAAkC,oBAAA,gCAAA41B,2CAAA,cAAAC,+CAAAv4B;;AAAA,mCAAAA,oBAAAQ,EAAAkC,oBAAA,0CAAA61B,+CAAA,cAAAC,sCAAAx4B;;AAAA,0BAAAA,oBAAAQ,EAAAkC,oBAAA,4BAAA81B,sCAAA,cAAAC,qCAAAz4B;;AAAA,yBAAAA,oBAAAQ,EAAAkC,oBAAA,4BAAA+1B,qCAAA,UAAAz4B,oBAAAQ,EAAAkC,oBAAA,6BAAA+1B,qCAAA,WAAAz4B,oBAAAQ,EAAAkC,oBAAA,6BAAA+1B,qCAAA,WAAAz4B,oBAAAQ,EAAAkC,oBAAA,+BAAA+1B,qCAAA,aAAAz4B,oBAAAQ,EAAAkC,oBAAA,iCAAA+1B,qCAAA,eAAAz4B,oBAAAQ,EAAAkC,oBAAA,gCAAA+1B,qCAAA,cAAAz4B,oBAAAQ,EAAAkC,oBAAA,+BAAA+1B,qCAAA,aAAAz4B,oBAAAQ,EAAAkC,oBAAA,iCAAA+1B,qCAAA,eAAAz4B,oBAAAQ,EAAAkC,oBAAA,qCAAA+1B,qCAAA;;;;;;;2gBCUMC,wBACF,SAAAA,eAAe,IAAAlvB,MAAAN,oJAAAD,CAAAC,KAAAwvB,cACXxvB,KAAAgnB,MAAa,IAAbxI,IACAxe,KAAAgnB,MAAAyI,IAAA,aAA6BC,uCAAA,YAE7Bh4B,eAAeg4B,uCAAA,QAAfh4B,QAA+B,SAAAa,KAC3B+H,MAAA0mB,MAAAyI,IAAel3B,IAAf,GAAuBA,IAAvB,8FAcJ,IAAK2H,UAAL5E,OACI,OAAO0E,KAAAgnB,MAAAnvB,IAAP,cAGJ,IAAI83B,6CAAJ,GAEA,sBAAIA,QACA3vB,KAAAgnB,MAAAyI,IAAA,aAAAE,aACG,CAEH,GADAA,QAAUrgB,OAAVqgB,UACA,IAAIj4B,YAAYg4B,uCAAA,QAAZh4B,iBAGA,MAAM,IAAAiH,MAAA,WAAAgxB,QAAN,0BAFA3vB,KAAAgnB,MAAAyI,IAAA,aAA6BC,uCAAA,OAA7BC,UAKR,OAAA3vB,+CAmCMzI,KAAMo4B,SAAS,IAAA9qB,OAAA7E,KACrB,sBAAI2vB,QACA,MAAM,IAAAhxB,MAAN,gCAMJ,OAHApH,KAAO+X,OAAP/X,MACAyI,KAAAgnB,MAAAyI,IAAAl4B,KAAAo4B,SAEO,WAAQ9qB,OAAA+qB,aAAAr4B,yDAGLA,MACNyI,KAAAgnB,MAAA6I,IAAJt4B,OACIyI,KAAAgnB,MAAA8I,OAAAv4B,8CAICA,MACL,OAAIA,gBAAJmD,SACInD,KAEGyI,KAAAgnB,MAAAnvB,IAAPN,0BAIFw4B,aAAgB,WAClB,IAAI/I,MAAJ,KAQA,OANA,SAAAgJ,WAII,OAHA,OAAIhJ,QACAA,MAAQ,IAARA,cAEJA,MAEGgJ,GATW,GAYPx2B,oBAAA,QAAfu2B;;;;;gnBChHME,iBAQF,SAAAA,MAAA5gB,IAAApQ,sJAAyBc,CAAAC,KAAAiwB,OACrBv4B,qCACIE,YADkC,EAElCs4B,cAFkC,EAGlCC,UAHkC,EAIlCl4B,MAAOoX,MAGXrP,KAAAf,iFAoBA,OAAOqQ,OAAOtP,KAAd/H,iDAUA,OAAO+H,KAAP/H,wCArBA,OAAO+H,KAAP+Z,oBAyBOvgB,oBAAA,QAAfy2B,whBCxDA,SAAAruB,EAAA1J,GACA,UAAA+1B,QAAAz3B,UAAA,UAAAy3B,QAAAx3B,QACAA,oBAEAC,yRAJA,CASCE,kBACD,gBAAAgL,GCTA,IAAA1J,KAGA,SAAAJ,EAAAW,GAGA,GAAAP,EAAAO,GACA,OAAAP,EAAAO,GAAAjC,QAGA,IAAAQ,EAAAkB,EAAAO,IACAzB,IACAC,KACAT,YAUA,OANAU,mCAGAT,OAGAO,EAAAR,QA0DA,OArDAM,MAGAA,MAGAA,oBACAA,UACAY,2BAA0CE,uBAK1Cd,gBACA,oBAAAiB,eAAAC,aACAN,4CAAwDO,iBAExDP,sCAAiDO,YAQjDnB,kBAEA,GADA,EAAAoB,IAAA0J,EAAA9J,EAAA8J,IACA,EAAA1J,EAAA,OAAA0J,EACA,KAAA1J,GAAA,UAAA+1B,QAAArsB,SAAAxJ,WAAA,OAAAwJ,EACA,IAAAnJ,EAAAf,OAAAY,OAAA,MAGA,GAFAxB,OACAY,mCAAyCE,wBACzC,EAAAM,GAAA,iBAAA0J,EAAA,QAAA5K,KAAA4K,EAAA9J,EAAAR,EAAAmB,EAAAzB,EAAA,SAAAkB,GAAgH,OAAA0J,EAAA1J,IAAqBM,cACrI,OAAAC,GAIA3B,gBACA,IAAAoB,EAAA0J,KAAAxJ,WACA,WAA2B,OAAAwJ,EAAAwuB,SAC3B,WAAiC,OAAAxuB,GAEjC,OADA9K,aACAoB,GAIApB,kBAAsD,OAAAY,OAAAoB,UAAAC,eAAA5B,KAAAyK,EAAA1J,IAGtDpB,OAIAgB,IAAAmB,EAAA,GDxEA,ECwEA,SAAA2I,EAAA1J,EAAAJ,GAAA,aAAAA,IAAAI,GAAA,IAAAO,EAAA,oBAAAmJ,IAAA1J,GAAA,QAAAJ,EAAA,EAAAA,EAAAI,EAAAoD,OAAAxD,IAAA,KAAAW,EAAAP,EAAAJ,GAAAW,EAAAb,WAAAa,EAAAb,aAAA,EAAAa,EAAAy3B,cAAA,YAAAz3B,MAAA03B,UAAA,GAAAz4B,OAAAC,eAAAiK,EAAAnJ,EAAAF,IAAAE,IAAA,gBAAAP,EAAAJ,EAAAW,GAAA,OAAAX,GAAA8J,EAAA1J,EAAAY,UAAAhB,GAAAW,GAAAmJ,EAAA1J,EAAAO,GAAAP,GAAA,GClFMm4B,EAAY,SAAZA,EAAazxB,EAAK0xB,GACpB1xB,EAAIsN,QAAQ,SAAChK,YACLA,GAA+B,OAATA,IAG1BouB,EAAKpuB,GAAQ,MAAAzK,EAAA,WAKjB,SAAAmK,EAAahD,iGAAKmB,QACdC,KAAKuwB,QACLF,EAAUzxB,EAAKoB,KAAKuwB,qDAGhB3xB,GAEJ,OADAyxB,EAAUzxB,EAAKoB,KAAKuwB,MACbvwB,6CAIP,OAAOtI,OAAO84B,KAAKxwB,KAAKuwB,iDAGTE,EAAMC,GACrB,IAAIn4B,SACEo4B,KACFC,EAAKH,EAAKF,KACVM,EAAKH,EAAKH,KACd,IAAKh4B,KAAOq4B,OACE73B,eAAe5B,KAAKy5B,EAAIr4B,KAG9BA,KAAOs4B,GAGXF,EAAa5xB,KAAKxG,IAEtB,OAAO,IAAIu4B,EAAWH,SAjCT,GAiCSA,+jBClC9B,IACII,EAAiB,SAAjBA,EAAkB7D,GAEd,GAAmB,qBAARA,EAAP,YAAApc,EAAOoc,IAAkB,CACzB,GAAY,OAARA,EAAgB,SAEpB,GAAc,oBADNx1B,OAAOoB,UAAU2vB,SAAStxB,KAAK+1B,GAEnC,MAA8E,YAAtEA,EAAI1pB,YAAYilB,WAAW4E,MAAM,4BAA8B,GAG/E,UAGsB2D,EAAwB,oBAAXp6B,UAAwCA,OACpDq6B,EAAeD,EAAIE,uBAAyBF,EAAIG,6BACvEH,EAAII,0BAA4BJ,EAAIK,wBACpCL,EAAIM,yBACJ,SAAUlqB,GACNmqB,WAAWnqB,EANF,KASjBoqB,EAAiB,SAAjBA,IACI,OAAIA,EAAeC,cAAe,IAAItK,MAAO0H,UACjC2C,EAAeC,WAAYhJ,YAAc+I,EAAeE,QAAQjJ,YAG5E+I,EAAeE,KAAO,GACtBF,EAAeC,YAAa,IAAItK,MAAO0H,WACJpG,YAAc+I,EAAeE,QAAQjJ,aAwC5EkJ,EAAO,SAAPA,IAAsB,QAAA/vB,EAAA1B,UAAA5E,OAAXsH,EAAWxC,MAAAwB,GAAA9J,EAAA,EAAAA,EAAA8J,EAAA9J,IAAX8K,EAAW9K,GAAAoI,UAAApI,GAClB,IAAM85B,KAEN,OADAhvB,EAAOsJ,QAAQ,SAAAtK,GAAA,OAASgwB,EAAI7yB,KAAJ6yB,UAAYpF,MAC7BoF,GAQXC,EAAY,SAAZA,EAAaC,GACT,IAAIC,KACAC,EAAiB,KAKrB,OAHAF,EAAmBA,GACa,mBAArBA,GAAmCA,GAAqB,aAE5D,SAACG,EAAWxrB,MACZ1H,KAAKxF,MAAMw4B,EAAOE,GACE,OAAnBD,IACAA,EAAiBf,EAAa,WAC1B,IAAMiB,EAAQH,EAAMI,MAAM,GAC1BJ,EAAMz2B,OAAS,EACf02B,EAAiB,KAEVE,EAzCNpwB,OAAO,SAACklB,EAAOxf,GAEZ,OAAIA,EAAGkqB,QAAQ1K,EAAMrsB,IACVqsB,GAGXA,EAAMrsB,IAAI6M,EAAGkqB,MAAQ,EACrB1K,EAAMoL,OAAOrzB,KAAKyI,GAEXwf,KACNrsB,OAASy3B,YACbA,OA8BalmB,QAAQ,SAAAtK,GAAA,OAAM4F,MAC5BsqB,EAAiBrrB,QAKjC4rB,EAAQ,SAARA,EAAQzwB,GAAA,OAAa,mBAAA1J,EAAAgI,UAAA5E,OAAIsH,EAAJxC,MAAAlI,GAAAO,EAAA,EAAAA,EAAAP,EAAAO,IAAImK,EAAJnK,GAAAyH,UAAAzH,GAAA,OAAemK,EAAOjI,IAAI,SAAC6xB,GAC5C,IAAM8F,EAAOC,EAAU/F,GACvB,OACIj1B,KAAM+6B,EAAK/6B,KACXi7B,cAAeF,EAAKE,cACpBv6B,MAAOq6B,EAAKG,UAGpBC,EAAkB,SAAlBA,IAAkB,QAAA9wB,EAAA1B,UAAA5E,OAAIsH,EAAJxC,MAAAwB,GAAA9J,EAAA,EAAAA,EAAA8J,EAAA9J,IAAI8K,EAAJ9K,GAAAoI,UAAApI,GAAA,OACd66B,aAAc/vB,EAAOuvB,MAAM,EAAGvvB,EAAOtH,OAAS,GAC9CkM,GAAI5E,EAAOA,EAAOtH,OAAS,KAE/Bs3B,EAAmB,SAAnBA,EAAoBC,GAChB,IAAIjB,KACEj3B,KA2BN,OA1BAk4B,EAAK3mB,QAAQ,SAAAtK,GAAA,OAAQjH,EAAI23B,EAAKE,gBAAkB,IAChD,SAASM,EAAKl0B,GACVA,EAAIsN,QAAQ,SAAComB,GACT,IAAIS,EACAC,SACAC,SACAC,UACGH,EAAQT,EAAKE,iBAAkB73B,GAIb,KADrBq4B,EAAcr4B,EAAIo4B,KACQC,IAAgBpB,EAAIt2B,OAAS,IAEnD23B,EAASrB,EAAIO,MAAM,EAAGa,GACtBE,EAAUtB,EAAIO,MAAMa,EAAc,GAClCpB,EAAMqB,EAAO72B,OAAO82B,GAGpBA,EAAQhnB,QAAQ,SAAChK,EAAMlL,GAAP,OAAa2D,EAAIuH,EAAKswB,eAAiBx7B,EAAIi8B,EAAO33B,SAClEX,EAAIo4B,GAASnB,EAAI7yB,KAAKuzB,GAAQ,GAXlC33B,EAAIo4B,GAASnB,EAAI7yB,KAAKuzB,GAAQ,EAclCQ,EAAIR,EAAKa,iBArBjB,CAwBIN,GACGjB,GAEXwB,GACIC,WAAY,SAAAA,aAAe,QAAAzxB,EAAA1B,UAAA5E,OAAXsH,EAAWxC,MAAAwB,GAAA9J,EAAA,EAAAA,EAAA8J,EAAA9J,IAAX8K,EAAW9K,GAAAoI,UAAApI,GACvB,IAAM2Z,KAIN,OAHA7O,EAAOsJ,QAAQ,SAAConB,GACZ57B,OAAOuP,OAAOwK,4HAAS6hB,EAAY/7B,KAAO+7B,EAAYr7B,UAEnDwZ,GAEX8hB,SAAU,SAAAA,SAAA3xB,GAAA,OAAe0xB,EAAYr7B,QAgBvCu7B,aACF,SAAA5xB,EAAawxB,iGAAUK,QACnBzzB,KAAKwH,GAAK4rB,EACVpzB,KAAK0zB,iEAGe,IAAA9xB,EAEpB,OADA+xB,OAAKD,KAAI30B,KAAT40B,mBACO3zB,qDAIP,OAAOA,KAAK0zB,wCAIZ,OAAO1zB,KAAKwH,SAhBdgsB,GAgBchsB,8XC1LhB,SAAA5F,EAAarK,EAAMi7B,EAAen0B,iGAASu1B,QACbv1B,EAAUA,MACpC2B,KAAKzI,KAAOA,EACZyI,KAAKwyB,cAAgBA,EACrBxyB,KAAK6zB,SACL7zB,KAAKmzB,iBACLnzB,KAAK8zB,MAAQ,KACb9zB,KAAK+zB,kBACL/zB,KAAKg0B,UAAY31B,EAAQ21B,UACzBh0B,KAAKi0B,WACLj0B,KAAKozB,SAAW,KAChBpzB,KAAKk0B,2EAGgB,QAAAtyB,EAAA1J,EAAA8H,KAAAlI,EAAAoI,UAAA5E,OAALo4B,EAAKtzB,MAAAtI,GAAAd,EAAA,EAAAA,EAAAc,EAAAd,IAAL08B,EAAK18B,GAAAkJ,UAAAlJ,GAGrB,OAFAm9B,OAAKN,OAAM90B,KAAXo1B,QAAmBT,GACnBA,EAAIxnB,QAAQ,SAAAtK,GAAA,OAASgX,EAAMua,cAAcp0B,KAAKuB,KACvCN,mDAGMsyB,GAEb,OADAtyB,KAAKk0B,cAAcn1B,KAAKuzB,GACjBtyB,6CAiBP,OAHAA,KAAKyyB,KAAOzyB,KAAKozB,SAALpzB,aAAiBA,KAAKo0B,oBAClCp0B,KAAKi0B,QAAQl1B,KAAKiB,KAAKyyB,MACvBzyB,KAAK+zB,kBACE/zB,qDAIP,OAA0B,IAAtBA,KAAK6zB,MAAMv4B,SAEP/D,KAAMyI,KAAKzI,KACXi7B,cAAexyB,KAAKwyB,cACpBv6B,MAAO+H,KAAKyyB,OAGbzyB,KAAKg0B,UAALh0B,aAAkBA,KAAK6zB,MAAMl5B,IAAI,SAAAiH,GAAA,OAAQyyB,EAAK7B,6DAIrD,IACIyB,EAAUj0B,KAAKi0B,QACfK,EAAOL,EAAQA,EAAQ34B,OAAS,GAEpC,OAAuB,IAAnB24B,EAAQ34B,OACD0E,MAEXi0B,EAAQl1B,KAAKu1B,GACNt0B,4CAIP,IAAMu0B,EAAOv0B,KAAKi0B,QACdK,EAAOC,EAAKA,EAAKj5B,OAAS,GAG9B,OAFAi5B,EAAKj5B,OAAS,EACdi5B,EAAKx1B,KAAKu1B,GACHt0B,4CAIP,OAAqB,OAAdA,KAAKzI,sCAhDZ,OAAOyI,KAAK8zB,wBAGN77B,GAGN,OAFA+H,KAAK8zB,MAAQ77B,EACb+H,KAAK+zB,kBACE/zB,WD0JKwH,GC1JLxH,kQC3BX,SAAA4B,KAAA,SAAAA,EAAA1J,GAAA,KAAA0J,aAAA1J,GAAA,UAAAs8B,UAAA,sCAAeC,QACXz0B,KAAK6zB,SACL7zB,KAAKiyB,WACDyC,aACAC,oEAIY,IAAA/yB,EAEhB,OADAuyB,OAAKN,OAAM90B,KAAXo1B,mBACOn0B,2DAGcwH,GAAI,IAAAtP,EAAA8H,KACnB40B,EAAS50B,KAAKiyB,UAAU0C,aAC1BrvB,EAAQsvB,EAAO71B,KFaN,SAAC81B,EAAOrtB,GACrB,IAAIstB,EAAM,SAANA,IACAttB,iBAAMqtB,EAAMl6B,IAAI,SAAC23B,GACb,IACIiC,EAAOjC,EAAK2B,QACZh9B,EAAIs9B,EAAKj5B,OAAS,EACtB,OAAQi5B,EAAKt9B,EAAI,EAAI,EAAI,EAAIA,EAAI,GAAIs9B,EAAKt9B,SAIlD,OADA69B,EAAIpD,KAAOF,IACJsD,EAVM,CEb0B90B,KAAK6zB,MAAOrsB,IAAO,EAE1D,OAAO,WACHlH,EAAK2xB,UAAU0C,aAAeC,EAAO/jB,OAAO,SAACrJ,EAAIxQ,GAAL,OAAWA,IAAMsO,2DAI5CkC,GAAI,IAAAtP,EAAA8H,KACnB40B,EAAS50B,KAAKiyB,UAAUyC,UAC1BpvB,EAAQsvB,EAAO71B,KFgBT,SAAC81B,EAAOrtB,GAClB,IAAIstB,EAAM,SAANA,IACAttB,iBAAMqtB,EAAMl6B,IAAI,SAAC23B,GACb,IAAMiC,EAAOjC,EAAK2B,QAClB,OAAQM,EAAK,GAAIA,EAAKA,EAAKj5B,OAAS,SAI5C,OADAw5B,EAAIpD,KAAOF,IACJsD,EARG,CEhB0B90B,KAAK6zB,MAAOrsB,IAAO,EAEvD,OAAO,WACH3C,EAAKotB,UAAUyC,UAAYE,EAAO/jB,OAAO,SAACrJ,EAAIxQ,GAAL,OAAWA,IAAMsO,0DAK9D,QAAStF,KAAKiyB,UAAUyC,UAAUp5B,aDL3B0E,GCK2B1E,8XCtBtC,SAAAsG,IAAe,IAAA1J,EAAA8H,MAAA,SAAA4B,EAAA1J,GAAA,KAAA0J,aAAA1J,GAAA,UAAAs8B,UAAA,sCAAAx0B,KAAA4B,GACX5B,KAAK+0B,oBACL/0B,KAAKg0B,UAAY3B,EAAMryB,KAAK+0B,kBAC5B/0B,KAAK1J,KAAO,IAAI0+B,EAAK,KAAM,MAAQhB,UAAWh0B,KAAKg0B,YACnDh0B,KAAK1J,KAAK88B,SAAWA,EAASC,WAE9BrzB,KAAKi1B,UAAY,KACjBj1B,KAAKk1B,cACLl1B,KAAKm1B,qBACDC,yBACAC,uBAGJr1B,KAAKs1B,UAAYzD,EAAU,SAACprB,GACxB,IAAIssB,SACJ,IAAKA,KAAStsB,EAAQ8uB,YAAa,CAC/B,OAAUx8B,eAAe5B,KAAKmJ,EAAKy0B,iBAAkBhC,GACjD,OAEJzyB,EAAKy0B,iBAAiBhC,GAAOyC,mEAKxBtI,EAAKuI,GAClB,IACIC,EADArmB,SAEE0lB,EAAmB/0B,KAAK+0B,iBAC1Bz+B,EAAO0J,KAAK1J,KACZ09B,EAAYh0B,KAAKg0B,UA8CrB,OA5CC,SAASlB,EAAK6C,EAAMnD,EAAeyB,GAChC,IAAI17B,SACAw6B,SACA6C,SACAtD,SAEJ,IAAK/5B,KAAOo9B,EACR,MAAU58B,eAAe5B,KAAKw+B,EAAMp9B,GAcpC,GAVA+5B,EAAO,IAAI0C,EAAKz8B,EADhBw6B,KAAWP,EAAgBj6B,GACGy7B,cAC9Be,EAAiBhC,GAAST,YAErBsD,EAAO3B,EAAQ2B,MAChBA,EAAKC,gBAAgBvD,GAGrBh8B,EAAKu/B,gBAAgBvD,GAGrBvB,EAAe1hB,EAAMsmB,EAAKp9B,IAC1Bu6B,EAAIzjB,EAAJyjB,GAAYN,EAAgBj6B,EAA5Bu6B,KAAsC8C,KAAMtD,IAC5CA,EAAKc,SAAWA,EAASC,gBACtB,GAAIhkB,aAAemkB,EAAgB,KAAAl8B,EACtCg7B,EAAKc,SAAW/jB,EAAIxX,OACpBi+B,KAAKD,gBAALC,UAAwBzmB,EAAI0mB,kBAAkBp7B,IAAI,SAAAiH,GAAA,OAASmzB,EAAiBhC,YAE5ET,EAAKc,SAAWA,EAASG,SACzBjB,EAAKG,KAAOpjB,EA7BvB,CAiCC6d,EAAe,OAAVuI,EAAiB,GAAQA,EAAzBA,KACHG,KAAMb,EAAiBU,KAG3Bz1B,KAAKi1B,UAAY,IAAIxF,EAAW/3B,OAAO84B,KAAKxwB,KAAK+0B,oBAIjDW,EAAiB11B,KAAKwD,YAAYwyB,gBAAgB1/B,GAAM8F,OAAO9F,GAAMua,OAAO,SAAAjP,GAAA,OAAQ0wB,EAAKyB,kBAC1E7nB,QAAQ,SAAAtK,GAAA,OAAQ0wB,EAAK/P,YACpCqQ,EAAiB8C,GAAgBxpB,QAAQ,SAAAtK,GAAA,OAAQ0wB,EAAK/P,YAC/CviB,gDAGGi2B,GACV,GAAIA,KAAQj2B,KAAK+0B,iBACb,OAAO/0B,KAAK+0B,iBAAiBkB,GAAMxD,wDAKrByD,EAAOC,GAAQ,IAAAr+B,EAAAW,EAAAuH,KAC3B60B,EAAQqB,EAAMv7B,IAAI,SAAAiH,GAAA,OAAQiD,EAAKkwB,iBAAiBkB,KAClDG,GAAQt2B,MAAIu2B,GAAeC,SAAnBx2B,UAA+B+0B,IAG3C,OADAA,EAAM3oB,QAAQ,SAAAtK,GAAA,OAAQ0wB,EAAKiE,gBAAgBH,KACpCA,mBAAuBD,EAAO1yB,MAAQ0yB,EAAO3uB,2CAGrC,IACf,IAAIgvB,SACAC,SAFW3+B,EAAAoI,UAAA5E,OAARsH,EAAQxC,MAAAtI,GAAAd,EAAA,EAAAA,EAAAc,EAAAd,IAAR4L,EAAQ5L,GAAAkJ,UAAAlJ,GAGf,IACIk9B,KACAW,EAAQjyB,EAAOjI,IAAI,SAACie,GAEhB,OADAA,EAAM,GAAG6Z,KAAO7Z,EAAM,GACfA,EAAM,KAMrB,OAJAic,EAAM3oB,QAAQ,SAAAtK,GAAA,OAAQ0wB,EAAK/P,YAC3B2R,EAAcn1B,KAAdm1B,UAAsBvC,iBAAQkD,EAAMl6B,IAAI,SAAAiH,GAAA,OAAQ0wB,EAAK4B,oBACrDsC,EAAa,IAAI/G,EAAWoF,EAAMl6B,IAAI,SAAAiH,GAAA,OAAQ0wB,EAAKE,iBAE9CxyB,KAAKk1B,aAMVuB,EAAgB7D,EAAiBiC,IACnB3oB,QAAQ,SAAAtK,GAAA,OAAgB80B,EAAanU,YACnDiU,EAAWG,OAAOF,EAAc97B,IAAI,SAAAiH,GAAA,OAAQ0wB,EAAKE,iBACjD0B,EAAcn1B,KAAdm1B,UAAsBvC,iBAAQ8E,EAAc97B,IAAI,SAAAiH,GAAA,OAAQ0wB,EAAK4B,oBAE7Dl0B,KAAK42B,0BAA0Bx2B,MAAMimB,KAAK,IAAIrZ,IAAIknB,IAAiBsC,GAC5Dx2B,OAXHA,KAAK42B,0BAA0B1C,GAC/Bl0B,KAAKk1B,cACEl1B,8DAYYk0B,EAAesC,GAAY,IAAA1+B,EAAAkI,KAE9C62B,KACAC,KAmBJ,OAlBIN,GAEoB/G,EAAWllB,WAAWvK,KAAKi1B,UAAWuB,GAC9BO,UAEpB7qB,QAAQ,SAAAtK,GAAA,OAAS0F,EAAKytB,iBAAiBnc,GAAOoe,eAG1D9C,EAAchoB,QAAQ,SAACtK,GACnBi1B,EAAS93B,KAAT83B,UAAiBj1B,EAAEqwB,UAAU0C,iBAEjCT,EAAchoB,QAAQ,SAACtK,GACnBk1B,EAAS/3B,KAAT+3B,UAAiBl1B,EAAEqwB,UAAUyC,eAGhC10B,KAAKm1B,oBAAoBC,uBAAyByB,EAAS3qB,QAAQ,SAAAtK,GAAA,OAAM4F,OACzExH,KAAKm1B,oBAAoBE,oBAAsBr1B,KAAKs1B,UAAUwB,GAAYvB,YAAaiB,IACxFx2B,KAAKi3B,2BACEj3B,oDAGgB,QAAA4B,EAAA5B,KAAA9H,EAAAgI,UAAA5E,OAAR47B,EAAQ92B,MAAAlI,GAAAO,EAAA,EAAAA,EAAAP,EAAAO,IAARy+B,EAAQz+B,GAAAyH,UAAAzH,GACvB,IACI0H,EADU+2B,EAAOv8B,IAAI,SAAAzC,GAAA,OAASi/B,EAAKpC,iBAAiBhC,KACvCp4B,IAAI,SAAAiH,GAAA,OAAS0wB,EAAMA,EAAKG,QAEzC,OADAzyB,KAAKo3B,OAALp3B,aAAeG,IACRH,qDAWP,OADAA,KAAKk1B,cACEl1B,8DAMP,OAFAA,KAAKm1B,oBAAoBC,yBACzBp1B,KAAKm1B,oBAAoBE,sBAClBr1B,0DAGazH,GAEpB,OADAyH,KAAKm1B,oBAAuB58B,EAA5ByH,gBACOA,4DAGe+yB,GACtB,OAAO/yB,KAAK+0B,iBAAiBhC,mDAvBTT,GACpB,IAAM+E,KAEN,OHdR,SAASC,EAAwBhF,EAAM+E,EAAUE,GAC7C,IAAIxE,SACJT,EAAKuB,MAAM3nB,QAAQ,SAACsrB,GAChBF,EAAuBE,EAAWH,EAAUE,KAG5CjF,EAAKmF,WAAa1E,EAAQT,EAAKE,iBAAkB+E,IAGrDF,EAASt4B,KAAKuzB,GACdiF,EAAWxE,GAAS,GAVxB,CGa+BT,EAAM+E,MACtBA,QDtI2B/7B,GCsI3B+7B,iXC+JftwB,aA5TI,SAAAnF,KAAA,SAAAA,EAAA1J,GAAA,KAAA0J,aAAA1J,GAAA,UAAAs8B,UAAA,sCAAekD,QACX13B,KAAK23B,OAAS,IAAIC,EAClB53B,KAAK63B,aACL73B,KAAK83B,0DA6BL,IAAIC,SACA7K,SAWJ,OATsB,IAAlBhtB,UAAO5E,QACPy8B,EAAa,KACb7K,4CAEA6K,0CACA7K,2CAGJltB,KAAKg4B,gBAAgBD,EAAY7K,GAC1BltB,oDASgB,IAAA4B,EACnBq2B,EACAC,EACAC,SACA1C,SACA2C,SAiBJ,OAfIl4B,UAAO5E,OAAS,GAChBm6B,0CACA0C,0CACAC,4CAEA3C,EAAQ,KACR0C,0CACAC,2CAGJH,EAAoBG,EAAQ1F,IAE5B2F,EADAH,EAAiB,IAAI1E,EAAeyE,EAAkBzwB,KACvCquB,gBAAfwC,UAAkCJ,EAAkBtF,eAEpD3yB,KAAKg4B,gBAAgBvC,4HAAU0C,EAAUD,IAClCl4B,mDAIM+3B,EAAY7K,GAEzB,OADAltB,KAAK23B,OAAOW,gBAAgBpL,EAAK6K,GAC1B/3B,sCA0FPk2B,EAAO1uB,EAAI+wB,GACX,IAQiBC,EAPbC,EAAWvC,aAAiB91B,MAAQ81B,GAASA,GAE7CwC,EAAQ14B,KAAK23B,OAAOgB,qBAAqBF,GACrCh1B,KAAM,YACN+D,OAOR,OAJI+wB,IAEAC,OAAKb,OAAOiB,kBAAkBC,uBAAuB,cAAaC,eAAlEN,UAAoFtC,IAEjFwC,qCAgBLxC,EAAO1uB,EAAI+wB,GACb,IASiBQ,EARbN,EAAWvC,aAAiB91B,MAAQ81B,GAASA,GAE7CwC,EAAQ14B,KAAK23B,OAAOgB,qBAAqBF,GACrCh1B,KAAM,YACN+D,OASR,OALI+wB,IAEAQ,OAAKpB,OAAOiB,kBAAkBC,uBAAuB,iBAAgBC,eAArEC,UAAuF7C,IAGpFwC,uCAYP,OAFA14B,KAAK63B,aACL73B,KAAK83B,MAAMx8B,OAAS,EACb0E,4CAYP,OAHAA,KAAK63B,aACL73B,KAAKg5B,QAALh5B,aAAgBA,KAAK83B,QACrB93B,KAAK83B,MAAMx8B,OAAS,EACb0E,0CAkBP,IAEIwZ,EAFAyc,SACA5mB,SAGJ,OAAQmK,EAAMtZ,UAAO5E,QACrB,KAAK,EACD26B,0CACA,MAEJ,KAAK,EACDA,0CACA5mB,0CACA,MAEJ,QACI,OAAOrP,KAGX,OAAY,IAARwZ,GACAxZ,KAAK63B,UAAY73B,KAAK83B,MAAM/4B,MAAMk3B,EAAM5mB,IAAQrP,KAAKg5B,SAAS/C,EAAM5mB,IAC7DrP,MAGJA,KAAK23B,OAAOsB,aAAahD,2CAIjB,QAAAr0B,EAAA1J,EAAA8H,KAAAlI,EAAAoI,UAAA5E,OAAP46B,EAAO91B,MAAAtI,GAAAd,EAAA,EAAAA,EAAAc,EAAAd,IAAPk/B,EAAOl/B,GAAAkJ,UAAAlJ,GAMf,OAAqB,IAAjBk/B,EAAM56B,OACC0E,OAGX23B,OAAKA,QAAOP,OAAZO,UAAsBzB,EAAMv7B,IAAI,SAAAiH,GAAA,OAAStB,EAAKq3B,OAAOuB,yBAAyBjD,EAAK,IAAKA,EAAK,QACtFj2B,4CAQP,OAAOA,KAAK23B,iDASZ,OAAO33B,KAAK23B,OAAOrhC,KAAKm8B,4CA5SbvF,GACX,OAAO,IAAIiM,GAAQnB,gBAAgB,KAAM9K,SA+SjDnmB,GCzUAvN,uFCFA/C,OAAOD,QAAU,SAASC,QAoBzB,OAnBKA,OAAO2iC,kBACX3iC,OAAO4iC,UAAY,aACnB5iC,OAAO6iC,SAEF7iC,OAAOghB,WAAUhhB,OAAOghB,aAC7B/f,OAAOC,eAAelB,OAAQ,UAC7BmB,YAAY,EACZC,IAAK,SAAAA,MACJ,OAAOpB,OAAOQ,KAGhBS,OAAOC,eAAelB,OAAQ,MAC7BmB,YAAY,EACZC,IAAK,SAAAA,MACJ,OAAOpB,OAAOO,KAGhBP,OAAO2iC,gBAAkB,GAEnB3iC,sVCdR,SAAS8iC,uBAAuBrM,KAAO,OAAOA,KAAOA,IAAI90B,WAAa80B,KAAQkD,QAAWlD,KAJzFx1B,OAAOC,eAAenB,QAAS,cAC3ByB,OAAO,IAKX,IAEIuhC,MAAQD,uBAFDE,oBAAQ,IAMfC,mBAAqBH,uBAFDE,oBAAQ,IAI5BE,MAAQH,MAAK,QAAYI,KAAuB,oBAAXhjC,OAAyBA,YAASwC,GACvEygC,IAAMF,MAAM3I,IAAI8I,SAChBjR,EAAI8Q,MAAM3I,IAAI3f,KACd9D,IAAMsb,EAAEtb,IACRwsB,MAAQlR,EAAEkR,MAEVC,kBAAqBC,IAAK,UAC1BC,gBAAkBP,MAAMQ,qBACxBC,oBAAsBF,gBAAgBG,SAAW,EAAI,IAsBzD,SAASC,kBAAkBC,GAAIC,UAAWC,YAAap8B,SACnD,IAAIq8B,QACAzE,KACA1oB,IACAotB,aACAC,eAAgB,EAChB5T,MAAQsT,kBAAkBtT,MAE9B,QAAkB,IAAPuT,IAAoC,WAAdtM,QAAOsM,IAAxC,CAwBA,IAAKtE,QApBD0E,aAAe3T,MAAMuT,MACrBI,aAAaE,UAGjB7T,MAAMuT,IAAMv6B,MACZ3B,QAAUA,aACFy8B,cAAgBhT,SAASva,IAAMlP,QAAQy8B,eAAiBvtB,IAAMosB,MAAMoB,qBAEnD,iBAAdP,YACPA,UAAYX,IAAImB,eAAeR,aAGnCE,QAAUf,MAAMsB,gBAAgBT,YACxBU,UAAYvB,MAAMwB,YAEtBjB,gBAAgBkB,aAAelB,gBAAgBmB,MAASX,QAAQY,cAAiBZ,QAAQa,eACzFX,eAAgB,GAGpBF,QAAQQ,UAAY,GACPvB,MAAM6B,qBACfd,QAAQe,MAAMxF,MAAQ0D,MAAM6B,qBAAqBvF,MAGrDj2B,KAAKu6B,GAAKA,GACVv6B,KAAK07B,gBAAkBhB,QAEvB16B,KAAK27B,kBAAoB,IAAIjC,mBAAkB,QAAYgB,QAASE,cAAe,IACnF56B,KAAK47B,iBAAmBnB,YACxBz6B,KAAK67B,OAAQ,EACb77B,KAAKy7B,SACLz7B,KAAK3B,QAAUA,QAEf2B,KAAK87B,YAaTxB,kBAAkByB,YAAc,SAAUC,YAUtC,OATAA,WAAaA,gBAEG9gC,KAEsB,iBAApB8gC,WAAW9gC,OACzB8gC,WAAW9gC,KAAO8gC,WAAW9gC,KAAKutB,YAFlCuT,WAAW9gC,KAAO,GAKtB8gC,WAAWC,MAAQD,WAAW9gC,KAAKghC,MAAM,oBAClCF,YAIX1B,kBAAkBtT,SAIlBsT,kBAAkBxhC,UAAUqjC,qBAAuB,SAAUjhC,KAAMkhC,oBAAqB9gC,QACpF,IAAK0E,KAAK67B,MACN,OAAO,EAGX,IAAIQ,KACAC,MACAC,GACAC,IACAC,YACAC,qBACAC,sBAAwB38B,KAAK3B,QAAQy8B,cACrCN,UAAYx6B,KAAK48B,WACjBnB,MAAQz7B,KAAKy7B,UACboB,MAAQ78B,KAAK88B,iBAAmB98B,KAAK88B,mBACrCC,iBAAmB/8B,KAAKg9B,oBAAsBh9B,KAAKg9B,sBACnDC,UAAY/hC,MAAQugC,MAAMyB,UArHtB,KAqH4CzB,MAAM0B,YArHlD,KAqH0E1B,MAAM2B,YArHhF,KAqHwG3B,MAAM4B,WArH9G,IAsHJC,cAAgBpiC,KAAO,QAAUugC,MAAMyB,UAtHnC,KAsHyDzB,MAAM0B,YAtH/D,KAsHuF1B,MAAM2B,YAtH7F,KAsHqH3B,MAAM4B,WAtH3H,IA4IR,OApBArD,iBAAiB9+B,QAAUA,KAAO8+B,iBAAiB9+B,OAE9CkhC,yBAGqDhjC,KAAjDsjC,qBAAuBG,MAAMS,kBAC9B9C,UAAUU,UAAYhgC,KAAKqiC,OAASriC,KAAKqiC,OAAOjiC,QAAU8E,MAAM9E,OAAS,GAAGT,KAAKK,MACjFqhC,GAAK/B,UAAUe,YAEff,UAAUU,UAAYhgC,KACtBshC,IAAMhC,UAAUe,YAEhBmB,qBAAuBG,MAAMS,gBAAkBf,GAAKjhC,OAASkhC,MAAQlhC,OAAS,GAC9EyhC,iBAAiBh+B,KAAKu+B,eAClBP,iBAAiBzhC,OAASqhC,8BACnBE,MAAME,iBAAiBS,UAZtCd,qBAAuB,GAiBvBD,YAAcI,MAAMI,aACpBX,MAAQG,YAAYP,MAAM,MAEtBuB,MAAO1tB,WAAWusB,MAAM,GAAI,IAC5BoB,OAAQ3tB,WAAWusB,MAAM,GAAI,OAIrC9B,UAAUU,UAAYhgC,KAEtBmhC,MACIqB,OAAQlD,UAAUc,aAClBmC,MAAOjD,UAAUe,YAAcmB,sBAGnCG,MAAMI,WAAaZ,KAAKoB,MAAQ,IAAMpB,KAAKqB,OAC3CX,iBAAiBh+B,KAAKk+B,WAClBF,iBAAiBzhC,OAASqhC,8BACnBE,MAAME,iBAAiBS,SAG3BnB,OAIX/B,kBAAkBxhC,UAAU6kC,YAAc,WACtC,IAAIC,QAAU59B,KAAK69B,cACfrD,UAAYx6B,KAAK48B,WACjBkB,QAAUF,QAAQE,QAEtB,OAAIA,QACO,SAAU3+B,KACb,IAAI4+B,KAAMN,MASV,OAPAK,QAAQE,YAAc7+B,KAEtBs+B,OADAM,KAAOD,QAAQG,WACFR,MAAQrD,qBACT,IACRqD,MAAQM,KAAKN,OAGVA,OAGJ,SAAUt+B,KAEb,OADAq7B,UAAUU,UAAY/7B,IACfq7B,UAAUe,cAkB7BjB,kBAAkBxhC,UAAUgjC,SAAW,SAAUL,OAC7C,OAAKz7B,KAAK67B,MAMNJ,QAAUz7B,KAAKy7B,OAAUz7B,KAAKk+B,cAI7BzC,QACDA,MAAQz7B,KAAKy7B,OAGjB9B,MAAMwE,cAAc1C,OACpBz7B,KAAKy7B,MAAQA,MAEbz7B,KAAK69B,cAAgBO,MAAQp+B,KAAK27B,kBAAkB9jC,IAAI4jC,OAEpDz7B,KAAK69B,eACL79B,KAAK48B,WAAawB,MAAM9L,KACxBtyB,KAAKq+B,SAAWD,MAAME,QACtBt+B,KAAKu+B,OAASH,MAAMI,UACpBx+B,KAAKy+B,YAAcL,MAAMM,WACzB1+B,KAAKk+B,cAAe,GAEpBl+B,KAAKk+B,cAAe,EAGjBl+B,WAvBP,EALWA,KAGX,IAAIo+B,OAmCR9D,kBAAkBxhC,UAAU6lC,sBAAwB,SAAUlE,aAC1D,OAAKz6B,KAAK67B,OAGV77B,KAAK47B,iBAAmBnB,YACjBz6B,MAHIA,MA4Bfs6B,kBAAkBxhC,UAAU8lC,aAAe,SAAU1jC,KAAM2jC,SAAUC,UAAWC,QAC5E,IAAK/+B,KAAK67B,MACN,OAAO,OAGEziC,IAAT8B,MAA+B,OAATA,KACtBA,KAAO,GACgB,iBAATA,OACdA,KAAOA,KAAKutB,YAGhB,IAAIjP,IACAwlB,QACAC,QACAC,QACAC,gBACAC,SACAC,SACAC,UACAC,aACAC,YACAC,SACAC,SACAC,YACAC,WACAC,qBACAC,QACAC,EACArW,EACAsW,SACA99B,KACA+9B,IACAC,mBACAC,gBACAC,OACAC,gBACAC,2BACAC,YAAa,EACbC,YAAc,EACdC,UAAY,EACZC,WAAa,EACbC,iBAAmB,EACnBC,SAAW,EACXC,UAAY,EACZC,cACA9pC,EAAI,EACJ+pC,YAAc/gC,KAAK47B,gBAAkB,GAAK,MAC1C8C,WAAa1+B,KAAKy+B,YAClBH,QAAUt+B,KAAKq+B,SACf7D,UAAYx6B,KAAK48B,WACjBwB,MAAQp+B,KAAK69B,cACbmD,cAAgB5C,MAAM4C,cACtBC,SAAW7C,MAAM6C,SACjBC,gBACAC,WAAa,EACbC,YAAc,EACdC,eAAiB,EACjBC,SAAW,SAASA,SAASniC,KAI7B,IAFA,IAAIoiC,GAAK,KACLvqC,GAFJmI,IAAMA,IAAIqiC,QAAQ,SAAU,KAEhBlmC,OACLimC,GAAGE,KAAKtiC,IAAIuiC,OAAO1qC,GAAK,MAC/B,OAAOmI,IAAIgzB,MAAM,EAAGn7B,EAAI,IAExB2qC,YACAzmC,KAAMA,KACN2jC,SAAUA,SACVC,UAAWA,UACXrB,MAAO,KACPC,OAAQ,KACRkE,aAAc,KACdC,cAAe,KACfC,QAAS5mC,KACT6mC,aAAa,GAYjB,GATArC,SAAW1/B,KAAK29B,cAKZmB,YAAcJ,aACdI,WAAa,KAGbtE,UAAW,CACX,IAAKN,gBAAgBU,cAAe,CAmBhC,IAlBA2F,WAAa5G,MAAMqI,YAAYP,KAAKvmC,QAahCs/B,UAAUU,UAAYhgC,KACtBymC,WAAWC,aAAevC,SAAW7E,UAAUe,YAC/CoG,WAAWE,cAAgBvC,UAAY9E,UAAUc,eAVjD4D,QAAUhkC,KAAKsmC,QAAQ7H,MAAMsI,UAAW,SAAU5U,OAC9C,MAAiB,SAAVA,MAAmB,IAAM,MAEpCwS,qBAAuB7/B,KAAKkiC,WAAWhD,SAAS,GAEhDyC,WAAWC,aAAevC,SAAWQ,qBAAqBpC,MAC1DkE,WAAWE,cAAgBvC,UAAYO,qBAAqBnC,QAO5D4B,WAAaR,WAAaO,UAAYR,SAGtC,OAFA8C,WAAWlE,MAAQkE,WAAWC,aAAevC,SAC7CsC,WAAWjE,OAASiE,WAAWE,cAAgBvC,UACxCqC,WAGX,GAAIjD,WAAaI,UAIb,OAHA6C,WAAWzmC,KAAO,GAClBymC,WAAWlE,MAAQkE,WAAWC,aAAe,EAC7CD,WAAWjE,OAASiE,WAAWE,cAAgB,EACxCF,WAQf,GAHAzmC,KAAOomC,SAASpmC,MAAMsmC,QAAQ,SAAU,KACxCrC,gBAAkBn/B,KAAK47B,gBAAkBiD,SAAWA,SAAWmC,eAE1DT,WAAY,CAab,GAXA/mB,KADAsnB,WAAa5lC,KAAKghC,MAAM,KACP5gC,OACjB0jC,QAAU,GAAIC,WACdQ,SAAWqB,WAAW,GAElB9gC,KAAKu+B,OAAOkB,UACZO,SAAWhgC,KAAKu+B,OAAOkB,UAAUhC,OAEjCuC,SAAWN,SAASD,UACpBz/B,KAAKu+B,OAAOkB,WAAchC,MAAOuC,WAGjCb,gBAAkBa,SAElBhpC,GADAioC,QAAU/jC,KAAKinC,OAAO,EAAGxI,MAAMyI,qBAAqBlnC,KAAMikC,gBAAiBn/B,OAAOk8B,MAAM,KAC5E5gC,WACT,IAAI0kC,SAAWnB,SAGlB,OAFA8C,WAAWzmC,KAAO,GAClBymC,WAAWlE,MAAQkE,WAAWC,aAAeD,WAAWjE,OAASiE,WAAWE,cAAgB,EACrFF,WACAZ,eACP5B,gBAAkBN,SAAW,EAAIoC,UACXjB,SAClBe,YAAc,MAEd5B,gBAAkBN,SAAWoC,UACPjB,SAClBe,YAAc,KAEd5B,gBAAkB,EAClB4B,YAAc,KAQ1B,GAHAH,SAAWlB,SAAST,QAAQpkC,KAAK,KACjCgmC,UAAY7gC,KAAKy+B,YAEbM,OAAQ,CACR,KAAO/nC,EAAIwiB,IAAKxiB,GAAK,EAajB,GAZAyoC,SAAWR,QAAQjoC,GAAK8pC,WAAW9pC,GAC/BgJ,KAAKu+B,OAAOkB,UACZO,SAAWhgC,KAAKu+B,OAAOkB,UAAUhC,OAE5BoC,uBAA0BG,SAAWH,qBAAqBwC,UAAU5C,aACrEO,SAAWN,SAASD,WAExBz/B,KAAKu+B,OAAOkB,WACRhC,MAAOuC,YAGfY,UAAYZ,UACGb,kBACNH,UACDA,QAAUC,QAAQ9M,MAAM,GAAI,GAAGt3B,KAAK,KAEpC+lC,SAAW/B,UAKX,OAJA8C,WAAWzmC,KAAOomC,SAAStC,SAAW+B,YACtCY,WAAWW,SAAWX,WAAWG,QACjCH,WAAWlE,MAAQiC,SAASiC,WAAWzmC,MACvCymC,WAAWjE,OAAS19B,KAAKy+B,YAClBkD,WAQnB,OAHAA,WAAWzmC,KAAO+jC,QAAQpkC,KAAK,IAC/B8mC,WAAWlE,MAAQmD,SACnBe,WAAWjE,OAAS19B,KAAKy+B,YAClBkD,WAEP,KAAO3qC,EAAIwiB,IAAKxiB,GAAK,EAkBjB,GAhBiB,OADjByoC,SAAWR,QAAQjoC,GAAK8pC,WAAW9pC,KACVsnC,UACrBmB,SAAW,UAGXz/B,KAAKu+B,OAAOkB,UACZO,SAAWhgC,KAAKu+B,OAAOkB,UAAUhC,OAE5BoC,uBAA0BG,SAAWH,qBAAqBwC,UAAU5C,aACrEO,SAAWN,SAASD,WAExBz/B,KAAKu+B,OAAOkB,WACRhC,MAAOuC,YAGfY,UAAYZ,UAEGb,kBACNH,UACDA,QAAUC,QAAQ9M,MAAM,GAAI,GAAGt3B,KAAK,KAEpC+lC,SAAW/B,UAAU,CA2BrB,GAzBA6B,UAAYxlC,KAAKinC,OAAO,EAAGlD,QAAQ3jC,QAAQinC,YAAY,KACvD9B,SAAWvlC,KAAKinC,OAAO,EAAGlD,QAAQ3jC,QAAQinC,YAAY,KAClD7B,UAAYC,iBACZC,SAAWlB,SAAST,QAAQ9M,MAAMwO,gBAAkB,EAAGD,WAAW7lC,KAAK,KACvEokC,QAAQrY,OAAO8Z,UAAW,EAAG,SAC7BC,gBAAkBD,UAClBnB,aAAemB,UAAY,GACpBD,SAAWE,iBACdF,WAAaxB,QAAQ3jC,OAAS,GAC9BslC,SAAWlB,SAAST,QAAQ9M,MAAMwO,gBAAkB,EAAGD,WAAW7lC,KAAK,KACvEokC,QAAQrY,OAAO6Z,SAAU,EAAG,YAE5BG,SAAWlB,SAAST,QAAQ9M,MAAMwO,gBAAkB,EAAGD,WAAW7lC,KAAK,KACvEokC,QAAQrY,OAAO6Z,SAAU,EAAG,WAEhCE,gBAAkBF,SAClBlB,aAAekB,SAAW,IAE1BxB,QAAQrY,OAAOqY,QAAQ3jC,OAAS,EAAG,EAAG,QAAUwlC,WAAW9pC,IAC3DqqC,cAAgBpC,QAAQ3jC,OAAS,EACjCslC,SAAWlB,SAAST,QAAQ9M,MAAMwO,gBAAkB,EAAGU,cAAgB,GAAGxmC,KAAK,KAC/E8lC,gBAAkBU,cAClB9B,aAAevoC,IAEnB6pC,WAAa7gC,KAAKy+B,aACFK,UAMZ,OALA6C,WAAWzmC,KAAOomC,SAAStC,SAAW+B,YACtCY,WAAWW,SAAWX,WAAWG,QAEjCH,WAAWlE,MAAQoB,SACnB8C,WAAWjE,OAASmD,UAAY7gC,KAAKy+B,YAC9BkD,WAEPnB,YAAcjzB,IAAIizB,YAAaI,UAC/B5B,QAAU,KACVQ,YAAc7F,MAAMyI,qBAAqBlnC,KAAKinC,OAAO5C,cAAeJ,gBAAiBn/B,MACrF4gC,SAAWlB,SAASxkC,KAAKinC,OAAO5C,aAAcC,aAAe,IACzDP,QAAQ3jC,OAASikC,aAAeC,cAEhCxoC,GADAioC,QAAUA,QAAQ7iC,OAAOlB,KAAKinC,OAAOlD,QAAQ3jC,OAAQikC,aAAeC,YAAcP,QAAQ3jC,QAAQ4gC,MAAM,MAC5F5gC,OAAS,GAYzC,OALAklC,YAAcjzB,IAAIizB,YAAaI,UAE/Be,WAAWzmC,KAAO+jC,QAAQpkC,KAAK,IAC/B8mC,WAAWlE,MAAQ+C,YACnBmB,WAAWjE,OAASmD,UACbc,WAWX,IARAvC,SAAWlkC,KAAKsmC,QAAQ7H,MAAM6I,iBAAkB,MAEhDtnC,MADAA,KAAOA,KAAKsmC,QAAQ7H,MAAM6I,iBAAkB7I,MAAM8I,uBACtCjB,QAAQ,iBAAkB,iBAAmB7H,MAAM+I,iBAAkB,IAAK/I,MAAMgJ,oBAAoB9nC,KAAK,IAAM,eAE3H2/B,UAAUU,UAAYhgC,KAIjB6kC,EAAI,EAAGrW,GAFZoW,QAAUtF,UAAUN,gBAAgB0I,iBAAiB1I,gBAAgB2I,sBAE7CvnC,OAAQykC,EAAIrW,EAAGqW,GAAK,EACxC79B,KAAO49B,QAAQC,IAEX7F,gBAAgB4I,gBAAkBnJ,MAAMoJ,aAAatB,KAAKv/B,KAAK8gC,aAEnD,MADZ/C,IAAM/9B,KAAKg5B,aAEK,MAAR+E,IACAmB,WAAaF,aAAa5lC,OACX,MAAR2kC,MACPkB,UAAYD,aAAa5lC,QAG7B4lC,aAAaniC,MACTkkC,SAAU7B,WACV8B,QAAS/B,UACTj/B,KAAMA,OAEV4+B,WAAW/hC,KAAKkhC,MAS5B,GAJAjpC,EAAI,EACJwiB,IAAM0nB,aAAa5lC,QACnB0kC,SAAWkB,aAAa,GAAGh/B,KAAKq5B,aAEjBsD,SAIX,OAHA8C,WAAWzmC,KAAO,GAClBymC,WAAWlE,MAAQkE,WAAWC,aAAeD,WAAWjE,OAASiE,WAAWE,cAAgB,EAErFF,WAoBX,GAnBW3B,SAAWb,kBAAoBn/B,KAAK47B,mBAE3CuD,gBAAkBN,SAAW,EAAIoC,UACXjB,SAClBe,YAAc,MAEd5B,gBAAkBN,SAAWoC,UACPjB,SAClBe,YAAc,KAEd5B,gBAAkB,EAClB4B,YAAc,KAK1BpB,YAAcuB,aAAa,GAAGh/B,KAAKihC,WACnCvD,WAAasB,aAAa,GAAGh/B,KAAKkhC,UAE9BrE,OACA,KAAO/nC,EAAIwiB,IAAKxiB,GAAK,GAEjBkpC,oBADAh+B,KAAOg/B,aAAalqC,GAAGkL,MACGihC,WAAaxD,YAAcz9B,KAAKq5B,aAEjC4D,kBAChBmB,6BACDA,2BAA6BtpC,GAE7BwjC,UAAUe,YAAcsD,WACxBwB,gBAAkBrpC,EAClBA,EAAIwiB,WAKhB,KAAOxiB,EAAIwiB,IAAKxiB,GAAK,EAEjBmpC,iBADAj+B,KAAOg/B,aAAalqC,GAAGkL,MACAo5B,cAAgBp5B,KAAKkhC,UAAYxD,YAGxDQ,OAAS,MAFTF,mBAAqBh+B,KAAKihC,WAAaxD,YAAcz9B,KAAKq5B,aAIjC4D,iBAChBmB,6BACDA,2BAA6BtpC,GAG7BkpC,mBAAqBrB,WACrB6B,UAAYQ,aAAalqC,GAAGisC,SAC5BxC,SAAWS,aAAalqC,GAAGksC,QACvBxC,UAAYC,iBACZO,aAAaR,WAAWx+B,KAAKg5B,UAAY,QACzCyF,gBAAkBD,WACXD,SAAWE,iBAGdO,aAAaT,UAAUv+B,KAAKg5B,UAF5BuF,WAAazpC,EAE2B,SAEA,SAE5C2pC,gBAAkBF,UAElBv+B,KAAKmhC,WAAWC,aAAalD,OAASvG,IAAI0J,cAAc,MAAOrhC,MAI/DA,KAAKo5B,aAAep5B,KAAKkhC,UAAYtE,WAEjCsB,OACAA,OAAOiD,WAAW3c,YAAY0Z,QACvBO,kBAAoBF,SAC3BS,aAAaT,UAAUv+B,KAAKg5B,UAAY,IAExCgG,aAAaR,WAAWx+B,KAAKg5B,UAAY,IAE7CmF,gBAAkBrpC,EAElBA,EAAIwiB,KAEJ8mB,2BAA6B,OAKjCH,gBAAkBrB,YAClBuB,gBAAkBrpC,EAClBA,EAAIwiB,KAMpB,GAAI6mB,gBAAkB7mB,IAAK,CAOvB,IALAmoB,WAAWI,aAAc,EAGzBzB,2BAA6BA,4BAA0DD,gBAElFrpC,EAAIwiB,IAAM,EAAGxiB,GAAKspC,2BAA4BtpC,GAAK,GACpDkL,KAAOg/B,aAAalqC,GAAGkL,MAElBmhC,WAAW3c,YAAYxkB,MAGhC,KAAOlL,GAAK,EAAGA,GAAK,EAChBkL,KAAOg/B,aAAalqC,GAAGkL,KACnBy3B,MAAM6J,eAAe/B,KAAKv/B,KAAK8gC,WAE/B9gC,KAAKmhC,WAAW3c,YAAYxkB,MAE5BlL,EAAI,EAgBpB,OAVI2qC,WAAWzmC,KAAOs/B,UAAUU,UAAUsG,QAAQ7H,MAAM8J,gBAAiB,MAAMjC,QAAQ,WAAY,KAC3FG,WAAWI,cACXJ,WAAWzmC,MAAQ6lC,YACnBY,WAAWW,SAAWlD,UAI9BuC,WAAWjE,OAASlD,UAAUc,aAC9BqG,WAAWlE,MAAQjD,UAAUe,YAEtBoG,WAGP,OADAA,WAAW+B,MAAQ,IAAI/kC,MAAM,qBACtBgjC,YAoBfrH,kBAAkBxhC,UAAUopC,WAAa,SAAUhnC,KAAMyoC,yBACrD,IAAK3jC,KAAK67B,MACN,OAAO,EAGX,IAAI+H,QACAC,OACAC,MACA9sC,EACAC,EACA8sC,eAAiB,EACjBrG,OAAS,EACTsG,iBAEJ,IAAKL,wBACD,OAAO3jC,KAAKm8B,qBAAqBjhC,MAKrC,IAAKlE,EAAI,EAAGC,GADZ2sC,QAAU1oC,KAAKghC,MAAM,KACG5gC,OAAQtE,EAAIC,EAAGD,IACnC6sC,OAASD,QAAQ5sC,GACjB8sC,MAAQ9jC,KAAKm8B,qBAAqB0H,QAAQ,EAAMD,QAAQtoC,QACxDoiC,OAASnwB,IAAImwB,OAAQoG,MAAMpG,QAC3BqG,gBAAkBD,MAAMrG,MACxBuG,cAAcH,QAAUC,MAAMrG,MAGlC,OACIA,MAAO1D,MAAMgK,gBACbrG,OAAQA,OACR2E,UAAW2B,gBAOnB1J,kBAAkBxhC,UAAU+hC,QAAU,WAClC,OAAK76B,KAAK67B,OAIV77B,KAAK27B,mBAAqB37B,KAAK27B,kBAAkBd,SAAW76B,KAAK27B,kBAAkBd,iBAE5E76B,KAAK48B,kBACL58B,KAAKq+B,gBACLr+B,KAAKu+B,cACLv+B,KAAK27B,yBACL37B,KAAK69B,qBACL79B,KAAKu6B,UACLv6B,KAAKy7B,aACLz7B,KAAK07B,uBACL17B,KAAK47B,gBAEL57B,MAfIA,MAkBfxJ,QAAO,QAAc8jC,kBACrB7jC,OAAOD,QAAUA,QAAO,mEC7yBxBkB,OAAOC,eAAenB,QAAS,cAC9ByB,OAAO,IAER,IAAIgsC,KACHrK,KAAM,SAASA,KAAK5I,KACnB,IAAI6I,IAAM7I,IAAI8I,SAEVoK,UADMlT,IAAImT,UACMD,UAEhBE,KAAO/yB,KAAK+yB,KACZC,MAAQhzB,KAAKgzB,MAEbC,aAAe,2BACfC,eAAiBD,aAAe,YAChC5B,iBAAmB4B,aAAe,MAkLtC,OA/KAL,KACCjT,IAAKA,IAELuT,eAAgBA,eAEhB7B,iBAAkBA,iBAElBC,mBATwB2B,6BAWxBvJ,qBAAsB,IAEtBgI,aAAc,IAAI/nC,OAAO,KAAO0nC,iBAAmB,MAEnDc,eAAgB,IAAIxoC,OAAO,kCAE3BwnC,iBAAkB,2CAElBC,qBAAsB,kBAAoBC,iBAAmB,cAE7De,gBAAiB,IAAIzoC,OAAO,kBAAoB0nC,iBAAmB,kCAAmC,MAEtGV,YAAa,IAAIhnC,OAAO,mBAAoB,KAE5CinC,UAAW,aAEXuC,eAAgB,WAEhBrJ,WAAY,MAGZK,sBACCiJ,SAAU,WACVC,IAAK,UACLC,WAAY,SACZC,QAAS,MACTnH,MAAO,MACPC,OAAQ,MACRmH,SAAU,UAIXC,gBACCC,KAAM,OACN5H,WAAY,cACZ6H,cAAe,cACf5H,WAAY,cACZ6H,cAAe,cACf/H,SAAU,YACVgI,YAAa,YACbxG,WAAY,cACZyG,cAAe,cACf9H,UAAW,aACX+H,aAAc,cAIfjL,mBAAoB,SAASA,qBAC5B,IAAIyI,gBAAiBC,oBAAqBC,eAY1C,OAVIjJ,IAAIwL,wBACPzC,gBAAkB,yBAClBC,oBAAsBH,iBACtBI,gBAAiB,IAEjBF,gBAAkB,uBAClBC,oBAAsB,OACtBC,gBAAiB,IAIjBzH,KAAM,QAAQoG,KAAKyC,aAAelT,IAAIsU,MACtCC,OAAQC,QAAQxU,IAAIyU,UAAY5L,IAAI6L,eAAeC,WAAW,oDAAqD,QACnHvK,WAAY,IAAIpgC,OAAO,aAAaymC,KAAKyC,WACzC7J,SAAU,IAAIr/B,OAAO,iBAAiBymC,KAAKyC,WAC3CtB,gBAAiBA,gBACjBC,oBAAqBA,oBACrBC,eAAgBA,iBAWlB7H,gBAAiB,SAASA,gBAAgB2K,iBACzC,IAAIC,KAAMrL,UAEV,GAAIoL,kBAAoBA,gBAAgBrK,aAAeqK,gBAAgBtK,eACtE,GAAIsK,gBAAgBE,YAKnB,OAJAF,gBAAgBE,YAAYtL,UAAYX,IAAI0J,cArGtC,QAsGN/I,UAAUwI,UAAYuB,eACtB/J,UAAUuL,aAAa,cAAe,QACtCvL,UAAUuL,aAAa,OAAQ,gBACxBvL,eAKR,IAFAqL,KAAOhM,IAAImM,qBAAqB,QAAQ,KAE5BH,KAAKC,YAOhB,OANAtL,UAAYX,IAAI0J,cA/GV,QAgHIP,UAAYuB,eACtB/J,UAAUuL,aAAa,cAAe,QACtCvL,UAAUuL,aAAa,OAAQ,gBACL,EAC1BF,KAAKC,YAAYtL,WACVA,WAMV4H,qBAAsB,SAASA,qBAAqBlnC,KAAM2jC,SAAUoH,IACnE,IAAK/qC,OAASA,KAAKI,OAClB,OAAO,EAGR,IAAIiP,WACAm1B,SAAWuG,GAAGtI,cACduI,QAAU,EACVC,UAAY,EACZ9G,SAAWK,SAASxkC,MACpBkrC,SAAW/G,SAAWnkC,KAAKI,OAK/B,GAHAiP,WAAas0B,SACbqH,QAAU9B,KAAKvF,SAAWuH,UAEtB/G,SAAWR,SACd,OAAO3jC,KAAKI,OAAS,EAQtB,IALI4qC,QAAUhrC,KAAKI,SAClBiP,WAAas0B,SAAWQ,SACxB6G,QAAUhrC,KAAKI,QAGTiP,WAAa,GAAG,CAGtB,GAFAA,WAAas0B,SAAWa,SAASxkC,KAAKinC,OAAO,EAAG+D,YAChDC,UAAY9B,MAAM95B,WAAa67B,WAI9B,OAAOF,QAFPA,SAAWC,UAMb,KAAO57B,WAAa,GAAG,CAGtB,GAFAA,WAAas0B,SAAWa,SAASxkC,KAAKinC,OAAO,EAAG+D,YAChDC,UAAY9B,MAAM95B,WAAa67B,WAI9B,OAAOF,QAFPA,SAAWC,UAKb,OAAOD,SAWR/H,cAAe,SAASA,cAAckI,UACrC,IAAIC,MAAQD,SAASnJ,SAAWmJ,SAASnJ,UAAY,OAErD,OADAmJ,SAAS3H,WAAa2H,SAAS3H,YAAc2H,SAAS,gBAAwC,IAAtBte,SAASue,MAAO,IAAY,KAC7FD,aAQX7vC,QAAO,QAAcytC,IACrBxtC,OAAOD,QAAUA,QAAO,wvCCvMxB,IAAM+vC,KAAO9M,oBAAQ,IAErBhjC,OAAOD,QAAU+vC,KAAKnW,QAAUmW,KAAKnW,QAAUmW,gECE/C,IAII5M,MANJ,SAASJ,uBAAuBrM,KAAO,OAAOA,KAAOA,IAAI90B,WAAa80B,KAAQkD,QAAWlD,KAI7EqM,CAFDE,oBAAQ,IAIF,QAAYG,KAAuB,oBAAXhjC,OAAyBA,YAASwC,GACvEygC,IAAMF,MAAM3I,IAAI8I,SAChBI,gBAAkBP,MAAMQ,qBACxBC,oBAAsBF,gBAAgBG,SAAW,EAAI,IAEzD,SAASmM,iBAAiB9K,gBAAiBd,cAAe6L,eACtD,IAAIC,IAGJD,eADAA,cAAgBA,cAAgB,EAAIA,cAAgB,GACpB,GAAKA,cAAgB,GAErDzmC,KAAKymC,cAAgBA,cACrBzmC,KAAKshB,MAAQ,KACbthB,KAAKuhB,KAAO,KACZvhB,KAAK2mC,cACL3mC,KAAK1E,OAAS,EACd0E,KAAK4mC,SAAWlL,gBAEZd,iBACA8L,IAAM7M,IAAIgN,gBAAgB,6BAA8B,QACpDC,eAAe,6BAA8B,QAAS,gCAC1DJ,IAAII,eAAe,6BAA8B,SAAU,KAC3DJ,IAAII,eAAe,6BAA8B,QAAS,KAC1D9mC,KAAK+mC,QAAUL,IACf1mC,KAAK4mC,SAASd,YAAYY,MAIlCF,iBAAiB1tC,UAAUjB,IAAM,SAAU4jC,OACvC,IAAIuL,KACAzuC,IACA0uC,aACAN,WAAa3mC,KAAK2mC,WAClBntB,IAAMxZ,KAAK1E,OACXiS,IAAMvN,KAAKymC,cACXS,OAAS,GAEb,IAAK3uC,OAAOohC,MAAMmL,oBACK1rC,IAAfqiC,MAAMljC,OACN2uC,QAAUvN,MAAMmL,eAAevsC,KAAO,IAAMkjC,MAAMljC,KAAO,KAIjE,IAAK2uC,OACD,OAAO,EAGX,GAAID,aAAeN,WAAWO,QACtBlnC,KAAKshB,QAAU2lB,eACfA,aAAaE,OAASF,aAAaE,KAAKnlC,KAAOilC,aAAajlC,MAC5DilC,aAAajlC,OAASilC,aAAajlC,KAAKmlC,KAAOF,aAAaE,MAC5DF,aAAajlC,KAAOhC,KAAKshB,MACzB2lB,aAAajlC,KAAKmlC,KAAOF,aACzBjnC,KAAKuhB,OAAS0lB,eAAiBjnC,KAAKuhB,KAAO0lB,aAAaE,MACxDF,aAAaE,KAAO,KACpBnnC,KAAKshB,MAAQ2lB,kBAEd,CACH,GAAIztB,KAAOjM,IAGP,IAFAy5B,KAAOxtB,IAAMjM,IAAM,EAEZy5B,QACHhnC,KAAKonC,gBAAgBpnC,KAAKuhB,MAGlC0lB,aAAejnC,KAAKqnC,aAAaH,QAGrC,OAAOD,cAGXT,iBAAiB1tC,UAAUuuC,aAAe,SAAUH,QAChD,IAAI5U,KAAMkI,UA8DV,OA5DAx6B,KAAK2mC,WAAWO,QAAU1M,WACtBx4B,KAAM,KACNmlC,KAAM,KACN7U,KAAM,KACN0O,cAAe,EACftC,WAAY,EACZuC,SAAU,EACVqG,aAAc,EACdJ,OAAQA,OACR1I,cAKJhE,UAAUx4B,KAAOhC,KAAKshB,MACtBkZ,UAAUx4B,OAASw4B,UAAUx4B,KAAKmlC,KAAO3M,WACzCx6B,KAAKshB,MAAQkZ,UACRx6B,KAAKuhB,OACNvhB,KAAKuhB,KAAOiZ,WAEhBx6B,KAAK1E,QAAU,EAEfg3B,KAAOkI,UAAUlI,KAAOuH,IAAI0J,cAAc,OAC1CvjC,KAAK4mC,SAASd,YAAYxT,MAEtB4H,gBAAgBmB,OAASnB,gBAAgBqL,OACzCjT,KAAKmJ,MAAMsK,aAAa,UAAWmB,QAEnC5U,KAAKyT,aAAa,QAASmB,QAG/B5U,KAAKyT,aAAa,cAAe,QACjCzT,KAAKyT,aAAa,OAAQ,gBAC1BzT,KAAKmJ,MAAM8L,QAAU,eAErBjV,KAAK4I,UAAYvB,MAAMwB,WACvBX,UAAUkE,WAAapM,KAAKgJ,aAC5Bd,UAAU8M,aAAehV,KAAKiJ,YAAc,EAExCrB,gBAAgBU,gBAChBtI,KAAOkI,UAAUsD,QAAUjE,IAAIgN,gBAAgB,6BAA8B,SACxEd,aAAa,QAASmB,QAC3BlnC,KAAK+mC,QAAQjB,YAAYxT,MAEzBA,KAAK0L,YAAcrE,MAAMwB,WACzBX,UAAUkE,WAAapM,KAAK2L,UAAUP,OACtClD,UAAU8M,cAAgBhV,KAAK2L,UAAUR,MAAQrD,qBAAuB,EAExE9H,KAAK0L,YAAc,MACnBxD,UAAUwG,cAAgB1O,KAAK2L,UAAUR,MAAQrD,oBACjD9H,KAAK0L,YAAc,IACnBxD,UAAUyG,SAAW3O,KAAK2L,UAAUR,MAAQrD,sBAE5C9H,KAAK4I,UAAY,MACjBV,UAAUwG,cAAgB1O,KAAKiJ,YAC/BjJ,KAAK4I,UAAY,IACjBV,UAAUyG,SAAW3O,KAAKiJ,YAC1BjJ,KAAK4I,UAAY,IAGdV,WAGXgM,iBAAiB1tC,UAAUsuC,gBAAkB,SAAUI,MACnD,IAAIN,OAASM,KAAKN,OAEbA,QAAWlnC,KAAK1E,QAAWksC,OAGhCxnC,KAAK1E,QAAU,EAEfksC,KAAKL,OAASK,KAAKL,KAAKnlC,KAAOwlC,KAAKxlC,MACpCwlC,KAAKxlC,OAASwlC,KAAKxlC,KAAKmlC,KAAOK,KAAKL,MACpCnnC,KAAKshB,QAAUkmB,OAASxnC,KAAKshB,MAAQkmB,KAAKxlC,MAC1ChC,KAAKuhB,OAASimB,OAASxnC,KAAKuhB,KAAOimB,KAAKL,MAExCK,KAAKlV,KAAK+Q,WAAW3c,YAAY8gB,KAAKlV,aAE/BtyB,KAAK2mC,WAAWO,UAG3BV,iBAAiB1tC,UAAU+hC,QAAU,WACjC,IAAItiC,IACAouC,WAAa3mC,KAAK2mC,WAGtB,IAAKpuC,OADLyH,KAAKymC,cAAgB,KACTE,WACR3mC,KAAKonC,gBAAgBT,WAAWpuC,MAGpCyH,KAAK4mC,SAASvD,WAAW3c,YAAY1mB,KAAK4mC,UAE1C5mC,KAAK4mC,SAAW,KAChB5mC,KAAKshB,MAAQ,KACbthB,KAAKuhB,KAAO,MAGhB9qB,OAAOD,QAAUgwC,o2dCnLFiB,UAAA,SAAS32B,EAAGC,GACzB,OAAOD,EAAIC,GAAK,EAAID,EAAIC,EAAI,EAAID,GAAKC,EAAI,EAAI22B,KCChCC,SAAA,SAASC,SAEtB,OADuB,IAAnBA,QAAQtsC,SAAcssC,QAyB5B,SAASC,oBAAoB1sC,GAC3B,OAAO,SAAS7D,EAAGyoC,GACjB,OAAO0H,UAAUtsC,EAAE7D,GAAIyoC,IA3BW8H,CAAoBD,WAEtDE,KAAM,SAAAA,KAASh3B,EAAGivB,EAAG1b,GAAIC,IAGvB,IAFU,MAAND,KAAYA,GAAK,GACX,MAANC,KAAYA,GAAKxT,EAAExV,QAChB+oB,GAAKC,IAAI,CACd,IAAIC,IAAMF,GAAKC,KAAO,EAClBsjB,QAAQ92B,EAAEyT,KAAMwb,GAAK,EAAG1b,GAAKE,IAAM,EAClCD,GAAKC,IAEZ,OAAOF,IAET0jB,MAAO,SAAAA,MAASj3B,EAAGivB,EAAG1b,GAAIC,IAGxB,IAFU,MAAND,KAAYA,GAAK,GACX,MAANC,KAAYA,GAAKxT,EAAExV,QAChB+oB,GAAKC,IAAI,CACd,IAAIC,IAAMF,GAAKC,KAAO,EAClBsjB,QAAQ92B,EAAEyT,KAAMwb,GAAK,EAAGzb,GAAKC,IAC5BF,GAAKE,IAAM,EAElB,OAAOF,MCpBb,IAAI2jB,gBAAkBL,SAASF,WACpBQ,YAAcD,gBAAgBD,MAE1BE,QADSD,gBAAgBF,KACzBG,aCJA,ICFAC,OAAA,SAASnI,GACtB,OAAa,OAANA,EAAa2H,KAAO3H,GCDzBoI,YAAQ/nC,MAAMtH,UCAHsvC,WDEID,YAAMhW,MACRgW,YAAMxtC,ICHR,SAAS8f,MAAO4tB,KAAMC,MACnC7tB,OAASA,MAAO4tB,MAAQA,KAAMC,MAAQ7vC,EAAIyH,UAAU5E,QAAU,GAAK+sC,KAAO5tB,MAAOA,MAAQ,EAAG,GAAKhiB,EAAI,EAAI,GAAK6vC,KAM9G,IAJA,IAAItxC,GAAK,EACLyB,EAAoD,EAAhD4Y,KAAK9D,IAAI,EAAG8D,KAAK+yB,MAAMiE,KAAO5tB,OAAS6tB,OAC3CrtB,MAAQ,IAAI7a,MAAM3H,KAEbzB,EAAIyB,GACXwiB,MAAMjkB,GAAKyjB,MAAQzjB,EAAIsxC,KAGzB,OAAOrtB,QCXLstB,IAAMl3B,KAAKm3B,KAAK,IAChBC,GAAKp3B,KAAKm3B,KAAK,IACfE,GAAKr3B,KAAKm3B,KAAK,GAEJG,UAAA,SAASluB,MAAO4tB,KAAM7mB,OACnC,IAAI/H,QAEAhhB,EACAmwC,MACAN,KAHAtxC,GAAK,EAMT,GAD8BwqB,OAASA,OAAzB/G,OAASA,UAAvB4tB,MAAQA,OACc7mB,MAAQ,EAAG,OAAQ/G,OAEzC,IADIhB,QAAU4uB,KAAO5tB,SAAOhiB,EAAIgiB,MAAOA,MAAQ4tB,KAAMA,KAAO5vC,GACT,KAA9C6vC,KAAOO,cAAcpuB,MAAO4tB,KAAM7mB,UAAkBsG,SAASwgB,MAAO,SAEzE,GAAIA,KAAO,EAIT,IAHA7tB,MAAQpJ,KAAK+yB,KAAK3pB,MAAQ6tB,MAC1BD,KAAOh3B,KAAKgzB,MAAMgE,KAAOC,MACzBM,MAAQ,IAAIxoC,MAAM3H,EAAI4Y,KAAK+yB,KAAKiE,KAAO5tB,MAAQ,MACtCzjB,EAAIyB,GAAGmwC,MAAM5xC,IAAMyjB,MAAQzjB,GAAKsxC,UAKzC,IAHA7tB,MAAQpJ,KAAKgzB,MAAM5pB,MAAQ6tB,MAC3BD,KAAOh3B,KAAK+yB,KAAKiE,KAAOC,MACxBM,MAAQ,IAAIxoC,MAAM3H,EAAI4Y,KAAK+yB,KAAK3pB,MAAQ4tB,KAAO,MACtCrxC,EAAIyB,GAAGmwC,MAAM5xC,IAAMyjB,MAAQzjB,GAAKsxC,KAK3C,OAFI7uB,SAASmvB,MAAMnvB,UAEZmvB,OAGF,SAASC,cAAcpuB,MAAO4tB,KAAM7mB,OACzC,IAAI8mB,MAAQD,KAAO5tB,OAASpJ,KAAK9D,IAAI,EAAGiU,OACpCsnB,MAAQz3B,KAAKgzB,MAAMhzB,KAAK03B,IAAIT,MAAQj3B,KAAK23B,MACzCtF,MAAQ4E,KAAOj3B,KAAKwQ,IAAI,GAAIinB,OAChC,OAAOA,OAAS,GACTpF,OAAS6E,IAAM,GAAK7E,OAAS+E,GAAK,EAAI/E,OAASgF,GAAK,EAAI,GAAKr3B,KAAKwQ,IAAI,GAAIinB,QAC1Ez3B,KAAKwQ,IAAI,IAAKinB,QAAUpF,OAAS6E,IAAM,GAAK7E,OAAS+E,GAAK,EAAI/E,OAASgF,GAAK,EAAI,GAGlF,SAASO,SAASxuB,MAAO4tB,KAAM7mB,OACpC,IAAI0nB,MAAQ73B,KAAK83B,IAAId,KAAO5tB,OAASpJ,KAAK9D,IAAI,EAAGiU,OAC7C4nB,MAAQ/3B,KAAKwQ,IAAI,GAAIxQ,KAAKgzB,MAAMhzB,KAAK03B,IAAIG,OAAS73B,KAAK23B,OACvDtF,MAAQwF,MAAQE,MAIpB,OAHI1F,OAAS6E,IAAKa,OAAS,GAClB1F,OAAS+E,GAAIW,OAAS,EACtB1F,OAASgF,KAAIU,OAAS,GACxBf,KAAO5tB,OAAS2uB,MAAQA,MCjDlB,ICEAC,SAAA,SAASz0B,OAAQ5b,EAAGswC,SAEjC,GADe,MAAXA,UAAiBA,QAAUpB,QACzBzvC,EAAImc,OAAOtZ,OAAjB,CACA,IAAKtC,GAAKA,IAAM,GAAKP,EAAI,EAAG,OAAQ6wC,QAAQ10B,OAAO,GAAI,EAAGA,QAC1D,GAAI5b,GAAK,EAAG,OAAQswC,QAAQ10B,OAAOnc,EAAI,GAAIA,EAAI,EAAGmc,QAClD,IAAInc,EACAzB,GAAKyB,EAAI,GAAKO,EACduwC,GAAKl4B,KAAKgzB,MAAMrtC,GAChBwyC,QAAUF,QAAQ10B,OAAO20B,IAAKA,GAAI30B,QAEtC,OAAO40B,SADOF,QAAQ10B,OAAO20B,GAAK,GAAIA,GAAK,EAAG30B,QACpB40B,SAAWxyC,EAAIuyC,MCV3C,SAAS/qB,WAkDT,SAAS7jB,QAAI/B,OAAQuC,GACnB,IAAIR,IAAM,IAAI6jB,QAGd,GAAI5lB,kBAAkB4lB,QAAK5lB,OAAO6wC,KAAK,SAASxxC,MAAOM,KAAOoC,IAAI80B,IAAIl3B,IAAKN,cAGtE,GAAImI,MAAMmuB,QAAQ31B,QAAS,CAC9B,IAEInB,EAFAT,GAAK,EACLyB,EAAIG,OAAO0C,OAGf,GAAS,MAALH,EAAW,OAASnE,EAAIyB,GAAGkC,IAAI80B,IAAIz4B,EAAG4B,OAAO5B,SAC5C,OAASA,EAAIyB,GAAGkC,IAAI80B,IAAIt0B,EAAE1D,EAAImB,OAAO5B,GAAIA,EAAG4B,QAASnB,QAIvD,GAAImB,OAAQ,IAAK,IAAIL,OAAOK,OAAQ+B,IAAI80B,IAAIl3B,IAAKK,OAAOL,MAE7D,OAAOoC,IAnET6jB,QAAI1lB,UAAY6B,QAAI7B,WAClB0K,YAAagb,QACbqR,IAAK,SAAAA,IAASt3B,KACZ,MAPgB,IAOCA,OAAQyH,MAE3BnI,IAAK,SAAAA,IAASU,KACZ,OAAOyH,KAVS,IAUKzH,MAEvBk3B,IAAK,SAAAA,IAASl3B,IAAKN,OAEjB,OADA+H,KAbgB,IAaFzH,KAAON,MACd+H,MAET0pC,OAAQ,SAAAA,OAASnxC,KACf,IAAIM,SAjBY,IAiBQN,IACxB,OAAOM,YAAYmH,aAAeA,KAAKnH,WAEzC8wC,MAAO,SAAAA,QACL,IAAK,IAAI9wC,YAAYmH,KArBL,MAqBenH,SAAS,WAAsBmH,KAAKnH,WAErE23B,KAAM,SAAAA,OACJ,IAAIA,QACJ,IAAK,IAAI33B,YAAYmH,KAzBL,MAyBenH,SAAS,IAAe23B,KAAKzxB,KAAKlG,SAASs5B,MAAM,IAChF,OAAO3B,MAET5b,OAAQ,SAAAA,SACN,IAAIA,UACJ,IAAK,IAAI/b,YAAYmH,KA9BL,MA8BenH,SAAS,IAAe+b,OAAO7V,KAAKiB,KAAKnH,WACxE,OAAO+b,QAETg1B,QAAS,SAAAA,UACP,IAAIA,WACJ,IAAK,IAAI/wC,YAAYmH,KAnCL,MAmCenH,SAAS,IAAe+wC,QAAQ7qC,MAAMxG,IAAKM,SAASs5B,MAAM,GAAIl6B,MAAO+H,KAAKnH,YACzG,OAAO+wC,SAETvN,KAAM,SAAAA,OACJ,IAAIA,KAAO,EACX,IAAK,IAAIxjC,YAAYmH,KAxCL,MAwCenH,SAAS,MAAiBwjC,KACzD,OAAOA,MAETwN,MAAO,SAAAA,QACL,IAAK,IAAIhxC,YAAYmH,KAAM,GA5CX,MA4CenH,SAAS,GAAe,OAAO,EAC9D,OAAO,GAET4wC,KAAM,SAAAA,KAAStuC,GACb,IAAK,IAAItC,YAAYmH,KAhDL,MAgDenH,SAAS,IAAesC,EAAE6E,KAAKnH,UAAWA,SAASs5B,MAAM,GAAInyB,QA0BjFrF,oBCxEAmvC,SAAA,WACb,IAEIC,YACAC,QACAC,KAJAzZ,QACA0Z,aAKJ,SAAS3wC,MAAM4uC,MAAOgC,MAAOC,aAAcC,WACzC,GAAIF,OAAS3Z,KAAKl1B,OAEhB,OADkB,MAAdyuC,aAAoB5B,MAAMlnC,KAAK8oC,aAClB,MAAVC,QAAiBA,QAAO7B,OAASA,MAY1C,IATA,IAGImC,SACAryC,MAEA2c,OANA5d,GAAK,EACLyB,EAAI0vC,MAAM7sC,OACV/C,IAAMi4B,KAAK2Z,SAGXI,YAAc5vC,UAEd4U,OAAS66B,iBAEJpzC,EAAIyB,IACPmc,OAAS21B,YAAY1yC,IAAIyyC,SAAW/xC,IAAIN,MAAQkwC,MAAMnxC,IAAM,KAC9D4d,OAAO7V,KAAK9G,OAEZsyC,YAAY9a,IAAI6a,UAAWryC,QAQ/B,OAJAsyC,YAAYd,KAAK,SAAS70B,OAAQrc,KAChC8xC,UAAU96B,OAAQhX,IAAKgB,MAAMqb,OAAQu1B,MAAOC,aAAcC,cAGrD96B,OAWT,OAAO06B,MACLrxC,OAAQ,SAAAA,OAASuvC,OAAS,OAAO5uC,MAAM4uC,MAAO,EAAGqC,aAAcC,YAC/D9vC,IAAK,SAAAA,IAASwtC,OAAS,OAAO5uC,MAAM4uC,MAAO,EAAGuC,UAAWC,SACzDf,QAAS,SAAAA,QAASzB,OAAS,OAX7B,SAASyB,SAAQjvC,IAAKwvC,OACpB,KAAMA,MAAQ3Z,KAAKl1B,OAAQ,OAAOX,IAClC,IAAIwtC,MAAOyC,QAAUV,UAASC,MAAQ,GAGtC,OAFc,MAAVH,SAAkBG,OAAS3Z,KAAKl1B,OAAQ6sC,MAAQxtC,IAAIivC,WACnDzB,SAAYxtC,IAAI8uC,KAAK,SAAS50B,EAAGg2B,GAAK1C,MAAMppC,MAAMxG,IAAKsyC,EAAGj2B,OAAQg1B,SAAQ/0B,EAAGs1B,YAChE,MAAXS,QAAkBzC,MAAMlnC,KAAK,SAAS6P,EAAGC,GAAK,OAAO65B,QAAQ95B,EAAEvY,IAAKwY,EAAExY,OAAW4vC,MAMtDyB,CAAQrwC,MAAM4uC,MAAO,EAAGuC,UAAWC,QAAS,IAC9EpyC,IAAK,SAAAA,IAASjB,GAAmB,OAAdk5B,KAAKzxB,KAAKzH,GAAW2yC,MACxCC,SAAU,SAAAA,SAASrpC,OAA4C,OAAnCqpC,UAAS1Z,KAAKl1B,OAAS,GAAKuF,MAAcopC,MACtEF,WAAY,SAAAA,WAASlpC,OAA6B,OAApBkpC,YAAalpC,MAAcopC,MACzDD,OAAQ,SAAAA,OAAS7uC,GAAiB,OAAZ6uC,QAAS7uC,EAAU8uC,QAI7C,SAASO,eACP,SAGF,SAASC,UAAU7xC,OAAQL,IAAKN,OAC9BW,OAAOL,KAAON,MAGhB,SAASyyC,YACP,OAAO/vC,UAGT,SAASgwC,OAAOhwC,IAAKpC,IAAKN,OACxB0C,IAAI80B,IAAIl3B,IAAKN,OCrEf,SAAS+U,WAET,IAAI89B,MAAQnwC,QAAI7B,UAkBhB,SAAS22B,QAAI72B,OAAQuC,GACnB,IAAIs0B,IAAM,IAAIziB,QAGd,GAAIpU,kBAAkBoU,QAAKpU,OAAO6wC,KAAK,SAASxxC,OAASw3B,IAAIsb,IAAI9yC,cAG5D,GAAIW,OAAQ,CACf,IAAI5B,GAAK,EAAGyB,EAAIG,OAAO0C,OACvB,GAAS,MAALH,EAAW,OAASnE,EAAIyB,GAAGg3B,IAAIsb,IAAInyC,OAAO5B,SACzC,OAASA,EAAIyB,GAAGg3B,IAAIsb,IAAI5vC,EAAEvC,OAAO5B,GAAIA,EAAG4B,SAG/C,OAAO62B,IA7BTziB,QAAIlU,UAAY22B,QAAI32B,WAClB0K,YAAawJ,QACb6iB,IAAKib,MAAMjb,IACXkb,IAAK,SAAAA,IAAS9yC,OAGZ,OADA+H,KFXgB,KEUhB/H,OAAS,KACcA,MAChB+H,MAET0pC,OAAQoB,MAAMpB,OACdC,MAAOmB,MAAMnB,MACb/0B,OAAQk2B,MAAMta,KACd6L,KAAMyO,MAAMzO,KACZwN,MAAOiB,MAAMjB,MACbJ,KAAMqB,MAAMrB,MAmBCha,ICtCX0Y,gBAAQ/nC,MAAMtH,UAEP6B,cAAMwtC,gBAAMxtC,IACZw3B,YAAQgW,gBAAMhW,MCAd6Y,UAAYzzC,KAAM,YAEd,SAAS0zC,QAAQhwB,OAC9B,IAAI3V,MAAQ3K,UACRsS,UACAi+B,QAAUF,SAId,SAASG,MAAM7zC,GACb,IAAIiB,IAAMjB,EAAI,GAAIN,EAAIsO,MAAMzN,IAAIU,KAChC,IAAKvB,EAAG,CACN,GAAIk0C,UAAYF,SAAU,OAAOE,QACjC5lC,MAAMmqB,IAAIl3B,IAAKvB,EAAIiW,OAAOlO,KAAKzH,IAEjC,OAAO2jB,OAAOjkB,EAAI,GAAKikB,MAAM3f,QA0B/B,OAlCA2f,MAAiB,MAATA,SAAqBkX,YAAMh7B,KAAK8jB,OAWxCkwB,MAAMl+B,OAAS,SAASsJ,GACtB,IAAKrW,UAAU5E,OAAQ,OAAO2R,OAAOklB,QACrCllB,UAAa3H,MAAQ3K,UAErB,IADA,IAA0BrD,EAAGiB,IAAzBvB,GAAK,EAAGyB,EAAI8d,EAAEjb,SACTtE,EAAIyB,GAAQ6M,MAAMuqB,IAAIt3B,KAAOjB,EAAIif,EAAEvf,IAAM,KAAKsO,MAAMmqB,IAAIl3B,IAAK0U,OAAOlO,KAAKzH,IAClF,OAAO6zC,OAGTA,MAAMlwB,MAAQ,SAAS1E,GACrB,OAAOrW,UAAU5E,QAAU2f,MAAQkX,YAAMh7B,KAAKof,GAAI40B,OAASlwB,MAAMkX,SAGnEgZ,MAAMD,QAAU,SAAS30B,GACvB,OAAOrW,UAAU5E,QAAU4vC,QAAU30B,EAAG40B,OAASD,SAGnDC,MAAMC,KAAO,WACX,OAAOH,UACFh+B,OAAOA,QACPgO,MAAMA,OACNiwB,QAAQA,UAGRC,MCzCM,SAASE,OACtB,IAII/C,KACAgD,UALAH,MAAQF,UAAUC,aAAQ9xC,GAC1B6T,OAASk+B,MAAMl+B,OACfs+B,aAAeJ,MAAMlwB,MACrBA,OAAS,EAAG,GAGZ8e,OAAQ,EACRyR,aAAe,EACfC,aAAe,EACfC,MAAQ,GAGZ,SAASC,UACP,IAAIlzC,EAAIwU,SAAS3R,OACbme,QAAUwB,MAAM,GAAKA,MAAM,GAC3BR,MAAQQ,MAAMxB,QAAU,GACxB4uB,KAAOptB,MAAM,EAAIxB,SACrB6uB,MAAQD,KAAO5tB,OAASpJ,KAAK9D,IAAI,EAAG9U,EAAI+yC,aAA8B,EAAfC,cACnD1R,QAAOuO,KAAOj3B,KAAKgzB,MAAMiE,OAC7B7tB,QAAU4tB,KAAO5tB,MAAQ6tB,MAAQ7vC,EAAI+yC,eAAiBE,MACtDJ,UAAYhD,MAAQ,EAAIkD,cACpBzR,QAAOtf,MAAQpJ,KAAK0oB,MAAMtf,OAAQ6wB,UAAYj6B,KAAK0oB,MAAMuR,YAC7D,IAAI12B,OAASg3B,UAASnzC,GAAGkC,IAAI,SAAS3D,GAAK,OAAOyjB,MAAQ6tB,KAAOtxC,IACjE,OAAOu0C,aAAa9xB,QAAU7E,OAAO6E,UAAY7E,QAkGnD,cA9GOu2B,MAAMD,QAebC,MAAMl+B,OAAS,SAASsJ,GACtB,OAAOrW,UAAU5E,QAAU2R,OAAOsJ,GAAIo1B,WAAa1+B,UAGrDk+B,MAAMlwB,MAAQ,SAAS1E,GACrB,OAAOrW,UAAU5E,QAAU2f,QAAU1E,EAAE,IAAKA,EAAE,IAAKo1B,WAAa1wB,MAAMkX,SAGxEgZ,MAAMU,WAAa,SAASt1B,GAC1B,OAAO0E,QAAU1E,EAAE,IAAKA,EAAE,IAAKwjB,OAAQ,EAAM4R,WAG/CR,MAAMG,UAAY,WAChB,OAAOA,WAGTH,MAAM7C,KAAO,WACX,OAAOA,MAGT6C,MAAMpR,MAAQ,SAASxjB,GACrB,OAAOrW,UAAU5E,QAAUy+B,QAAUxjB,EAAGo1B,WAAa5R,OAGvDoR,MAAMvG,QAAU,SAASruB,GACvB,OAAOrW,UAAU5E,QAAUkwC,aAAeC,aAAep6B,KAAK9D,IAAI,EAAG8D,KAAKjE,IAAI,EAAGmJ,IAAKo1B,WAAaH,cAGrGL,MAAMK,aAAe,SAASj1B,GAC5B,OAAOrW,UAAU5E,QAAUkwC,aAAen6B,KAAK9D,IAAI,EAAG8D,KAAKjE,IAAI,EAAGmJ,IAAKo1B,WAAaH,cAGtFL,MAAMM,aAAe,SAASl1B,GAC5B,OAAOrW,UAAU5E,QAAUmwC,aAAep6B,KAAK9D,IAAI,EAAG8D,KAAKjE,IAAI,EAAGmJ,IAAKo1B,WAAaF,cAGtFN,MAAMO,MAAQ,SAASn1B,GACrB,OAAOrW,UAAU5E,QAAUowC,MAAQr6B,KAAK9D,IAAI,EAAG8D,KAAKjE,IAAI,EAAGmJ,IAAKo1B,WAAaD,OAG/EP,MAAMC,KAAO,WACX,OAAOC,OACFp+B,OAAOA,UACPgO,MAAMA,OACN8e,MAAMA,OACNyR,aAAaA,cACbC,aAAaA,cACbC,MAAMA,QAGbP,MAAMW,aAAe,SAASC,GAAIC,IAChC,IAI2Bl7B,EAAGC,EAAG7Y,EAC7B+zC,QALA5nB,IAAM0nB,GACNznB,GAAKpkB,UAAU5E,OAAS,GAAK0wC,GAAK3nB,GAClC5K,QAAUwB,MAAM,GAAKA,MAAM,GAC3BrG,OAAS6E,QAAU8xB,eAAe9xB,UAAY8xB,eAC9C9yC,EAAImc,OAAOtZ,OAAS,EAKxB,GAHAsZ,OAAO7V,KAAK6V,OAAOnc,GAAKuH,KAAKsoC,QAEzBhkB,GAAKD,KAAInsB,EAAImsB,GAAIA,GAAKC,GAAIA,GAAKpsB,KAC/BosB,GAAK1P,OAAO,IAAMyP,GAAKpJ,MAAM,EAAExB,UAWnC,OARA3I,EAAIO,KAAK9D,IAAI,EAAG2+B,kBAAkBt3B,OAAQyP,KAC1C4nB,QAAUC,kBAAkBt3B,OAAQ0P,IACpCvT,EAAIsT,KAAKC,GAAKxT,EAAIO,KAAK9D,IAAIuD,EAAGm7B,QAAU,GAKpCxyB,UAASvhB,EAAI4Y,EAAGA,EAAIrY,EAAIsY,EAAGA,EAAItY,EAAIP,GAC/B4Y,EAAIC,OAAK3X,EAAY6T,SAASklB,MAAMrhB,EAAGC,EAAE,IAGnDo6B,MAAMgB,OAAS,SAAUJ,GAAIC,IAC3B,IAKIl7B,EACA5Y,EANAmsB,IAAM0nB,GACNznB,GAAKpkB,UAAU5E,OAAS,GAAK0wC,GAAK3nB,GAClC5K,QAAUwB,MAAM,GAAKA,MAAM,GAC3BrG,OAAS6E,QAAU8xB,eAAe9xB,UAAY8xB,eAC9C9yC,EAAImc,OAAOtZ,OAAS,EAMxB,GADIgpB,GAAKD,KAAInsB,EAAImsB,GAAIA,GAAKC,GAAIA,GAAKpsB,KAC/BosB,GAAK1P,OAAO,IAAMyP,GAAKpJ,MAAM,EAAExB,UAQnC,OALA3I,EAAIO,KAAK9D,IAAI,EAAG2+B,kBAAkBt3B,OAAQyP,GAAI,SAKvCpX,SAASwM,QAAUhhB,EAAIqY,EAAIA,IAE7B66B,UAqBT,SAASO,kBAAmBttC,IAAK3G,MAAOm0C,MAStC,IARA,IAGIC,QACA9nB,IACA+nB,GALAC,IAAM,EAENC,KADS5tC,IAAItD,OACG,EAMbixC,IAAMC,MACTjoB,IAAMlT,KAAKgzB,OAAOkI,IAAMC,MAAQ,GAChCF,GAAKj7B,KAAK83B,IAAIvqC,IAAI2lB,KAAOtsB,OACpBoZ,KAAK83B,IAAIvqC,IAAI2lB,IAAM,GAAKtsB,QAEnBq0C,GACNC,IAAMhoB,IAAM,EAGZioB,KAAOjoB,IAIf,OAAK6nB,MAILC,QAAUztC,IAAI4tC,SACEv0C,MACLu0C,KACAH,QAAUp0C,MACJ,IAATu0C,KAAqBA,KACT,SAATJ,KAAiBI,KAAO,EAAIA,KAE/BA,OAAS5tC,IAAItD,OAAS,EAAYkxC,KACtB,SAATJ,KAAiBI,KAAOA,KAAO,EAX/BA,KCzKE,IAAA91C,OAAA,SAAS8M,YAAajN,QAASuC,WAC5C0K,YAAY1K,UAAYvC,QAAQuC,UAAYA,UAC5CA,UAAU0K,YAAcA,aAGnB,SAASipC,OAAO5lB,OAAQ6lB,YAC7B,IAAI5zC,UAAYpB,OAAOY,OAAOuuB,OAAO/tB,WACrC,IAAK,IAAIP,OAAOm0C,WAAY5zC,UAAUP,KAAOm0C,WAAWn0C,KACxD,OAAOO,UCNF,SAAS6zC,SAET,IAGHC,IAAM,sBACNC,IAAM,gDACNC,IAAM,iDACNC,OAAS,mBACTC,OAAS,mBACTC,aAAe,IAAIjyC,OAAO,WAAa4xC,IAAKA,IAAKA,KAAO,QACxDM,aAAe,IAAIlyC,OAAO,WAAa8xC,IAAKA,IAAKA,KAAO,QACxDK,cAAgB,IAAInyC,OAAO,YAAc4xC,IAAKA,IAAKA,IAAKC,KAAO,QAC/DO,cAAgB,IAAIpyC,OAAO,YAAc8xC,IAAKA,IAAKA,IAAKD,KAAO,QAC/DQ,aAAe,IAAIryC,OAAO,WAAa6xC,IAAKC,IAAKA,KAAO,QACxDQ,cAAgB,IAAItyC,OAAO,YAAc6xC,IAAKC,IAAKA,IAAKD,KAAO,QAE/DU,OACFC,UAAW,SACXC,aAAc,SACdC,KAAM,MACNC,WAAY,QACZC,MAAO,SACPC,MAAO,SACPC,OAAQ,SACRC,MAAO,EACPC,eAAgB,SAChBC,KAAM,IACNC,WAAY,QACZC,MAAO,SACPC,UAAW,SACXC,UAAW,QACXC,WAAY,QACZC,UAAW,SACXC,MAAO,SACPC,eAAgB,QAChBC,SAAU,SACVC,QAAS,SACTC,KAAM,MACNC,SAAU,IACVC,SAAU,MACVC,cAAe,SACfC,SAAU,SACVC,UAAW,MACXC,SAAU,SACVC,UAAW,SACXC,YAAa,QACbC,eAAgB,QAChBC,WAAY,SACZC,WAAY,SACZC,QAAS,QACTC,WAAY,SACZC,aAAc,QACdC,cAAe,QACfC,cAAe,QACfC,cAAe,QACfC,cAAe,MACfC,WAAY,QACZC,SAAU,SACVC,YAAa,MACbC,QAAS,QACTC,QAAS,QACTC,WAAY,QACZC,UAAW,SACXC,YAAa,SACbC,YAAa,QACbC,QAAS,SACTC,UAAW,SACXC,WAAY,SACZC,KAAM,SACNC,UAAW,SACXC,KAAM,QACNC,MAAO,MACPC,YAAa,SACbC,KAAM,QACNC,SAAU,SACVC,QAAS,SACTC,UAAW,SACXC,OAAQ,QACRC,MAAO,SACPC,MAAO,SACPC,SAAU,SACVC,cAAe,SACfC,UAAW,QACXC,aAAc,SACdC,UAAW,SACXC,WAAY,SACZC,UAAW,SACXC,qBAAsB,SACtBC,UAAW,SACXC,WAAY,QACZC,UAAW,SACXC,UAAW,SACXC,YAAa,SACbC,cAAe,QACfC,aAAc,QACdC,eAAgB,QAChBC,eAAgB,QAChBC,eAAgB,SAChBC,YAAa,SACbC,KAAM,MACNC,UAAW,QACXC,MAAO,SACPC,QAAS,SACTC,OAAQ,QACRC,iBAAkB,QAClBC,WAAY,IACZC,aAAc,SACdC,aAAc,QACdC,eAAgB,QAChBC,gBAAiB,QACjBC,kBAAmB,MACnBC,gBAAiB,QACjBC,gBAAiB,SACjBC,aAAc,QACdC,UAAW,SACXC,UAAW,SACXC,SAAU,SACVC,YAAa,SACbC,KAAM,IACNC,QAAS,SACTC,MAAO,QACPC,UAAW,QACXC,OAAQ,SACRC,UAAW,SACXC,OAAQ,SACRC,cAAe,SACfC,UAAW,SACXC,cAAe,SACfC,cAAe,SACfC,WAAY,SACZC,UAAW,SACXC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,WAAY,SACZC,OAAQ,QACRC,cAAe,QACfC,IAAK,SACLC,UAAW,SACXC,UAAW,QACXC,YAAa,QACbC,OAAQ,SACRC,WAAY,SACZC,SAAU,QACVC,SAAU,SACVC,OAAQ,SACRC,OAAQ,SACRC,QAAS,QACTC,UAAW,QACXC,UAAW,QACXC,UAAW,QACXC,KAAM,SACNC,YAAa,MACbC,UAAW,QACXC,IAAK,SACLC,KAAM,MACNC,QAAS,SACTC,OAAQ,SACRC,UAAW,QACXC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,WAAY,SACZC,OAAQ,SACRC,YAAa,UAeA,SAASC,YAAM38C,QAC5B,IAAI7C,EAEJ,OADA6C,QAAUA,OAAS,IAAIqsB,OAAO2B,eACtB7wB,EAAI21C,OAAO8J,KAAK58C,SAAoC,IAAI68C,KAA5B1/C,EAAI2wB,SAAS3wB,EAAE,GAAI,MAAmB,EAAI,GAAQA,GAAK,EAAI,IAASA,GAAK,EAAI,GAAY,IAAJA,GAAiB,GAAJA,IAAY,EAAU,GAAJA,EAAU,IAC3JA,EAAI41C,OAAO6J,KAAK58C,SAAW88C,KAAKhvB,SAAS3wB,EAAE,GAAI,MAC/CA,EAAI61C,aAAa4J,KAAK58C,SAAW,IAAI68C,IAAI1/C,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAI,IAC3DA,EAAI81C,aAAa2J,KAAK58C,SAAW,IAAI68C,IAAW,IAAP1/C,EAAE,GAAW,IAAY,IAAPA,EAAE,GAAW,IAAY,IAAPA,EAAE,GAAW,IAAK,IAC/FA,EAAI+1C,cAAc0J,KAAK58C,SAAW+8C,KAAK5/C,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,KAC3DA,EAAIg2C,cAAcyJ,KAAK58C,SAAW+8C,KAAY,IAAP5/C,EAAE,GAAW,IAAY,IAAPA,EAAE,GAAW,IAAY,IAAPA,EAAE,GAAW,IAAKA,EAAE,KAC/FA,EAAIi2C,aAAawJ,KAAK58C,SAAWg9C,KAAK7/C,EAAE,GAAIA,EAAE,GAAK,IAAKA,EAAE,GAAK,IAAK,IACpEA,EAAIk2C,cAAcuJ,KAAK58C,SAAWg9C,KAAK7/C,EAAE,GAAIA,EAAE,GAAK,IAAKA,EAAE,GAAK,IAAKA,EAAE,IACxEm2C,MAAMx0C,eAAekB,QAAU88C,KAAKxJ,MAAMtzC,SAC/B,gBAAXA,OAA2B,IAAI68C,IAAIpP,IAAKA,IAAKA,IAAK,GAClD,KAGR,SAASqP,KAAKt+C,GACZ,OAAO,IAAIq+C,IAAIr+C,GAAK,GAAK,IAAMA,GAAK,EAAI,IAAU,IAAJA,EAAU,GAG1D,SAASu+C,KAAKl/C,EAAGo/C,EAAGnmC,EAAGD,GAErB,OADIA,GAAK,IAAGhZ,EAAIo/C,EAAInmC,EAAI22B,KACjB,IAAIoP,IAAIh/C,EAAGo/C,EAAGnmC,EAAGD,GAGnB,SAASqmC,WAAW1/C,GAEzB,OADMA,aAAak1C,QAAQl1C,EAAIm/C,YAAMn/C,IAChCA,EAEE,IAAIq/C,KADXr/C,EAAIA,EAAE2/C,OACWt/C,EAAGL,EAAEy/C,EAAGz/C,EAAEsZ,EAAGtZ,EAAE4/C,SAFjB,IAAIP,IAKd,SAASM,UAAIt/C,EAAGo/C,EAAGnmC,EAAGsmC,SAC3B,OAA4B,IAArBn3C,UAAU5E,OAAe67C,WAAWr/C,GAAK,IAAIg/C,IAAIh/C,EAAGo/C,EAAGnmC,EAAc,MAAXsmC,QAAkB,EAAIA,SAGlF,SAASP,IAAIh/C,EAAGo/C,EAAGnmC,EAAGsmC,SAC3Br3C,KAAKlI,GAAKA,EACVkI,KAAKk3C,GAAKA,EACVl3C,KAAK+Q,GAAKA,EACV/Q,KAAKq3C,SAAWA,QAkClB,SAASC,KAAIr/C,OAEX,QADAA,MAAQoZ,KAAK9D,IAAI,EAAG8D,KAAKjE,IAAI,IAAKiE,KAAK0oB,MAAM9hC,QAAU,KACvC,GAAK,IAAM,IAAMA,MAAMwwB,SAAS,IAGlD,SAASwuB,KAAKM,EAAGt+C,EAAGhC,EAAG6Z,GAIrB,OAHIA,GAAK,EAAGymC,EAAIt+C,EAAIhC,EAAIywC,IACfzwC,GAAK,GAAKA,GAAK,EAAGsgD,EAAIt+C,EAAIyuC,IAC1BzuC,GAAK,IAAGs+C,EAAI7P,KACd,IAAI8P,IAAID,EAAGt+C,EAAGhC,EAAG6Z,GA6BnB,SAAS2mC,IAAIF,EAAGt+C,EAAGhC,EAAGogD,SAC3B,OAA4B,IAArBn3C,UAAU5E,OA3BZ,SAASo8C,WAAWjgD,GACzB,GAAIA,aAAa+/C,IAAK,OAAO,IAAIA,IAAI//C,EAAE8/C,EAAG9/C,EAAEwB,EAAGxB,EAAER,EAAGQ,EAAE4/C,SAEtD,GADM5/C,aAAak1C,QAAQl1C,EAAIm/C,YAAMn/C,KAChCA,EAAG,OAAO,IAAI+/C,IACnB,GAAI//C,aAAa+/C,IAAK,OAAO//C,EAE7B,IAAIK,GADJL,EAAIA,EAAE2/C,OACIt/C,EAAI,IACVo/C,EAAIz/C,EAAEy/C,EAAI,IACVnmC,EAAItZ,EAAEsZ,EAAI,IACV3D,IAAMiE,KAAKjE,IAAItV,EAAGo/C,EAAGnmC,GACrBxD,IAAM8D,KAAK9D,IAAIzV,EAAGo/C,EAAGnmC,GACrBwmC,EAAI7P,IACJzuC,EAAIsU,IAAMH,IACVnW,GAAKsW,IAAMH,KAAO,EAUtB,OATInU,GACas+C,EAAXz/C,IAAMyV,KAAU2pC,EAAInmC,GAAK9X,EAAc,GAATi+C,EAAInmC,GAC7BmmC,IAAM3pC,KAAUwD,EAAIjZ,GAAKmB,EAAI,GAC5BnB,EAAIo/C,GAAKj+C,EAAI,EACvBA,GAAKhC,EAAI,GAAMsW,IAAMH,IAAM,EAAIG,IAAMH,IACrCmqC,GAAK,IAELt+C,EAAIhC,EAAI,GAAKA,EAAI,EAAI,EAAIsgD,EAEpB,IAAIC,IAAID,EAAGt+C,EAAGhC,EAAGQ,EAAE4/C,SAIMK,CAAWH,GAAK,IAAIC,IAAID,EAAGt+C,EAAGhC,EAAc,MAAXogD,QAAkB,EAAIA,SAGzF,SAASG,IAAID,EAAGt+C,EAAGhC,EAAGogD,SACpBr3C,KAAKu3C,GAAKA,EACVv3C,KAAK/G,GAAKA,EACV+G,KAAK/I,GAAKA,EACV+I,KAAKq3C,SAAWA,QAiClB,SAASM,QAAQJ,EAAGK,GAAIC,IACtB,OAGY,KAHJN,EAAI,GAAKK,IAAMC,GAAKD,IAAML,EAAI,GAChCA,EAAI,IAAMM,GACVN,EAAI,IAAMK,IAAMC,GAAKD,KAAO,IAAML,GAAK,GACvCK,IAzKRlhD,OAAOi2C,MAAOiK,aACZkB,YAAa,SAAAA,cACX,OAAO93C,KAAKo3C,MAAMU,eAEpBR,IAAK,SAAAA,MACH,OAAOt3C,KAAKo3C,MAAME,OAEpB7uB,SAAU,SAAAA,WACR,OAAOzoB,KAAKo3C,MAAQ,MA+CxB1gD,OAAOogD,IAAKM,UAAK3K,OAAOE,OACtBoL,SAAU,SAAAA,SAASlN,GAEjB,OADAA,EAAS,MAALA,EA9Nc,EADF,GA+NWx5B,KAAKwQ,IA9Nd,EADF,GA+N8BgpB,GACvC,IAAIiM,IAAI92C,KAAKlI,EAAI+yC,EAAG7qC,KAAKk3C,EAAIrM,EAAG7qC,KAAK+Q,EAAI85B,EAAG7qC,KAAKq3C,UAE1DW,OAAQ,SAAAA,OAASnN,GAEf,OADAA,EAAS,MAALA,EAnOY,GAmOSx5B,KAAKwQ,IAnOd,GAmO0BgpB,GACnC,IAAIiM,IAAI92C,KAAKlI,EAAI+yC,EAAG7qC,KAAKk3C,EAAIrM,EAAG7qC,KAAK+Q,EAAI85B,EAAG7qC,KAAKq3C,UAE1DD,IAAK,SAAAA,MACH,OAAOp3C,MAET83C,YAAa,SAAAA,cACX,OAAQ,GAAK93C,KAAKlI,GAAKkI,KAAKlI,GAAK,KACzB,GAAKkI,KAAKk3C,GAAKl3C,KAAKk3C,GAAK,KACzB,GAAKl3C,KAAK+Q,GAAK/Q,KAAK+Q,GAAK,KACzB,GAAK/Q,KAAKq3C,SAAWr3C,KAAKq3C,SAAW,GAE/CC,IAAK,SAAAA,MACH,MAAO,IAAMA,KAAIt3C,KAAKlI,GAAKw/C,KAAIt3C,KAAKk3C,GAAKI,KAAIt3C,KAAK+Q,IAEpD0X,SAAU,SAAAA,WACR,IAAI3X,EAAI9Q,KAAKq3C,QACb,OAAc,KADQvmC,EAAImnC,MAAMnnC,GAAK,EAAIO,KAAK9D,IAAI,EAAG8D,KAAKjE,IAAI,EAAG0D,KAC/C,OAAS,SACrBO,KAAK9D,IAAI,EAAG8D,KAAKjE,IAAI,IAAKiE,KAAK0oB,MAAM/5B,KAAKlI,IAAM,IAAM,KACtDuZ,KAAK9D,IAAI,EAAG8D,KAAKjE,IAAI,IAAKiE,KAAK0oB,MAAM/5B,KAAKk3C,IAAM,IAAM,KACtD7lC,KAAK9D,IAAI,EAAG8D,KAAKjE,IAAI,IAAKiE,KAAK0oB,MAAM/5B,KAAK+Q,IAAM,KACzC,IAAND,EAAU,IAAM,KAAOA,EAAI,SAqDtCpa,OAAO8gD,IAAKC,IAAKhL,OAAOE,OACtBoL,SAAU,SAAAA,SAASlN,GAEjB,OADAA,EAAS,MAALA,EA9Sc,EADF,GA+SWx5B,KAAKwQ,IA9Sd,EADF,GA+S8BgpB,GACvC,IAAI2M,IAAIx3C,KAAKu3C,EAAGv3C,KAAK/G,EAAG+G,KAAK/I,EAAI4zC,EAAG7qC,KAAKq3C,UAElDW,OAAQ,SAAAA,OAASnN,GAEf,OADAA,EAAS,MAALA,EAnTY,GAmTSx5B,KAAKwQ,IAnTd,GAmT0BgpB,GACnC,IAAI2M,IAAIx3C,KAAKu3C,EAAGv3C,KAAK/G,EAAG+G,KAAK/I,EAAI4zC,EAAG7qC,KAAKq3C,UAElDD,IAAK,SAAAA,MACH,IAAIG,EAAIv3C,KAAKu3C,EAAI,IAAqB,KAAdv3C,KAAKu3C,EAAI,GAC7Bt+C,EAAIg/C,MAAMV,IAAMU,MAAMj4C,KAAK/G,GAAK,EAAI+G,KAAK/G,EACzChC,EAAI+I,KAAK/I,EACT4gD,GAAK5gD,GAAKA,EAAI,GAAMA,EAAI,EAAIA,GAAKgC,EACjC2+C,GAAK,EAAI3gD,EAAI4gD,GACjB,OAAO,IAAIf,IACTa,QAAQJ,GAAK,IAAMA,EAAI,IAAMA,EAAI,IAAKK,GAAIC,IAC1CF,QAAQJ,EAAGK,GAAIC,IACfF,QAAQJ,EAAI,IAAMA,EAAI,IAAMA,EAAI,IAAKK,GAAIC,IACzC73C,KAAKq3C,UAGTS,YAAa,SAAAA,cACX,OAAQ,GAAK93C,KAAK/G,GAAK+G,KAAK/G,GAAK,GAAKg/C,MAAMj4C,KAAK/G,KACzC,GAAK+G,KAAK/I,GAAK+I,KAAK/I,GAAK,GACzB,GAAK+I,KAAKq3C,SAAWr3C,KAAKq3C,SAAW,MC1U1C,IAAIa,QAAU7mC,KAAK8mC,GAAK,IACpBC,QAAU,IAAM/mC,KAAK8mC,GCK5BE,GAAK,OACLC,GAAK,EACLC,GAAK,OACLC,OAAK,EAAI,GACTC,OAAK,EAAI,GACTC,GAAK,EAAID,OAAKA,OACdE,GAAKF,OAAKA,OAAKA,OAEnB,SAASG,WAAWnhD,GAClB,GAAIA,aAAaohD,IAAK,OAAO,IAAIA,IAAIphD,EAAER,EAAGQ,EAAEqZ,EAAGrZ,EAAEsZ,EAAGtZ,EAAE4/C,SACtD,GAAI5/C,aAAaqhD,IAAK,CACpB,GAAIb,MAAMxgD,EAAE8/C,GAAI,OAAO,IAAIsB,IAAIphD,EAAER,EAAG,EAAG,EAAGQ,EAAE4/C,SAC5C,IAAIE,EAAI9/C,EAAE8/C,EAAIW,QACd,OAAO,IAAIW,IAAIphD,EAAER,EAAGoa,KAAK0nC,IAAIxB,GAAK9/C,EAAEJ,EAAGga,KAAK2nC,IAAIzB,GAAK9/C,EAAEJ,EAAGI,EAAE4/C,SAExD5/C,aAAaq/C,MAAMr/C,EAAI0/C,WAAW1/C,IACxC,IAGuEsoC,EAAGkZ,EAHtEnhD,EAAIohD,SAASzhD,EAAEK,GACfo/C,EAAIgC,SAASzhD,EAAEy/C,GACfnmC,EAAImoC,SAASzhD,EAAEsZ,GACf2Y,EAAIyvB,SAAS,SAAYrhD,EAAI,SAAYo/C,EAAI,SAAYnmC,GAAKunC,IAKlE,OAJIxgD,IAAMo/C,GAAKA,IAAMnmC,EAAGgvB,EAAIkZ,EAAIvvB,GAC9BqW,EAAIoZ,SAAS,SAAYrhD,EAAI,SAAYo/C,EAAI,SAAYnmC,GAAKsnC,IAC9DY,EAAIE,SAAS,SAAYrhD,EAAI,SAAYo/C,EAAI,SAAYnmC,GAAKwnC,KAEzD,IAAIM,IAAI,IAAMnvB,EAAI,GAAI,KAAOqW,EAAIrW,GAAI,KAAOA,EAAIuvB,GAAIxhD,EAAE4/C,SAOhD,SAAS+B,IAAIniD,EAAG6Z,EAAGC,EAAGsmC,SACnC,OAA4B,IAArBn3C,UAAU5E,OAAes9C,WAAW3hD,GAAK,IAAI4hD,IAAI5hD,EAAG6Z,EAAGC,EAAc,MAAXsmC,QAAkB,EAAIA,SAGlF,SAASwB,IAAI5hD,EAAG6Z,EAAGC,EAAGsmC,SAC3Br3C,KAAK/I,GAAKA,EACV+I,KAAK8Q,GAAKA,EACV9Q,KAAK+Q,GAAKA,EACV/Q,KAAKq3C,SAAWA,QA0BlB,SAAS8B,QAAQjhD,GACf,OAAOA,EAAIygD,GAAKtnC,KAAKwQ,IAAI3pB,EAAG,EAAI,GAAKA,EAAIwgD,GAAKF,OAGhD,SAASa,QAAQnhD,GACf,OAAOA,EAAIugD,OAAKvgD,EAAIA,EAAIA,EAAIwgD,IAAMxgD,EAAIsgD,QAGxC,SAASc,SAASvZ,GAChB,OAAO,KAAOA,GAAK,SAAY,MAAQA,EAAI,MAAQ1uB,KAAKwQ,IAAIke,EAAG,EAAI,KAAO,MAG5E,SAASmZ,SAASnZ,GAChB,OAAQA,GAAK,MAAQ,OAAUA,EAAI,MAAQ1uB,KAAKwQ,KAAKke,EAAI,MAAS,MAAO,KAG3E,SAASwZ,WAAW9hD,GAClB,GAAIA,aAAaqhD,IAAK,OAAO,IAAIA,IAAIrhD,EAAE8/C,EAAG9/C,EAAEJ,EAAGI,EAAER,EAAGQ,EAAE4/C,SAEtD,GADM5/C,aAAaohD,MAAMphD,EAAImhD,WAAWnhD,IAC5B,IAARA,EAAEqZ,GAAmB,IAARrZ,EAAEsZ,EAAS,OAAO,IAAI+nC,IAAIpR,IAAK,EAAGjwC,EAAER,EAAGQ,EAAE4/C,SAC1D,IAAIE,EAAIlmC,KAAKmoC,MAAM/hD,EAAEsZ,EAAGtZ,EAAEqZ,GAAKsnC,QAC/B,OAAO,IAAIU,IAAIvB,EAAI,EAAIA,EAAI,IAAMA,EAAGlmC,KAAKm3B,KAAK/wC,EAAEqZ,EAAIrZ,EAAEqZ,EAAIrZ,EAAEsZ,EAAItZ,EAAEsZ,GAAItZ,EAAER,EAAGQ,EAAE4/C,SAOxE,SAASoC,IAAIlC,EAAGlgD,EAAGJ,EAAGogD,SAC3B,OAA4B,IAArBn3C,UAAU5E,OAAei+C,WAAWhC,GAAK,IAAIuB,IAAIvB,EAAGlgD,EAAGJ,EAAc,MAAXogD,QAAkB,EAAIA,SAGlF,SAASyB,IAAIvB,EAAGlgD,EAAGJ,EAAGogD,SAC3Br3C,KAAKu3C,GAAKA,EACVv3C,KAAK3I,GAAKA,EACV2I,KAAK/I,GAAKA,EACV+I,KAAKq3C,SAAWA,QA3DlB3gD,OAAOmiD,IAAKO,IAAK3M,OAAOE,OACtBoL,SAAU,SAAAA,SAASlN,GACjB,OAAO,IAAIgO,IAAI74C,KAAK/I,EA7ChB,IA6C8B,MAAL4zC,EAAY,EAAIA,GAAI7qC,KAAK8Q,EAAG9Q,KAAK+Q,EAAG/Q,KAAKq3C,UAExEW,OAAQ,SAAAA,OAASnN,GACf,OAAO,IAAIgO,IAAI74C,KAAK/I,EAhDhB,IAgD8B,MAAL4zC,EAAY,EAAIA,GAAI7qC,KAAK8Q,EAAG9Q,KAAK+Q,EAAG/Q,KAAKq3C,UAExED,IAAK,SAAAA,MACH,IAAI1tB,GAAK1pB,KAAK/I,EAAI,IAAM,IACpB8oC,EAAIkY,MAAMj4C,KAAK8Q,GAAK4Y,EAAIA,EAAI1pB,KAAK8Q,EAAI,IACrCmoC,EAAIhB,MAAMj4C,KAAK+Q,GAAK2Y,EAAIA,EAAI1pB,KAAK+Q,EAAI,IAIzC,OAAO,IAAI+lC,IACTwC,SAAU,WAJZvZ,EAAIsY,GAAKgB,QAAQtZ,IAIW,WAH5BrW,EAAI4uB,GAAKe,QAAQ3vB,IAG2B,UAF5CuvB,EAAIV,GAAKc,QAAQJ,KAGfK,UAAU,SAAYvZ,EAAI,UAAYrW,EAAI,QAAYuvB,GACtDK,SAAU,SAAYvZ,EAAI,SAAYrW,EAAI,UAAYuvB,GACtDj5C,KAAKq3C,aA4CX3gD,OAAOoiD,IAAKW,IAAKhN,OAAOE,OACtBoL,SAAU,SAAAA,SAASlN,GACjB,OAAO,IAAIiO,IAAI94C,KAAKu3C,EAAGv3C,KAAK3I,EAAG2I,KAAK/I,EA3GhC,IA2G8C,MAAL4zC,EAAY,EAAIA,GAAI7qC,KAAKq3C,UAExEW,OAAQ,SAAAA,OAASnN,GACf,OAAO,IAAIiO,IAAI94C,KAAKu3C,EAAGv3C,KAAK3I,EAAG2I,KAAK/I,EA9GhC,IA8G8C,MAAL4zC,EAAY,EAAIA,GAAI7qC,KAAKq3C,UAExED,IAAK,SAAAA,MACH,OAAOwB,WAAW54C,MAAMo3C,UClH5B,IAAI/tB,GAAK,OACLI,EAAI,QACJiwB,GAAK,OACLC,aAAK,OACLC,EAAI,QACJC,GAAKD,EAAID,YACTG,GAAKF,EAAInwB,EACTswB,MAAQtwB,EAAIiwB,EAAIC,YAAItwB,EAgBT,SAAS2wB,oBAAUzC,EAAGt+C,EAAGhC,EAAGogD,SACzC,OAA4B,IAArBn3C,UAAU5E,OAfnB,SAAS2+C,iBAAiBxiD,GACxB,GAAIA,aAAayiD,UAAW,OAAO,IAAIA,UAAUziD,EAAE8/C,EAAG9/C,EAAEwB,EAAGxB,EAAER,EAAGQ,EAAE4/C,SAC5D5/C,aAAaq/C,MAAMr/C,EAAI0/C,WAAW1/C,IACxC,IAAIK,EAAIL,EAAEK,EAAI,IACVo/C,EAAIz/C,EAAEy/C,EAAI,IACVnmC,EAAItZ,EAAEsZ,EAAI,IACV9Z,GAAK8iD,MAAQhpC,EAAI8oC,GAAK/hD,EAAIgiD,GAAK5C,IAAM6C,MAAQF,GAAKC,IAClDK,GAAKppC,EAAI9Z,EACT4zC,GAAK+O,GAAK1C,EAAIjgD,GAAKyiD,EAAIS,IAAMR,YAC7B1gD,EAAIoY,KAAKm3B,KAAKqC,EAAIA,EAAIsP,GAAKA,KAAOP,EAAI3iD,GAAK,EAAIA,IAC/CsgD,EAAIt+C,EAAIoY,KAAKmoC,MAAM3O,EAAGsP,IAAM/B,QAAU,IAAM1Q,IAChD,OAAO,IAAIwS,UAAU3C,EAAI,EAAIA,EAAI,IAAMA,EAAGt+C,EAAGhC,EAAGQ,EAAE4/C,SAIlB4C,CAAiB1C,GAAK,IAAI2C,UAAU3C,EAAGt+C,EAAGhC,EAAc,MAAXogD,QAAkB,EAAIA,SAG9F,SAAS6C,UAAU3C,EAAGt+C,EAAGhC,EAAGogD,SACjCr3C,KAAKu3C,GAAKA,EACVv3C,KAAK/G,GAAKA,EACV+G,KAAK/I,GAAKA,EACV+I,KAAKq3C,SAAWA,QCnCX,SAAS+C,MAAM3B,GAAI4B,GAAIC,GAAIC,GAAIC,IACpC,IAAI9B,GAAKD,GAAKA,GAAIE,GAAKD,GAAKD,GAC5B,QAAS,EAAI,EAAIA,GAAK,EAAIC,GAAKC,IAAM0B,IAC9B,EAAI,EAAI3B,GAAK,EAAIC,IAAM2B,IACvB,EAAI,EAAI7B,GAAK,EAAIC,GAAK,EAAIC,IAAM4B,GACjC5B,GAAK6B,IAAM,EDiCnB9jD,OAAOwjD,UAAWF,oBAAWvN,OAAOE,OAClCoL,SAAU,SAAAA,SAASlN,GAEjB,OADAA,EAAS,MAALA,EHnCc,EADF,GGoCWx5B,KAAKwQ,IHnCd,EADF,GGoC8BgpB,GACvC,IAAIqP,UAAUl6C,KAAKu3C,EAAGv3C,KAAK/G,EAAG+G,KAAK/I,EAAI4zC,EAAG7qC,KAAKq3C,UAExDW,OAAQ,SAAAA,OAASnN,GAEf,OADAA,EAAS,MAALA,EHxCY,GGwCSx5B,KAAKwQ,IHxCd,GGwC0BgpB,GACnC,IAAIqP,UAAUl6C,KAAKu3C,EAAGv3C,KAAK/G,EAAG+G,KAAK/I,EAAI4zC,EAAG7qC,KAAKq3C,UAExDD,IAAK,SAAAA,MACH,IAAIG,EAAIU,MAAMj4C,KAAKu3C,GAAK,GAAKv3C,KAAKu3C,EAAI,KAAOW,QACzCjhD,GAAK+I,KAAK/I,EACV6Z,EAAImnC,MAAMj4C,KAAK/G,GAAK,EAAI+G,KAAK/G,EAAIhC,GAAK,EAAIA,GAC1CwjD,KAAOppC,KAAK0nC,IAAIxB,GAChBmD,KAAOrpC,KAAK2nC,IAAIzB,GACpB,OAAO,IAAIT,IACT,KAAO7/C,EAAI6Z,GAAKuY,EAAIoxB,KAAOhxB,EAAIixB,OAC/B,KAAOzjD,EAAI6Z,GAAK4oC,EAAIe,KAAOd,YAAIe,OAC/B,KAAOzjD,EAAI6Z,GAAK8oC,EAAIa,OACpBz6C,KAAKq3C,aCjDI,ICRAsD,aAAA,SAAS5a,GACtB,OAAO,WACL,OAAOA,ICAX,SAAS6a,OAAO9pC,EAAGxZ,GACjB,OAAO,SAASY,GACd,OAAO4Y,EAAI5Y,EAAIZ,GAUZ,SAASujD,UAAI/pC,EAAGC,GACrB,IAAIzZ,EAAIyZ,EAAID,EACZ,OAAOxZ,EAAIsjD,OAAO9pC,EAAGxZ,EAAI,KAAOA,GAAK,IAAMA,EAAI,IAAM+Z,KAAK0oB,MAAMziC,EAAI,KAAOA,GAAKwjD,aAAS7C,MAAMnnC,GAAKC,EAAID,GAGnG,SAASiqC,MAAMrxB,GACpB,OAAoB,IAAZA,GAAKA,GAAWsxB,QAAU,SAASlqC,EAAGC,GAC5C,OAAOA,EAAID,EAbf,SAASmqC,YAAYnqC,EAAGC,EAAG2Y,GACzB,OAAO5Y,EAAIO,KAAKwQ,IAAI/Q,EAAG4Y,GAAI3Y,EAAIM,KAAKwQ,IAAI9Q,EAAG2Y,GAAK5Y,EAAG4Y,EAAI,EAAIA,EAAG,SAASxxB,GACrE,OAAOmZ,KAAKwQ,IAAI/Q,EAAI5Y,EAAI6Y,EAAG2Y,IAWZuxB,CAAYnqC,EAAGC,EAAG2Y,GAAKoxB,aAAS7C,MAAMnnC,GAAKC,EAAID,IAInD,SAASkqC,QAAQlqC,EAAGC,GACjC,IAAIzZ,EAAIyZ,EAAID,EACZ,OAAOxZ,EAAIsjD,OAAO9pC,EAAGxZ,GAAKwjD,aAAS7C,MAAMnnC,GAAKC,EAAID,GCtBrC,IAAAoqC,QAAA,SAAUC,SAASzxB,GAChC,IAAIktB,MAAQmE,MAAMrxB,GAElB,SAAS0tB,IAAI38B,MAAOC,KAClB,IAAI5iB,EAAI8+C,OAAOn8B,MAAQ2gC,UAAS3gC,QAAQ3iB,GAAI4iB,IAAM0gC,UAAS1gC,MAAM5iB,GAC7Do/C,EAAIN,MAAMn8B,MAAMy8B,EAAGx8B,IAAIw8B,GACvBnmC,EAAI6lC,MAAMn8B,MAAM1J,EAAG2J,IAAI3J,GACvBsmC,QAAU2D,QAAQvgC,MAAM48B,QAAS38B,IAAI28B,SACzC,OAAO,SAASn/C,GAKd,OAJAuiB,MAAM3iB,EAAIA,EAAEI,GACZuiB,MAAMy8B,EAAIA,EAAEh/C,GACZuiB,MAAM1J,EAAIA,EAAE7Y,GACZuiB,MAAM48B,QAAUA,QAAQn/C,GACjBuiB,MAAQ,IAMnB,OAFA28B,IAAI2D,MAAQI,SAEL/D,IAnBM,CAoBZ,GAEH,SAASiE,UAAUC,QACjB,OAAO,SAASC,QACd,IAIIvkD,EAAG4/C,MAJHn+C,EAAI8iD,OAAOjgD,OACXxD,EAAI,IAAIsI,MAAM3H,GACdy+C,EAAI,IAAI92C,MAAM3H,GACdsY,EAAI,IAAI3Q,MAAM3H,GAElB,IAAKzB,EAAI,EAAGA,EAAIyB,IAAKzB,EACnB4/C,MAAQwE,UAASG,OAAOvkD,IACxBc,EAAEd,GAAK4/C,MAAM9+C,GAAK,EAClBo/C,EAAElgD,GAAK4/C,MAAMM,GAAK,EAClBnmC,EAAE/Z,GAAK4/C,MAAM7lC,GAAK,EAMpB,OAJAjZ,EAAIwjD,OAAOxjD,GACXo/C,EAAIoE,OAAOpE,GACXnmC,EAAIuqC,OAAOvqC,GACX6lC,MAAMS,QAAU,EACT,SAASn/C,GAId,OAHA0+C,MAAM9+C,EAAIA,EAAEI,GACZ0+C,MAAMM,EAAIA,EAAEh/C,GACZ0+C,MAAM7lC,EAAIA,EAAE7Y,GACL0+C,MAAQ,KAKd,IAAI4E,SAAWH,UH7CP,SAASzmC,QACtB,IAAInc,EAAImc,OAAOtZ,OAAS,EACxB,OAAO,SAASpD,GACd,IAAIlB,EAAIkB,GAAK,EAAKA,EAAI,EAAKA,GAAK,GAAKA,EAAI,EAAGO,EAAI,GAAK4Y,KAAKgzB,MAAMnsC,EAAIO,GAChE6hD,GAAK1lC,OAAO5d,GACZujD,GAAK3lC,OAAO5d,EAAI,GAChBqjD,GAAKrjD,EAAI,EAAI4d,OAAO5d,EAAI,GAAK,EAAIsjD,GAAKC,GACtCC,GAAKxjD,EAAIyB,EAAI,EAAImc,OAAO5d,EAAI,GAAK,EAAIujD,GAAKD,GAC9C,OAAOF,OAAOliD,EAAIlB,EAAIyB,GAAKA,EAAG4hD,GAAIC,GAAIC,GAAIC,OIhB/BiB,YDsDaJ,UEpDb,SAASzmC,QACtB,IAAInc,EAAImc,OAAOtZ,OACf,OAAO,SAASpD,GACd,IAAIlB,EAAIqa,KAAKgzB,QAAQnsC,GAAK,GAAK,IAAMA,EAAIA,GAAKO,GAC1C4hD,GAAKzlC,QAAQ5d,EAAIyB,EAAI,GAAKA,GAC1B6hD,GAAK1lC,OAAO5d,EAAIyB,GAChB8hD,GAAK3lC,QAAQ5d,EAAI,GAAKyB,GACtB+hD,GAAK5lC,QAAQ5d,EAAI,GAAKyB,GAC1B,OAAO2hD,OAAOliD,EAAIlB,EAAIyB,GAAKA,EAAG4hD,GAAIC,GAAIC,GAAIC,ODV/B,SAAS1pC,EAAGC,GACzB,OAAeA,GAARD,GAAKA,EAAW,SAAS5Y,GAC9B,OAAO4Y,EAAIC,EAAI7Y,wREAJ,ICAXwjD,IAAM,8CACNC,IAAM,IAAI3gD,OAAO0gD,IAAIj2B,OAAQ,KAclB,IAAAm2B,WAAA,SAAS9qC,EAAGC,GACzB,IACI8qC,GACAC,GACAC,GAHAC,GAAKN,IAAIO,UAAYN,IAAIM,UAAY,EAIrCjlD,GAAK,EACLiC,KACAijD,KAMJ,IAHAprC,GAAQ,GAAIC,GAAQ,IAGZ8qC,GAAKH,IAAI7E,KAAK/lC,MACdgrC,GAAKH,IAAI9E,KAAK9lC,MACfgrC,GAAKD,GAAGx2C,OAAS02C,KACpBD,GAAKhrC,EAAEohB,MAAM6pB,GAAID,IACb9iD,EAAEjC,GAAIiC,EAAEjC,IAAM+kD,GACb9iD,IAAIjC,GAAK+kD,KAEXF,GAAKA,GAAG,OAASC,GAAKA,GAAG,IACxB7iD,EAAEjC,GAAIiC,EAAEjC,IAAM8kD,GACb7iD,IAAIjC,GAAK8kD,IAEd7iD,IAAIjC,GAAK,KACTklD,EAAEn9C,MAAM/H,EAAGA,EAAG+oC,EAAGmI,WAAO2T,GAAIC,OAE9BE,GAAKL,IAAIM,UAYX,OARID,GAAKjrC,EAAEzV,SACTygD,GAAKhrC,EAAEohB,MAAM6pB,IACT/iD,EAAEjC,GAAIiC,EAAEjC,IAAM+kD,GACb9iD,IAAIjC,GAAK+kD,IAKT9iD,EAAEqC,OAAS,EAAK4gD,EAAE,GA7C3B,SAASC,IAAIprC,GACX,OAAO,SAAS7Y,GACd,OAAO6Y,EAAE7Y,GAAK,IA4CVikD,CAAID,EAAE,GAAGnc,GApDjB,SAASqc,YAAKrrC,GACZ,OAAO,WACL,OAAOA,GAmDHqrC,CAAKrrC,IACJA,EAAImrC,EAAE5gD,OAAQ,SAASpD,GACtB,IAAK,IAAWT,EAAPT,EAAI,EAAMA,EAAI+Z,IAAK/Z,EAAGiC,GAAGxB,EAAIykD,EAAEllD,IAAIA,GAAKS,EAAEsoC,EAAE7nC,GACrD,OAAOe,EAAE4B,KAAK,oSCpDT,ICPXwhD,QACAC,QACAC,QACAC,QDIWC,UAAA,SAAS3rC,EAAGC,GACzB,IAAkB1Z,EAAda,EAAIwkD,aAAO3rC,GACf,OAAY,MAALA,GAAmB,YAAN7Y,EAAkB4iD,aAAS/pC,IAClC,WAAN7Y,EAAiBgwC,WACZ,WAANhwC,GAAmBb,EAAIu/C,YAAM7lC,KAAOA,EAAI1Z,EAAG+/C,SAAOuF,WAClD5rC,aAAa6lC,YAAQQ,QACrBrmC,aAAaoW,KEfN,SAASrW,EAAGC,GACzB,IAAIzZ,EAAI,IAAI6vB,KACZ,OAAepW,GAARD,GAAKA,EAAW,SAAS5Y,GAC9B,OAAOZ,EAAEslD,QAAQ9rC,EAAIC,EAAI7Y,GAAIZ,IFazB8I,MAAMmuB,QAAQxd,GGdP,SAASD,EAAGC,GACzB,IAII/Z,EAJA6lD,GAAK9rC,EAAIA,EAAEzV,OAAS,EACpBwhD,GAAKhsC,EAAIO,KAAKjE,IAAIyvC,GAAI/rC,EAAExV,QAAU,EAClCykC,EAAI,IAAI3/B,MAAM08C,IACdzlD,EAAI,IAAI+I,MAAMy8C,IAGlB,IAAK7lD,EAAI,EAAGA,EAAI8lD,KAAM9lD,EAAG+oC,EAAE/oC,GAAKiB,UAAM6Y,EAAE9Z,GAAI+Z,EAAE/Z,IAC9C,KAAOA,EAAI6lD,KAAM7lD,EAAGK,EAAEL,GAAK+Z,EAAE/Z,GAE7B,OAAO,SAASkB,GACd,IAAKlB,EAAI,EAAGA,EAAI8lD,KAAM9lD,EAAGK,EAAEL,GAAK+oC,EAAE/oC,GAAGkB,GACrC,OAAOb,IHGkB,mBAAd0Z,EAAEkE,SAAgD,mBAAflE,EAAE0X,UAA2BwvB,MAAMlnC,GFftE,SAASD,EAAGC,GACzB,IAEI85B,EAFA7zC,KACAK,KAMJ,IAAKwzC,KAHK,OAAN/5B,GAA2B,WAAbmd,QAAOnd,KAAgBA,MAC/B,OAANC,GAA2B,WAAbkd,QAAOld,KAAgBA,MAE/BA,EACJ85B,KAAK/5B,EACP9Z,EAAE6zC,GAAK5yC,UAAM6Y,EAAE+5B,GAAI95B,EAAE85B,IAErBxzC,EAAEwzC,GAAK95B,EAAE85B,GAIb,OAAO,SAAS3yC,GACd,IAAK2yC,KAAK7zC,EAAGK,EAAEwzC,GAAK7zC,EAAE6zC,GAAG3yC,GACzB,OAAOb,IEFH6wC,YAAQp3B,EAAGC,IIlBJgsC,UAAA,SAASjsC,EAAGC,GACzB,OAAeA,GAARD,GAAKA,EAAW,SAAS5Y,GAC9B,OAAOmZ,KAAK0oB,MAAMjpB,EAAIC,EAAI7Y,KCF1B8kD,QAAU,IAAM3rC,KAAK8mC,GAEd5kB,oBACT0pB,WAAY,EACZC,WAAY,EACZC,OAAQ,EACRC,MAAO,EACPC,OAAQ,EACRC,OAAQ,GAGKC,UAAA,SAASzsC,EAAGC,EAAG1Z,EAAGC,EAAGsK,EAAGzG,GACrC,IAAIkiD,OAAQC,OAAQF,MAKpB,OAJIC,OAAShsC,KAAKm3B,KAAK13B,EAAIA,EAAIC,EAAIA,MAAID,GAAKusC,OAAQtsC,GAAKssC,SACrDD,MAAQtsC,EAAIzZ,EAAI0Z,EAAIzZ,KAAGD,GAAKyZ,EAAIssC,MAAO9lD,GAAKyZ,EAAIqsC,QAChDE,OAASjsC,KAAKm3B,KAAKnxC,EAAIA,EAAIC,EAAIA,MAAID,GAAKimD,OAAQhmD,GAAKgmD,OAAQF,OAASE,QACtExsC,EAAIxZ,EAAIyZ,EAAI1Z,IAAGyZ,GAAKA,EAAGC,GAAKA,EAAGqsC,OAASA,MAAOC,QAAUA,SAE3DJ,WAAYr7C,EACZs7C,WAAY/hD,EACZgiD,OAAQ9rC,KAAKmoC,MAAMzoC,EAAGD,GAAKksC,QAC3BI,MAAO/rC,KAAKmsC,KAAKJ,OAASJ,QAC1BK,OAAQA,OACRC,OAAQA,SCpBZ,SAASG,qBAAqB1jD,MAAO2jD,QAASC,QAASC,UAErD,SAASC,IAAI5kD,GACX,OAAOA,EAAEqC,OAASrC,EAAE4kD,MAAQ,IAAM,GAsCpC,OAAO,SAAS/sC,EAAGC,GACjB,IAAI9X,KACAijD,KAOJ,OANAprC,EAAI/W,MAAM+W,GAAIC,EAAIhX,MAAMgX,GAtC1B,SAAS+sC,UAAUC,GAAIC,GAAIC,GAAIC,GAAIjlD,EAAGijD,GACpC,GAAI6B,KAAOE,IAAMD,KAAOE,GAAI,CAC1B,IAAIlnD,EAAIiC,EAAE8F,KAAK,aAAc,KAAM2+C,QAAS,KAAMC,SAClDzB,EAAEn9C,MAAM/H,EAAGA,EAAI,EAAG+oC,EAAGmI,WAAO6V,GAAIE,MAAOjnD,EAAGA,EAAI,EAAG+oC,EAAGmI,WAAO8V,GAAIE,WACtDD,IAAMC,KACfjlD,EAAE8F,KAAK,aAAek/C,GAAKP,QAAUQ,GAAKP,SAkC5CG,CAAUhtC,EAAEmsC,WAAYnsC,EAAEosC,WAAYnsC,EAAEksC,WAAYlsC,EAAEmsC,WAAYjkD,EAAGijD,GA9BvE,SAASiB,OAAOrsC,EAAGC,EAAG9X,EAAGijD,GACnBprC,IAAMC,GACJD,EAAIC,EAAI,IAAKA,GAAK,IAAcA,EAAID,EAAI,MAAKA,GAAK,KACtDorC,EAAEn9C,MAAM/H,EAAGiC,EAAE8F,KAAK8+C,IAAI5kD,GAAK,UAAW,KAAM2kD,UAAY,EAAG7d,EAAGmI,WAAOp3B,EAAGC,MAC/DA,GACT9X,EAAE8F,KAAK8+C,IAAI5kD,GAAK,UAAY8X,EAAI6sC,UA0BlCT,CAAOrsC,EAAEqsC,OAAQpsC,EAAEosC,OAAQlkD,EAAGijD,GAtBhC,SAASkB,MAAMtsC,EAAGC,EAAG9X,EAAGijD,GAClBprC,IAAMC,EACRmrC,EAAEn9C,MAAM/H,EAAGiC,EAAE8F,KAAK8+C,IAAI5kD,GAAK,SAAU,KAAM2kD,UAAY,EAAG7d,EAAGmI,WAAOp3B,EAAGC,KAC9DA,GACT9X,EAAE8F,KAAK8+C,IAAI5kD,GAAK,SAAW8X,EAAI6sC,UAmBjCR,CAAMtsC,EAAEssC,MAAOrsC,EAAEqsC,MAAOnkD,EAAGijD,GAf7B,SAAS/Q,MAAM4S,GAAIC,GAAIC,GAAIC,GAAIjlD,EAAGijD,GAChC,GAAI6B,KAAOE,IAAMD,KAAOE,GAAI,CAC1B,IAAIlnD,EAAIiC,EAAE8F,KAAK8+C,IAAI5kD,GAAK,SAAU,KAAM,IAAK,KAAM,KACnDijD,EAAEn9C,MAAM/H,EAAGA,EAAI,EAAG+oC,EAAGmI,WAAO6V,GAAIE,MAAOjnD,EAAGA,EAAI,EAAG+oC,EAAGmI,WAAO8V,GAAIE,WAC/C,IAAPD,IAAmB,IAAPC,IACrBjlD,EAAE8F,KAAK8+C,IAAI5kD,GAAK,SAAWglD,GAAK,IAAMC,GAAK,KAW7C/S,CAAMr6B,EAAEusC,OAAQvsC,EAAEwsC,OAAQvsC,EAAEssC,OAAQtsC,EAAEusC,OAAQrkD,EAAGijD,GACjDprC,EAAIC,EAAI,KACD,SAAS7Y,GAEd,IADA,IAA0BT,EAAtBT,GAAK,EAAGyB,EAAIyjD,EAAE5gD,SACTtE,EAAIyB,GAAGQ,GAAGxB,EAAIykD,EAAEllD,IAAIA,GAAKS,EAAEsoC,EAAE7nC,GACtC,OAAOe,EAAE4B,KAAK,MAKb,IAAIsjD,wBAA0BV,qBLtD9B,SAASW,SAASnmD,OACvB,MAAc,SAAVA,MAAyBs7B,oBACxB8oB,UAASA,QAAUviB,SAASyJ,cAAc,OAAQ+Y,QAAUxiB,SAASukB,gBAAiB9B,QAAUziB,SAASwkB,aAC9GjC,QAAQ5gB,MAAM8iB,UAAYtmD,MAC1BA,MAAQskD,QAAQiC,iBAAiBlC,QAAQxW,YAAYuW,SAAU,MAAMoC,iBAAiB,aACtFnC,QAAQ51B,YAAY21B,SACpBpkD,MAAQA,MAAMk6B,MAAM,GAAI,GAAG+J,MAAM,KAC1BqhB,WAAWtlD,MAAM,IAAKA,MAAM,IAAKA,MAAM,IAAKA,MAAM,IAAKA,MAAM,IAAKA,MAAM,MK+Cb,OAAQ,MAAO,QACxEymD,wBAA0BjB,qBL7C9B,SAASkB,SAAS1mD,OACvB,OAAa,MAATA,MAAsBs7B,oBACrBipB,UAASA,QAAU1iB,SAAS+M,gBAAgB,6BAA8B,MAC/E2V,QAAQzW,aAAa,YAAa9tC,QAC5BA,MAAQukD,QAAQ+B,UAAUK,QAAQC,gBACxC5mD,MAAQA,MAAM6mD,OACPvB,UAAUtlD,MAAM6Y,EAAG7Y,MAAM8Y,EAAG9Y,MAAMZ,EAAGY,MAAMX,EAAGW,MAAM2J,EAAG3J,MAAMkD,IAFLo4B,qBKyCG,KAAM,IAAK,KC9DrEliB,KAAK0tC,MCGf,SAAStH,QAAIoD,KACX,OAAO,SAASpgC,MAAOC,KACrB,IAAI68B,EAAIsD,KAAKpgC,MAAQukC,IAASvkC,QAAQ88B,GAAI78B,IAAMskC,IAAStkC,MAAM68B,GAC3Dt+C,EAAI29C,QAAMn8B,MAAMxhB,EAAGyhB,IAAIzhB,GACvBhC,EAAI2/C,QAAMn8B,MAAMxjB,EAAGyjB,IAAIzjB,GACvBogD,QAAUT,QAAMn8B,MAAM48B,QAAS38B,IAAI28B,SACvC,OAAO,SAASn/C,GAKd,OAJAuiB,MAAM88B,EAAIA,EAAEr/C,GACZuiB,MAAMxhB,EAAIA,EAAEf,GACZuiB,MAAMxjB,EAAIA,EAAEiB,GACZuiB,MAAM48B,QAAUA,QAAQn/C,GACjBuiB,MAAQ,KAKNg9B,QAAIoD,WAAJpD,IACJwH,QAAUxH,QAAIb,SCjBzB,SAAS6C,QAAIoB,KACX,OAAO,SAASpgC,MAAOC,KACrB,IAAI68B,EAAIsD,KAAKpgC,MAAQykC,IAASzkC,QAAQ88B,GAAI78B,IAAMwkC,IAASxkC,MAAM68B,GAC3DlgD,EAAIu/C,QAAMn8B,MAAMpjB,EAAGqjB,IAAIrjB,GACvBJ,EAAI2/C,QAAMn8B,MAAMxjB,EAAGyjB,IAAIzjB,GACvBogD,QAAUT,QAAMn8B,MAAM48B,QAAS38B,IAAI28B,SACvC,OAAO,SAASn/C,GAKd,OAJAuiB,MAAM88B,EAAIA,EAAEr/C,GACZuiB,MAAMpjB,EAAIA,EAAEa,GACZuiB,MAAMxjB,EAAIA,EAAEiB,GACZuiB,MAAM48B,QAAUA,QAAQn/C,GACjBuiB,MAAQ,KAKNg/B,QAAIoB,WACEpB,QAAI7C,SCjBzB,SAASoD,wBAAUa,KACjB,OAAQ,SAASsE,eAAez1B,GAG9B,SAASswB,UAAUv/B,MAAOC,KACxB,IAAI68B,EAAIsD,KAAKpgC,MAAQ2kC,oBAAe3kC,QAAQ88B,GAAI78B,IAAM0kC,oBAAe1kC,MAAM68B,GACvEt+C,EAAI29C,QAAMn8B,MAAMxhB,EAAGyhB,IAAIzhB,GACvBhC,EAAI2/C,QAAMn8B,MAAMxjB,EAAGyjB,IAAIzjB,GACvBogD,QAAUT,QAAMn8B,MAAM48B,QAAS38B,IAAI28B,SACvC,OAAO,SAASn/C,GAKd,OAJAuiB,MAAM88B,EAAIA,EAAEr/C,GACZuiB,MAAMxhB,EAAIA,EAAEf,GACZuiB,MAAMxjB,EAAIA,EAAEoa,KAAKwQ,IAAI3pB,EAAGwxB,IACxBjP,MAAM48B,QAAUA,QAAQn/C,GACjBuiB,MAAQ,IAMnB,OAlBAiP,GAAKA,EAgBLswB,UAAUe,MAAQoE,eAEXnF,UAnBD,CAoBL,GAGUA,wBAAUa,WAAVb,IACJqF,cAAgBrF,wBAAUpD,SC5BtB,SAAS0I,oBAAUC,YAAa3qC,QAE7C,IADA,IAAI5d,EAAI,EAAGyB,EAAImc,OAAOtZ,OAAS,EAAGuZ,EAAID,OAAO,GAAIrZ,EAAI,IAAI6E,MAAM3H,EAAI,EAAI,EAAIA,GACpEzB,EAAIyB,GAAG8C,EAAEvE,GAAKuoD,YAAY1qC,EAAGA,EAAID,SAAS5d,IACjD,OAAO,SAASkB,GACd,IAAIlB,EAAIqa,KAAK9D,IAAI,EAAG8D,KAAKjE,IAAI3U,EAAI,EAAG4Y,KAAKgzB,MAAMnsC,GAAKO,KACpD,OAAO8C,EAAEvE,GAAGkB,EAAIlB,ICLL,ICAAwoD,sBAAA,SAASzf,GACtB,OAAO,WACL,OAAOA,ICFI0f,oBAAA,SAAS1f,GACtB,OAAQA,GCKNhxB,iBAAQ,EAAG,GAER,SAAS2wC,oBAAoB5uC,EAAGC,GACrC,OAAQA,GAAMD,GAAKA,GACb,SAASivB,GAAK,OAAQA,EAAIjvB,GAAKC,GAC/B+pC,sBAAS/pC,GAiBjB,SAAS4uC,MAAM1yC,OAAQgO,MAAO2kC,cAAeC,eAC3C,IAAIC,GAAK7yC,OAAO,GAAIq/B,GAAKr/B,OAAO,GAAI8+B,GAAK9wB,MAAM,GAAI+wB,GAAK/wB,MAAM,GAG9D,OAFIqxB,GAAKwT,IAAIA,GAAKF,cAActT,GAAIwT,IAAK/T,GAAK8T,cAAc7T,GAAID,MAC3D+T,GAAKF,cAAcE,GAAIxT,IAAKP,GAAK8T,cAAc9T,GAAIC,KACjD,SAASjM,GAAK,OAAOgM,GAAG+T,GAAG/f,KAGpC,SAASggB,QAAQ9yC,OAAQgO,MAAO2kC,cAAeC,eAC7C,IAAIlkD,EAAI0V,KAAKjE,IAAIH,OAAO3R,OAAQ2f,MAAM3f,QAAU,EAC5ChE,EAAI,IAAI8I,MAAMzE,GACd7D,EAAI,IAAIsI,MAAMzE,GACd3E,GAAK,EAQT,IALIiW,OAAOtR,GAAKsR,OAAO,KACrBA,OAASA,OAAOklB,QAAQ1Y,UACxBwB,MAAQA,MAAMkX,QAAQ1Y,aAGfziB,EAAI2E,GACXrE,EAAEN,GAAK4oD,cAAc3yC,OAAOjW,GAAIiW,OAAOjW,EAAI,IAC3Cc,EAAEd,GAAK6oD,cAAc5kC,MAAMjkB,GAAIikB,MAAMjkB,EAAI,IAG3C,OAAO,SAAS+oC,GACd,IAAI/oC,EAAIgpD,OAAO/yC,OAAQ8yB,EAAG,EAAGpkC,GAAK,EAClC,OAAO7D,EAAEd,GAAGM,EAAEN,GAAG+oC,KAId,SAASqL,KAAK3lB,OAAQw6B,QAC3B,OAAOA,OACFhzC,OAAOwY,OAAOxY,UACdgO,MAAMwK,OAAOxK,SACbskC,YAAY95B,OAAO85B,eACnBW,MAAMz6B,OAAOy6B,SAKL,SAASC,WAAWP,cAAeC,eAChD,IAIIP,UACAc,OACAC,MANApzC,OAAS8B,gBACTkM,MAAQlM,gBACRwwC,YAAce,UACdJ,OAAQ,EAKZ,SAASvU,UAGP,OAFA2T,UAAYjuC,KAAKjE,IAAIH,OAAO3R,OAAQ2f,MAAM3f,QAAU,EAAIykD,QAAUJ,MAClES,OAASC,MAAQ,KACVlV,MAGT,SAASA,MAAMpL,GACb,OAAQqgB,SAAWA,OAASd,UAAUryC,OAAQgO,MAAOilC,MAtEzD,SAASK,mBAAmBX,eAC1B,OAAO,SAAS9uC,EAAGC,GACjB,IAAIzZ,EAAIsoD,cAAc9uC,GAAKA,EAAGC,GAAKA,GACnC,OAAO,SAASgvB,GAAK,OAAOA,GAAKjvB,EAAI,EAAIivB,GAAKhvB,EAAI,EAAIzZ,EAAEyoC,KAmEKwgB,CAAmBX,eAAiBA,cAAeL,gBAAgBxf,GA2BlI,OAxBAoL,MAAMgB,OAAS,SAASziB,GACtB,OAAQ22B,QAAUA,MAAQf,UAAUrkC,MAAOhO,OAAQyyC,oBAAqBQ,MAnE5E,SAASM,mBAAmBX,eAC1B,OAAO,SAAS/uC,EAAGC,GACjB,IAAIjZ,EAAI+nD,cAAc/uC,GAAKA,EAAGC,GAAKA,GACnC,OAAO,SAAS7Y,GAAK,OAAOA,GAAK,EAAI4Y,EAAI5Y,GAAK,EAAI6Y,EAAIjZ,EAAEI,KAgEwBsoD,CAAmBX,eAAiBA,kBAAkBn2B,IAGxIyhB,MAAMl+B,OAAS,SAASsJ,GACtB,OAAOrW,UAAU5E,QAAU2R,OAAStS,cAAIxD,KAAKof,EAAG2xB,qBAASyD,WAAa1+B,OAAOklB,SAG/EgZ,MAAMlwB,MAAQ,SAAS1E,GACrB,OAAOrW,UAAU5E,QAAU2f,MAAQkX,YAAMh7B,KAAKof,GAAIo1B,WAAa1wB,MAAMkX,SAGvEgZ,MAAMU,WAAa,SAASt1B,GAC1B,OAAO0E,MAAQkX,YAAMh7B,KAAKof,GAAIgpC,YAAckB,UAAkB9U,WAGhER,MAAM+U,MAAQ,SAAS3pC,GACrB,OAAOrW,UAAU5E,QAAU4kD,QAAU3pC,EAAGo1B,WAAauU,OAGvD/U,MAAMoU,YAAc,SAAShpC,GAC3B,OAAOrW,UAAU5E,QAAUikD,YAAchpC,EAAGo1B,WAAa4T,aAGpD5T,UC5GM,IAAA+U,cAAA,SAAS3gB,EAAG/mC,GACzB,IAAKhC,GAAK+oC,EAAI/mC,EAAI+mC,EAAE4gB,cAAc3nD,EAAI,GAAK+mC,EAAE4gB,iBAAiBC,QAAQ,MAAQ,EAAG,OAAO,KACxF,IAAI5pD,EAAG6pD,YAAc9gB,EAAE5N,MAAM,EAAGn7B,GAIhC,OACE6pD,YAAYvlD,OAAS,EAAIulD,YAAY,GAAKA,YAAY1uB,MAAM,GAAK0uB,aAChE9gB,EAAE5N,MAAMn7B,EAAI,KCTF8pD,aAAA,SAAS/gB,GACtB,OAAOA,EAAI2gB,cAAcrvC,KAAK83B,IAAIpJ,KAASA,EAAE,GAAK2H,KCFhDqZ,GAAK,2EAEM,SAASC,gBAAgBC,WACtC,OAAO,IAAIC,gBAAgBD,WAK7B,SAASC,gBAAgBD,WACvB,KAAM5zB,MAAQ0zB,GAAGlK,KAAKoK,YAAa,MAAM,IAAItiD,MAAM,mBAAqBsiD,WACxE,IAAI5zB,MACJrtB,KAAKmhD,KAAO9zB,MAAM,IAAM,IACxBrtB,KAAK0rC,MAAQre,MAAM,IAAM,IACzBrtB,KAAKohD,KAAO/zB,MAAM,IAAM,IACxBrtB,KAAKqhD,OAASh0B,MAAM,IAAM,GAC1BrtB,KAAKo8C,OAAS/uB,MAAM,GACpBrtB,KAAKy9B,MAAQpQ,MAAM,KAAOA,MAAM,GAChCrtB,KAAKshD,QAAUj0B,MAAM,GACrBrtB,KAAKuhD,UAAYl0B,MAAM,KAAOA,MAAM,GAAG8E,MAAM,GAC7CnyB,KAAKsmB,OAAS+G,MAAM,GACpBrtB,KAAKyD,KAAO4pB,MAAM,KAAO,GAd3B2zB,gBAAgBloD,UAAYooD,gBAAgBpoD,UAiB5CooD,gBAAgBpoD,UAAU2vB,SAAW,WACnC,OAAOzoB,KAAKmhD,KACNnhD,KAAK0rC,MACL1rC,KAAKohD,KACLphD,KAAKqhD,QACJrhD,KAAKo8C,KAAO,IAAM,KACJ,MAAdp8C,KAAKy9B,MAAgB,GAAKpsB,KAAK9D,IAAI,EAAgB,EAAbvN,KAAKy9B,SAC3Cz9B,KAAKshD,MAAQ,IAAM,KACD,MAAlBthD,KAAKuhD,UAAoB,GAAK,IAAMlwC,KAAK9D,IAAI,EAAoB,EAAjBvN,KAAKuhD,aACrDvhD,KAAKsmB,KAAO,IAAM,IACnBtmB,KAAKyD,MCjCE,ICCJ+9C,eCAPC,qBACOxnD,qBACAynD,2BFHIC,WAAA,SAAS1oD,GACtB2oD,IAAK,IAAK,IAAkCC,GAA9BppD,EAAIQ,EAAEqC,OAAQtE,EAAI,EAAGuyC,IAAM,EAAOvyC,EAAIyB,IAAKzB,EACvD,OAAQiC,EAAEjC,IACR,IAAK,IAAKuyC,GAAKsY,GAAK7qD,EAAG,MACvB,IAAK,IAAgB,IAAPuyC,KAAUA,GAAKvyC,GAAG6qD,GAAK7qD,EAAG,MACxC,QAAS,GAAIuyC,GAAK,EAAG,CAAE,KAAMtwC,EAAEjC,GAAI,MAAM4qD,IAAKrY,GAAK,GAGvD,OAAOA,GAAK,EAAItwC,EAAEk5B,MAAM,EAAGoX,IAAMtwC,EAAEk5B,MAAM0vB,GAAK,GAAK5oD,GGPtC6oD,cAAA,SAAS/hB,EAAG/mC,GACzB,IAAI1B,EAAIopD,cAAc3gB,EAAG/mC,GACzB,IAAK1B,EAAG,OAAOyoC,EAAI,GACnB,IAAI8gB,YAAcvpD,EAAE,GAChByqD,SAAWzqD,EAAE,GACjB,OAAOyqD,SAAW,EAAI,KAAO,IAAI3hD,OAAO2hD,UAAUlnD,KAAK,KAAOgmD,YACxDA,YAAYvlD,OAASymD,SAAW,EAAIlB,YAAY1uB,MAAM,EAAG4vB,SAAW,GAAK,IAAMlB,YAAY1uB,MAAM4vB,SAAW,GAC5GlB,YAAc,IAAIzgD,MAAM2hD,SAAWlB,YAAYvlD,OAAS,GAAGT,KAAK,MCNzDmnD,aACbC,IAAK,SAAA1rC,EAASwpB,EAAG/mC,GAAK,OAAY,IAAJ+mC,GAASmiB,QAAQlpD,IAC/C+X,EAAK,SAAAA,EAASgvB,GAAK,OAAO1uB,KAAK0oB,MAAMgG,GAAGtX,SAAS,IACjDpxB,EAAK,SAAAA,EAAS0oC,GAAK,OAAOA,EAAI,IAC9BzoC,EAAK,SAAAA,EAASyoC,GAAK,OAAO1uB,KAAK0oB,MAAMgG,GAAGtX,SAAS,KACjD7mB,EAAK,SAAAA,EAASm+B,EAAG/mC,GAAK,OAAO+mC,EAAE4gB,cAAc3nD,IAC7CmC,EAAK,SAAAA,EAAS4kC,EAAG/mC,GAAK,OAAO+mC,EAAEmiB,QAAQlpD,IACvCk+C,EAAK,SAAAA,EAASnX,EAAG/mC,GAAK,OAAO+mC,EAAEoiB,YAAYnpD,IAC3CvB,EAAK,SAAAA,EAASsoC,GAAK,OAAO1uB,KAAK0oB,MAAMgG,GAAGtX,SAAS,IACjDzvB,EAAK,SAAAA,EAAS+mC,EAAG/mC,IAAK,OAAO8oD,cAAkB,IAAJ/hB,EAAS/mC,KACpDlB,EAAKgqD,cACL7oD,EHVa,SAAS8mC,EAAG/mC,GACzB,IAAI1B,EAAIopD,cAAc3gB,EAAG/mC,GACzB,IAAK1B,EAAG,OAAOyoC,EAAI,GACnB,IAAI8gB,YAAcvpD,EAAE,GAChByqD,SAAWzqD,EAAE,GACbN,EAAI+qD,UAAYP,eAAuE,EAAtDnwC,KAAK9D,KAAK,EAAG8D,KAAKjE,IAAI,EAAGiE,KAAKgzB,MAAM0d,SAAW,MAAY,EAC5FtpD,EAAIooD,YAAYvlD,OACpB,OAAOtE,IAAMyB,EAAIooD,YACX7pD,EAAIyB,EAAIooD,YAAc,IAAIzgD,MAAMpJ,EAAIyB,EAAI,GAAGoC,KAAK,KAChD7D,EAAI,EAAI6pD,YAAY1uB,MAAM,EAAGn7B,GAAK,IAAM6pD,YAAY1uB,MAAMn7B,GAC1D,KAAO,IAAIoJ,MAAM,EAAIpJ,GAAG6D,KAAK,KAAO6lD,cAAc3gB,EAAG1uB,KAAK9D,IAAI,EAAGvU,EAAIhC,EAAI,IAAI,IGCnForD,EAAK,SAAAA,EAASriB,GAAK,OAAO1uB,KAAK0oB,MAAMgG,GAAGtX,SAAS,IAAI45B,eACrDtiB,EAAK,SAAAA,EAASA,IAAK,OAAO1uB,KAAK0oB,MAAMgG,IAAGtX,SAAS,MChBpC65B,aAAA,SAASviB,GACtB,OAAOA,GCQLwiB,UAAY,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAEhEC,WAAA,SAASf,QACtB,IAAIgB,MAAQhB,OAAOiB,UAAYjB,OAAOkB,UCZzB,SAASD,SAAUC,WAChC,OAAO,SAAS1qD,MAAOwlC,OAOrB,IANA,IAAIzmC,EAAIiB,MAAMqD,OACVpD,KACAyD,EAAI,EACJu7C,EAAIwL,SAAS,GACbpnD,OAAS,EAENtE,EAAI,GAAKkgD,EAAI,IACd57C,OAAS47C,EAAI,EAAIzZ,QAAOyZ,EAAI7lC,KAAK9D,IAAI,EAAGkwB,MAAQniC,SACpDpD,EAAE6G,KAAK9G,MAAM2qD,UAAU5rD,GAAKkgD,EAAGlgD,EAAIkgD,OAC9B57C,QAAU47C,EAAI,GAAKzZ,SACxByZ,EAAIwL,SAAS/mD,GAAKA,EAAI,GAAK+mD,SAASpnD,QAGtC,OAAOpD,EAAEuhB,UAAU5e,KAAK8nD,YDHwBE,CAAYpB,OAAOiB,SAAUjB,OAAOkB,WAAapvB,aAC/FuvB,SAAWrB,OAAOqB,SAClBC,QAAUtB,OAAOsB,QACjBC,SAAWvB,OAAOuB,SEfT,SAASA,UACtB,OAAO,SAAS/qD,OACd,OAAOA,MAAMupC,QAAQ,SAAU,SAASxqC,GACtC,OAAOgsD,UAAUhsD,MFYYisD,CAAexB,OAAOuB,UAAYzvB,aAC/D2vB,QAAUzB,OAAOyB,SAAW,IAEhC,SAASC,UAAUlC,WAGjB,IAAIE,MAFJF,UAAYD,gBAAgBC,YAEPE,KACjBzV,MAAQuV,UAAUvV,MAClB0V,KAAOH,UAAUG,KACjBC,OAASJ,UAAUI,OACnBjF,KAAO6E,UAAU7E,KACjB3e,MAAQwjB,UAAUxjB,MAClB6jB,MAAQL,UAAUK,MAClBC,UAAYN,UAAUM,UACtBj7B,KAAO26B,UAAU36B,KACjB7iB,KAAOw9C,UAAUx9C,KAGR,MAATA,MAAc69C,OAAQ,EAAM79C,KAAO,KAG7Bu+C,YAAYv+C,QAAoB,MAAb89C,YAAsBA,UAAY,IAAKj7B,MAAO,EAAM7iB,KAAO,MAGpF24C,MAAkB,MAAT+E,MAA0B,MAAVzV,SAAgB0Q,MAAO,EAAM+E,KAAO,IAAKzV,MAAQ,KAI9E,IAAI0X,OAAoB,MAAX/B,OAAiByB,SAAS,GAAgB,MAAXzB,QAAkB,SAAS5f,KAAKh+B,MAAQ,IAAMA,KAAKwkB,cAAgB,GAC3Go7B,OAAoB,MAAXhC,OAAiByB,SAAS,GAAK,OAAOrhB,KAAKh+B,MAAQy/C,QAAU,GAKtEI,WAAatB,YAAYv+C,MACzB8/C,YAAc,aAAa9hB,KAAKh+B,MAUpC,SAASxJ,OAAOhC,OACd,IAEIjB,EAAGyB,EAAGpB,EAFNmsD,YAAcJ,OACdK,YAAcJ,OAGlB,GAAa,MAAT5/C,KACFggD,YAAcH,WAAWrrD,OAASwrD,YAClCxrD,MAAQ,OACH,CAIL,IAAIyrD,eAHJzrD,OAASA,OAGmB,EAe5B,GAdAA,MAAQqrD,WAAWjyC,KAAK83B,IAAIlxC,OAAQspD,WAGhCj7B,OAAMruB,MAAQ0pD,WAAW1pD,QAGzByrD,eAA4B,IAAVzrD,QAAayrD,eAAgB,GAGnDF,aAAeE,cAA0B,MAATtC,KAAeA,KAAO,IAAgB,MAATA,MAAyB,MAATA,KAAe,GAAKA,MAAQoC,YACzGC,aAAwB,MAAThgD,KAAe8+C,SAAS,EAAIf,eAAiB,GAAK,IAAMiC,aAAeC,eAA0B,MAATtC,KAAe,IAAM,IAIxHmC,YAEF,IADAvsD,GAAK,EAAGyB,EAAIR,MAAMqD,SACTtE,EAAIyB,GACX,GAA6B,IAAzBpB,EAAIY,MAAM0rD,WAAW3sD,KAAcK,EAAI,GAAI,CAC7CosD,aAAqB,KAANpsD,EAAW0rD,QAAU9qD,MAAMk6B,MAAMn7B,EAAI,GAAKiB,MAAMk6B,MAAMn7B,IAAMysD,YAC3ExrD,MAAQA,MAAMk6B,MAAM,EAAGn7B,GACvB,OAOJsqD,QAAUlF,OAAMnkD,MAAQwqD,MAAMxqD,MAAO2rD,MAGzC,IAAItoD,OAASkoD,YAAYloD,OAASrD,MAAMqD,OAASmoD,YAAYnoD,OACzDspC,QAAUtpC,OAASmiC,MAAQ,IAAIr9B,MAAMq9B,MAAQniC,OAAS,GAAGT,KAAKsmD,MAAQ,GAM1E,OAHIG,OAASlF,OAAMnkD,MAAQwqD,MAAM7d,QAAU3sC,MAAO2sC,QAAQtpC,OAASmiC,MAAQgmB,YAAYnoD,OAASsoD,KAAWhf,QAAU,IAG7G8G,OACN,IAAK,IAAKzzC,MAAQurD,YAAcvrD,MAAQwrD,YAAc7e,QAAS,MAC/D,IAAK,IAAK3sC,MAAQurD,YAAc5e,QAAU3sC,MAAQwrD,YAAa,MAC/D,IAAK,IAAKxrD,MAAQ2sC,QAAQzS,MAAM,EAAG72B,OAASspC,QAAQtpC,QAAU,GAAKkoD,YAAcvrD,MAAQwrD,YAAc7e,QAAQzS,MAAM72B,QAAS,MAC9H,QAASrD,MAAQ2sC,QAAU4e,YAAcvrD,MAAQwrD,YAGnD,OAAOT,SAAS/qD,OAOlB,OApEAspD,UAAyB,MAAbA,UAAoB,EAC1B,SAAS9f,KAAKh+B,MAAQ4N,KAAK9D,IAAI,EAAG8D,KAAKjE,IAAI,GAAIm0C,YAC/ClwC,KAAK9D,IAAI,EAAG8D,KAAKjE,IAAI,GAAIm0C,YA8D/BtnD,OAAOwuB,SAAW,WAChB,OAAOw4B,UAAY,IAGdhnD,OAaT,OACEA,OAAQkpD,UACRzB,aAZF,SAASA,aAAaT,UAAWhpD,OAC/B,IAAIkD,EAAIgoD,YAAWlC,UAAYD,gBAAgBC,YAAsBx9C,KAAO,IAAKw9C,YAC7Er/C,EAAiE,EAA7DyP,KAAK9D,KAAK,EAAG8D,KAAKjE,IAAI,EAAGiE,KAAKgzB,MAAM0d,aAAS9pD,OAAS,KAC1D4yC,EAAIx5B,KAAKwQ,IAAI,IAAKjgB,GAClBwhD,OAASb,SAAS,EAAI3gD,EAAI,GAC9B,OAAO,SAAS3J,OACd,OAAOkD,EAAE0vC,EAAI5yC,OAASmrD,YJxHb,SAASS,cAAcnX,YAIpC,OAHA+U,qBAASqC,WAAapX,YACtBzyC,qBAASwnD,qBAAOxnD,OAChBynD,2BAAeD,qBAAOC,aACfD,qBAXToC,EACEd,QAAS,IACTJ,UAAW,IACXD,UAAW,GACXI,UAAW,IAAK,MORH,ICCAiB,eAAA,SAAS92C,OAAQuU,MAAOy/B,WACrC,IAGIM,UAHA9mC,MAAQxN,OAAO,GACfo7B,KAAOp7B,OAAOA,OAAO3R,OAAS,GAC9BgtC,KAAOW,SAASxuB,MAAO4tB,KAAe,MAAT7mB,MAAgB,GAAKA,OAGtD,QADAy/B,UAAYD,gBAA6B,MAAbC,UAAoB,KAAOA,YACrCx9C,MAChB,IAAK,IACH,IAAIxL,MAAQoZ,KAAK9D,IAAI8D,KAAK83B,IAAI1uB,OAAQpJ,KAAK83B,IAAId,OAE/C,OAD2B,MAAvB4Y,UAAUM,WAAsBtJ,MAAMsJ,UCVjC,SAASjZ,KAAMrwC,OAC5B,OAAOoZ,KAAK9D,IAAI,EAAgE,EAA7D8D,KAAK9D,KAAK,EAAG8D,KAAKjE,IAAI,EAAGiE,KAAKgzB,MAAM0d,aAAS9pD,OAAS,KAAW8pD,aAAS1wC,KAAK83B,IAAIb,QDS5C0b,CAAgB1b,KAAMrwC,UAASgpD,UAAUM,UAAYA,WACpGG,2BAAaT,UAAWhpD,OAEjC,IAAK,GACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACwB,MAAvBgpD,UAAUM,WAAsBtJ,MAAMsJ,UElBjC,SAASjZ,KAAM/6B,KAE5B,OADA+6B,KAAOj3B,KAAK83B,IAAIb,MAAO/6B,IAAM8D,KAAK83B,IAAI57B,KAAO+6B,KACtCj3B,KAAK9D,IAAI,EAAGw0C,aAASx0C,KAAOw0C,aAASzZ,OAAS,EFgBK2b,CAAe3b,KAAMj3B,KAAK9D,IAAI8D,KAAK83B,IAAI1uB,OAAQpJ,KAAK83B,IAAId,WAAU4Y,UAAUM,UAAYA,WAAgC,MAAnBN,UAAUx9C,OACrK,MAEF,IAAK,IACL,IAAK,IACwB,MAAvBw9C,UAAUM,WAAsBtJ,MAAMsJ,UDvBjC,SAASjZ,MACtB,OAAOj3B,KAAK9D,IAAI,GAAIw0C,aAAS1wC,KAAK83B,IAAIb,QCsBoB4b,CAAe5b,SAAQ2Y,UAAUM,UAAYA,UAAuC,GAAP,MAAnBN,UAAUx9C,OAI9H,OAAOxJ,qBAAOgnD,YGxBT,SAASkD,UAAUhZ,OACxB,IAAIl+B,OAASk+B,MAAMl+B,OAmDnB,OAjDAk+B,MAAMvC,MAAQ,SAASpnB,OACrB,IAAIlqB,EAAI2V,SACR,OAAO27B,UAAMtxC,EAAE,GAAIA,EAAEA,EAAEgE,OAAS,GAAa,MAATkmB,MAAgB,GAAKA,QAG3D2pB,MAAMiZ,WAAa,SAAS5iC,MAAOy/B,WACjC,OAAOmD,eAAWn3C,SAAUuU,MAAOy/B,YAGrC9V,MAAMkZ,KAAO,SAAS7iC,OACP,MAATA,QAAeA,MAAQ,IAE3B,IAKI8mB,KALAhxC,EAAI2V,SACJs8B,GAAK,EACLsY,GAAKvqD,EAAEgE,OAAS,EAChBmf,MAAQnjB,EAAEiyC,IACVlB,KAAO/wC,EAAEuqD,IA8Bb,OA3BIxZ,KAAO5tB,QACT6tB,KAAO7tB,MAAOA,MAAQ4tB,KAAMA,KAAOC,KACnCA,KAAOiB,GAAIA,GAAKsY,GAAIA,GAAKvZ,OAG3BA,KAAOO,cAAcpuB,MAAO4tB,KAAM7mB,QAEvB,EAGT8mB,KAAOO,cAFPpuB,MAAQpJ,KAAKgzB,MAAM5pB,MAAQ6tB,MAAQA,KACnCD,KAAOh3B,KAAK+yB,KAAKiE,KAAOC,MAAQA,KACE9mB,OACzB8mB,KAAO,IAGhBA,KAAOO,cAFPpuB,MAAQpJ,KAAK+yB,KAAK3pB,MAAQ6tB,MAAQA,KAClCD,KAAOh3B,KAAKgzB,MAAMgE,KAAOC,MAAQA,KACC9mB,QAGhC8mB,KAAO,GACThxC,EAAEiyC,IAAMl4B,KAAKgzB,MAAM5pB,MAAQ6tB,MAAQA,KACnChxC,EAAEuqD,IAAMxwC,KAAK+yB,KAAKiE,KAAOC,MAAQA,KACjCr7B,OAAO3V,IACEgxC,KAAO,IAChBhxC,EAAEiyC,IAAMl4B,KAAK+yB,KAAK3pB,MAAQ6tB,MAAQA,KAClChxC,EAAEuqD,IAAMxwC,KAAKgzB,MAAMgE,KAAOC,MAAQA,KAClCr7B,OAAO3V,IAGF6zC,OAGFA,MAGM,SAASyP,gBACtB,IAAIzP,MAAQgV,WAAWP,oBAAeC,YAMtC,OAJA1U,MAAMC,KAAO,WACX,OAAOA,KAAKD,MAAOyP,kBAGduJ,UAAUhZ,OC/DJ,SAAS5X,oBACtB,IAAItmB,QAAU,EAAG,GAEjB,SAASk+B,MAAMpL,GACb,OAAQA,EAaV,OAVAoL,MAAMgB,OAAShB,MAEfA,MAAMl+B,OAASk+B,MAAMlwB,MAAQ,SAAS1E,GACpC,OAAOrW,UAAU5E,QAAU2R,OAAStS,cAAIxD,KAAKof,EAAG2xB,qBAASiD,OAASl+B,OAAOklB,SAG3EgZ,MAAMC,KAAO,WACX,OAAO7X,oBAAWtmB,OAAOA,SAGpBk3C,UAAUhZ,OCrBJ,IAAAkZ,KAAA,SAASp3C,OAAQq3C,UAG9B,IAIIpsD,EAJAqxC,GAAK,EACLsY,IAHJ50C,OAASA,OAAOklB,SAGA72B,OAAS,EACrBipD,GAAKt3C,OAAOs8B,IACZib,GAAKv3C,OAAO40C,IAUhB,OAPI2C,GAAKD,KACPrsD,EAAIqxC,GAAIA,GAAKsY,GAAIA,GAAK3pD,EACtBA,EAAIqsD,GAAIA,GAAKC,GAAIA,GAAKtsD,GAGxB+U,OAAOs8B,IAAM+a,SAASjgB,MAAMkgB,IAC5Bt3C,OAAO40C,IAAMyC,SAASlgB,KAAKogB,IACpBv3C,QCVT,SAAS2yC,kBAAc9uC,EAAGC,GACxB,OAAQA,EAAIM,KAAK03B,IAAIh4B,EAAID,IACnB,SAASivB,GAAK,OAAO1uB,KAAK03B,IAAIhJ,EAAIjvB,GAAKC,GACvC+pC,sBAAS/pC,GAGjB,SAAS8uC,kBAAc/uC,EAAGC,GACxB,OAAOD,EAAI,EACL,SAAS5Y,GAAK,OAAQmZ,KAAKwQ,KAAK9Q,EAAG7Y,GAAKmZ,KAAKwQ,KAAK/Q,EAAG,EAAI5Y,IACzD,SAASA,GAAK,OAAOmZ,KAAKwQ,IAAI9Q,EAAG7Y,GAAKmZ,KAAKwQ,IAAI/Q,EAAG,EAAI5Y,IAG9D,SAASusD,MAAM1kB,GACb,OAAOjY,SAASiY,KAAO,KAAOA,GAAKA,EAAI,EAAI,EAAIA,EAGjD,SAAS2kB,KAAKC,MACZ,OAAgB,KAATA,KAAcF,MACfE,OAAStzC,KAAKuoC,EAAIvoC,KAAKuzC,IACvB,SAAS7kB,GAAK,OAAO1uB,KAAKwQ,IAAI8iC,KAAM5kB,IAG5C,SAAS8kB,KAAKF,MACZ,OAAOA,OAAStzC,KAAKuoC,EAAIvoC,KAAK03B,IACf,KAAT4b,MAAetzC,KAAKyzC,OACV,IAATH,MAActzC,KAAK0zC,OAClBJ,KAAOtzC,KAAK03B,IAAI4b,MAAO,SAAS5kB,GAAK,OAAO1uB,KAAK03B,IAAIhJ,GAAK4kB,OAGpE,SAASK,QAAQ7pD,GACf,OAAO,SAAS4kC,GACd,OAAQ5kC,GAAG4kC,IAIA,SAASgJ,MACtB,IAAIoC,MAAQgV,WAAWP,kBAAeC,mBAAe5yC,QAAQ,EAAG,KAC5DA,OAASk+B,MAAMl+B,OACf03C,KAAO,GACPM,KAAOJ,KAAK,IACZK,KAAOR,KAAK,IAEhB,SAAS/Y,UAGP,OAFAsZ,KAAOJ,KAAKF,MAAOO,KAAOR,KAAKC,MAC3B13C,SAAS,GAAK,IAAGg4C,KAAOD,QAAQC,MAAOC,KAAOF,QAAQE,OACnD/Z,MA2ET,OAxEAA,MAAMwZ,KAAO,SAASpuC,GACpB,OAAOrW,UAAU5E,QAAUqpD,MAAQpuC,EAAGo1B,WAAagZ,MAGrDxZ,MAAMl+B,OAAS,SAASsJ,GACtB,OAAOrW,UAAU5E,QAAU2R,OAAOsJ,GAAIo1B,WAAa1+B,UAGrDk+B,MAAMvC,MAAQ,SAASpnB,OACrB,IAGI1pB,EAHAR,EAAI2V,SACJk4C,EAAI7tD,EAAE,GACNud,EAAIvd,EAAEA,EAAEgE,OAAS,IAGjBxD,EAAI+c,EAAIswC,KAAGnuD,EAAImuD,EAAGA,EAAItwC,EAAGA,EAAI7d,GAEjC,IAEIgC,EACA6xC,EACA3yC,EAJAlB,EAAIiuD,KAAKE,GACTxpD,EAAIspD,KAAKpwC,GAITpc,EAAa,MAAT+oB,MAAgB,IAAMA,MAC1By3B,KAEJ,KAAM0L,KAAO,IAAMhpD,EAAI3E,EAAIyB,GAEzB,GADAzB,EAAIqa,KAAK0oB,MAAM/iC,GAAK,EAAG2E,EAAI0V,KAAK0oB,MAAMp+B,GAAK,EACvCwpD,EAAI,GAAG,KAAOnuD,EAAI2E,IAAK3E,EACzB,IAAK6zC,EAAI,EAAG7xC,EAAIksD,KAAKluD,GAAI6zC,EAAI8Z,OAAQ9Z,EAEnC,MADA3yC,EAAIc,EAAI6xC,GACAsa,GAAR,CACA,GAAIjtD,EAAI2c,EAAG,MACXokC,EAAEl6C,KAAK7G,SAEJ,KAAOlB,EAAI2E,IAAK3E,EACrB,IAAK6zC,EAAI8Z,KAAO,EAAG3rD,EAAIksD,KAAKluD,GAAI6zC,GAAK,IAAKA,EAExC,MADA3yC,EAAIc,EAAI6xC,GACAsa,GAAR,CACA,GAAIjtD,EAAI2c,EAAG,MACXokC,EAAEl6C,KAAK7G,SAIX+gD,EAAIrQ,UAAM5xC,EAAG2E,EAAG0V,KAAKjE,IAAIzR,EAAI3E,EAAGyB,IAAIkC,IAAIuqD,MAG1C,OAAOptD,EAAImhD,EAAEx/B,UAAYw/B,GAG3B9N,MAAMiZ,WAAa,SAAS5iC,MAAOy/B,WAGjC,GAFiB,MAAbA,YAAmBA,UAAqB,KAAT0D,KAAc,MAAQ,KAChC,mBAAd1D,YAA0BA,UAAYhnD,qBAAOgnD,YACpDz/B,QAAUoiC,IAAU,OAAO3C,UAClB,MAATz/B,QAAeA,MAAQ,IAC3B,IAAIqpB,EAAIx5B,KAAK9D,IAAI,EAAGo3C,KAAOnjC,MAAQ2pB,MAAMvC,QAAQttC,QACjD,OAAO,SAAShE,GACd,IAAIN,EAAIM,EAAI4tD,KAAK7zC,KAAK0oB,MAAMkrB,KAAK3tD,KAEjC,OADIN,EAAI2tD,KAAOA,KAAO,KAAK3tD,GAAK2tD,MACzB3tD,GAAK6zC,EAAIoW,UAAU3pD,GAAK,KAInC6zC,MAAMkZ,KAAO,WACX,OAAOp3C,OAAOo3C,KAAKp3C,UACjBo3B,MAAO,SAAAA,MAAStE,GAAK,OAAOmlB,KAAK7zC,KAAKgzB,MAAM4gB,KAAKllB,MACjDqE,KAAM,SAAAA,KAASrE,GAAK,OAAOmlB,KAAK7zC,KAAK+yB,KAAK6gB,KAAKllB,UAInDoL,MAAMC,KAAO,WACX,OAAOA,KAAKD,MAAOpC,MAAM4b,KAAKA,QAGzBxZ,MC1HT,SAASia,MAAMrlB,EAAGgiB,UAChB,OAAOhiB,EAAI,GAAK1uB,KAAKwQ,KAAKke,EAAGgiB,UAAY1wC,KAAKwQ,IAAIke,EAAGgiB,UAGxC,SAASlgC,MACtB,IAAIkgC,SAAW,EACX5W,MAAQgV,WAGZ,SAASP,cAAc9uC,EAAGC,GACxB,OAAQA,EAAIq0C,MAAMr0C,EAAGgxC,WAAajxC,EAAIs0C,MAAMt0C,EAAGixC,YACzC,SAAShiB,GAAK,OAAQqlB,MAAMrlB,EAAGgiB,UAAYjxC,GAAKC,GAChD+pC,sBAAS/pC,IAGjB,SAAS8uC,cAAc/uC,EAAGC,GAExB,OADAA,EAAIq0C,MAAMr0C,EAAGgxC,WAAajxC,EAAIs0C,MAAMt0C,EAAGixC,WAChC,SAAS7pD,GAAK,OAAOktD,MAAMt0C,EAAIC,EAAI7Y,EAAG,EAAI6pD,aAV/C90C,OAASk+B,MAAMl+B,OAqBnB,OARAk+B,MAAM4W,SAAW,SAASxrC,GACxB,OAAOrW,UAAU5E,QAAUymD,UAAYxrC,EAAGtJ,OAAOA,WAAa80C,UAGhE5W,MAAMC,KAAO,WACX,OAAOA,KAAKD,MAAOtpB,MAAMkgC,SAASA,YAG7BoC,UAAUhZ,OC7BJ,SAAS9B,oBACtB,IAAIp8B,UACAgO,SACAoqC,cAEJ,SAAS1Z,UACP,IAAI30C,EAAI,EAAGyB,EAAI4Y,KAAK9D,IAAI,EAAG0N,MAAM3f,QAEjC,IADA+pD,WAAa,IAAIjlD,MAAM3H,EAAI,KAClBzB,EAAIyB,GAAG4sD,WAAWruD,EAAI,GAAKsuD,SAAUr4C,OAAQjW,EAAIyB,GAC1D,OAAO0yC,MAGT,SAASA,MAAMpL,GACb,IAAKkY,MAAMlY,GAAKA,GAAI,OAAO9kB,MAAM+kC,OAAOqF,WAAYtlB,IAiCtD,OA9BAoL,MAAMW,aAAe,SAASpiB,GAC5B,IAAI1yB,EAAIikB,MAAM2lC,QAAQl3B,GACtB,OAAO1yB,EAAI,GAAK0wC,IAAKA,MACnB1wC,EAAI,EAAIquD,WAAWruD,EAAI,GAAKiW,OAAO,GACnCjW,EAAIquD,WAAW/pD,OAAS+pD,WAAWruD,GAAKiW,OAAOA,OAAO3R,OAAS,KAInE6vC,MAAMl+B,OAAS,SAASsJ,GACtB,IAAKrW,UAAU5E,OAAQ,OAAO2R,OAAOklB,QACrCllB,UACA,IAAK,IAAyB3V,EAArBN,EAAI,EAAGyB,EAAI8d,EAAEjb,OAAWtE,EAAIyB,IAAKzB,EAAsB,OAAfM,EAAIif,EAAEvf,KAAkBihD,MAAM3gD,GAAKA,IAAI2V,OAAOlO,KAAKzH,GAEpG,OADA2V,OAAOhM,KAAKwmC,WACLkE,WAGTR,MAAMlwB,MAAQ,SAAS1E,GACrB,OAAOrW,UAAU5E,QAAU2f,MAAQkX,YAAMh7B,KAAKof,GAAIo1B,WAAa1wB,MAAMkX,SAGvEgZ,MAAMoa,UAAY,WAChB,OAAOF,WAAWlzB,SAGpBgZ,MAAMC,KAAO,WACX,OAAO/B,oBACFp8B,OAAOA,QACPgO,MAAMA,QAGNkwB,MC7CM,SAASqa,oBACtB,IAAIjB,GAAK,EACLC,GAAK,EACL/rD,EAAI,EACJwU,QAAU,IACVgO,OAAS,EAAG,GAEhB,SAASkwB,MAAMpL,GACb,GAAIA,GAAKA,EAAG,OAAO9kB,MAAM+kC,OAAO/yC,OAAQ8yB,EAAG,EAAGtnC,IAGhD,SAASkzC,UACP,IAAI30C,GAAK,EAET,IADAiW,OAAS,IAAI7M,MAAM3H,KACVzB,EAAIyB,GAAGwU,OAAOjW,KAAOA,EAAI,GAAKwtD,IAAMxtD,EAAIyB,GAAK8rD,KAAO9rD,EAAI,GACjE,OAAO0yC,MAyBT,OAtBAA,MAAMl+B,OAAS,SAASsJ,GACtB,OAAOrW,UAAU5E,QAAUipD,IAAMhuC,EAAE,GAAIiuC,IAAMjuC,EAAE,GAAIo1B,YAAc4Y,GAAIC,KAGvErZ,MAAMlwB,MAAQ,SAAS1E,GACrB,OAAOrW,UAAU5E,QAAU7C,GAAKwiB,MAAQkX,YAAMh7B,KAAKof,IAAIjb,OAAS,EAAGqwC,WAAa1wB,MAAMkX,SAGxFgZ,MAAMW,aAAe,SAASpiB,GAC5B,IAAI1yB,EAAIikB,MAAM2lC,QAAQl3B,GACtB,OAAO1yB,EAAI,GAAK0wC,IAAKA,KACf1wC,EAAI,GAAKutD,GAAIt3C,OAAO,IACpBjW,GAAKyB,GAAKwU,OAAOxU,EAAI,GAAI+rD,KACxBv3C,OAAOjW,EAAI,GAAIiW,OAAOjW,KAG/Bm0C,MAAMC,KAAO,WACX,OAAOoa,oBACFv4C,QAAQs3C,GAAIC,KACZvpC,MAAMA,QAGNkpC,UAAUhZ,OCzCJ,SAASma,sBACtB,IAAIr4C,QAAU,IACVgO,OAAS,EAAG,GACZxiB,EAAI,EAER,SAAS0yC,MAAMpL,GACb,GAAIA,GAAKA,EAAG,OAAO9kB,MAAM+kC,OAAO/yC,OAAQ8yB,EAAG,EAAGtnC,IAsBhD,OAnBA0yC,MAAMl+B,OAAS,SAASsJ,GACtB,OAAOrW,UAAU5E,QAAU2R,OAASklB,YAAMh7B,KAAKof,GAAI9d,EAAI4Y,KAAKjE,IAAIH,OAAO3R,OAAQ2f,MAAM3f,OAAS,GAAI6vC,OAASl+B,OAAOklB,SAGpHgZ,MAAMlwB,MAAQ,SAAS1E,GACrB,OAAOrW,UAAU5E,QAAU2f,MAAQkX,YAAMh7B,KAAKof,GAAI9d,EAAI4Y,KAAKjE,IAAIH,OAAO3R,OAAQ2f,MAAM3f,OAAS,GAAI6vC,OAASlwB,MAAMkX,SAGlHgZ,MAAMW,aAAe,SAASpiB,GAC5B,IAAI1yB,EAAIikB,MAAM2lC,QAAQl3B,GACtB,OAAQzc,OAAOjW,EAAI,GAAIiW,OAAOjW,KAGhCm0C,MAAMC,KAAO,WACX,OAAOka,sBACFr4C,OAAOA,QACPgO,MAAMA,QAGNkwB,MC/BT,IAAIqN,YAAK,IAAIrxB,KACTsxB,YAAK,IAAItxB,KAEE,SAASs+B,YAAYC,OAAQC,QAASnkC,MAAOviB,OAE1D,SAASqlD,SAASp9B,MAChB,OAAOw+B,OAAOx+B,KAAO,IAAIC,MAAMD,OAAQA,KA4DzC,OAzDAo9B,SAASjgB,MAAQigB,SAEjBA,SAASlgB,KAAO,SAASld,MACvB,OAAOw+B,OAAOx+B,KAAO,IAAIC,KAAKD,KAAO,IAAKy+B,QAAQz+B,KAAM,GAAIw+B,OAAOx+B,MAAOA,MAG5Eo9B,SAASvqB,MAAQ,SAAS7S,MACxB,IAAI44B,GAAKwE,SAASp9B,MACdolB,GAAKgY,SAASlgB,KAAKld,MACvB,OAAOA,KAAO44B,GAAKxT,GAAKplB,KAAO44B,GAAKxT,IAGtCgY,SAASsB,OAAS,SAAS1+B,KAAMohB,MAC/B,OAAOqd,QAAQz+B,KAAO,IAAIC,MAAMD,MAAe,MAARohB,KAAe,EAAIj3B,KAAKgzB,MAAMiE,OAAQphB,MAG/Eo9B,SAASrpC,MAAQ,SAASR,MAAO4tB,KAAMC,MACrC,IAAgBud,SAAZ5qC,SAGJ,GAFAR,MAAQ6pC,SAASlgB,KAAK3pB,OACtB6tB,KAAe,MAARA,KAAe,EAAIj3B,KAAKgzB,MAAMiE,QAC/B7tB,MAAQ4tB,MAAWC,KAAO,GAAI,OAAOrtB,MAC3C,GAAGA,MAAMlc,KAAK8mD,SAAW,IAAI1+B,MAAM1M,QAASkrC,QAAQlrC,MAAO6tB,MAAOod,OAAOjrC,aAClEorC,SAAWprC,OAASA,MAAQ4tB,MACnC,OAAOptB,OAGTqpC,SAASzzC,OAAS,SAAS4wB,MACzB,OAAOgkB,YAAY,SAASv+B,MAC1B,GAAIA,MAAQA,KAAM,KAAOw+B,OAAOx+B,OAAQua,KAAKva,OAAOA,KAAK01B,QAAQ11B,KAAO,IACvE,SAASA,KAAMohB,MAChB,GAAIphB,MAAQA,KACV,GAAIohB,KAAO,EAAG,OAASA,MAAQ,GAC7B,KAAOqd,QAAQz+B,MAAO,IAAKua,KAAKva,aAC3B,OAASohB,MAAQ,GACtB,KAAOqd,QAAQz+B,KAAM,IAAMua,KAAKva,YAMpC1F,QACF8iC,SAAS9iC,MAAQ,SAAS/G,MAAOC,KAG/B,OAFA89B,YAAGoE,SAASniC,OAAQg+B,YAAGmE,SAASliC,KAChCgrC,OAAOlN,aAAKkN,OAAOjN,aACZpnC,KAAKgzB,MAAM7iB,MAAMg3B,YAAIC,eAG9B6L,SAASvvC,MAAQ,SAASuzB,MAExB,OADAA,KAAOj3B,KAAKgzB,MAAMiE,MACVxgB,SAASwgB,OAAWA,KAAO,EAC3BA,KAAO,EACTgc,SAASzzC,OAAO5R,MACZ,SAAS3H,GAAK,OAAO2H,MAAM3H,GAAKgxC,MAAS,GACzC,SAAShxC,GAAK,OAAOgtD,SAAS9iC,MAAM,EAAGlqB,GAAKgxC,MAAS,IAH3Cgc,SADoB,OAQrCA,SChET,IAAIwB,wBAAcxB,YAAS,aAExB,SAASp9B,KAAMohB,MAChBphB,KAAK01B,SAAS11B,KAAOohB,OACpB,SAAS7tB,MAAOC,KACjB,OAAOA,IAAMD,QAIfqrC,wBAAY/wC,MAAQ,SAAS81B,GAE3B,OADAA,EAAIx5B,KAAKgzB,MAAMwG,GACV/iB,SAAS+iB,IAAQA,EAAI,EACpBA,EAAI,EACHyZ,YAAS,SAASp9B,MACvBA,KAAK01B,QAAQvrC,KAAKgzB,MAAMnd,KAAO2jB,GAAKA,IACnC,SAAS3jB,KAAMohB,MAChBphB,KAAK01B,SAAS11B,KAAOohB,KAAOuC,IAC3B,SAASpwB,MAAOC,KACjB,OAAQA,IAAMD,OAASowB,IANJib,wBADgB,MAWxBA,4CCvBJC,gBDwBeD,wBAAY7qC,MCxBV,KAGjB+qC,aAAe,OCDtBC,cAAS3B,YAAS,SAASp9B,MAC7BA,KAAK01B,QDJqB,ICIbvrC,KAAKgzB,MAAMnd,KDJE,OCKzB,SAASA,KAAMohB,MAChBphB,KAAK01B,SAAS11B,KDNY,ICMLohB,OACpB,SAAS7tB,MAAOC,KACjB,OAAQA,IAAMD,ODRY,KCSzB,SAASyM,MACV,OAAOA,KAAKg/B,kBAGCD,yBCVXE,eDWiBF,cAAOhrC,MCXfqpC,YAAS,SAASp9B,MAC7BA,KAAK01B,QAAQvrC,KAAKgzB,MAAMnd,KAAO6+B,gBAAkBA,iBAChD,SAAS7+B,KAAMohB,MAChBphB,KAAK01B,SAAS11B,KAAOohB,KAAOyd,iBAC3B,SAAStrC,MAAOC,KACjB,OAAQA,IAAMD,OAASsrC,gBACtB,SAAS7+B,MACV,OAAOA,KAAK4B,gBAGCq9B,yBCVXC,WDWiBD,cAAOlrC,MCXjBqpC,YAAS,SAASp9B,MAC3B,IAAI0+B,OAAS1+B,KAAKm/B,oBAAsBN,eHFhB,KGGpBH,OAAS,IAAGA,QHHQ,MGIxB1+B,KAAK01B,QHJmB,KGIXvrC,KAAKgzB,QAAQnd,KAAO0+B,QHJT,MGIkDA,SACzE,SAAS1+B,KAAMohB,MAChBphB,KAAK01B,SAAS11B,KHNU,KGMHohB,OACpB,SAAS7tB,MAAOC,KACjB,OAAQA,IAAMD,OHRU,MGSvB,SAASyM,MACV,OAAOA,KAAKyB,cAGCy9B,mBCZXj9B,SDaei9B,UAAKnrC,MCbdqpC,YAAS,SAASp9B,MAC1BA,KAAKo/B,SAAS,EAAG,EAAG,EAAG,IACtB,SAASp/B,KAAMohB,MAChBphB,KAAKq/B,QAAQr/B,KAAKoC,UAAYgf,OAC7B,SAAS7tB,MAAOC,KACjB,OAAQA,IAAMD,OAASC,IAAI2rC,oBAAsB5rC,MAAM4rC,qBAAuBN,gBJLvD,OIMtB,SAAS7+B,MACV,OAAOA,KAAKoC,UAAY,KAGXH,gBACGA,QAAIlO,MCXtB,SAASurC,QAAQxvD,GACf,OAAOstD,YAAS,SAASp9B,MACvBA,KAAKq/B,QAAQr/B,KAAKoC,WAAapC,KAAKkC,SAAW,EAAIpyB,GAAK,GACxDkwB,KAAKo/B,SAAS,EAAG,EAAG,EAAG,IACtB,SAASp/B,KAAMohB,MAChBphB,KAAKq/B,QAAQr/B,KAAKoC,UAAmB,EAAPgf,OAC7B,SAAS7tB,MAAOC,KACjB,OAAQA,IAAMD,OAASC,IAAI2rC,oBAAsB5rC,MAAM4rC,qBAAuBN,gBAAkBC,eAI7F,IAAIS,OAASD,QAAQ,GACjBE,OAASF,QAAQ,GACjBG,QAAUH,QAAQ,GAClBI,UAAYJ,QAAQ,GACpBK,SAAWL,QAAQ,GACnBM,OAASN,QAAQ,GACjBO,SAAWP,QAAQ,GClB1Bj9B,aDoBiBk9B,OAAOxrC,MACPyrC,OAAOzrC,MACN0rC,QAAQ1rC,MACN2rC,UAAU3rC,MACX4rC,SAAS5rC,MACX6rC,OAAO7rC,MACL8rC,SAAS9rC,MC1BpBqpC,YAAS,SAASp9B,MAC5BA,KAAKq/B,QAAQ,GACbr/B,KAAKo/B,SAAS,EAAG,EAAG,EAAG,IACtB,SAASp/B,KAAMohB,MAChBphB,KAAK8/B,SAAS9/B,KAAKsC,WAAa8e,OAC/B,SAAS7tB,MAAOC,KACjB,OAAOA,IAAI8O,WAAa/O,MAAM+O,WAAyD,IAA3C9O,IAAImP,cAAgBpP,MAAMoP,gBACrE,SAAS3C,MACV,OAAOA,KAAKsC,cAGCD,sBCXXO,WDYgBP,YAAMtO,MCZfqpC,YAAS,SAASp9B,MAC3BA,KAAK8/B,SAAS,EAAG,GACjB9/B,KAAKo/B,SAAS,EAAG,EAAG,EAAG,IACtB,SAASp/B,KAAMohB,MAChBphB,KAAK+/B,YAAY//B,KAAK2C,cAAgBye,OACrC,SAAS7tB,MAAOC,KACjB,OAAOA,IAAImP,cAAgBpP,MAAMoP,eAChC,SAAS3C,MACV,OAAOA,KAAK2C,iBAIdC,UAAK/U,MAAQ,SAAS81B,GACpB,OAAQ/iB,SAAS+iB,EAAIx5B,KAAKgzB,MAAMwG,KAASA,EAAI,EAAYyZ,YAAS,SAASp9B,MACzEA,KAAK+/B,YAAY51C,KAAKgzB,MAAMnd,KAAK2C,cAAgBghB,GAAKA,GACtD3jB,KAAK8/B,SAAS,EAAG,GACjB9/B,KAAKo/B,SAAS,EAAG,EAAG,EAAG,IACtB,SAASp/B,KAAMohB,MAChBphB,KAAK+/B,YAAY//B,KAAK2C,cAAgBye,KAAOuC,KALG,MASrC/gB,uBCrBXo9B,WDsBep9B,UAAK7O,MCtBRqpC,YAAS,SAASp9B,MAChCA,KAAKigC,cAAc,EAAG,IACrB,SAASjgC,KAAMohB,MAChBphB,KAAK01B,SAAS11B,KAAOohB,KAAOyd,iBAC3B,SAAStrC,MAAOC,KACjB,OAAQA,IAAMD,OAASsrC,gBACtB,SAAS7+B,MACV,OAAOA,KAAKkgC,mBCPVC,SDWoBH,UAAUjsC,MCXpBqpC,YAAS,SAASp9B,MAC9BA,KAAKogC,cAAc,EAAG,EAAG,IACxB,SAASpgC,KAAMohB,MAChBphB,KAAK01B,SAAS11B,KTJU,KSIHohB,OACpB,SAAS7tB,MAAOC,KACjB,OAAQA,IAAMD,OTNU,MSOvB,SAASyM,MACV,OAAOA,KAAKqgC,iBCPVC,QDWkBH,QAAQpsC,MCXjBqpC,YAAS,SAASp9B,MAC7BA,KAAKugC,YAAY,EAAG,EAAG,EAAG,IACzB,SAASvgC,KAAMohB,MAChBphB,KAAKwgC,WAAWxgC,KAAKygC,aAAerf,OACnC,SAAS7tB,MAAOC,KACjB,OAAQA,IAAMD,OVLS,OUMtB,SAASyM,MACV,OAAOA,KAAKygC,aAAe,KAGdH,kBACMA,OAAOvsC,MCX5B,SAAS2sC,WAAW5wD,GAClB,OAAOstD,YAAS,SAASp9B,MACvBA,KAAKwgC,WAAWxgC,KAAKygC,cAAgBzgC,KAAK2gC,YAAc,EAAI7wD,GAAK,GACjEkwB,KAAKugC,YAAY,EAAG,EAAG,EAAG,IACzB,SAASvgC,KAAMohB,MAChBphB,KAAKwgC,WAAWxgC,KAAKygC,aAAsB,EAAPrf,OACnC,SAAS7tB,MAAOC,KACjB,OAAQA,IAAMD,OAASurC,eAIpB,IAAI8B,UAAYF,WAAW,GACvBG,UAAYH,WAAW,GACvBI,WAAaJ,WAAW,GACxBK,aAAeL,WAAW,GAC1BM,YAAcN,WAAW,GACzBO,UAAYP,WAAW,GACvBQ,YAAcR,WAAW,GClBhCS,UDoBoBP,UAAU7sC,MACV8sC,UAAU9sC,MACT+sC,WAAW/sC,MACTgtC,aAAahtC,MACditC,YAAYjtC,MACdktC,UAAUltC,MACRmtC,YAAYntC,MC1BvBqpC,YAAS,SAASp9B,MAC/BA,KAAKwgC,WAAW,GAChBxgC,KAAKugC,YAAY,EAAG,EAAG,EAAG,IACzB,SAASvgC,KAAMohB,MAChBphB,KAAKohC,YAAYphC,KAAKqhC,cAAgBjgB,OACrC,SAAS7tB,MAAOC,KACjB,OAAOA,IAAI6tC,cAAgB9tC,MAAM8tC,cAAkE,IAAjD7tC,IAAI8tC,iBAAmB/tC,MAAM+tC,mBAC9E,SAASthC,MACV,OAAOA,KAAKqhC,iBCRVE,SDYmBJ,SAASptC,MCZlBqpC,YAAS,SAASp9B,MAC9BA,KAAKohC,YAAY,EAAG,GACpBphC,KAAKugC,YAAY,EAAG,EAAG,EAAG,IACzB,SAASvgC,KAAMohB,MAChBphB,KAAKwhC,eAAexhC,KAAKshC,iBAAmBlgB,OAC3C,SAAS7tB,MAAOC,KACjB,OAAOA,IAAI8tC,iBAAmB/tC,MAAM+tC,kBACnC,SAASthC,MACV,OAAOA,KAAKshC,oBAIdC,QAAQ1zC,MAAQ,SAAS81B,GACvB,OAAQ/iB,SAAS+iB,EAAIx5B,KAAKgzB,MAAMwG,KAASA,EAAI,EAAYyZ,YAAS,SAASp9B,MACzEA,KAAKwhC,eAAer3C,KAAKgzB,MAAMnd,KAAKshC,iBAAmB3d,GAAKA,GAC5D3jB,KAAKohC,YAAY,EAAG,GACpBphC,KAAKugC,YAAY,EAAG,EAAG,EAAG,IACzB,SAASvgC,KAAMohB,MAChBphB,KAAKwhC,eAAexhC,KAAKshC,iBAAmBlgB,KAAOuC,KALH,MASrC4d,wBACOA,QAAQxtC,MCZ9B,SAAS0tC,UAAUrxD,GACjB,GAAI,GAAKA,EAAEoyB,GAAKpyB,EAAEoyB,EAAI,IAAK,CACzB,IAAIxC,KAAO,IAAIC,MAAM,EAAG7vB,EAAEF,EAAGE,EAAEA,EAAGA,EAAEgxB,EAAGhxB,EAAEuxB,EAAGvxB,EAAEyxB,EAAGzxB,EAAEsxD,GAEnD,OADA1hC,KAAK+/B,YAAY3vD,EAAEoyB,GACZxC,KAET,OAAO,IAAIC,KAAK7vB,EAAEoyB,EAAGpyB,EAAEF,EAAGE,EAAEA,EAAGA,EAAEgxB,EAAGhxB,EAAEuxB,EAAGvxB,EAAEyxB,EAAGzxB,EAAEsxD,GAGlD,SAASC,QAAQvxD,GACf,GAAI,GAAKA,EAAEoyB,GAAKpyB,EAAEoyB,EAAI,IAAK,CACzB,IAAIxC,KAAO,IAAIC,KAAKA,KAAK2hC,KAAK,EAAGxxD,EAAEF,EAAGE,EAAEA,EAAGA,EAAEgxB,EAAGhxB,EAAEuxB,EAAGvxB,EAAEyxB,EAAGzxB,EAAEsxD,IAE5D,OADA1hC,KAAKwhC,eAAepxD,EAAEoyB,GACfxC,KAET,OAAO,IAAIC,KAAKA,KAAK2hC,IAAIxxD,EAAEoyB,EAAGpyB,EAAEF,EAAGE,EAAEA,EAAGA,EAAEgxB,EAAGhxB,EAAEuxB,EAAGvxB,EAAEyxB,EAAGzxB,EAAEsxD,IAG3D,SAASG,QAAQr/B,GACf,OAAQA,EAAGA,EAAGtyB,EAAG,EAAGE,EAAG,EAAGgxB,EAAG,EAAGO,EAAG,EAAGE,EAAG,EAAG6/B,EAAG,GA2UjD,ICzWInH,yBACOuH,WAEAC,UACAC,SDqWPC,MAAQC,IAAK,GAAI7yC,EAAK,IAAK8yC,EAAK,KAChCC,SAAW,UACXC,UAAY,KACZC,UAAY,sBAEhB,SAASpiC,WAAInvB,MAAOkpD,KAAM1jB,OACxB,IAAI2jB,KAAOnpD,MAAQ,EAAI,IAAM,GACzB0kD,QAAUyE,MAAQnpD,MAAQA,OAAS,GACnCqD,OAASqhD,OAAOrhD,OACpB,OAAO8lD,MAAQ9lD,OAASmiC,MAAQ,IAAIr9B,MAAMq9B,MAAQniC,OAAS,GAAGT,KAAKsmD,MAAQxE,OAASA,QAGtF,SAAS8M,QAAQxwD,GACf,OAAOA,EAAEuoC,QAAQgoB,UAAW,QAG9B,SAASE,SAASC,OAChB,OAAO,IAAI3uD,OAAO,OAAS2uD,MAAMhvD,IAAI8uD,SAAS5uD,KAAK,KAAO,IAAK,KAGjE,SAAS+uD,aAAaD,OAEpB,IADA,IAAIhvD,OAAU3D,GAAK,EAAGyB,EAAIkxD,MAAMruD,SACvBtE,EAAIyB,GAAGkC,IAAIgvD,MAAM3yD,GAAGixB,eAAiBjxB,EAC9C,OAAO2D,IAGT,SAASkvD,yBAAyBvyD,EAAGqlD,OAAQ3lD,GAC3C,IAAIyB,EAAI6wD,SAASzS,KAAK8F,OAAOxqB,MAAMn7B,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEwyD,GAAKrxD,EAAE,GAAIzB,EAAIyB,EAAE,GAAG6C,SAAW,EAG/C,SAASyuD,yBAAyBzyD,EAAGqlD,OAAQ3lD,GAC3C,IAAIyB,EAAI6wD,SAASzS,KAAK8F,OAAOxqB,MAAMn7B,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAE6tD,GAAK1sD,EAAE,GAAIzB,EAAIyB,EAAE,GAAG6C,SAAW,EAG/C,SAAS0uD,sBAAsB1yD,EAAGqlD,OAAQ3lD,GACxC,IAAIyB,EAAI6wD,SAASzS,KAAK8F,OAAOxqB,MAAMn7B,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAE2yD,GAAKxxD,EAAE,GAAIzB,EAAIyB,EAAE,GAAG6C,SAAW,EAG/C,SAAS4uD,mBAAmB5yD,EAAGqlD,OAAQ3lD,GACrC,IAAIyB,EAAI6wD,SAASzS,KAAK8F,OAAOxqB,MAAMn7B,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAE6yD,GAAK1xD,EAAE,GAAIzB,EAAIyB,EAAE,GAAG6C,SAAW,EAG/C,SAAS8uD,sBAAsB9yD,EAAGqlD,OAAQ3lD,GACxC,IAAIyB,EAAI6wD,SAASzS,KAAK8F,OAAOxqB,MAAMn7B,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAE+yD,GAAK5xD,EAAE,GAAIzB,EAAIyB,EAAE,GAAG6C,SAAW,EAG/C,SAASgvD,cAAchzD,EAAGqlD,OAAQ3lD,GAChC,IAAIyB,EAAI6wD,SAASzS,KAAK8F,OAAOxqB,MAAMn7B,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEoyB,GAAKjxB,EAAE,GAAIzB,EAAIyB,EAAE,GAAG6C,SAAW,EAG/C,SAASivD,UAAUjzD,EAAGqlD,OAAQ3lD,GAC5B,IAAIyB,EAAI6wD,SAASzS,KAAK8F,OAAOxqB,MAAMn7B,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEoyB,GAAKjxB,EAAE,KAAOA,EAAE,GAAK,GAAK,KAAO,KAAOzB,EAAIyB,EAAE,GAAG6C,SAAW,EAG5E,SAASkvD,UAAUlzD,EAAGqlD,OAAQ3lD,GAC5B,IAAIyB,EAAI,+BAA+Bo+C,KAAK8F,OAAOxqB,MAAMn7B,EAAGA,EAAI,IAChE,OAAOyB,GAAKnB,EAAEmzD,EAAIhyD,EAAE,GAAK,IAAMA,EAAE,IAAMA,EAAE,IAAM,OAAQzB,EAAIyB,EAAE,GAAG6C,SAAW,EAG7E,SAASovD,iBAAiBpzD,EAAGqlD,OAAQ3lD,GACnC,IAAIyB,EAAI6wD,SAASzS,KAAK8F,OAAOxqB,MAAMn7B,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEF,EAAIqB,EAAE,GAAK,EAAGzB,EAAIyB,EAAE,GAAG6C,SAAW,EAGlD,SAASqvD,gBAAgBrzD,EAAGqlD,OAAQ3lD,GAClC,IAAIyB,EAAI6wD,SAASzS,KAAK8F,OAAOxqB,MAAMn7B,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEA,GAAKmB,EAAE,GAAIzB,EAAIyB,EAAE,GAAG6C,SAAW,EAG/C,SAASsvD,eAAetzD,EAAGqlD,OAAQ3lD,GACjC,IAAIyB,EAAI6wD,SAASzS,KAAK8F,OAAOxqB,MAAMn7B,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEF,EAAI,EAAGE,EAAEA,GAAKmB,EAAE,GAAIzB,EAAIyB,EAAE,GAAG6C,SAAW,EAGxD,SAASuvD,YAAYvzD,EAAGqlD,OAAQ3lD,GAC9B,IAAIyB,EAAI6wD,SAASzS,KAAK8F,OAAOxqB,MAAMn7B,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEgxB,GAAK7vB,EAAE,GAAIzB,EAAIyB,EAAE,GAAG6C,SAAW,EAG/C,SAASwvD,aAAaxzD,EAAGqlD,OAAQ3lD,GAC/B,IAAIyB,EAAI6wD,SAASzS,KAAK8F,OAAOxqB,MAAMn7B,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEuxB,GAAKpwB,EAAE,GAAIzB,EAAIyB,EAAE,GAAG6C,SAAW,EAG/C,SAASyvD,aAAazzD,EAAGqlD,OAAQ3lD,GAC/B,IAAIyB,EAAI6wD,SAASzS,KAAK8F,OAAOxqB,MAAMn7B,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEyxB,GAAKtwB,EAAE,GAAIzB,EAAIyB,EAAE,GAAG6C,SAAW,EAG/C,SAAS0vD,kBAAkB1zD,EAAGqlD,OAAQ3lD,GACpC,IAAIyB,EAAI6wD,SAASzS,KAAK8F,OAAOxqB,MAAMn7B,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEsxD,GAAKnwD,EAAE,GAAIzB,EAAIyB,EAAE,GAAG6C,SAAW,EAG/C,SAAS2vD,kBAAkB3zD,EAAGqlD,OAAQ3lD,GACpC,IAAIyB,EAAI6wD,SAASzS,KAAK8F,OAAOxqB,MAAMn7B,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEsxD,EAAIv3C,KAAKgzB,MAAM5rC,EAAE,GAAK,KAAOzB,EAAIyB,EAAE,GAAG6C,SAAW,EAGjE,SAAS4vD,oBAAoB5zD,EAAGqlD,OAAQ3lD,GACtC,IAAIyB,EAAI8wD,UAAU1S,KAAK8F,OAAOxqB,MAAMn7B,EAAGA,EAAI,IAC3C,OAAOyB,EAAIzB,EAAIyB,EAAE,GAAG6C,QAAU,EAGhC,SAAS6vD,mBAAmB7zD,EAAGqlD,OAAQ3lD,GACrC,IAAIyB,EAAI6wD,SAASzS,KAAK8F,OAAOxqB,MAAMn7B,IACnC,OAAOyB,GAAKnB,EAAE8zD,GAAK3yD,EAAE,GAAIzB,EAAIyB,EAAE,GAAG6C,SAAW,EAG/C,SAAS+vD,0BAA0B/zD,EAAGqlD,OAAQ3lD,GAC5C,IAAIyB,EAAI6wD,SAASzS,KAAK8F,OAAOxqB,MAAMn7B,IACnC,OAAOyB,GAAKnB,EAAE8zD,EAAc,KAAR3yD,EAAE,GAAYzB,EAAIyB,EAAE,GAAG6C,SAAW,EAGxD,SAASgwD,iBAAiBh0D,EAAG0B,GAC3B,OAAOouB,WAAI9vB,EAAEgyB,UAAWtwB,EAAG,GAG7B,SAASuyD,aAAaj0D,EAAG0B,GACvB,OAAOouB,WAAI9vB,EAAEqxB,WAAY3vB,EAAG,GAG9B,SAASwyD,aAAal0D,EAAG0B,GACvB,OAAOouB,WAAI9vB,EAAEqxB,WAAa,IAAM,GAAI3vB,EAAG,GAGzC,SAASyyD,gBAAgBn0D,EAAG0B,GAC1B,OAAOouB,WAAI,EAAIskC,QAAQlqC,MAAMmqC,SAASr0D,GAAIA,GAAI0B,EAAG,GAGnD,SAAS4yD,mBAAmBt0D,EAAG0B,GAC7B,OAAOouB,WAAI9vB,EAAE4xB,kBAAmBlwB,EAAG,GAGrC,SAAS6yD,mBAAmBv0D,EAAG0B,GAC7B,OAAO4yD,mBAAmBt0D,EAAG0B,GAAK,MAGpC,SAAS8yD,kBAAkBx0D,EAAG0B,GAC5B,OAAOouB,WAAI9vB,EAAEkyB,WAAa,EAAGxwB,EAAG,GAGlC,SAAS+yD,cAAcz0D,EAAG0B,GACxB,OAAOouB,WAAI9vB,EAAEwxB,aAAc9vB,EAAG,GAGhC,SAASgzD,cAAc10D,EAAG0B,GACxB,OAAOouB,WAAI9vB,EAAE0xB,aAAchwB,EAAG,GAGhC,SAASizD,0BAA0B30D,GACjC,IAAI6xB,IAAM7xB,EAAE8xB,SACZ,OAAe,IAARD,IAAY,EAAIA,IAGzB,SAAS+iC,uBAAuB50D,EAAG0B,GACjC,OAAOouB,WAAI+kC,OAAW3qC,MAAMmqC,SAASr0D,GAAIA,GAAI0B,EAAG,GAGlD,SAASozD,oBAAoB90D,EAAG0B,GAC9B,IAAImwB,IAAM7xB,EAAE8xB,SAEZ,OADA9xB,EAAK6xB,KAAO,GAAa,IAARA,IAAakjC,SAAa/0D,GAAK+0D,SAAajoB,KAAK9sC,GAC3D8vB,WAAIilC,SAAa7qC,MAAMmqC,SAASr0D,GAAIA,IAA+B,IAAzBq0D,SAASr0D,GAAG8xB,UAAiBpwB,EAAG,GAGnF,SAASszD,0BAA0Bh1D,GACjC,OAAOA,EAAE8xB,SAGX,SAASmjC,uBAAuBj1D,EAAG0B,GACjC,OAAOouB,WAAIolC,OAAWhrC,MAAMmqC,SAASr0D,GAAIA,GAAI0B,EAAG,GAGlD,SAASyzD,kBAAWn1D,EAAG0B,GACrB,OAAOouB,WAAI9vB,EAAEuyB,cAAgB,IAAK7wB,EAAG,GAGvC,SAAS0zD,eAAep1D,EAAG0B,GACzB,OAAOouB,WAAI9vB,EAAEuyB,cAAgB,IAAO7wB,EAAG,GAGzC,SAAS2zD,WAAWr1D,GAClB,IAAI2hD,EAAI3hD,EAAE+uD,oBACV,OAAQpN,EAAI,EAAI,KAAOA,IAAM,EAAG,MAC1B7xB,WAAI6xB,EAAI,GAAK,EAAG,IAAK,GACrB7xB,WAAI6xB,EAAI,GAAI,IAAK,GAGzB,SAAS2T,oBAAoBt1D,EAAG0B,GAC9B,OAAOouB,WAAI9vB,EAAEqwD,aAAc3uD,EAAG,GAGhC,SAAS6zD,gBAAgBv1D,EAAG0B,GAC1B,OAAOouB,WAAI9vB,EAAEiwD,cAAevuD,EAAG,GAGjC,SAAS8zD,gBAAgBx1D,EAAG0B,GAC1B,OAAOouB,WAAI9vB,EAAEiwD,cAAgB,IAAM,GAAIvuD,EAAG,GAG5C,SAAS+zD,mBAAmBz1D,EAAG0B,GAC7B,OAAOouB,WAAI,EAAIogC,WAAOhmC,MAAMinC,YAAQnxD,GAAIA,GAAI0B,EAAG,GAGjD,SAASg0D,sBAAsB11D,EAAG0B,GAChC,OAAOouB,WAAI9vB,EAAE21D,qBAAsBj0D,EAAG,GAGxC,SAASk0D,sBAAsB51D,EAAG0B,GAChC,OAAOg0D,sBAAsB11D,EAAG0B,GAAK,MAGvC,SAASm0D,qBAAqB71D,EAAG0B,GAC/B,OAAOouB,WAAI9vB,EAAEixD,cAAgB,EAAGvvD,EAAG,GAGrC,SAASo0D,iBAAiB91D,EAAG0B,GAC3B,OAAOouB,WAAI9vB,EAAE8vD,gBAAiBpuD,EAAG,GAGnC,SAASq0D,iBAAiB/1D,EAAG0B,GAC3B,OAAOouB,WAAI9vB,EAAE4uD,gBAAiBltD,EAAG,GAGnC,SAASs0D,6BAA6Bh2D,GACpC,IAAIi2D,IAAMj2D,EAAEuwD,YACZ,OAAe,IAAR0F,IAAY,EAAIA,IAGzB,SAASC,0BAA0Bl2D,EAAG0B,GACpC,OAAOouB,WAAI0gC,UAAUtmC,MAAMinC,YAAQnxD,GAAIA,GAAI0B,EAAG,GAGhD,SAASy0D,uBAAuBn2D,EAAG0B,GACjC,IAAImwB,IAAM7xB,EAAEuwD,YAEZ,OADAvwD,EAAK6xB,KAAO,GAAa,IAARA,IAAa++B,YAAY5wD,GAAK4wD,YAAY9jB,KAAK9sC,GACzD8vB,WAAI8gC,YAAY1mC,MAAMinC,YAAQnxD,GAAIA,IAAiC,IAA3BmxD,YAAQnxD,GAAGuwD,aAAoB7uD,EAAG,GAGnF,SAAS00D,6BAA6Bp2D,GACpC,OAAOA,EAAEuwD,YAGX,SAAS8F,0BAA0Br2D,EAAG0B,GACpC,OAAOouB,WAAI2gC,UAAUvmC,MAAMinC,YAAQnxD,GAAIA,GAAI0B,EAAG,GAGhD,SAAS40D,cAAct2D,EAAG0B,GACxB,OAAOouB,WAAI9vB,EAAEkxD,iBAAmB,IAAKxvD,EAAG,GAG1C,SAAS60D,kBAAkBv2D,EAAG0B,GAC5B,OAAOouB,WAAI9vB,EAAEkxD,iBAAmB,IAAOxvD,EAAG,GAG5C,SAAS80D,gBACP,MAAO,QAGT,SAASC,uBACP,MAAO,IAGT,SAASC,oBAAoB12D,GAC3B,OAAQA,EAGV,SAAS22D,2BAA2B32D,GAClC,OAAO+Z,KAAKgzB,OAAO/sC,EAAI,MC3mBV,SAASusD,4BAAcnX,YAMpC,OALA+U,yBDea,SAASqC,aAAarC,QACnC,IAAIyM,gBAAkBzM,OAAO0M,SACzBC,YAAc3M,OAAOv6B,KACrBmnC,YAAc5M,OAAO6M,KACrBC,eAAiB9M,OAAO+M,QACxBC,gBAAkBhN,OAAOiN,KACzBC,qBAAuBlN,OAAOmN,UAC9BC,cAAgBpN,OAAOqN,OACvBC,mBAAqBtN,OAAOuN,YAE5BC,SAAWvF,SAAS6E,gBACpBW,aAAetF,aAAa2E,gBAC5BY,UAAYzF,SAAS+E,iBACrBW,cAAgBxF,aAAa6E,iBAC7BY,eAAiB3F,SAASiF,sBAC1BW,mBAAqB1F,aAAa+E,sBAClCY,QAAU7F,SAASmF,eACnBW,YAAc5F,aAAaiF,eAC3BY,aAAe/F,SAASqF,oBACxBW,iBAAmB9F,aAAamF,oBAEhCY,SACF7+C,EAkPF,SAAS8+C,mBAAmBt4D,GAC1B,OAAOq3D,qBAAqBr3D,EAAE8xB,WAlP9BC,EAqPF,SAASwmC,cAAcv4D,GACrB,OAAOm3D,gBAAgBn3D,EAAE8xB,WArPzBrY,EAwPF,SAAS++C,iBAAiBx4D,GACxB,OAAOy3D,mBAAmBz3D,EAAEkyB,aAxP5BC,EA2PF,SAASsmC,YAAYz4D,GACnB,OAAOu3D,cAAcv3D,EAAEkyB,aA3PvBnyB,EAAK,KACLC,EAAKg0D,iBACL1pD,EAAK0pD,iBACLnwD,EAAK0wD,mBACLvjC,EAAKijC,aACLhwD,EAAKiwD,aACL7vD,EAAK8vD,gBACL7C,EAAKgD,mBACLx0D,EAAK00D,kBACLjjC,EAAKkjC,cACL/yD,EAoPF,SAASg3D,aAAa14D,GACpB,OAAOi3D,iBAAiBj3D,EAAEqxB,YAAc,MApPxCyiC,EAAK4C,oBACL/0D,EAAKg1D,2BACLllC,EAAKijC,cACL7G,EAAK8G,0BACLhC,EAAKiC,uBACL/B,EAAKiC,oBACLtC,EAAKwC,0BACLjC,EAAKkC,uBACLxsB,EAAK,KACLqiB,EAAK,KACL14B,EAAK+iC,kBACL1iC,EAAK2iC,eACLjC,EAAKkC,WACL1K,IAAK8L,sBAGHkC,YACFn/C,EAsOF,SAASo/C,sBAAsB54D,GAC7B,OAAOq3D,qBAAqBr3D,EAAEuwD,cAtO9Bx+B,EAyOF,SAAS8mC,iBAAiB74D,GACxB,OAAOm3D,gBAAgBn3D,EAAEuwD,cAzOzB92C,EA4OF,SAASq/C,oBAAoB94D,GAC3B,OAAOy3D,mBAAmBz3D,EAAEixD,gBA5O5B9+B,EA+OF,SAAS4mC,eAAe/4D,GACtB,OAAOu3D,cAAcv3D,EAAEixD,gBA/OvBlxD,EAAK,KACLC,EAAKs1D,oBACLhrD,EAAKgrD,oBACLzxD,EAAK+xD,sBACL5kC,EAAKukC,gBACLtxD,EAAKuxD,gBACLnxD,EAAKoxD,mBACLnE,EAAKoE,sBACL51D,EAAK+1D,qBACLtkC,EAAKukC,iBACLp0D,EAwOF,SAASs3D,gBAAgBh5D,GACvB,OAAOi3D,iBAAiBj3D,EAAEiwD,eAAiB,MAxO3C6D,EAAK4C,oBACL/0D,EAAKg1D,2BACLllC,EAAKskC,iBACLlI,EAAKmI,6BACLrD,EAAKuD,0BACLrD,EAAKsD,uBACL3D,EAAK4D,6BACLrD,EAAKsD,0BACL5tB,EAAK,KACLqiB,EAAK,KACL14B,EAAKkkC,cACL7jC,EAAK8jC,kBACLpD,EAAKqD,cACL7L,IAAK8L,sBAGHwC,QACFz/C,EAkJF,SAAS0/C,kBAAkBl5D,EAAGqlD,OAAQ3lD,GACpC,IAAIyB,EAAI42D,eAAexY,KAAK8F,OAAOxqB,MAAMn7B,IACzC,OAAOyB,GAAKnB,EAAEwyD,EAAIwF,mBAAmB72D,EAAE,GAAGwvB,eAAgBjxB,EAAIyB,EAAE,GAAG6C,SAAW,GAnJ9E+tB,EAsJF,SAASonC,aAAan5D,EAAGqlD,OAAQ3lD,GAC/B,IAAIyB,EAAI02D,UAAUtY,KAAK8F,OAAOxqB,MAAMn7B,IACpC,OAAOyB,GAAKnB,EAAEwyD,EAAIsF,cAAc32D,EAAE,GAAGwvB,eAAgBjxB,EAAIyB,EAAE,GAAG6C,SAAW,GAvJzEyV,EA0JF,SAAS2/C,gBAAgBp5D,EAAGqlD,OAAQ3lD,GAClC,IAAIyB,EAAIg3D,aAAa5Y,KAAK8F,OAAOxqB,MAAMn7B,IACvC,OAAOyB,GAAKnB,EAAEF,EAAIs4D,iBAAiBj3D,EAAE,GAAGwvB,eAAgBjxB,EAAIyB,EAAE,GAAG6C,SAAW,GA3J5EmuB,EA8JF,SAASknC,WAAWr5D,EAAGqlD,OAAQ3lD,GAC7B,IAAIyB,EAAI82D,QAAQ1Y,KAAK8F,OAAOxqB,MAAMn7B,IAClC,OAAOyB,GAAKnB,EAAEF,EAAIo4D,YAAY/2D,EAAE,GAAGwvB,eAAgBjxB,EAAIyB,EAAE,GAAG6C,SAAW,GA/JvEjE,EAkKF,SAASu5D,oBAAoBt5D,EAAGqlD,OAAQ3lD,GACtC,OAAO65D,eAAev5D,EAAG42D,gBAAiBvR,OAAQ3lD,IAlKlDM,EAAKqzD,gBACL/oD,EAAK+oD,gBACLxvD,EAAK8vD,kBACL3iC,EAAKuiC,YACLtvD,EAAKsvD,YACLlvD,EAAKivD,eACLhC,EAAKoC,kBACL5zD,EAAKszD,iBACL7hC,EAAKiiC,aACL9xD,EA+HF,SAAS83D,YAAYx5D,EAAGqlD,OAAQ3lD,GAC9B,IAAIyB,EAAIw2D,SAASpY,KAAK8F,OAAOxqB,MAAMn7B,IACnC,OAAOyB,GAAKnB,EAAE0B,EAAIk2D,aAAaz2D,EAAE,GAAGwvB,eAAgBjxB,EAAIyB,EAAE,GAAG6C,SAAW,GAhIxE8vD,EAAKD,mBACLlyD,EAAKoyD,0BACLtiC,EAAKgiC,aACL5F,EAAK4E,yBACLE,EAAKD,sBACLG,EAAKD,mBACLJ,EAAKD,yBACLQ,EAAKD,sBACLrqB,EAmJF,SAASgxB,gBAAgBz5D,EAAGqlD,OAAQ3lD,GAClC,OAAO65D,eAAev5D,EAAG82D,YAAazR,OAAQ3lD,IAnJ9CorD,EAsJF,SAAS4O,gBAAgB15D,EAAGqlD,OAAQ3lD,GAClC,OAAO65D,eAAev5D,EAAG+2D,YAAa1R,OAAQ3lD,IAtJ9C0yB,EAAK6gC,UACLxgC,EAAKugC,cACLG,EAAKD,UACLvI,IAAKiJ,qBAWP,SAAS/H,UAAUlC,UAAW0O,SAC5B,OAAO,SAASzoC,MACd,IAII7vB,EACA+vB,IACAntB,OANA0iD,UACA3lD,GAAK,EACL2E,EAAI,EACJlD,EAAIwoD,UAAU3lD,OAOlB,IAFM4rB,gBAAgBC,OAAOD,KAAO,IAAIC,MAAMD,SAErClwB,EAAIyB,GACqB,KAA5BwoD,UAAU0C,WAAW3sD,KACvB2lD,OAAO59C,KAAKkiD,UAAU9uB,MAAMx2B,EAAG3E,IACgB,OAA1CowB,IAAM+hC,KAAK9xD,EAAI4pD,UAAUvf,SAAS1qC,KAAcK,EAAI4pD,UAAUvf,SAAS1qC,GACvEowB,IAAY,MAAN/vB,EAAY,IAAM,KACzB4C,OAAS01D,QAAQt4D,MAAIA,EAAI4C,OAAOitB,KAAME,MAC1Cu1B,OAAO59C,KAAK1H,GACZsE,EAAI3E,EAAI,GAKZ,OADA2lD,OAAO59C,KAAKkiD,UAAU9uB,MAAMx2B,EAAG3E,IACxB2lD,OAAO9hD,KAAK,KAIvB,SAASo2D,SAAShQ,UAAWiQ,SAC3B,OAAO,SAASvU,QACd,IAEIwU,KAAMhoC,IAFN7xB,EAAIyxD,QAAQ,MAGhB,GAFQ8H,eAAev5D,EAAG2pD,UAAWtE,QAAU,GAAI,IAE1CA,OAAOrhD,OAAQ,OAAO,KAG/B,GAAI,MAAOhE,EAAG,OAAO,IAAI6vB,KAAK7vB,EAAE8zD,GAMhC,GAHI,MAAO9zD,IAAGA,EAAEgxB,EAAIhxB,EAAEgxB,EAAI,GAAW,GAANhxB,EAAE0B,GAG7B,MAAO1B,EAAG,CACZ,GAAIA,EAAE6yD,EAAI,GAAK7yD,EAAE6yD,EAAI,GAAI,OAAO,KAC1B,MAAO7yD,IAAIA,EAAEwyD,EAAI,GACnB,MAAOxyD,GAET65D,MAD8BhoC,KAA9BgoC,KAAOtI,QAAQE,QAAQzxD,EAAEoyB,KAAgBm+B,aAC5B,GAAa,IAAR1+B,IAAY4+B,UAAU3jB,KAAK+sB,MAAQpJ,UAAUoJ,MAC/DA,KAAO3J,WAAO5B,OAAOuL,KAAkB,GAAX75D,EAAE6yD,EAAI,IAClC7yD,EAAEoyB,EAAIynC,KAAK3I,iBACXlxD,EAAEF,EAAI+5D,KAAK5I,cACXjxD,EAAEA,EAAI65D,KAAKxJ,cAAgBrwD,EAAEwyD,EAAI,GAAK,IAGtCqH,MAD8BhoC,KAA9BgoC,KAAOD,QAAQnI,QAAQzxD,EAAEoyB,KAAgBN,UAC5B,GAAa,IAARD,IAAYqjC,OAAWpoB,KAAK+sB,MAAQ3E,OAAW2E,MACjEA,KAAOzF,QAAQ9F,OAAOuL,KAAkB,GAAX75D,EAAE6yD,EAAI,IACnC7yD,EAAEoyB,EAAIynC,KAAKtnC,cACXvyB,EAAEF,EAAI+5D,KAAK3nC,WACXlyB,EAAEA,EAAI65D,KAAK7nC,WAAahyB,EAAEwyD,EAAI,GAAK,QAE5B,MAAOxyD,GAAK,MAAOA,KACtB,MAAOA,IAAIA,EAAEwyD,EAAI,MAAOxyD,EAAIA,EAAE6tD,EAAI,EAAI,MAAO7tD,EAAI,EAAI,GAC3D6xB,IAAM,MAAO7xB,EAAIuxD,QAAQE,QAAQzxD,EAAEoyB,IAAIm+B,YAAcqJ,QAAQnI,QAAQzxD,EAAEoyB,IAAIN,SAC3E9xB,EAAEF,EAAI,EACNE,EAAEA,EAAI,MAAOA,GAAKA,EAAEwyD,EAAI,GAAK,EAAU,EAANxyD,EAAE+yD,GAASlhC,IAAM,GAAK,EAAI7xB,EAAEwyD,EAAU,EAANxyD,EAAE2yD,GAAS9gC,IAAM,GAAK,GAKzF,MAAI,MAAO7xB,GACTA,EAAEgxB,GAAKhxB,EAAEmzD,EAAI,IAAM,EACnBnzD,EAAEuxB,GAAKvxB,EAAEmzD,EAAI,IACN5B,QAAQvxD,IAIV45D,QAAQ55D,IAInB,SAASu5D,eAAev5D,EAAG2pD,UAAWtE,OAAQhhD,GAO5C,IANA,IAGItE,EACA0C,MAJA/C,EAAI,EACJyB,EAAIwoD,UAAU3lD,OACdlE,EAAIulD,OAAOrhD,OAIRtE,EAAIyB,GAAG,CACZ,GAAIkD,GAAKvE,EAAG,OAAQ,EAEpB,GAAU,MADVC,EAAI4pD,UAAU0C,WAAW3sD,OAIvB,GAFAK,EAAI4pD,UAAUvf,OAAO1qC,OACrB+C,MAAQw2D,OAAOl5D,KAAK8xD,KAAOlI,UAAUvf,OAAO1qC,KAAOK,MACnCsE,EAAI5B,MAAMzC,EAAGqlD,OAAQhhD,IAAM,EAAI,OAAQ,OAClD,GAAItE,GAAKslD,OAAOgH,WAAWhoD,KAChC,OAAQ,EAIZ,OAAOA,EAgFT,OA1LAg0D,QAAQ5vB,EAAIojB,UAAUiL,YAAauB,SACnCA,QAAQvN,EAAIe,UAAUkL,YAAasB,SACnCA,QAAQt4D,EAAI8rD,UAAU+K,gBAAiByB,SACvCM,WAAWlwB,EAAIojB,UAAUiL,YAAa6B,YACtCA,WAAW7N,EAAIe,UAAUkL,YAAa4B,YACtCA,WAAW54D,EAAI8rD,UAAU+K,gBAAiB+B,aAsLxCh2D,OAAQ,SAAAA,OAASgnD,WACf,IAAI9lD,EAAIgoD,UAAUlC,WAAa,GAAI0O,SAEnC,OADAx0D,EAAEstB,SAAW,WAAa,OAAOw4B,WAC1B9lD,GAETpB,MAAO,SAAAA,MAASknD,WACd,IAAIjoD,EAAIi4D,SAAShQ,WAAa,GAAI0H,WAElC,OADA3vD,EAAEyvB,SAAW,WAAa,OAAOw4B,WAC1BjoD,GAETiwD,UAAW,SAAAA,UAAShI,WAClB,IAAI9lD,EAAIgoD,UAAUlC,WAAa,GAAIgP,YAEnC,OADA90D,EAAEstB,SAAW,WAAa,OAAOw4B,WAC1B9lD,GAET+tD,SAAU,SAAAA,SAASjI,WACjB,IAAIjoD,EAAIi4D,SAAShQ,UAAW4H,SAE5B,OADA7vD,EAAEyvB,SAAW,WAAa,OAAOw4B,WAC1BjoD,IClVF8qD,CAAapX,YACtBsc,WAAavH,yBAAOxnD,OACRwnD,yBAAO1nD,MACnBkvD,UAAYxH,yBAAOwH,UACnBC,SAAWzH,yBAAOyH,SACXzH,yBAjBToC,EACEsK,SAAU,SACVjnC,KAAM,aACNonC,KAAM,eACNE,SAAU,KAAM,MAChBE,MAAO,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YACzEE,WAAY,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACtDE,QAAS,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YACvHE,aAAc,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,SCR7E7nC,KAAKruB,UAAUs4D,aAEzBnI,UARoB,0BCMV,IAAI9hC,KAAK,6BAEnB+hC,SDRoB,yBCM1B,ICAImI,oBAAiB,IACjBtL,oBAAkC,GAAjBsL,oBACjBC,kBAAgC,GAAjBvL,oBACfwL,iBAA6B,GAAfD,kBACdtL,kBAA6B,EAAduL,iBACfC,cAA8B,GAAdD,iBAChBE,aAA6B,IAAdF,iBAEnB,SAASrqC,UAAKhvB,GACZ,OAAO,IAAIivB,KAAKjvB,GAGlB,SAASgwC,YAAOhwC,GACd,OAAOA,aAAaivB,MAAQjvB,GAAK,IAAIivB,MAAMjvB,GAGtC,SAASw5D,SAAS5nC,KAAMP,MAAO4nC,KAAMhoC,IAAKi9B,KAAMD,OAAQF,OAAQH,YAAa7rD,QAClF,IAAIkxC,MAAQgV,WAAWP,oBAAeC,YAClC1T,OAAShB,MAAMgB,OACfl/B,OAASk+B,MAAMl+B,OAEf0kD,kBAAoB13D,OAAO,OAC3B23D,aAAe33D,OAAO,OACtB43D,aAAe53D,OAAO,SACtB63D,WAAa73D,OAAO,SACpB83D,UAAY93D,OAAO,SACnB+3D,WAAa/3D,OAAO,SACpB81D,YAAc91D,OAAO,MACrBwyD,WAAaxyD,OAAO,MAEpBg4D,gBACDhM,OAAS,EAAQoL,sBACjBpL,OAAS,EAAI,EAAIoL,sBACjBpL,OAAQ,GAAI,GAAKoL,sBACjBpL,OAAQ,GAAI,GAAKoL,sBACjBlL,OAAS,EAAQJ,sBACjBI,OAAS,EAAI,EAAIJ,sBACjBI,OAAQ,GAAI,GAAKJ,sBACjBI,OAAQ,GAAI,GAAKJ,sBACfK,KAAO,EAAQkL,oBACflL,KAAO,EAAI,EAAIkL,oBACflL,KAAO,EAAI,EAAIkL,oBACflL,KAAM,GAAI,GAAKkL,oBACdnoC,IAAM,EAAQooC,mBACdpoC,IAAM,EAAI,EAAIooC,mBACfJ,KAAO,EAAQnL,oBAChBz8B,MAAQ,EAAQioC,gBAChBjoC,MAAQ,EAAI,EAAIioC,gBACf1nC,KAAO,EAAQ2nC,eAGpB,SAASrN,WAAWl9B,MAClB,OAAQ++B,OAAO/+B,MAAQA,KAAOyqC,kBACxBxL,OAAOj/B,MAAQA,KAAO0qC,aACtBxL,KAAKl/B,MAAQA,KAAO2qC,aACpB1oC,IAAIjC,MAAQA,KAAO4qC,WACnBvoC,MAAMrC,MAAQA,KAAQiqC,KAAKjqC,MAAQA,KAAO6qC,UAAYC,WACtDloC,KAAK5C,MAAQA,KAAO6oC,YACpBtD,YAAYvlC,MAGpB,SAASgrC,aAAa5N,SAAU7pC,MAAO4tB,KAAMC,MAM3C,GALgB,MAAZgc,WAAkBA,SAAW,IAKT,iBAAbA,SAAuB,CAChC,IAAIrE,OAAS5uC,KAAK83B,IAAId,KAAO5tB,OAAS6pC,SAClCttD,EAAI2wC,SAAS,SAAS3wC,GAAK,OAAOA,EAAE,KAAO+wC,MAAMkqB,cAAehS,QAChEjpD,IAAMi7D,cAAc32D,QACtBgtC,KAAOW,SAASxuB,MAAQg3C,aAAcppB,KAAOopB,aAAcnN,UAC3DA,SAAWx6B,MACF9yB,GAETsxC,MADAtxC,EAAIi7D,cAAchS,OAASgS,cAAcj7D,EAAI,GAAG,GAAKi7D,cAAcj7D,GAAG,GAAKipD,OAASjpD,EAAI,EAAIA,IACnF,GACTstD,SAAWttD,EAAE,KAEbsxC,KAAOj3B,KAAK9D,IAAI07B,SAASxuB,MAAO4tB,KAAMic,UAAW,GACjDA,SAAWwB,aAIf,OAAe,MAARxd,KAAegc,SAAWA,SAASvvC,MAAMuzB,MAsClD,OAnCA6C,MAAMgB,OAAS,SAASziB,GACtB,OAAO,IAAIvC,KAAKglB,OAAOziB,KAGzByhB,MAAMl+B,OAAS,SAASsJ,GACtB,OAAOrW,UAAU5E,OAAS2R,OAAOtS,cAAIxD,KAAKof,EAAG2xB,cAAWj7B,SAAStS,IAAIusB,YAGvEikB,MAAMvC,MAAQ,SAAS0b,SAAUhc,MAC/B,IAIIpwC,EAJAZ,EAAI2V,SACJurC,GAAKlhD,EAAE,GACPmhD,GAAKnhD,EAAEA,EAAEgE,OAAS,GAClBxD,EAAI2gD,GAAKD,GAKb,OAHI1gD,IAAGI,EAAIsgD,GAAIA,GAAKC,GAAIA,GAAKvgD,GAE7BA,GADAA,EAAIg6D,aAAa5N,SAAU9L,GAAIC,GAAInQ,OAC3BpwC,EAAE+iB,MAAMu9B,GAAIC,GAAK,MAClB3gD,EAAII,EAAEuhB,UAAYvhB,GAG3BizC,MAAMiZ,WAAa,SAAS5iC,MAAOy/B,WACjC,OAAoB,MAAbA,UAAoBmD,WAAanqD,OAAOgnD,YAGjD9V,MAAMkZ,KAAO,SAASC,SAAUhc,MAC9B,IAAIhxC,EAAI2V,SACR,OAAQq3C,SAAW4N,aAAa5N,SAAUhtD,EAAE,GAAIA,EAAEA,EAAEgE,OAAS,GAAIgtC,OAC3Dr7B,OAAOo3C,KAAK/sD,EAAGgtD,WACfnZ,OAGRA,MAAMC,KAAO,WACX,OAAOA,KAAKD,MAAOumB,SAAS5nC,KAAMP,MAAO4nC,KAAMhoC,IAAKi9B,KAAMD,OAAQF,OAAQH,YAAa7rD,UAGlFkxC,MAGM,IAAAgnB,SAAA,WACb,OAAOT,SAAS/F,SAAUyG,UAAWC,OAAU3G,QAAS4G,SAAUC,WAAYC,WAAYC,gBAAiBzJ,YAAY/7C,QAAQ,IAAIka,KAAK,IAAM,EAAG,GAAI,IAAIA,KAAK,IAAM,EAAG,MCrI1JurC,WAAA,SAASz5D,GACtB,OAAOA,EAAEo0B,MAAM,SAAS1yB,IAAI,SAASolC,GACnC,MAAO,IAAMA,KCAFwb,sBAAO,gECAPA,uBAAO,4HCAPA,YCAAA,WAAO,4HDAPA,WAAO,6HECPoX,cAAyB3Y,oBAAU,IAAK,GAAK,GAAMA,qBAAW,IAAK,GAAK,ICArE2Y,cAAyB3Y,qBAAW,IAAK,IAAM,KAAOA,oBAAU,GAAI,IAAM,KAE1E2Y,cAAyB3Y,oBAAU,IAAK,IAAM,KAAOA,oBAAU,GAAI,IAAM,KAE7EA,sBCLd,SAAS4Y,KAAK33C,OACZ,IAAIxiB,EAAIwiB,MAAM3f,OACd,OAAO,SAASpD,GACd,OAAO+iB,MAAM5J,KAAK9D,IAAI,EAAG8D,KAAKjE,IAAI3U,EAAI,EAAG4Y,KAAKgzB,MAAMnsC,EAAIO,OAI7Cm6D,KAAKrX,WAAO,qgDAERqX,KAAKrX,WAAO,qgDAEVqX,KAAKrX,WAAO,qgDAEbqX,KAAKrX,WAAO,qgDCbjB,SAASsX,WAAWC,cACjC,IAAIvO,GAAK,EACLC,GAAK,EACLtE,OAAQ,EAEZ,SAAS/U,MAAMpL,GACb,IAAI7nC,GAAK6nC,EAAIwkB,KAAOC,GAAKD,IACzB,OAAOuO,aAAa5S,MAAQ7uC,KAAK9D,IAAI,EAAG8D,KAAKjE,IAAI,EAAGlV,IAAMA,GAmB5D,OAhBAizC,MAAMl+B,OAAS,SAASsJ,GACtB,OAAOrW,UAAU5E,QAAUipD,IAAMhuC,EAAE,GAAIiuC,IAAMjuC,EAAE,GAAI40B,QAAUoZ,GAAIC,KAGnErZ,MAAM+U,MAAQ,SAAS3pC,GACrB,OAAOrW,UAAU5E,QAAU4kD,QAAU3pC,EAAG40B,OAAS+U,OAGnD/U,MAAM2nB,aAAe,SAASv8C,GAC5B,OAAOrW,UAAU5E,QAAUw3D,aAAev8C,EAAG40B,OAAS2nB,cAGxD3nB,MAAMC,KAAO,WACX,OAAOynB,WAAWC,cAAc7lD,QAAQs3C,GAAIC,KAAKtE,MAAMA,QAGlDiE,UAAUhZ,OC5BJ,IAAA4nB,8BAAA,SAAS9R,WAEtB,IADA,IAAIxoD,EAAIwoD,UAAU3lD,OAAS,EAAI,EAAGigD,OAAS,IAAIn7C,MAAM3H,GAAIzB,EAAI,EACtDA,EAAIyB,GAAG8iD,OAAOvkD,GAAK,IAAMiqD,UAAU9uB,MAAU,EAAJn7B,EAAa,IAAJA,GACzD,OAAOukD,QCDMA,QCAAA,8BAAO,gEDAPA,8BAAO,qDEAPA,oCAAO,oDCAPA,qCAAO,4ECAPA,sCAAO,0DCAPA,sCAAO,oDCAPA,mCAAO,0DCAPA,mCAAO,oDCAPA,mCAAO,4ECAPyX,SAAA,SAASC,QACtB,OAAOC,SAAoBD,OAAOA,OAAO33D,OAAS,KCAzC23D,YAAS,IAAI7yD,MAAM,GAAGhE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzB,IAAI4gD,+BAESqX,cAAKK,aCZTA,YAAS,IAAI7yD,MAAM,GAAGhE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzB,IAAI4gD,+BAESqX,cAAKK,aCZTA,YAAS,IAAI7yD,MAAM,GAAGhE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzB,IAAI4gD,+BAESqX,cAAKK,aCALL,cAZK,IAAIxyD,MAAM,GAAGhE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzB,IAAI4gD,gCCESqX,cAZK,IAAIxyD,MAAM,GAAGhE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzB,IAAI4gD,gCCESqX,cAZK,IAAIxyD,MAAM,GAAGhE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzB,IAAI4gD,gCCESqX,gBAZK,IAAIxyD,MAAM,GAAGhE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzB,IAAI4gD,gCCESqX,gBAZK,IAAIxyD,MAAM,GAAGhE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzB,IAAI4gD,gCCESqX,kBAZK,IAAIxyD,MAAM,GAAGhE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzB,IAAI4gD,gCCASqX,cAVK,IAAIxyD,MAAM,GAAGhE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAI4gD,gCCESqX,cAVK,IAAIxyD,MAAM,GAAGhE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAI4gD,gCCESqX,cAVK,IAAIxyD,MAAM,GAAGhE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAI4gD,gCCESqX,cAVK,IAAIxyD,MAAM,GAAGhE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAI4gD,gCCESqX,gBAVK,IAAIxyD,MAAM,GAAGhE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAI4gD,gCCESqX,cAVK,IAAIxyD,MAAM,GAAGhE,OAC/B,q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","file":"muze.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"muze\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"muze\"] = factory();\n\telse\n\t\troot[\"muze\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"DataModel\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DataModel\"] = factory();\n\telse\n\t\troot[\"DataModel\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n","export {default as dsvFormat} from \"./dsv\";\nexport {csvParse, csvParseRows, csvFormat, csvFormatRows} from \"./csv\";\nexport {tsvParse, tsvParseRows, tsvFormat, tsvFormatRows} from \"./tsv\";\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;\n","export { DataFormat, FilteringMode } from '../enums';\n/**\n * The event name for data propagation.\n */\nexport const PROPAGATION = 'propagation';\n\n/**\n * The name of the unique row id column in DataModel.\n */\nexport const ROW_ID = '__id__';\n\n/**\n * The enums for operation names performed on DataModel.\n */\nexport const DM_DERIVATIVES = {\n    SELECT: 'select',\n    PROJECT: 'project',\n    GROUPBY: 'group',\n    COMPOSE: 'compose',\n    CAL_VAR: 'calculatedVariable',\n    BIN: 'bin'\n};\n\nexport const JOINS = {\n    CROSS: 'cross',\n    LEFTOUTER: 'leftOuter',\n    RIGHTOUTER: 'rightOuter',\n    NATURAL: 'natural',\n    FULLOUTER: 'fullOuter'\n};\n\nexport const LOGICAL_OPERATORS = {\n    AND: 'and',\n    OR: 'or'\n};\n","import FlatJSON from './flat-json';\nimport DSVArr from './dsv-arr';\nimport DSVStr from './dsv-str';\nimport { detectDataFormat } from '../utils';\n\n/**\n * Parses the input data and detect the format automatically.\n *\n * @param {string|Array} data - The input data.\n * @param {Object} options - An optional config specific to data format.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n */\nfunction Auto (data, options) {\n    const converters = { FlatJSON, DSVStr, DSVArr };\n    const dataFormat = detectDataFormat(data);\n\n    if (!dataFormat) {\n        throw new Error('Couldn\\'t detect the data format');\n    }\n\n    return converters[dataFormat](data, options);\n}\n\nexport default Auto;\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in DSV array to a manageable internal format.\n *\n * @param {Array.<Array>} arr - A 2D array containing of the DSV data.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv data is header or not.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    [\"a\", \"b\", \"c\"],\n *    [1, 2, 3],\n *    [4, 5, 6],\n *    [7, 8, 9]\n * ];\n */\nfunction DSVArr (arr, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    let header;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    if (options.firstRowHeader) {\n        // If header present then mutate the array.\n        // Do in-place mutation to save space.\n        header = arr.splice(0, 1)[0];\n    } else {\n        header = [];\n    }\n\n    arr.forEach(field => push(...field));\n\n    return [header, columns];\n}\n\nexport default DSVArr;\n","import { dsvFormat as d3Dsv } from 'd3-dsv';\nimport DSVArr from './dsv-arr';\n\n/**\n * Parses and converts data formatted in DSV string to a manageable internal format.\n *\n * @todo Support to be given for https://tools.ietf.org/html/rfc4180.\n * @todo Sample implementation https://github.com/knrz/CSV.js/.\n *\n * @param {string} str - The input DSV string.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv string data is header or not.\n * @param {string} [options.fieldSeparator=\",\"] - The separator of two consecutive field.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = `\n * a,b,c\n * 1,2,3\n * 4,5,6\n * 7,8,9\n * `\n */\nfunction DSVStr (str, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n        fieldSeparator: ','\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    const dsv = d3Dsv(options.fieldSeparator);\n    return DSVArr(dsv.parseRows(str), options);\n}\n\nexport default DSVStr;\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in JSON to a manageable internal format.\n *\n * @param {Array.<Object>} arr - The input data formatted in JSON.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    {\n *      \"a\": 1,\n *      \"b\": 2,\n *      \"c\": 3\n *    },\n *    {\n *      \"a\": 4,\n *      \"b\": 5,\n *      \"c\": 6\n *    },\n *    {\n *      \"a\": 7,\n *      \"b\": 8,\n *      \"c\": 9\n *    }\n * ];\n */\nfunction FlatJSON (arr) {\n    const header = {};\n    let i = 0;\n    let insertionIndex;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    arr.forEach((item) => {\n        const fields = [];\n        for (let key in item) {\n            if (key in header) {\n                insertionIndex = header[key];\n            } else {\n                header[key] = i++;\n                insertionIndex = i - 1;\n            }\n            fields[insertionIndex] = item[key];\n        }\n        push(...fields);\n    });\n\n    return [Object.keys(header), columns];\n}\n\nexport default FlatJSON;\n","export { default as DSVArr } from './dsv-arr';\nexport { default as DSVStr } from './dsv-str';\nexport { default as FlatJSON } from './flat-json';\nexport { default as Auto } from './auto-resolver';\n","/* eslint-disable default-case */\n\nimport { FieldType, DimensionSubtype, DataFormat } from './enums';\nimport {\n    persistDerivation,\n    persistAncestorDerivation,\n    getRootGroupByModel,\n    propagateToAllDataModels,\n    getRootDataModel,\n    propagateImmutableActions,\n    addToPropNamespace,\n    sanitizeUnitSchema\n} from './helper';\nimport { DM_DERIVATIVES, PROPAGATION } from './constants';\nimport {\n    dataBuilder,\n    rowDiffsetIterator,\n    groupBy\n} from './operator';\nimport { createBinnedFieldData } from './operator/bucket-creator';\nimport Relation from './relation';\nimport reducerStore from './utils/reducer-store';\nimport { createFields } from './field-creator';\nimport InvalidAwareTypes from './invalid-aware-types';\n\n/**\n * DataModel is an in-browser representation of tabular data. It supports\n * {@link https://en.wikipedia.org/wiki/Relational_algebra | relational algebra} operators as well as generic data\n * processing opearators.\n * DataModel extends {@link Relation} class which defines all the relational algebra opreators. DataModel gives\n * definition of generic data processing operators which are not relational algebra complient.\n *\n * @public\n * @class\n * @extends Relation\n * @memberof Datamodel\n */\nclass DataModel extends Relation {\n    /**\n     * Creates a new DataModel instance by providing data and schema. Data could be in the form of\n     * - Flat JSON\n     * - DSV String\n     * - 2D Array\n     *\n     * By default DataModel finds suitable adapter to serialize the data. DataModel also expects a\n     * {@link Schema | schema} for identifying the variables present in data.\n     *\n     * @constructor\n     * @example\n     * const data = loadData('cars.csv');\n     * const schema = [\n     *      { name: 'Name', type: 'dimension' },\n     *      { name: 'Miles_per_Gallon', type: 'measure', unit : 'cm', scale: '1000', numberformat: val => `${val}G`},\n     *      { name: 'Cylinders', type: 'dimension' },\n     *      { name: 'Displacement', type: 'measure' },\n     *      { name: 'Horsepower', type: 'measure' },\n     *      { name: 'Weight_in_lbs', type: 'measure' },\n     *      { name: 'Acceleration', type: 'measure' },\n     *      { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *      { name: 'Origin', type: 'dimension' }\n     * ];\n     * const dm = new DataModel(data, schema, { name: 'Cars' });\n     * table(dm);\n     *\n     * @public\n     *\n     * @param {Array.<Object> | string | Array.<Array>} data Input data in any of the mentioned formats\n     * @param {Array.<Schema>} schema Defination of the variables. Order of the variables in data and order of the\n     *      variables in schema has to be same.\n     * @param {object} [options] Optional arguments to specify more settings regarding the creation part\n     * @param {string} [options.name] Name of the datamodel instance. If no name is given an auto generated name is\n     *      assigned to the instance.\n     * @param {string} [options.fieldSeparator=','] specify field separator type if the data is of type dsv string.\n     */\n    constructor (...args) {\n        super(...args);\n\n        this._onPropagation = [];\n        this._sortingDetails = [];\n    }\n\n    /**\n     * Reducers are simple functions which reduces an array of numbers to a representative number of the set.\n     * Like an array of numbers `[10, 20, 5, 15]` can be reduced to `12.5` if average / mean reducer function is\n     * applied. All the measure fields in datamodel (variables in data) needs a reducer to handle aggregation.\n     *\n     * @public\n     *\n     * @return {ReducerStore} Singleton instance of {@link ReducerStore}.\n     */\n    static get Reducers () {\n        return reducerStore;\n    }\n\n    /**\n     * Configure null, undefined, invalid values in the source data\n     *\n     * @public\n     *\n     * @param {Object} [config] - Configuration to control how null, undefined and non-parsable values are\n     * represented in DataModel.\n     * @param {string} [config.undefined] - Define how an undefined value will be represented.\n     * @param {string} [config.null] - Define how a null value will be represented.\n     * @param {string} [config.invalid] - Define how a non-parsable value will be represented.\n     */\n    static configureInvalidAwareTypes (config) {\n        return InvalidAwareTypes.invalidAwareVals(config);\n    }\n\n    /**\n     * Retrieve the data attached to an instance in JSON format.\n     *\n     * @example\n     * // DataModel instance is already prepared and assigned to dm variable\n     *  const data = dm.getData({\n     *      order: 'column',\n     *      formatter: {\n     *          origin: (val) => val === 'European Union' ? 'EU' : val;\n     *      }\n     *  });\n     *  console.log(data);\n     *\n     * @public\n     *\n     * @param {Object} [options] Options to control how the raw data is to be returned.\n     * @param {string} [options.order='row'] Defines if data is retieved in row order or column order. Possible values\n     *      are `'rows'` and `'columns'`\n     * @param {Function} [options.formatter=null] Formats the output data. This expects an object, where the keys are\n     *      the name of the variable needs to be formatted. The formatter function is called for each row passing the\n     *      value of the cell for a particular row as arguments. The formatter is a function in the form of\n     *      `function (value, rowId, schema) => { ... }`\n     *      Know more about {@link Fomatter}.\n     *\n     * @return {Array} Returns a multidimensional array of the data with schema. The return format looks like\n     *      ```\n     *          {\n     *              data,\n     *              schema\n     *          }\n     *      ```\n     */\n    getData (options) {\n        const defOptions = {\n            order: 'row',\n            formatter: null,\n            withUid: false,\n            getAllFields: false,\n            sort: []\n        };\n        options = Object.assign({}, defOptions, options);\n        const fields = this.getPartialFieldspace().fields;\n\n        const dataGenerated = dataBuilder.call(\n            this,\n            this.getPartialFieldspace().fields,\n            this._rowDiffset,\n            options.getAllFields ? fields.map(d => d.name()).join() : this._colIdentifier,\n            options.sort,\n            {\n                columnWise: options.order === 'column',\n                addUid: !!options.withUid\n            }\n        );\n\n        if (!options.formatter) {\n            return dataGenerated;\n        }\n\n        const { formatter } = options;\n        const { data, schema, uids } = dataGenerated;\n        const fieldNames = schema.map((e => e.name));\n        const fmtFieldNames = Object.keys(formatter);\n        const fmtFieldIdx = fmtFieldNames.reduce((acc, next) => {\n            const idx = fieldNames.indexOf(next);\n            if (idx !== -1) {\n                acc.push([idx, formatter[next]]);\n            }\n            return acc;\n        }, []);\n\n        if (options.order === 'column') {\n            fmtFieldIdx.forEach((elem) => {\n                const fIdx = elem[0];\n                const fmtFn = elem[1];\n\n                data[fIdx].forEach((datum, datumIdx) => {\n                    data[fIdx][datumIdx] = fmtFn.call(\n                        undefined,\n                        datum,\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        } else {\n            data.forEach((datum, datumIdx) => {\n                fmtFieldIdx.forEach((elem) => {\n                    const fIdx = elem[0];\n                    const fmtFn = elem[1];\n\n                    datum[fIdx] = fmtFn.call(\n                        undefined,\n                        datum[fIdx],\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        }\n\n        return dataGenerated;\n    }\n\n    /**\n     * Groups the data using particular dimensions and by reducing measures. It expects a list of dimensions using which\n     * it projects the datamodel and perform aggregations to reduce the duplicate tuples. Refer this\n     * {@link link_to_one_example_with_group_by | document} to know the intuition behind groupBy.\n     *\n     * DataModel by default provides definition of few {@link reducer | Reducers}.\n     * {@link ReducerStore | User defined reducers} can also be registered.\n     *\n     * This is the chained implementation of `groupBy`.\n     * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n     *\n     * @example\n     * const groupedDM = dm.groupBy(['Year'], { horsepower: 'max' } );\n     * console.log(groupedDm);\n     *\n     * @public\n     *\n     * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n     * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n     *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n     *      schema of the variable.\n     *\n     * @return {DataModel} Returns a new DataModel instance after performing the groupby.\n     */\n    groupBy (fieldsArr, reducers = {}, config = { saveChild: true }) {\n        const groupByString = `${fieldsArr.join()}`;\n        let params = [this, fieldsArr, reducers];\n        const newDataModel = groupBy(...params);\n\n        persistDerivation(\n            newDataModel,\n            DM_DERIVATIVES.GROUPBY,\n            { fieldsArr, groupByString, defaultReducer: reducerStore.defaultReducer() },\n            reducers\n        );\n        persistAncestorDerivation(this, newDataModel);\n\n        if (config.saveChild) {\n            newDataModel.setParent(this);\n        } else {\n            newDataModel.setParent(null);\n        }\n\n        return newDataModel;\n    }\n\n    /**\n     * Performs sorting operation on the current {@link DataModel} instance according to the specified sorting details.\n     * Like every other operator it doesn't mutate the current DataModel instance on which it was called, instead\n     * returns a new DataModel instance containing the sorted data.\n     *\n     * DataModel support multi level sorting by listing the variables using which sorting needs to be performed and\n     * the type of sorting `ASC` or `DESC`.\n     *\n     * In the following example, data is sorted by `Origin` field in `DESC` order in first level followed by another\n     * level of sorting by `Acceleration` in `ASC` order.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * let sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\"] // Default value is ASC\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * // Sort with a custom sorting function\n     * sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\", (a, b) => a - b] // Custom sorting function\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @text\n     * DataModel also provides another sorting mechanism out of the box where sort is applied to a variable using\n     * another variable which determines the order.\n     * Like the above DataModel contains three fields `Origin`, `Name` and `Acceleration`. Now, the data in this\n     * model can be sorted by `Origin` field according to the average value of all `Acceleration` for a\n     * particular `Origin` value.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * const sortedDm = dm.sort([\n     *     ['Origin', ['Acceleration', (a, b) => avg(...a.Acceleration) - avg(...b.Acceleration)]]\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @public\n     *\n     * @param {Array.<Array>} sortingDetails - Sorting details based on which the sorting will be performed.\n     * @return {DataModel} Returns a new instance of DataModel with sorted data.\n     */\n    sort (sortingDetails) {\n        const rawData = this.getData({\n            order: 'row',\n            sort: sortingDetails\n        });\n        const header = rawData.schema.map(field => field.name);\n        const dataInCSVArr = [header].concat(rawData.data);\n\n        const sortedDm = new this.constructor(dataInCSVArr, rawData.schema, { dataFormat: 'DSVArr' });\n        sortedDm._sortingDetails = sortingDetails;\n        return sortedDm;\n    }\n\n    /**\n     * Performs the serialization operation on the current {@link DataModel} instance according to the specified data\n     * type. When an {@link DataModel} instance is created, it de-serializes the input data into its internal format,\n     * and during its serialization process, it converts its internal data format to the specified data type and returns\n     * that data regardless what type of data is used during the {@link DataModel} initialization.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance.\n     * const csvData = dm.serialize(DataModel.DataFormat.DSV_STR, { fieldSeparator: \",\" });\n     * console.log(csvData); // The csv formatted data.\n     *\n     * const jsonData = dm.serialize(DataModel.DataFormat.FLAT_JSON);\n     * console.log(jsonData); // The json data.\n     *\n     * @public\n     *\n     * @param {string} type - The data type name for serialization.\n     * @param {Object} options - The optional option object.\n     * @param {string} options.fieldSeparator - The field separator character for DSV data type.\n     * @return {Array|string} Returns the serialized data.\n     */\n    serialize (type, options) {\n        type = type || this._dataFormat;\n        options = Object.assign({}, { fieldSeparator: ',' }, options);\n\n        const fields = this.getFieldspace().fields;\n        const colData = fields.map(f => f.formattedData());\n        const rowsCount = colData[0].length;\n        let serializedData;\n        let rowIdx;\n        let colIdx;\n\n        if (type === DataFormat.FLAT_JSON) {\n            serializedData = [];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = {};\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row[fields[colIdx].name()] = colData[colIdx][rowIdx];\n                }\n                serializedData.push(row);\n            }\n        } else if (type === DataFormat.DSV_STR) {\n            serializedData = [fields.map(f => f.name()).join(options.fieldSeparator)];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row.join(options.fieldSeparator));\n            }\n            serializedData = serializedData.join('\\n');\n        } else if (type === DataFormat.DSV_ARR) {\n            serializedData = [fields.map(f => f.name())];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row);\n            }\n        } else {\n            throw new Error(`Data type ${type} is not supported`);\n        }\n\n        return serializedData;\n    }\n\n    addField (field) {\n        const fieldName = field.name();\n        this._colIdentifier += `,${fieldName}`;\n        const partialFieldspace = this._partialFieldspace;\n\n        if (!partialFieldspace.fieldsObj()[field.name()]) {\n            partialFieldspace.fields.push(field);\n        } else {\n            const fieldIndex = partialFieldspace.fields.findIndex(fieldinst => fieldinst.name() === fieldName);\n            fieldIndex >= 0 && (partialFieldspace.fields[fieldIndex] = field);\n        }\n\n        // flush out cached namespace values on addition of new fields\n        partialFieldspace._cachedFieldsObj = null;\n        partialFieldspace._cachedDimension = null;\n        partialFieldspace._cachedMeasure = null;\n\n        this.__calculateFieldspace().calculateFieldsConfig();\n        return this;\n    }\n\n    /**\n    * Creates a new variable calculated from existing variables. This method expects the definition of the newly created\n    * variable and a function which resolves the value of the new variable from existing variables.\n    *\n    * Can create a new measure based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const newDm = dataModel.calculateVariable({\n    *      name: 'powerToWeight',\n    *      type: 'measure'\n    *  }, ['horsepower', 'weight_in_lbs', (hp, weight) => hp / weight ]);\n    *\n    *\n    * Can create a new dimension based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const child = dataModel.calculateVariable(\n    *     {\n    *       name: 'Efficiency',\n    *       type: 'dimension'\n    *     }, ['horsepower', (hp) => {\n    *      if (hp < 80) { return 'low'; },\n    *      else if (hp < 120) { return 'moderate'; }\n    *      else { return 'high' }\n    *  }]);\n    *\n    * @public\n    *\n    * @param {Object} schema - The schema of newly defined variable.\n    * @param {Array.<string|function>} dependency - An array containing the dependency variable names and a resolver\n    * function as the last element.\n    * @param {Object} config - An optional config object.\n    * @param {boolean} [config.saveChild] - Whether the newly created DataModel will be a child.\n    * @param {boolean} [config.replaceVar] - Whether the newly created variable will replace the existing variable.\n    * @return {DataModel} Returns an instance of DataModel with the new field.\n    */\n    calculateVariable (schema, dependency, config) {\n        schema = sanitizeUnitSchema(schema);\n        config = Object.assign({}, { saveChild: true, replaceVar: false }, config);\n\n        const fieldsConfig = this.getFieldsConfig();\n        const depVars = dependency.slice(0, dependency.length - 1);\n        const retrieveFn = dependency[dependency.length - 1];\n\n        if (fieldsConfig[schema.name] && !config.replaceVar) {\n            throw new Error(`${schema.name} field already exists in datamodel`);\n        }\n\n        const depFieldIndices = depVars.map((field) => {\n            const fieldSpec = fieldsConfig[field];\n            if (!fieldSpec) {\n                // @todo dont throw error here, use warning in production mode\n                throw new Error(`${field} is not a valid column name.`);\n            }\n            return fieldSpec.index;\n        });\n\n        const clone = this.clone(config.saveChild);\n\n        const fs = clone.getFieldspace().fields;\n        const suppliedFields = depFieldIndices.map(idx => fs[idx]);\n\n        let cachedStore = {};\n        let cloneProvider = () => this.detachedRoot();\n\n        const computedValues = [];\n        rowDiffsetIterator(clone._rowDiffset, (i) => {\n            const fieldsData = suppliedFields.map(field => field.partialField.data[i]);\n            computedValues[i] = retrieveFn(...fieldsData, i, cloneProvider, cachedStore);\n        });\n        const [field] = createFields([computedValues], [schema], [schema.name]);\n        clone.addField(field);\n\n        persistDerivation(clone, DM_DERIVATIVES.CAL_VAR, { config: schema, fields: depVars }, retrieveFn);\n        persistAncestorDerivation(this, clone);\n\n        return clone;\n    }\n\n    /**\n     * Propagates changes across all the connected DataModel instances.\n     *\n     * @param {Array} identifiers - A list of identifiers that were interacted with.\n     * @param {Object} payload - The interaction specific details.\n     *\n     * @return {DataModel} DataModel instance.\n     */\n    propagate (identifiers, config = {}, addToNameSpace, propConfig = {}) {\n        const isMutableAction = config.isMutableAction;\n        const propagationSourceId = config.sourceId;\n        const payload = config.payload;\n        const rootModel = getRootDataModel(this);\n        const propagationNameSpace = rootModel._propagationNameSpace;\n        const rootGroupByModel = getRootGroupByModel(this);\n        const rootModels = {\n            groupByModel: rootGroupByModel,\n            model: rootModel\n        };\n\n        addToNameSpace && addToPropNamespace(propagationNameSpace, config, this);\n        propagateToAllDataModels(identifiers, rootModels, { propagationNameSpace, sourceId: propagationSourceId },\n            Object.assign({\n                payload\n            }, config));\n\n        if (isMutableAction) {\n            propagateImmutableActions(propagationNameSpace, rootModels, {\n                config,\n                propConfig\n            }, this);\n        }\n\n        return this;\n    }\n\n    /**\n     * Associates a callback with an event name.\n     *\n     * @param {string} eventName - The name of the event.\n     * @param {Function} callback - The callback to invoke.\n     * @return {DataModel} Returns this current DataModel instance itself.\n     */\n    on (eventName, callback) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation.push(callback);\n            break;\n        }\n        return this;\n    }\n\n    /**\n     * Unsubscribes the callbacks for the provided event name.\n     *\n     * @param {string} eventName - The name of the event to unsubscribe.\n     * @return {DataModel} Returns the current DataModel instance itself.\n     */\n    unsubscribe (eventName) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation = [];\n            break;\n\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to invoke the method associated with propagation.\n     *\n     * @param {Object} payload The interaction payload.\n     * @param {DataModel} identifiers The propagated DataModel.\n     * @memberof DataModel\n     */\n    handlePropagation (propModel, payload) {\n        let propListeners = this._onPropagation;\n        propListeners.forEach(fn => fn.call(this, propModel, payload));\n    }\n\n    /**\n     * Performs the binning operation on a measure field based on the binning configuration. Binning means discretizing\n     * values of a measure. Binning configuration contains an array; subsequent values from the array marks the boundary\n     * of buckets in [inclusive, exclusive) range format. This operation does not mutate the subject measure field,\n     * instead, it creates a new field (variable) of type dimension and subtype binned.\n     *\n     * Binning can be configured by\n     * - providing custom bin configuration with non-uniform buckets,\n     * - providing bins count,\n     * - providing each bin size,\n     *\n     * When custom `buckets` are provided as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', buckets: [30, 80, 100, 110] }\n     *  const binnedDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binsCount` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', binsCount: 5, start: 0, end: 100 }\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binSize` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHorsepower', binSize: 20, start: 5}\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @public\n     *\n     * @param {string} measureFieldName - The name of the target measure field.\n     * @param {Object} config - The config object.\n     * @param {string} [config.name] - The name of the new field which will be created.\n     * @param {string} [config.buckets] - An array containing the bucket ranges.\n     * @param {string} [config.binSize] - The size of each bin. It is ignored when buckets are given.\n     * @param {string} [config.binsCount] - The total number of bins to generate. It is ignored when buckets are given.\n     * @param {string} [config.start] - The start value of the bucket ranges. It is ignored when buckets are given.\n     * @param {string} [config.end] - The end value of the bucket ranges. It is ignored when buckets are given.\n     * @return {DataModel} Returns a new {@link DataModel} instance with the new field.\n     */\n    bin (measureFieldName, config) {\n        const fieldsConfig = this.getFieldsConfig();\n\n        if (!fieldsConfig[measureFieldName]) {\n            throw new Error(`Field ${measureFieldName} doesn't exist`);\n        }\n\n        const binFieldName = config.name || `${measureFieldName}_binned`;\n\n        if (fieldsConfig[binFieldName]) {\n            throw new Error(`Field ${binFieldName} already exists`);\n        }\n\n        const measureField = this.getFieldspace().fieldsObj()[measureFieldName];\n        const { binnedData, bins } = createBinnedFieldData(measureField, this._rowDiffset, config);\n\n        const binField = createFields([binnedData], [\n            {\n                name: binFieldName,\n                type: FieldType.DIMENSION,\n                subtype: DimensionSubtype.BINNED,\n                bins\n            }], [binFieldName])[0];\n\n        const clone = this.clone(config.saveChild);\n        clone.addField(binField);\n\n        persistDerivation(clone, DM_DERIVATIVES.BIN, { measureFieldName, config, binFieldName }, null);\n        persistAncestorDerivation(this, clone);\n\n        return clone;\n    }\n\n    /**\n     * Creates a new {@link DataModel} instance with completely detached root from current {@link DataModel} instance,\n     * the new {@link DataModel} instance has no parent-children relationship with the current one, but has same data as\n     * the current one.\n     * This API is useful when a completely different {@link DataModel} but with same data as the current instance is\n     * needed.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *  const detachedDm = dm.detachedRoot();\n     *\n     * // has different namespace\n     * console.log(dm.getPartialFieldspace().name);\n     * console.log(detachedDm.getPartialFieldspace().name);\n     *\n     * // has same data\n     * console.log(dm.getData());\n     * console.log(detachedDm.getData());\n     *\n     * @public\n     *\n     * @return {DataModel} Returns a detached {@link DataModel} instance.\n     */\n    detachedRoot () {\n        const data = this.serialize(DataFormat.FLAT_JSON);\n        const schema = this.getSchema();\n\n        return new DataModel(data, schema);\n    }\n}\n\nexport default DataModel;\n","import { DataFormat } from './enums';\n\nexport default {\n    dataFormat: DataFormat.AUTO\n};\n","/**\n * DataFormat Enum defines the format of the input data.\n * Based on the format of the data the respective adapter is loaded.\n *\n * @readonly\n * @enum {string}\n */\nconst DataFormat = {\n    FLAT_JSON: 'FlatJSON',\n    DSV_STR: 'DSVStr',\n    DSV_ARR: 'DSVArr',\n    AUTO: 'Auto'\n};\n\nexport default DataFormat;\n","/**\n * DimensionSubtype enum defines the sub types of the Dimensional Field.\n *\n * @readonly\n * @enum {string}\n */\nconst DimensionSubtype = {\n    CATEGORICAL: 'categorical',\n    TEMPORAL: 'temporal',\n    GEO: 'geo',\n    BINNED: 'binned'\n};\n\nexport default DimensionSubtype;\n","/**\n * FieldType enum defines the high level field based on which visuals are controlled.\n * Measure in a high level is numeric field and Dimension in a high level is string field.\n *\n * @readonly\n * @enum {string}\n */\nconst FieldType = {\n    MEASURE: 'measure',\n    DIMENSION: 'dimension'\n};\n\nexport default FieldType;\n","/**\n * Filtering mode enum defines the filering modes of DataModel.\n *\n * @readonly\n * @enum {string}\n */\nconst FilteringMode = {\n    NORMAL: 'normal',\n    INVERSE: 'inverse',\n    ALL: 'all'\n};\n\nexport default FilteringMode;\n","/**\n * FilteringMode determines if resultant DataModel should be created from selection set or rejection set.\n *\n * The following modes are available\n * - `NORMAL`: Only entries from selection set are included in the resulatant DataModel instance\n * - `INVERSE`: Only entries from rejection set are included in the resulatant DataModel instance\n * - ALL: Both the entries from selection and rejection set are returned in two different DataModel instance\n */\n\nexport { default as DataFormat } from './data-format';\nexport { default as DimensionSubtype } from './dimension-subtype';\nexport { default as MeasureSubtype } from './measure-subtype';\nexport { default as FieldType } from './field-type';\nexport { default as FilteringMode } from './filtering-mode';\n","/**\n * MeasureSubtype enum defines the sub types of the Measure Field.\n *\n * @readonly\n * @enum {string}\n */\nconst MeasureSubtype = {\n    CONTINUOUS: 'continuous'\n};\n\nexport default MeasureSubtype;\n","import DataModel from './datamodel';\nimport {\n  compose,\n  bin,\n  select,\n  project,\n  groupby as groupBy,\n  calculateVariable,\n  sort,\n  crossProduct,\n  difference,\n  naturalJoin,\n  leftOuterJoin,\n  rightOuterJoin,\n  fullOuterJoin,\n  union\n} from './operator';\nimport * as Stats from './stats';\nimport * as enums from './enums';\nimport { DateTimeFormatter } from './utils';\nimport { DataFormat, FilteringMode } from './constants';\nimport InvalidAwareTypes from './invalid-aware-types';\nimport pkg from '../package.json';\n\nDataModel.Operators = {\n    compose,\n    bin,\n    select,\n    project,\n    groupBy,\n    calculateVariable,\n    sort,\n    crossProduct,\n    difference,\n    naturalJoin,\n    leftOuterJoin,\n    rightOuterJoin,\n    fullOuterJoin,\n    union\n};\nDataModel.Stats = Stats;\nObject.assign(DataModel, enums);\nDataModel.DateTimeFormatter = DateTimeFormatter;\nDataModel.DataFormat = DataFormat;\nDataModel.FilteringMode = FilteringMode;\nDataModel.InvalidAwareTypes = InvalidAwareTypes;\nDataModel.version = pkg.version;\n\nexport default DataModel;\n","import { FieldType, DimensionSubtype, MeasureSubtype } from './enums';\nimport {\n    Categorical,\n    Temporal,\n    Binned,\n    Continuous,\n    CategoricalParser,\n    TemporalParser,\n    BinnedParser,\n    ContinuousParser,\n    PartialField\n} from './fields';\n\n/**\n * Creates a field instance according to the provided data and schema.\n *\n * @param {Array} data - The field data array.\n * @param {Object} schema - The field schema object.\n * @return {Field} Returns the newly created field instance.\n */\nfunction createUnitField(data, schema) {\n    data = data || [];\n    let partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.TEMPORAL:\n            partialField = new PartialField(schema.name, data, schema, new TemporalParser(schema));\n            return new Temporal(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.BINNED:\n            partialField = new PartialField(schema.name, data, schema, new BinnedParser());\n            return new Binned(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        }\n    default:\n        partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n        return new Categorical(partialField, `0-${data.length - 1}`);\n    }\n}\n\n\n/**\n * Creates a field instance from partialField and rowDiffset.\n *\n * @param {PartialField} partialField - The corresponding partial field.\n * @param {string} rowDiffset - The data subset config.\n * @return {Field} Returns the newly created field instance.\n */\nexport function createUnitFieldFromPartial(partialField, rowDiffset) {\n    const { schema } = partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            return new Continuous(partialField, rowDiffset);\n        default:\n            return new Continuous(partialField, rowDiffset);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            return new Categorical(partialField, rowDiffset);\n        case DimensionSubtype.TEMPORAL:\n            return new Temporal(partialField, rowDiffset);\n        case DimensionSubtype.BINNED:\n            return new Binned(partialField, rowDiffset);\n        default:\n            return new Categorical(partialField, rowDiffset);\n        }\n    default:\n        return new Categorical(partialField, rowDiffset);\n    }\n}\n\n/**\n * Creates the field instances with input data and schema.\n *\n * @param {Array} dataColumn - The data array for fields.\n * @param {Array} schema - The schema array for fields.\n * @param {Array} headers - The array of header names.\n * @return {Array.<Field>} Returns an array of newly created field instances.\n */\nexport function createFields(dataColumn, schema, headers) {\n    const headersObj = {};\n\n    if (!(headers && headers.length)) {\n        headers = schema.map(item => item.name);\n    }\n\n    headers.forEach((header, i) => {\n        headersObj[header] = i;\n    });\n\n    return schema.map(item => createUnitField(dataColumn[headersObj[item.name]], item));\n}\n","import { FieldType } from './enums';\nimport { getUniqueId } from './utils';\n\nconst fieldStore = {\n    data: {},\n\n    createNamespace (fieldArr, name) {\n        const dataId = name || getUniqueId();\n\n        this.data[dataId] = {\n            name: dataId,\n            fields: fieldArr,\n\n            fieldsObj () {\n                let fieldsObj = this._cachedFieldsObj;\n\n                if (!fieldsObj) {\n                    fieldsObj = this._cachedFieldsObj = {};\n                    this.fields.forEach((field) => {\n                        fieldsObj[field.name()] = field;\n                    });\n                }\n                return fieldsObj;\n            },\n            getMeasure () {\n                let measureFields = this._cachedMeasure;\n\n                if (!measureFields) {\n                    measureFields = this._cachedMeasure = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.MEASURE) {\n                            measureFields[field.name()] = field;\n                        }\n                    });\n                }\n                return measureFields;\n            },\n            getDimension () {\n                let dimensionFields = this._cachedDimension;\n\n                if (!this._cachedDimension) {\n                    dimensionFields = this._cachedDimension = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.DIMENSION) {\n                            dimensionFields[field.name()] = field;\n                        }\n                    });\n                }\n                return dimensionFields;\n            },\n        };\n        return this.data[dataId];\n    },\n};\n\nexport default fieldStore;\n","import Dimension from '../dimension';\n\n/**\n * Represents binned field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Binned extends Dimension {\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the last and first values of bins config array.\n     */\n    calculateDataDomain () {\n        const binsArr = this.partialField.schema.bins;\n        return [binsArr[0], binsArr[binsArr.length - 1]];\n    }\n\n    /**\n     * Returns the bins config provided while creating the field instance.\n     *\n     * @public\n     * @return {Array} Returns the bins array config.\n     */\n    bins () {\n        return this.partialField.schema.bins;\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { DimensionSubtype } from '../../enums';\nimport Dimension from '../dimension';\n/**\n * Represents categorical field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Categorical extends Dimension {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return DimensionSubtype.CATEGORICAL;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n        return domain;\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { MeasureSubtype } from '../../enums';\nimport Measure from '../measure';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents continuous field subtype.\n *\n * @public\n * @class\n * @extends Measure\n */\nexport default class Continuous extends Measure {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return MeasureSubtype.CONTINUOUS;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the min and max values.\n     */\n    calculateDataDomain () {\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum instanceof InvalidAwareTypes) {\n                return;\n            }\n\n            if (datum < min) {\n                min = datum;\n            }\n            if (datum > max) {\n                max = datum;\n            }\n        });\n\n        return [min, max];\n    }\n}\n","import Field from '../field';\n\n/**\n * Represents dimension field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Dimension extends Field {\n    /**\n     * Returns the domain for the dimension field.\n     *\n     * @override\n     * @public\n     * @return {any} Returns the calculated domain.\n     */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @abstract\n     */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n     /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\n\n/**\n * In {@link DataModel}, every tabular data consists of column, a column is stored as field.\n * Field contains all the data for a given column in an array.\n *\n * Each record consists of several fields; the fields of all records form the columns.\n * Examples of fields: name, gender, sex etc.\n *\n * In DataModel, each field can have multiple attributes which describes its data and behaviour.\n * A field can have two types of data: Measure and Dimension.\n *\n * A Dimension Field is the context on which a data is categorized and the measure is the numerical values that\n * quantify the data set.\n * In short a dimension is the lens through which you are looking at your measure data.\n *\n * Refer to {@link Schema} to get info about possible field attributes.\n *\n * @public\n * @class\n */\nexport default class Field {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        this.partialField = partialField;\n        this.rowDiffset = rowDiffset;\n    }\n\n    /**\n     * Generates the field type specific domain.\n     *\n     * @public\n     * @abstract\n     */\n    domain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the the field schema.\n     *\n     * @public\n     * @return {string} Returns the field schema.\n     */\n    schema () {\n        return this.partialField.schema;\n    }\n\n    /**\n     * Returns the name of the field.\n     *\n     * @public\n     * @return {string} Returns the name of the field.\n     */\n    name () {\n        return this.partialField.name;\n    }\n\n    /**\n     * Returns the type of the field.\n     *\n     * @public\n     * @return {string} Returns the type of the field.\n     */\n    type () {\n        return this.partialField.schema.type;\n    }\n\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return this.partialField.schema.subtype;\n    }\n\n    /**\n     * Returns the description of the field.\n     *\n     * @public\n     * @return {string} Returns the description of the field.\n     */\n    description () {\n        return this.partialField.schema.description;\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @public\n     * @return {string} Returns the display name of the field.\n     */\n    displayName () {\n        return this.partialField.schema.displayName || this.partialField.schema.name;\n    }\n\n    /**\n     * Returns the data associated with the field.\n     *\n     * @public\n     * @return {Array} Returns the data.\n     */\n    data () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            data.push(this.partialField.data[i]);\n        });\n        return data;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @abstract\n     */\n    formattedData () {\n        throw new Error('Not yet implemented');\n    }\n}\n","export { default as Field } from './field';\nexport { default as Dimension } from './dimension';\nexport { default as Categorical } from './categorical';\nexport { default as Temporal } from './temporal';\nexport { default as Binned } from './binned';\nexport { default as Measure } from './measure';\nexport { default as Continuous } from './continuous';\nexport { default as FieldParser } from './parsers/field-parser';\nexport { default as CategoricalParser } from './parsers/categorical-parser';\nexport { default as TemporalParser } from './parsers/temporal-parser';\nexport { default as BinnedParser } from './parsers/binned-parser';\nexport { default as ContinuousParser } from './parsers/continuous-parser';\nexport { default as PartialField } from './partial-field';\n","import { formatNumber } from '../../utils';\nimport { defaultReducerName } from '../../operator/group-by-function';\nimport Field from '../field';\n\n/**\n * Represents measure field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Measure extends Field {\n  /**\n   * Returns the domain for the measure field.\n   *\n   * @override\n   * @public\n   * @return {any} Returns the calculated domain.\n   */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n  /**\n   * Returns the unit of the measure field.\n   *\n   * @public\n   * @return {string} Returns unit of the field.\n   */\n    unit () {\n        return this.partialField.schema.unit;\n    }\n\n  /**\n   * Returns the aggregation function name of the measure field.\n   *\n   * @public\n   * @return {string} Returns aggregation function name of the field.\n   */\n    defAggFn () {\n        return this.partialField.schema.defAggFn || defaultReducerName;\n    }\n\n  /**\n   * Returns the number format of the measure field.\n   *\n   * @public\n   * @return {Function} Returns number format of the field.\n   */\n    numberFormat () {\n        const { numberFormat } = this.partialField.schema;\n        return numberFormat instanceof Function ? numberFormat : formatNumber;\n    }\n\n  /**\n   * Calculates the corresponding field domain.\n   *\n   * @public\n   * @abstract\n   */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the binned values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class BinnedParser extends FieldParser {\n  /**\n   * Parses a single binned value of a field and returns the sanitized value.\n   *\n   * @public\n   * @param {string} val - The value of the field.\n   * @return {string} Returns the sanitized value.\n   */\n    parse (val) {\n        const regex = /^\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*-\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*$/;\n        val = String(val);\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let matched = val.match(regex);\n            result = matched ? `${Number.parseFloat(matched[1])}-${Number.parseFloat(matched[2])}`\n                             : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the categorical values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class CategoricalParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the stringified form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the stringified value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            result = String(val).trim();\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the continuous values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class ContinuousParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the number form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the number value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let parsedVal = parseFloat(val, 10);\n            result = Number.isNaN(parsedVal) ? InvalidAwareTypes.NA : parsedVal;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","/**\n * A interface to represent a parser which is responsible to parse the field.\n *\n * @public\n * @interface\n */\nexport default class FieldParser {\n    /**\n     * Parses a single value of a field and return the sanitized form.\n     *\n     * @public\n     * @abstract\n     */\n    parse () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import { DateTimeFormatter } from '../../../utils';\nimport FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the temporal values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class TemporalParser extends FieldParser {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {Object} schema - The schema object for the corresponding field.\n     */\n    constructor (schema) {\n        super();\n        this.schema = schema;\n        this._dtf = new DateTimeFormatter(this.schema.format);\n    }\n\n    /**\n     * Parses a single value of a field and returns the millisecond value.\n     *\n     * @public\n     * @param {string|number} val - The value of the field.\n     * @return {number} Returns the millisecond value.\n     */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let nativeDate = this._dtf.getNativeDate(val);\n            result = nativeDate ? nativeDate.getTime() : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","/**\n * Stores the full data and the metadata of a field. It provides\n * a single source of data from which the future Field\n * instance can get a subset of it with a rowDiffset config.\n *\n * @class\n * @public\n */\nexport default class PartialField {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} name - The name of the field.\n     * @param {Array} data - The data array.\n     * @param {Object} schema - The schema object of the corresponding field.\n     * @param {FieldParser} parser - The parser instance corresponding to that field.\n     */\n    constructor (name, data, schema, parser) {\n        this.name = name;\n        this.schema = schema;\n        this.parser = parser;\n        this.data = this._sanitize(data);\n    }\n\n    /**\n     * Sanitizes the field data.\n     *\n     * @private\n     * @param {Array} data - The actual input data.\n     * @return {Array} Returns the sanitized data.\n     */\n    _sanitize (data) {\n        return data.map(datum => this.parser.parse(datum));\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport Dimension from '../dimension';\nimport { DateTimeFormatter } from '../../utils';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents temporal field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Temporal extends Dimension {\n     /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        super(partialField, rowDiffset);\n\n        this._cachedMinDiff = null;\n    }\n\n     /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be\n        // occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n\n        return domain;\n    }\n\n\n    /**\n     * Calculates the minimum consecutive difference from the associated field data.\n     *\n     * @public\n     * @return {number} Returns the minimum consecutive diff in milliseconds.\n     */\n    minimumConsecutiveDifference () {\n        if (this._cachedMinDiff) {\n            return this._cachedMinDiff;\n        }\n\n        const sortedData = this.data().filter(item => !(item instanceof InvalidAwareTypes)).sort((a, b) => a - b);\n        const arrLn = sortedData.length;\n        let minDiff = Number.POSITIVE_INFINITY;\n        let prevDatum;\n        let nextDatum;\n        let processedCount = 0;\n\n        for (let i = 1; i < arrLn; i++) {\n            prevDatum = sortedData[i - 1];\n            nextDatum = sortedData[i];\n\n            if (nextDatum === prevDatum) {\n                continue;\n            }\n\n            minDiff = Math.min(minDiff, nextDatum - sortedData[i - 1]);\n            processedCount++;\n        }\n\n        if (!processedCount) {\n            minDiff = null;\n        }\n        this._cachedMinDiff = minDiff;\n\n        return this._cachedMinDiff;\n    }\n\n    /**\n     * Returns the format specified in the input schema while creating field.\n     *\n     * @public\n     * @return {string} Returns the datetime format.\n     */\n    format () {\n        return this.partialField.schema.format;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum instanceof InvalidAwareTypes) {\n                data.push(datum);\n            } else {\n                data.push(DateTimeFormatter.formatAs(datum, this.format()));\n            }\n        });\n        return data;\n    }\n}\n\n","import { FieldType, FilteringMode, DimensionSubtype, MeasureSubtype, DataFormat } from './enums';\nimport fieldStore from './field-store';\nimport Value from './value';\nimport {\n    rowDiffsetIterator\n} from './operator';\nimport { DM_DERIVATIVES, LOGICAL_OPERATORS } from './constants';\nimport { createFields, createUnitFieldFromPartial } from './field-creator';\nimport defaultConfig from './default-config';\nimport * as converter from './converter';\nimport { extend2, detectDataFormat } from './utils';\n\n/**\n * Prepares the selection data.\n */\nfunction prepareSelectionData (fields, i) {\n    const resp = {};\n    for (let field of fields) {\n        resp[field.name()] = new Value(field.partialField.data[i], field);\n    }\n    return resp;\n}\n\nexport function prepareJoinData (fields) {\n    const resp = {};\n    Object.keys(fields).forEach((key) => { resp[key] = new Value(fields[key], key); });\n    return resp;\n}\n\nexport const updateFields = ([rowDiffset, colIdentifier], partialFieldspace, fieldStoreName) => {\n    let collID = colIdentifier.length ? colIdentifier.split(',') : [];\n    let partialFieldMap = partialFieldspace.fieldsObj();\n    let newFields = collID.map(coll => createUnitFieldFromPartial(partialFieldMap[coll].partialField, rowDiffset));\n    return fieldStore.createNamespace(newFields, fieldStoreName);\n};\n\nexport const persistDerivation = (model, operation, config = {}, criteriaFn) => {\n    if (operation === DM_DERIVATIVES.COMPOSE) {\n        model._derivation.length = 0;\n        model._derivation.push(...criteriaFn);\n    } else {\n        model._derivation.push({\n            op: operation,\n            meta: config,\n            criteria: criteriaFn\n        });\n    }\n};\n\nexport const persistAncestorDerivation = (sourceDm, newDm) => {\n    newDm._ancestorDerivation.push(...sourceDm._ancestorDerivation, ...sourceDm._derivation);\n};\n\nexport const selectHelper = (rowDiffset, fields, selectFn, config, sourceDm) => {\n    const newRowDiffSet = [];\n    let lastInsertedValue = -1;\n    let { mode } = config;\n    let li;\n    let cachedStore = {};\n    let cloneProvider = () => sourceDm.detachedRoot();\n    const selectorHelperFn = index => selectFn(\n        prepareSelectionData(fields, index),\n        index,\n        cloneProvider,\n        cachedStore\n    );\n\n    let checker;\n    if (mode === FilteringMode.INVERSE) {\n        checker = index => !selectorHelperFn(index);\n    } else {\n        checker = index => selectorHelperFn(index);\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        if (checker(i)) {\n            if (lastInsertedValue !== -1 && i === (lastInsertedValue + 1)) {\n                li = newRowDiffSet.length - 1;\n                newRowDiffSet[li] = `${newRowDiffSet[li].split('-')[0]}-${i}`;\n            } else {\n                newRowDiffSet.push(`${i}`);\n            }\n            lastInsertedValue = i;\n        }\n    });\n    return newRowDiffSet.join(',');\n};\n\nexport const cloneWithAllFields = (model) => {\n    const clonedDm = model.clone(false);\n    const partialFieldspace = model.getPartialFieldspace();\n    clonedDm._colIdentifier = partialFieldspace.fields.map(f => f.name()).join(',');\n\n    // flush out cached namespace values on addition of new fields\n    partialFieldspace._cachedFieldsObj = null;\n    partialFieldspace._cachedDimension = null;\n    partialFieldspace._cachedMeasure = null;\n    clonedDm.__calculateFieldspace().calculateFieldsConfig();\n\n    return clonedDm;\n};\n\nexport const filterPropagationModel = (model, propModels, config = {}) => {\n    const operation = config.operation || LOGICAL_OPERATORS.AND;\n    const filterByMeasure = config.filterByMeasure || false;\n    let fns = [];\n    if (!propModels.length) {\n        fns = [() => false];\n    } else {\n        fns = propModels.map(propModel => ((dataModel) => {\n            const dataObj = dataModel.getData();\n            const schema = dataObj.schema;\n            const fieldsConfig = dataModel.getFieldsConfig();\n            const fieldsSpace = dataModel.getFieldspace().fieldsObj();\n            const data = dataObj.data;\n            const domain = Object.values(fieldsConfig).reduce((acc, v) => {\n                acc[v.def.name] = fieldsSpace[v.def.name].domain();\n                return acc;\n            }, {});\n\n            return (fields) => {\n                const include = !data.length ? false : data.some(row => schema.every((propField) => {\n                    if (!(propField.name in fields)) {\n                        return true;\n                    }\n                    const value = fields[propField.name].valueOf();\n                    if (filterByMeasure && propField.type === FieldType.MEASURE) {\n                        return value >= domain[propField.name][0] && value <= domain[propField.name][1];\n                    }\n\n                    if (propField.type !== FieldType.DIMENSION) {\n                        return true;\n                    }\n                    const idx = fieldsConfig[propField.name].index;\n                    return row[idx] === fields[propField.name].valueOf();\n                }));\n                return include;\n            };\n        })(propModel));\n    }\n\n    let filteredModel;\n    if (operation === LOGICAL_OPERATORS.AND) {\n        filteredModel = cloneWithAllFields(model).select(fields => fns.every(fn => fn(fields)), {\n            saveChild: false,\n            mode: FilteringMode.ALL\n        });\n    } else {\n        filteredModel = cloneWithAllFields(model).select(fields => fns.some(fn => fn(fields)), {\n            mode: FilteringMode.ALL,\n            saveChild: false\n        });\n    }\n\n    return filteredModel;\n};\n\nexport const cloneWithSelect = (sourceDm, selectFn, selectConfig, cloneConfig) => {\n    const cloned = sourceDm.clone(cloneConfig.saveChild);\n    const rowDiffset = selectHelper(\n        cloned._rowDiffset,\n        cloned.getPartialFieldspace().fields,\n        selectFn,\n        selectConfig,\n        sourceDm\n    );\n    cloned._rowDiffset = rowDiffset;\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n\n    persistDerivation(cloned, DM_DERIVATIVES.SELECT, { config: selectConfig }, selectFn);\n    persistAncestorDerivation(sourceDm, cloned);\n\n    return cloned;\n};\n\nexport const cloneWithProject = (sourceDm, projField, config, allFields) => {\n    const cloned = sourceDm.clone(config.saveChild);\n    let projectionSet = projField;\n    if (config.mode === FilteringMode.INVERSE) {\n        projectionSet = allFields.filter(fieldName => projField.indexOf(fieldName) === -1);\n    }\n    // cloned._colIdentifier = sourceDm._colIdentifier.split(',')\n    //                         .filter(coll => projectionSet.indexOf(coll) !== -1).join();\n    cloned._colIdentifier = projectionSet.join(',');\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n\n    persistDerivation(\n        cloned,\n        DM_DERIVATIVES.PROJECT,\n        { projField, config, actualProjField: projectionSet },\n        null\n    );\n    persistAncestorDerivation(sourceDm, cloned);\n\n    return cloned;\n};\n\nexport const sanitizeUnitSchema = (unitSchema) => {\n    // Do deep clone of the unit schema as the user might change it later.\n    unitSchema = extend2({}, unitSchema);\n    if (!unitSchema.type) {\n        unitSchema.type = FieldType.DIMENSION;\n    }\n\n    if (!unitSchema.subtype) {\n        switch (unitSchema.type) {\n        case FieldType.MEASURE:\n            unitSchema.subtype = MeasureSubtype.CONTINUOUS;\n            break;\n        default:\n        case FieldType.DIMENSION:\n            unitSchema.subtype = DimensionSubtype.CATEGORICAL;\n            break;\n        }\n    }\n\n    return unitSchema;\n};\n\nexport const sanitizeSchema = schema => schema.map(unitSchema => sanitizeUnitSchema(unitSchema));\n\nexport const updateData = (relation, data, schema, options) => {\n    schema = sanitizeSchema(schema);\n    options = Object.assign(Object.assign({}, defaultConfig), options);\n    const converterFn = converter[options.dataFormat];\n\n    if (!(converterFn && typeof converterFn === 'function')) {\n        throw new Error(`No converter function found for ${options.dataFormat} format`);\n    }\n\n    const [header, formattedData] = converterFn(data, options);\n    const fieldArr = createFields(formattedData, schema, header);\n\n    // This will create a new fieldStore with the fields\n    const nameSpace = fieldStore.createNamespace(fieldArr, options.name);\n    relation._partialFieldspace = nameSpace;\n    // If data is provided create the default colIdentifier and rowDiffset\n    relation._rowDiffset = formattedData.length && formattedData[0].length ? `0-${formattedData[0].length - 1}` : '';\n    relation._colIdentifier = (schema.map(_ => _.name)).join();\n    relation._dataFormat = options.dataFormat === DataFormat.AUTO ? detectDataFormat(data) : options.dataFormat;\n    return relation;\n};\n\nexport const fieldInSchema = (schema, field) => {\n    let i = 0;\n\n    for (; i < schema.length; ++i) {\n        if (field === schema[i].name) {\n            return {\n                type: schema[i].subtype || schema[i].type,\n                index: i\n            };\n        }\n    }\n    return null;\n};\n\n\nexport const getDerivationArguments = (derivation) => {\n    let params = [];\n    let operation;\n    operation = derivation.op;\n    switch (operation) {\n    case DM_DERIVATIVES.SELECT:\n        params = [derivation.criteria];\n        break;\n    case DM_DERIVATIVES.PROJECT:\n        params = [derivation.meta.actualProjField];\n        break;\n    case DM_DERIVATIVES.GROUPBY:\n        operation = 'groupBy';\n        params = [derivation.meta.groupByString.split(','), derivation.criteria];\n        break;\n    default:\n        operation = null;\n    }\n\n    return {\n        operation,\n        params\n    };\n};\n\nconst applyExistingOperationOnModel = (propModel, dataModel) => {\n    const derivations = dataModel.getDerivations();\n    let selectionModel = propModel[0];\n    let rejectionModel = propModel[1];\n\n    derivations.forEach((derivation) => {\n        if (!derivation) {\n            return;\n        }\n\n        const { operation, params } = getDerivationArguments(derivation);\n        if (operation) {\n            selectionModel = selectionModel[operation](...params, {\n                saveChild: false\n            });\n            rejectionModel = rejectionModel[operation](...params, {\n                saveChild: false\n            });\n        }\n    });\n\n    return [selectionModel, rejectionModel];\n};\n\nconst getFilteredModel = (propModel, path) => {\n    for (let i = 0, len = path.length; i < len; i++) {\n        const model = path[i];\n        propModel = applyExistingOperationOnModel(propModel, model);\n    }\n    return propModel;\n};\n\nconst propagateIdentifiers = (dataModel, propModel, config = {}, propModelInf = {}) => {\n    const nonTraversingModel = propModelInf.nonTraversingModel;\n    const excludeModels = propModelInf.excludeModels || [];\n\n    if (dataModel === nonTraversingModel) {\n        return;\n    }\n\n    const propagate = excludeModels.length ? excludeModels.indexOf(dataModel) === -1 : true;\n\n    propagate && dataModel.handlePropagation(propModel, config);\n\n    const children = dataModel._children;\n    children.forEach((child) => {\n        let [selectionModel, rejectionModel] = applyExistingOperationOnModel(propModel, child);\n        propagateIdentifiers(child, [selectionModel, rejectionModel], config, propModelInf);\n    });\n};\n\nexport const getRootGroupByModel = (model) => {\n    while (model._parent && model._derivation.find(d => d.op !== DM_DERIVATIVES.GROUPBY)) {\n        model = model._parent;\n    }\n    return model;\n};\n\nexport const getRootDataModel = (model) => {\n    while (model._parent) {\n        model = model._parent;\n    }\n    return model;\n};\n\nexport const getPathToRootModel = (model, path = []) => {\n    while (model._parent) {\n        path.push(model);\n        model = model._parent;\n    }\n    return path;\n};\n\nexport const propagateToAllDataModels = (identifiers, rootModels, propagationInf, config) => {\n    let criteria;\n    let propModel;\n    const { propagationNameSpace, propagateToSource } = propagationInf;\n    const propagationSourceId = propagationInf.sourceId;\n    const propagateInterpolatedValues = config.propagateInterpolatedValues;\n    const filterFn = (entry) => {\n        const filter = config.filterFn || (() => true);\n        return filter(entry, config);\n    };\n\n    let criterias = [];\n\n    if (identifiers === null && config.persistent !== true) {\n        criterias = [{\n            criteria: []\n        }];\n    } else {\n        let actionCriterias = Object.values(propagationNameSpace.mutableActions);\n        if (propagateToSource !== false) {\n            actionCriterias = actionCriterias.filter(d => d.config.sourceId !== propagationSourceId);\n        }\n\n        const filteredCriteria = actionCriterias.filter(filterFn).map(action => action.config.criteria);\n\n        const excludeModels = [];\n\n        if (propagateToSource !== false) {\n            const sourceActionCriterias = Object.values(propagationNameSpace.mutableActions);\n\n            sourceActionCriterias.forEach((actionInf) => {\n                const actionConf = actionInf.config;\n                if (actionConf.applyOnSource === false && actionConf.action === config.action &&\n                        actionConf.sourceId !== propagationSourceId) {\n                    excludeModels.push(actionInf.model);\n                    criteria = sourceActionCriterias.filter(d => d !== actionInf).map(d => d.config.criteria);\n                    criteria.length && criterias.push({\n                        criteria,\n                        models: actionInf.model,\n                        path: getPathToRootModel(actionInf.model)\n                    });\n                }\n            });\n        }\n\n\n        criteria = [].concat(...[...filteredCriteria, identifiers]).filter(d => d !== null);\n        criterias.push({\n            criteria,\n            excludeModels: [...excludeModels, ...config.excludeModels || []]\n        });\n    }\n\n    const rootModel = rootModels.model;\n\n    const propConfig = Object.assign({\n        sourceIdentifiers: identifiers,\n        propagationSourceId\n    }, config);\n\n    const rootGroupByModel = rootModels.groupByModel;\n    if (propagateInterpolatedValues && rootGroupByModel) {\n        propModel = filterPropagationModel(rootGroupByModel, criteria, {\n            filterByMeasure: propagateInterpolatedValues\n        });\n        propagateIdentifiers(rootGroupByModel, propModel, propConfig);\n    }\n\n    criterias.forEach((inf) => {\n        const propagationModel = filterPropagationModel(rootModel, inf.criteria);\n        const path = inf.path;\n\n        if (path) {\n            const filteredModel = getFilteredModel(propagationModel, path.reverse());\n            inf.models.handlePropagation(filteredModel, propConfig);\n        } else {\n            propagateIdentifiers(rootModel, propagationModel, propConfig, {\n                excludeModels: inf.excludeModels,\n                nonTraversingModel: propagateInterpolatedValues && rootGroupByModel\n            });\n        }\n    });\n};\n\nexport const propagateImmutableActions = (propagationNameSpace, rootModels, propagationInf) => {\n    const immutableActions = propagationNameSpace.immutableActions;\n\n    for (const action in immutableActions) {\n        const actionInf = immutableActions[action];\n        const actionConf = actionInf.config;\n        const propagationSourceId = propagationInf.config.sourceId;\n        const filterImmutableAction = propagationInf.propConfig.filterImmutableAction ?\n            propagationInf.propConfig.filterImmutableAction(actionConf, propagationInf.config) : true;\n        if (actionConf.sourceId !== propagationSourceId && filterImmutableAction) {\n            const criteriaModel = actionConf.criteria;\n            propagateToAllDataModels(criteriaModel, rootModels, {\n                propagationNameSpace,\n                propagateToSource: false,\n                sourceId: propagationSourceId\n            }, actionConf);\n        }\n    }\n};\n\nexport const addToPropNamespace = (propagationNameSpace, config = {}, model) => {\n    let sourceNamespace;\n    const isMutableAction = config.isMutableAction;\n    const criteria = config.criteria;\n    const key = `${config.action}-${config.sourceId}`;\n\n    if (isMutableAction) {\n        sourceNamespace = propagationNameSpace.mutableActions;\n    } else {\n        sourceNamespace = propagationNameSpace.immutableActions;\n    }\n\n    if (criteria === null) {\n        delete sourceNamespace[key];\n    } else {\n        sourceNamespace[key] = {\n            model,\n            config\n        };\n    }\n\n    return this;\n};\n","const DataModel = require('./export');\n\nmodule.exports = DataModel.default ? DataModel.default : DataModel;\n","/**\n * A parser to parser null, undefined, invalid and NIL values.\n *\n * @public\n * @class\n */\nclass InvalidAwareTypes {\n    /**\n     * Static method which gets/sets the invalid value registry.\n     *\n     * @public\n     * @param {Object} config - The custom configuration supplied by user.\n     * @return {Object} Returns the invalid values registry.\n     */\n    static invalidAwareVals (config) {\n        if (!config) {\n            return InvalidAwareTypes._invalidAwareValsMap;\n        }\n        return Object.assign(InvalidAwareTypes._invalidAwareValsMap, config);\n    }\n\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} value - The value of the invalid data type.\n     */\n    constructor (value) {\n        this._value = value;\n    }\n\n    /**\n     * Returns the current value of the instance.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    value () {\n        return this._value;\n    }\n\n    /**\n     * Returns the current value of the instance in string format.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    toString () {\n        return String(this._value);\n    }\n\n    static isInvalid(val) {\n        return (val instanceof InvalidAwareTypes) || !!InvalidAwareTypes.invalidAwareVals()[val];\n    }\n\n    static getInvalidType(val) {\n        return val instanceof InvalidAwareTypes ? val : InvalidAwareTypes.invalidAwareVals()[val];\n    }\n}\n\n/**\n * Enums for Invalid types.\n */\nInvalidAwareTypes.NULL = new InvalidAwareTypes('null');\nInvalidAwareTypes.NA = new InvalidAwareTypes('na');\nInvalidAwareTypes.NIL = new InvalidAwareTypes('nil');\n\n/**\n * Default Registry for mapping the invalid values.\n *\n * @private\n */\nInvalidAwareTypes._invalidAwareValsMap = {\n    invalid: InvalidAwareTypes.NA,\n    nil: InvalidAwareTypes.NIL,\n    null: InvalidAwareTypes.NULL,\n    undefined: InvalidAwareTypes.NA\n};\n\nexport default InvalidAwareTypes;\n","import { rowDiffsetIterator } from './row-diffset-iterator';\nimport InvalidAwareTypes from '../invalid-aware-types';\n\nconst generateBuckets = (binSize, start, end) => {\n    const buckets = [];\n    let next = start;\n\n    while (next < end) {\n        buckets.push(next);\n        next += binSize;\n    }\n    buckets.push(next);\n\n    return buckets;\n};\n\nconst findBucketRange = (bucketRanges, value) => {\n    let leftIdx = 0;\n    let rightIdx = bucketRanges.length - 1;\n    let midIdx;\n    let range;\n\n    // Here use binary search as the bucketRanges is a sorted array\n    while (leftIdx <= rightIdx) {\n        midIdx = leftIdx + Math.floor((rightIdx - leftIdx) / 2);\n        range = bucketRanges[midIdx];\n\n        if (value >= range.start && value < range.end) {\n            return range;\n        } else if (value >= range.end) {\n            leftIdx = midIdx + 1;\n        } else if (value < range.start) {\n            rightIdx = midIdx - 1;\n        }\n    }\n\n    return null;\n};\n\n /**\n  * Creates the bin data from input measure field and supplied configs.\n  *\n  * @param {Measure} measureField - The Measure field instance.\n  * @param {string} rowDiffset - The datamodel rowDiffset values.\n  * @param {Object} config - The config object.\n  * @return {Object} Returns the binned data and the corresponding bins.\n  */\nexport function createBinnedFieldData (measureField, rowDiffset, config) {\n    let { buckets, binsCount, binSize, start, end } = config;\n    const [dMin, dMax] = measureField.domain();\n\n    if (!buckets) {\n        start = (start !== 0 && (!start || start > dMin)) ? dMin : start;\n        end = (end !== 0 && (!end || end < dMax)) ? (dMax + 1) : end;\n\n        if (binsCount) {\n            binSize = Math.ceil(Math.abs(end - start) / binsCount);\n        }\n\n        buckets = generateBuckets(binSize, start, end);\n    }\n\n    if (buckets[0] > dMin) {\n        buckets.unshift(dMin);\n    }\n    if (buckets[buckets.length - 1] <= dMax) {\n        buckets.push(dMax + 1);\n    }\n\n    const bucketRanges = [];\n    for (let i = 0; i < buckets.length - 1; i++) {\n        bucketRanges.push({\n            start: buckets[i],\n            end: buckets[i + 1]\n        });\n    }\n\n    const binnedData = [];\n    rowDiffsetIterator(rowDiffset, (i) => {\n        const datum = measureField.partialField.data[i];\n        if (datum instanceof InvalidAwareTypes) {\n            binnedData.push(datum);\n            return;\n        }\n\n        const range = findBucketRange(bucketRanges, datum);\n        binnedData.push(`${range.start}-${range.end}`);\n    });\n\n    return { binnedData, bins: buckets };\n}\n","import { persistDerivation, persistAncestorDerivation } from '../helper';\nimport { DM_DERIVATIVES } from '../constants';\n\n/**\n * DataModel's opearators are exposed as composable functional operators as well as chainable operators. Chainable\n * operators are called on the instances of {@link Datamodel} and {@link Relation} class.\n *\n * Those same operators can be used as composable operators from `DataModel.Operators` namespace.\n *\n * All these operators have similar behaviour. All these operators when called with the argument returns a function\n * which expects a DataModel instance.\n *\n * @public\n * @module Operators\n * @namespace DataModel\n */\n\n/**\n * This is functional version of selection operator. {@link link_to_selection | Selection} is a row filtering operation.\n * It takes {@link SelectionPredicate | predicate} for filtering criteria and returns a function.\n * The returned function is called with the DataModel instance on which the action needs to be performed.\n *\n * {@link SelectionPredicate} is a function which returns a boolean value. For selection opearation the selection\n * function is called for each row of DataModel instance with the current row passed as argument.\n *\n * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n * of rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * [Warn] Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * [Error] `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @example\n * const select = DataModel.Operators.select;\n * usaCarsFn = select(fields => fields.Origin.value === 'USA');\n * usaCarsDm = usaCarsFn(dm);\n * console.log(usaCarsDm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {SelectionPredicate} selectFn - Predicate funciton which is called for each row with the current row\n *      ```\n *          function (row, i)  { ... }\n *      ```\n * @param {Object} [config] - The configuration object to control the inclusion exclusion of a row in resultant\n *      DataModel instance\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const select = (...args) => dm => dm.select(...args);\n\n/**\n * This is functional version of projection operator. {@link link_to_projection | Projection} is a column filtering\n * operation.It expects list of fields name and either include those or exclude those based on {@link FilteringMode} on\n * the  resultant variable.It returns a function which is called with the DataModel instance on which the action needs\n * to be performed.\n *\n * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n * @param {Object} [config] - An optional config to control the creation of new DataModel\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const project = (...args) => dm => dm.project(...args);\n\n/**\n * This is functional version of binnig operator. Binning happens on a measure field based on a binning configuration.\n * Binning in DataModel does not aggregate the number of rows present in DataModel instance after binning, it just adds\n * a new field with the binned value. Refer binning {@link example_of_binning | example} to have a intuition of what\n * binning is and the use case.\n *\n * Binning can be configured by\n * - providing custom bin configuration with non uniform buckets\n * - providing bin count\n * - providing each bin size\n *\n * When custom buckets are provided as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const buckets = {\n *      start: 30\n *      stops: [80, 100, 110]\n *  };\n *  const config = { buckets, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(dm);\n *\n * @text\n * When `binCount` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binCount: 5, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @text\n * When `binSize` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binSize: 200, name: 'binnedHorsepower' }\n *  const binnedDm = dataModel.bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {String} name Name of measure which will be used to create bin\n * @param {Object} config Config required for bin creation\n * @param {Array.<Number>} config.bucketObj.stops Defination of bucket ranges. Two subsequent number from arrays\n *      are picked and a range is created. The first number from range is inclusive and the second number from range\n *      is exclusive.\n * @param {Number} [config.bucketObj.startAt] Force the start of the bin from a particular number.\n *      If not mentioned, the start of the bin or the lower domain of the data if stops is not mentioned, else its\n *      the first value of the stop.\n * @param {Number} config.binSize Bucket size for each bin\n * @param {Number} config.binCount Number of bins which will be created\n * @param {String} config.name Name of the new binned field to be created\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const bin = (...args) => dm => dm.bin(...args);\n\n/**\n * This is functional version of `groupBy` operator.Groups the data using particular dimensions and by reducing\n * measures. It expects a list of dimensions using which it projects the datamodel and perform aggregations to reduce\n * the duplicate tuples. Refer this {@link link_to_one_example_with_group_by | document} to know the intuition behind\n * groupBy.\n *\n * DataModel by default provides definition of few {@link reducer | Reducers}.\n * {@link ReducerStore | User defined reducers} can also be registered.\n *\n * This is the chained implementation of `groupBy`.\n * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n *\n * @example\n * const groupBy = DataModel.Operators.groupBy;\n * const groupedFn = groupBy(['Year'], { horsepower: 'max' } );\n * groupedDM = groupByFn(dm);\n *\n * @public\n *\n * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n *      schema of the variable.\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const groupBy = (...args) => dm => dm.groupBy(...args);\n\n/**\n * Enables composing operators to run multiple operations and save group of operataion as named opration on a DataModel.\n * The resulting DataModel will be the result of all the operation provided. The operations provided will be executed in\n * a serial manner ie. result of one operation will be the input for the next operations (like pipe operator in unix).\n *\n * Suported operations in compose are\n * - `select`\n * - `project`\n * - `groupBy`\n * - `bin`\n * - `compose`\n *\n * @example\n * const compose = DataModel.Operators.compose;\n * const select = DataModel.Operators.select;\n * const project = DataModel.Operators.project;\n *\n * let composedFn = compose(\n *    select(fields => fields.netprofit.value <= 15),\n *    project(['netprofit', 'netsales']));\n *\n * const dataModel = new DataModel(data1, schema1);\n *\n * let composedDm = composedFn(dataModel);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<Operators>} operators: An array of operation that will be applied on the\n * datatable.\n *\n * @returns {DataModel} Instance of resultant DataModel\n */\nexport const compose = (...operations) =>\n    (dm, config = { saveChild: true }) => {\n        let currentDM = dm;\n        let firstChild;\n        const derivations = [];\n\n        operations.forEach((operation) => {\n            currentDM = operation(currentDM);\n            derivations.push(...currentDM._derivation);\n            if (!firstChild) {\n                firstChild = currentDM;\n            }\n        });\n\n        if (firstChild && firstChild !== currentDM) {\n            firstChild.dispose();\n        }\n\n        persistDerivation(currentDM, DM_DERIVATIVES.COMPOSE, null, derivations);\n        // reset all ancestorDerivation saved in-between compose\n        currentDM._ancestorDerivation = [];\n        persistAncestorDerivation(dm, currentDM);\n\n        if (config.saveChild) {\n            currentDM.setParent(dm);\n        } else {\n            currentDM.setParent(null);\n        }\n\n        return currentDM;\n    };\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { getCommonSchema } from './get-common-schema';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { JOINS } from '../constants';\nimport { prepareJoinData } from '../helper';\n/**\n * Default filter function for crossProduct.\n *\n * @return {boolean} Always returns true.\n */\nfunction defaultFilterFn() { return true; }\n\n/**\n * Implementation of cross product operation between two DataModel instances.\n * It internally creates the data and schema for the new DataModel.\n *\n * @param {DataModel} dataModel1 - The left DataModel instance.\n * @param {DataModel} dataModel2 - The right DataModel instance.\n * @param {Function} filterFn - The filter function which is used to filter the tuples.\n * @param {boolean} [replaceCommonSchema=false] - The flag if the common name schema should be there.\n * @return {DataModel} Returns The newly created DataModel instance from the crossProduct operation.\n */\nexport function crossProduct (dm1, dm2, filterFn, replaceCommonSchema = false, jointype = JOINS.CROSS) {\n    const schema = [];\n    const data = [];\n    const applicableFilterFn = filterFn || defaultFilterFn;\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreName = dm1FieldStore.name;\n    const dm2FieldStoreName = dm2FieldStore.name;\n    const name = `${dm1FieldStore.name}.${dm2FieldStore.name}`;\n    const commonSchemaList = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    if (dm1FieldStoreName === dm2FieldStoreName) {\n        throw new Error('DataModels must have different alias names');\n    }\n    // Here prepare the schema\n    dm1FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1 && !replaceCommonSchema) {\n            tmpSchema.name = `${dm1FieldStore.name}.${tmpSchema.name}`;\n        }\n        schema.push(tmpSchema);\n    });\n    dm2FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1) {\n            if (!replaceCommonSchema) {\n                tmpSchema.name = `${dm2FieldStore.name}.${tmpSchema.name}`;\n                schema.push(tmpSchema);\n            }\n        } else {\n            schema.push(tmpSchema);\n        }\n    });\n\n    // Here prepare Data\n    rowDiffsetIterator(dm1._rowDiffset, (i) => {\n        let rowAdded = false;\n        let rowPosition;\n        rowDiffsetIterator(dm2._rowDiffset, (ii) => {\n            const tuple = [];\n            const userArg = {};\n            userArg[dm1FieldStoreName] = {};\n            userArg[dm2FieldStoreName] = {};\n            dm1FieldStore.fields.forEach((field) => {\n                tuple.push(field.partialField.data[i]);\n                userArg[dm1FieldStoreName][field.name()] = field.partialField.data[i];\n            });\n            dm2FieldStore.fields.forEach((field) => {\n                if (!(commonSchemaList.indexOf(field.schema().name) !== -1 && replaceCommonSchema)) {\n                    tuple.push(field.partialField.data[ii]);\n                }\n                userArg[dm2FieldStoreName][field.name()] = field.partialField.data[ii];\n            });\n\n            let cachedStore = {};\n            let cloneProvider1 = () => dm1.detachedRoot();\n            let cloneProvider2 = () => dm2.detachedRoot();\n\n            const dm1Fields = prepareJoinData(userArg[dm1FieldStoreName]);\n            const dm2Fields = prepareJoinData(userArg[dm2FieldStoreName]);\n            if (applicableFilterFn(dm1Fields, dm2Fields, cloneProvider1, cloneProvider2, cachedStore)) {\n                const tupleObj = {};\n                tuple.forEach((cellVal, iii) => {\n                    tupleObj[schema[iii].name] = cellVal;\n                });\n                if (rowAdded && JOINS.CROSS !== jointype) {\n                    data[rowPosition] = tupleObj;\n                }\n                else {\n                    data.push(tupleObj);\n                    rowAdded = true;\n                    rowPosition = i;\n                }\n            } else if ((jointype === JOINS.LEFTOUTER || jointype === JOINS.RIGHTOUTER) && !rowAdded) {\n                const tupleObj = {};\n                let len = dm1FieldStore.fields.length - 1;\n                tuple.forEach((cellVal, iii) => {\n                    if (iii <= len) {\n                        tupleObj[schema[iii].name] = cellVal;\n                    }\n                    else {\n                        tupleObj[schema[iii].name] = null;\n                    }\n                });\n                rowAdded = true;\n                rowPosition = i;\n                data.push(tupleObj);\n            }\n        });\n    });\n\n    return new DataModel(data, schema, { name });\n}\n","import { DimensionSubtype, MeasureSubtype } from '../enums';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { mergeSort } from './merge-sort';\nimport { fieldInSchema } from '../helper';\nimport { isCallable, isArray, } from '../utils';\n/**\n * Generates the sorting functions to sort the data of a DataModel instance\n * according to the input data type.\n *\n * @param {string} dataType - The data type e.g. 'measure', 'datetime' etc.\n * @param {string} sortType - The sorting order i.e. 'asc' or 'desc'.\n * @param {integer} index - The index of the data which will be sorted.\n * @return {Function} Returns the the sorting function.\n */\nfunction getSortFn (dataType, sortType, index) {\n    let retFunc;\n    switch (dataType) {\n    case MeasureSubtype.CONTINUOUS:\n    case DimensionSubtype.TEMPORAL:\n        if (sortType === 'desc') {\n            retFunc = (a, b) => b[index] - a[index];\n        } else {\n            retFunc = (a, b) => a[index] - b[index];\n        }\n        break;\n    default:\n        retFunc = (a, b) => {\n            const a1 = `${a[index]}`;\n            const b1 = `${b[index]}`;\n            if (a1 < b1) {\n                return sortType === 'desc' ? 1 : -1;\n            }\n            if (a1 > b1) {\n                return sortType === 'desc' ? -1 : 1;\n            }\n            return 0;\n        };\n    }\n    return retFunc;\n}\n\n/**\n * Groups the data according to the specified target field.\n *\n * @param {Array} data - The input data array.\n * @param {number} fieldIndex - The target field index within schema array.\n * @return {Array} Returns an array containing the grouped data.\n */\nfunction groupData(data, fieldIndex) {\n    const hashMap = new Map();\n    const groupedData = [];\n\n    data.forEach((datum) => {\n        const fieldVal = datum[fieldIndex];\n        if (hashMap.has(fieldVal)) {\n            groupedData[hashMap.get(fieldVal)][1].push(datum);\n        } else {\n            groupedData.push([fieldVal, [datum]]);\n            hashMap.set(fieldVal, groupedData.length - 1);\n        }\n    });\n\n    return groupedData;\n}\n\n/**\n * Creates the argument value used for sorting function when sort is done\n * with another fields.\n *\n * @param {Array} groupedDatum - The grouped datum for a single dimension field value.\n * @param {Array} targetFields - An array of the sorting fields.\n * @param {Array} targetFieldDetails - An array of the sorting field details in schema.\n * @return {Object} Returns an object containing the value of sorting fields and the target field name.\n */\nfunction createSortingFnArg(groupedDatum, targetFields, targetFieldDetails) {\n    const arg = {\n        label: groupedDatum[0]\n    };\n\n    targetFields.reduce((acc, next, idx) => {\n        acc[next] = groupedDatum[1].map(datum => datum[targetFieldDetails[idx].index]);\n        return acc;\n    }, arg);\n\n    return arg;\n}\n\n/**\n * Sorts the data before return in dataBuilder.\n *\n * @param {Object} dataObj - An object containing the data and schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n */\nfunction sortData(dataObj, sortingDetails) {\n    const { data, schema } = dataObj;\n    let fieldName;\n    let sortMeta;\n    let fDetails;\n    let i = sortingDetails.length - 1;\n\n    for (; i >= 0; i--) {\n        fieldName = sortingDetails[i][0];\n        sortMeta = sortingDetails[i][1];\n        fDetails = fieldInSchema(schema, fieldName);\n\n        if (!fDetails) {\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n\n        if (isCallable(sortMeta)) {\n            // eslint-disable-next-line no-loop-func\n            mergeSort(data, (a, b) => sortMeta(a[fDetails.index], b[fDetails.index]));\n        } else if (isArray(sortMeta)) {\n            const groupedData = groupData(data, fDetails.index);\n            const sortingFn = sortMeta[sortMeta.length - 1];\n            const targetFields = sortMeta.slice(0, sortMeta.length - 1);\n            const targetFieldDetails = targetFields.map(f => fieldInSchema(schema, f));\n\n            groupedData.forEach((groupedDatum) => {\n                groupedDatum.push(createSortingFnArg(groupedDatum, targetFields, targetFieldDetails));\n            });\n\n            mergeSort(groupedData, (a, b) => {\n                const m = a[2];\n                const n = b[2];\n                return sortingFn(m, n);\n            });\n\n            // Empty the array\n            data.length = 0;\n            groupedData.forEach((datum) => {\n                data.push(...datum[1]);\n            });\n        } else {\n            sortMeta = String(sortMeta).toLowerCase() === 'desc' ? 'desc' : 'asc';\n            mergeSort(data, getSortFn(fDetails.type, sortMeta, fDetails.index));\n        }\n    }\n\n    dataObj.uids = [];\n    data.forEach((value) => {\n        dataObj.uids.push(value.pop());\n    });\n}\n\n\n/**\n * Builds the actual data array.\n *\n * @param {Array} fieldStore - An array of field.\n * @param {string} rowDiffset - A string consisting of which rows to be included eg. '0-2,4,6';\n * @param {string} colIdentifier - A string consisting of the details of which column\n * to be included eg 'date,sales,profit';\n * @param {Object} sortingDetails - An object containing the sorting details of the DataModel instance.\n * @param {Object} options - The options required to create the type of the data.\n * @return {Object} Returns an object containing the multidimensional array and the relative schema.\n */\nexport function dataBuilder (fieldStore, rowDiffset, colIdentifier, sortingDetails, options) {\n    const defOptions = {\n        addUid: false,\n        columnWise: false\n    };\n    options = Object.assign({}, defOptions, options);\n\n    const retObj = {\n        schema: [],\n        data: [],\n        uids: []\n    };\n    const addUid = options.addUid;\n    const reqSorting = sortingDetails && sortingDetails.length > 0;\n    // It stores the fields according to the colIdentifier argument\n    const tmpDataArr = [];\n    // Stores the fields according to the colIdentifier argument\n    const colIArr = colIdentifier.split(',');\n\n    colIArr.forEach((colName) => {\n        for (let i = 0; i < fieldStore.length; i += 1) {\n            if (fieldStore[i].name() === colName) {\n                tmpDataArr.push(fieldStore[i]);\n                break;\n            }\n        }\n    });\n\n    // Inserts the schema to the schema object\n    tmpDataArr.forEach((field) => {\n        /** @todo Need to use extend2 here otherwise user can overwrite the schema. */\n        retObj.schema.push(field.schema());\n    });\n\n    if (addUid) {\n        retObj.schema.push({\n            name: 'uid',\n            type: 'identifier'\n        });\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        retObj.data.push([]);\n        const insertInd = retObj.data.length - 1;\n        let start = 0;\n        tmpDataArr.forEach((field, ii) => {\n            retObj.data[insertInd][ii + start] = field.partialField.data[i];\n        });\n        if (addUid) {\n            retObj.data[insertInd][tmpDataArr.length] = i;\n        }\n        // Creates an array of unique identifiers for each row\n        retObj.uids.push(i);\n\n        // If sorting needed then there is the need to expose the index\n        // mapping from the old index to its new index\n        if (reqSorting) { retObj.data[insertInd].push(i); }\n    });\n\n    // Handles the sort functionality\n    if (reqSorting) {\n        sortData(retObj, sortingDetails);\n    }\n\n    if (options.columnWise) {\n        const tmpData = Array(...Array(retObj.schema.length)).map(() => []);\n        retObj.data.forEach((tuple) => {\n            tuple.forEach((data, i) => {\n                tmpData[i].push(data);\n            });\n        });\n        retObj.data = tmpData;\n    }\n\n    return retObj;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n\n/**\n * Performs the union operation between two dm instances.\n *\n * @todo Fix the conflicts between union and difference terminology here.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function difference (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n   // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     * @param {boolean} addData - If true only tuple will be added to the data.\n     */\n    function prepareDataHelper(dm, fieldsObj, addData) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                if (addData) { data.push(tuple); }\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj, false);\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj, true);\n\n    return new DataModel(data, schema, { name });\n}\n\n","/**\n * The helper function that returns an array of common schema\n * from two fieldStore instances.\n *\n * @param {FieldStore} fs1 - The first FieldStore instance.\n * @param {FieldStore} fs2 - The second FieldStore instance.\n * @return {Array} An array containing the common schema.\n */\nexport function getCommonSchema (fs1, fs2) {\n    const retArr = [];\n    const fs1Arr = [];\n    fs1.fields.forEach((field) => {\n        fs1Arr.push(field.schema().name);\n    });\n    fs2.fields.forEach((field) => {\n        if (fs1Arr.indexOf(field.schema().name) !== -1) {\n            retArr.push(field.schema().name);\n        }\n    });\n    return retArr;\n}\n","import { isArray } from '../utils';\nimport InvalidAwareTypes from '../invalid-aware-types';\n\n\nfunction getFilteredValues(arr) {\n    return arr.filter(item => !(item instanceof InvalidAwareTypes));\n}\n/**\n * Reducer function that returns the sum of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the sum of the array.\n */\nfunction sum (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const filteredNumber = getFilteredValues(arr);\n        const totalSum = filteredNumber.length ?\n                            filteredNumber.reduce((acc, curr) => acc + curr, 0)\n                            : InvalidAwareTypes.NULL;\n        return totalSum;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that returns the average of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the mean value of the array.\n */\nfunction avg (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const totalSum = sum(arr);\n        const len = arr.length || 1;\n        return (Number.isNaN(totalSum) || totalSum instanceof InvalidAwareTypes) ?\n                 InvalidAwareTypes.NULL : totalSum / len;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the min value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the minimum value of the array.\n */\nfunction min (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.min(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the max value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the maximum value of the array.\n */\nfunction max (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.max(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the first value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the first value of the array.\n */\nfunction first (arr) {\n    return arr[0];\n}\n\n/**\n * Reducer function that gives the last value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the last value of the array.\n */\nfunction last (arr) {\n    return arr[arr.length - 1];\n}\n\n/**\n * Reducer function that gives the count value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the length of the array.\n */\nfunction count (arr) {\n    if (isArray(arr)) {\n        return arr.length;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Calculates the variance of the input array.\n *\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the variance of the input array.\n */\nfunction variance (arr) {\n    let mean = avg(arr);\n    return avg(arr.map(num => (num - mean) ** 2));\n}\n\n/**\n * Calculates the square root of the variance of the input array.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the square root of the variance.\n */\nfunction std (arr) {\n    return Math.sqrt(variance(arr));\n}\n\n\nconst fnList = {\n    sum,\n    avg,\n    min,\n    max,\n    first,\n    last,\n    count,\n    std\n};\n\nconst defaultReducerName = 'sum';\n\nexport {\n    defaultReducerName,\n    sum as defReducer,\n    fnList,\n};\n","import { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport DataModel from '../export';\nimport reducerStore from '../utils/reducer-store';\nimport { defaultReducerName } from './group-by-function';\nimport { FieldType } from '../enums';\n\n/**\n * This function sanitize the user given field and return a common Array structure field\n * list\n * @param  {DataModel} dataModel the dataModel operating on\n * @param  {Array} fieldArr  user input of field Array\n * @return {Array}           arrays of field name\n */\nfunction getFieldArr (dataModel, fieldArr) {\n    const retArr = [];\n    const fieldStore = dataModel.getFieldspace();\n    const dimensions = fieldStore.getDimension();\n\n    Object.entries(dimensions).forEach(([key]) => {\n        if (fieldArr && fieldArr.length) {\n            if (fieldArr.indexOf(key) !== -1) {\n                retArr.push(key);\n            }\n        } else {\n            retArr.push(key);\n        }\n    });\n\n    return retArr;\n}\n\n/**\n * This sanitize the reducer provide by the user and create a common type of object.\n * user can give function Also\n * @param  {DataModel} dataModel     dataModel to worked on\n * @param  {Object|function} [reducers={}] reducer provided by the users\n * @return {Object}               object containing reducer function for every measure\n */\nfunction getReducerObj (dataModel, reducers = {}) {\n    const retObj = {};\n    const fieldStore = dataModel.getFieldspace();\n    const measures = fieldStore.getMeasure();\n    const defReducer = reducerStore.defaultReducer();\n\n    Object.keys(measures).forEach((measureName) => {\n        if (typeof reducers[measureName] !== 'string') {\n            reducers[measureName] = measures[measureName].defAggFn();\n        }\n        const reducerFn = reducerStore.resolve(reducers[measureName]);\n        if (reducerFn) {\n            retObj[measureName] = reducerFn;\n        } else {\n            retObj[measureName] = defReducer;\n            reducers[measureName] = defaultReducerName;\n        }\n    });\n    return retObj;\n}\n\n/**\n * main function which perform the group-by operations which reduce the measures value is the\n * fields are common according to the reducer function provided\n * @param  {DataModel} dataModel the dataModel to worked\n * @param  {Array} fieldArr  fields according to which the groupby should be worked\n * @param  {Object|Function} reducers  reducers function\n * @param {DataModel} existingDataModel Existing datamodel instance\n * @return {DataModel} new dataModel with the group by\n */\nfunction groupBy (dataModel, fieldArr, reducers, existingDataModel) {\n    const sFieldArr = getFieldArr(dataModel, fieldArr);\n    const reducerObj = getReducerObj(dataModel, reducers);\n    const fieldStore = dataModel.getFieldspace();\n    const fieldStoreObj = fieldStore.fieldsObj();\n    const dbName = fieldStore.name;\n    const dimensionArr = [];\n    const measureArr = [];\n    const schema = [];\n    const hashMap = {};\n    const data = [];\n    let newDataModel;\n\n    // Prepare the schema\n    Object.entries(fieldStoreObj).forEach(([key, value]) => {\n        if (sFieldArr.indexOf(key) !== -1 || reducerObj[key]) {\n            schema.push(extend2({}, value.schema()));\n\n            switch (value.schema().type) {\n            case FieldType.MEASURE:\n                measureArr.push(key);\n                break;\n            default:\n            case FieldType.DIMENSION:\n                dimensionArr.push(key);\n            }\n        }\n    });\n    // Prepare the data\n    let rowCount = 0;\n    rowDiffsetIterator(dataModel._rowDiffset, (i) => {\n        let hash = '';\n        dimensionArr.forEach((_) => {\n            hash = `${hash}-${fieldStoreObj[_].partialField.data[i]}`;\n        });\n        if (hashMap[hash] === undefined) {\n            hashMap[hash] = rowCount;\n            data.push({});\n            dimensionArr.forEach((_) => {\n                data[rowCount][_] = fieldStoreObj[_].partialField.data[i];\n            });\n            measureArr.forEach((_) => {\n                data[rowCount][_] = [fieldStoreObj[_].partialField.data[i]];\n            });\n            rowCount += 1;\n        } else {\n            measureArr.forEach((_) => {\n                data[hashMap[hash]][_].push(fieldStoreObj[_].partialField.data[i]);\n            });\n        }\n    });\n\n    // reduction\n    let cachedStore = {};\n    let cloneProvider = () => dataModel.detachedRoot();\n    data.forEach((row) => {\n        const tuple = row;\n        measureArr.forEach((_) => {\n            tuple[_] = reducerObj[_](row[_], cloneProvider, cachedStore);\n        });\n    });\n    if (existingDataModel) {\n        existingDataModel.__calculateFieldspace();\n        newDataModel = existingDataModel;\n    }\n    else {\n        newDataModel = new DataModel(data, schema, { name: dbName });\n    }\n    return newDataModel;\n}\n\nexport { groupBy, getFieldArr, getReducerObj };\n","export { createBinnedFieldData } from './bucket-creator';\nexport { compose, bin, select, project, groupBy as groupby } from './compose';\nexport { calculateVariable, sort } from './pure-operators';\nexport { crossProduct } from './cross-product';\nexport { dataBuilder } from './data-builder';\nexport { difference } from './difference';\nexport { getCommonSchema } from './get-common-schema';\nexport { defReducer, fnList } from './group-by-function';\nexport { groupBy, getFieldArr, getReducerObj } from './group-by';\nexport { mergeSort } from './merge-sort';\nexport { naturalJoinFilter } from './natural-join-filter-function';\nexport { naturalJoin } from './natural-join';\nexport { leftOuterJoin, rightOuterJoin, fullOuterJoin } from './outer-join';\nexport { rowDiffsetIterator } from './row-diffset-iterator';\nexport { union } from './union';\n","/**\n * The default sort function.\n *\n * @param {*} a - The first value.\n * @param {*} b - The second value.\n * @return {number} Returns the comparison result e.g. 1 or 0 or -1.\n */\nfunction defSortFn (a, b) {\n    const a1 = `${a}`;\n    const b1 = `${b}`;\n    if (a1 < b1) {\n        return -1;\n    }\n    if (a1 > b1) {\n        return 1;\n    }\n    return 0;\n}\n\n/**\n * The helper function for merge sort which creates the sorted array\n * from the two halves of the input array.\n *\n * @param {Array} arr - The target array which needs to be merged.\n * @param {number} lo - The starting index of the first array half.\n * @param {number} mid - The ending index of the first array half.\n * @param {number} hi - The ending index of the second array half.\n * @param {Function} sortFn - The sort function.\n */\nfunction merge (arr, lo, mid, hi, sortFn) {\n    const mainArr = arr;\n    const auxArr = [];\n    for (let i = lo; i <= hi; i += 1) {\n        auxArr[i] = mainArr[i];\n    }\n    let a = lo;\n    let b = mid + 1;\n\n    for (let i = lo; i <= hi; i += 1) {\n        if (a > mid) {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        } else if (b > hi) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else if (sortFn(auxArr[a], auxArr[b]) <= 0) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        }\n    }\n}\n\n/**\n * The helper function for merge sort which would be called\n * recursively for sorting the array halves.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {number} lo - The starting index of the array half.\n * @param {number} hi - The ending index of the array half.\n * @param {Function} sortFn - The sort function.\n * @return {Array} Returns the target array itself.\n */\nfunction sort (arr, lo, hi, sortFn) {\n    if (hi === lo) { return arr; }\n\n    const mid = lo + Math.floor((hi - lo) / 2);\n    sort(arr, lo, mid, sortFn);\n    sort(arr, mid + 1, hi, sortFn);\n    merge(arr, lo, mid, hi, sortFn);\n\n    return arr;\n}\n\n/**\n * The implementation of merge sort.\n * It is used in DataModel for stable sorting as it is not sure\n * what the sorting algorithm used by browsers is stable or not.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {Function} [sortFn=defSortFn] - The sort function.\n * @return {Array} Returns the input array itself in sorted order.\n */\nexport function mergeSort (arr, sortFn = defSortFn) {\n    if (arr.length > 1) {\n        sort(arr, 0, arr.length - 1, sortFn);\n    }\n    return arr;\n}\n","import { getCommonSchema } from './get-common-schema';\n\n/**\n * The filter function used in natural join.\n * It generates a function that will have the logic to join two\n * DataModel instances by the process of natural join.\n *\n * @param {DataModel} dm1 - The left DataModel instance.\n * @param {DataModel} dm2 - The right DataModel instance.\n * @return {Function} Returns a function that is used in cross-product operation.\n */\nexport function naturalJoinFilter (dm1, dm2) {\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    // const dm1FieldStoreName = dm1FieldStore.name;\n    // const dm2FieldStoreName = dm2FieldStore.name;\n    const commonSchemaArr = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    return (dm1Fields, dm2Fields) => {\n        let retainTuple = true;\n        commonSchemaArr.forEach((fieldName) => {\n            if (dm1Fields[fieldName].value ===\n                dm2Fields[fieldName].value && retainTuple) {\n                retainTuple = true;\n            } else {\n                retainTuple = false;\n            }\n        });\n        return retainTuple;\n    };\n}\n","import { crossProduct } from './cross-product';\nimport { naturalJoinFilter } from './natural-join-filter-function';\n\nexport function naturalJoin (dataModel1, dataModel2) {\n    return crossProduct(dataModel1, dataModel2, naturalJoinFilter(dataModel1, dataModel2), true);\n}\n","import { crossProduct } from './cross-product';\nimport { JOINS } from '../constants';\nimport { union } from './union';\n\n\nexport function leftOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel1, dataModel2, filterFn, false, JOINS.LEFTOUTER);\n}\n\nexport function rightOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel2, dataModel1, filterFn, false, JOINS.RIGHTOUTER);\n}\n\nexport function fullOuterJoin (dataModel1, dataModel2, filterFn) {\n    return union(leftOuterJoin(dataModel1, dataModel2, filterFn), rightOuterJoin(dataModel1, dataModel2, filterFn));\n}\n","/**\n * Wrapper on calculateVariable() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const calculateVariable = (...args) => dm => dm.calculateVariable(...args);\n\n/**\n * Wrapper on sort() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const sort = (...args) => dm => dm.sort(...args);\n","/**\n * Iterates through the diffSet array and call the callback with the current\n * index.\n *\n * @param {string} rowDiffset - The row diffset string e.g. '0-4,6,10-13'.\n * @param {Function} callback - The callback function to be called with every index.\n */\nexport function rowDiffsetIterator (rowDiffset, callback) {\n    if (rowDiffset.length > 0) {\n        const rowDiffArr = rowDiffset.split(',');\n        rowDiffArr.forEach((diffStr) => {\n            const diffStsArr = diffStr.split('-');\n            const start = +(diffStsArr[0]);\n            const end = +(diffStsArr[1] || diffStsArr[0]);\n            if (end >= start) {\n                for (let i = start; i <= end; i += 1) {\n                    callback(i);\n                }\n            }\n        });\n    }\n}\n","import DataModel from '../export';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n/**\n * Performs the union operation between two dm instances.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function union (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n    // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     */\n    function prepareDataHelper (dm, fieldsObj) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                data.push(tuple);\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj);\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj);\n\n    return new DataModel(data, schema, { name });\n}\n","import { FilteringMode } from './enums';\nimport { getUniqueId } from './utils';\nimport { updateFields, cloneWithSelect, cloneWithProject, updateData } from './helper';\nimport { crossProduct, difference, naturalJoinFilter, union } from './operator';\n\n/**\n * Relation provides the definitions of basic operators of relational algebra like *selection*, *projection*, *union*,\n * *difference* etc.\n *\n * It is extended by {@link DataModel} to inherit the functionalities of relational algebra concept.\n *\n * @class\n * @public\n * @module Relation\n * @namespace DataModel\n */\nclass Relation {\n\n    /**\n     * Creates a new Relation instance by providing underlying data and schema.\n     *\n     * @private\n     *\n     * @param {Object | string | Relation} data - The input tabular data in dsv or json format or\n     * an existing Relation instance object.\n     * @param {Array} schema - An array of data schema.\n     * @param {Object} [options] - The optional options.\n     */\n    constructor (...params) {\n        let source;\n\n        this._parent = null;\n        this._derivation = [];\n        this._ancestorDerivation = [];\n        this._children = [];\n\n        if (params.length === 1 && ((source = params[0]) instanceof Relation)) {\n            // parent datamodel was passed as part of source\n            this._colIdentifier = source._colIdentifier;\n            this._rowDiffset = source._rowDiffset;\n            this._dataFormat = source._dataFormat;\n            this._parent = source;\n            this._partialFieldspace = this._parent._partialFieldspace;\n            this._fieldStoreName = getUniqueId();\n            this.__calculateFieldspace().calculateFieldsConfig();\n        } else {\n            updateData(this, ...params);\n            this._fieldStoreName = this._partialFieldspace.name;\n            this.__calculateFieldspace().calculateFieldsConfig();\n            this._propagationNameSpace = {\n                mutableActions: {},\n                immutableActions: {}\n            };\n        }\n    }\n\n    /**\n     * Retrieves the {@link Schema | schema} details for every {@link Field | field} as an array.\n     *\n     * @public\n     *\n     * @return {Array.<Schema>} Array of fields schema.\n     *      ```\n     *      [\n     *          { name: 'Name', type: 'dimension' },\n     *          { name: 'Miles_per_Gallon', type: 'measure', numberFormat: (val) => `${val} miles / gallon` },\n     *          { name: 'Cylinder', type: 'dimension' },\n     *          { name: 'Displacement', type: 'measure', defAggFn: 'max' },\n     *          { name: 'HorsePower', type: 'measure', defAggFn: 'max' },\n     *          { name: 'Weight_in_lbs', type: 'measure', defAggFn: 'avg',  },\n     *          { name: 'Acceleration', type: 'measure', defAggFn: 'avg' },\n     *          { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *          { name: 'Origin' }\n     *      ]\n     *      ```\n     */\n    getSchema () {\n        return this.getFieldspace().fields.map(d => d.schema());\n    }\n\n    /**\n     * Returns the name of the {@link DataModel} instance. If no name was specified during {@link DataModel}\n     * initialization, then it returns a auto-generated name.\n     *\n     * @public\n     *\n     * @return {string} Name of the DataModel instance.\n     */\n    getName() {\n        return this._fieldStoreName;\n    }\n\n    getFieldspace () {\n        return this._fieldspace;\n    }\n\n    __calculateFieldspace () {\n        this._fieldspace = updateFields([this._rowDiffset, this._colIdentifier],\n             this.getPartialFieldspace(), this._fieldStoreName);\n        return this;\n    }\n\n    getPartialFieldspace () {\n        return this._partialFieldspace;\n    }\n\n    /**\n     * Performs {@link link_of_cross_product | cross-product} between two {@link DataModel} instances and returns a\n     * new {@link DataModel} instance containing the results. This operation is also called theta join.\n     *\n     * Cross product takes two set and create one set where each value of one set is paired with each value of another\n     * set.\n     *\n     * This method takes an optional predicate which filters the generated result rows. If the predicate returns true\n     * the combined row is included in the resulatant table.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.join(originDM)));\n     *\n     *  console.log(carsDM.join(originDM,\n     *      obj => obj.[originDM.getName()].Origin === obj.[carsDM.getName()].Origin));\n     *\n     * @text\n     * This is chained version of `join` operator. `join` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel to be joined with the current instance DataModel.\n     * @param {SelectionPredicate} filterFn - The predicate function that will filter the result of the crossProduct.\n     *\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    join (joinWith, filterFn) {\n        return crossProduct(this, joinWith, filterFn);\n    }\n\n    /**\n     * {@link natural_join | Natural join} is a special kind of cross-product join where filtering of rows are performed\n     * internally by resolving common fields are from both table and the rows with common value are included.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.naturalJoin(originDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel with which the current instance of DataModel on which the method is\n     *      called will be joined.\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    naturalJoin (joinWith) {\n        return crossProduct(this, joinWith, naturalJoinFilter(this, joinWith), true);\n    }\n\n    /**\n     * {@link link_to_union | Union} operation can be termed as vertical stacking of all rows from both the DataModel\n     * instances, provided that both of the {@link DataModel} instances should have same column names.\n     *\n     * @example\n     * console.log(EuropeanMakerDM.union(USAMakerDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} unionWith - DataModel instance for which union has to be applied with the instance on which\n     *      the method is called\n     *\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    union (unionWith) {\n        return union(this, unionWith);\n    }\n\n    /**\n     * {@link link_to_difference | Difference } operation only include rows which are present in the datamodel on which\n     * it was called but not on the one passed as argument.\n     *\n     * @example\n     * console.log(highPowerDM.difference(highExpensiveDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} differenceWith - DataModel instance for which difference has to be applied with the instance\n     *      on which the method is called\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    difference (differenceWith) {\n        return difference(this, differenceWith);\n    }\n\n    /**\n     * {@link link_to_selection | Selection} is a row filtering operation. It expects a predicate and an optional mode\n     * which control which all rows should be included in the resultant DataModel instance.\n     *\n     * {@link SelectionPredicate} is a function which returns a boolean value. For selection operation the selection\n     * function is called for each row of DataModel instance with the current row passed as argument.\n     *\n     * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n     * of rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resultant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  // with selection mode NORMAL:\n     *  const normDt = dt.select(fields => fields.Origin.value === \"USA\")\n     *  console.log(normDt));\n     *\n     * // with selection mode INVERSE:\n     * const inverDt = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.INVERSE })\n     * console.log(inverDt);\n     *\n     * // with selection mode ALL:\n     * const dtArr = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.ALL })\n     * // print the selected parts\n     * console.log(dtArr[0]);\n     * // print the inverted parts\n     * console.log(dtArr[1]);\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Function} selectFn - The predicate function which is called for each row with the current row.\n     * ```\n     *  function (row, i, cloneProvider, store)  { ... }\n     * ```\n     * @param {Object} config - The configuration object to control the inclusion exclusion of a row in resultant\n     * DataModel instance.\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection.\n     * @return {DataModel} Returns the new DataModel instance(s) after operation.\n     */\n    select (selectFn, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n\n        const cloneConfig = { saveChild: config.saveChild };\n        let oDm;\n\n        if (config.mode === FilteringMode.ALL) {\n            const selectDm = cloneWithSelect(\n                this,\n                selectFn,\n                { mode: FilteringMode.NORMAL },\n                cloneConfig\n            );\n            const rejectDm = cloneWithSelect(\n                this,\n                selectFn,\n                { mode: FilteringMode.INVERSE },\n                cloneConfig\n            );\n            oDm = [selectDm, rejectDm];\n        } else {\n            oDm = cloneWithSelect(\n                this,\n                selectFn,\n                config,\n                cloneConfig\n            );\n        }\n\n        return oDm;\n    }\n\n    /**\n     * Retrieves a boolean value if the current {@link DataModel} instance has data.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'CarName', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     * const data = [];\n     *\n     * const dt = new DataModel(data, schema);\n     * console.log(dt.isEmpty());\n     *\n     * @public\n     *\n     * @return {Boolean} True if the datamodel has no data, otherwise false.\n     */\n    isEmpty () {\n        return !this._rowDiffset.length || !this._colIdentifier.length;\n    }\n\n    /**\n     * Creates a clone from the current DataModel instance with child parent relationship.\n     *\n     * @private\n     * @param {boolean} [saveChild=true] - Whether the cloned instance would be recorded in the parent instance.\n     * @return {DataModel} - Returns the newly cloned DataModel instance.\n     */\n    clone (saveChild = true) {\n        const clonedDm = new this.constructor(this);\n        if (saveChild) {\n            clonedDm.setParent(this);\n        } else {\n            clonedDm.setParent(null);\n        }\n        return clonedDm;\n    }\n\n    /**\n     * {@link Projection} is filter column (field) operation. It expects list of fields' name and either include those\n     * or exclude those based on {@link FilteringMode} on the resultant variable.\n     *\n     * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n     * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resulatant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *\n     *  // with projection mode NORMAL:\n     *  const normDt = dt.project([\"Name\", \"HorsePower\"]);\n     *  console.log(normDt.getData());\n     *\n     *  // with projection mode INVERSE:\n     *  const inverDt = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.INVERSE })\n     *  console.log(inverDt.getData());\n     *\n     *  // with selection mode ALL:\n     *  const dtArr = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.ALL })\n     *  // print the normal parts\n     *  console.log(dtArr[0].getData());\n     *  // print the inverted parts\n     *  console.log(dtArr[1].getData());\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n     * @param {Object} [config] - An optional config to control the creation of new DataModel\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n     *\n     * @return {DataModel} Returns the new DataModel instance after operation.\n     */\n    project (projField, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n        const fieldConfig = this.getFieldsConfig();\n        const allFields = Object.keys(fieldConfig);\n        const { mode } = config;\n\n        let normalizedProjField = projField.reduce((acc, field) => {\n            if (field.constructor.name === 'RegExp') {\n                acc.push(...allFields.filter(fieldName => fieldName.search(field) !== -1));\n            } else if (field in fieldConfig) {\n                acc.push(field);\n            }\n            return acc;\n        }, []);\n\n        normalizedProjField = Array.from(new Set(normalizedProjField)).map(field => field.trim());\n        let dataModel;\n\n        if (mode === FilteringMode.ALL) {\n            let projectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.NORMAL,\n                saveChild: config.saveChild\n            }, allFields);\n            let rejectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.INVERSE,\n                saveChild: config.saveChild\n            }, allFields);\n            dataModel = [projectionClone, rejectionClone];\n        } else {\n            let projectionClone = cloneWithProject(this, normalizedProjField, config, allFields);\n            dataModel = projectionClone;\n        }\n\n        return dataModel;\n    }\n\n    getFieldsConfig () {\n        return this._fieldConfig;\n    }\n\n    calculateFieldsConfig () {\n        this._fieldConfig = this._fieldspace.fields.reduce((acc, fieldDef, i) => {\n            acc[fieldDef.name()] = {\n                index: i,\n                def: { name: fieldDef.name(), type: fieldDef.type(), subtype: fieldDef.subtype() }\n            };\n            return acc;\n        }, {});\n        return this;\n    }\n\n\n    /**\n     * Frees up the resources associated with the current DataModel instance and breaks all the links instance has in\n     * the DAG.\n     *\n     * @public\n     */\n    dispose () {\n        this._parent && this._parent.removeChild(this);\n        this._parent = null;\n        this._children.forEach((child) => {\n            child._parent = null;\n        });\n        this._children = [];\n    }\n\n    /**\n     * Removes the specified child {@link DataModel} from the child list of the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\")\n     * dt.removeChild(dt2);\n     *\n     * @private\n     *\n     * @param {DataModel} child - Delegates the parent to remove this child.\n     */\n    removeChild (child) {\n        let idx = this._children.findIndex(sibling => sibling === child);\n        idx !== -1 ? this._children.splice(idx, 1) : true;\n    }\n\n    /**\n     * Sets the specified {@link DataModel} as a parent for the current {@link DataModel} instance.\n     *\n     * @param {DataModel} parent - The datamodel instance which will act as parent.\n     */\n    setParent (parent) {\n        this._parent && this._parent.removeChild(this);\n        this._parent = parent;\n        parent && parent._children.push(this);\n    }\n\n    /**\n     * Returns the parent {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const parentDm = dt2.getParent();\n     *\n     * @return {DataModel} Returns the parent DataModel instance.\n     */\n    getParent () {\n        return this._parent;\n    }\n\n    /**\n     * Returns the immediate child {@link DataModel} instances.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const childDm1 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const childDm2 = dt.select(fields => fields.Origin.value === \"Japan\");\n     * const childDm3 = dt.groupBy([\"Origin\"]);\n     *\n     * @return {DataModel[]} Returns the immediate child DataModel instances.\n     */\n    getChildren () {\n        return this._children;\n    }\n\n    /**\n     * Returns the in-between operation meta data while creating the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const derivations = dt3.getDerivations();\n     *\n     * @return {Any[]} Returns the derivation meta data.\n     */\n    getDerivations () {\n        return this._derivation;\n    }\n\n    /**\n     * Returns the in-between operation meta data happened from root {@link DataModel} to current instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const ancDerivations = dt3.getAncestorDerivations();\n     *\n     * @return {Any[]} Returns the previous derivation meta data.\n     */\n    getAncestorDerivations () {\n        return this._ancestorDerivation;\n    }\n}\n\nexport default Relation;\n","import { fnList } from '../operator/group-by-function';\n\nexport const { sum, avg, min, max, first, last, count, std: sd } = fnList;\n","/**\n * The utility function to calculate major column.\n *\n * @param {Object} store - The store object.\n * @return {Function} Returns the push function.\n */\nexport default (store) => {\n    let i = 0;\n    return (...fields) => {\n        fields.forEach((val, fieldIndex) => {\n            if (!(store[fieldIndex] instanceof Array)) {\n                store[fieldIndex] = Array.from({ length: i });\n            }\n            store[fieldIndex].push(val);\n        });\n        i++;\n    };\n};\n","/**\n * Creates a JS native date object from input\n *\n * @param {string | number | Date} date Input using which date object to be created\n * @return {Date} : JS native date object\n */\nfunction convertToNativeDate (date) {\n    if (date instanceof Date) {\n        return date;\n    }\n\n    return new Date(date);\n}\n/**\n * Apply padding before a number if its less than 1o. This is used when constant digit's number to be returned\n * between 0 - 99\n *\n * @param {number} n Input to be padded\n * @return {string} Padded number\n */\nfunction pad (n) {\n    return (n < 10) ? (`0${n}`) : n;\n}\n/*\n * DateFormatter utility to convert any date format to any other date format\n * DateFormatter parse a date time stamp specified by a user abiding by rules which are defined\n * by user in terms of token. It creates JS native date object from the user specified format.\n * That native date can also be displayed\n * in any specified format.\n * This utility class only takes care of format conversion only\n */\n\n/*\n * Escapes all the special character that are used in regular expression.\n * Like\n * RegExp.escape('sgfd-$') // Output: sgfd\\-\\$\n *\n * @param text {String} : text which is to be escaped\n */\nRegExp.escape = function (text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n};\n\n/**\n * DateTimeFormatter class to convert any user format of date time stamp to any other format\n * of date time stamp.\n *\n * @param {string} format Format of the date given. For the above date,\n * 'year: %Y, month: %b, day: %d'.\n * @class\n */\n/* istanbul ignore next */ function DateTimeFormatter (format) {\n    this.format = format;\n    this.dtParams = undefined;\n    this.nativeDate = undefined;\n}\n\n// The identifier of the tokens\nDateTimeFormatter.TOKEN_PREFIX = '%';\n\n// JS native Date constructor takes the date params (year, month, etc) in a certail sequence.\n// This defines the sequence of the date parameters in the constructor.\nDateTimeFormatter.DATETIME_PARAM_SEQUENCE = {\n    YEAR: 0,\n    MONTH: 1,\n    DAY: 2,\n    HOUR: 3,\n    MINUTE: 4,\n    SECOND: 5,\n    MILLISECOND: 6\n};\n\n/*\n * This is a default number parsing utility. It tries to parse a number in integer, if parsing is unsuccessful, it\n * gives back a default value.\n *\n * @param: defVal {Number} : Default no if the parsing to integer is not successful\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be parsed.\n */\nDateTimeFormatter.defaultNumberParser = function (defVal) {\n    return function (val) {\n        let parsedVal;\n        if (isFinite(parsedVal = parseInt(val, 10))) {\n            return parsedVal;\n        }\n\n        return defVal;\n    };\n};\n\n/*\n * This is a default number range utility. It tries to find an element in the range. If not found it returns a\n * default no as an index.\n *\n * @param: range {Array} : The list which is to be serached\n * @param: defVal {Number} : Default no if the serach and find does not return anything\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be found\n */\nDateTimeFormatter.defaultRangeParser = function (range, defVal) {\n    return (val) => {\n        let i;\n        let l;\n\n        if (!val) { return defVal; }\n\n        const nVal = val.toLowerCase();\n\n        for (i = 0, l = range.length; i < l; i++) {\n            if (range[i].toLowerCase() === nVal) {\n                return i;\n            }\n        }\n\n        if (i === undefined) {\n            return defVal;\n        }\n        return null;\n    };\n};\n\n/*\n * Defines the tokens which are supporter by the dateformatter. Using this definitation a value gets extracted from\n * the user specifed date string. This also formats the value for display purpose from native JS date.\n * The definition of each token contains the following named properties\n * {\n *     %token_name% : {\n *         name: name of the token, this is used in reverse lookup,\n *         extract: a function that returns the regular expression to extract that piece of information. All the\n *                  regex should be gouped by using ()\n *         parser: a function which receives value extracted by the above regex and parse it to get the date params\n *         formatter: a formatter function that takes milliseconds or JS Date object and format the param\n *                  represented by the token only.\n *     }\n * }\n *\n * @return {Object} : Definition of the all the supported tokens.\n */\nDateTimeFormatter.getTokenDefinitions = function () {\n    const daysDef = {\n        short: [\n            'Sun',\n            'Mon',\n            'Tue',\n            'Wed',\n            'Thu',\n            'Fri',\n            'Sat'\n        ],\n        long: [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday'\n        ]\n    };\n    const monthsDef = {\n        short: [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n            'Oct',\n            'Nov',\n            'Dec'\n        ],\n        long: [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December'\n        ]\n    };\n\n    const definitions = {\n        H: {\n            // 24 hours format\n            name: 'H',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n\n                return d.getHours().toString();\n            }\n        },\n        l: {\n            // 12 hours format\n            name: 'l',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours() % 12;\n\n                return (hours === 0 ? 12 : hours).toString();\n            }\n        },\n        p: {\n            // AM or PM\n            name: 'p',\n            index: 3,\n            extract () { return '(AM|PM)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'AM' : 'PM');\n            }\n        },\n        P: {\n            // am or pm\n            name: 'P',\n            index: 3,\n            extract () { return '(am|pm)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'am' : 'pm');\n            }\n        },\n        M: {\n            // Two digit minutes 00 - 59\n            name: 'M',\n            index: 4,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const mins = d.getMinutes();\n\n                return pad(mins);\n            }\n        },\n        S: {\n            // Two digit seconds 00 - 59\n            name: 'S',\n            index: 5,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const seconds = d.getSeconds();\n\n                return pad(seconds);\n            }\n        },\n        K: {\n            // Milliseconds\n            name: 'K',\n            index: 6,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const ms = d.getMilliseconds();\n\n                return ms.toString();\n            }\n        },\n        a: {\n            // Short name of day, like Mon\n            name: 'a',\n            index: 2,\n            extract () { return `(${daysDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.short[day]).toString();\n            }\n        },\n        A: {\n            // Long name of day, like Monday\n            name: 'A',\n            index: 2,\n            extract () { return `(${daysDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.long[day]).toString();\n            }\n        },\n        e: {\n            // 8 of March, 11 of November\n            name: 'e',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return day.toString();\n            }\n        },\n        d: {\n            // 08 of March, 11 of November\n            name: 'd',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return pad(day);\n            }\n        },\n        b: {\n            // Short month, like Jan\n            name: 'b',\n            index: 1,\n            extract () { return `(${monthsDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.short[month]).toString();\n            }\n        },\n        B: {\n            // Long month, like January\n            name: 'B',\n            index: 1,\n            extract () { return `(${monthsDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.long[month]).toString();\n            }\n        },\n        m: {\n            // Two digit month of year like 01 for January\n            name: 'm',\n            index: 1,\n            extract () { return '(\\\\d+)'; },\n            parser (val) { return DateTimeFormatter.defaultNumberParser()(val) - 1; },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return pad(month + 1);\n            }\n        },\n        y: {\n            // Short year like 90 for 1990\n            name: 'y',\n            index: 0,\n            extract () { return '(\\\\d{2})'; },\n            parser (val) {\n                let result;\n                if (val) {\n                    const l = val.length;\n                    val = val.substring(l - 2, l);\n                }\n                let parsedVal = DateTimeFormatter.defaultNumberParser()(val);\n                let presentDate = new Date();\n                let presentYear = Math.trunc((presentDate.getFullYear()) / 100);\n\n                result = `${presentYear}${parsedVal}`;\n\n                if (convertToNativeDate(result).getFullYear() > presentDate.getFullYear()) {\n                    result = `${presentYear - 1}${parsedVal}`;\n                }\n                return convertToNativeDate(result).getFullYear();\n            },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                let year = d.getFullYear().toString();\n                let l;\n\n                if (year) {\n                    l = year.length;\n                    year = year.substring(l - 2, l);\n                }\n\n                return year;\n            }\n        },\n        Y: {\n            // Long year like 1990\n            name: 'Y',\n            index: 0,\n            extract () { return '(\\\\d{4})'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const year = d.getFullYear().toString();\n\n                return year;\n            }\n        }\n    };\n\n    return definitions;\n};\n\n/*\n * The tokens which works internally is not user friendly in terms of memorizing the names. This gives a formal\n * definition to the informal notations.\n *\n * @return {Object} : Formal definition of the tokens\n */\nDateTimeFormatter.getTokenFormalNames = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n\n    return {\n        HOUR: definitions.H,\n        HOUR_12: definitions.l,\n        AMPM_UPPERCASE: definitions.p,\n        AMPM_LOWERCASE: definitions.P,\n        MINUTE: definitions.M,\n        SECOND: definitions.S,\n        SHORT_DAY: definitions.a,\n        LONG_DAY: definitions.A,\n        DAY_OF_MONTH: definitions.e,\n        DAY_OF_MONTH_CONSTANT_WIDTH: definitions.d,\n        SHORT_MONTH: definitions.b,\n        LONG_MONTH: definitions.B,\n        MONTH_OF_YEAR: definitions.m,\n        SHORT_YEAR: definitions.y,\n        LONG_YEAR: definitions.Y\n    };\n};\n\n/*\n * This defines the rules and declares dependencies that resolves a date parameter (year, month etc) from\n * the date time parameter array.\n *\n * @return {Object} : An object that contains dependencies and a resolver function. The dependencies values are fed\n *                  to the resolver function in that particular sequence only.\n */\nDateTimeFormatter.tokenResolver = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const defaultResolver = (...args) => { // eslint-disable-line require-jsdoc\n        let i = 0;\n        let arg;\n        let targetParam;\n        const l = args.length;\n\n        for (; i < l; i++) {\n            arg = args[i];\n            if (args[i]) {\n                targetParam = arg;\n            }\n        }\n\n        if (!targetParam) { return null; }\n\n        return targetParam[0].parser(targetParam[1]);\n    };\n\n    return {\n        YEAR: [definitions.y, definitions.Y,\n            defaultResolver\n        ],\n        MONTH: [definitions.b, definitions.B, definitions.m,\n            defaultResolver\n        ],\n        DAY: [definitions.a, definitions.A, definitions.e, definitions.d,\n            defaultResolver\n        ],\n        HOUR: [definitions.H, definitions.l, definitions.p, definitions.P,\n            function (hourFormat24, hourFormat12, ampmLower, ampmUpper) {\n                let targetParam;\n                let amOrpm;\n                let isPM;\n                let val;\n\n                if (hourFormat12 && (amOrpm = (ampmLower || ampmUpper))) {\n                    if (amOrpm[0].parser(amOrpm[1]) === 'pm') {\n                        isPM = true;\n                    }\n\n                    targetParam = hourFormat12;\n                } else if (hourFormat12) {\n                    targetParam = hourFormat12;\n                } else {\n                    targetParam = hourFormat24;\n                }\n\n                if (!targetParam) { return null; }\n\n                val = targetParam[0].parser(targetParam[1]);\n                if (isPM) {\n                    val += 12;\n                }\n                return val;\n            }\n        ],\n        MINUTE: [definitions.M,\n            defaultResolver\n        ],\n        SECOND: [definitions.S,\n            defaultResolver\n        ]\n    };\n};\n\n/*\n * Finds token from the format rule specified by a user.\n * @param format {String} : The format of the input date specified by the user\n * @return {Array} : An array of objects which contains the available token and their occurence index in the format\n */\nDateTimeFormatter.findTokens = function (format) {\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenLiterals = Object.keys(definitions);\n    const occurrence = [];\n    let i;\n    let forwardChar;\n\n    while ((i = format.indexOf(tokenPrefix, i + 1)) >= 0) {\n        forwardChar = format[i + 1];\n        if (tokenLiterals.indexOf(forwardChar) === -1) { continue; }\n\n        occurrence.push({\n            index: i,\n            token: forwardChar\n        });\n    }\n\n    return occurrence;\n};\n\n/*\n * Format any JS date to a specified date given by user.\n *\n * @param date {Number | Date} : The date object which is to be formatted\n * @param format {String} : The format using which the date will be formatted for display\n */\nDateTimeFormatter.formatAs = function (date, format) {\n    const nDate = convertToNativeDate(date);\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    let formattedStr = String(format);\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    let token;\n    let formattedVal;\n    let i;\n    let l;\n\n    for (i = 0, l = occurrence.length; i < l; i++) {\n        token = occurrence[i].token;\n        formattedVal = definitions[token].formatter(nDate);\n        formattedStr = formattedStr.replace(new RegExp(tokenPrefix + token, 'g'), formattedVal);\n    }\n\n    return formattedStr;\n};\n\n/*\n * Parses the user specified date string to extract the date time params.\n *\n * @return {Array} : Value of date time params in an array [year, month, day, hour, minutes, seconds, milli]\n */\nDateTimeFormatter.prototype.parse = function (dateTimeStamp, options) {\n    const tokenResolver = DateTimeFormatter.tokenResolver();\n    const dtParams = this.extractTokenValue(dateTimeStamp);\n    const dtParamSeq = DateTimeFormatter.DATETIME_PARAM_SEQUENCE;\n    const noBreak = options && options.noBreak;\n    const dtParamArr = [];\n    const args = [];\n    let resolverKey;\n    let resolverParams;\n    let resolverFn;\n    let val;\n    let i;\n    let param;\n    let resolvedVal;\n    let l;\n    let result = [];\n\n    for (resolverKey in tokenResolver) {\n        if (!{}.hasOwnProperty.call(tokenResolver, resolverKey)) { continue; }\n\n        args.length = 0;\n        resolverParams = tokenResolver[resolverKey];\n        resolverFn = resolverParams.splice(resolverParams.length - 1, 1)[0];\n\n        for (i = 0, l = resolverParams.length; i < l; i++) {\n            param = resolverParams[i];\n            val = dtParams[param.name];\n\n            if (val === undefined) {\n                args.push(null);\n            } else {\n                args.push([param, val]);\n            }\n        }\n\n        resolvedVal = resolverFn.apply(this, args);\n\n        if ((resolvedVal === undefined || resolvedVal === null) && !noBreak) {\n            break;\n        }\n\n        dtParamArr[dtParamSeq[resolverKey]] = resolvedVal;\n    }\n\n    if (dtParamArr.length && this.checkIfOnlyYear(dtParamArr.length))\n     {\n        result.unshift(dtParamArr[0], 0, 1); }\n    else {\n        result.unshift(...dtParamArr);\n    }\n\n    return result;\n};\n\n/*\n * Extract the value of the token from user specified date time string.\n *\n * @return {Object} : An key value pair which contains the tokens as key and value as pair\n */\nDateTimeFormatter.prototype.extractTokenValue = function (dateTimeStamp) {\n    const format = this.format;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const tokenObj = {};\n\n    let lastOccurrenceIndex;\n    let occObj;\n    let occIndex;\n    let targetText;\n    let regexFormat;\n\n    let l;\n    let i;\n\n    regexFormat = String(format);\n\n    const tokenArr = occurrence.map(obj => obj.token);\n    const occurrenceLength = occurrence.length;\n    for (i = occurrenceLength - 1; i >= 0; i--) {\n        occIndex = occurrence[i].index;\n\n        if (occIndex + 1 === regexFormat.length - 1) {\n            lastOccurrenceIndex = occIndex;\n            continue;\n        }\n\n        if (lastOccurrenceIndex === undefined) {\n            lastOccurrenceIndex = regexFormat.length;\n        }\n\n        targetText = regexFormat.substring(occIndex + 2, lastOccurrenceIndex);\n        regexFormat = regexFormat.substring(0, occIndex + 2) +\n            RegExp.escape(targetText) +\n            regexFormat.substring(lastOccurrenceIndex, regexFormat.length);\n\n        lastOccurrenceIndex = occIndex;\n    }\n\n    for (i = 0; i < occurrenceLength; i++) {\n        occObj = occurrence[i];\n        regexFormat = regexFormat.replace(tokenPrefix + occObj.token, definitions[occObj.token].extract());\n    }\n\n    const extractValues = dateTimeStamp.match(new RegExp(regexFormat)) || [];\n    extractValues.shift();\n\n    for (i = 0, l = tokenArr.length; i < l; i++) {\n        tokenObj[tokenArr[i]] = extractValues[i];\n    }\n    return tokenObj;\n};\n\n/*\n * Give back the JS native date formed from  user specified date string\n *\n * @return {Date} : Native JS Date\n */\nDateTimeFormatter.prototype.getNativeDate = function (dateTimeStamp) {\n    let date = null;\n    if (Number.isFinite(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    } else if (!this.format && Date.parse(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    }\n    else {\n        const dtParams = this.dtParams = this.parse(dateTimeStamp);\n        if (dtParams.length) {\n            this.nativeDate = new Date(...dtParams);\n            date = this.nativeDate;\n        }\n    }\n    return date;\n};\n\nDateTimeFormatter.prototype.checkIfOnlyYear = function(len) {\n    return len === 1 && this.format.match(/y|Y/g).length;\n};\n\n/*\n * Represents JS native date to a user specified format.\n *\n * @param format {String} : The format according to which the date is to be represented\n * @return {String} : The formatted date string\n */\nDateTimeFormatter.prototype.formatAs = function (format, dateTimeStamp) {\n    let nativeDate;\n\n    if (dateTimeStamp) {\n        nativeDate = this.nativeDate = this.getNativeDate(dateTimeStamp);\n    } else if (!(nativeDate = this.nativeDate)) {\n        nativeDate = this.getNativeDate(dateTimeStamp);\n    }\n\n    return DateTimeFormatter.formatAs(nativeDate, format);\n};\n\nexport { DateTimeFormatter as default };\n","/**\n * Generates domain for measure field.\n *\n * @param {Array} data - The array of data.\n * @return {Array} Returns the measure domain.\n */\nexport default (data) => {\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    data.forEach((d) => {\n        if (d < min) {\n            min = d;\n        }\n        if (d > max) {\n            max = d;\n        }\n    });\n\n    return [min, max];\n};\n","/* eslint-disable */\nconst OBJECTSTRING = 'object';\nconst objectToStrFn = Object.prototype.toString;\nconst objectToStr = '[object Object]';\nconst arrayToStr = '[object Array]';\n\nfunction checkCyclicRef(obj, parentArr) {\n    let i = parentArr.length;\n    let bIndex = -1;\n\n    while (i) {\n        if (obj === parentArr[i]) {\n            bIndex = i;\n            return bIndex;\n        }\n        i -= 1;\n    }\n\n    return bIndex;\n}\n\nfunction merge(obj1, obj2, skipUndef, tgtArr, srcArr) {\n    var item,\n        srcVal,\n        tgtVal,\n        str,\n        cRef;\n    // check whether obj2 is an array\n    // if array then iterate through it's index\n    // **** MOOTOOLS precution\n\n    if (!srcArr) {\n        tgtArr = [obj1];\n        srcArr = [obj2];\n    }\n    else {\n        tgtArr.push(obj1);\n        srcArr.push(obj2);\n    }\n\n    if (obj2 instanceof Array) {\n        for (item = 0; item < obj2.length; item += 1) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (typeof tgtVal !== OBJECTSTRING) {\n                if (!(skipUndef && tgtVal === undefined)) {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                    srcVal = obj1[item] = tgtVal instanceof Array ? [] : {};\n                }\n                cRef = checkCyclicRef(tgtVal, srcArr);\n                if (cRef !== -1) {\n                    srcVal = obj1[item] = tgtArr[cRef];\n                }\n                else {\n                    merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                }\n            }\n        }\n    }\n    else {\n        for (item in obj2) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (tgtVal !== null && typeof tgtVal === OBJECTSTRING) {\n                // Fix for issue BUG: FWXT-602\n                // IE < 9 Object.prototype.toString.call(null) gives\n                // '[object Object]' instead of '[object Null]'\n                // that's why null value becomes Object in IE < 9\n                str = objectToStrFn.call(tgtVal);\n                if (str === objectToStr) {\n                    if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                        srcVal = obj1[item] = {};\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else if (str === arrayToStr) {\n                    if (srcVal === null || !(srcVal instanceof Array)) {\n                        srcVal = obj1[item] = [];\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (skipUndef && tgtVal === undefined) {\n                    continue;\n                }\n                obj1[item] = tgtVal;\n            }\n        }\n    }\n    return obj1;\n}\n\n\nfunction extend2 (obj1, obj2, skipUndef) {\n    //if none of the arguments are object then return back\n    if (typeof obj1 !== OBJECTSTRING && typeof obj2 !== OBJECTSTRING) {\n        return null;\n    }\n\n    if (typeof obj2 !== OBJECTSTRING || obj2 === null) {\n        return obj1;\n    }\n\n    if (typeof obj1 !== OBJECTSTRING) {\n        obj1 = obj2 instanceof Array ? [] : {};\n    }\n    merge(obj1, obj2, skipUndef);\n    return obj1;\n}\n\nexport { extend2 as default };\n","import { DataFormat } from '../enums';\n\n/**\n * Checks whether the value is an array.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an array otherwise returns false.\n */\nexport function isArray (val) {\n    return Array.isArray(val);\n}\n\n/**\n * Checks whether the value is an object.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an object otherwise returns false.\n */\nexport function isObject (val) {\n    return val === Object(val);\n}\n\n/**\n * Checks whether the value is a string value.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is a string value otherwise returns false.\n */\nexport function isString (val) {\n    return typeof val === 'string';\n}\n\n/**\n * Checks whether the value is callable.\n *\n * @param {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is callable otherwise returns false.\n */\nexport function isCallable (val) {\n    return typeof val === 'function';\n}\n\n/**\n * Returns the unique values from the input array.\n *\n * @param {Array} data - The input array.\n * @return {Array} Returns a new array of unique values.\n */\nexport function uniqueValues (data) {\n    return [...new Set(data)];\n}\n\nexport const getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Checks Whether two arrays have same content.\n *\n * @param {Array} arr1 - The first array.\n * @param {Array} arr2 - The 2nd array.\n * @return {boolean} Returns whether two array have same content.\n */\nexport function isArrEqual(arr1, arr2) {\n    if (!isArray(arr1) || !isArray(arr2)) {\n        return arr1 === arr2;\n    }\n\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * It is the default number format function for the measure field type.\n *\n * @param {any} val - The input value.\n * @return {number} Returns a number value.\n */\nexport function formatNumber(val) {\n    return val;\n}\n\n/**\n * Returns the detected data format.\n *\n * @param {any} data - The input data to be tested.\n * @return {string} Returns the data format name.\n */\nexport const detectDataFormat = (data) => {\n    if (isString(data)) {\n        return DataFormat.DSV_STR;\n    } else if (isArray(data) && isArray(data[0])) {\n        return DataFormat.DSV_ARR;\n    } else if (isArray(data) && (data.length === 0 || isObject(data[0]))) {\n        return DataFormat.FLAT_JSON;\n    }\n    return null;\n};\n","export { default as DateTimeFormatter } from './date-time-formatter';\nexport { default as columnMajor } from './column-major';\nexport { default as generateMeasureDomain } from './domain-generator';\nexport { default as extend2 } from './extend2';\nexport * from './helper';\n","import { defReducer, fnList } from '../operator';\n\n/**\n * A page level storage which stores, registers, unregisters reducers for all the datamodel instances. There is only one\n * reducer store available in a page. All the datamodel instances receive same instance of reducer store. DataModel\n * out of the box provides handful of {@link reducer | reducers} which can be used as reducer funciton.\n *\n * @public\n * @namespace DataModel\n */\nclass ReducerStore {\n    constructor () {\n        this.store = new Map();\n        this.store.set('defReducer', defReducer);\n\n        Object.entries(fnList).forEach((key) => {\n            this.store.set(key[0], key[1]);\n        });\n    }\n\n    /**\n     * Changes the `defaultReducer` globally. For all the fields which does not have `defAggFn` mentioned in schema, the\n     * value of `defaultReducer` is used for aggregation.\n     *\n     * @public\n     * @param {string} [reducer='sum'] - The name of the default reducer. It picks up the definition from store by doing\n     * name lookup. If no name is found then it takes `sum` as the default reducer.\n     * @return {ReducerStore} Returns instance of the singleton store in page.\n     */\n    defaultReducer (...params) {\n        if (!params.length) {\n            return this.store.get('defReducer');\n        }\n\n        let reducer = params[0];\n\n        if (typeof reducer === 'function') {\n            this.store.set('defReducer', reducer);\n        } else {\n            reducer = String(reducer);\n            if (Object.keys(fnList).indexOf(reducer) !== -1) {\n                this.store.set('defReducer', fnList[reducer]);\n            } else {\n                throw new Error(`Reducer ${reducer} not found in registry`);\n            }\n        }\n        return this;\n    }\n\n    /**\n     *\n     * Registers a {@link reducer | reducer}.\n     * A {@link reducer | reducer} has to be registered before it is used.\n     *\n     * @example\n     *  // find the mean squared value of a given set\n     *  const reducerStore = DataModel.Reducers();\n     *\n     *  reducers.register('meanSquared', (arr) => {\n     *      const squaredVal = arr.map(item => item * item);\n     *      let sum = 0;\n     *      for (let i = 0, l = squaredVal.length; i < l; i++) {\n     *          sum += squaredVal[i++];\n     *      }\n     *\n     *      return sum;\n     *  })\n     *\n     *  // datamodel (dm) is already prepared with cars.json\n     *  const dm1 = dm.groupBy(['origin'], {\n     *      accleration: 'meanSquared'\n     *  });\n     *\n     * @public\n     *\n     * @param {string} name formal name for a reducer. If the given name already exists in store it is overridden by new\n     *      definition.\n     * @param {Function} reducer definition of {@link reducer} function.\n     *\n     * @return {Function} function for unregistering the reducer.\n     */\n    register (name, reducer) {\n        if (typeof reducer !== 'function') {\n            throw new Error('Reducer should be a function');\n        }\n\n        name = String(name);\n        this.store.set(name, reducer);\n\n        return () => { this.__unregister(name); };\n    }\n\n    __unregister (name) {\n        if (this.store.has(name)) {\n            this.store.delete(name);\n        }\n    }\n\n    resolve (name) {\n        if (name instanceof Function) {\n            return name;\n        }\n        return this.store.get(name);\n    }\n}\n\nconst reducerStore = (function () {\n    let store = null;\n\n    function getStore () {\n        if (store === null) {\n            store = new ReducerStore();\n        }\n        return store;\n    }\n    return getStore();\n}());\n\nexport default reducerStore;\n","/**\n * The wrapper class on top of the primitive value of a field.\n *\n * @todo Need to have support for StringValue, NumberValue, DateTimeValue\n * and GeoValue. These types should expose predicate API mostly.\n */\nclass Value {\n\n  /**\n   * Creates new Value instance.\n   *\n   * @param {*} val - the primitive value from the field cell.\n   * @param {string | Field} field - The field from which the value belongs.\n   */\n    constructor (val, field) {\n        Object.defineProperty(this, '_value', {\n            enumerable: false,\n            configurable: false,\n            writable: false,\n            value: val\n        });\n\n        this.field = field;\n    }\n\n  /**\n   * Returns the field value.\n   *\n   * @return {*} Returns the current value.\n   */\n    get value () {\n        return this._value;\n    }\n\n  /**\n   * Converts to human readable string.\n   *\n   * @override\n   * @return {string} Returns a human readable string of the field value.\n   *\n   */\n    toString () {\n        return String(this.value);\n    }\n\n  /**\n   * Returns the value of the field.\n   *\n   * @override\n   * @return {*} Returns the field value.\n   */\n    valueOf () {\n        return this.value;\n    }\n}\n\nexport default Value;\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"hyperdis\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hyperdis\"] = factory();\n\telse\n\t\troot[\"hyperdis\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const makeEntry = (arr, sCon) => {\n    arr.forEach((elem) => {\n        if (elem === undefined || elem === null) {\n            return;\n        }\n        sCon[elem] = 1;\n    });\n};\n\nexport default class ForeignSet {\n    constructor (arr) {\n        this._set = {};\n        makeEntry(arr, this._set);\n    }\n\n    append (arr) {\n        makeEntry(arr, this._set);\n        return this;\n    }\n\n    toArray () {\n        return Object.keys(this._set);\n    }\n\n    static difference (set1, set2) {\n        let key;\n        const filteredKeys = [],\n            s1 = set1._set,\n            s2 = set2._set;\n        for (key in s1) {\n            if (!({}).hasOwnProperty.call(s1, key)) {\n                continue;\n            }\n            if (key in s2) {\n                continue;\n            }\n            filteredKeys.push(key);\n        }\n        return new ForeignSet(filteredKeys);\n    }\n}\n","/* global window */\n\nimport ForeignSet from './set';\n\nconst\n    isSimpleObject = (obj) => {\n        let token;\n        if (typeof obj === 'object') {\n            if (obj === null) { return false; }\n            token = Object.prototype.toString.call(obj);\n            if (token === '[object Object]') {\n                return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n            }\n        }\n        return false;\n    },\n    minMsThreshold = 16,\n    /* istanbul ignore next */win = typeof window === 'undefined' ? (this || {}) : window,\n    /* istanbul ignore next */ reqAnimFrame = win.requestAnimationFrame || win.webkitRequestAnimationFrame ||\n        win.mozRequestAnimationFrame || win.oRequestAnimationFrame ||\n        win.msRequestAnimationFrame ||\n        function (callback) {\n            setTimeout(callback, minMsThreshold);\n        },\n\n    getTimeBasedId = () => {\n        if (getTimeBasedId.__lastTime === new Date().getTime()) {\n            return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n        }\n\n        getTimeBasedId.__id = 0;\n        getTimeBasedId.__lastTime = new Date().getTime();\n        return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n    },\n    pullableRecent = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const\n                    hist = node.history,\n                    l = hist.length - 1;\n                return [hist[l - 1 < 0 ? 0 : l - 1], hist[l]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    pullableEnd = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const hist = node.history;\n                return [hist[0], hist[hist.length - 1]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    unique = fns => fns\n                    .reduce((store, fn) => {\n                // @warn function with side effect, it mutates the store passed during initialization\n                        if (fn.__id in store.map) {\n                            return store;\n                        }\n\n                        store.map[fn.__id] = 1;\n                        store.unique.push(fn);\n\n                        return store;\n                    }, { map: {}, unique: [] })\n                    .unique,\n    compose = fns => () => {\n        fns.forEach(fn => fn());\n    },\n    flat = (...params) => {\n        const res = [];\n        params.forEach(param => res.push(...param));\n        return res;\n    },\n    identityMap = arrays => arrays,\n    splitPathProp = (path) => {\n        const pathArr = path.split('.'),\n            len = pathArr.length;\n        return [pathArr.slice(0, len - 1), pathArr[len - 1]];\n    },\n    scheduler = (onFinishCallback) => {\n        let queue = [],\n            animationFrame = null;\n\n        onFinishCallback = onFinishCallback &&\n            typeof onFinishCallback === 'function' && onFinishCallback || (() => { });\n\n        return (listeners, payload) => {\n            [].push.apply(queue, listeners);\n            if (animationFrame === null) {\n                animationFrame = reqAnimFrame(() => {\n                    const tempQ = queue.slice(0);\n                    queue.length = 0;\n                    animationFrame = null;\n\n                    unique(tempQ).forEach(fn => fn());\n                    onFinishCallback(payload);\n                });\n            }\n        };\n    },\n    fetch = namedNode => (...params) => params.map((param) => {\n        const node = namedNode[param];\n        return {\n            name: node.name,\n            qualifiedName: node.qualifiedName,\n            value: node.seed\n        };\n    }),\n    fetchAggregator = (...params) => ({\n        dependencies: params.slice(0, params.length - 1),\n        fn: params[params.length - 1]\n    }),\n    getUpstreamNodes = (list) => {\n        let res = [];\n        const map = {};\n        list.forEach(node => map[node.qualifiedName] = -1);\n        function rec (arr) {\n            arr.forEach((node) => {\n                let qname,\n                    placedIndex,\n                    preArr,\n                    postArr;\n                if (!((qname = node.qualifiedName) in map)) {\n                    map[qname] = res.push(node) - 1;\n                } else {\n                    placedIndex = map[qname];\n                    if (placedIndex !== -1 && placedIndex !== res.length - 1) {\n                        // If not the last element, readjust the array so that the later dependency position is saved\n                        preArr = res.slice(0, placedIndex);\n                        postArr = res.slice(placedIndex + 1);\n                        res = preArr.concat(postArr);\n\n                        // reset the index in map\n                        postArr.forEach((elem, i) => map[elem.qualifiedName] = i + preArr.length);\n                        map[qname] = res.push(node) - 1;\n                    }\n                }\n                rec(node.outgoingEdges);\n            });\n        }\n        rec(list);\n        return res;\n    },\n    resolver = {\n        accumulate: (...params) => {\n            const resp = {};\n            params.forEach((nodeDetails) => {\n                Object.assign(resp, { [nodeDetails.name]: nodeDetails.value });\n            });\n            return resp;\n        },\n        identity: nodeDetails => nodeDetails.value\n    };\n\nfunction resolveDependencyOrder (node, resolved, resolveMap) {\n    let qname;\n    node.edges.forEach((neighbour) => {\n        resolveDependencyOrder(neighbour, resolved, resolveMap);\n    });\n\n    if (node.isRoot() || (qname = node.qualifiedName) in resolveMap) {\n        return;\n    }\n    resolved.push(node);\n    resolveMap[qname] = 1;\n}\n\nclass CustomResolver {\n    constructor (resolver) {\n        this.fn = resolver;\n        this.dep = [];\n    }\n\n    addDependencies(...dep) {\n        this.dep.push(...dep);\n        return this;\n    }\n\n    getDependencies () {\n        return this.dep;\n    }\n\n    get () {\n        return this.fn;\n    }\n}\n\nexport {\n    isSimpleObject,\n    scheduler,\n    compose,\n    flat,\n    identityMap,\n    pullableEnd,\n    pullableRecent,\n    unique,\n    splitPathProp,\n    resolver,\n    ForeignSet,\n    resolveDependencyOrder,\n    fetch,\n    fetchAggregator,\n    CustomResolver,\n    getUpstreamNodes\n};\n","export default class GraphNode {\n    constructor (name, qualifiedName, options) {\n        /* istanbul ignore next */options = options || {};\n        this.name = name;\n        this.qualifiedName = qualifiedName;\n        this.edges = [];\n        this.outgoingEdges = [];\n        this._seed = null;\n        this.requireResolve = true;\n        this.retriever = options.retriever;\n        this.history = [];\n        this.resolver = null;\n        this.electricEdges = [];\n    }\n\n    addDependencies (...dep) {\n        this.edges.push(...dep);\n        dep.forEach(entry => entry.outgoingEdges.push(this));\n        return this;\n    }\n\n    addElectricNode (node) {\n        this.electricEdges.push(node);\n        return this;\n    }\n\n    get seed () {\n        return this._seed;\n    }\n\n    set seed (value) {\n        this._seed = value;\n        this.requireResolve = true;\n        return this;\n    }\n\n    resolve () {\n        this.seed = this.resolver(...this.retrieveDetails());\n        this.history.push(this.seed);\n        this.requireResolve = false;\n        return this;\n    }\n\n    retrieveDetails () {\n        if (this.edges.length === 0) {\n            return [{\n                name: this.name,\n                qualifiedName: this.qualifiedName,\n                value: this.seed\n            }];\n        }\n        return this.retriever(...this.edges.map(edge => edge.qualifiedName));\n    }\n\n    repeatHead () {\n        const\n            history = this.history,\n            head = history[history.length - 1];\n        // @todo- Akash, write test case if history.length === 0 to pass code coverage\n        if (history.length === 0) {\n            return this;\n        }\n        history.push(head);\n        return this;\n    }\n\n    flush () {\n        const hist = this.history,\n            head = hist[hist.length - 1];\n        hist.length = 0;\n        hist.push(head);\n        return this;\n    }\n\n    isRoot () {\n        return this.name === null;\n    }\n}\n","import {\n    pullableRecent,\n    pullableEnd\n} from './utils';\n\nexport default class ElectricNode {\n    constructor () {\n        this.edges = [];\n        this.listeners = {\n            nextFrame: [],\n            currentFrame: []\n        };\n    }\n\n    addEdges (...nodes) {\n        this.edges.push(...nodes);\n        return this;\n    }\n\n    regListenerForCurrFrame (fn) {\n        const lstnrs = this.listeners.currentFrame;\n        let index = lstnrs.push(pullableRecent(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.currentFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    regListenerForNextFrame (fn) {\n        const lstnrs = this.listeners.nextFrame;\n        let index = lstnrs.push(pullableEnd(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.nextFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    hasNextFrameListener () {\n        return !!this.listeners.nextFrame.length;\n    }\n}\n","import {\n    isSimpleObject,\n    resolver,\n    // upstreamNodes,\n    flat,\n    resolveDependencyOrder,\n    getUpstreamNodes,\n    ForeignSet,\n    fetch,\n    CustomResolver,\n    scheduler\n} from './utils';\nimport Node from './graph-node';\nimport ElectricNode from './electric-node';\n\nexport default class Graph {\n    constructor () {\n        this.qualifiedNodeMap = {};\n        this.retriever = fetch(this.qualifiedNodeMap);\n        this.root = new Node(null, null, { retriever: this.retriever });\n        this.root.resolver = resolver.accumulate;\n\n        this._wholeSet = null;\n        this._propagate = true;\n        this.propagationOverride = {\n            currentFrameListeners: false,\n            nextFrameListeners: false\n        };\n\n        this._schedule = scheduler((payload) => {\n            let qname;\n            for (qname in payload.flushTarget) {\n                if (!({}).hasOwnProperty.call(this.qualifiedNodeMap, qname)) {\n                    return;\n                }\n                this.qualifiedNodeMap[qname].flush();\n            }\n        });\n    }\n\n    createNodesFrom (obj, mount) {\n        let val,\n            resolveReqList;\n        const qualifiedNodeMap = this.qualifiedNodeMap,\n            root = this.root,\n            retriever = this.retriever;\n\n        (function rec (objn, qualifiedName, history) {\n            let key,\n                qname,\n                perv,\n                node;\n\n            for (key in objn) {\n                if (!({}).hasOwnProperty.call(objn, key)) {\n                    continue;\n                }\n                qname = `${qualifiedName}${key}`;\n                node = new Node(key, qname, { retriever });\n                qualifiedNodeMap[qname] = node;\n\n                if ((perv = history.perv) !== undefined) {\n                    perv.addDependencies(node);\n                } else {\n                    // top most level entries\n                    root.addDependencies(node);\n                }\n\n                if (isSimpleObject(val = objn[key])) {\n                    rec(val, `${qualifiedName}${key}.`, { perv: node });\n                    node.resolver = resolver.accumulate;\n                } else if (val instanceof CustomResolver) {\n                    node.resolver = val.get();\n                    node.addDependencies(...val.getDependencies().map(qname => qualifiedNodeMap[qname]));\n                } else {\n                    node.resolver = resolver.identity;\n                    node.seed = val;\n                    // node.resolve();\n                }\n            }\n        }(obj, mount === null ? '' : `${mount}.`, {\n            perv: qualifiedNodeMap[mount]\n        }));\n\n        this._wholeSet = new ForeignSet(Object.keys(this.qualifiedNodeMap));\n\n        // Recalculate the model without firing the listeners\n        // @todo selective branch resolve. Currently resolve gets called even for a branch which was updated\n        resolveReqList = this.constructor.getResolvedList(root).concat(root).filter(node => node.requireResolve);\n        resolveReqList.forEach(node => node.resolve());\n        getUpstreamNodes(resolveReqList).forEach(node => node.resolve());\n        return this;\n    }\n\n    getNodeValue (prop) {\n        if (prop in this.qualifiedNodeMap) {\n            return this.qualifiedNodeMap[prop].seed;\n        }\n        return undefined;\n    }\n\n    createElectricNodeOf (props, fnSpec) {\n        const nodes = props.map(prop => this.qualifiedNodeMap[prop]),\n            eNode = new ElectricNode().addEdges(...nodes);\n\n        nodes.forEach(node => node.addElectricNode(eNode));\n        return eNode[`regListenerFor${fnSpec.type}`](fnSpec.fn);\n    }\n\n    update (...params) {\n        let changedSet,\n            upstreamNodes;\n        const\n            electricEdges = [],\n            nodes = params.map((entry) => {\n                entry[0].seed = entry[1];\n                return entry[0];\n            });\n        nodes.forEach(node => node.resolve());\n        electricEdges.push(...flat(...nodes.map(node => node.electricEdges)));\n        changedSet = new ForeignSet(nodes.map(node => node.qualifiedName));\n\n        if (!this._propagate) {\n            this.__execUniqueElectricEdges(electricEdges);\n            this._propagate = true;\n            return this;\n        }\n\n        upstreamNodes = getUpstreamNodes(nodes);\n        upstreamNodes.forEach(upstreamNode => upstreamNode.resolve());\n        changedSet.append(upstreamNodes.map(node => node.qualifiedName));\n        electricEdges.push(...flat(...upstreamNodes.map(node => node.electricEdges)));\n\n        this.__execUniqueElectricEdges(Array.from(new Set(electricEdges)), changedSet);\n        return this;\n    }\n\n    __execUniqueElectricEdges (electricEdges, changedSet) {\n        const\n            cfLstnrs = [], // current frame listeners\n            nfLstnrs = []; // next frame listeners\n        if (changedSet) {\n            const\n                differenceSet = ForeignSet.difference(this._wholeSet, changedSet),\n                entries = differenceSet.toArray();\n\n            entries.forEach(entry => this.qualifiedNodeMap[entry].repeatHead());\n        }\n\n        electricEdges.forEach((e) => {\n            cfLstnrs.push(...e.listeners.currentFrame);\n        });\n        electricEdges.forEach((e) => {\n            nfLstnrs.push(...e.listeners.nextFrame);\n        });\n\n        !this.propagationOverride.currentFrameListeners && cfLstnrs.forEach(fn => fn());\n        !this.propagationOverride.nextFrameListeners && this._schedule(nfLstnrs, { flushTarget: changedSet });\n        this.resetPropagationOverride();\n        return this;\n    }\n\n    resetNodeValue (...qnames) {\n        const nodes = qnames.map(qname => this.qualifiedNodeMap[qname]),\n            args = nodes.map(node => [node, node.seed]);\n        this.update(...args);\n        return this;\n    }\n\n    static getResolvedList (node) {\n        const resolved = [];\n        resolveDependencyOrder(node, resolved, {});\n        return resolved;\n    }\n\n    stopPropagation () {\n        this._propagate = false;\n        return this;\n    }\n\n    resetPropagationOverride () {\n        this.propagationOverride.currentFrameListeners = false;\n        this.propagationOverride.nextFrameListeners = false;\n        return this;\n    }\n\n    setPropagationOverride (key) {\n        this.propagationOverride[`${key}Listeners`] = true;\n        return this;\n    }\n\n    getNodeFromQualifiedName (qname) {\n        return this.qualifiedNodeMap[qname];\n    }\n}\n","import Graph from './graph';\nimport { CustomResolver, fetchAggregator } from './utils';\n\n/**\n * The container class for Hyperdis. Hyperdis is an enabler for observable object with few interesting features like,\n * calculated property, next frame and same frame listeners, multiple listeners etc with a dependency resolving system.\n * It internally uses a graph to hold the hierarchial relationship of a object. Model is merely a container which\n * ties all the components together.\n *\n * @todo Circular dependency detection is not present\n *\n * @example check src/index.spec.js\n * @class\n */\nclass Model {\n    constructor () {\n        this._graph = new Graph();\n        this._lockFlag = false;\n        this._reqQ = [];\n    }\n\n    /**\n     * Static method to create and init the model with an observable seed\n     *\n     * @param {Object} obj The target object which is required to be made observable\n     * @return {Model} instance of the observable object model\n     */\n    static create (obj) {\n        return new Model()._addPropInModel(null, obj);\n    }\n\n    /**\n     * Appends more observable property on the already observable instance. This mutates the original model.\n     *\n     * This function works in two mode. One being\n     * @param {String} mountPoint the property on which the new set of properties will be mounted. If its a nested\n     *                          property then the mountPoint has to be written such a way so it feels like you are\n     *                          accessing the object. If the mount point is not found then he obeservables are added in\n     *                          the root.\n     * @param {Object} The target object which is required to be made observable\n     *\n     * Another being\n     * @param {Object} The target object which is required to be made observable\n     *\n     * @return {Model} instance of the observable object model\n     */\n    append (...params) {\n        let mountPoint,\n            obj;\n\n        if (params.length === 1) {\n            mountPoint = null;\n            obj = params[0];\n        } else {\n            mountPoint = params[0];\n            obj = params[1];\n        }\n\n        this._addPropInModel(mountPoint, obj);\n        return this;\n    }\n\n    /**\n     * Creates a calculated variable from existing variable. This variable can't be updated from outside.\n     * @param {string} mountpoint property path on which the new variable will be placed\n     * @param {string} name name of the variable. If the variable could have hierarchy like `limits.start`\n     * @param {Function} fn funtion where the dependent variables are injected based on the dependency requirement\n     */\n    calculatedProp (...params) {\n        let calculationConfig,\n            customResolver,\n            varName,\n            mount,\n            fetchFn;\n\n        if (params.length > 2) {\n            mount = params[0];\n            varName = params[1];\n            fetchFn = params[2];\n        } else {\n            mount = null;\n            varName = params[0];\n            fetchFn = params[1];\n        }\n\n        calculationConfig = fetchFn(fetchAggregator);\n        customResolver = new CustomResolver(calculationConfig.fn);\n        customResolver.addDependencies(...calculationConfig.dependencies);\n\n        this._addPropInModel(mount, { [varName]: customResolver });\n        return this;\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    _addPropInModel (mountPoint, obj) {\n        this._graph.createNodesFrom(obj, mountPoint);\n        return this;\n    }\n\n    /**\n     * Register a listener in the current frame when a property or group of properties is changed.\n     *\n     * @example\n     * This function takes a single or group of property and handler which is called when any of the properties are\n     * changed.\n     * When a single property is changed the handler is called with two parameter, what was the old value of the state\n     * property and what is the new value.\n     * myState.on('range.start', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 9);\n     * // Output\n     * Value before prop change 1\n     * Value after prop change 9\n     *\n     * If a handler is registered on change of a property which has another state property as value, then the handler\n     * gets called whenever any state property connected to it gets changed\n     *\n     * myState.on('range', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 10);\n     * myState.prop('range.type.absolute', false);\n     *\n     * // Output\n     * Value before prop change\n     * range {\n     *      start: 9,\n     *      end: 5,\n     *      type: {\n     *          absolute: true\n     *      }\n     * }\n     * Value after prop change\n     * range: {\n     *      start: 10,\n     *      end: 5,\n     *      type: {\n     *          absolute: false\n     *      }\n     * }\n     * If a handler is registered with more than one property change then, the handler is called when any of the\n     * properties gets changed. In this cast the handler is called with more than one parameter: each for one state\n     * property which is registered for listening. Each parameter is of type array containing [oldValue, newValue]\n     *\n     * myState.on('range.start', 'range.end', (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * myState.prop('range.start', 12);\n     *\n     * // Output\n     * Start [10, 12]\n     * End [5, 5]\n     *\n     * myState.prop('range.end', 7);\n     *\n     * // Output\n     * Start [12, 12]\n     * End [5, 7]\n     *\n     * The on returns a function which is when called the listener registered gets unregistered\n     *\n     * let unsub = myState.on(['range.start', 'range.end'], (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * // Unsubscribe\n     * unsub()\n     *\n     * On takes an optional boolean value as the last parameter, which if passed as a true value the handler gets called\n     * during registration itself.\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    on (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed in the current stack frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'CurrFrame',\n                fn\n            });\n\n        if (instantCall) {\n            // Bar current next frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('nextFrame').resetNodeValue(...props);\n        }\n        return unsub;\n    }\n\n    /**\n     * Register a listener for the next frame when a property or group of properties is changed.\n     *\n     * @example\n     * See the examples for the on listener\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties. Here the oldvalue is last value of the last frame\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    next (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed at the tick of next animation frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'NextFrame',\n                fn\n            });\n\n        // @todo check support for this from the graph side\n        if (instantCall) {\n            // Bar current frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('currentFrame').resetNodeValue(...props);\n        }\n\n        return unsub;\n    }\n\n    /**\n     * Lock queues the request of property change and releases the change when unlock is called. This is helpful when\n     * multiple property is getting called and the model listeners are to be fired once at the end of update.\n     *\n     * @return {Model} instance of the model\n     */\n    lock () {\n        this._lockFlag = true;\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * Unlock unleashes the change done after the lock was called.\n\n     * @return {Model} instance of the model\n     */\n    unlock () {\n        this._lockFlag = false;\n        this.setProp(...this._reqQ);\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * This acts as getter and setter. If the function is called by passing only one argument, it retrieve the value\n     * associated with the property. If the same function is called using two parameters, first one being the property\n     * and second one being the value, then the value is set for the property and the handlers are called (if any)\n     * which got registered using the on function\n     *\n     * Getter\n     * @param {string} prop property path whose value to be retrieved\n     * @return {Object} value of the property at the time of call\n     *\n     * Setter\n     * @param {string} property property path whose value to be ser\n     * @return {Model} instance of the model\n     */\n    prop (...params) {\n        let prop,\n            val,\n            len;\n\n        switch (len = params.length) {\n        case 1:\n            prop = params[0];\n            break;\n\n        case 2:\n            prop = params[0];\n            val = params[1];\n            break;\n\n        default:\n            return this;\n        }\n\n        if (len === 2) {\n            this._lockFlag ? this._reqQ.push([prop, val]) : this.setProp([prop, val]);\n            return this;\n        }\n\n        return this._graph.getNodeValue(prop);\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    setProp (...props) {\n        // Filter out the calculated variables, so that it cant be changed from outside\n        // @todo if a node is not leafValue, and change is called, ignore it too\n        // props = props.filter(prop => !(VirtualObj.walkTill(prop[0].split('.'), this._vObj).leafValue()\n        //     instanceof CalculatedVar));\n\n        if (props.length === 0) {\n            return this;\n        }\n\n        this._graph.update(...props.map(prop => [this._graph.getNodeFromQualifiedName(prop[0]), prop[1]]));\n        return this;\n    }\n\n    /**\n     * Retrieves the graph representation of the object\n     * @return {Graph} instance of the graph associated to the model\n     */\n    graph () {\n        return this._graph;\n    }\n\n    /**\n     * Get serialized data from the model\n     *\n     * @return {Object} Serialized data\n     */\n    serialize () {\n        return this._graph.root.seed;\n    }\n}\n\nexport default Model;\n","import Model from './model';\n\nexport default Model;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar _containerManager = require('./container-manager');\n\nvar _containerManager2 = _interopRequireDefault(_containerManager);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    M = slLib.win.Math,\n    max = M.max,\n    round = M.round,\n    BLANK = '',\n    htmlSplCharSpace = { ' ': '&nbsp;' },\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\n/*\n * Create new instance of SmartLabelManager.\n *\n * SmartLabelManager controls the lifetime of the execution space where the text's metrics will be calculated.\n * This takes a string for a given style and returns the height, width.\n * If a bound box is defined it wraps the text and returns the wrapped height and width.\n * It allows to append ellipsis at the end if the text is truncated.\n *\n * @param {String | Number} id - Id of the instance. If the same id is passed, it disposes the old instance and\n *                              save the new one;\n * @param {String | HTMLElement} container - The id or the instance of the container where the intermediate dom\n *                              elements are to be attached. If not passed, it appends in div\n *\n * @param {Boolean} useEllipses - This decides if a ellipses to be appended if the text is truncated.\n * @param {Object} options - Control options\n *                          {\n *                              maxCacheLimit: No of letter to be cached. Default: 500.\n *                          }\n * @constructor\n */\nfunction SmartLabelManager(id, container, useEllipses, options) {\n    var wrapper,\n        prop,\n        max,\n        prevInstance,\n        isBrowserLess = false,\n        store = SmartLabelManager.store;\n\n    if (typeof id === 'undefined' || typeof id === 'object') {\n        return;\n    }\n\n    if (prevInstance = store[id]) {\n        prevInstance.dispose();\n    }\n\n    store[id] = this;\n    options = options || {};\n    options.maxCacheLimit = isFinite(max = options.maxCacheLimit) ? max : slLib.maxDefaultCacheLimit;\n\n    if (typeof container === 'string') {\n        container = doc.getElementById(container);\n    }\n\n    wrapper = slLib.createContainer(container);\n    wrapper.innerHTML = slLib.testStrAvg;\n\n    if (documentSupport.isHeadLess || !documentSupport.isIE && !wrapper.offsetHeight && !wrapper.offsetWidth) {\n        isBrowserLess = true;\n    }\n\n    wrapper.innerHTML = '';\n    for (prop in slLib.parentContainerStyle) {\n        wrapper.style[prop] = slLib.parentContainerStyle[prop];\n    }\n\n    this.id = id;\n    this.parentContainer = wrapper;\n\n    this._containerManager = new _containerManager2['default'](wrapper, isBrowserLess, 10);\n    this._showNoEllipses = !useEllipses;\n    this._init = true;\n    this.style = {};\n    this.options = options;\n\n    this.setStyle();\n}\n\n/*\n * getSmartText returns the text separated by <br/> whenever a break is necessary. This is to recgonize one\n * generalized format independent of the implementation (canvas based solution, svg based solution). This method\n * converts the output of getSmartText().text to array of lines if the text is wrapped. It sets a named property\n * `lines` on the object passed as parameter.\n *\n * @param {Object} smartlabel - the object returned by getSmartText based on which line arr which to be formed.\n *\n * @return {Object} - The same object which was passed in the arguments. Also a named property `lines` is set.\n */\nSmartLabelManager.textToLines = function (smartlabel) {\n    smartlabel = smartlabel || {};\n\n    if (!smartlabel.text) {\n        smartlabel.text = '';\n    } else if (typeof smartlabel.text !== 'string') {\n        smartlabel.text = smartlabel.text.toString();\n    }\n\n    smartlabel.lines = smartlabel.text.split(/\\n|<br\\s*?\\/?>/ig);\n    return smartlabel;\n};\n\n// Saves all the instance created so far\nSmartLabelManager.store = {};\n\n// Calculates space taken by a character with an approximation value which is calculated by repeating the\n// character by string length times.\nSmartLabelManager.prototype._calCharDimWithCache = function (text, calculateDifference, length) {\n    if (!this._init) {\n        return false;\n    }\n\n    var size,\n        csArr,\n        tw,\n        twi,\n        cachedStyle,\n        asymmetricDifference,\n        maxAdvancedCacheLimit = this.options.maxCacheLimit,\n        container = this._container,\n        style = this.style || {},\n        cache = this._advancedCache || (this._advancedCache = {}),\n        advancedCacheKey = this._advancedCacheKey || (this._advancedCacheKey = []),\n        cacheName = text + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK),\n        cacheInitName = text + 'init' + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK);\n\n    htmlSplCharSpace[text] && (text = htmlSplCharSpace[text]);\n\n    if (!calculateDifference) {\n        asymmetricDifference = 0;\n    } else {\n        if ((asymmetricDifference = cache[cacheInitName]) === undefined) {\n            container.innerHTML = text.repeat ? text.repeat(length) : Array(length + 1).join(text); // jshint ignore:line\n            tw = container.offsetWidth;\n\n            container.innerHTML = text;\n            twi = container.offsetWidth;\n\n            asymmetricDifference = cache[cacheInitName] = (tw - length * twi) / (length + 1);\n            advancedCacheKey.push(cacheInitName);\n            if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n                delete cache[advancedCacheKey.shift()];\n            }\n        }\n    }\n\n    if (cachedStyle = cache[cacheName]) {\n        csArr = cachedStyle.split(',');\n        return {\n            width: parseFloat(csArr[0], 10),\n            height: parseFloat(csArr[1], 10)\n        };\n    }\n\n    container.innerHTML = text;\n\n    size = {\n        height: container.offsetHeight,\n        width: container.offsetWidth + asymmetricDifference\n    };\n\n    cache[cacheName] = size.width + ',' + size.height;\n    advancedCacheKey.push(cacheName);\n    if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n        delete cache[advancedCacheKey.shift()];\n    }\n\n    return size;\n};\n\n// Provide function to calculate the height and width based on the environment and available support from dom.\nSmartLabelManager.prototype._getWidthFn = function () {\n    var contObj = this._containerObj,\n        container = this._container,\n        svgText = contObj.svgText;\n\n    if (svgText) {\n        return function (str) {\n            var bbox, width;\n\n            svgText.textContent = str;\n            bbox = svgText.getBBox();\n            width = bbox.width - SVG_BBOX_CORRECTION;\n            if (width < 1) {\n                width = bbox.width;\n            }\n\n            return width;\n        };\n    } else {\n        return function (str) {\n            container.innerHTML = str;\n            return container.offsetWidth;\n        };\n    }\n};\n\n/*\n * Sets the style based on which the text's metrics to be calculated.\n *\n * @param {Object} style - The style object which affects the text size\n *                      {\n *                          fontSize / 'font-size' : MUST BE FOLLOWED BY PX (10px, 11px)\n *                          fontFamily / 'font-family'\n *                          fontWeight / 'font-weight'\n *                          fontStyle / 'font-style'\n *                      }\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.setStyle = function (style) {\n    if (!this._init) {\n        return this;\n    }\n\n    var sCont;\n\n    if (style === this.style && !this._styleNotSet) {\n        return;\n    }\n\n    if (!style) {\n        style = this.style;\n    }\n\n    slLib.setLineHeight(style);\n    this.style = style;\n\n    this._containerObj = sCont = this._containerManager.get(style);\n\n    if (this._containerObj) {\n        this._container = sCont.node;\n        this._context = sCont.context;\n        this._cache = sCont.charCache;\n        this._lineHeight = sCont.lineHeight;\n        this._styleNotSet = false;\n    } else {\n        this._styleNotSet = true;\n    }\n\n    return this;\n};\n\n/*\n * Decides whether ellipses to be shown if the node is truncated\n *\n * @param {Boolean} useEllipses - decides if a ellipses to be appended if the text is truncated. Default: false\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.useEllipsesOnOverflow = function (useEllipses) {\n    if (!this._init) {\n        return this;\n    }\n    this._showNoEllipses = !useEllipses;\n    return this;\n};\n\n/*\n * Get wrapped or truncated text if a bound box is defined around it. The result text would be separated by <br/>\n * if wrapped\n *\n * @param {String} text - the subject text\n * @param {Number} maxWidth - width in px of the the bound box\n * @param {Number} maxHeight - height in px of the the bound box\n * @param {Boolean} noWrap - whether the text to be wrapped. Default false.\n *\n * @return {Object} - The metrics of the text bounded by the box\n *                  {\n *                      height : height of the wrapped text\n *                      width : width of the wrapped text\n *                      isTruncated : whether the text is truncated\n *                      maxHeight : Maximum height given\n *                      maxWidth : Maximum width given\n *                      oriText : Original text sent\n *                      oriTextHeight : Original text height\n *                      oriTextWidth : Original text width\n *                      text : SMART TEXT\n *                  }\n */\nSmartLabelManager.prototype.getSmartText = function (text, maxWidth, maxHeight, noWrap) {\n    if (!this._init) {\n        return false;\n    }\n\n    if (text === undefined || text === null) {\n        text = '';\n    } else if (typeof text !== 'string') {\n        text = text.toString();\n    }\n\n    var len,\n        trimStr,\n        tempArr,\n        tmpText,\n        maxWidthWithEll,\n        toolText,\n        oriWidth,\n        oriHeight,\n        newCharIndex,\n        nearestChar,\n        tempChar,\n        getWidth,\n        initialLeft,\n        initialTop,\n        getOriSizeImproveObj,\n        spanArr,\n        x,\n        y,\n        minWidth,\n        elem,\n        chr,\n        elemRightMostPoint,\n        elemLowestPoint,\n        lastBR,\n        removeFromIndex,\n        removeFromIndexForEllipses,\n        hasHTMLTag = false,\n        maxStrWidth = 0,\n        lastDash = -1,\n        lastSpace = -1,\n        lastIndexBroken = -1,\n        strWidth = 0,\n        strHeight = 0,\n        oriTextArr = [],\n        i = 0,\n        ellipsesStr = this._showNoEllipses ? '' : '...',\n        lineHeight = this._lineHeight,\n        context = this._context,\n        container = this._container,\n        sCont = this._containerObj,\n        ellipsesWidth = sCont.ellipsesWidth,\n        dotWidth = sCont.dotWidth,\n        characterArr = [],\n        dashIndex = -1,\n        spaceIndex = -1,\n        lastLineBreak = -1,\n        fastTrim = function fastTrim(str) {\n        str = str.replace(/^\\s\\s*/, '');\n        var ws = /\\s/,\n            i = str.length;\n        while (ws.test(str.charAt(i -= 1))) {/* jshint noempty:false */}\n        return str.slice(0, i + 1);\n    },\n        smartLabel = {\n        text: text,\n        maxWidth: maxWidth,\n        maxHeight: maxHeight,\n        width: null,\n        height: null,\n        oriTextWidth: null,\n        oriTextHeight: null,\n        oriText: text,\n        isTruncated: false\n    };\n\n    getWidth = this._getWidthFn();\n\n    // In some browsers, offsetheight of a single-line text is getting little (1 px) heigher value of the\n    // lineheight. As a result, smartLabel is unable to return single-line text.\n    // To fix this, increase the maxHeight a little amount. Hence maxHeight =  lineHeight * 1.2\n    if (maxHeight === lineHeight) {\n        maxHeight *= 1.2;\n    }\n\n    if (container) {\n        if (!documentSupport.isBrowserLess) {\n            hasHTMLTag = slLib.xmlTagRegEx.test(text);\n            if (!hasHTMLTag) {\n                // Due to support of <,> for xml we convert &lt;, &gt; to <,> respectively so to get the correct\n                // width it is required to convert the same before calculation for the new improve version of the\n                // get text width.\n                tmpText = text.replace(slLib.ltgtRegex, function (match) {\n                    return match === '&lt;' ? '<' : '>';\n                });\n                getOriSizeImproveObj = this.getOriSize(tmpText, true);\n\n                smartLabel.oriTextWidth = oriWidth = getOriSizeImproveObj.width;\n                smartLabel.oriTextHeight = oriHeight = getOriSizeImproveObj.height;\n            } else {\n                container.innerHTML = text;\n                smartLabel.oriTextWidth = oriWidth = container.offsetWidth;\n                smartLabel.oriTextHeight = oriHeight = container.offsetHeight;\n            }\n\n            if (oriHeight <= maxHeight && oriWidth <= maxWidth) {\n                smartLabel.width = smartLabel.oriTextWidth = oriWidth;\n                smartLabel.height = smartLabel.oriTextHeight = oriHeight;\n                return smartLabel;\n            }\n\n            if (lineHeight > maxHeight) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = 0;\n                smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            }\n        }\n\n        // Calculate width with ellipses\n        text = fastTrim(text).replace(/(\\s+)/g, ' ');\n        maxWidthWithEll = this._showNoEllipses ? maxWidth : maxWidth - ellipsesWidth;\n\n        if (!hasHTMLTag) {\n            oriTextArr = text.split('');\n            len = oriTextArr.length;\n            trimStr = '', tempArr = [];\n            tempChar = oriTextArr[0];\n\n            if (this._cache[tempChar]) {\n                minWidth = this._cache[tempChar].width;\n            } else {\n                minWidth = getWidth(tempChar);\n                this._cache[tempChar] = { width: minWidth };\n            }\n\n            if (maxWidthWithEll > minWidth) {\n                tempArr = text.substr(0, slLib.getNearestBreakIndex(text, maxWidthWithEll, this)).split('');\n                i = tempArr.length;\n            } else if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            } else if (ellipsesStr) {\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            strWidth = getWidth(tempArr.join(''));\n            strHeight = this._lineHeight;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                            smartLabel.tooltext = smartLabel.oriText;\n                            smartLabel.width = getWidth(smartLabel.text);\n                            smartLabel.height = this._lineHeight;\n                            return smartLabel;\n                        }\n                    }\n                }\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = strWidth;\n                smartLabel.height = this._lineHeight;\n                return smartLabel;\n            } else {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (tempChar === ' ' && !context) {\n                        tempChar = '&nbsp;';\n                    }\n\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            /** @todo use regular expressions for better performance. */\n                            lastSpace = text.substr(0, tempArr.length).lastIndexOf(' ');\n                            lastDash = text.substr(0, tempArr.length).lastIndexOf('-');\n                            if (lastSpace > lastIndexBroken) {\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                tempArr.splice(lastSpace, 1, '<br/>');\n                                lastIndexBroken = lastSpace;\n                                newCharIndex = lastSpace + 1;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === tempArr.length - 1) {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '<br/>-');\n                                } else {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '-<br/>');\n                                }\n                                lastIndexBroken = lastDash;\n                                newCharIndex = lastDash + 1;\n                            } else {\n                                tempArr.splice(tempArr.length - 1, 1, '<br/>' + oriTextArr[i]);\n                                lastLineBreak = tempArr.length - 2;\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastLineBreak + 1).join(''));\n                                lastIndexBroken = lastLineBreak;\n                                newCharIndex = i;\n                            }\n                            strHeight += this._lineHeight;\n                            if (strHeight > maxHeight) {\n                                smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                                smartLabel.tooltext = smartLabel.oriText;\n                                // The max width among all the lines will be the width of the string.\n                                smartLabel.width = maxWidth;\n                                smartLabel.height = strHeight - this._lineHeight;\n                                return smartLabel;\n                            } else {\n                                maxStrWidth = max(maxStrWidth, strWidth);\n                                trimStr = null;\n                                nearestChar = slLib.getNearestBreakIndex(text.substr(newCharIndex), maxWidthWithEll, this);\n                                strWidth = getWidth(text.substr(newCharIndex, nearestChar || 1));\n                                if (tempArr.length < newCharIndex + nearestChar) {\n                                    tempArr = tempArr.concat(text.substr(tempArr.length, newCharIndex + nearestChar - tempArr.length).split(''));\n                                    i = tempArr.length - 1;\n                                }\n                            }\n                        }\n                    }\n                }\n\n                maxStrWidth = max(maxStrWidth, strWidth);\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = maxStrWidth;\n                smartLabel.height = strHeight;\n                return smartLabel;\n            }\n        } else {\n            toolText = text.replace(slLib.spanAdditionRegx, '$2');\n            text = text.replace(slLib.spanAdditionRegx, slLib.spanAdditionReplacer);\n            text = text.replace(/(<br\\s*\\/*\\>)/g, '<span class=\"' + [slLib.classNameWithTag, ' ', slLib.classNameWithTagBR].join('') + '\">$1</span>');\n\n            container.innerHTML = text;\n\n            spanArr = container[documentSupport.childRetriverFn](documentSupport.childRetriverString);\n\n            for (x = 0, y = spanArr.length; x < y; x += 1) {\n                elem = spanArr[x];\n                //chech whether this span is temporary inserted span from it's class\n                if (documentSupport.noClassTesting || slLib.classNameReg.test(elem.className)) {\n                    chr = elem.innerHTML;\n                    if (chr !== '') {\n                        if (chr === ' ') {\n                            spaceIndex = characterArr.length;\n                        } else if (chr === '-') {\n                            dashIndex = characterArr.length;\n                        }\n\n                        characterArr.push({\n                            spaceIdx: spaceIndex,\n                            dashIdx: dashIndex,\n                            elem: elem\n                        });\n                        oriTextArr.push(chr);\n                    }\n                }\n            }\n\n            i = 0;\n            len = characterArr.length;\n            minWidth = characterArr[0].elem.offsetWidth;\n\n            if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n\n                return smartLabel;\n            } else if (minWidth > maxWidthWithEll && !this._showNoEllipses) {\n\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            initialLeft = characterArr[0].elem.offsetLeft;\n            initialTop = characterArr[0].elem.offsetTop;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n                        if (container.offsetWidth > maxWidth) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            } else {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemLowestPoint = elem.offsetHeight + (elem.offsetTop - initialTop);\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    lastBR = null;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n\n                        if (elemRightMostPoint > maxWidth) {\n                            lastSpace = characterArr[i].spaceIdx;\n                            lastDash = characterArr[i].dashIdx;\n                            if (lastSpace > lastIndexBroken) {\n                                characterArr[lastSpace].elem.innerHTML = '<br/>';\n                                lastIndexBroken = lastSpace;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === i) {\n                                    // in case the overflowing character itself is the '-'\n                                    characterArr[lastDash].elem.innerHTML = '<br/>-';\n                                } else {\n                                    characterArr[lastDash].elem.innerHTML = '-<br/>';\n                                }\n                                lastIndexBroken = lastDash;\n                            } else {\n                                elem.parentNode.insertBefore(lastBR = doc.createElement('br'), elem);\n                            }\n\n                            //check whether this break made current element outside the area height\n                            if (elem.offsetHeight + elem.offsetTop > maxHeight) {\n                                //remove the lastly inserted line break\n                                if (lastBR) {\n                                    lastBR.parentNode.removeChild(lastBR);\n                                } else if (lastIndexBroken === lastDash) {\n                                    characterArr[lastDash].elem.innerHTML = '-';\n                                } else {\n                                    characterArr[lastSpace].elem.innerHTML = ' ';\n                                }\n                                removeFromIndex = i;\n                                //break the looping condition\n                                i = len;\n                            } else {\n                                removeFromIndexForEllipses = null;\n                            }\n                        }\n                    } else {\n                        //check whether this break made current element outside the area height\n                        if (elemLowestPoint > maxHeight) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            }\n\n            if (removeFromIndex < len) {\n                //set the trancated property of the smartlabel\n                smartLabel.isTruncated = true;\n\n                /** @todo is this really needed? */\n                removeFromIndexForEllipses = removeFromIndexForEllipses ? removeFromIndexForEllipses : removeFromIndex;\n\n                for (i = len - 1; i >= removeFromIndexForEllipses; i -= 1) {\n                    elem = characterArr[i].elem;\n                    //chech whether this span is temporary inserted span from it's class\n                    elem.parentNode.removeChild(elem);\n                }\n\n                for (; i >= 0; i -= 1) {\n                    elem = characterArr[i].elem;\n                    if (slLib.classNameBrReg.test(elem.className)) {\n                        //chech whether this span is temporary inserted span from it's class\n                        elem.parentNode.removeChild(elem);\n                    } else {\n                        i = 0;\n                    }\n                }\n            }\n\n            //get the smart text\n            smartLabel.text = container.innerHTML.replace(slLib.spanRemovalRegx, '$1').replace(/\\&amp\\;/g, '&');\n            if (smartLabel.isTruncated) {\n                smartLabel.text += ellipsesStr;\n                smartLabel.tooltext = toolText;\n            }\n        }\n\n        smartLabel.height = container.offsetHeight;\n        smartLabel.width = container.offsetWidth;\n\n        return smartLabel;\n    } else {\n        smartLabel.error = new Error('Body Tag Missing!');\n        return smartLabel;\n    }\n};\n\n/*\n * Get the height and width of a text.\n *\n * @param {String} text - Text whose metrics to be measured\n * @param {Boolean} Optional detailedCalculationFlag - this flag if set it calculates per letter position\n *                          information and returns it. Ideally you dont need it unless you want to post process the\n *                          string. And its an EXPENSIVE OPERATION.\n *\n * @return {Object} - If detailedCalculationFlag is set to true the returned object would be\n *                  {\n *                      height: height of the text\n *                      width: width of the text\n *                      detailObj: detail calculation of letters in the format {lettername: width}\n *                  }\n *                  If detailedCalculationFlag is set to false the returned object wont have the detailObj prop.\n */\nSmartLabelManager.prototype.getOriSize = function (text, detailedCalculationFlag) {\n    if (!this._init) {\n        return false;\n    }\n\n    var textArr,\n        letter,\n        lSize,\n        i,\n        l,\n        cumulativeSize = 0,\n        height = 0,\n        indiSizeStore = {};\n\n    if (!detailedCalculationFlag) {\n        return this._calCharDimWithCache(text);\n    }\n\n    // Calculate the width of every letter with an approximation\n    textArr = text.split('');\n    for (i = 0, l = textArr.length; i < l; i++) {\n        letter = textArr[i];\n        lSize = this._calCharDimWithCache(letter, true, textArr.length);\n        height = max(height, lSize.height);\n        cumulativeSize += lSize.width;\n        indiSizeStore[letter] = lSize.width;\n    }\n\n    return {\n        width: round(cumulativeSize),\n        height: height,\n        detailObj: indiSizeStore\n    };\n};\n\n/*\n * Dispose the container and object allocated by the smartlabel\n */\nSmartLabelManager.prototype.dispose = function () {\n    if (!this._init) {\n        return this;\n    }\n\n    this._containerManager && this._containerManager.dispose && this._containerManager.dispose();\n\n    delete this._container;\n    delete this._context;\n    delete this._cache;\n    delete this._containerManager;\n    delete this._containerObj;\n    delete this.id;\n    delete this.style;\n    delete this.parentContainer;\n    delete this._showNoEllipses;\n\n    return this;\n};\n\nexports['default'] = SmartLabelManager;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\nvar lib = {\n\tinit: function init(win) {\n\t\tvar doc = win.document,\n\t\t    nav = win.navigator,\n\t\t    userAgent = nav.userAgent,\n\t\t    DIV = 'DIV',\n\t\t    ceil = Math.ceil,\n\t\t    floor = Math.floor,\n\t\t    containerInstanceCount = 0,\n\t\t    clsNameSpace = 'fusioncharts-smartlabel-',\n\t\t    containerClass = clsNameSpace + 'container',\n\t\t    classNameWithTag = clsNameSpace + 'tag',\n\t\t    classNameWithTagBR = clsNameSpace + 'br';\n\n\t\tlib = {\n\t\t\twin: win,\n\n\t\t\tcontainerClass: containerClass,\n\n\t\t\tclassNameWithTag: classNameWithTag,\n\n\t\t\tclassNameWithTagBR: classNameWithTagBR,\n\n\t\t\tmaxDefaultCacheLimit: 500,\n\n\t\t\tclassNameReg: new RegExp('\\b' + classNameWithTag + '\\b'),\n\n\t\t\tclassNameBrReg: new RegExp('\\b' + classNameWithTagBR + '\\b'),\n\n\t\t\tspanAdditionRegx: /(<[^<\\>]+?\\>)|(&(?:[a-z]+|#[0-9]+);|.)/ig,\n\n\t\t\tspanAdditionReplacer: '$1<span class=\"' + classNameWithTag + '\">$2</span>',\n\n\t\t\tspanRemovalRegx: new RegExp('\\\\<span[^\\\\>]+?' + classNameWithTag + '[^\\\\>]{0,}\\\\>(.*?)\\\\<\\\\/span\\\\>', 'ig'),\n\n\t\t\txmlTagRegEx: new RegExp('<[^>][^<]*[^>]+>', 'i'),\n\n\t\t\tltgtRegex: /&lt;|&gt;/g,\n\n\t\t\tbrReplaceRegex: /<br\\/>/ig,\n\n\t\t\ttestStrAvg: 'WgI',\n\n\t\t\t// This style is applied over the parent smartlabel container. The container is kept hidden from the viewport\n\t\t\tparentContainerStyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: '-9999em',\n\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\tpadding: '0px',\n\t\t\t\twidth: '1px',\n\t\t\t\theight: '1px',\n\t\t\t\toverflow: 'hidden'\n\t\t\t},\n\n\t\t\t// All the style which might affect the text metrics\n\t\t\tsupportedStyle: {\n\t\t\t\tfont: 'font',\n\t\t\t\tfontFamily: 'font-family',\n\t\t\t\t'font-family': 'font-family',\n\t\t\t\tfontWeight: 'font-weight',\n\t\t\t\t'font-weight': 'font-weight',\n\t\t\t\tfontSize: 'font-size',\n\t\t\t\t'font-size': 'font-size',\n\t\t\t\tlineHeight: 'line-height',\n\t\t\t\t'line-height': 'line-height',\n\t\t\t\tfontStyle: 'font-style',\n\t\t\t\t'font-style': 'font-style'\n\t\t\t},\n\n\t\t\t// Get the support list for html the document where the text calcution is to be done.\n\t\t\tgetDocumentSupport: function getDocumentSupport() {\n\t\t\t\tvar childRetriverFn, childRetriverString, noClassTesting;\n\n\t\t\t\tif (doc.getElementsByClassName) {\n\t\t\t\t\tchildRetriverFn = 'getElementsByClassName';\n\t\t\t\t\tchildRetriverString = classNameWithTag;\n\t\t\t\t\tnoClassTesting = true;\n\t\t\t\t} else {\n\t\t\t\t\tchildRetriverFn = 'getElementsByTagName';\n\t\t\t\t\tchildRetriverString = 'span';\n\t\t\t\t\tnoClassTesting = false;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tisIE: /msie/i.test(userAgent) && !win.opera,\n\t\t\t\t\thasSVG: Boolean(win.SVGAngle || doc.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1')),\n\t\t\t\t\tisHeadLess: new RegExp(' HtmlUnit').test(userAgent),\n\t\t\t\t\tisWebKit: new RegExp(' AppleWebKit/').test(userAgent),\n\t\t\t\t\tchildRetriverFn: childRetriverFn,\n\t\t\t\t\tchildRetriverString: childRetriverString,\n\t\t\t\t\tnoClassTesting: noClassTesting\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/*\n    * Create a html div element and attach it with a parent. All the subsequent operations are performed\n    * by upding this dom tree only.\n    *\n    * @param {HTMLElement} - The html element where the newly created div is to be attached. If not passed,\n    *                      the new div is appended on the body.\n    */\n\t\t\tcreateContainer: function createContainer(containerParent) {\n\t\t\t\tvar body, container;\n\n\t\t\t\tif (containerParent && (containerParent.offsetWidth || containerParent.offsetHeight)) {\n\t\t\t\t\tif (containerParent.appendChild) {\n\t\t\t\t\t\tcontainerParent.appendChild(container = doc.createElement(DIV));\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbody = doc.getElementsByTagName('body')[0];\n\n\t\t\t\t\tif (body && body.appendChild) {\n\t\t\t\t\t\tcontainer = doc.createElement(DIV);\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\tcontainerInstanceCount += 1;\n\t\t\t\t\t\tbody.appendChild(container);\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Finds a approximate position where the text is to be broken\n\t\t\tgetNearestBreakIndex: function getNearestBreakIndex(text, maxWidth, sl) {\n\t\t\t\tif (!text || !text.length) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tvar difference,\n\t\t\t\t    getWidth = sl._getWidthFn(),\n\t\t\t\t    charLen = 0,\n\t\t\t\t    increment = 0,\n\t\t\t\t    oriWidth = getWidth(text),\n\t\t\t\t    avgWidth = oriWidth / text.length;\n\n\t\t\t\tdifference = maxWidth;\n\t\t\t\tcharLen = ceil(maxWidth / avgWidth);\n\n\t\t\t\tif (oriWidth < maxWidth) {\n\t\t\t\t\treturn text.length - 1;\n\t\t\t\t}\n\n\t\t\t\tif (charLen > text.length) {\n\t\t\t\t\tdifference = maxWidth - oriWidth;\n\t\t\t\t\tcharLen = text.length;\n\t\t\t\t}\n\n\t\t\t\twhile (difference > 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twhile (difference < 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn charLen;\n\t\t\t},\n\n\t\t\t/*\n    * Determine lineheight of a text for a given style. It adds propery lineHeight to the style passed\n    *\n    * @param {Object} - The style based on which the text's metric needs to be calculated. The calculation happens\n    *                  based on fontSize property, if its not present a default font size is assumed.\n    *\n    * @return {Object} - The style that was passed with lineHeight as a named propery set on the object.\n    */\n\t\t\tsetLineHeight: function setLineHeight(styleObj) {\n\t\t\t\tvar fSize = styleObj.fontSize = styleObj.fontSize || '12px';\n\t\t\t\tstyleObj.lineHeight = styleObj.lineHeight || styleObj['line-height'] || parseInt(fSize, 10) * 1.2 + 'px';\n\t\t\t\treturn styleObj;\n\t\t\t}\n\t\t};\n\n\t\treturn lib;\n\t}\n};\n\nexports['default'] = lib;\nmodule.exports = exports['default'];","const Muze = require('./muze');\n\nmodule.exports = Muze.default ? Muze.default : Muze;\n","'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\nfunction ContainerManager(parentContainer, isBrowserLess, maxContainers) {\n    var svg;\n\n    maxContainers = maxContainers > 5 ? maxContainers : 5;\n    maxContainers = maxContainers < 20 ? maxContainers : 20;\n\n    this.maxContainers = maxContainers;\n    this.first = null;\n    this.last = null;\n    this.containers = {};\n    this.length = 0;\n    this.rootNode = parentContainer;\n\n    if (isBrowserLess) {\n        svg = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'xlink', 'http://www.w3.org/1999/xlink');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'height', '0');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'width', '0');\n        this.svgRoot = svg;\n        this.rootNode.appendChild(svg);\n    }\n}\n\nContainerManager.prototype.get = function (style) {\n    var diff,\n        key,\n        containerObj,\n        containers = this.containers,\n        len = this.length,\n        max = this.maxContainers,\n        keyStr = '';\n\n    for (key in slLib.supportedStyle) {\n        if (style[key] !== undefined) {\n            keyStr += slLib.supportedStyle[key] + ':' + style[key] + ';';\n        }\n    }\n\n    if (!keyStr) {\n        return false;\n    }\n\n    if (containerObj = containers[keyStr]) {\n        if (this.first !== containerObj) {\n            containerObj.prev && (containerObj.prev.next = containerObj.next);\n            containerObj.next && (containerObj.next.prev = containerObj.prev);\n            containerObj.next = this.first;\n            containerObj.next.prev = containerObj;\n            this.last === containerObj && (this.last = containerObj.prev);\n            containerObj.prev = null;\n            this.first = containerObj;\n        }\n    } else {\n        if (len >= max) {\n            diff = len - max + 1;\n            // +1 is to remove an extra entry to make space for the new container to be added.\n            while (diff--) {\n                this.removeContainer(this.last);\n            }\n        }\n        containerObj = this.addContainer(keyStr);\n    }\n\n    return containerObj;\n};\n\nContainerManager.prototype.addContainer = function (keyStr) {\n    var node, container;\n\n    this.containers[keyStr] = container = {\n        next: null,\n        prev: null,\n        node: null,\n        ellipsesWidth: 0,\n        lineHeight: 0,\n        dotWidth: 0,\n        avgCharWidth: 4,\n        keyStr: keyStr,\n        charCache: {}\n    };\n\n    // Since the container objects are arranged from most recent to least recent order, we need to add the new\n    // object at the beginning of the list.\n    container.next = this.first;\n    container.next && (container.next.prev = container);\n    this.first = container;\n    if (!this.last) {\n        this.last = container;\n    }\n    this.length += 1;\n\n    node = container.node = doc.createElement('div');\n    this.rootNode.appendChild(node);\n\n    if (documentSupport.isIE && !documentSupport.hasSVG) {\n        node.style.setAttribute('cssText', keyStr);\n    } else {\n        node.setAttribute('style', keyStr);\n    }\n\n    node.setAttribute('aria-hidden', 'true');\n    node.setAttribute('role', 'presentation');\n    node.style.display = 'inline-block';\n\n    node.innerHTML = slLib.testStrAvg; // A test string.\n    container.lineHeight = node.offsetHeight;\n    container.avgCharWidth = node.offsetWidth / 3;\n\n    if (documentSupport.isBrowserLess) {\n        node = container.svgText = doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n        node.setAttribute('style', keyStr);\n        this.svgRoot.appendChild(node);\n\n        node.textContent = slLib.testStrAvg; // A test string.\n        container.lineHeight = node.getBBox().height;\n        container.avgCharWidth = (node.getBBox().width - SVG_BBOX_CORRECTION) / 3;\n\n        node.textContent = '...';\n        container.ellipsesWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n        node.textContent = '.';\n        container.dotWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n    } else {\n        node.innerHTML = '...';\n        container.ellipsesWidth = node.offsetWidth;\n        node.innerHTML = '.';\n        container.dotWidth = node.offsetWidth;\n        node.innerHTML = '';\n    }\n\n    return container;\n};\n\nContainerManager.prototype.removeContainer = function (cObj) {\n    var keyStr = cObj.keyStr;\n\n    if (!keyStr || !this.length || !cObj) {\n        return;\n    }\n    this.length -= 1;\n\n    cObj.prev && (cObj.prev.next = cObj.next);\n    cObj.next && (cObj.next.prev = cObj.prev);\n    this.first === cObj && (this.first = cObj.next);\n    this.last === cObj && (this.last = cObj.prev);\n\n    cObj.node.parentNode.removeChild(cObj.node);\n\n    delete this.containers[keyStr];\n};\n\nContainerManager.prototype.dispose = function () {\n    var key,\n        containers = this.containers;\n\n    this.maxContainers = null;\n    for (key in containers) {\n        this.removeContainer(containers[key]);\n    }\n\n    this.rootNode.parentNode.removeChild(this.rootNode);\n\n    this.rootNode = null;\n    this.first = null;\n    this.last = null;\n};\n\nmodule.exports = ContainerManager;","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  scale.invertExtent = function(r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1, a, b, t,\n        hiIndex;\n    values.push(values[n] + this.step());\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo));\n    hiIndex = getClosestIndexOf(values, hi);\n    b = lo===hi ? a : Math.max(a, hiIndex - 1);\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    if (reverse) t = a, a = n - b, b = n - t; // map + swap\n    return (a > b) ? undefined : domain().slice(a, b+1);\n  };\n\n  scale.invert = function (r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1,\n        a,\n        t;\n\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo, 'left'));\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    return domain()[reverse ? n - a : a];\n  }\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n\nfunction getClosestIndexOf (arr, value, side) {\n  var low = 0,\n      arrLen = arr.length,\n      high = arrLen - 1,\n      highVal,\n      mid,\n      d1,\n      d2;\n\n  while (low < high) {\n      mid = Math.floor((low + high) / 2);\n      d1 = Math.abs(arr[mid] - value);\n      d2 = Math.abs(arr[mid + 1] - value);\n\n      if (d2 <= d1) {\n          low = mid + 1;\n      }\n      else {\n          high = mid;\n      }\n  }\n\n  if (!side) {\n      return high;\n  }\n\n  highVal = arr[high];\n  if (highVal === value) {\n      return high;\n  } else if (highVal > value) {\n      if (high === 0) { return high; }\n      return side === 'left'? high - 1 : high;\n  } else {\n      if (high === arr.length - 1) { return high; }\n      return side === 'left'? high : high + 1;\n  }\n}","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute} from \"./duration\";\n\nvar hour = interval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","export default function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n}\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"./colors\";\n\nexport default colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n","import colors from \"./colors\";\n\nexport default colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}\n","import colors from \"./colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export const UNIT_GLOBAL_NAMESPACE = 'app.units';\nexport const UNIT_LOCAL_NAMESPACE = 'local.units';\nexport const LAYER_LOCAL_NAMESPACE = 'local.layers';\nexport const LAYER_GLOBAL_NAMESPACE = 'app.layers';\nexport const GROUP_GLOBAL_NAMESPACE = 'app.group';\nexport const GROUP_LOCAL_NAMESPACE = 'local.group';\nexport const CANVAS_LOCAL_NAMESPACE = 'local.canvas';\nexport const CANVAS_GLOBAL_NAMESPACE = 'app.canvas';\n\n","const ReservedFields = {\n    ROW_ID: '__id__'\n};\n\nexport default ReservedFields;\n","const CommonProps = {\n    ACTION_INF: 'actionInf',\n    ON_LAYER_DRAW: 'onLayerDraw',\n    MATRIX_CREATED: 'matrixCreated'\n};\n\nexport default CommonProps;\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickTransform = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"))\n        .style('transform', tickTransform);\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.tickTransform = function(_) {\n    return arguments.length ? (tickTransform = _, axis) : tickTransform;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","export var slice = Array.prototype.slice;\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","/**\n * This class represents a selection applied on a data array.\n *\n * @class Selection\n */\nclass Selection {\n    /**\n     * Creates an instance of Selection.\n     * @param {Array<DataObject>} data Array of DataObjects.\n     * @memberof Selection\n     */\n    constructor () {\n        this._data = [];\n        // // map of id to data\n        this._idMap = {};\n        this._dataMap = {};\n        this._mode = '';\n        // data.forEach((item, idx) => {\n        //     const index = item.id || idx;\n        //     this._idMap[index] = item;\n        // });\n        // // array to store data in enter phase\n        this._enterdata = [];\n        // // array to store data in exit phase\n        this._exitdata = [];\n    }\n    /**\n     *  Gets the object bound to a class\n     *\n     * @return {Object} current data set bound to the class\n     * @memberof Selection\n     */\n    getObjects () {\n        return Object.values(this._idMap);\n    }\n\n    /**\n     * This method is used to supply seed data to a selection.\n     *\n     * @param {Array} newData Seed data to create the enter selection.\n     * @param {Functon | undefined } idGetter This function is used to uniqely identify a data entry.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    data (newData, idGetter) {\n        if (idGetter) {\n            this._data = [];\n            this._idGetter = idGetter;\n            const tempMap = {};\n\n            newData.forEach((...params) => {\n                const index = idGetter(...params);\n                tempMap[index] = params[0];\n            });\n            // check if any data items have been removed\n            const purgedIds = [];\n\n            Object.keys(this._idMap).forEach((id) => {\n                if (!tempMap[id]) {\n                    purgedIds.push(id);\n                }\n            });\n\n            Object.keys(tempMap).forEach((id) => {\n                if (!this._idMap[id]) {\n                    this._enterdata.push(tempMap[id]);\n                } else {\n                    this._idMap[id] = tempMap[id];\n                    this._data.push(tempMap[id]);\n                }\n            });\n            // move the purged items to exit selection\n            purgedIds.forEach((id) => {\n                const purged = this._idMap[id];\n                this._exitdata.push(purged);\n                // this._data = this._data.slice(id, 1);\n                delete this._idMap[id];\n            });\n            // this._data = this._data.slice(temp, this._data.length);\n\n            return this;\n        }\n        // no id getter supplied so use indices\n        if (newData.length > this._data.length) {\n            const startIdx = this._data.length;\n            for (let i = startIdx; i < newData.length; i += 1) {\n                this._enterdata.push(newData[i]);\n            }\n        } else {\n            // push to exit selection\n            const temp = newData.length;\n            for (let i = temp; i < this._data.length; i += 1) {\n                const purged = this._data[i];\n                delete this._idMap[purged.id];\n                this._exitdata.push(purged);\n            }\n            this._data = this._data.slice(temp, this._data.length);\n        }\n        return this;\n    }\n\n    /**\n     * Applies the supplied callback to each data element\n     * and returns a new selection.\n     *\n     * @param {Function} callback Callback to execute on each item.\n     * @return {Selection} New selection with data created using callback.\n     * @memberof EnterSelection\n     */\n    append (callback) {\n        this[`_${this._mode}data`].forEach((...params) => {\n            const data = params[0];\n            const id = this._idGetter ? this._idGetter(...params) : (data.id || params[1]);\n            this._idMap[id] = callback(...params);\n            this._dataMap[id] = data;\n        });\n        this._mode = '';\n        return this;\n    }\n\n    /**\n     * This method returns an enter selection that\n     * allows or update operations.\n     *\n     * @return {EnterSelection} Instance of enter selection.\n     * @memberof Selection\n     */\n    enter () {\n        this._mode = 'enter';\n        return this;\n        // return new EnterSelection(this._enterdata, this._idMap, this._idGetter);\n    }\n\n    /**\n     * This method is used to set key value pairs\n     * on data objects.\n     *\n     * @param {string} key Name of property.\n     * @param {any} value Value of property.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    attr (key, value) {\n        this._data.forEach(item => item.attr(key, value));\n        return this;\n    }\n\n    /**\n     * This method merges the data of one selection with another.\n     *\n     * @param {Selection} selection Instance of selection.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    merge (selection) {\n        selection._data.forEach((...params) => {\n            const id = this._idGetter ? this._idGetter(...params) : (params[0].id || params[1]);\n            this._idMap[id] = params[0];\n            this._data.push(params[0]);\n        });\n        // reset enter selection\n        this._enterdata = [];\n        return this;\n    }\n\n    /**\n     * Returns a selection with exit data.\n     *\n     * @return {Selection} Instance of selection.\n     * @memberof Selection\n     */\n    exit () {\n        this._mode = 'exit';\n        // const exitdata = this._exitdata;\n        // const exitSelection = new Selection(exitdata);\n        // this._exitdata = [];\n        return this;\n    }\n\n    each (fn) {\n        Object.keys(this._idMap).forEach((e, i) => {\n            fn(this._idMap[e], this._dataMap[e], i);\n        });\n        return this;\n    }\n\n    map (fn) {\n        Object.keys(this._idMap).forEach((...params) => {\n            const key = params[0];\n            this._idMap[key] = fn(this._idMap[key], ...params, this._dataMap[key]);\n        });\n        return this;\n    }\n\n    /**\n     * Executes the cleanup operation associated with data objets.\n     *\n     * @memberof Selection\n     */\n    remove () {\n        // do cleanup on DDO's\n        const data = this[`_${this._mode}data`];\n\n        data.forEach(item => item.remove());\n        if (this._mode === '') {\n            this.each(e => e.remove());\n        }\n        this[`_${this._mode}data`] = [];\n        this._mode = '';\n    }\n}\n\nexport default Selection;\n","/* global window, requestAnimationFrame, cancelAnimationFrame */\nimport { FieldType, DimensionSubtype, DateTimeFormatter, default as DataModel } from 'datamodel';\nimport {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom\n} from 'd3-axis';\nimport {\n    symbolCircle,\n    symbolCross,\n    symbolDiamond,\n    symbolSquare,\n    symbolStar,\n    symbolWye,\n    symbolTriangle,\n    symbol,\n    stack as d3Stack,\n    stackOffsetDiverging,\n    stackOrderNone,\n    stackOrderAscending,\n    stackOrderDescending,\n    stackOffsetNone,\n    stackOffsetExpand,\n    stackOffsetWiggle,\n    pie,\n    arc,\n    line,\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    area\n} from 'd3-shape';\nimport { scaleBand } from 'd3-scale';\nimport { nest } from 'd3-collection';\nimport {\n    interpolate,\n    interpolateRgb,\n    piecewise,\n    interpolateNumber,\n    interpolateHslLong\n} from 'd3-interpolate';\nimport {\n    easeCubic,\n    easeBounce,\n    easePoly,\n    easeBack,\n    easeCircle,\n    easeLinear,\n    easeElastic\n} from 'd3-ease';\nimport {\n   color,\n   rgb,\n   hsl\n} from 'd3-color';\nimport { voronoi } from 'd3-voronoi';\nimport Model from 'hyperdis';\nimport { dataSelect } from './DataSystem';\nimport * as STACK_CONFIG from './enums/stack-config';\nimport { DM_OPERATION_GROUP } from './enums';\n\nconst { InvalidAwareTypes } = DataModel;\nconst HTMLElement = window.HTMLElement;\n\nconst isSimpleObject = (obj) => {\n    let token;\n    if (typeof obj === 'object') {\n        if (obj === null) { return false; }\n        token = Object.prototype.toString.call(obj);\n        if (token === '[object Object]') {\n            return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n        }\n    }\n    return false;\n};\n\n/**\n * Returns unique id\n * @return {string} Unique id string\n */\nconst\n    getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Deep copies an object and returns a new object.\n * @param {Object} o Object to clone\n * @return {Object} New Object.\n */\nconst clone = (o) => {\n    const output = {};\n    let v;\n    for (const key in o) {\n        if ({}.hasOwnProperty.call(o, key)) {\n            v = o[key];\n            output[key] = isSimpleObject(v) ? clone(v) : v;\n        }\n    }\n    return output;\n};\n\n/**\n* Checks the existence of keys in an object\n* @param {Array} keys Set of keys which are to be checked\n* @param {Object} obj whose keys are checked from the set of keys provided\n* @return {Object} Error if the keys are absent, or the object itself\n*/\nconst checkExistence = (keys, obj) => {\n    const nonExistentKeys = [];\n    keys.forEach((key) => {\n        if (key in obj) {\n            return;\n        }\n        nonExistentKeys.push(key);\n    });\n    return nonExistentKeys;\n};\n\nconst sanitizeIP = {\n    typeObj: (keys, obj) => {\n        if (typeof obj !== 'object') {\n            return Error('Argument type object expected');\n        }\n\n        const nonExistentKeys = checkExistence(keys, obj);\n        if (nonExistentKeys.length) {\n            return Error(`Missing keys from parameter ${nonExistentKeys.join(', ')}`);\n        }\n        return obj;\n    },\n\n    /* istanbul ignore next */ htmlElem: (elem) => {\n        if (!(elem instanceof HTMLElement)) {\n            return Error('HTMLElement required');\n        }\n        return elem;\n    }\n};\n\n/**\n * Gets the maximum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Maximum value\n */\nconst getMax = (data, field) => Math.max(...data.map(d => d[field]));\n\n/**\n * Gets the minimum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Minimum value\n */\nconst getMin = (data, field) => Math.min(...data.map(d => d[field]));\n\n/**\n * Gets the domain from the data based on the field name and type of field\n * @param  {Array.<Object> | Array.<Array>} data       Data Array\n * @param  {Array.<string>} fields    Array of fields from where the domain will be calculated\n * @param {string} fieldType Type of field - nominal, quantitiative, temporal.\n * @return {Array} Usually contains a min and max value if field is quantitative or\n * an array of values if field type is nominal or ordinal\n */\nconst getDomainFromData = (data, fields, fieldType) => {\n    let domain;\n    const domArr = [];\n    data = data[0] instanceof Array ? data : [data];\n    switch (fieldType) {\n    case DimensionSubtype.CATEGORICAL:\n        domain = [].concat(...data.map(arr => arr.map(d => d[fields[0]]).filter(d => d !== undefined)));\n        break;\n    default:\n        for (let i = 0, len = data.length; i < len; i++) {\n            const arr = data[i];\n            const [field0, field1] = fields;\n            const arr0 = arr.filter(d => !isNaN(d[field0]));\n            const arr1 = arr.filter(d => !isNaN(d[field1]));\n            if (arr0.length || arr1.length) {\n                const firstMin = getMin(arr0, field0);\n                const secondMin = getMin(arr1, field1);\n                const firstMax = getMax(arr0, field0);\n                const secondMax = getMax(arr1, field1);\n                domArr.push([Math.min(firstMin, secondMin), Math.max(firstMax, secondMax)]);\n            }\n        }\n        domain = domArr.length ? [Math.min(...domArr.map(d => d[0])), Math.max(...domArr.map(d => d[1]))] : [];\n        break;\n    }\n    return domain;\n};\n\n/**\n * Union Domain values\n * @param {Array.<Array>} domains Array of domain values\n * @param {string} fieldType type of field - dimension,measure or datetime.\n * @return {Array} Unioned domain of all domain values.\n */\nconst unionDomain = (domains, fieldType) => {\n    let domain = [];\n    domains = domains.filter(dom => dom && dom.length);\n    if (domains.length) {\n        if (fieldType === DimensionSubtype.CATEGORICAL) {\n            domain = [].concat(...domains);\n        } else {\n            domain = [Math.min(...domains.map(d => d[0])), Math.max(...domains.map(d => d[1]))];\n        }\n    }\n\n    return domain;\n};\n\nconst symbolFns = {\n    circle: symbolCircle,\n    cross: symbolCross,\n    diamond: symbolDiamond,\n    square: symbolSquare,\n    star: symbolStar,\n    wye: symbolWye,\n    triangle: symbolTriangle\n};\n\nconst easeFns = {\n    cubic: easeCubic,\n    bounce: easeBounce,\n    linear: easeLinear,\n    elastic: easeElastic,\n    back: easeBack,\n    poly: easePoly,\n    circle: easeCircle\n};\n\n/**\n * Returns the maximum or minimum points of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @param {string} minOrMax minimum or maximum.\n * @return {Object} Minimum or maximum point.\n */\nconst getExtremePoint = (points, compareValue, minOrMax) => {\n    let extremePoint;\n    let point;\n    const len = points.length;\n    let minOrMaxVal = minOrMax === 'max' ? -Infinity : Infinity;\n    let val;\n\n    for (let i = 0; i < len; i++) {\n        point = points[i];\n        val = point[compareValue];\n        if (minOrMax === 'min' ? val < minOrMaxVal : val > minOrMaxVal) {\n            minOrMaxVal = val;\n            extremePoint = point;\n        }\n    }\n\n    return extremePoint;\n};\n\n/**\n * Returns the minimum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Minimum point.\n */\nconst getMinPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'min');\n\n/**\n * Returns the maximum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Maximum point.\n */\nconst getMaxPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'max');\n\n/**\n * Gets the index of the closest value of the given value from the array.\n * @param {Array} arr Array of values\n * @param {number} value Value from which the nearest value will be calculated.\n * @param {string} side side property.\n * @return {number} index of the closest value\n */\n/* istanbul ignore next */const getClosestIndexOf = (arr, value, side) => {\n    let low = 0;\n    const arrLen = arr.length;\n    let high = arrLen - 1;\n\n    let mid;\n    let d1;\n    let d2;\n\n    while (low < high) {\n        mid = Math.floor((low + high) / 2);\n        d1 = Math.abs(arr[mid] - value);\n        d2 = Math.abs(arr[mid + 1] - value);\n\n        if (d2 <= d1) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n\n    if (!side) {\n        return high;\n    }\n\n    const highVal = arr[high];\n    if (highVal === value) {\n        return high;\n    } else if (highVal > value) {\n        if (high === 0) { return high; }\n        return side === 'left' ? high - 1 : high;\n    }\n    if (high === arr.length - 1) { return high; }\n    return side === 'left' ? high : high + 1;\n};\n\nconst getNearestValue = (data, key) => {\n    const filterData = data.filter(d => typeof d === 'number');\n    return filterData[getClosestIndexOf(filterData, key)];\n};\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst getWindow = () => window;\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst reqAnimFrame = (() => requestAnimationFrame)();\n\nconst cancelAnimFrame = (() => cancelAnimationFrame)();\n\n/**\n * Capitalizes the first letter of the word\n * @param {string} text word\n * @return {string} Capitalized word\n */\nconst capitalizeFirst = (text) => {\n    text = text.toLowerCase();\n\n    return text.replace(/\\w\\S*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1));\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst unique = arr => ([...new Set(arr)]);\n\n/**\n * Gets the minimum difference between two consecutive numbers  in an array.\n * @param {Array} arr Array of numbers\n * @param {number} index index of the value\n * @return {number} minimum difference between values\n */\n/* istanbul ignore next */ const getMinDiff = (arr, index) => {\n    let diff;\n    let uniqueVals;\n    if (index !== undefined) {\n        uniqueVals = unique(arr.map(d => d[index]));\n    } else {\n        uniqueVals = unique(arr);\n    }\n    if (uniqueVals.length > 1) {\n        diff = Math.abs(uniqueVals[1] - uniqueVals[0]);\n        for (let i = 2, len = uniqueVals.length; i < len; i++) {\n            diff = Math.min(diff, Math.abs(uniqueVals[i] - uniqueVals[i - 1]));\n        }\n    } else {\n        diff = uniqueVals[0];\n    }\n\n    return diff;\n};\n\n/**\n * Returns the class name appended with a given id.\n * @param {string} cls class name\n * @param {string} id unique identifier\n * @param {string} prefix string needed to add before the classname\n * @return {string} qualified class name\n */\n/* istanbul ignore next */const getQualifiedClassName = (cls, id, prefix) => {\n    cls = cls.replace(/^\\.*/, '');\n    return [`${prefix}-${cls}`, `${prefix}-${cls}-${id}`];\n};\n\n/**\n * This method is used to set the default value for variables\n * without sullying the code with conditional statements.\n *\n * @export\n * @param {any} param The parameter to test.\n * @param {any} value The default value to assign.\n * @return {any} The value.\n */\n/* istanbul ignore next */ const defaultValue = (param, value) => {\n    if (typeof param === 'undefined' || (typeof param === 'object' && !param)) {\n        return value;\n    }\n    return param;\n};\n\n/**\n * DESCRIPTION TODO\n *\n * @export\n * @param {Object} graph graph whose dependency order has to be generated\n * @return {Object}\n */\nconst getDependencyOrder = (graph) => {\n    const dependencyOrder = [];\n    const visited = {};\n    const keys = Object.keys(graph);\n    /**\n     * DESCRIPTION TODO\n     *\n     * @export\n     * @param {Object} name\n     * @return {Object}\n     */\n    const visit = (name) => {\n        if (dependencyOrder.length === keys.length) {\n            return true;\n        }\n        visited[name] = true;\n        const edges = graph[name];\n        for (let e = 0; e < edges.length; e++) {\n            const dep = edges[e];\n            if (!visited[dep]) {\n                visit(dep);\n            }\n        }\n\n        dependencyOrder.push(name);\n        return false;\n    };\n\n    for (let i = 0; i < keys.length; i++) {\n        if (visit(keys[i], i)) break;\n    }\n\n    return dependencyOrder;\n};\n\n/**\n * Iterates over the properties of an object and applies the function\n *\n * @param {any} obj object to be iterated upon\n * @param {any} fn  function to be applied on it\n */\nconst objectIterator = (obj, fn) => {\n    for (const key in obj) {\n        if (Object.hasOwnProperty.call(obj, key)) {\n            fn(key, obj);\n        }\n    }\n};\n\n/**\n * This class creates a d3 voronoi for retrieving the nearest neighbour of any point from a set of two\n * dimensional points\n * @class Voronoi\n */\n/* istanbul ignore next */ class Voronoi {\n    /**\n     * Initialize the voronoi with the data given.\n     * @param {Array.<Object>} data Array of points.\n     */\n    constructor (data = []) {\n        this._voronoi = voronoi().x(d => d.x).y(d => d.y);\n        this.data(data);\n    }\n\n    /**\n     * Sets the data to voronoi\n     * @param {Array.<Object>} data Array of objects.\n     * @return {Voronoi} Instance of voronoi.\n     */\n    data (data) {\n        if (data) {\n            this._voronoiFn = this._voronoi(data);\n        }\n        return this;\n    }\n\n    /**\n     * Finds the closest point to the x and y position given.\n     * @param {number} x x value\n     * @param {number} y y value\n     * @param {number} radius search radius.\n     * @return {Object} Details of the nearest point.\n     */\n    find (x, y, radius) {\n        return this._voronoiFn.find(x, y, radius);\n    }\n}\n\nconst addListenerToNamespace = (namespaceInf, fn, context) => {\n    let key = namespaceInf.key;\n    const namespace = namespaceInf.namespace;\n    if (namespace) {\n        !context._listeners[namespace] && (context._listeners[namespace] = []);\n        if (!key) {\n            key = Object.keys(context._listeners[namespace]).length;\n        }\n        context._listeners[namespace][key] = fn;\n    } else {\n        key = Object.keys(context._listeners).length;\n        context._listeners[key] = fn;\n    }\n};\n\n/**\n *\n *\n * @param {*} obj\n * @param {*} fields\n *\n */\nconst getObjProp = (obj, ...fields) => {\n    if (obj === undefined || obj === null) {\n        return obj;\n    }\n    let retObj = obj;\n    for (let i = 0, len = fields.length; i < len; i++) {\n        retObj = retObj[fields[i]];\n        if (retObj === undefined || retObj === null) {\n            break;\n        }\n    }\n    return retObj;\n};\n\n/**\n * Methods to handle changes to table configuration and reactivity are handled by this\n * class.\n */\n/**\n *  Common store class\n *\n * @class Store\n */\nclass Store {\n    /**\n     * Creates an instance of Store.\n     * @param {Object} config The object to create the state store with.\n     * @memberof Store\n     */\n    constructor (config) {\n        // create reactive model\n        this.model = Model.create(config);\n        this._listeners = {};\n    }\n\n    /**\n     * This method returns a plain JSON object\n     * with all the fields in the state store.\n     *\n     * @return {Object} Serialized representation of state store.\n     * @memberof Store\n     */\n    serialize () {\n        return this.model.serialize();\n    }\n\n    /**\n     * This method is used to update the value of a property in the state store.\n     *\n     * @param {string} propName The name of the property.\n     * @param {number} value The new value of the property.\n     * @memberof Store\n     */\n    commit (propName, value) {\n        // check if appropriate enum has been used\n        this.model.prop(propName, value);\n    }\n\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */registerChangeListener (propNames, callBack, instantCall, namespaceInf = {}) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        const fn = this.model.next(props, callBack, instantCall);\n        addListenerToNamespace(namespaceInf, fn, this);\n        return this;\n    }\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */ registerImmediateListener (propNames, callBack, instantCall, namespaceInf = {}) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        const fn = this.model.on(props, callBack, instantCall);\n        addListenerToNamespace(namespaceInf, fn, this);\n        return this;\n    }\n    /**\n     * This method is used to get the name of the property\n     * from the state store.\n     *\n     * @param {string} propName The name of the field in state store.\n     * @return {any} The value of the field.\n     * @memberof Store\n     */\n    get (propName) {\n        return this.model.prop(propName);\n    }\n\n    /**\n     * This method is used to register a computed property that is computed every time\n     * the store value changes.\n     *\n     * @param {string} propName The name of the property to create.\n     * @param {Function} callBack The function to execute when depemdent props change.\n     * @memberof Store\n     */\n    computed (propName, callBack) {\n        return this.model.calculatedProp(propName, callBack);\n    }\n\n    append (propName, value) {\n        this.model.append(propName, value);\n        return this;\n    }\n\n    unsubscribeAll () {\n        Object.values(this._listeners).forEach(fn => fn());\n        return this;\n    }\n\n    unsubscribe (namespaceInf = {}) {\n        const { namespace, key } = namespaceInf;\n        const listeners = this._listeners[namespace];\n        if (key) {\n            const fn = getObjProp(listeners, key);\n            fn && fn();\n        } else {\n            Object.values(listeners).forEach(fn => fn());\n            this._listeners[namespace] = [];\n        }\n        return this;\n    }\n}\n\n/**\n * Sanitize an input number / string mixed number. Currently dot in the no is not supported.\n *\n * @param {number | string} val pure number or string mixed number\n * @return {number | null}  Number if it can be extracted. Otherwise null\n */\nconst intSanitizer = (val) => {\n    const arr = val.toString().match(/(\\d+)(px)*/g);\n    if (!arr) {\n        // If only characters are passed\n        return null;\n    }\n\n    return parseInt(arr[0], 10);\n};\n\n/**\n * Setter getter creator from config\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args. (Optional)\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @param {Object} holder an empty object on which the getters and setters will be mounted\n * @param {Object} options options config based on which the getters and setters are determined.\n * @param {Hyperdis} model optional model to attach the property. If not sent new moel is created.\n * @return {Array}\n */\nconst transactor = (holder, options, model, namespaceInf = {}) => {\n    let conf;\n    const store = model && model instanceof Model ? model : Model.create({});\n    const stateProps = {};\n    for (const prop in options) {\n        if ({}.hasOwnProperty.call(options, prop)) {\n            conf = options[prop];\n            const addAsMethod = conf.meta ? conf.meta.addAsMethod : true;\n            let nameSpaceProp;\n            const namespace = namespaceInf.namespace;\n            if (namespace) {\n                nameSpaceProp = `${namespace}.${prop}`;\n            } else {\n                nameSpaceProp = prop;\n            }\n            if (!store.prop(`${nameSpaceProp}`)) {\n                stateProps[prop] = conf.value;\n            }\n            if (addAsMethod !== false) {\n                holder[prop] = ((context, meta, nsProp) => (...params) => {\n                    let val;\n                    let compareTo;\n                    const paramsLen = params.length;\n                    const prevVal = store.prop(nsProp);\n                    if (paramsLen) {\n                        // If parameters are passed then it's a setter\n                        const spreadParams = meta && meta.spreadParams;\n                        val = params;\n                        const values = [];\n                        if (meta) {\n                            for (let i = 0; i < paramsLen; i++) {\n                                val = params[i];\n                                const sanitization = meta.sanitization && (spreadParams ? meta.sanitization[i] :\n                                    meta.sanitization);\n                                const typeCheck = meta.typeCheck && (spreadParams ? meta.typeCheck[i] : meta.typeCheck);\n                                if (sanitization && typeof sanitization === 'function') {\n                                    // Sanitize if required\n                                    val = sanitization(val, prevVal, holder);\n                                }\n\n                                if (typeCheck) {\n                                    // Checking if a setter is valid\n                                    if (typeof typeCheck === 'function') {\n                                        let typeExpected = meta.typeExpected;\n                                        if (typeExpected && spreadParams) {\n                                            typeExpected = typeExpected[i];\n                                        }\n                                        if (typeExpected) {\n                                            compareTo = typeExpected;\n                                        } else {\n                                            compareTo = true;\n                                        }\n\n                                        if (typeCheck(val) === compareTo) {\n                                            values.push(val);\n                                        }\n                                    } else if (typeof typeCheck === 'string') {\n                                        if (typeCheck === 'constructor') {\n                                            const typeExpected = spreadParams ? meta.typeExpected[i] :\n                                                meta.typeExpected;\n                                            if (val && (val.constructor.name === typeExpected)) {\n                                                values.push(val);\n                                            }\n                                        }\n                                    } else {\n                                        // context.prop(key, val);\n                                        values.push(val);\n                                    }\n                                } else {\n                                    values.push(val);\n                                }\n                            }\n                            const preset = meta.preset;\n                            const oldValues = context.prop(nsProp);\n                            preset && preset(values[0], holder);\n                            if (spreadParams) {\n                                oldValues.forEach((value, i) => {\n                                    if (values[i] === undefined) {\n                                        values[i] = value;\n                                    }\n                                });\n                            }\n                            values.length && context.prop(nsProp, spreadParams ? values : values[0]);\n                        } else {\n                            context.prop(nsProp, spreadParams ? val : val[0]);\n                        }\n                        return holder;\n                    }\n                // No parameters are passed hence its a getter\n                    return context.prop(nsProp);\n                })(store, conf.meta, nameSpaceProp);\n            }\n        }\n    }\n\n    if (namespaceInf.namespace === undefined) {\n        store.append(stateProps);\n    } else {\n        const namespace = namespaceInf.namespace;\n        store.append(namespace, stateProps);\n    }\n\n    return [holder, store];\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} props\n */\nconst generateGetterSetters = (context, props) => {\n    Object.entries(props).forEach((propInfo) => {\n        const prop = propInfo[0];\n        const typeChecker = propInfo[1].typeChecker;\n        const defVal = propInfo[1].defaultValue;\n        const sanitization = propInfo[1].sanitization;\n        const prototype = context.constructor.prototype;\n        if (!(Object.hasOwnProperty.call(prototype, prop))) {\n            if (defVal) {\n                context[`_${prop}`] = defVal;\n            }\n            context[prop] = (...params) => {\n                if (params.length) {\n                    let value = params[0];\n                    if (sanitization) {\n                        value = sanitization(context, params[0]);\n                    }\n                    if (typeChecker && !typeChecker(value)) {\n                        return context[`_${prop}`];\n                    }\n                    context[`_${prop}`] = value;\n                    return context;\n                } return context[`_${prop}`];\n            };\n        }\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} prop\n */\nconst getArraySum = (arr, prop) => arr.reduce((total, elem) => {\n    total += prop ? elem[prop] : elem;\n    return total;\n}, 0);\n\n/**\n *\n *\n * @param {*} arr1\n * @param {*} arr2\n *\n */\nconst arraysEqual = (arr1, arr2) => {\n    if (arr1.length !== arr2.length) { return false; }\n    for (let i = arr1.length; i >= 0; i--) {\n        if (arr1[i] !== arr2[i]) { return false; }\n    }\n\n    return true;\n};\n\n/* eslint valid-typeof:0 */\n/**\n * Returns a validation function which can be used to validate variables against a type and value\n *\n * @param {any} type type of value that the object should have\n * @return {Object} validation function\n */\nconst isEqual = type => (oldVal, newVal) => {\n    if (type === 'Array') {\n        if (!oldVal) {\n            return false;\n        }\n        return arraysEqual(oldVal, newVal);\n    } else if (type === 'Object') {\n        return Object.is(oldVal, newVal);\n    } return oldVal === newVal;\n};\n\n/**\n * Description @todo\n *\n * @param {any} transactionModel @todo\n * @param {any} transactionEndpoint @todo\n * @param {any} transactionItems @todo\n * @return {any} @todo\n */\nconst enableChainedTransaction = (transactionModel, transactionEndpoint, transactionItems) =>\n    transactionItems.forEach(item => transactionModel.on(item, ([, newVal]) => transactionEndpoint[item](newVal)));\n\n/**\n * Chceks if the element is istanceof HTMLElement\n *\n * @param {Object} elem any JS Object\n */\nconst isHTMLElem = elem => elem instanceof HTMLElement;\n\nconst ERROR_MSG = {\n    INTERFACE_IMPL: 'Method not implemented'\n};\n\n/**\n * Merges the sink object in the source by recursively iterating through the object properties\n * @param {Object} source Source Object\n * @param {Object} sink Sink Object\n * @return {Object} Merged object\n */\nconst mergeRecursive = (source, sink) => {\n    for (const prop in sink) {\n        if (isSimpleObject(source[prop]) && isSimpleObject(sink[prop])) {\n            mergeRecursive(source[prop], sink[prop]);\n        } else if (sink[prop] instanceof Object && sink[prop].constructor === Object) {\n            source[prop] = {};\n            mergeRecursive(source[prop], sink[prop]);\n        } else {\n            source[prop] = sink[prop];\n        }\n    }\n    return source;\n};\n\n/**\n * Creates a selection set from a data set with corresponding attributes\n *\n * @export\n * @param {Selection} sel contains previous selection\n * @param {Object} appendObj Object to be appended\n * @param {Array} data Data based on which the selection is entered/updated/removed\n * @param {Object} [attrs={}] Attributes to be set on the data\n * @return {Selection} Merged selection\n */\nconst createSelection = (sel, appendObj, data, idFn) => {\n    let selection = sel || dataSelect([]);\n\n    selection = selection.data(data, idFn);\n\n    const enter = selection.enter().append(appendObj);\n    const mergedSelection = enter.merge(selection);\n\n    selection.exit() && selection.exit().remove();\n    return mergedSelection;\n};\n\nconst interpolateArray = (data, fitCount) => {\n    const linearInterpolate = function (before, after, atPoint) {\n        return before + (after - before) * atPoint;\n    };\n    const newData = [];\n    const springFactor = ((data.length - 1) / (fitCount - 1));\n    newData[0] = data[0]; // for new allocation\n    for (let i = 1; i < fitCount - 1; i++) {\n        const tmp = i * springFactor;\n        const before = (Math.floor(tmp)).toFixed();\n        const after = (Math.ceil(tmp)).toFixed();\n        const atPoint = tmp - before;\n        newData[i] = linearInterpolate(data[before], data[after], atPoint);\n    }\n    newData[fitCount - 1] = data[data.length - 1]; // for new allocation\n    return newData;\n};\n\n/**\n *\n *\n * @param {*} fn\n */\nconst nextFrame = (fn) => {\n    setTimeout(() => {\n        fn();\n    }, 0);\n};\n\n/**\n *\n *\n * @param {*} angle\n */\nconst angleToRadian = angle => angle * Math.PI / 180;\n\n/**\n *\n *\n * @param {*} newName\n * @param {*} oldName\n */\nconst replaceCSSPrefix = () => {\n    // @todo\n};\n\n/**\n * Gets the  interpolator function from d3 color\n *\n */\nconst interpolator = () => interpolate;\n\n/**\n * Gets the number interpolator from d3 color\n *\n */\nconst numberInterpolator = () => interpolateNumber;\n\n/**\n * Gets the rgb interpolator from d3 color\n *\n */\nconst colorInterpolator = () => interpolateRgb;\n\n/**\n * Gets the hsl interpolator from d3 color\n *\n */\nconst hslInterpolator = () => interpolateHslLong;\n\nconst transformColors = () => ({\n    color,\n    rgb,\n    hsl\n});\n\n/**\n * Gets the piecewise interpolator from d3 color\n *\n */\nconst piecewiseInterpolator = () => piecewise;\n\nfunction hue2rgb (p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n\n  /**\n   * Converts an HSL color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n   * Assumes h, s, and l are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  l       The lightness\n   * @return  Array           The RGB representation\n   */\nconst hslToRgb = (h, s, l, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    if (s === 0) {\n        r = g = b = l; // achromatic\n    } else {\n        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const p = 2 * l - q;\n\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\n  /**\n   * Converts an RGB color value to HSV. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes r, g, and b are contained in the set [0, 255] and\n   * returns h, s, and v in the set [0, 1].\n   *\n   * @param   Number  r       The red color value\n   * @param   Number  g       The green color value\n   * @param   Number  b       The blue color value\n   * @return  Array           The HSV representation\n   */\nconst rgbToHsv = (r, g, b, a = 1) => {\n    r = +r; g = +g; b = +b; a = +a;\n    r /= 255; g /= 255; b /= 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let h;\n    let s;\n    const l = (max + min) / 2;\n\n    if (max === min) {\n        h = s = 0; // achromatic\n    } else {\n        const d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n        case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n        case g: h = (b - r) / d + 2; break;\n        case b: h = (r - g) / d + 4; break;\n        default: break;\n        }\n        h /= 6;\n    }\n    return [h, s, l, a];\n};\n\n  /**\n   * Converts an HSV color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes h, s, and v are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  v       The value\n   * @return  Array           The RGB representation\n   */\nconst hsvToRgb = (h, s, v, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    const i = Math.floor(h * 6);\n    const f = h * 6 - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n    case 0: r = v; g = t; b = p; break;\n    case 1: r = q; g = v; b = p; break;\n    case 2: r = p; g = v; b = t; break;\n    case 3: r = p; g = q; b = v; break;\n    case 4: r = t; g = p; b = v; break;\n    case 5: r = v; g = p; b = q; break;\n    default: break;\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\nconst hexToHsv = (hex) => {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\n    const r = parseInt(result[1], 16);\n    const g = parseInt(result[2], 16);\n    const b = parseInt(result[3], 16);\n    const a = result[4] ? parseInt(result[4], 16) : 1;\n    return rgbToHsv(r, g, b, a);\n};\n\nconst detectColor = (col) => {\n    const matchRgb = /rgb\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})\\)/;\n    const matchHsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g;\n\n    // Source :  https://gist.github.com/sethlopezme/d072b945969a3cc2cc11\n     // eslint-disable-next-line\n    const matchRgba = /rgba?\\(((25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,\\s*?){2}(25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,?\\s*([01]\\.?\\d*?)?\\)/;\n     // eslint-disable-next-line\n    const matchHsla = /^hsla\\((0|360|35\\d|3[0-4]\\d|[12]\\d\\d|0?\\d?\\d),(0|100|\\d{1,2})%,(0|100|\\d{1,2})%,(0?\\.\\d|1(\\.0)?)\\)$/;\n    const matchHex = /^#([0-9a-f]{3}){1,2}$/i;\n\n    if (matchRgb.test(col) || matchRgba.test(col)) {\n        return 'rgb';\n    } else if (matchHsl.test(col) || matchHsla.test(col)) {\n        return 'hsl';\n    } else if (matchHex.test(col)) {\n        return 'hex';\n    } return col;\n};\n\n/**\n *\n *\n * @param {*} model\n * @param {*} propModel\n *\n */\nconst filterPropagationModel = (model, propModel, measures) => {\n    const { data, schema } = propModel.getData();\n    let filteredModel;\n    if (schema.length) {\n        const fieldMap = model.getFieldsConfig();\n        filteredModel = model.select((fields) => {\n            const include = data.some(row => schema.every((propField, idx) => {\n                if (!measures && (!(propField.name in fieldMap) ||\n                        fieldMap[propField.name].def.type === FieldType.MEASURE)) {\n                    return true;\n                }\n                return row[idx] === fields[propField.name].valueOf();\n            }));\n            return include;\n        }, {\n            saveChild: false\n        });\n    } else {\n        filteredModel = propModel;\n    }\n\n    return filteredModel;\n};\n\nconst assembleModelFromIdentifiers = (model, identifiers) => {\n    let schema = [];\n    let data;\n    const fieldMap = model.getFieldsConfig();\n    if (identifiers.length) {\n        const fields = identifiers[0];\n        const len = fields.length;\n        for (let i = 0; i < len; i++) {\n            const field = fields[i];\n            const fieldObj = fieldMap[field] && Object.assign({}, fieldMap[field].def);\n            if (fieldObj) {\n                schema.push(Object.assign(fieldObj));\n            }\n        }\n\n        data = [];\n        const header = identifiers[0];\n        for (let i = 1; i < identifiers.length; i += 1) {\n            const vals = identifiers[i];\n            const temp = {};\n            vals.forEach((fieldVal, cIdx) => {\n                temp[header[cIdx]] = fieldVal;\n            });\n            data.push(temp);\n        }\n    } else {\n        data = [];\n        schema = [];\n    }\n\n    return new model.constructor(data, schema);\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} criteria\n *\n */\nconst getDataModelFromRange = (dataModel, criteria, mode) => {\n    if (criteria === null) {\n        return null;\n    }\n    const selFields = Object.keys(criteria);\n    const selFn = fields => selFields.every((field) => {\n        const val = fields[field].value;\n        const range = criteria[field][0] instanceof Array ? criteria[field][0] : criteria[field];\n        if (typeof range[0] === 'string') {\n            return range.find(d => d === val) !== undefined;\n        }\n        return range ? val >= range[0] && val <= range[1] : true;\n    });\n\n    return dataModel.select(selFn, {\n        saveChild: false,\n        mode\n    });\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} identifiers\n *\n */\nconst getDataModelFromIdentifiers = (dataModel, identifiers, mode) => {\n    let filteredDataModel;\n    if (identifiers instanceof Array) {\n        const fieldsConfig = dataModel.getFieldsConfig();\n\n        const dataArr = identifiers.slice(1, identifiers.length);\n        if (identifiers instanceof Function) {\n            filteredDataModel = identifiers(dataModel, {}, false);\n        } else if (identifiers instanceof Array && identifiers[0].length) {\n            const filteredSchema = identifiers[0].filter(d => d in fieldsConfig);\n            filteredDataModel = dataModel.select((fields) => {\n                let include = true;\n                filteredSchema.forEach((propField, idx) => {\n                    const value = fields[propField].valueOf();\n                    const index = dataArr.findIndex(d => d[idx] === value);\n                    include = include && index !== -1;\n                });\n                return include;\n            }, {\n                saveChild: false,\n                mode\n            });\n        }\n    } else {\n        filteredDataModel = getDataModelFromRange(dataModel, identifiers, mode);\n    }\n    return filteredDataModel;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} listenerMap\n */\nconst registerListeners = (context, listenerMap, ...params) => {\n    const propListenerMap = listenerMap(context, ...params);\n    for (const key in propListenerMap) {\n        if ({}.hasOwnProperty.call(propListenerMap, key)) {\n            const namespace = params[0];\n            let ns = null;\n            if (namespace) {\n                ns = namespace.local;\n            }\n            const mapObj = propListenerMap[key];\n            const propType = mapObj.type;\n            const props = mapObj.props;\n            const listenerFn = mapObj.listener;\n            context.store()[propType](props, listenerFn, false, {\n                namespace: ns\n            });\n        }\n    }\n};\n\nconst isValidValue = value => !isNaN(value) && value !== -Infinity && value !== Infinity;\n/**\n *\n *\n * @param {*} str\n *\n */\nconst escapeHTML = (str) => {\n    const htmlEscapes = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#x27;',\n        '/': '&#x2F;'\n    };\n    const htmlEscaper = /[&<>\"'/]/g;\n    return (`${str}`).replace(htmlEscaper, match => htmlEscapes[match]);\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst transposeArray = arr => arr[0].map((col, i) => arr.map(row => row[i]));\nconst toArray = arr => (arr instanceof Array ? arr : [arr]);\nconst extendsClass = (cls, extendsFrom, found) => {\n    if (!cls) {\n        return false;\n    }\n    const prototype = cls.prototype;\n    if (prototype instanceof extendsFrom) {\n        found = true;\n    } else {\n        found = extendsClass(prototype, extendsFrom, found);\n    }\n    return found;\n};\n\n/**\n *\n * @param {*} dm1\n * @param {*} dm2\n */\nconst concatModels = (dm1, dm2) => {\n    const dataObj1 = dm1.getData();\n    const dataObj2 = dm2.getData();\n    const data1 = dataObj1.data;\n    const data2 = dataObj2.data;\n    const schema1 = dataObj1.schema;\n    const schema2 = dataObj2.schema;\n    const tuples1 = {};\n    const tuples2 = {};\n    const commonTuples = {};\n    for (let i = 0; i < data1.length; i++) {\n        for (let ii = 0; ii < data2.length; ii++) {\n            const row1 = data1[i];\n            const row2 = data2[ii];\n            const dim1Values = row1.filter((d, idx) => schema1[idx].type === FieldType.DIMENSION);\n            const dim2Values = row2.filter((d, idx) => schema2[idx].type === FieldType.DIMENSION);\n            const allDimSame = dim1Values.every(value => dim2Values.indexOf(value) !== -1);\n            if (allDimSame) {\n                const key = dim1Values.join();\n                !commonTuples[key] && (commonTuples[key] = {});\n                row1.forEach((value, idx) => {\n                    commonTuples[key][schema1[idx].name] = value;\n                });\n                row2.forEach((value, idx) => {\n                    commonTuples[key][schema2[idx].name] = value;\n                });\n            } else {\n                const dm1Key = dim1Values.join();\n                const dm2Key = dim2Values.join();\n                if (!commonTuples[dm1Key] && !commonTuples[dm2Key]) {\n                    !tuples1[dm1Key] && (tuples1[dm1Key] = {});\n                    !tuples2[dm2Key] && (tuples2[dm2Key] = {});\n                    row1.forEach((value, idx) => {\n                        tuples1[dm1Key][schema1[idx].name] = value;\n                    });\n                    row2.forEach((value, idx) => {\n                        tuples2[dm2Key][schema2[idx].name] = value;\n                    });\n                }\n            }\n        }\n    }\n\n    const commonSchema = [...schema1, ...schema2.filter(s2 => schema1.findIndex(s1 => s1.name === s2.name) === -1)];\n    const data = [...Object.values(tuples1), ...Object.values(tuples2), ...Object.values(commonTuples)];\n    return [data, commonSchema];\n};\n\nconst getSymbol = type => symbol().type(symbolFns[type]);\n\nconst stackOrders = {\n    [STACK_CONFIG.ORDER_NONE]: stackOrderNone,\n    [STACK_CONFIG.ORDER_ASCENDING]: stackOrderAscending,\n    [STACK_CONFIG.ORDER_DESCENDING]: stackOrderDescending\n};\nconst stackOffsets = {\n    [STACK_CONFIG.OFFSET_DIVERGING]: stackOffsetDiverging,\n    [STACK_CONFIG.OFFSET_NONE]: stackOffsetNone,\n    [STACK_CONFIG.OFFSET_EXPAND]: stackOffsetExpand,\n    [STACK_CONFIG.OFFSET_WIGGLE]: stackOffsetWiggle\n};\n\n// eslint-disable-next-line require-jsdoc\nconst stack = params => d3Stack().keys(params.keys).offset(stackOffsets[params.offset])\n                .order(stackOrders[params.order])(params.data);\n\n/**\n * Groups the data into a hierarchical tree structure based on one or more fields.\n * @param { Object } params Configuration properties for nesting data\n * @param { Array.<Array> } params.data Data which needs to be grouped\n * @param { Array.<number> } params.keys Field indices by which the data will be grouped\n * @return { Array.<Object> } Grouped data array\n */\nconst nestCollection = (params) => {\n    const nestFn = nest();\n    params.keys.forEach(key => nestFn.key(d => d[key]));\n    return nestFn.entries(params.data);\n};\n\nconst pathInterpolators = {\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    stepAfter: curveStepAfter,\n    catmullRom: curveCatmullRom,\n    step: curveStep,\n    stepBefore: curveStepBefore,\n    linear: curveLinear\n};\n\nconst Symbols = {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom,\n    line,\n    area,\n    pie,\n    arc,\n    nest\n};\n\nconst Scales = {\n    band: scaleBand\n};\n\nconst getSmallestDiff = (points) => {\n    points = points.sort((a, b) => a - b);\n    let minDiff = points[1] - points[0];\n    for (let i = 2; i < points.length; i++) {\n        minDiff = Math.min(minDiff, points[i] - points[i - 1]);\n    }\n\n    return minDiff;\n};\n\nconst timeFormats = {\n    millisecond: '%A, %b %e, %H:%M:%S.%L',\n    second: '%A, %b %e, %H:%M:%S',\n    minute: '%A, %b %e, %H:%M',\n    hour: '%A, %b %e, %H:%M',\n    day: '%A, %b %e, %Y',\n    month: '%B %Y',\n    year: '%Y'\n};\n\nconst timeDurations = [\n    ['millisecond', 'second', 'minute', 'hour', 'day', 'month', 'year'],\n    [1, 1000, 60000, 3600000, 86400000, 2592000000, 31536000000]\n];\n\nconst getNearestInterval = (interval) => {\n    const index = getClosestIndexOf(timeDurations[1], interval);\n    return timeDurations[0][index];\n};\n\nconst formatTemporal = (value, interval) => {\n    const nearestInterval = getNearestInterval(interval);\n    return DateTimeFormatter.formatAs(value, timeFormats[nearestInterval]);\n};\n\nconst temporalFields = (dataModel) => {\n    const filteredFields = {};\n    Object.entries(dataModel.getFieldspace().getDimension()).forEach(([fieldName, fieldObj]) => {\n        if (fieldObj.subtype() === DimensionSubtype.TEMPORAL) {\n            filteredFields[fieldName] = fieldObj;\n        }\n    });\n    return filteredFields;\n};\n\nconst require = (lookupWhat, lookupDetails) => ({\n    resolvable: (store) => {\n        const lookupTarget = store[lookupWhat];\n        const depArr = lookupDetails.slice(0, lookupDetails.length - 1);\n        const fn = lookupDetails[lookupDetails.length - 1]; // fn\n\n        const deps = depArr.map(str => lookupTarget[str]);\n        return {\n            fn: fn(...deps),\n            depArr\n        };\n    }\n});\n\nconst nextAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||\n    function (callback) {\n        setTimeout(callback, 16);\n    };\n\nconst getValueParser = config => (val) => {\n    if (val instanceof InvalidAwareTypes) {\n        return val in config ? config[val] : `${val}`;\n    }\n    return val;\n};\n\nconst retrieveNearestGroupByReducers = (dataModel, ...measureFieldNames) => {\n    let nearestReducers = {};\n    let next = dataModel;\n    do {\n        const derivations = next.getDerivations();\n        if (derivations) {\n            const groupDerivation = derivations.reverse().find(derivation => derivation.op === DM_OPERATION_GROUP);\n            if (groupDerivation) {\n                nearestReducers = groupDerivation.criteria || {};\n                break;\n            }\n        }\n    } while (next = next.getParent());\n\n    const filteredReducers = {};\n    const measures = dataModel.getFieldspace().getMeasure();\n    measureFieldNames.forEach((measureName) => {\n        if (nearestReducers[measureName]) {\n            filteredReducers[measureName] = nearestReducers[measureName];\n        } else {\n            const measureField = measures[measureName];\n            if (measureField) {\n                filteredReducers[measureName] = measureField.defAggFn();\n            }\n        }\n    });\n\n    return filteredReducers;\n};\n\nexport {\n    getValueParser,\n    require,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    stack,\n    nestCollection,\n    getSymbol,\n    transformColors,\n    detectColor,\n    hexToHsv,\n    hslToRgb,\n    rgbToHsv,\n    hsvToRgb,\n    concatModels,\n    toArray,\n    angleToRadian,\n    escapeHTML,\n    generateGetterSetters,\n    getArraySum,\n    interpolator,\n    piecewiseInterpolator,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    colorInterpolator,\n    numberInterpolator,\n    ERROR_MSG,\n    reqAnimFrame,\n    nextAnimFrame,\n    filterPropagationModel,\n    transposeArray,\n    cancelAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    symbolFns,\n    easeFns,\n    clone,\n    isEqual,\n    interpolateArray,\n    getMinPoint,\n    defaultValue,\n    getMaxPoint,\n    getClosestIndexOf,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    Store,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    transactor,\n    enableChainedTransaction,\n    isHTMLElem,\n    isSimpleObject,\n    nextFrame,\n    registerListeners,\n    replaceCSSPrefix,\n    getObjProp,\n    extendsClass,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    hslInterpolator,\n    getSmallestDiff,\n    getNearestValue,\n    retrieveNearestGroupByReducers,\n    createSelection,\n    formatTemporal,\n    temporalFields\n};\n","export function linear(t) {\n  return +t;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","import Selection from './selection';\n/**\n * This function applies a selection operation on a data array.\n *\n * @export\n * @param {Array} [data=[]] The data array to be observed.\n * @return {Selection} Instance of a selection.\n */\nexport default function dataSelect (data = []) {\n    return new Selection(data);\n}\n\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","export const ORDER_ASCENDING = 'ascending';\nexport const ORDER_DESCENDING = 'descending';\nexport const ORDER_NONE = 'none';\nexport const OFFSET_DIVERGING = 'diverging';\nexport const OFFSET_NONE = 'none';\nexport const OFFSET_EXPAND = 'expand';\nexport const OFFSET_WIGGLE = 'wiggle';\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","export const DM_OPERATION_GROUP = 'group';\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","var matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nexport default matcher;\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleRemove(name, interpolate) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value + \"\"), priority);\n}\n","function styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import { select, event as d3event, selection, clientPoint } from 'd3-selection';\nimport { drag as d3drag } from 'd3-drag';\nimport 'd3-transition';\nimport { mergeRecursive } from './common-utils';\n/**\n * This function takes a raw DOM element or\n * a string and returns a d3 selection of that element.\n *\n * @param {HTMLElement | string} element The element to wrap in d3 selection.\n * @return {Selection} Instance of d3 selection.\n */\nconst selectElement = element => select(element);\n\n/**\n * It creates a new d3 element on the parent element\n * @param  {Selection} parent Element to which the element is to be appended\n * @param  {Object} elemType Type of the new element\n * @param  {Array} data Data for the new element\n * @param  {Object} selector classname/id/tagname for the element\n * @return {HTMLElement} Newly Created Element\n */\nconst makeElement = (parent, elemType, data, selector, callbacks = {}, keyFn) => {\n    if ((parent instanceof HTMLElement || parent instanceof SVGElement)) {\n        parent = selectElement(parent);\n    }\n\n    const selectorVal = selector ? selector[0] : null;\n    let selectorType = null;\n    let actualSelector = null;\n    let element = null;\n    let enterSel = null;\n    let mergeSel = null;\n    let filter;\n    if (selectorVal) {\n        if (selectorVal === '#') {\n            selectorType = 'id';\n            actualSelector = selector;\n        } else {\n            selectorType = 'class';\n            actualSelector = selector[0] === '.' ? selector : `.${selector}`;\n        }\n    } else {\n        actualSelector = elemType;\n        filter = true;\n    }\n    element = parent.selectAll(actualSelector);\n\n    filter && (element = element.filter(function () {\n        return this.parentNode === parent.node();\n    }));\n    element = element.data(data, keyFn);\n\n    enterSel = element.enter()\n                            .append(elemType || 'div');\n    callbacks.enter && enterSel.each(function (...params) {\n        callbacks.enter(selectElement(this), ...params);\n    });\n\n    mergeSel = enterSel.merge(element);\n    callbacks.update && mergeSel.each(function (...params) {\n        callbacks.update(selectElement(this), ...params);\n    });\n    if (selectorType === 'class') {\n        mergeSel.classed(selectorVal === '.' ? selector.substring(1, selector.length) : selector, true);\n    } else if (selectorType === 'id') {\n        mergeSel.attr('id', selector.substring(1, selector.length));\n    }\n    const exitSel = element.exit();\n\n    if (callbacks.exit) {\n        exitSel.each(function (...params) {\n            callbacks.exit(selectElement(this), ...params);\n        });\n    } else {\n        exitSel.remove();\n    }\n    return mergeSel;\n};\n\n/**\n * This function applies styles to an element\n *  @param  {Object} elem Element Selection\n * @param  {Object} styleObj Style Object to be applied\n * @return {Element} Newly Created Element\n*/\nconst applyStyle = (elem, styleObj) => {\n    Object.entries(styleObj).forEach((d) => {\n        elem.style(d[0], d[1]);\n    }, this);\n    return elem;\n};\n\n/**\n * This function appends a dom element in another element.\n * @param {HTMLElement | SVGElement} element1 The element in which to append the second element\n * @param {HTMLElement | SVGElement} element2 The element which will be appended.\n */\nconst appendElement = (element1, element2) => {\n    element1.appendChild(element2);\n};\n\n/**\n * Sets the attributes to the element.\n * @param {HTMLElement | SVGElement} element Element on which attributes will be applied\n * @param {Object} attrs Attributes which need to be applied\n */\nconst setElementAttrs = (element, attrs) => {\n    for (const key in attrs) {\n        if ({}.hasOwnProperty.call(attrs, key)) {\n            element.attr(key, attrs[key]);\n        }\n    }\n};\n\n/**\n * Sets attributes in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which attrs will be applied\n * @param {Array.<Object>} attrs Array of attributes\n * @param {string} className className of elements to select.\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setAttrs = (element, attrs, className) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    className !== undefined ? element.selectAll(`.${className}`).each(function () {\n        setElementAttrs(select(this), attrs);\n    }) : setElementAttrs(element, attrs);\n    return element;\n};\n\n/**\n * Adds a css class to elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst addClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, true) :\n                elem.classed(className, true);\n    });\n};\n\n/**\n * Removes the css class from elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst removeClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, false) :\n                elem.classed(className, false);\n    });\n};\n\n/**\n * Sets styles in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which styles will be applied\n * @param {Array.<Object>} styles Array of style attributes\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setStyles = (element, styles) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            element.style(key, styles[key]);\n        }\n    }\n    return element;\n};\n\n/**\n * Creates svg or html elements by binding data to the selection.Removes extra elements\n * on exit.\n * @param {Object} params Parameter object\n * @param {SVGElement | HTMLElement} params.container Container element where all elements will be appended\n * @param {string} params.selector Selector by which elements will be selected from dom\n * @param {string} params.append Append tag\n * @param {Function} params.each Function which will be executed for each data point and element.\n */\nconst createElements = (params) => {\n    const container = select(params.container);\n    let data;\n    let sel;\n\n    data = params.data;\n    if (typeof data === 'number') {\n        data = Array(data).fill().map((d, i) => i);\n    }\n    sel = container.selectAll(params.selector).data(data);\n\n    sel = container.selectAll(params.selector).filter(function () {\n        return this.parentNode === container.node();\n    }).data(params.data);\n\n    const selectionMerge = sel.enter().append(params.append).merge(sel).each(function (d, i) {\n        params.each(d, select(this), i);\n    });\n\n    selectionMerge.attr('class', params.className || '');\n    sel.exit().remove();\n};\n\n/**\n * Clips an element with given measurement. Basically it is used to hide overflowing portions\n * of any element.\n * @param {SVGElement} container svg element which needs to be clipped.\n * @param {Object} measurement Dimensions of the clipped rectangle.\n * @param {string} id Unique id of the clip element\n */\nconst clipElement = (container, measurement, id) => {\n    const clipPathElement = makeElement(select(container), 'clipPath', [1], `#${id}`);\n    const clipPathRect = makeElement(clipPathElement, 'rect', [1]);\n    clipPathRect.attr('x', measurement.x)\n                    .attr('y', measurement.x)\n                    .attr('width', measurement.width)\n                    .attr('height', measurement.height);\n    clipPathElement.attr('clip-path', `url(#${id})`);\n};\n\n/**\n * Returns the element of the corresponding classname.\n * @param {HTMLElement | SVGElement} node html or svg node element.\n * @param {string} className css class to be applied.\n * @return {HTMLElement | SVGElement} html or svg element.\n */\nconst getElementsByClassName = (node, className) => select(node).selectAll(className).nodes();\n\n/**\n * Gets the mouse position relative to an svg type of element\n * @param {SVGElement} element Any svg element like rect, circle, etc.\n * @param {Event} event Event object.\n * @return {Object} x and y position relative to the container element passed.\n */\nconst getMousePos = (element, event) => {\n    const boundingClientRect = element.getBoundingClientRect();\n    return {\n        x: event.x - boundingClientRect.x,\n        y: event.y - boundingClientRect.y\n    };\n};\n\nconst getClientPoint = (...params) => {\n    const pos = clientPoint(...params);\n    return {\n        x: pos[0],\n        y: pos[1]\n    };\n};\n\n/** This function appends a dom element in another element.\n * @param {Object} tag The tag name of the element to append\n * @param {Object} mount Mount point fo the element\n * @return {Object} selection of the appended element\n */\nconst createElement = (tag, mount) => select(mount).append(tag).node();\n\n/**\n * Gets the d3 event function\n * @return {Object} d3 event\n */\nconst getEvent = () => d3event;\n\n/**\n * Gets the d3 drag function\n * @return {Object} d3 drag\n */\nconst getD3Drag = () => d3drag;\n\nconst getSmartComputedStyle = (group, css) => {\n    let textEl;\n    const testText = 'W';\n    const mandatoryStyle = {\n        'fill-opacity': 0\n    };\n    const className = typeof css === 'string' ? css : (css instanceof Array ? css.join(' ') : undefined);\n\n    if (group.node() instanceof HTMLElement) {\n        textEl = group.append('div').html(testText);\n    } else {\n        textEl = group.append('text').text(testText);\n    }\n\n    if (className) {\n        textEl.attr('class', className);\n    } else if (typeof css === 'object') {\n        delete css['fill-opacity'];\n        mergeRecursive(mandatoryStyle, css);\n    }\n\n    textEl.style(mandatoryStyle);\n    const computedStyle = window.getComputedStyle(textEl.node());\n    const styleForSmartLabel = {\n        fontSize: computedStyle.fontSize,\n        fontFamily: computedStyle.fontFamily,\n        fontWeight: computedStyle.fontWeight,\n        fontStyle: computedStyle.fontStyle\n    };\n\n    textEl.remove();\n\n    return styleForSmartLabel;\n};\n\nconst hasTouch = () => 'ontouchstart' in document.documentElement;\n\nexport {\n    hasTouch,\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint\n};\n","const events = [\n    'initialized',\n    'beforeupdate',\n    'updated',\n    'beforedraw',\n    'drawn',\n    'beforeremove',\n    'removed',\n    'animationend'\n];\n\nconst compositions = [\n    'canvas',\n    'unit',\n    'layer',\n    'axis',\n    'facet-headers',\n    'legend',\n    'caption'\n];\n\nconst EVENT_LIST = [];\n\ncompositions.forEach((composition) => {\n    events.forEach((event) => {\n        EVENT_LIST.push(`${composition}.${event}`);\n    });\n});\n\nexport default EVENT_LIST;\n","import EVENT_LIST from './event-list';\nimport { createPromise } from './helper';\n\n/**\n * At first call it accepts one function\n * calling it second time accepts notification object.\n * notification object then called with first accepted function\n *\n * @param {Function} resolveFn a promise's resolve function\n * @return {Function} a function to accept notification object\n */\nconst resolver = resolveFn => notification => resolveFn(notification);\n\n/**\n * Checks if the property string is present in the source object\n *\n * @param {Object} source source object whom you want to check the property\n * @param {string} property key name that need to be checked\n * @return {boolean} returns true if the property found in the source object\n */\nconst hasOwn = (source, property) => Object.prototype.hasOwnProperty.call(source, property);\n\n/**\n * LifeCycleManager which goes as a dependendecy to a muze\n * it accepts notification from the entire library throughout\n * the exeecution life\n *\n * @export\n * @class LifeCycleManager\n */\nexport default class LifeCycleManager {\n\n    /**\n     * Creates an instance of LifeCycleManager.\n     * @memberof LifeCycleManager\n     */\n    constructor () {\n        this._eventList = EVENT_LIST;\n        this._promises = new Map();\n        this._notifiers = {};\n        this._lifeCycles = {};\n        this._unreleasedLifeCycles = {};\n        this._boot();\n    }\n\n    /**\n     * Fills all the notifiers with resolver callback\n     *\n     * @memberof LifeCycleManager\n     */\n    _boot () {\n        this._notifiers = this._eventList.reduce((acc, name) => {\n            acc[name] = resolver;\n            return acc;\n        }, {});\n        this._preparePromises();\n    }\n\n    /**\n     * Public method which gives the promise corresponding\n     * to the event name\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    retrieve (eventName) {\n        return this._promises.get(eventName);\n    }\n\n    /**\n     * Creates a promise that will be passed to user's callback\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} a pending promise waiting for resolve to be called\n     * @memberof LifeCycleManager\n     */\n    _makeNotifierPromise (eventName) {\n        return new Promise((resolve) => {\n            this._notifiers[eventName] = resolver(resolve);\n        });\n    }\n\n    /**\n     * Prepares the promise map with pending promises\n     * all the promises are in a pending state where their's\n     * resolve function waiting to be called with notification object\n     * @memberof LifeCycleManager\n     */\n    _preparePromises () {\n        this._eventList.forEach((eventName) => {\n            const promise = this._makeNotifierPromise(eventName);\n            this._promises.set(eventName, promise);\n            createPromise(promise, eventName, this);\n        });\n    }\n\n    /**\n     * Resolves the promise with notification object\n     *\n     * @param {string} eventName name of the event in the system\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     *\n     * @memberof LifeCycleManager\n     */\n    _resolvePromise (eventName, notification) {\n        this._notifiers[eventName](notification);\n    }\n\n    /**\n     * Public method which is being called by different\n     * subcompoents of the system at different execution atages\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    notify (notification) {\n        // get the composition name from notification\n        // or from static formalName() method\n        const composition = notification.formalName || notification.client.constructor.formalName();\n        notification.formalName = composition;\n        this._releasePromisesFromCache();\n        this._notify(composition, notification);\n    }\n\n    /**\n     * Notify user the with promsie in a callback\n     * if callback not found then cache it\n     *\n     * @param {string} composition\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    _notify (composition, notification) {\n        const stage = notification.action;\n        const eventName = `${composition}.${stage}`;\n\n        // resolves promise with the notification object\n        this._resolvePromise(eventName, notification);\n\n        // get the promise from the promise map\n        const promise = this.retrieve(eventName);\n\n        if (this._lifeCycles[composition]) {\n            if (this._lifeCycles[composition][stage]) {\n                // if user given call back exists, then call with promise\n                this._callLifeCycleCallback(composition, stage, promise);\n            } else {\n                // otherwise cache the promise\n                this._cachePromise(composition, stage, promise);\n            }\n        } else {\n            this._cachePromise(composition, stage, promise);\n        }\n    }\n\n    /**\n     * Calls the user's callback with callback\n     *\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _callLifeCycleCallback (composition, stage, promise) {\n        const eventName = `${composition}.${stage}`;\n        this._lifeCycles[composition][stage](promise);\n        this._resetTargetPromise(eventName);\n    }\n\n    /**\n     * Try to clear the cached promsies once we have\n     * macthed callbacks from the user\n     *\n     * @memberof LifeCycleManager\n     */\n    _releasePromisesFromCache () {\n        const compositions = Object.keys(this._unreleasedLifeCycles);\n        compositions.forEach((composition) => {\n            const stages = Object.keys(this._unreleasedLifeCycles[composition]);\n            stages.forEach((stage) => {\n                if (this._lifeCycles[composition]) {\n                    if (this._lifeCycles[composition][stage]) {\n                        // take the promise from unreleased lifeCycles\n                        const promise = this._unreleasedLifeCycles[composition][stage];\n                        // call the user given callback with that promise\n                        this._callLifeCycleCallback(composition, stage, promise);\n                        // delete promise from unreleased lifeCycles\n                        delete this._unreleasedLifeCycles[composition][stage];\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * Cache the promise in the map. This cache\n     * then get consumed if we get user callbacks\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _cachePromise (composition, stage, promise) {\n        if (!hasOwn(this._unreleasedLifeCycles, composition)) {\n            this._unreleasedLifeCycles[composition] = {};\n        }\n\n        if (!hasOwn(this._unreleasedLifeCycles[composition], stage)) {\n            this._unreleasedLifeCycles[composition][stage] = {};\n        }\n        this._unreleasedLifeCycles[composition][stage] = promise;\n    }\n\n    /**\n     * It register's the callbacks gievn the user\n     *\n     * @param {Object} [lifeCycles={}] a object with list of callbacks\n     * @memberof LifeCycleManager\n     */\n    register (lifeCycles = {}) {\n        this._lifeCycles = lifeCycles;\n        // as we get all the callbacks, try to call them\n        // from unreleased promise map\n        this._releasePromisesFromCache();\n    }\n\n    /**\n     * Reset the promise into pending state\n     *\n     * @param {string} eventName name of the event happening\n     * @memberof LifeCycleManager\n     */\n    _resetTargetPromise (eventName) {\n        setTimeout(() => {\n            this._notifiers[eventName] = resolver;\n            this._promises.set(eventName, this._makeNotifierPromise(eventName));\n        }, 0);\n    }\n}\n","import LifeCycleManager from './lifecycle-manager';\n\nexport default LifeCycleManager;\n","/**\n * Creates a new promise when the given promise is resolved. This needs to be done so that after the lifecycle event\n * is completed, then again when the event gets completed, then a new promise gets resolved.\n *\n * @param {Promise} promise Instance of promise\n * @param {string} eventName name of event\n * @param {LifeCycleManager} context Instance of lifecyclemanager\n */\nexport const createPromise = (promise, eventName, context) => {\n    promise.then(() => {\n        const prm = context._makeNotifierPromise(eventName);\n        context._promises.set(eventName, prm);\n        createPromise(prm, eventName, context);\n    });\n};\n","import { default as DataModel } from 'datamodel';\nimport * as scales from './scales';\nimport * as colorSchemes from './color-schemes';\nimport * as STATE_NAMESPACES from './enums/namespace';\n\nconst InvalidAwareTypes = DataModel.InvalidAwareTypes;\n\nexport {\n    InvalidAwareTypes,\n    DataModel\n};\n\nexport {\n    ReservedFields,\n    CommonProps\n} from './enums';\n\nexport { STATE_NAMESPACES };\n\nexport {\n    scales,\n    colorSchemes\n};\n\nexport {\n    getNearestValue,\n    getValueParser,\n    transformColors,\n    detectColor,\n    hslToRgb,\n    rgbToHsv,\n    hexToHsv,\n    hsvToRgb,\n    escapeHTML,\n    angleToRadian,\n    generateGetterSetters,\n    getArraySum,\n    ERROR_MSG,\n    interpolator,\n    colorInterpolator,\n    numberInterpolator,\n    piecewiseInterpolator,\n    reqAnimFrame,\n    cancelAnimFrame,\n    nextAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    replaceCSSPrefix,\n    symbolFns,\n    defaultValue,\n    easeFns,\n    clone,\n    interpolateArray,\n    getMinPoint,\n    getMaxPoint,\n    getClosestIndexOf,\n    registerListeners,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    Store,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    transactor,\n    enableChainedTransaction,\n    isHTMLElem,\n    isEqual,\n    isSimpleObject,\n    nextFrame,\n    filterPropagationModel,\n    getObjProp,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    transposeArray,\n    toArray,\n    extendsClass,\n    concatModels,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    nestCollection,\n    stack,\n    getSymbol,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    hslInterpolator,\n    getSmallestDiff,\n    require,\n    formatTemporal,\n    createSelection,\n    temporalFields,\n    retrieveNearestGroupByReducers\n} from './common-utils';\n\nexport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint,\n    hasTouch\n} from './renderer-utils';\n\nexport { default as Smartlabel } from 'fusioncharts-smartlabel';\n\nexport { dataSelect, DataObject } from './DataSystem';\n\nexport { default as LifeCycleManager } from './lifecycle-manager';\n\nexport { DimensionSubtype, FieldType, MeasureSubtype, DateTimeFormatter } from 'datamodel';\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\nexport const LONGTOUCH = 'longtouch';\nexport const TOUCHDRAG = 'touchdrag';\nexport const ALL_ACTIONS = '*';\n","const SELECTION_NEW_ENTRY = 1;\nconst SELECTION_NEW_EXIT = -1;\nconst SELECTION_NULL = 0;\nconst SELECTION_OLD_ENTRY = 2;\nconst SELECTION_OLD_EXIT = -2;\n\nexport {\n    SELECTION_NEW_ENTRY,\n    SELECTION_NEW_EXIT,\n    SELECTION_NULL,\n    SELECTION_OLD_ENTRY,\n    SELECTION_OLD_EXIT\n};\n","import SelectionSet from './selection-set';\n\nexport default SelectionSet;\n","import {\n    SELECTION_NEW_ENTRY, SELECTION_NEW_EXIT, SELECTION_NULL, SELECTION_OLD_ENTRY, SELECTION_OLD_EXIT\n} from '../enums/selection';\n/* eslint-disable guard-for-in */\n\n/**\n * This component is used to keep track of the row tuples of the data which gets added and removed. This keeps\n * information of which rows are in previous and new entry set and previous and new exit set. This is initialized by\n * {@link Firebolt}.\n *\n * @public\n *\n * @class SelectionSet\n */\nclass SelectionSet {\n    /**\n     * Creates an instance of selection set\n     *\n     * @param {Array.<string>} completeSet Set of unique ids.\n     */\n    constructor (completeSet, _volatile) {\n        this.completeSet = completeSet;\n        this._set = completeSet.reduce((obj, key) => {\n            obj[key] = SELECTION_NULL;\n            return obj;\n        }, {});\n        this._volatile = _volatile;\n        this._completeSetCount = completeSet.length;\n        this._lockedSelection = {};\n        this._resetted = true;\n    }\n\n    /**\n     * Adds a set of ids to the selection set. This also moves the other rows to exit set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    add (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_ENTRY;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_ENTRY && set[key] !== SELECTION_OLD_ENTRY) {\n                set[key] = set[key] < 0 ? SELECTION_OLD_EXIT : SELECTION_NEW_EXIT;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Adds an array of ids to the old entry set.\n     *\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    update (ids) {\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_OLD_ENTRY;\n        });\n\n        return this;\n    }\n\n    /**\n     * Moves all ids which in new entry set  to old entry set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateEntry () {\n        const set = this._set;\n\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_ENTRY ? SELECTION_OLD_ENTRY : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Moves an array of ids which are in new exit set to old exit set.\n     *\n     * @public\n     *\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateExit () {\n        const set = this._set;\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_EXIT ? SELECTION_OLD_EXIT : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Removes an array of ids from the selection set. It also moves the remaining row ids to entry set.\n     *\n     * @public\n     * @param {Array.<string>} ids Array of unique ids\n     *\n     * @return {SelectionSet}  Instance of selection set\n     */\n    remove (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_EXIT;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_EXIT && set[key] !== SELECTION_OLD_EXIT) {\n                set[key] = set[key] === 0 ? SELECTION_NEW_ENTRY : SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n\n    getSets () {\n        const set = this._set;\n        const retObj = {\n            entrySet: [[], []],\n            exitSet: [[], []],\n            completeSet: []\n        };\n\n        for (const key in set) {\n            if (set[key] > 0) {\n                set[key] === SELECTION_OLD_ENTRY && retObj.entrySet[0].push(key);\n                set[key] === SELECTION_NEW_ENTRY && retObj.entrySet[1].push(key);\n            } else if (set[key] < 0) {\n                set[key] === SELECTION_OLD_EXIT && retObj.exitSet[0].push(key);\n                set[key] === SELECTION_NEW_EXIT && retObj.exitSet[1].push(key);\n            }\n            retObj.completeSet.push(key);\n        }\n\n        ['entrySet', 'exitSet'].forEach((type) => {\n            retObj[type] = retObj[type].map(e => e.map(Number));\n        });\n        retObj.completeSet = retObj.completeSet.map(Number);\n\n        return retObj;\n    }\n\n    /**\n     * Resets an array of ids in the selection set to initial state. It sets the value of every unique id value to\n     * null in the selection set which means they are neither in entry set nor in exit set. If no ids are passed,\n     * then it resets all the ids to null.\n     *\n     * @public\n     *\n     * @param {Array} ids Array of unique ids.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    reset (ids) {\n        const set = this._set;\n        if (ids) {\n            ids.forEach((i) => {\n                set[i] = SELECTION_NULL;\n            });\n        } else {\n            const lockedSel = this._lockedSelection;\n            for (const key in set) {\n                if (!(key in lockedSel)) {\n                    set[key] = SELECTION_NULL;\n                }\n            }\n        }\n        this._resetted = true;\n        return this;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     *\n     * @public\n     *\n     * @return {Array.<string>} Array of unique ids\n     */\n    getEntrySet () {\n        const set = this._set;\n        const addSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_ENTRY && addSet.push(key);\n        }\n\n        return addSet;\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in entry set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old entry set or new entry set\n     */\n    getExistingEntrySet (addSet) {\n        const set = this._set;\n        return addSet.filter(d => set[d] === SELECTION_NEW_ENTRY || set[d] === SELECTION_OLD_ENTRY);\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old exit set or new exit set\n     */\n    getExistingExitSet (removeSet) {\n        const set = this._set;\n        return removeSet.filter(d => set[d] === SELECTION_NEW_EXIT || set[d] === SELECTION_OLD_EXIT);\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldEntry () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_ENTRY && updateSet.push(key);\n        }\n        return updateSet;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldExit () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_EXIT && updateSet.push(key);\n        }\n\n        return updateSet;\n    }\n\n    /**\n     * Gets the array of ids which are in the exit set.\n     *\n     * @public\n     * @return {Array.<string>} Array of unique ids\n     */\n    getExitSet () {\n        const set = this._set;\n        const removeSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_EXIT && removeSet.push(key);\n        }\n        return removeSet;\n    }\n\n    /**\n     * Gets all the ids which are either in exit or entry set.\n     *\n     * @public\n     * @return {Array} Array of unique ids\n     */\n    getCompleteSet () {\n        const set = this._set;\n        const completeSet = [];\n\n        for (const key in set) {\n            completeSet.push(key);\n        }\n\n        return completeSet;\n    }\n\n    getCompleteSetCount () {\n        return this._completeSetCount;\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Swaps the add set and remove set in the selection set.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    toggle () {\n        const set = this._set;\n\n        for (const key in set) {\n            if (set[key] === SELECTION_NEW_ENTRY) {\n                set[key] = SELECTION_NEW_EXIT;\n            } else if (set[key] === SELECTION_NEW_EXIT) {\n                set[key] = SELECTION_NEW_ENTRY;\n            } else if (set[key] === SELECTION_OLD_ENTRY) {\n                set[key] = SELECTION_OLD_EXIT;\n            } else {\n                set[key] = SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n}\n\nexport default SelectionSet;\n","import { clone } from 'muze-utils';\nimport * as SELECTION from '../enums/selection';\n\nexport const initializeSideEffects = (context, sideEffects) => {\n    const sideEffectsMap = context._sideEffects;\n    const config = context.config();\n    sideEffects = sideEffects instanceof Array ? sideEffects : Object.values(sideEffects);\n    sideEffects.forEach((SideEffect) => {\n        const formalName = SideEffect.formalName();\n        const sideEffectInstance = sideEffectsMap[formalName];\n        sideEffectsMap[formalName] = sideEffectInstance || new SideEffect(context);\n        const sideEffectConf = config[formalName];\n        sideEffectConf && sideEffectsMap[formalName].config(sideEffectConf);\n    });\n    return sideEffectsMap;\n};\n\nexport const initializeBehaviouralActions = (context, actions) => {\n    const dispatchableBehaviours = {};\n\n    actions = actions instanceof Array ? actions : Object.values(actions);\n    actions.forEach((Action) => {\n        dispatchableBehaviours[Action.formalName()] = new Action(context);\n    });\n    return dispatchableBehaviours;\n};\n\nexport const initializePhysicalActions = (context, actions) => {\n    const physicalActions = {};\n\n    for (const name in actions) {\n        if (!({}).hasOwnProperty.call(name, actions)) {\n            physicalActions[name] = actions[name](context);\n        }\n    }\n    return physicalActions;\n};\n\nexport const changeSideEffectAvailability = (context, fn, toEnable) => {\n    const sideEffects = context.sideEffects();\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            let change = true;\n            if (fn && fn(key) === false) {\n                change = false;\n            }\n            if (change) {\n                toEnable ? sideEffects[key].enable() : sideEffects[key].disable();\n            }\n        }\n    }\n};\n\nexport const getMergedSet = set => [...new Set([...set[0], ...set[1]])];\n\nexport const getSourceFields = (propagationInf, criteria = {}) => {\n    const sourceIdentifiers = propagationInf.sourceIdentifiers;\n    let sourceFields;\n    if (sourceIdentifiers) {\n        sourceFields = sourceIdentifiers.getSchema().map(d => d.name);\n    } else if (criteria instanceof Array) {\n        sourceFields = criteria[0];\n    } else {\n        sourceFields = Object.keys(criteria || {});\n    }\n    return sourceFields;\n};\n\nconst conditionsMap = {\n    newEntry: [SELECTION.SELECTION_NEW_ENTRY],\n    oldEntry: [SELECTION.SELECTION_OLD_ENTRY],\n    mergedEnter: [SELECTION.SELECTION_NEW_ENTRY, SELECTION.SELECTION_OLD_ENTRY],\n    newExit: [SELECTION.SELECTION_NEW_EXIT],\n    oldExit: [SELECTION.SELECTION_OLD_EXIT],\n    mergedExit: [SELECTION.SELECTION_NEW_EXIT, SELECTION.SELECTION_OLD_EXIT],\n    complete: []\n};\n\nexport const getModelFromSet = (type, model, set) => {\n    if (model) {\n        return model.select((fields, i) =>\n           (conditionsMap[type].some(condition => set[i] === condition)), {\n               saveChild: false\n           });\n    }\n    return null;\n};\n\nexport const getSetInfo = (type, set, config) => {\n    let model = null;\n    const filteredDataModel = config.filteredDataModel;\n    const selectionSet = config.selectionSet;\n    if (!config.propagationData) {\n        if (selectionSet.resetted()) {\n            model = null;\n        } else {\n            model = getModelFromSet(type, config.dataModel, config.selectionSet._set);\n        }\n    } else if (filteredDataModel) {\n        model = type === 'mergedEnter' ? filteredDataModel[0] : filteredDataModel[1];\n    }\n    return {\n        uids: set,\n        length: set.length,\n        model\n    };\n};\n\nexport const getSideEffects = (behaviour, behaviourEffectMap) => {\n    const sideEffects = [];\n    for (const key in behaviourEffectMap) {\n        const behaviours = key.split(',');\n        const found = behaviours.some(d => d === behaviour);\n        if (found) {\n            sideEffects.push({\n                effects: behaviourEffectMap[key],\n                behaviours\n            });\n        }\n    }\n    return sideEffects;\n};\n\nexport const unionSets = (context, behaviours) => {\n    let combinedSet = {};\n    const models = {\n        mergedEnter: null,\n        mergedExit: null\n    };\n    behaviours.forEach((behaviour) => {\n        const entryExitSet = context._entryExitSet[behaviour];\n        if (entryExitSet) {\n            combinedSet = Object.assign(combinedSet, clone(entryExitSet));\n            ['mergedEnter', 'mergedExit'].forEach((type) => {\n                const model = entryExitSet[type].model;\n                let existingModel = models[type];\n                if (!existingModel) {\n                    existingModel = models[type] = model;\n                } else if (`${model.getSchema().map(d => d.name).sort()}` ===\n                    `${existingModel.getSchema().map(d => d.name).sort()}`) {\n                    existingModel = models[type] = model.union(existingModel);\n                } else {\n                    existingModel = model;\n                }\n                combinedSet[type].model = existingModel;\n            });\n        }\n    });\n    return combinedSet;\n};\n","import {\n    mergeRecursive,\n    hasTouch,\n    filterPropagationModel,\n    FieldType,\n    selectElement,\n    isSimpleObject\n} from 'muze-utils';\nimport { ALL_ACTIONS } from './enums/actions';\nimport SelectionSet from './selection-set';\nimport {\n    initializeBehaviouralActions,\n    initializeSideEffects,\n    changeSideEffectAvailability,\n    initializePhysicalActions,\n    unionSets,\n    getSideEffects\n} from './helper';\n\n/**\n * This class is responsible for dispatching behavioural actions and side effects. It also keeps the information of\n * registered physical actions, behavioural actions and side effects. Also, it keeps the map of physical and behavioural\n * actions and behavioural actions and side effects. Whenever any behavioural action is dispatched, it also propagates\n * the rows which got affected to the other datamodels. This class is initialized by {@link VisualUnit} and legend to\n * manage it's interaction.\n *\n * @public\n * @class Firebolt\n * @module Firebolt\n */\nexport default class Firebolt {\n    constructor (context, actions, sideEffects, behaviourEffectMap) {\n        this.context = context;\n        this._sideEffectDefinitions = {};\n        this._sideEffects = {};\n        this._propagationInf = {};\n        this._actions = {\n            behavioural: {},\n            physical: {}\n        };\n        this._selectionSet = {};\n        this._volatileSelectionSet = {};\n        this._propagationFields = {};\n        this._sourceSideEffects = {\n            selectionBox: () => false\n        };\n        this._propagationBehaviourMap = {};\n        this._sourceBehaviours = {};\n        this._actionBehaviourMap = {};\n        this._config = {};\n        this._behaviourEffectMap = {};\n        this._entryExitSet = {};\n        this._actionHistory = {};\n        this._queuedSideEffects = {};\n\n        this.mapSideEffects(behaviourEffectMap);\n        this.registerBehaviouralActions(actions.behavioural);\n        this.registerSideEffects(sideEffects);\n        this.registerPhysicalBehaviouralMap(actions.physicalBehaviouralMap);\n        this.registerPhysicalActions(actions.physical);\n    }\n\n    config (...config) {\n        if (config.length) {\n            this._config = mergeRecursive(this._config, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    mapSideEffects (behEffectMap) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        for (const key in behEffectMap) {\n            if ({}.hasOwnProperty.call(behEffectMap, key)) {\n                const sideEffects = behEffectMap[key] || [];\n                let preventDefaultActions = false;\n                let effectNames;\n                if (isSimpleObject(sideEffects)) {\n                    effectNames = sideEffects.effects;\n                    preventDefaultActions = sideEffects.preventDefaultActions;\n                } else {\n                    effectNames = sideEffects;\n                }\n                !behaviourEffectMap[key] && (behaviourEffectMap[key] = []);\n                this._behaviourEffectMap[key] = [...new Set(preventDefaultActions ? effectNames :\n                    [...behaviourEffectMap[key], ...effectNames])];\n            }\n        }\n        return this;\n    }\n\n    registerBehaviouralActions (actions) {\n        const behaviours = initializeBehaviouralActions(this, actions);\n        this.prepareSelectionSets(behaviours);\n        Object.assign(this._actions.behavioural, behaviours);\n        return this;\n    }\n\n    prepareSelectionSets () {\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        this.initializeSideEffects();\n        return this;\n    }\n\n    applySideEffects (sideEffects, selectionSet, payload) {\n        const sideEffectStore = this.sideEffects();\n        const actionHistory = this._actionHistory;\n        const queuedSideEffects = this._queuedSideEffects;\n        sideEffects.forEach((sideEffect) => {\n            let options;\n            let name;\n            const effects = sideEffect.effects;\n            const behaviours = sideEffect.behaviours;\n            const combinedSet = unionSets(this, behaviours, selectionSet);\n            effects.forEach((effect) => {\n                if (typeof effect === 'object') {\n                    name = effect.name;\n                    options = effect.options;\n                } else {\n                    name = effect;\n                }\n\n                const sideEffectInstance = sideEffectStore[name];\n                if (sideEffectInstance.isEnabled()) {\n                    if (!sideEffectInstance.constructor.mutates() &&\n                        Object.values(actionHistory).some(d => d.isMutableAction)) {\n                        queuedSideEffects[`${name}-${behaviours.join()}`] = {\n                            name,\n                            params: [combinedSet, payload, options]\n                        };\n                    } else {\n                        this.dispatchSideEffect(name, combinedSet, payload, options);\n                    }\n                }\n            });\n        });\n        return this;\n    }\n\n    dispatchSideEffect (name, selectionSet, payload, options = {}) {\n        const sideEffectStore = this.sideEffects();\n        const sideEffect = sideEffectStore[name];\n        let disable = false;\n        if (options.filter && options.filter(sideEffect)) {\n            disable = true;\n        }\n        !disable && sideEffectStore[name].apply(selectionSet, payload, options);\n    }\n\n    registerPropagationBehaviourMap (map) {\n        this._propagationBehaviourMap = Object.assign(this._propagationBehaviourMap, map || {});\n        return this;\n    }\n\n    dispatchBehaviour (behaviour, payload, propagationInfo = {}) {\n        const propagate = propagationInfo.propagate !== undefined ? propagationInfo.propagate : true;\n        const behaviouralActions = this._actions.behavioural;\n        const action = behaviouralActions[behaviour];\n        const behaviourEffectMap = this._behaviourEffectMap;\n        const sideEffects = getSideEffects(behaviour, behaviourEffectMap);\n        this._propagationInf = propagationInfo;\n\n        if (action) {\n            const selectionSet = action.dispatch(payload);\n            const propagationSelectionSet = this.getPropagationSelectionSet(selectionSet);\n            this._entryExitSet[behaviour] = propagationSelectionSet;\n            const shouldApplySideEffects = this.shouldApplySideEffects(propagate);\n\n            if (propagate) {\n                this.propagate(behaviour, payload, selectionSet.find(d => d.sourceSelectionSet), sideEffects);\n            }\n            if (shouldApplySideEffects) {\n                const applicableSideEffects = this.getApplicableSideEffects(sideEffects, payload, propagationInfo);\n                this.applySideEffects(applicableSideEffects, propagationSelectionSet, payload);\n            }\n        }\n\n        return this;\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet.find(d => !d.sourceSelectionSet);\n    }\n\n    shouldApplySideEffects () {\n        return true;\n    }\n\n    changeBehaviourStateOnPropagation (behaviour, value) {\n        if (value instanceof Function) {\n            this._sourceBehaviours[behaviour] = value;\n        } else {\n            this._sourceBehaviours[behaviour] = () => value;\n        }\n        return this;\n    }\n\n    changeSideEffectStateOnPropagation (sideEffect, value) {\n        if (value instanceof Function) {\n            this._sourceSideEffects[sideEffect] = value;\n        } else {\n            this._sourceSideEffects[sideEffect] = () => value;\n        }\n    }\n\n    propagate () {\n        return this;\n    }\n\n    sideEffects (...sideEffects) {\n        if (sideEffects.length) {\n            this._sideEffects = sideEffects[0];\n            return this;\n        }\n        return this._sideEffects;\n    }\n\n    enableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, true);\n        return this;\n    }\n\n    disableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, false);\n        return this;\n    }\n\n    dissociateBehaviour (behaviour, physicalAction) {\n        const actionBehaviourMap = this._actionBehaviourMap;\n        for (const key in actionBehaviourMap) {\n            if (key === physicalAction) {\n                const behaviourMap = actionBehaviourMap[key];\n                behaviourMap.behaviours = behaviourMap.behaviours.filter(d => d !== behaviour);\n                this.mapActionsAndBehaviour(key);\n            }\n        }\n\n        return this;\n    }\n\n    dissociateSideEffect (sideEffect, behaviour) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        behaviourEffectMap[behaviour] = behaviourEffectMap[behaviour].filter(d => (d.name || d) !== sideEffect);\n        return this;\n    }\n\n    getApplicableSideEffects (sideEffects) {\n        return sideEffects;\n    }\n\n    attachPropagationListener (dataModel) {\n        dataModel.unsubscribe('propagation');\n        dataModel.on('propagation', this.onDataModelPropagation());\n        return this;\n    }\n\n    onDataModelPropagation () {\n        return (propValue) => {\n            const payload = propValue.payload;\n            const action = payload.action;\n\n            this.dispatchBehaviour(action, payload, {\n                propagate: false\n            });\n        };\n    }\n\n    createSelectionSet (uniqueIds, behaviouralActions) {\n        const behaviours = behaviouralActions || this._actions.behavioural;\n        const selectionSet = this._selectionSet;\n        const volatileSelectionSet = this._volatileSelectionSet;\n\n        for (const key in behaviours) {\n            if ({}.hasOwnProperty.call(behaviours, key)) {\n                selectionSet[key] = new SelectionSet(uniqueIds);\n                volatileSelectionSet[key] = new SelectionSet(uniqueIds, true);\n            }\n        }\n        this._volatileSelectionSet = volatileSelectionSet;\n        this.selectionSet(selectionSet);\n        return this;\n    }\n\n    selectionSet (...selectionSet) {\n        if (selectionSet.length) {\n            this._selectionSet = selectionSet[0];\n            return this;\n        }\n        return this._selectionSet;\n    }\n\n    initializeSideEffects () {\n        const sideEffectDefinitions = this._sideEffectDefinitions;\n        this.sideEffects(initializeSideEffects(this, sideEffectDefinitions));\n        return this;\n    }\n\n    registerPhysicalActions (actions) {\n        const initedActions = initializePhysicalActions(this, actions);\n        Object.assign(this._actions.physical, initedActions);\n        return this;\n    }\n\n    /**\n     * Allows to propagate the datamodel with only the supplied fields. When propagation is done, then the fields\n     * which are supplied for the specified behavioural action is propagated.\n     *\n     * @public\n     *\n     * @param {string} action Name of behavioural action. If '*' is specified, then for all behavioural actions it is\n     * applied.\n     * @param {Array} fields Array of field names which will be propagated.\n     * @param {boolean} append If true, then it is appended to the existing propagation data model fields else only\n     * those fields are projected from propagation data model and propagated.\n     *\n     * @return {Firebolt} Instance of firebolt\n     */\n    propagateWith (action, fields, append = false) {\n        const behaviouralActions = this._actions.behavioural;\n        if (fields.length) {\n            if (action === ALL_ACTIONS) {\n                for (const key in behaviouralActions) {\n                    this._propagationFields[key] = {\n                        fields,\n                        append\n                    };\n                }\n            } else {\n                this._propagationFields[action] = {\n                    fields,\n                    append\n                };\n            }\n            return this;\n        }\n        return this._propagationFields;\n    }\n\n    /**\n     * Map actions and behaviours\n     * @return {Firebolt} Firebolt instance\n     */\n    mapActionsAndBehaviour (phyAction) {\n        const initedPhysicalActions = this._actions.physical;\n        const map = this._actionBehaviourMap;\n\n        for (const action in map) {\n            if (!({}).hasOwnProperty.call(action, map) && action === (phyAction || action)) {\n                let target;\n                const mapObj = map[action];\n                target = mapObj.target;\n                const touch = mapObj.touch;\n                if (!target) {\n                    target = this.context.getDefaultTargetContainer();\n                }\n                const bind = hasTouch() ? touch === true || touch === undefined : !touch;\n                bind && this.bindActionWithBehaviour(initedPhysicalActions[action],\n                    target, mapObj.behaviours);\n            }\n        }\n        return this;\n    }\n\n    registerPhysicalBehaviouralMap (map) {\n        this._actionBehaviourMap = mergeRecursive(this._actionBehaviourMap, map);\n        return this;\n    }\n\n    /**\n     * Binds a target element with an action.\n     *\n     * @param {Function} action Action method\n     * @param {string} target Class name of element\n     * @param {Array} behaviourList Array of behaviours\n     * @return {FireBolt} Instance of firebolt\n     */\n    bindActionWithBehaviour (action, targets, behaviourList) {\n        if (typeof (targets) === 'string') {\n            targets = [targets];\n        }\n        targets.forEach((target) => {\n            const mount = this.context.mount();\n            const nodes = target.node instanceof Function ? target : selectElement(mount).selectAll(target);\n            if (!nodes.empty()) {\n                if (nodes instanceof Array) {\n                    nodes.forEach((node) => {\n                        action(selectElement(node), behaviourList);\n                    });\n                } else {\n                    action(nodes, behaviourList);\n                }\n            }\n        });\n        return this;\n    }\n\n    getPropagationInf () {\n        return this._propagationInf;\n    }\n\n    getAddSetFromCriteria (criteria, propagationInf = {}) {\n        const context = this.context;\n        const filteredDataModel = propagationInf.data ? propagationInf.data :\n            context.getDataModelFromIdentifiers(criteria, 'all');\n        const xFields = context.fields().x || [];\n        const yFields = context.fields().y || [];\n        const xMeasures = xFields.every(field => field.type() === FieldType.MEASURE);\n        const yMeasures = yFields.every(field => field.type() === FieldType.MEASURE);\n        return {\n            model: filteredDataModel,\n            uids: criteria === null ? null : (propagationInf.data ? filterPropagationModel(this.getFullData(),\n                propagationInf.data[0], xMeasures && yMeasures).getData().uids : filteredDataModel[0].getData().uids)\n        };\n    }\n\n    getSelectionSets (action) {\n        const sourceId = this.context.id();\n        const propagationInf = this._propagationInf || {};\n        const propagationSource = propagationInf.sourceId;\n        let applicableSelectionSets = [];\n        if (propagationSource !== sourceId) {\n            applicableSelectionSets = [this._volatileSelectionSet[action]];\n        }\n\n        if (propagationSource) {\n            applicableSelectionSets.push(this.selectionSet()[action]);\n        }\n        return applicableSelectionSets;\n    }\n\n    getFullData () {\n        return this.context.data();\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Returns the entry and exit set information of the specified behavioural action.\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of behavioural action.\n     *\n     * @return {Object} Entry exit set information.\n     */\n    getEntryExitSet (behaviour) {\n        return this._entryExitSet[behaviour];\n    }\n}\n","import { getSetInfo, getMergedSet, getSourceFields } from '../../helper';\n\n/**\n * This is the base class has all the common functionalities needed for all behavioural actions. Any other behavioural\n * action needs to extend this class.\n *\n * @public\n * @class GenericBehaviour\n * @module GenericBehaviour\n */\nexport default class GenericBehaviour {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n    }\n\n    /**\n     * Returns entry and exit set information. This method is called by firebolt when ```dispatchBehaviour``` is called\n     * dynamically or when any physical action is triggered on the chart.\n     *\n     * @param {Object} payload Payload information.\n     * @param {Object|Array} payload.criteria Identifiers of data interacted with.\n     *\n     * @return {Array} Entry and exit set information.\n     */\n    dispatch (payload) {\n        const criteria = payload.criteria;\n        const firebolt = this.firebolt;\n        const formalName = this.constructor.formalName();\n        const selectionSets = firebolt.getSelectionSets(formalName);\n        const {\n            model: filteredDataModel,\n            uids\n        } = this.firebolt.getAddSetFromCriteria(criteria, this.firebolt.getPropagationInf());\n        const entryExitSets = selectionSets.map((selectionSet) => {\n            this.setSelectionSet(uids, selectionSet);\n            return this.getEntryExitSet(selectionSet, filteredDataModel, payload);\n        });\n\n        return entryExitSets;\n    }\n\n    /**\n     * Updates the selection set by adding uids to the instance of {@link SelectionSet} or removing them.\n     * {@link SelectionSet} keeps the information of which rows are in the entry set and exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of row ids which got affected during interaction.\n     * @param {SelectionSet} selectionSet Instance of selection set.\n     *\n     * @return {GenericBehaviour} Instance of behaviour.\n     */\n    setSelectionSet () {\n        return this;\n    }\n\n    getEntryExitSet (selectionSet, filteredDataModel, payload) {\n        const {\n            entrySet,\n            exitSet,\n            completeSet\n        } = selectionSet.getSets();\n        const propagationInf = this.firebolt.getPropagationInf();\n        const dataModel = this.firebolt.getFullData();\n        const setConfig = {\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            dataModel,\n            filteredDataModel,\n            propagationData: propagationInf.data,\n            selectionSet\n        };\n\n        return {\n            entrySet: [getSetInfo('oldEntry', entrySet[0], setConfig),\n                getSetInfo('newEntry', entrySet[1], setConfig)],\n            exitSet: [getSetInfo('oldEntry', exitSet[0], setConfig),\n                getSetInfo('newExit', exitSet[1], setConfig)],\n            mergedEnter: getSetInfo('mergedEnter', getMergedSet(entrySet), setConfig),\n            mergedExit: getSetInfo('mergedExit', getMergedSet(exitSet), setConfig),\n            completeSet: getSetInfo('complete', completeSet, setConfig),\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            fields: getSourceFields(propagationInf, payload.criteria),\n            sourceSelectionSet: selectionSet._volatile === true\n        };\n    }\n\n    static mutates () {\n        return false;\n    }\n\n    enable () {\n        this._enabled = true;\n    }\n\n    disable () {\n        this._enabled = false;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n}\n\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class VolatileBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n                // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                    || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            selectionSet.updateExit();\n            const { entrySet } = selectionSet.getSets();\n            selectionSet.reset(getMergedSet(entrySet));\n            selectionSet.add(addSet);\n            selectionSet.update(existingAddSet);\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n    }\n}\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n","import VolatileBehaviour from './volatile';\nimport { HIGHLIGHT } from '../../enums/behaviours';\n\nexport default class HighlightBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return HIGHLIGHT;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport * as BEHAVIOURNAMES from '../../enums/behaviours';\n\n/**\n * This is the behaviour for brushing a region on the chart. It accepts a payload\n * which contains the x and y range of the data and other configuration. It will then\n * create a selection box from the range and select the points which fall within the range.\n */\nexport default class BrushBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return BEHAVIOURNAMES.BRUSH;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport { FILTER } from '../../enums/behaviours';\n\nexport default class FilterBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return FILTER;\n    }\n\n    static mutates () {\n        return true;\n    }\n}\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class PersistentBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            const propagationInf = this.firebolt.getPropagationInf();\n            // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            if (propagationInf.propagate === false) {\n                selectionSet.updateExit();\n                const { entrySet } = selectionSet.getSets();\n                selectionSet.reset(getMergedSet(entrySet));\n                selectionSet.add(addSet);\n                selectionSet.update(existingAddSet);\n            } else {\n                // existing add set\n                if (existingAddSet.length) {\n                    selectionSet.updateExit();\n                    selectionSet.remove(existingAddSet);\n                } else {\n                    selectionSet.updateEntry();\n                    selectionSet.add(addSet);\n                }\n                const { exitSet } = selectionSet.getSets();\n                const mergedExitSet = getMergedSet(exitSet);\n                const completeSetCount = selectionSet.getCompleteSet().length;\n                if (mergedExitSet.length === completeSetCount) {\n                    selectionSet.reset();\n                }\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n\n        return this;\n    }\n}\n","import PersistentBehaviour from './persistent';\nimport { SELECT } from '../../enums/behaviours';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return SELECT;\n    }\n}\n\n","import { DimensionSubtype, MeasureSubtype } from 'muze-utils';\n/**\n * Gets the drag action configuration\n * @param {VisualUnit} instance instance of visual unit\n * @param {Object} config x y positions\n * @return {Object} Payload of behaviour\n*/\n/* istanbul ignore next */ const getDragActionConfig = (sourceInfo, config, fieldsConfig) => {\n    if (!(sourceInfo.axes.x || sourceInfo.axes.y)) {\n        return {\n            criteria: null\n        };\n    }\n\n    const axes = sourceInfo.axes;\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const axisFields = sourceInfo.fields;\n    const xField = axisFields.x[0].getMembers()[0];\n    const yField = axisFields.y[0].getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n    const dimensions = {};\n    const stPos = config.startPos;\n    const endPos = config.endPos;\n\n    if (stPos.x === endPos.x && stPos.y === endPos.y) {\n        return {\n            criteria: null\n        };\n    }\n\n    const dragDim = xFieldType === MeasureSubtype.CONTINUOUS ? (yFieldType === MeasureSubtype.CONTINUOUS ?\n        ['x', 'y'] : ['y']) : ['x'];\n    const criteria = {};\n    const isXDimension = xFieldType === DimensionSubtype.CATEGORICAL;\n    const isYDimension = yFieldType === DimensionSubtype.CATEGORICAL;\n    const xRange = xAxis.invertExtent(stPos.x, endPos.x);\n    const yRange = yAxis.invertExtent(stPos.y, endPos.y);\n    const selectedDomains = {\n        x: stPos.x === endPos.x ? [] : (isXDimension ? xRange : xRange.sort((a, b) => a - b)),\n        y: stPos.y === endPos.y ? [] : (isYDimension ? yRange : yRange.sort((a, b) => a - b))\n    };\n    const rangeObj = {};\n\n    if (dragDim.length === 2) {\n        rangeObj[xField] = selectedDomains.x;\n        rangeObj[yField] = selectedDomains.y;\n        if (xField === yField) {\n            const xdom = selectedDomains.x;\n            const ydom = selectedDomains.y;\n            const min = xdom[0] > ydom[0] ? ydom : xdom;\n            const max = min === ydom ? xdom : ydom;\n            if (min[1] < max[0]) {\n                rangeObj[xField] = [];\n            } else {\n                rangeObj[xField] = [max[0], min[1] < max[1] ? min[1] : max[1]];\n            }\n            dimensions.x = [stPos.x, endPos.x];\n            dimensions.y = [stPos.y, endPos.y];\n        }\n    } else {\n        criteria[dragDim[0]] = selectedDomains[dragDim[0]] || [];\n\n        if (dragDim[0] === 'x') {\n            rangeObj[xField] = criteria.x;\n            if (xFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.x = (config.snap && stPos.x !== endPos.x) ? xAxis.getNearestRange(stPos.x, endPos.x) :\n                    [stPos.x, endPos.x];\n            }\n        } else {\n            rangeObj[yField] = criteria.y;\n            if (yFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.y = (config.snap && stPos.y !== endPos.y) ? yAxis.getNearestRange(stPos.y, endPos.y) :\n                    [stPos.y, endPos.y];\n            }\n        }\n    }\n\n    return {\n        criteria: rangeObj,\n        dimensions\n    };\n};\n\nexport default getDragActionConfig;\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './drag-action-config';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const attachDragEvent = (targetEl, behaviours, firebolt, touch) => {\n    let startPos = {};\n    let endPos = {};\n    let drawingInf;\n\n    const d3Drag = getD3Drag();\n    let touchStart;\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n        drawingInf = firebolt.context.getDrawingContext();\n        touchStart = new Date().getTime();\n    }).on('drag', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        if (touch && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos\n        }, firebolt.context.data().getFieldsConfig());\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }).on('end', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        const duration = new Date().getTime() - touchStart;\n\n        if (touch && duration > 100 && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos,\n            snap: true\n        }, firebolt.context.data().getFieldsConfig());\n        payload.dragEnd = true;\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }));\n};\n\n","import { getClientPoint, getEvent } from 'muze-utils';\nimport { CONSOLIDATED, FRAGMENTED } from '../../enums/constants';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} instance instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const context = firebolt.context;\n        const tooltipConf = context.config().interaction.tooltip;\n        const mode = tooltipConf.mode;\n        const pos = getClientPoint(context.getDrawingContext().svgContainer, event);\n        const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n            getAllPoints: mode === CONSOLIDATED || mode === FRAGMENTED,\n            data: args,\n            event\n        });\n        const payload = {\n            criteria: nearestPoint ? nearestPoint.id : null,\n            showInPosition: nearestPoint.showInPosition,\n            target: nearestPoint.target,\n            position: pos,\n            mode\n        };\n\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                            criteria: null\n                        }));\n                    });\n};\n\nexport default hover;\n","export const CLASSPREFIX = 'muze';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\n\n","import { getClientPoint } from 'muze-utils';\n\nexport const generatePayloadFromEvent = function (args, event, firebolt) {\n    const context = firebolt.context;\n    const pos = getClientPoint(context.getDrawingContext().svgContainer, event.touches ? event.touches[0] : event);\n    const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n        data: args,\n        event\n    });\n    return {\n        criteria: nearestPoint ? nearestPoint.id : null,\n        showInPosition: nearestPoint.showInPosition,\n        target: nearestPoint.target,\n        position: pos\n    };\n};\n","import { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport { longtouch } from './longtouch';\nimport { touchdrag } from './touch-drag';\nimport * as ACTIONNAMES from '../../enums/actions';\nimport click from './click';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click,\n    [ACTIONNAMES.LONGTOUCH]: longtouch,\n    [ACTIONNAMES.TOUCHDRAG]: touchdrag\n};\n\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt);\n};\n\nexport default drag;\n","/* global setTimeout */\nimport { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nexport const longtouch = firebolt => (targetEl, behaviours) => {\n    let event;\n    let touchEnd;\n    const dispatchBehaviour = function (args) {\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    touchEnd = false;\n    event = getEvent();\n    targetEl.on('touchstart', (args) => {\n        event = getEvent();\n        touchEnd = false;\n        setTimeout(() => {\n            if (!touchEnd) {\n                dispatchBehaviour(args);\n            } else {\n                behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                    criteria: null\n                }));\n            }\n        }, 100);\n    }).on('touchend', () => {\n        touchEnd = true;\n    });\n};\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const touchdrag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt, true);\n};\n\n","export const PROPS = {\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import GenericSideEffect from './generic-sideeffect';\n\nexport default GenericSideEffect;\n","import { mergeRecursive, getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { PROPS } from './props';\n\n/**\n * This is the base class of all side effects. It contains all common methods like setting configuration, disabling,\n * enabling side effect, etc. Every new side effect has to inherit this class or {@link SpawnableSideEffect} or\n * {@link SurrogateSideEffect} class. All side effects are initialized by firebolt. The instance of firebolt is\n * passed on initialization. The firebolt instance contains ```context``` which is the instance of visual unit with\n * which the firebolt is attached.\n *\n * @public\n * @class\n * @module GenericSideEffect\n */\nexport default class GenericSideEffect {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n        this._strategy = 'default';\n        this._config = {};\n        this._id = getUniqueId();\n        this._strategies = {};\n        generateGetterSetters(this, PROPS);\n        this.config(this.constructor.defaultConfig());\n    }\n\n    /**\n     * Returns the default configuration of the side effect.\n     *\n     * @public\n     * @return {Object} Default configuration of side effect.\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the formal name of a side effect. This method must be implemented by all side effects which changes\n     * or adds any element in the visualization.\n     *\n     * @return {string} Formal name of side effect.\n     */\n    static formalName () {\n        return 'generic';\n    }\n\n    static target () {\n        return 'all';\n    }\n\n    /**\n     * Returns true if the side effects mutates the data of chart.\n     *\n     * @public\n     *\n     * @return {boolean} If the side effect mutates the data of chart.\n     */\n    static mutates () {\n        return false;\n    }\n\n    /**\n     * Sets or gets the configuration of side effect.\n     *\n     * When setter,\n     * @param {Object} config Configuration of side effect.\n     * @return {GenericSideEffect} Side effect instance.\n     *\n     * When getter,\n     * @return {Object} Side effect configuration.\n     */\n    config (...params) {\n        if (params.length) {\n            this._config = mergeRecursive(this._config, params[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    disable () {\n        this._enabled = false;\n        return this;\n    }\n\n    enable () {\n        this._enabled = true;\n        return this;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n\n    /**\n     * Applies the interaction effect on the chart. This is where the implemntation of the side effect is defined.\n     *\n     * @param {Object} selectionSet Contains the entry and exit set of data which got affected during interaction.\n     * @param {Object} selectionSet.mergedEnter Combined previous entry and new entry set.\n     * @param {DataModel} selectionSet.mergedEnter.model Instance of data model containing all rows which got\n     * affected during interaction.\n     * @param {Array} selectionSet.mergedEnter.uids Ids of all rows which were affected during interaction.\n     * @param {Object} selectionSet.mergedExit Combined previous exit and new exit set.\n     * @param {DataModel} selectionSet.mergedExit.model Instance of data model containing rows which were not affected\n     * during interaction.\n     * @param {Array} selectionSet.mergedExit.uids Ids of all rows which were not affected during interaction.\n     * @param {Object} selectionSet.entrySet Entry set information.\n     * @param {Array} selectionSet.entrySet[0].uids All row ids which got affected during previous interaction.\n     * @param {Array} selectionSet.entrySet[1].uids All row ids which got affected during current interaction.\n     * @param {Array} selectionSet.exitSet[0].uids All row ids which were not affected during previous interaction.\n     * @param {Array} selectionSet.exitSet[1].uids All row ids which were not affected during current interaction.\n     * @param {Object} payload Payload information of the behavioural action on trigger of which this side effect\n     * is applied.\n     * @param {Object} options Optional information for side effect like strategy, etc.\n     */\n    apply () {\n        return this;\n    }\n\n    /**\n     * Adds a new strategy method for this side effect. The strategy method is implemented by side effect class.\n     *\n     * @param {string} name Name of the strategy.\n     * @param {Function} fn Strategy method.\n     *\n     * @return {GenericSideEffect} Instance of side effect.\n     */\n    addStrategy (name, fn) {\n        this._strategies[name] = fn;\n        return this;\n    }\n}\n","import GenericSideEffect from './generic';\n\n/**\n * This class is inherited by all side effects which changes the look of any existing elements in the visualization.\n * For example, if a side effect wants to change the color of bar plots, then it is a surrogate side effect.\n *\n * To use this,\n * ```\n *      const SurrogateSideEffect = muze.SideEffects.standards.SurrogateSideEffect;\n *\n *      class BarColorChanger extends SurrogateSideEffect {\n *          static formalName () {\n *              return 'colorChanger';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n *\n * @module SurrogateSideEffect\n * @class\n * @extends GenericSideEffect\n */\nexport default class SurrogateSideEffect extends GenericSideEffect {\n    /**\n     * Applies or removes interaction styles from plot elements. An array of row ids needs to be passed\n     * which identifies the plot elements and applies styles to them.\n     *\n     * To apply the interaction style,\n     * ```\n     *      const entryRowIds = entrySet[0].uids;\n     *      const interactionStyle = [{\n     *          type: 'fill',\n     *          intensity: [0, 0, 15, 0] // hsla configuration\n     *      }];\n     *\n     *      this.applyInteractionStyle(entryRowIds, interactionStyle, 'brighten', true);\n     * ```\n     * @public\n     * @param {Array} set Array of row ids.\n     * @param {Array} config Style configuration.\n     * @param {Object} config[0] fill or stroke configuration.\n     * @param {string} config[0].type Type of style - fill or stroke.\n     * @param {Array} config[0].intensity hsla configuration.\n     * @param {string} interactionType Type of interaction. This is needed for storing the styles for\n     * each type of interaction in the plot elements.\n     * @param {boolean} apply Whether to apply or remove the interaction style.\n     *\n     * @return {SurrogateSideEffect} Instance of surrogate side effect.\n     */\n    applyInteractionStyle (set, config = {}, interactionType, apply) {\n        const layers = this.firebolt.context.layers();\n        layers.forEach(layer => layer.config().interactive !== false &&\n            layer.applyInteractionStyle(interactionType, set.uids, apply));\n        return this;\n    }\n}\n","import { makeElement } from 'muze-utils';\n\nimport GenericSideEffect from './generic';\n\n/**\n * Any side effect which will add any new element to the chart like drawing a rectangular box or any annotation over\n * the chart needs to inherit this class. This class has methods which returns the container where the dom elements\n * needs to be created.\n *\n * To use this,\n * ```\n *      const SpawnableSideEffect = muze.SideEffects.standards.SpawnableSideEffect;\n *\n *      class SelectionBox extends SpawnableSideEffect {\n *          static formalName () {\n *              return 'selectionBox';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n * @class\n * @extends GenericSideEffect\n * @module SpawnableSideEffect\n */\nexport default class SpawnableSideEffect extends GenericSideEffect {\n    /**\n     * Creates a html or svg element in the container.\n     *\n     * @public\n     * @param {SVGElement|HTMLElement} container Container where the dom element will be rendered.\n     * @param {string} elemType Type of dom element.\n     * @param {Array} data Array of objects with which the dom elements will be binded.\n     * @param {string} className class name of the element.\n     *\n     * @return {Selection} D3 Selection of the element.\n     */\n    createElement (container, elemType, data, className, callbacks) {\n        return makeElement(container, elemType, data, className, callbacks);\n    }\n\n    /**\n     * Returns the drawing information for side effect like svg container, dimensions of the visual unit.\n     *\n     * @public\n     * @return {Object} Drawing information for side effect.\n     * ```\n     *      sideEffectGroup: // svg container where the side effect needs to be appended.\n     *      svgContainer: // svg container of the {@link VisualUnit}.\n     *      htmlContainer: // html div container of the {@link VisualUnit}.\n     *      width: // Width of the {@link VisualUnit}\n     *      height: // Height of the {@link VisualUnit}\n     * ```\n     */\n    drawingContext (...drawingContext) {\n        if (drawingContext.length) {\n            this._drawingContext = drawingContext[0];\n            return this;\n        }\n        return this._drawingContext();\n    }\n\n    show () {\n        return this;\n    }\n\n    hide () {\n        return this;\n    }\n}\n","import { selectElement } from 'muze-utils';\n\nexport const getBoxDimensionsFromPayload = (payload, axes, axisFields) => {\n    let x1;\n    let x2;\n    let y1;\n    let y2;\n    let xRange;\n    let yRange;\n    let direction;\n    const criteria = payload.criteria;\n    const dimensions = payload.dimensions || {};\n    const xDim = dimensions.x;\n    const yDim = dimensions.y;\n\n    if (criteria === null) {\n        return null;\n    }\n\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const xLinear = xAxis.constructor.type() === 'linear';\n    const yLinear = yAxis.constructor.type() === 'linear';\n    const xField = `${axisFields.x[0]}`;\n    const yField = `${axisFields.y[0]}`;\n    const xCriteria = criteria[xField];\n    const yCriteria = criteria[yField];\n\n    if (xCriteria && xCriteria[0] instanceof Array) {\n        xRange = xCriteria[0];\n        yRange = xCriteria[1];\n    } else {\n        xRange = xCriteria || [];\n        yRange = yCriteria || [];\n    }\n    direction = xCriteria && yCriteria ? 'both' : (xCriteria ? 'vertical' : 'horizontal');\n    if (xRange && xRange.length) {\n        if ((yAxis.constructor.type() === 'band' && xLinear)) {\n            x1 = x2 = undefined;\n            direction = 'horizontal';\n        } else {\n            const domain = xAxis.domain();\n            const bandScale = xAxis.constructor.type() === 'band';\n            let x1Val;\n            let x2Val;\n            if (bandScale) {\n                let x1DomainIndex = domain.indexOf(xRange[0]);\n                let x2DomainIndex = domain.indexOf(xRange[xRange.length - 1]);\n                [x1DomainIndex, x2DomainIndex] = [x1DomainIndex, x2DomainIndex].sort((a, b) => a - b);\n                x1Val = domain[x1DomainIndex];\n                x2Val = domain[x2DomainIndex];\n            } else {\n                x1Val = xRange[0];\n                x2Val = xRange[xRange.length - 1];\n            }\n            x1 = xAxis.getScaleValue(x1Val);\n            x2 = xAxis.getScaleValue(x2Val);\n            x2 += bandScale ? xAxis.getUnitWidth() : 0;\n        }\n    } else {\n        x1 = x2 = undefined;\n    }\n    if (yRange && yRange.length) {\n        if ((xAxis.constructor.type() === 'band' && yLinear)) {\n            y1 = y2 = undefined;\n            direction = 'vertical';\n        } else {\n            const domain = yAxis.domain();\n            const bandScale = yAxis.constructor.type() === 'band';\n            let y1Val;\n            let y2Val;\n            if (bandScale) {\n                let y1DomainIndex = domain.indexOf(yRange[0]);\n                let y2DomainIndex = domain.indexOf(yRange[yRange.length - 1]);\n                [y1DomainIndex, y2DomainIndex] = [y1DomainIndex, y2DomainIndex].sort(((a, b) => b - a));\n                y1Val = domain[y1DomainIndex];\n                y2Val = domain[y2DomainIndex];\n            } else {\n                y1Val = yRange[0];\n                y2Val = yRange[yRange.length - 1];\n            }\n            y1 = yAxis.getScaleValue(y1Val);\n            y2 = yAxis.getScaleValue(y2Val);\n            y2 += yAxis.constructor.type() === 'band' ? yAxis.getUnitWidth() : 0;\n        }\n    } else {\n        y1 = y2 = undefined;\n    }\n\n    if ((yLinear && xLinear) || !payload.dragEnd) {\n        if (xDim) {\n            [x1, x2] = xDim;\n        }\n        if (yDim) {\n            [y1, y2] = yDim;\n        }\n    }\n\n    return {\n        dimension: {\n            x1,\n            x2,\n            y1,\n            y2\n        },\n        direction\n    };\n};\n\nexport const changeVisibility = (context, sideEffectGroup, visible) => {\n    const config = context.config();\n    const className = config.defClassName;\n    const classPrefix = config.classPrefix;\n    selectElement(sideEffectGroup).selectAll(`.${classPrefix}-${className}`)\n                    .style('display', visible ? 'block' : 'none');\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    isValidValue\n} from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport './styles.scss';\nimport SpawnableSideEffect from '../spawnable';\nimport { selectionBoxDrag } from '../../actions/physical/selection-box-drag';\nimport { getBoxDimensionsFromPayload, changeVisibility } from './helper';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\nclass SelectionBox extends SpawnableSideEffect {\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            defClassName: 'selection-box-group',\n            className: '',\n            classPrefix: CLASSPREFIX,\n            box: {\n                defClassName: 'selection-box',\n                className: ''\n            },\n            transition: {\n                duration: 200\n            }\n        };\n    }\n\n    static formalName () {\n        return 'selectionBox';\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     * @param {Object} dimension Dimensions of the selection box.\n     * @param {number} dimension.x1 Starting x position\n     * @param {number} dimension.x2 Ending x position\n     * @param {number} dimension.y1 Starting y position\n     * @param {number} dimension.y2 Ending y position\n     * @param {Object} conf Configuration needed to draw the selection box\n     * @param {number} unitWidth Width of the visual unit.\n     * @param {number} unitHeight Height of the visual unit.\n     */\n    apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const config = this._config;\n        const boxConf = config.box;\n        const firebolt = this.firebolt;\n        const drawingInf = this.drawingContext();\n        const mountPoint = drawingInf.sideEffectGroup;\n        const unitWidth = drawingInf.width;\n        const unitHeight = drawingInf.height;\n        const classPrefix = config.classPrefix;\n        const selectionGroupClassName = config.defClassName;\n\n        if (payload.criteria === null) {\n            this.hide(drawingInf);\n            return this;\n        }\n\n        const sourceInf = firebolt.context.getSourceInfo();\n        const { dimension, direction } = getBoxDimensionsFromPayload(payload, sourceInf.axes,\n            sourceInf.fields);\n        const transition = payload.dragEnd && config.transition;\n\n        if (direction === 'both' || direction === 'vertical') {\n            x = Math.min(dimension.x1, dimension.x2);\n            width = Math.abs(dimension.x2 - dimension.x1);\n        } else {\n            x = 0;\n            width = unitWidth;\n        }\n        if (direction === 'both' || direction === 'horizontal') {\n            y = Math.min(dimension.y1, dimension.y2);\n            height = Math.abs(dimension.y2 - dimension.y1);\n        } else {\n            height = unitHeight;\n            y = 0;\n        }\n        this.show(drawingInf);\n        // Create the data array for drawing the rectangle\n        const points = [\n            {\n                x,\n                y,\n                width,\n                height\n            }\n        ];\n        // Create the container group for selection box.\n        const selectionGroup = makeElement(selectElement(mountPoint), 'g', [1],\n            `.${classPrefix}-${selectionGroupClassName}`);\n        const sideEffect = this;\n        const selection = selectionGroup.selectAll('rect').data(points);\n        const selectionBox = selection.enter().append('rect')\n                        .each(function () {\n                            selectionBoxDrag(firebolt)(selectElement(this), ['brush'], sideEffect);\n                        })\n                        .merge(selection)\n                        .each(function (attrs) {\n                            let element = selectElement(this);\n                            transition && (element = element.transition().duration(transition.duration));\n                            for (const key in attrs) {\n                                if ({}.hasOwnProperty.call(attrs, key)) {\n                                    isValidValue(attrs[key]) && element.attr(key, attrs[key]);\n                                }\n                            }\n                        });\n        // Get the qualified class name for selection box rectangle\n        const boxClassName = getQualifiedClassName(boxConf.defClassName, this._id, classPrefix);\n        selectionBox.classed(boxClassName.join(' '), true);\n        selectionBox.classed(boxConf.className, true);\n\n        return this;\n    }\n\n    hide (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, false);\n    }\n\n    show (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, true);\n    }\n}\n\nexport default SelectionBox;\n\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './helpers/drag-action-config';\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let subject;\n    let drawingInf;\n    const context = firebolt.context;\n    const onDrag = (payload) => {\n        behaviours.forEach(action => firebolt.dispatchBehaviour(action, payload));\n    };\n    const d3Drag = getD3Drag();\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        drawingInf = context.getDrawingContext();\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        subject.x += event.dx;\n        subject.y += event.dy;\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                }\n            }, context.data().getFieldsConfig());\n            onDrag(payload);\n        }\n    }).on('end', () => {\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                },\n                snap: true\n            }, context.data().getFieldsConfig());\n            payload.dragEnd = true;\n            onDrag(payload);\n        }\n    }));\n};\n","export const CLASSPREFIX = 'muze';\nexport const ARROW_RIGHT = 'right';\nexport const ARROW_TOP = 'top';\nexport const ARROW_BOTTOM = 'bottom';\nexport const ARROW_LEFT = 'left';\nexport const TOOLTIP_LEFT = 'left';\nexport const TOOLTIP_RIGHT = 'right';\nexport const TOOLTIP_BOTTOM = 'bottom';\nexport const TOOLTIP_TOP = 'top';\nexport const INITIAL_STYLE = {\n    position: 'absolute',\n    width: 0,\n    height: 0\n};\n","import { CLASSPREFIX } from './constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'tooltip-box',\n    connectorClassName: 'tooltip-connectors',\n    className: '',\n    row: {\n        margin: 0\n    },\n    content: {\n        spacing: 5,\n        iconContainerSize: 10,\n        iconScale: 1,\n        iconShape: 'circle',\n        iconColor: '#ff0000',\n        rowMargin: '0px',\n        margin: 10,\n        separator: ':',\n        className: 'tooltip-content-container',\n        parentClassName: 'tooltip-content-parent-container'\n    },\n    arrow: {\n        size: 10,\n        disabled: false,\n        defClassName: 'tooltip-arrow',\n        className: '',\n        color: 'rgba(195,195,195,0.85)'\n    }\n};\n","import { getQualifiedClassName } from 'muze-utils';\nimport { TOOLTIP_LEFT, TOOLTIP_RIGHT, ARROW_RIGHT, ARROW_LEFT, TOOLTIP_BOTTOM } from './constants';\n\nexport const getArrowPos = (orient, dim, measurement, config) => {\n    let arrowPos;\n    const { x, y, boxHeight, boxWidth } = measurement;\n    const arrowDisabled = config.arrow.disabled;\n    const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n\n    if (orient === ARROW_LEFT || orient === ARROW_RIGHT) {\n        let start = 0;\n        let diff = boxHeight / 2;\n        const plotBottom = dim.y + dim.height;\n        const boxBottom = y + boxHeight;\n\n        if (dim.y > y) {\n            start = dim.y - y;\n            diff = (plotBottom >= boxBottom ? (boxBottom - dim.y) : dim.height) / 2;\n        } else if (boxBottom > plotBottom) {\n            diff = Math.abs(y - (dim.y + dim.height)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    } else {\n        let start = 0;\n        let diff = boxWidth / 2;\n        const plotRight = dim.x + dim.width;\n        const boxRight = x + boxWidth;\n\n        if (dim.x > x) {\n            start = dim.x - x;\n            diff = (plotRight >= boxRight ? (boxRight - dim.x) : dim.width) / 2;\n        } else if (boxRight > plotRight) {\n            diff = Math.abs(x - (dim.x + dim.width)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    }\n    return arrowPos;\n};\n\n/**\n * Places the arrow in the specified arrow position. It also applies appropriate arrow\n * class name to the arrow element.\n * @param {string} position Left, bottom or right position of the arrow;\n * @param {number} arrowPos position of arrow in pixels\n * @return {Tooltip} Instance of tooltip.\n */\nexport const placeArrow = (context, position, arrowPos) => {\n    const tooltipArrow = context._tooltipArrow;\n    const tooltipBackground = context._tooltipBackground;\n    const config = context._config;\n    const classPrefix = config.classPrefix;\n    const arrowConf = config.arrow;\n    const className = getQualifiedClassName(arrowConf.defClassName, context._id, config.classPrefix);\n\n    tooltipArrow.style('display', 'block');\n    tooltipArrow.attr('class', `${className.join(' ')}`);\n    if (position === TOOLTIP_LEFT || position === TOOLTIP_RIGHT) {\n        tooltipArrow.style('top', `${arrowPos}px`);\n        tooltipArrow.style('left', '');\n        tooltipBackground.style('top', `${arrowPos}px`);\n        tooltipBackground.style('left', '');\n    } else {\n        position === TOOLTIP_BOTTOM ? tooltipArrow.style('top', '100%') : tooltipArrow.style('top',\n            `-${arrowConf.size}px`);\n        tooltipArrow.style('left', `${arrowPos}px`);\n        position === TOOLTIP_BOTTOM ? tooltipBackground.style('top', '100%') : tooltipBackground.style('top',\n            `-${arrowConf.size + 3}px`);\n        tooltipBackground.style('left', `${arrowPos}px`);\n    }\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow`, true);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${context._arrowOrientation}`, false);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${position}`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${context._arrowOrientation}`, false);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${position}`, true);\n    return this;\n};\n\nexport const reorderContainers = (parentContainer, className) => {\n    parentContainer.selectAll(className).sort((a, b) => a - b);\n};\n","import {\n    formatTemporal,\n    DimensionSubtype,\n    MeasureSubtype,\n    FieldType,\n    DataModel,\n    defaultValue\n} from 'muze-utils';\n\nconst { InvalidAwareTypes } = DataModel;\n\nconst formatters = (formatter, interval, valueParser) => ({\n    [DimensionSubtype.TEMPORAL]: (value) => {\n        if (value instanceof InvalidAwareTypes) {\n            return valueParser(value);\n        }\n        return formatTemporal(value, interval);\n    },\n    [MeasureSubtype.CONTINUOUS]: value => (value instanceof InvalidAwareTypes ? valueParser(value) :\n        formatter(value.toFixed(2))),\n    [DimensionSubtype.CATEGORICAL]: value => valueParser(value)\n});\n\nconst getDefaultTooltipFormatterFn = (formatter, defaultFormatter) => defaultValue(formatter, defaultFormatter);\n\nconst getTabularData = (dataObj, context, defaultFormatter) => {\n    const rows = [];\n    const { data, schema, fieldspace } = dataObj;\n    rows.push(schema.map(d => d.name));\n    const { valueParser, timeDiffs } = context;\n    data.forEach((d) => {\n        const row = [];\n        schema.forEach((fieldObj, i) => {\n            const interval = fieldObj.subtype === DimensionSubtype.TEMPORAL ? timeDiffs[fieldObj.name] : 0;\n            const numberFormat = fieldObj.type === FieldType.MEASURE && fieldspace.fields[i].numberFormat();\n            const formatterFn = getDefaultTooltipFormatterFn(formatters(numberFormat,\n                interval, valueParser)[fieldObj.subtype], defaultFormatter);\n            const value = formatterFn(d[i]);\n            row.push(value);\n        });\n        rows.push(row);\n    });\n    return rows;\n};\n\nexport const buildTooltipData = (dataModel, config = {}, context) => {\n    let fieldValues = [];\n    const dataObj = dataModel.getData();\n    const data = dataObj.data;\n    const schema = dataObj.schema;\n    const separator = config.separator;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const fieldspace = dataModel.getFieldspace();\n    const detailFields = context.detailFields || [];\n    const dimensions = schema.filter(d => d.type === FieldType.DIMENSION);\n    const measures = schema.filter(d => d.type === FieldType.MEASURE);\n    const containsDetailField = schema.find(d => detailFields.indexOf(d.name) !== -1);\n    const dataLen = data.length;\n    const {\n        valueParser,\n        axes,\n        dimensionMeasureMap,\n        timeDiffs\n    } = context;\n    const defFormatter = formatters(null, null, valueParser)[DimensionSubtype.CATEGORICAL];\n    const getRowContent = (field, type) => {\n        let value;\n        let formattedValue;\n        let measureIndex;\n        const values = [];\n        const index = fieldsConfig[field].index;\n        const interval = fieldsConfig[field].def.subtype === DimensionSubtype.TEMPORAL ? timeDiffs[field] : 0;\n        const formatterFn = getDefaultTooltipFormatterFn(formatters(val => val, interval, valueParser)[type],\n            defFormatter);\n\n        if (value !== null) {\n            let uniqueVals = type === MeasureSubtype.CONTINUOUS ? data.map(d => d[index]) :\n                [...new Set(data.map(d => d[index]))];\n            uniqueVals = uniqueVals.filter(d => d !== '');\n            const colorAxis = axes.color[0];\n            const shapeAxis = axes.shape[0];\n            const sizeAxis = axes.size[0];\n            const isRetinalField = (colorAxis || shapeAxis || sizeAxis) && dataLen > 1 &&\n                    type !== MeasureSubtype.CONTINUOUS;\n\n            uniqueVals.forEach((val, i) => {\n                let key;\n                const associatedMeasures = dimensionMeasureMap[field];\n\n                if (associatedMeasures && associatedMeasures.length && dataLen > 1) {\n                    key = val;\n                    let icon = {\n                        value: ''\n                    };\n\n                    if (isRetinalField) {\n                        icon = {\n                            type: 'icon',\n                            color: colorAxis.getColor(val),\n                            shape: shapeAxis.getShape(val),\n                            size: sizeAxis.getSize(val) * config.iconScale\n                        };\n                    }\n                    if (associatedMeasures.length > 1) {\n                        const formattedKey = type === DimensionSubtype.TEMPORAL ? formatterFn(key, interval) : key;\n                        values.push([icon, `${formattedKey}`]);\n                        associatedMeasures.forEach((measure) => {\n                            measureIndex = fieldsConfig[measure].index;\n                            value = data[i][measureIndex];\n                            const numberFormat = fieldspace.fields[measureIndex].numberFormat();\n                            const measureFormatter = getDefaultTooltipFormatterFn(\n                                formatters(numberFormat, interval, valueParser)[MeasureSubtype.CONTINUOUS]);\n                            formattedValue = measureFormatter(value);\n                            values.push([{\n                                value: `${measure}${separator}`,\n                                style: {\n                                    'margin-left': `${config.margin}px}`\n                                },\n                                className: `${config.classPrefix}-tooltip-key`\n                            }, {\n                                value: `${formattedValue}`,\n                                className: `${config.classPrefix}-tooltip-value`\n                            }]);\n                        });\n                    } else {\n                        measureIndex = fieldsConfig[associatedMeasures[0]].index;\n                        value = data[i][measureIndex];\n                        const numberFormat = fieldspace.fields[measureIndex].numberFormat();\n                        const measureFormatter = getDefaultTooltipFormatterFn(\n                            formatters(numberFormat, interval, valueParser)[MeasureSubtype.CONTINUOUS]);\n                        formattedValue = measureFormatter(value);\n                        const formattedKey = type === DimensionSubtype.TEMPORAL ? formatterFn(key, interval) : key;\n                        values.push([\n                            icon,\n                            {\n                                value: `${formattedKey}`,\n                                className: `${config.classPrefix}-tooltip-key`\n                            },\n                            {\n                                value: `${formattedValue}`,\n                                className: `${config.classPrefix}-tooltip-value`\n                            }\n                        ]);\n                    }\n                } else {\n                    key = field;\n                    value = val;\n                    formattedValue = formatterFn(value);\n                    values.push([{\n                        value: `${key}${separator}`,\n                        className: `${config.classPrefix}-tooltip-key`\n                    }, {\n                        value: `${formattedValue}`,\n                        className: `${config.classPrefix}-tooltip-value`\n                    }]);\n                }\n            });\n        }\n        return values;\n    };\n    let displayFormat = 'keyValue';\n\n    if (dataLen > 1 && containsDetailField) {\n        fieldValues = getTabularData({\n            data,\n            schema,\n            fieldspace\n        }, context, defFormatter);\n        displayFormat = 'table';\n    } else {\n        dimensions.forEach((item) => {\n            const type = item.subtype ? item.subtype : item.type;\n            fieldValues = [...fieldValues, ...getRowContent(item.name, type)];\n        });\n\n        const allMeasures = [...new Set(...Object.values(dimensionMeasureMap))];\n        const filteredMeasures = dataLen > 1 ? measures.filter(d => allMeasures.indexOf(d.name) === -1)\n            : measures;\n\n        filteredMeasures.forEach((item) => {\n            const type = item.subtype ? item.subtype : item.type;\n            fieldValues = [...fieldValues, ...getRowContent(item.name, type)];\n        });\n    }\n\n    return {\n        content: fieldValues,\n        displayFormat\n    };\n};\n\n/**\n * This contains the strategy methods for showing tooltip in the chart.\n * @param {VisualUnit} context Attached instance.\n */\nexport const strategy = {\n    keyValue: (data, config, context) => {\n        const values = buildTooltipData(data, config, context);\n        return values;\n    }\n};\n\nexport const DEFAULT_STRATEGY = 'keyValue';\n","import {\n    selectElement,\n    mergeRecursive,\n    makeElement,\n    setAttrs,\n    setStyles,\n    getSymbol,\n    isSimpleObject\n} from 'muze-utils';\nimport { DEFAULT_STRATEGY, strategy } from './strategy';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class is used to manage the content of tooltip.\n */\nexport default class Content {\n    /**\n     * Creates an instance of content.\n     */\n    constructor () {\n        this._model = null;\n        this._strategy = DEFAULT_STRATEGY;\n        this._formatter = null;\n        this._config = this.constructor.defaultConfig();\n    }\n   /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        const config = defaultConfig.content;\n        config.classPrefix = defaultConfig.classPrefix;\n        return config;\n    }\n\n    config (...c) {\n        if (c.length > 0) {\n            this._config = mergeRecursive(this._config, c[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Update model. The format contains presentation strategy which determines how to show the content.\n     * If no strategy is mentioned then default is to show key value pair\n    */\n    update (item) {\n        this._model = item.model;\n        this._strategy = item.strategy !== undefined ? item.strategy : DEFAULT_STRATEGY;\n        this._formatter = item.formatter;\n        return this;\n    }\n\n    context (ctx) {\n        this._context = ctx;\n        return this;\n    }\n\n    render (mount) {\n        let data;\n        const config = this._config;\n        const iconContainerSize = config.iconContainerSize;\n        const formatter = this._formatter;\n        const rowMargin = config.rowMargin;\n        const model = this._model;\n\n        this._mount = mount;\n        if (model instanceof Array) {\n            data = model;\n        } else {\n            data = formatter instanceof Function ? formatter(this._model, this._context) :\n                strategy[this._strategy](this._model, this.config(), this._context);\n        }\n\n        if (data instanceof Function) {\n            mount.html(data());\n        } else {\n            let content = data;\n            let displayFormat = 'default';\n\n            if (isSimpleObject(data)) {\n                content = data.content;\n                displayFormat = data.displayFormat;\n            }\n\n            const body = makeElement(mount, 'div', [displayFormat], `${config.classPrefix}-tooltip-content`, {},\n                d => d);\n\n            if (displayFormat === 'table') {\n                const table = makeElement(body, 'table', [1], `${config.classPrefix}-tooltip-table`);\n                const tbody = makeElement(table, 'tbody', [1], `${config.classPrefix}-tooltip-table-tbody`);\n                const rows = makeElement(tbody, 'tr', content, `${config.classPrefix}-tooltip-table-row`);\n                rows.each(function (d, i) {\n                    selectElement(this).classed(`${config.classPrefix}-tooltip-table-row-${i}`, true);\n                });\n                const cells = makeElement(rows, 'td', d => d, `${config.classPrefix}-tooltip-table-cell`);\n                cells.each(function (d) {\n                    selectElement(this).html(d);\n                });\n            } else {\n                const rows = makeElement(body, 'div', content, `${config.classPrefix}-tooltip-row`);\n                const cells = makeElement(rows, 'span', d => d, `${config.classPrefix}-tooltip-content`);\n                cells.attr('class', `${config.classPrefix}-tooltip-content`);\n                setStyles(rows, {\n                    margin: rowMargin\n                });\n                setStyles(cells, {\n                    display: 'inline-block',\n                    'margin-right': `${config.spacing}px`\n                });\n\n                cells.each(function (d) {\n                    const el = selectElement(this);\n                    el.html('');\n                    if (d instanceof Object) {\n                        if (d.type === 'icon') {\n                            const svg = makeElement(el, 'svg', [1]);\n                            const path = makeElement(svg, 'path', [1]);\n                            const shape = d.shape instanceof Function ? d.shape : getSymbol(d.shape);\n\n                            setAttrs(svg, {\n                                x: 0,\n                                y: 0,\n                                width: iconContainerSize,\n                                height: iconContainerSize\n                            });\n                            setAttrs(path, {\n                                d: shape.size(d.size)(),\n                                transform: `translate(${iconContainerSize / 2}, ${iconContainerSize / 2})`\n                            });\n                            setStyles(path, {\n                                fill: d.color\n                            });\n                            setStyles(svg, {\n                                width: `${iconContainerSize}px`,\n                                height: `${iconContainerSize}px`\n                            });\n                        } else {\n                            el.html(d.value);\n                            d.className && el.classed(d.className, true);\n                            setStyles(el, d.style);\n                        }\n                    } else {\n                        el.html(d);\n                    }\n                });\n            }\n        }\n        return this;\n    }\n\n    clear () {\n        this._model = null;\n        return this;\n    }\n}\n","import {\n    mergeRecursive,\n    getQualifiedClassName,\n    getUniqueId,\n    selectElement,\n    setStyles,\n    makeElement\n} from 'muze-utils';\nimport { ARROW_BOTTOM, ARROW_LEFT, ARROW_RIGHT, TOOLTIP_LEFT, TOOLTIP_RIGHT, TOOLTIP_BOTTOM, TOOLTIP_TOP,\n    INITIAL_STYLE } from './constants';\nimport { defaultConfig } from './default-config';\nimport { getArrowPos, placeArrow, reorderContainers } from './helper';\nimport './styles.scss';\nimport Content from './content';\n\n/**\n * This component is responsible for creating a tooltip element. It appends the tooltip\n * in the body element.\n * @class Tooltip\n */\nexport default class Tooltip {\n    /**\n     * Initializes the tooltip with the container element and configuration\n     * @param {HTMLElement} container container where the tooltip will be mounted.\n     * @param {string} className Class name of the tooltip.\n     */\n    constructor (htmlContainer, svgContainer) {\n        let connectorContainer = svgContainer;\n        this._id = getUniqueId();\n        this._config = {};\n        this.config({});\n        const tooltipConf = this._config;\n        const classPrefix = tooltipConf.classPrefix;\n        const contentClass = tooltipConf.content.parentClassName;\n        const container = makeElement(htmlContainer, 'div', [1], `${classPrefix}-tooltip-container`);\n        this._container = container;\n        this._tooltipContainer = container.append('div').style('position', 'absolute');\n        this._contentContainer = this._tooltipContainer.append('div').attr('class', `${classPrefix}-${contentClass}`);\n        this._tooltipBackground = this._tooltipContainer.append('div').style('position', 'relative');\n        this._tooltipArrow = this._tooltipContainer.append('div');\n\n        if (!svgContainer) {\n            connectorContainer = htmlContainer.append('svg').style('pointer-events', 'none');\n        }\n        this._contents = {};\n        this._tooltipConnectorContainer = selectElement(connectorContainer)\n            .append('g')\n            .attr('class', `${tooltipConf.classPrefix}-${tooltipConf.connectorClassName}`);\n        const id = this._id;\n        const defClassName = tooltipConf.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, id, tooltipConf.classPrefix);\n\n        setStyles(this._tooltipArrow, INITIAL_STYLE);\n        setStyles(this._tooltipBackground, INITIAL_STYLE);\n        this.addClass(qualifiedClassName.join(' '));\n        this.addClass(tooltipConf.className);\n        this.hide();\n    }\n\n    /**\n     * Sets the configuration of tooltip.\n     * @param {Object} config Configuration of tooltip\n     * @return {Tooltip} Instance of tooltip\n     */\n    config (...config) {\n        if (config.length > 0) {\n            const defConf = mergeRecursive({}, this.constructor.defaultConfig());\n            this._config = mergeRecursive(defConf, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n    /**\n     * Sets the class name of tooltip\n     * @param {string} className tooltip class name\n     * @return {Tooltip} Instance of tooltip.\n     */\n    addClass (className) {\n        this._tooltipContainer.classed(className, true);\n        return this;\n    }\n\n    context (...ctx) {\n        if (ctx.length) {\n            this._context = ctx[0];\n            return this;\n        }\n        return this._context;\n    }\n\n    content (name, data, contentConfig = {}) {\n        const config = this.config();\n        const { classPrefix } = config;\n        const contentClass = config.content.className;\n        const formatter = config.formatter;\n        const className = contentConfig.className || `${classPrefix}-${contentClass}-${name}`;\n        const content = this._contents[name] = this._contents[name] || new Content();\n        const container = makeElement(this._contentContainer, 'div', [contentConfig.order], className);\n        container.attr('class', `${classPrefix}-${contentClass} ${className}`);\n        reorderContainers(this._contentContainer, `.${classPrefix}-${contentClass}`);\n        const contentConf = config.content;\n        contentConfig.classPrefix = this._config.classPrefix;\n        content.config(contentConf);\n\n        if (data === null) {\n            content.clear();\n            container.remove();\n            delete this._contents[name];\n        } else {\n            content.update({\n                model: data,\n                formatter: contentConfig.formatter || formatter\n            });\n            content.context(this._context);\n            content.render(container);\n        }\n\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n        }\n        return this;\n    }\n\n    getContents () {\n        return Object.values(this._contents);\n    }\n\n    /**\n     * Positions the tooltip at the given x and y position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Tooltip} Instance of tooltip.\n     */\n    position (x, y, conf = {}) {\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n            return this;\n        }\n        this.show();\n        const target = this._target;\n        const repositionArrow = conf.repositionArrow;\n\n        if (target && repositionArrow) {\n            const node = this._tooltipContainer.node();\n            const config = this._config;\n            const arrowDisabled = config.arrow.disabled;\n            const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n            const arrowOrient = this._arrowOrientation;\n            const outsidePlot = arrowOrient === ARROW_LEFT || arrowOrient === ARROW_RIGHT ?\n                (y + node.offsetHeight - arrowWidth) < target.y || y > (target.y + target.height) :\n                (x + node.offsetWidth - arrowWidth) < target.x || x > (target.x + target.width);\n\n            if (!arrowDisabled) {\n                if (outsidePlot) {\n                    let path;\n                    this._tooltipArrow.style('display', 'none');\n                    this._tooltipBackground.style('display', 'none');\n                    this._tooltipConnectorContainer.style('display', 'block');\n                    const connector = this._tooltipConnectorContainer.selectAll('path').data([1]);\n                    const enter = connector.enter().append('path');\n                    if (arrowOrient === ARROW_LEFT) {\n                        path = `M ${x} ${y + node.offsetHeight / 2} L ${target.x + target.width}`\n                            + ` ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_RIGHT) {\n                        path = `M ${x + node.offsetWidth} ${y + node.offsetHeight / 2}`\n                                + ` L ${target.x} ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_BOTTOM) {\n                        path = `M ${x + node.offsetWidth / 2} ${y + node.offsetHeight}`\n                            + ` L ${target.x + target.width / 2} ${target.y}`;\n                    }\n                    enter.merge(connector).attr('d', path).style('display', 'block');\n                } else {\n                    const arrowPos = getArrowPos(arrowOrient, target, {\n                        x,\n                        y,\n                        boxHeight: node.offsetHeight,\n                        boxWidth: node.offsetWidth\n                    }, this._config);\n\n                    placeArrow(this, this._arrowOrientation, arrowPos);\n                    this._tooltipConnectorContainer.style('display', 'none');\n                }\n            }\n        }\n\n        const offset = this._offset || {\n            x: 0,\n            y: 0\n        };\n        this._tooltipContainer.style('left', `${offset.x + x}px`).style('top',\n            `${offset.y + y}px`);\n\n        return this;\n    }\n\n    /**\n     * Positions the tooltip relative to a rectangular box. It takes care of tooltip overflowing the\n     * boundaries.\n     * @param {Object} dim Dimensions of the plot.\n     */\n    positionRelativeTo (dim, tooltipConf = {}) {\n        let obj;\n        let orientation = tooltipConf.orientation;\n        this.show();\n        if (!dim) {\n            this.hide();\n            return this;\n        }\n\n        const extent = this._extent;\n        const node = this._tooltipContainer.node();\n\n        this._tooltipContainer.style('top', '0px')\n                        .style('left', '0px');\n        const offsetWidth = node.offsetWidth + 2;\n        const offsetHeight = node.offsetHeight + 2;\n        const config = this._config;\n        const offset = this._offset;\n        const arrowDisabled = config.arrow.disabled;\n        const arrowSize = arrowDisabled ? 0 : config.arrow.size;\n        const draw = tooltipConf.draw !== undefined ? tooltipConf.draw : true;\n        const topSpace = dim.y;\n        // When there is no space in right\n        const dimX = dim.x + dim.width + offset.x;\n        const rightSpace = extent.width - dimX;\n        const leftSpace = dim.x + offset.x - extent.x;\n        const positionTop = topSpace > (offsetHeight + arrowSize);\n        const positionRight = rightSpace >= offsetWidth + arrowSize;\n        const positionLeft = leftSpace >= offsetWidth + arrowSize;\n\n        const positionHorizontal = () => {\n            let position;\n            let x = dim.x + dim.width;\n            let y = dim.y;\n\n            if (positionRight) {\n                position = TOOLTIP_LEFT;\n                x += arrowSize;\n            } else if (positionLeft) {\n                x = dim.x - offsetWidth;\n                position = TOOLTIP_RIGHT;\n                x -= arrowSize;\n            } else {\n                position = 'left';\n                x += arrowSize;\n            }\n            if (dim.height < offsetHeight) {\n                y = Math.max(0, dim.y + dim.height / 2 - offsetHeight / 2);\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        const positionVertical = () => {\n            let position;\n            let y;\n            // Position tooltip at the center of plot\n            let x = dim.x - offsetWidth / 2 + dim.width / 2;\n\n            // Overflows to the right\n            if ((extent.width - (dim.x + offset.x)) < offsetWidth) {\n                x = extent.width - offsetWidth - offset.x;\n            } else if ((x + offset.x) < extent.x) { // Overflows to the left\n                x = extent.x;\n            }\n\n            if (positionTop) {\n                y = dim.y - offsetHeight - arrowSize;\n                position = TOOLTIP_BOTTOM;\n            } else {\n                y = dim.y + dim.height + arrowSize;\n                position = TOOLTIP_TOP;\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        this._target = dim;\n        if (!orientation) {\n            if (positionTop) {\n                orientation = 'vertical';\n            } else if (positionRight || positionLeft) {\n                orientation = 'horizontal';\n            } else {\n                orientation = 'vertical';\n            }\n        }\n\n        if (orientation === 'horizontal') {\n            obj = positionHorizontal();\n        } else if (orientation === 'vertical') {\n            obj = positionVertical();\n        }\n\n        this._position = {\n            x: obj.x,\n            y: obj.y\n        };\n\n        this._arrowPos = obj.arrowPos;\n        if (!arrowDisabled) {\n            placeArrow(this, obj.position, obj.arrowPos);\n        } else {\n            this._tooltipArrow.style('display', 'none');\n            this._tooltipBackground.style('display', 'none');\n        }\n        this._arrowOrientation = obj.position;\n        draw && this.position(obj.x, obj.y);\n        return this;\n    }\n\n    /**\n     * Hides the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    hide () {\n        this._tooltipContainer.style('display', 'none');\n        this._tooltipConnectorContainer.style('display', 'none');\n        return this;\n    }\n\n    /**\n     * Shows the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    show () {\n        this._tooltipContainer.style('display', 'block');\n        return this;\n    }\n\n    extent (extent) {\n        this._extent = extent;\n        return this;\n    }\n\n    offset (offset) {\n        this._offset = offset;\n        return this;\n    }\n\n    remove () {\n        this._tooltipContainer.remove();\n        this._tooltipBackground.remove();\n        this._tooltipConnectorContainer.remove();\n        return this;\n    }\n}\n","import { FieldType } from 'muze-utils';\n\nexport const strategies = {\n    showSelectedItems: (dm) => {\n        const dataObj = dm.getData();\n        const measures = dataObj.schema.filter(d => d.type === FieldType.MEASURE);\n        const aggregatedModel = dm.groupBy([''], measures.reduce((acc, v) => {\n            acc[v.name] = v.defAggFn === 'count' ? 'sum' : v.defAggFn;\n            return acc;\n        }, {}));\n        const fieldsObj = dm.getFieldspace().fieldsObj();\n        const fieldsConf = aggregatedModel.getFieldsConfig();\n        let values = [{\n            value: `${dataObj.data.length}`,\n            style: {\n                'font-weight': 'bold'\n            }\n        }, 'Items Selected'];\n        const measureNames = measures.map(d => d.name);\n        if (measureNames.length) {\n            values = [...values, ...[`(${fieldsObj[measureNames[0]].defAggFn().toUpperCase()}) ${measureNames[0]}`,\n                {\n                    value: `${aggregatedModel.getData().data[0][fieldsConf[measureNames[0]].index].toFixed(2)}`,\n                    style: {\n                        'font-weight': 'bold'\n                    }\n                }]];\n        }\n        return [values];\n    }\n};\n","import { Tooltip as TooltipRenderer } from '@chartshq/muze-tooltip';\nimport { FieldType } from 'muze-utils';\nimport { spaceOutBoxes } from '../helper';\nimport { strategies } from './strategies';\nimport { FRAGMENTED } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nexport default class Tooltip extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._tooltips = {};\n        this._strategies = strategies;\n        this._strategy = 'default';\n    }\n\n    static defaultConfig () {\n        return {\n            padding: 5,\n            offset: {\n                x: 0,\n                y: 0\n            }\n        };\n    }\n\n    static formalName () {\n        return 'tooltip';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        let totalHeight = 0;\n        let totalWidth = 0;\n        const dataModel = selectionSet.mergedEnter.model;\n        const context = this.firebolt.context;\n        const drawingInf = this.drawingContext();\n        if ((dataModel.isEmpty() || payload.criteria === null) || selectionSet.isSourceFieldPresent === false) {\n            this.hide(options, null);\n            return this;\n        }\n\n        const tooltips = this._tooltips;\n        const config = this.config();\n        const boundBox = {\n            width: drawingInf.width,\n            height: drawingInf.height\n        };\n        const showInPosition = payload.showInPosition;\n        const pad = config.padding;\n        const dataModels = [];\n        const fragmented = config.mode === FRAGMENTED;\n        const sourceInf = context.getSourceInfo();\n        const fields = sourceInf.fields;\n        const xFieldDim = fields.x[0] ? fields.x[0].type() === FieldType.DIMENSION : false;\n        const showVertically = !!xFieldDim;\n        const tooltipPos = payload.position;\n        const boxes = [];\n        const enter = {};\n        const uids = dataModel.getData().uids;\n        if (fragmented) {\n            dataModels.push(...uids.map(d => dataModel.select((fieldsArr, i) => i === d, {\n                saveChild: false\n            })));\n        } else {\n            dataModels.push(dataModel);\n        }\n\n        let target = payload.target;\n        let targetFields = [];\n        if (target) {\n            targetFields = target[0] || [];\n            const sourceFields = payload.sourceFields;\n            const indices = [];\n            for (let i = 0, len = targetFields.length; i < len; i++) {\n                if (sourceFields.indexOf(targetFields[i]) !== -1) {\n                    indices.push(i);\n                }\n            }\n            target = target.map(d => d.filter((v, i) => indices.indexOf(i) !== -1));\n        }\n\n        const plotDimensions = context.getPlotPointsFromIdentifiers(target || payload.criteria, {\n            getBBox: true\n        });\n\n        // Show tooltip for each datamodel\n        for (let i = 0; i < dataModels.length; i++) {\n            let plotDim = plotDimensions[i];\n            if (fragmented) {\n                const dimensions = dataModels[i].getData().schema.filter(d => d.type === FieldType.DIMENSION)\n                    .map(d => d.name);\n                plotDim = context.getPlotPointsFromIdentifiers(dataModels[i].project(dimensions), { getBBox: true });\n                plotDim = plotDim && plotDim[0];\n            }\n\n            let dt = dataModels[i];\n            if (config.fields) {\n                dt = dt.project(config.fields, {\n                    saveChild: false\n                });\n            }\n            if (config.dataTransform) {\n                dt = config.dataTransform(dt, i);\n            }\n\n            enter[i] = true;\n            const { parentContainer: layoutContainer, parentContainerDimensions } = drawingInf;\n            const layoutBoundBox = layoutContainer.getBoundingClientRect();\n            const unitBoundBox = drawingInf.htmlContainer.getBoundingClientRect();\n\n            const offsetLeft = unitBoundBox.left - layoutBoundBox.left;\n            const offsetTop = unitBoundBox.top - layoutBoundBox.top;\n            const tooltipInst = tooltips[i] = tooltips[i] || new TooltipRenderer(layoutContainer,\n                    drawingInf.svgContainer);\n\n            sourceInf.payload = payload;\n            sourceInf.firebolt = this.firebolt;\n            sourceInf.detailFields = context.detailFields();\n            sourceInf.timeDiffs = context.timeDiffsByField();\n            sourceInf.valueParser = context.valueParser();\n            tooltipInst.context(sourceInf);\n            const strategy = strategies[options.strategy];\n            tooltipInst.content(options.strategy || this._strategy, dt, {\n                formatter: strategy,\n                order: options.order\n            })\n                            .config(this.config())\n                            .extent({\n                                x: 0,\n                                y: 0,\n                                width: parentContainerDimensions.width,\n                                height: parentContainerDimensions.height\n                            })\n                            .offset({\n                                x: offsetLeft + (config.offset.x || 0),\n                                y: offsetTop + (config.offset.y || 0)\n                            });\n\n            if (showInPosition) {\n                tooltipInst.position(tooltipPos.x + pad, tooltipPos.y + pad);\n            } else if (plotDim) {\n                tooltipInst.positionRelativeTo({\n                    x: plotDim.x,\n                    y: plotDim.y,\n                    width: plotDim.width || 0,\n                    height: plotDim.height || 0\n                }, {\n                    orientation: fragmented ?\n                        (showVertically ? 'horizontal' : 'vertical') : undefined\n                });\n            } else {\n                tooltipInst.hide();\n                break;\n            }\n\n            if (fragmented) {\n                const position = tooltipInst._position;\n                const tooltipBoundBox = tooltipInst._tooltipContainer.node().getBoundingClientRect();\n\n                totalHeight += tooltipBoundBox.height + pad;\n                totalWidth += tooltipBoundBox.width + pad;\n                if (showVertically ? totalHeight > drawingInf.height : totalWidth > drawingInf.width) {\n                    break;\n                }\n                boxes.push({\n                    x: position.x,\n                    y: position.y,\n                    width: tooltipBoundBox.width,\n                    height: tooltipBoundBox.height,\n                    tooltip: tooltipInst\n                });\n            }\n        }\n\n        for (const key in tooltips) {\n            if (!enter[key]) {\n                const tooltip = tooltips[key];\n                tooltip.content(payload.action, null);\n                if (!tooltip.getContents().length) {\n                    tooltip.remove();\n                    delete tooltips[key];\n                }\n            }\n        }\n        if (fragmented) {\n            spaceOutBoxes(boxes, boundBox, showVertically);\n            boxes.forEach(box => box.tooltip.position(box.x, box.y, {\n                repositionArrow: true\n            }));\n        }\n        return this;\n    }\n\n    hide (options) {\n        const tooltips = this._tooltips;\n        for (const key in tooltips) {\n            if ({}.hasOwnProperty.call(tooltips, key)) {\n                const strategy = options.strategy || this._strategy;\n                tooltips[key].content(strategy, null);\n                tooltips[key].hide();\n            }\n        }\n    }\n}\n","export const spaceOutBoxes = (boxes, extent, showVertically) => {\n    let y;\n    let height;\n    let x;\n    let width;\n    let i;\n    const pad = 5;\n    const len = boxes.length;\n    const spaceOutIfOverlap = (firstBox, secondBox, opposite) => {\n        x = firstBox.x;\n        width = firstBox.width;\n        y = firstBox.y;\n        height = firstBox.height;\n        const bottom = y + height;\n        const right = x + width;\n\n        if (showVertically) {\n            if (opposite ? y < (secondBox.y + secondBox.height) : bottom > secondBox.y) {\n                secondBox.y = opposite ? firstBox.y - secondBox.height - pad :\n                        bottom + pad;\n            }\n        } else if (opposite ? x < (secondBox.x + secondBox.width) : right > secondBox.x) {\n            secondBox.x = opposite ? firstBox.x - secondBox.width - pad :\n                    right + pad;\n        }\n    };\n\n    boxes.sort((a, b) => (showVertically ? a.y - b.y : a.x - b.x));\n    i = 0;\n\n    for (i = 0; i < len - 1; i++) {\n        spaceOutIfOverlap(boxes[i], boxes[i + 1]);\n    }\n\n    if ((boxes[i].y + boxes[i].height) > extent.height ||\n            (boxes[i].x + boxes[i].width) > extent.width) {\n        if (showVertically) {\n            boxes[i].y -= (boxes[i].height + boxes[i].y) - extent.height;\n        } else {\n            boxes[i].x -= (boxes[i].width + boxes[i].x) - extent.width;\n        }\n        for (i = len - 1; i > 0; i--) {\n            spaceOutIfOverlap(boxes[i], boxes[i - 1], true);\n        }\n    }\n    return boxes;\n}\n;\n","import { selectElement, FieldType } from 'muze-utils';\n\nimport './styles.scss';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nexport default class Crossline extends SpawnableSideEffect {\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-crossline-group`,\n            bandClass: `${CLASSPREFIX}-crossband`,\n            lineClass: `${CLASSPREFIX}-crossline`\n        };\n    }\n\n    static formalName () {\n        return 'crossline';\n    }\n\n    apply (selectionSet, payload) {\n        let height;\n        let bandWidth;\n        let px;\n        let width;\n        const {\n            className,\n            bandClass,\n            lineClass\n        } = this.config();\n        const dataModel = selectionSet.mergedEnter.model;\n        const drawingInf = this.drawingContext();\n        if (payload.criteria && dataModel && dataModel.isEmpty()) {\n            return this;\n        }\n        if (payload.criteria === null || !dataModel) {\n            this.hide();\n            return this;\n        }\n\n        const dataObj = dataModel.getData();\n        const sourceInf = this.firebolt.context.getSourceInfo();\n        const axes = sourceInf.axes;\n        const axisFields = sourceInf.fields;\n        const fields = selectionSet.fields;\n        const data = dataObj.data;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const svgContainer = drawingInf.sideEffectGroup;\n\n        const elemData = [];\n        fields.forEach((field) => {\n            const fieldIndex = fieldsConfig[field] && fieldsConfig[field].index;\n            const dataArr = data.map(d => d[fieldIndex]);\n            const axisIndex = [['x', 0], ['x', 1], ['y', 0], ['y', 1]].find((arr) => {\n                const fieldInst = axisFields[arr[0]][arr[1]];\n                return fieldInst && fieldInst.type() === FieldType.DIMENSION &&\n                    fieldInst.getMembers().indexOf(field) !== -1;\n            });\n            if (axisIndex !== undefined && data.length) {\n                const type = axisIndex[0];\n                const axis = axes[type][axisIndex[1]];\n                const value = dataArr[0];\n                bandWidth = axis.getUnitWidth() || 0;\n                px = axis.getScaleValue(value) + bandWidth / 2 + drawingInf.xOffset;\n                const plotWidth = Math.max(...this.firebolt.context.layers().map(layer => layer.getPlotSpan()[type]));\n                const pad = Math.max(...this.firebolt.context.layers().map(layer => layer.getPlotPadding()[type]));\n                height = drawingInf.height;\n                width = drawingInf.width;\n                const startPx = px - plotWidth / 2 - pad / 2;\n                const endPx = px + plotWidth / 2 + pad / 2;\n                const dataPoint = {};\n                if (type === 'y') {\n                    dataPoint.d = `M 0 ${startPx} L 0 ${endPx} L ${width} ${endPx} L ${width} ${startPx} Z`;\n                } else {\n                    dataPoint.d = `M ${startPx} 0 L ${endPx} 0 L ${endPx} ${height} L ${startPx} ${height} Z`;\n                }\n                dataPoint.className = plotWidth ? bandClass : lineClass;\n                elemData.push(dataPoint);\n            }\n        });\n        if (elemData.length) {\n            const parentGroup = this.createElement(svgContainer, 'g', [1], className);\n            const elem = this.createElement(parentGroup, 'path', elemData);\n            elem.attr('d', d => d.d).style('pointer-events', 'none')\n                            .attr('class', d => d.className);\n        }\n        return this;\n    }\n\n    hide () {\n        const className = this.config().className;\n        const drawingInf = this.drawingContext();\n        selectElement(drawingInf.sideEffectGroup).selectAll(`.${className}`).remove();\n    }\n}\n","const fadeFn = (set, context, strategy) => {\n    const {\n        mergedEnter,\n        mergedExit,\n        exitSet,\n        completeSet\n    } = set;\n\n    if (!mergedEnter.length && !mergedExit.length) {\n        context.applyInteractionStyle(completeSet, {}, strategy, false);\n    } else {\n        context.applyInteractionStyle(exitSet[1], {}, strategy, true);\n        context.applyInteractionStyle(mergedEnter, {}, strategy, false);\n    }\n};\n\nexport const strategies = {\n    fade: fadeFn,\n    focus: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'focus', false);\n        } else {\n            context.applyInteractionStyle(mergedExit, {}, 'focus', true);\n            context.applyInteractionStyle(mergedEnter, {}, 'focus', false);\n        }\n    },\n    highlight: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            entrySet,\n            exitSet,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'highlight', false);\n        } else {\n            context.applyInteractionStyle(entrySet[1], {}, 'highlight', true);\n            context.applyInteractionStyle(exitSet[1], {}, 'highlight', false);\n        }\n    }\n};\n","import SurrogateSideEffect from '../surrogate';\nimport { strategies } from './strategy';\n\nexport default class PlotHighlighter extends SurrogateSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategy = 'highlight';\n        this._strategies = strategies;\n    }\n\n    static formalName () {\n        return 'highlighter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        if (selectionSet.isSourceFieldPresent !== false) {\n            strategy(selectionSet, this, options.strategy || this._strategy);\n        }\n\n        return this;\n    }\n}\n","import SurrogateSideEffect from '../surrogate';\n\nexport default class FilterEffect extends SurrogateSideEffect {\n    static formalName () {\n        return 'filter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static mutates () {\n        return true;\n    }\n\n    apply (selectionSet, payload) {\n        const context = this.firebolt.context;\n        const entryModel = selectionSet.mergedEnter.model;\n        if (payload.criteria === null) {\n            context.clearCaching().resetData();\n        } else {\n            context.enableCaching().data(entryModel);\n        }\n        return this;\n    }\n}\n","import { DataModel, STATE_NAMESPACES, getObjProp } from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nconst addLayer = (layerDefs, layerRegistry, context, sideEffect) => {\n    const layers = [];\n    if (layerDefs) {\n        layerDefs.forEach((layerDef) => {\n            const mark = layerDef.mark;\n            const layerCls = layerRegistry[mark];\n            if (layerCls && layerCls.shouldDrawAnchors()) {\n                const depLayerEncoding = layerDef.def.encoding;\n                const encoding = {\n                    x: getObjProp(depLayerEncoding, 'x', 'field'),\n                    y: getObjProp(depLayerEncoding, 'y', 'field'),\n                    color: getObjProp(depLayerEncoding, 'color', 'field'),\n                    size: {\n                        field: getObjProp(depLayerEncoding, 'size', 'field'),\n                        value: sideEffect.defaultSizeValue()\n                    }\n                };\n                const name = `${layerDef.def.name}-${sideEffect.constructor.formalName()}`;\n                const layerObj = {\n                    instances: context.addLayer({\n                        name,\n                        mark: 'point',\n                        className: sideEffect.constructor.defaultConfig().className,\n                        encoding,\n                        transform: {\n                            type: 'identity'\n                        },\n                        transition: sideEffect.getTransitionConfig(),\n                        calculateDomain: false,\n                        source: dm => dm.select(() => false, {\n                            saveChild: false\n                        }),\n                        interactive: false,\n                        render: false\n                    }),\n                    linkedLayer: layerDef.def.name\n                };\n                layers.push(layerObj);\n            }\n        });\n    }\n    return layers;\n};\n\nexport default class AnchorEffect extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._layersMap = {};\n        this.addAnchorLayers();\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-anchors-group`\n        };\n    }\n\n    static formalName () {\n        return 'anchors';\n    }\n\n    addAnchorLayers () {\n        const context = this.firebolt.context;\n        const metaInf = context.metaInf();\n        const layerRegistry = context.registry().layerRegistry;\n        const layerDefsVal = context.layerDef();\n        context.store().registerImmediateListener(\n            `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}.layerDef`, ([, layerDefs]) => {\n                this._layers = addLayer(layerDefs, layerRegistry, context, this);\n            });\n        this._layers = addLayer(layerDefsVal, layerRegistry, context, this);\n        return this;\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n\n    /**\n     * Returns the default area value of the anchor point.\n     * @return { number } Default area value of anchor.\n     */\n    defaultSizeValue () {\n        return 100;\n    }\n\n    apply (selectionSet) {\n        const self = this;\n        const dataModel = selectionSet.mergedEnter.model;\n        if (selectionSet.isSourceFieldPresent !== false) {\n            const drawingInf = this.drawingContext();\n            const sideEffectGroup = drawingInf.sideEffectGroup;\n            const className = `${this.config().className}`;\n            const layers = this._layers;\n            const parentGroup = this.createElement(sideEffectGroup, 'g', [1], `${className}-container`);\n            const anchorGroups = this.createElement(parentGroup, 'g', Object.values(layers));\n            anchorGroups.each(function (layer) {\n                const instances = layer.instances;\n                const elems = self.createElement(this, 'g', instances, className);\n                const linkedLayer = self.firebolt.context.getLayerByName(layer.linkedLayer);\n                const [transformedData, schema] = linkedLayer.getTransformedDataFromIdentifiers(dataModel);\n                const transformedDataModel = new DataModel(transformedData, schema);\n                elems.each(function (d, i) {\n                    instances[i].data(transformedDataModel).mount(this);\n                });\n            });\n        }\n        return this;\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class PersistentAnchors extends AnchorEffect {\n    static formalName () {\n        return 'persistent-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-persistent-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class BrushAnchors extends AnchorEffect {\n    static formalName () {\n        return 'brush-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-brush-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import * as BEHAVIOURS from './enums/behaviours';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: ['selectionBox', {\n        name: 'highlighter',\n        options: {\n            strategy: 'fade'\n        }\n    }, 'brush-anchors'],\n    [`${BEHAVIOURS.BRUSH},${BEHAVIOURS.SELECT}`]: [{\n        name: 'tooltip',\n        options: {\n            strategy: 'showSelectedItems',\n            order: 0,\n            filter: context => context.config().mode === 'fragmented'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'highlight'\n        }\n    }, 'crossline', {\n        name: 'tooltip',\n        options: {\n            order: 9999\n        }\n    }, 'anchors'],\n    [BEHAVIOURS.FILTER]: ['filter'],\n    [BEHAVIOURS.SELECT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'focus'\n        }\n    }, 'persistent-anchors']\n};\n","export const CLASSPREFIX = 'muze';\nexport const STACK = 'stack';\nexport const GROUP = 'group';\nexport const IDENTITY = 'identity';\nexport const ANGLE = 'angle';\nexport const RADIUS = 'radius';\nexport const SIZE = 'size';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const OUTER_RADIUS_VALUE = 'outerRadiusValue';\nexport const TEXT_ANCHOR_MIDDLE = 'middle';\nexport const ENCODING = {\n    X: 'x',\n    Y: 'y',\n    X0: 'x0',\n    Y0: 'y0'\n};\n\nexport const ASCENDING = 'asc';\n\nexport const AGG_FN_SUM = 'sum';\n\nexport const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { CLASSPREFIX, STACK } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-area',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: STACK\n    },\n    interaction: {\n\n    },\n    nearestPointThreshold: 10,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        y0: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * This is an interface class which any new layer class has to extend.\n *\n * @example\n * class BarLayer extends BaseLayer {\n *   update (params) {\n *       // super.update(params);\n *       // Update the bar layer\n *   }\n * }\n * @class\n */\nexport default class SimpleLayer {\n\n    formalName () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets or gets the dependencies.\n     * @param {Object} dependencies Dependencies needed by layer\n     * @return {BaseLayer} Instance of base layer.\n     */\n    dependencies () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the config of the layer\n     *\n     * @param {Object} config Configuration of layer\n     * @return {Object} configuration of layer\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Acts as a getter or setter function\n     * When setter\n     * Returns the datamodel of the layer\n     * @param { DataModel } dataModel instance of DataModel\n     * @return { DataModel } DataModel instance of the layer\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized schema of the layer\n     * @return {Object} Serialized schema\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the unique identifier of this layer\n     * @return {string} id of the layer\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n    /*\n     * This method resolves the x, y, x0 and y0 values from the transformed data.\n     * It also checks the type of transformed data for example, if it is a stacked data\n     * then it fetches the y and y0 values from the stacked data.\n     * @param {Array.<Array>} transformedData transformed data\n     * @param {Object} fieldMap field definitions\n     * @param {string} transformType type of transformed data - stack, group or identity.\n     * @return {Array.<Object>} Normalized data\n     * @private\n     */\n    normalizeTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of dataModel\n     * @param {Object} config configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     * @private\n     */\n    getTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a nominal field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @return {Array} Domain values array.\n     */\n    _calculateDomainFromData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, color, etc.\n     * @return {Object} Axis domains\n     */\n    getDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for getting nearest point\n     * @return {BaseLayer} Instance of base layer\n     */\n    getNearestPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for highlighting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    highlightPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for deselecting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    dehighlightPoint () {\n        return this;\n    }\n\n    linkLayerStore () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets the container element for the layer to be renderered.\n     * @param {SVGElement} mountPoint SVG element or group element.\n     */\n    mount () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n","export const props = {\n    axes: {},\n    mount: {},\n    measurement: {},\n    metaInf: {},\n    data: {},\n    config: {},\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { Symbols } from 'muze-utils';\nimport * as AxisOrientation from '../enums/axis-orientation';\n\n/**\n * @module Axis\n * This file exports constants that are used to reference axis orientations\n * in a consistent manner.\n */\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\n\n/**\n  * This object is used to associate the axis orientation with the d3 class\n  * used to represent that axis.\n  */\nexport const axisOrientationMap = {\n    [AxisOrientation.LEFT]: Symbols.axisLeft,\n    [AxisOrientation.BOTTOM]: Symbols.axisBottom,\n    [AxisOrientation.RIGHT]: Symbols.axisRight,\n    [AxisOrientation.TOP]: Symbols.axisTop\n};\n","/**\n * @module axis\n * This file exports constants used to reference scale type\n * consistently throughout the project.\n */\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const TIME = 'temporal';\nexport const COLOR = 'color';\nexport const ORDINAL = 'ordinal';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\nexport const LOG = 'log';\nexport const POW = 'pow';\nexport const IDENTITY = 'identity';\nexport const SEQUENTIAL = 'sequential';\nexport const THRESHOLD = 'threshold';\n","export const CLASSPREFIX = 'muze';\n\nexport const CONTINOUS = 'continous';\nexport const DISCRETE = 'discrete';\nexport const SEQUENTIAL = 'sequential';\nexport const ORDINAL = 'ordinal';\nexport const LINEAR = 'linear';\nexport const THRESHOLD = 'threshold';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\n\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\n\nexport const DOMAIN = 'domain';\nexport const BAND = 'band';\nexport const HIDDEN = 'hidden';\nexport const NUMBER = 'number';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\n\nexport const RGB = 'rgb';\nexport const HEX = 'hex';\nexport const HSLA = 'hsla';\nexport const HSL = 'hsl';\n\n","import { scales, colorSchemes } from 'muze-utils';\n\nimport {\n    SEQUENTIAL,\n    ORDINAL,\n    LINEAR,\n    CONTINOUS,\n    THRESHOLD,\n    QUANTIZE\n} from './enums/constants';\n\nimport * as ScaleType from './enums/scale-type';\n\nconst {\n    scaleLinear,\n    scaleThreshold,\n    scaleLog,\n    scalePow,\n    scaleIdentity,\n    scaleOrdinal,\n    scaleSequential,\n    scaleQuantize,\n    scaleQuantile,\n    schemeCategory10,\n    schemeCategory20,\n    schemeCategory20b,\n    scaleBand,\n    scaleTime\n} = scales;\nexport const scaleMap = {\n    [ScaleType.LINEAR]: scaleLinear,\n    [ScaleType.BAND]: scaleBand,\n    [ScaleType.QUANTIZE]: scaleQuantize,\n    [ScaleType.QUANTILE]: scaleQuantile,\n    [ScaleType.THRESHOLD]: scaleThreshold,\n    [ScaleType.SEQUENTIAL]: scaleSequential,\n    [ScaleType.LOG]: scaleLog,\n    [ScaleType.POW]: scalePow,\n    [ScaleType.IDENTITY]: scaleIdentity,\n    [ScaleType.TIME]: scaleTime,\n    [ScaleType.COLOR]: scaleLinear,\n    [ScaleType.ORDINAL]: scaleOrdinal\n};\nexport const SCHEMES = {\n    SCHEME1: schemeCategory10,\n    SCHEME2: schemeCategory20,\n    SCHEME3: schemeCategory20b\n};\n\n/**\n * Accepts a scheme in a string format and returns the scale from d3-scale-chromatic\n *\n * @export\n * @param {string} scheme a string representing the kind of scheme for the color axis\n * @return {Object} The corresponding scale from a scheme type from d3 chromatic scale\n */\nexport function getScheme (scheme) {\n    if (scheme[0] === 'i') {\n        return scaleSequential(colorSchemes[scheme]);\n    }\n    return scaleOrdinal(colorSchemes[scheme]);\n}\n\n/**\n *\n *\n * @export\n * @param {*} scheme\n *\n */\nexport function getSchemeType (scheme) {\n    let schemeType = '';\n    if (scheme && typeof (scheme) === 'string') {\n        schemeType = scheme[0] === 'i' ? SEQUENTIAL : ORDINAL;\n    } else {\n        schemeType = ORDINAL;\n    }\n    return schemeType;\n}\n\n/**\n * This function is used to create a scale that is assigned to\n * an instance of axis.\n *\n * @export\n * @param {Object} params the input parameters to create a Scale object\n * @param {string} params.type the type of scale\n * @param {Array} params.range the range of scale\n * @return {Object} instance of scale\n */\nexport function createScale (params) {\n    if (!params.type || !scaleMap[params.type]) {\n        throw new Error(`${params.type} is not a valid scale type`);\n    }\n    if (!Array.isArray(params.range)) {\n        throw new Error('range parameter must be an array');\n    }\n    let scaleFactory = null;\n    const range = params.range;\n    // @todo: do it using scale decorator\n    if (params.type === LINEAR && params.interpolator) {\n        scaleFactory = scaleMap[params.interpolator];\n        if (params.interpolator === ScaleType.POW) {\n            return scaleFactory().range(range).exponent(params.exponent);\n        } else if (params.interpolator === ScaleType.LOG) {\n            return scaleFactory().range(range).base([params.base]);\n        }\n    } else {\n        scaleFactory = scaleMap[params.type];\n    }\n\n    if (params.type === QUANTIZE) {\n        scaleFactory().nice();\n    }\n    return scaleFactory().range(range);\n}\n\n/**\n * This method is used to update the range of a scale\n * so that the core module can remain agnostic of the d3\n * scale api.\n *\n * @export\n * @param {Scale} scale Instance of d3 Scale.\n * @param {Array} range new range of the scale.\n * @return {Scale} Updated scale.\n */\nexport function updateScaleRange (scale, range) {\n    return scale.range(range);\n}\n\n/**\n *\n *\n * @export\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} steps\n *\n */\nexport function getScaleType (domainType, rangeType, steps) {\n    if (rangeType === CONTINOUS) {\n        return LINEAR;\n    }\n    if (domainType === CONTINOUS) {\n        if (steps instanceof Array) {\n            return THRESHOLD;\n        }\n        return QUANTIZE;\n    }\n    return ORDINAL;\n}\n","import { getUniqueId } from 'muze-utils';\nimport { CLASSPREFIX } from '../enums/constants';\n\n/**\n *\n *\n */\nexport const defaultConfig = {\n    id: getUniqueId(),\n    axisName: {\n        defClassName: 'axis-name'\n    },\n    axisNamePadding: 12,\n    base: 10,\n    classPrefix: CLASSPREFIX,\n    className: `${CLASSPREFIX}-axis`,\n    exponent: 1,\n    interpolator: 'linear',\n    fixedBaseline: true,\n    labels: {\n        rotation: null,\n        smartTicks: null\n    },\n    orientation: 'left',\n    numberFormat: val => val,\n    padding: 0.3,\n    nice: true,\n    numberOfTicks: 10,\n    rotate: false,\n    show: true,\n    showAxisName: true,\n    showInnerTicks: true,\n    showOuterTicks: true,\n    style: {},\n    type: 'linear',\n    tickFormat: null,\n    tickValues: null,\n    xOffset: 0,\n    yOffset: 0\n};\n\n","/**\n * This file exports functionality that is used to render axis.\n */\nimport { selectElement, makeElement, angleToRadian } from 'muze-utils';\nimport * as AxisOrientation from './enums/axis-orientation';\nimport { LINEAR, HIDDEN, BOTTOM, TOP } from './enums/constants';\n\n/**\n *\n *\n * @param {*} instance\n * @param {*} container\n * @param {*} labelManager\n * @param {*} config\n */\nconst rotateAxis = (instance, tickText, labelManager) => {\n    let rotation;\n    const axis = instance.axis();\n    const config = instance.config();\n    const renderConfig = instance.renderConfig();\n    const smartTicks = instance.smartTicks();\n    const scale = axis.scale();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n    const ticks = labelFunc();\n    const {\n        orientation,\n        fixedBaseline,\n        type\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n\n    rotation = labels.rotation;\n\n    const tickSize = instance.getTickSize();\n    tickText.each(function (d, index) {\n        let yShift;\n        let xShift;\n        let datum = smartTicks[index] ? smartTicks[index].text : d;\n\n        const tickFormatter = axis.tickFormat() ? axis.tickFormat : null;\n\n        const temp = tickSize ? (tickFormatter ? tickFormatter()(d) : datum) : '';\n\n        datum = temp.toString();\n\n        const tickLabelDim = labelManager.getOriSize(datum);\n\n        const width = tickLabelDim.width * 0.5;\n        const height = tickLabelDim.height * 0.5;\n\n        if (rotation < 0) {\n            rotation = 360 + rotation;\n        }\n\n        const quadrant = 4 - Math.floor(rotation / 90);\n        const rotationNormalizer = ((quadrant % 2 === 0) ? rotation : 180 * Math.ceil(rotation / 180) - rotation) % 180;\n\n        yShift = Math.sqrt(height ** 2 + width ** 2) * Math.sin(angleToRadian(rotationNormalizer));\n\n        if ((quadrant === 3 || quadrant === 2) && !(rotationNormalizer > 67.5 && rotationNormalizer <= 90)) {\n            yShift += height * 2;\n        }\n        xShift = width;\n\n        if (rotation === 90) {\n            xShift = height;\n        } else if (rotation === 270) {\n            xShift = -height;\n        } else {\n            xShift = 0;\n        }\n\n        if (orientation === AxisOrientation.TOP) {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift + xShift / 2 : xShift;\n            selectElement(this)\n                            .attr('transform', `translate(${-xShift + tickSize}\n                                ${-yShift - tickSize}) rotate(${rotation})`);\n        } else {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift - xShift / 2 : xShift;\n\n            selectElement(this)\n                            .attr('transform', `translate(${xShift - tickSize}\n                                ${yShift + tickSize}) rotate(${rotation})`);\n        }\n        selectElement(this).transition()\n                        .duration(1000).text(datum);\n    });\n    return tickText;\n};\n\n/**\n *\n *\n * @param {*} tickText\n * @param {*} axisInstance\n */\nconst changeTickOrientation = (selectContainer, axisInstance, tickSize) => {\n    const {\n        _smartTicks\n    } = axisInstance;\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const {\n        orientation,\n        classPrefix\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n    const {\n        rotation,\n        smartTicks: isSmartTicks\n    } = labels;\n\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.selectAll('tspan').remove();\n\n   // rotate labels if not enough space is available\n    if (rotation && (orientation === TOP || orientation === BOTTOM)) {\n        rotateAxis(axisInstance, tickText, labelManager);\n    } else if (!rotation && !isSmartTicks) {\n        tickText.attr('transform', '');\n    } else {\n        tickText.text('');\n        if (orientation === TOP || orientation === BOTTOM) {\n            tickText.attr('y', 0)\n                            .attr('x', 0)\n                            .attr('transform', '')\n                            .text('');\n            const tspan = makeElement(tickText, 'tspan', (d, i) => {\n                if (_smartTicks[i]) {\n                    return _smartTicks[i].lines;\n                } return [];\n            }, `${classPrefix}-smart-text`);\n\n            tspan.attr('dy', '0')\n                            .style('opacity', '0')\n\n                            .transition()\n                            .duration(1000)\n                            .on('end', axisInstance.registerAnimationDoneHook())\n                            .attr('dy', (d, i) => {\n                                if (orientation === BOTTOM || i !== 0) {\n                                    return _smartTicks[0].oriTextHeight;\n                                }\n                                return -_smartTicks[0].oriTextHeight * (_smartTicks[0].lines.length - 1) - tickSize;\n                            })\n                            .style('opacity', 1)\n                            .text(e => e)\n                            .attr('x', 0);\n        } else {\n            const tspan = makeElement(tickText, 'tspan', (d, i) => _smartTicks[i].lines, `${classPrefix}-smart-text`);\n            tspan.text(e => e);\n        }\n    }\n\n    return tickText;\n};\n\nconst setFixedBaseline = (axisInstance) => {\n    const {\n        fixedBaseline\n    } = axisInstance.config();\n    const domain = axisInstance.domain();\n    if (fixedBaseline && domain.length) {\n        axisInstance.setFixedBaseline();\n    }\n};\n\n/**\n *\n *\n * @param {*} textNode\n * @param {*} orientation\n * @param {*} measures\n */\nconst setAxisNamePos = (textNode, orientation, measures) => {\n    const {\n        axisNameHeight,\n        yOffset,\n        labelOffset,\n        availableSpace\n    } = measures;\n    switch (orientation) {\n    case AxisOrientation.LEFT:\n        textNode.attr('transform',\n            `translate(${-(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(-90)`);\n        break;\n    case AxisOrientation.RIGHT:\n        textNode.attr('transform',\n             `translate(${(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(90)`);\n        break;\n    case AxisOrientation.TOP:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${-availableSpace.height + axisNameHeight})`);\n        break;\n    case AxisOrientation.BOTTOM:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${availableSpace.height - axisNameHeight / 2})`);\n        break;\n    default:\n    }\n    return textNode;\n};\n\n/**\n * This method is used to render the axis inside an\n * svg container.\n *\n * @export\n * @param {Object} axisInstance the nput object required to render axis\n * @param {string} axisInstance.orientation the orientation of axis\n * @param {Object} axisInstance.scale instance of d3 scale\n * @param {SVGElement} axisInstance.container the container in which to render\n */\nexport function renderAxis (axisInstance) {\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const mount = axisInstance.mount();\n    const range = axisInstance.range();\n    const axis = axisInstance.axis();\n    const scale = axisInstance.scale();\n    const {\n        _axisNameStyle: axisNameStyle,\n        _tickLabelStyle: tickLabelStyle,\n        _tickFormatter: axisTickFormatter,\n        tickValues\n     } = axisInstance;\n    const {\n        orientation,\n        name,\n        xOffset,\n        yOffset,\n        axisNamePadding,\n        className,\n        id,\n        classPrefix\n     } = config;\n    const {\n        show,\n        showAxisName,\n        labels\n    } = renderConfig;\n\n    if (!show) {\n        return;\n    }\n\n    const tickSize = axisInstance.getTickSize();\n\n    const selectContainer = makeElement(selectElement(mount), 'g', [axisInstance], `${className}`, {},\n        key => key.config().id);\n\n    // Set style for tick labels\n    labelManager.setStyle(tickLabelStyle);\n\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    axis.tickFormat(axisTickFormatter(tickValues || axis.tickValues() || labelFunc()));\n\n    // Get range(length of range)\n    const availableSpace = Math.abs(range[0] - range[1]);\n\n    // Get width and height taken by axis labels\n    const labelProps = axisInstance.axisComponentDimensions().largestTickDimensions;\n\n    // Draw axis ticks\n    selectContainer.attr('transform', `translate(${xOffset},${yOffset})`);\n    setFixedBaseline(axisInstance);\n    if (labels.smartTicks === false || tickSize === 0) {\n        selectContainer.transition()\n                        .duration(1000)\n                        .on('end', axisInstance.registerAnimationDoneHook())\n                        .call(axis);\n    } else {\n        selectContainer.call(axis);\n    }\n    selectContainer.selectAll('.tick').classed(`${classPrefix}-ticks`, true);\n    selectContainer.selectAll('.tick line').classed(`${classPrefix}-tick-lines`, true);\n\n    // Set classes for ticks\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.classed(`${classPrefix}-ticks`, true)\n                    .classed(`${classPrefix}-ticks-${id}`, true);\n\n    changeTickOrientation(selectContainer, axisInstance, tickSize);\n\n    // Create axis name\n    const textNode = makeElement(selectContainer, 'text', [name], `${classPrefix}-axis-name`)\n                    .attr('text-anchor', 'middle')\n                    .classed(`${classPrefix}-axis-name-${id}`, true)\n                    .text(d => d);\n\n    // Hide axis name if show is off\n    textNode.classed(HIDDEN, !showAxisName);\n\n     // render labels based on orientation of axis\n    const labelOffset = availableSpace / 2;\n\n    // Set style for axis name\n    labelManager.setStyle(axisNameStyle);\n    const axisNameSpace = labelManager.getOriSize(name);\n    const measures = {\n        labelProps,\n        tickSize,\n        axisNamePadding,\n        axisNameHeight: axisNameSpace.height,\n        axisNameWidth: axisNameSpace.width,\n        yOffset,\n        xOffset,\n        labelOffset,\n        availableSpace: axisInstance.availableSpace()\n    };\n    // Set position for axis name\n    setAxisNamePos(textNode, orientation, measures);\n}\n","import { BOTTOM, TOP } from '../enums/axis-orientation';\n\nconst setAxisRange = (context, type, rangeBounds, offset) => {\n    context.range(rangeBounds);\n    offset && context.config({ [`${type}Offset`]: offset });\n};\n\nconst getAxisOffset = (timeDiff, range, domain) => {\n    const pvr = Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    const width = (pvr * timeDiff);\n    const avWidth = (range[1] - range[0]);\n    const bars = avWidth / width;\n    const barWidth = avWidth / (bars + 1);\n    const diff = avWidth - barWidth * bars;\n\n    return diff / 2;\n};\n\nexport const adjustRange = (minDiff, range, domain, orientation) => {\n    const diff = getAxisOffset(minDiff, range, domain);\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        range[0] += diff;\n        range[1] -= diff;\n    } else {\n        range[0] -= diff;\n        range[1] += diff;\n    }\n    return range;\n};\n\nexport const spaceSetter = (context, spaceConfig) => {\n    let tickInterval;\n    let heightForTicks;\n    const {\n        width: availWidth,\n        height: availHeight,\n        padding\n    } = context.availableSpace();\n    const {\n        top,\n        left,\n        bottom,\n        right\n    } = padding;\n    const {\n        isOffset\n    } = spaceConfig;\n    const {\n        showAxisName,\n        labels\n    } = context.renderConfig();\n    const {\n        rotation\n    } = labels;\n    const {\n        orientation,\n        fixedBaseline,\n        axisNamePadding,\n        tickValues\n    } = context.config();\n    const {\n        tickDimensions,\n        allTickDimensions,\n        axisNameDimensions,\n        tickSize\n    } = context.getAxisDimensions();\n    const {\n        height: tickDimHeight,\n        width: tickDimWidth\n    } = tickDimensions;\n    const namePadding = showAxisName ? axisNamePadding : 0;\n    const labelConfig = { smartTicks: true, rotation: labels.rotation };\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minDiff = context._minDiff;\n    const domain = context.domain();\n    const axisNameHeight = axisNameDimensions.height;\n\n    return {\n        time: {\n            x: () => {\n                const tickShifter = tickDimWidth / 2;\n\n                setAxisRange(context, 'y', adjustRange(minDiff,\n                    [tickShifter, availWidth - left - right - tickShifter], domain, orientation),\n                        isOffset ? availHeight : null);\n\n                tickInterval = ((availWidth) / context.getTickValues().length)\n                                     - minTickDistance.width;\n\n                heightForTicks = availHeight - axisNameDimensions.availHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickSpace.width && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = labels.rotation === null ? -90 : rotation;\n\n                    // Remove ticks if not enough height\n                    if (tickInterval < minTickSpace.height) {\n                        heightForTicks = availHeight;\n                        tickInterval = minTickSpace.height;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n                return labelConfig;\n            },\n            y: () => {\n                let widthForTicks = availWidth;\n                const tickShifter = tickDimHeight / 2;\n\n                setAxisRange(context, 'x', adjustRange(minDiff,\n                    [availHeight - top - bottom - tickShifter, tickShifter], domain, orientation),\n                        isOffset ? availWidth : null);\n\n                if ((availWidth - axisNameHeight - namePadding) <= minTickDistance.width) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        band: {\n            x: () => {\n                setAxisRange(context, 'y', [0, availWidth - left - right], isOffset ? availHeight : null);\n                const range = context.range();\n\n                // Get Tick Interval\n                tickInterval = ((range[1] - range[0]) / (tickValues || domain).length) - minTickDistance.width;\n\n                // Get height available for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickSpace.width && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = rotation === null ? -90 : rotation;\n                    labelConfig.smartTicks = false;\n\n                    // Ticks with overlapping height\n                    if (tickInterval < minTickSpace.height) {\n                        heightForTicks = 0;\n                        tickInterval = 0;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                        context.range([minTickSpace.height / 2, availWidth - minTickSpace.height / 2]);\n                    }\n                } else if (tickValues) {\n                    const interval = (availWidth / domain.length) - minTickDistance.width;\n                    if (interval < minTickSpace.width) {\n                        context.range([minTickSpace.height / 2, availWidth - minTickSpace.height / 2]);\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false, showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n                return labelConfig;\n            },\n            y: () => {\n                setAxisRange(context, 'x', [availHeight - bottom, top], isOffset ? availWidth : null);\n\n                let widthForTicks = availWidth - axisNameHeight - tickSize - namePadding;\n                if (widthForTicks <= minTickDistance.width) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        continous: {\n            x: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimensions.width / 2;\n                const baseline = fixedBaseline ? 0 : tickShifter;\n\n                setAxisRange(context, 'y', [baseline + left, availWidth - right - tickShifter],\n                    isOffset ? availHeight : null);\n\n                const range = context.range();\n\n                // Get Tick widths and available space\n                const totalTickWidth = allTickDimensions.length * (tickDimensions.width + minTickDistance.width);\n                const availableSpace = range[1] - range[0];\n\n                 // Rotate labels if not enough width\n                if (availableSpace < totalTickWidth && labels.rotation === null) {\n                    labelConfig.rotation = -90;\n                }\n\n                // Remove ticks if not enough height\n                if (availHeight - axisNameHeight - namePadding < tickDimensions.height) {\n                    context.renderConfig({ showInnerTicks: false });\n                    if (availHeight < axisNameHeight) {\n                        context.renderConfig({ show: false });\n                    }\n                }\n                return labelConfig;\n            },\n            y: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimensions.height / 2;\n                const baseline = fixedBaseline ? 1 : tickShifter;\n\n                setAxisRange(context, 'x', [availHeight - bottom - baseline, tickShifter + top],\n                    isOffset ? availWidth : null);\n\n                // Remove display of ticks if no space is left\n                if (availWidth < tickDimensions.width + axisNameHeight + namePadding) {\n                    context.renderConfig({ showInnerTicks: false });\n                    if (availWidth < axisNameHeight) {\n                        context.renderConfig({ show: false });\n                    }\n                }\n                return labelConfig;\n            }\n        }\n    };\n};\n","import { defaultValue } from 'muze-utils';\nimport { TOP, LEFT, BOTTOM } from '../enums/axis-orientation';\n\nexport const getRotatedSpaces = (rotation = 0, width, height) => {\n    let rotatedHeight = height;\n    let rotatedWidth = width;\n    if (rotation) {\n        const angle = ((rotation || 0) * Math.PI) / 180;\n        rotatedWidth = Math.abs(height * Math.sin(angle)) + Math.abs(width * Math.cos(angle));\n        rotatedHeight = Math.abs(width * Math.sin(angle)) + Math.abs(height * Math.cos(angle));\n    }\n    return { width: rotatedWidth, height: rotatedHeight };\n};\n\nexport const setOffset = (context) => {\n    let x = 0;\n    let y = 0;\n    const logicalSpace = context.logicalSpace();\n    const config = context.config();\n    const {\n        orientation,\n        xOffset,\n        yOffset\n    } = config;\n    if (orientation === LEFT) {\n        x = xOffset === undefined ? logicalSpace.width : xOffset;\n    }\n    if (orientation === TOP) {\n        y = yOffset === undefined ? logicalSpace.height : yOffset;\n    }\n    context.config({ xOffset: x, yOffset: y });\n};\n\nexport const getNumberOfTicks = (availableSpace, labelDim, axis, axisInstance) => {\n    const ticks = axis.scale().ticks();\n    const { numberOfTicks } = axisInstance.config();\n    const tickLength = ticks.length;\n    let numberOfValues = tickLength;\n\n    if (tickLength * (labelDim * 1.5) > availableSpace) {\n        numberOfValues = Math.floor(availableSpace / (labelDim * 1.5));\n    }\n\n    numberOfValues = Math.min(numberOfTicks, Math.max(2, numberOfValues));\n\n    return axis.scale().ticks(numberOfValues);\n};\n\nexport const getAxisComponentDimensions = (context) => {\n    let largestTick = '';\n    let largestTickDimensions = { width: 0, height: 0 };\n    let smartTick = {};\n    let axisTicks;\n    const allTickDimensions = [];\n    const scale = context.scale();\n    const { showAxisName } = context.renderConfig();\n    const { tickValues, name } = context.config();\n    const { labelManager } = context.dependencies();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    // set the style on the shared label manager instance\n    labelManager.setStyle(context._tickLabelStyle);\n\n    // get the values along the domain\n    axisTicks = tickValues || labelFunc();\n\n    // Get the tick labels\n    axisTicks = axisTicks.map((originalLabel, i) => {\n        const label = context.getFormattedText(originalLabel, i, axisTicks);\n\n    // convert to string for quant values\n        const tickDimensions = labelManager.getOriSize(label);\n\n    // Get spaces for all labels\n        allTickDimensions.push(tickDimensions);\n\n    // Getting largest label\n        if (tickDimensions.width > largestTickDimensions.width) {\n            largestTick = label;\n            smartTick = context.smartTicks() ? context.smartTicks()[i] : {};\n            largestTickDimensions = tickDimensions;\n        }\n        return label;\n    });\n\n    labelManager.setStyle(context._axisNameStyle);\n    const axisNameDimensions = showAxisName ? labelManager.getOriSize(name) : { width: 0, height: 0 };\n\n    return {\n        axisNameDimensions,\n        largestTick,\n        largestTickDimensions,\n        allTickDimensions,\n        axisTicks,\n        smartTick,\n        tickSize: context.getTickSize()\n    };\n};\n\nexport const computeAxisDimensions = (context) => {\n    let tickDimensions = {};\n    const { labels } = context.renderConfig();\n    const { smartTicks, rotation } = labels;\n    const {\n        largestTickDimensions,\n        axisTicks,\n        smartTick,\n        axisNameDimensions,\n        allTickDimensions,\n        tickSize\n    } = getAxisComponentDimensions(context);\n    const { height: labelHeight, width: labelWidth } = largestTickDimensions;\n\n    // get the domain of axis\n    const domain = context.domain();\n    // const angle = ((rotation || 0) * Math.PI) / 180;\n\n    if (domain.length === 0) {\n        return null;\n    }\n    if (smartTicks) {\n        tickDimensions = smartTick;\n    } else {\n        tickDimensions = { width: labelWidth, height: labelHeight };\n    }\n    tickDimensions = getRotatedSpaces(rotation, tickDimensions.width, tickDimensions.height);\n\n    if (tickSize === 0) {\n        tickDimensions = { width: 0, height: 0 };\n    }\n    return {\n        allTickDimensions,\n        tickSize,\n        tickDimensions,\n        axisNameDimensions,\n        largestTickDimensions,\n        axisTicks\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getHorizontalAxisSpace = (context, axisDimensions, range) => {\n    let width;\n    let height;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    width = range && range.length ? range[1] - range[0] : 0;\n\n    height = 0;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        width = ((max - min) / Math.abs(minTickDiff)) * (tickDimWidth + context._minTickDistance.width);\n    }\n    if (!width || width === 0) {\n        height = Math.max(tickDimWidth, tickDimHeight);\n    } else {\n        height = tickDimHeight;\n    }\n    height += (showAxisName ? axisDimHeight + axisNamePadding : 0) + tickSize;\n\n    return {\n        width,\n        height\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getVerticalAxisSpace = (context, axisDimensions) => {\n    let height;\n    let width;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    height = 0;\n    width = tickDimWidth;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        height = ((max - min) / Math.abs(minTickDiff)) * tickDimHeight;\n    }\n    width += (showAxisName ? axisDimHeight : 0) + tickSize + axisNamePadding;\n\n    return {\n        height,\n        width\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateBandSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n    const { orientation } = context.config();\n    const { show } = context.renderConfig();\n    const { largestTickDimensions, axisTicks, allTickDimensions } = axisDimensions;\n    const { height: largestDimHeight } = largestTickDimensions;\n    const minTickWidth = context._minTickDistance.width;\n    if (orientation === TOP || orientation === BOTTOM) {\n        let {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n\n        if (!width || width === 0) {\n            width = allTickDimensions.reduce((t, n) =>\n                t + Math.min(n.width, n.height) + minTickWidth, 0);\n        }\n        if (show === false) {\n            height = 0;\n            width = 0;\n        }\n\n        return {\n            width,\n            height\n        };\n    }\n\n    let {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    if (!height || height === 0) {\n        height = axisTicks.length * (largestDimHeight + context._minTickDistance.height) + largestDimHeight;\n    }\n    if (show === false) {\n        width = 0;\n    }\n\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateContinousSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n    const { orientation } = context.config();\n    const { show, showAxisName } = context.renderConfig();\n    const { axisNameDimensions } = axisDimensions;\n\n    if (show === false) {\n        return {\n            width: 0,\n            height: 0\n        };\n    }\n\n    const { width: axisNameWidth } = axisNameDimensions;\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        const {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n        const axisWidth = Math.max(width, axisNameWidth);\n\n        return {\n            width: axisWidth,\n            height\n        };\n    }\n    const {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    const effHeight = Math.max(height, showAxisName ? axisNameWidth : 0);\n\n    return {\n        width,\n        height: effHeight\n    };\n};\n\n/**\n * Overwrites domain with user defined domain (if present)\n * @param {Object} context reference to current axes\n * @param {Array} domain default domain\n *\n * @return {Array} domain\n */\nexport const getValidDomain = (context, domain) => {\n    const { domain: userDom } = context.config();\n\n    if (userDom) {\n        domain = userDom;\n    }\n\n    return defaultValue(domain, []);\n};\n\nexport const setContinousAxisDomain = (context, domain) => {\n    const { nice } = context.config();\n    const scale = context.scale.bind(context);\n\n    scale().domain(domain);\n    nice && scale().nice();\n    context._domain = scale().domain();\n};\n\n/**\n * Checks if any of the properties have changed between two objects\n * @param {Object} obj first object\n * @param {Object} obj1 second object\n * @param {Array} properties properties to be compared between two objects\n *\n * @return {Boolean} boolean value\n */\nexport const hasAxesConfigChanged = (obj = {}, obj1 = {}, properties) => {\n    if (!Object.keys(obj).length || !Object.keys(obj1).length) {\n        return false;\n    }\n    return properties.some(key => obj[key] !== obj1[key]);\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { hasAxesConfigChanged } from './helper';\n\nexport const PROPS = {\n    availableSpace: {},\n    axisDimensions: {},\n    axisComponentDimensions: {},\n    config: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._config || {});\n            const mockedOldConfig = mergeRecursive({}, oldConfig);\n            value = mergeRecursive(mockedOldConfig, value);\n\n            value.axisNamePadding = Math.max(value.axisNamePadding, 0);\n            const shouldAxesScaleUpdate = hasAxesConfigChanged(\n                value, oldConfig, ['interpolator', 'exponent', 'base', 'orientation']\n            );\n            const tickFormatter = context.sanitizeTickFormatter(value);\n\n            if (shouldAxesScaleUpdate) {\n                context._scale = context.createScale(value);\n                context._axis = context.createAxis(value);\n            }\n\n            context._tickFormatter = ticks => tickFormatter(ticks);\n\n            const {\n                labels,\n                show,\n                showInnerTicks,\n                showOuterTicks,\n                showAxisName\n            } = value;\n            context.renderConfig({\n                labels,\n                show,\n                showInnerTicks,\n                showOuterTicks,\n                showAxisName\n            });\n            return value;\n        }\n    },\n    renderConfig: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._renderConfig || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    logicalSpace: {},\n    mount: {\n    },\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.logicalSpace(null);\n            return value;\n        }\n    },\n\n    smartTicks: {},\n    tickSize: {},\n    maxTickSpaces: {},\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import {\n    mergeRecursive,\n    getSmartComputedStyle,\n    selectElement,\n    generateGetterSetters,\n    getUniqueId\n} from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { defaultConfig } from './default-config';\nimport { renderAxis } from '../axis-renderer';\nimport { spaceSetter } from './space-setter';\nimport {\n    getAxisComponentDimensions,\n    computeAxisDimensions,\n    calculateContinousSpace,\n    setOffset,\n    getValidDomain\n} from './helper';\nimport { PROPS } from './props';\n\nexport default class SimpleAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @memberof SimpleAxis\n     */\n    constructor (config, dependencies) {\n        this._id = getUniqueId();\n\n        this._dependencies = dependencies;\n        this._mount = null;\n        this._range = [];\n        this._domain = [];\n        this._domainLock = false;\n        this._axisDimensions = {};\n        this._smartTicks = [];\n\n        const defCon = mergeRecursive({}, this.constructor.defaultConfig());\n        const simpleConfig = mergeRecursive(defCon, config);\n\n        const bodyElem = selectElement('body');\n        const classPrefix = simpleConfig.classPrefix;\n        this._tickLabelStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-ticks`);\n        this._axisNameStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-axis-name`);\n\n        dependencies.labelManager.setStyle(this._tickLabelStyle);\n        const dist = dependencies.labelManager.getOriSize('w');\n\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n        this._minTickSpace = dependencies.labelManager.getOriSize('www');\n\n        generateGetterSetters(this, PROPS);\n        this.config(simpleConfig);\n\n        this._scale = this.createScale(this._config);\n        this._axis = this.createAxis(this._config);\n        this._animationDonePromises = [];\n    }\n\n    /**\n     * Returns the default configuration of simple axis\n     *  @return {Object} default configurations\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    scale (...params) {\n        if (params.length) {\n            this._scale = params[0];\n            return this;\n        }\n        return this._scale;\n    }\n\n    resetDomain () {\n        this._domain = [];\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    axis (...params) {\n        if (params.length) {\n            this._axis = params[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            this.scale().domain(domainValue);\n            this._domain = this.scale().domain();\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    setAxisComponentDimensions () {\n        this.axisComponentDimensions(getAxisComponentDimensions(this));\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const scale = createScale({\n            padding,\n            interpolator,\n            exponent,\n            base,\n            range,\n            type: this.constructor.type()\n        });\n\n        return scale;\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat, numberFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(numberFormat(val), val, i, ticks);\n        }\n\n        return () => val => numberFormat(val);\n    }\n\n    resetLogicalSpace () {\n        this.logicalSpace(null);\n        this.range([]);\n        const {\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName\n        } = this.config();\n        this.renderConfig({\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName\n        });\n    }\n\n    getFormattedText (text, index, axisTicks) {\n        const formatter = this._tickFormatter;\n\n        return formatter(axisTicks)(text, index);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const { orientation } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            const axis = axisClass(this.scale());\n            return axis;\n        }\n        return null;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).continous.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).continous.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        return this;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this.scale()(domainVal);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        return this.axis().tickSize();\n    }\n\n    /**\n     * Gets the space occupied by the parts of an axis\n     *\n     * @return {Object} object with details about sizes of the axis.\n     * @memberof SimpleAxis\n     */\n    getAxisDimensions (...params) {\n        this.axisDimensions(computeAxisDimensions(this, ...params));\n        return this.axisDimensions();\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateContinousSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    /**\n     * Returns the value from the domain when given a value from the range.\n     * @param {number} value Value from the range.\n     * @return {number} Value\n     */\n    invert (value) {\n        return this.scale().invert(value);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     *\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        return [v1, v2];\n    }\n\n    invertExtent (v1, v2) {\n        return [this.invert(v1), this.invert(v2)];\n    }\n\n    getMinTickDifference () {\n        return this.domain();\n    }\n\n    getFormattedTickValues (tickValues) {\n        return tickValues;\n    }\n\n    /**\n     * This method returns the width in pixels for one\n     * unit along the axis. It is only applicable to band scale\n     * and returns undefined for other scale type.\n     *\n     * @return {number} the width of one band along band scale axis\n     * @memberof SimpleAxis\n     */\n    getUnitWidth () {\n        return 0;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof SimpleAxis\n     */\n    serialize () {\n        return {\n            name: this.name,\n            type: this.type,\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to render the axis inside\n     * the supplied svg container.\n     *\n     * @param {SVGElement} svg the svg element in which to render the path\n     * @memberof SimpleAxis\n     */\n    /* istanbul ignore next */render () {\n        if (this.mount()) {\n            this.setTickConfig();\n            renderAxis(this);\n        }\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    remove () {\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    unsubscribe () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    isReverse () {\n        const range = this.range();\n        return range[0] > range[1];\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getPixelToValueRatio () {\n        const scale = this.scale();\n        const range = scale.range();\n        const domain = scale.domain();\n\n        return Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    }\n\n     /**\n     * Notifies when all animations/transitions of the axis are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n}\n\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LinearInterpolator {\n\n    createScale (config) {\n        const {\n            range\n        } = config;\n        const scaleFactory = scaleMap.linear;\n        this._scale = scaleFactory().range(range);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain.length && domain[0] === domain[1]) {\n            domain = [0, +domain[0] * 2];\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LogInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            base\n        } = config;\n        const scaleFactory = scaleMap.log;\n        this._scale = scaleFactory().range(range).base(base);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal <= 0) {\n            return 1;\n        }\n\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain[0] <= 0) {\n            return [Math.max(1, domain[0]), Math.max(1, domain[1])];\n        } return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class PowInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            exponent\n        } = config;\n        const scaleFactory = scaleMap.pow;\n        this._scale = scaleFactory().range(range).exponent(exponent);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        return domain;\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { spaceSetter } from './space-setter';\nimport { LINEAR, LOG, POW } from '../enums/scale-type';\nimport { LogInterpolator, PowInterpolator, LinearInterpolator } from './interpolators';\nimport {\n    getNumberOfTicks,\n    getValidDomain,\n    setContinousAxisDomain\n} from './helper';\n\nexport const interpolatorMap = {\n    [LOG]: LogInterpolator,\n    [POW]: PowInterpolator,\n    [LINEAR]: LinearInterpolator\n};\n\nexport default class ContinousAxis extends SimpleAxis {\n    constructor (config, dependencies) {\n        config.tickFormat = config.tickFormat || (val => val);\n        super(config, dependencies);\n    }\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const InterpolatorCls = interpolatorMap[interpolator];\n\n        this._interpolator = new InterpolatorCls();\n        let scale = this._interpolator.createScale({\n            padding,\n            exponent,\n            base,\n            range\n        });\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ContinousAxis\n     */\n    static type () {\n        return LINEAR;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this._interpolator.getScaleValue(domainVal);\n    }\n /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n\n        return axis.tickSize();\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainVal = this._interpolator.sanitizeDomain(getValidDomain(this, domain[0]));\n            setContinousAxisDomain(this, domainVal);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).continous.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).continous.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} tickValues\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        const {\n            tickValues\n        } = this.config();\n        const {\n            showInnerTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        if (!showInnerTicks) {\n            axis.tickValues([]);\n            return this;\n        }\n\n        if (tickValues) {\n            tickValues instanceof Array && this.axis().tickValues(tickValues);\n            return this;\n        }\n        axis.tickValues(this.getTickValues());\n\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickValues () {\n        let labelDim = 0;\n        const {\n            orientation,\n            tickValues\n        } = this.config();\n        const range = this.range();\n        const axis = this.axis();\n\n        const availableSpace = Math.abs(range[0] - range[1]);\n\n        const labelProps = this.axisComponentDimensions().largestTickDimensions;\n\n        if (tickValues) {\n            return axis.scale().ticks(tickValues);\n        }\n        labelDim = labelProps[orientation === BOTTOM || orientation === TOP ? 'width' : 'height'];\n\n        return getNumberOfTicks(availableSpace, labelDim, axis, this);\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline (tickText) {\n        const {\n            orientation\n        } = this.config();\n        const {\n            labels\n        } = this.renderConfig();\n\n        const {\n            rotation\n        } = labels;\n        const axis = this.axis();\n        const ticks = axis.scale().ticks();\n        const { width, height } = this.axisComponentDimensions().allTickDimensions[0];\n        axis.tickTransform((d) => {\n            if (d === ticks[0]) {\n                if ((orientation === LEFT || orientation === RIGHT)) {\n                    return `translate(0, -${(height) / 3}px)`;\n                }\n                if ((orientation === TOP || orientation === BOTTOM) && !rotation) {\n                    return `translate(${width / 2}px,  ${0}px)`;\n                }\n            } return '';\n        });\n        return tickText;\n    }\n\n}\n","import SimpleAxis from './simple-axis';\nimport { BAND } from '../enums/scale-type';\nimport { TOP, BOTTOM } from '../enums/axis-orientation';\nimport { calculateBandSpace, setOffset, getRotatedSpaces } from './helper';\nimport { spaceSetter } from './space-setter';\n\nexport default class BandAxis extends SimpleAxis {\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BandAxis\n     */\n    static type () {\n        return BAND;\n    }\n\n     /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).band.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).band.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks = '';\n        let smartlabel;\n        const domain = this.domain();\n        const { labelManager } = this._dependencies;\n        const { tickValues, padding } = this.config();\n        const { labels } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        tickValues && this.axis().tickValues(tickValues);\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        // Update padding between plots\n        if (typeof padding === 'number') {\n            const paddingNormalized = Math.min(1, Math.max(0, padding));\n            this.scale().padding(paddingNormalized);\n        }\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    /**\n     *\n     *\n     * @memberof BandAxis\n     */\n    getTickValues () {\n        return this.axis().scale().domain();\n    }\n\n    formatTickValue (val) {\n        return this.valueParser()(val);\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(this.formatTickValue(val), val, i, ticks);\n        }\n        return () => val => this.formatTickValue(val);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    getUnitWidth () {\n        return this.scale().bandwidth();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        axis.tickSizeInner(showInnerTicks ? 6 : 0);\n        axis.tickSizeOuter(showOuterTicks ? 6 : 0);\n        return axis.tickSize();\n    }\n\n    invertExtent (v1, v2) {\n        return this.scale().invertExtent(v1, v2);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        const scale = this.scale();\n        const range = scale.range();\n        const reverse = range[0] > range[1];\n\n        const extent = this.invertExtent(v1, v2);\n        const p1 = scale(reverse ? extent[extent.length - 1] : extent[0]);\n        const p2 = scale(reverse ? extent[0] : extent[extent.length - 1]) + scale.bandwidth();\n        return [p1, p2];\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { TIME } from '../enums/scale-type';\nimport { BOTTOM, TOP } from '../enums/axis-orientation';\nimport { calculateBandSpace, getRotatedSpaces, getValidDomain, setContinousAxisDomain, setOffset } from './helper';\nimport { spaceSetter } from './space-setter';\n\n/**\n *\n *\n * @export\n * @class TimeAxis\n * @extends {SimpleAxis}\n */\nexport default class TimeAxis extends SimpleAxis {\n\n    constructor (...params) {\n        super(...params);\n        this._minDiff = Infinity;\n    }\n\n    /**\n     *\n     *\n     * @param {*} range\n     *\n     * @memberof TimeAxis\n     */\n    createScale (range) {\n        let scale = super.createScale(range);\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TimeAxis\n     */\n    static type () {\n        return TIME;\n    }\n\n    formatTickValue (val) {\n        return this.scale().tickFormat()(val);\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return (ticks) => {\n                const rawTicks = ticks.map(t => t.getTime());\n                return (val, i) => tickFormat(this.formatTickValue(val), val.getTime(), i, rawTicks);\n            };\n        }\n        return () => val => this.formatTickValue(val);\n    }\n\n     /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n        return super.getTickSize();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TimeAxis\n     */\n    getTickValues () {\n        return this.config().tickValues || this.scale().ticks();\n    }\n\n    /**\n     *\n     *\n     * @param {*} diff\n     *\n     * @memberof TimeAxis\n     */\n    minDiff (diff) {\n        this._minDiff = Math.min(this._minDiff, diff);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            setContinousAxisDomain(this, domainValue);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).time.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).time.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks;\n        let smartlabel;\n        const { tickValues } = this.config();\n        const { labels } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { labelManager } = this._dependencies;\n        const domain = this.getTickValues();\n\n        tickValues && this.axis().tickValues(tickValues);\n\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        this.smartTicks(smartTicks);\n        return this;\n    }\n}\n","export const x11Colors = {\n    Pink: { hex: 'ffc0cb', rgb: '255,192,203' },\n    LightPink: { hex: 'ffb6c1', rgb: '255,182,193' },\n    HotPink: { hex: 'ff69b4', rgb: '255,105,180' },\n    DeepPink: { hex: 'ff1493', rgb: '255,20,147' },\n    PaleVioletRed: { hex: 'db7093', rgb: '219,112,147' },\n    MediumVioletRed: { hex: 'c71585', rgb: '199,21,133' },\n    LightSalmon: { hex: 'ffa07a', rgb: '255,160,122' },\n    Salmon: { hex: 'fa8072', rgb: '250,128,114' },\n    DarkSalmon: { hex: 'e9967a', rgb: '233,150,122' },\n    LightCoral: { hex: 'f08080', rgb: '240,128,128' },\n    IndianRed: { hex: 'cd5c5c', rgb: '205,92,92' },\n    Crimson: { hex: 'dc143c', rgb: '220,20,60' },\n    FireBrick: { hex: 'b22222', rgb: '178,34,34' },\n    DarkRed: { hex: '8b0000', rgb: '139,0,0' },\n    Red: { hex: 'ff0000', rgb: '255,0,0' },\n    OrangeRed: { hex: 'ff4500', rgb: '255,69,0' },\n    Tomato: { hex: 'ff6347', rgb: '255,99,71' },\n    Coral: { hex: 'ff7f50', rgb: '255,127,80' },\n    DarkOrange: { hex: 'ff8c00', rgb: '255,140,0' },\n    Orange: { hex: 'ffa500', rgb: '255,165,0' },\n    Gold: { hex: 'ffd700', rgb: '255,215,0' },\n    Yellow: { hex: 'ffff00', rgb: '255,255,0' },\n    LightYellow: { hex: 'ffffe0', rgb: '255,255,224' },\n    LemonChiffon: { hex: 'fffacd', rgb: '255,250,205' },\n    LightGoldenrodYellow: { hex: 'fafad2', rgb: '250,250,210' },\n    PapayaWhip: { hex: 'ffefd5', rgb: '255,239,213' },\n    Moccasin: { hex: 'ffe4b5', rgb: '255,228,181' },\n    PeachPuff: { hex: 'ffdab9', rgb: '255,218,185' },\n    PaleGoldenrod: { hex: 'eee8aa', rgb: '238,232,170' },\n    Khaki: { hex: 'f0e68c', rgb: '240,230,140' },\n    DarkKhaki: { hex: 'bdb76b', rgb: '189,183,107' },\n    Cornsilk: { hex: 'fff8dc', rgb: '255,248,220' },\n    BlanchedAlmond: { hex: 'ffebcd', rgb: '255,235,205' },\n    Bisque: { hex: 'ffe4c4', rgb: '255,228,196' },\n    NavajoWhite: { hex: 'ffdead', rgb: '255,222,173' },\n    Wheat: { hex: 'f5deb3', rgb: '245,222,179' },\n    BurlyWood: { hex: 'deb887', rgb: '222,184,135' },\n    Tan: { hex: 'd2b48c', rgb: '210,180,140' },\n    RosyBrown: { hex: 'bc8f8f', rgb: '188,143,143' },\n    SandyBrown: { hex: 'f4a460', rgb: '244,164,96' },\n    Goldenrod: { hex: 'daa520', rgb: '218,165,32' },\n    DarkGoldenrod: { hex: 'b8860b', rgb: '184,134,11' },\n    Peru: { hex: 'cd853f', rgb: '205,133,63' },\n    Chocolate: { hex: 'd2691e', rgb: '210,105,30' },\n    SaddleBrown: { hex: '8b4513', rgb: '139,69,19' },\n    Sienna: { hex: 'a0522d', rgb: '160,82,45' },\n    Brown: { hex: 'a52a2a', rgb: '165,42,42' },\n    Maroon: { hex: '800000', rgb: '128,0,0' },\n    DarkOliveGreen: { hex: '556b2f', rgb: '85,107,47' },\n    Olive: { hex: '808000', rgb: '128,128,0' },\n    OliveDrab: { hex: '6b8e23', rgb: '107,142,35' },\n    YellowGreen: { hex: '9acd32', rgb: '154,205,50' },\n    LimeGreen: { hex: '32cd32', rgb: '50,205,50' },\n    Lime: { hex: '00ff00', rgb: '0,255,0' },\n    LawnGreen: { hex: '7cfc00', rgb: '124,252,0' },\n    Chartreuse: { hex: '7fff00', rgb: '127,255,0' },\n    GreenYellow: { hex: 'adff2f', rgb: '173,255,47' },\n    SpringGreen: { hex: '00ff7f', rgb: '0,255,127' },\n    MediumSpringGreen: { hex: '00fa9a', rgb: '0,250,154' },\n    LightGreen: { hex: '90ee90', rgb: '144,238,144' },\n    PaleGreen: { hex: '98fb98', rgb: '152,251,152' },\n    DarkSeaGreen: { hex: '8fbc8f', rgb: '143,188,143' },\n    MediumSeaGreen: { hex: '3cb371', rgb: '60,179,113' },\n    SeaGreen: { hex: '2e8b57', rgb: '46,139,87' },\n    ForestGreen: { hex: '228b22', rgb: '34,139,34' },\n    Green: { hex: '008000', rgb: '0,128,0' },\n    DarkGreen: { hex: '006400', rgb: '0,100,0' },\n    MediumAquamarine: { hex: '66cdaa', rgb: '102,205,170' },\n    Aqua: { hex: '00ffff', rgb: '0,255,255' },\n    Cyan: { hex: '00ffff', rgb: '0,255,255' },\n    LightCyan: { hex: 'e0ffff', rgb: '224,255,255' },\n    PaleTurquoise: { hex: 'afeeee', rgb: '175,238,238' },\n    Aquamarine: { hex: '7fffd4', rgb: '127,255,212' },\n    Turquoise: { hex: '40e0d0', rgb: '64,224,208' },\n    MediumTurquoise: { hex: '48d1cc', rgb: '72,209,204' },\n    DarkTurquoise: { hex: '00ced1', rgb: '0,206,209' },\n    LightSeaGreen: { hex: '20b2aa', rgb: '32,178,170' },\n    CadetBlue: { hex: '5f9ea0', rgb: '95,158,160' },\n    DarkCyan: { hex: '008b8b', rgb: '0,139,139' },\n    Teal: { hex: '008080', rgb: '0,128,128' },\n    LightSteelBlue: { hex: 'b0c4de', rgb: '176,196,222' },\n    PowderBlue: { hex: 'b0e0e6', rgb: '176,224,230' },\n    LightBlue: { hex: 'add8e6', rgb: '173,216,230' },\n    SkyBlue: { hex: '87ceeb', rgb: '135,206,235' },\n    LightSkyBlue: { hex: '87cefa', rgb: '135,206,250' },\n    DeepSkyBlue: { hex: '00bfff', rgb: '0,191,255' },\n    DodgerBlue: { hex: '1e90ff', rgb: '30,144,255' },\n    CornflowerBlue: { hex: '6495ed', rgb: '100,149,237' },\n    SteelBlue: { hex: '4682b4', rgb: '70,130,180' },\n    RoyalBlue: { hex: '4169e1', rgb: '65,105,225' },\n    Blue: { hex: '0000ff', rgb: '0,0,255' },\n    MediumBlue: { hex: '0000cd', rgb: '0,0,205' },\n    DarkBlue: { hex: '00008b', rgb: '0,0,139' },\n    Navy: { hex: '000080', rgb: '0,0,128' },\n    MidnightBlue: { hex: '191970', rgb: '25,25,112' },\n    Lavender: { hex: 'e6e6fa', rgb: '230,230,250' },\n    Thistle: { hex: 'd8bfd8', rgb: '216,191,216' },\n    Plum: { hex: 'dda0dd', rgb: '221,160,221' },\n    Violet: { hex: 'ee82ee', rgb: '238,130,238' },\n    Orchid: { hex: 'da70d6', rgb: '218,112,214' },\n    Fuchsia: { hex: 'ff00ff', rgb: '255,0,255' },\n    Magenta: { hex: 'ff00ff', rgb: '255,0,255' },\n    MediumOrchid: { hex: 'ba55d3', rgb: '186,85,211' },\n    MediumPurple: { hex: '9370db', rgb: '147,112,219' },\n    BlueViolet: { hex: '8a2be2', rgb: '138,43,226' },\n    DarkViolet: { hex: '9400d3', rgb: '148,0,211' },\n    DarkOrchid: { hex: '9932cc', rgb: '153,50,204' },\n    DarkMagenta: { hex: '8b008b', rgb: '139,0,139' },\n    Purple: { hex: '800080', rgb: '128,0,128' },\n    Indigo: { hex: '4b0082', rgb: '75,0,130' },\n    DarkSlateBlue: { hex: '483d8b', rgb: '72,61,139' },\n    SlateBlue: { hex: '6a5acd', rgb: '106,90,205' },\n    MediumSlateBlue: { hex: '7b68ee', rgb: '123,104,238' },\n    White: { hex: 'ffffff', rgb: '255,255,255' },\n    Snow: { hex: 'fffafa', rgb: '255,250,250' },\n    Honeydew: { hex: 'f0fff0', rgb: '240,255,240' },\n    MintCream: { hex: 'f5fffa', rgb: '245,255,250' },\n    Azure: { hex: 'f0ffff', rgb: '240,255,255' },\n    AliceBlue: { hex: 'f0f8ff', rgb: '240,248,255' },\n    GhostWhite: { hex: 'f8f8ff', rgb: '248,248,255' },\n    WhiteSmoke: { hex: 'f5f5f5', rgb: '245,245,245' },\n    Seashell: { hex: 'fff5ee', rgb: '255,245,238' },\n    Beige: { hex: 'f5f5dc', rgb: '245,245,220' },\n    OldLace: { hex: 'fdf5e6', rgb: '253,245,230' },\n    FloralWhite: { hex: 'fffaf0', rgb: '255,250,240' },\n    Ivory: { hex: 'fffff0', rgb: '255,255,240' },\n    AntiqueWhite: { hex: 'faebd7', rgb: '250,235,215' },\n    Linen: { hex: 'faf0e6', rgb: '250,240,230' },\n    LavenderBlush: { hex: 'fff0f5', rgb: '255,240,245' },\n    MistyRose: { hex: 'ffe4e1', rgb: '255,228,225' },\n    Gainsboro: { hex: 'dcdcdc', rgb: '220,220,220' },\n    LightGray: { hex: 'd3d3d3', rgb: '211,211,211' },\n    Silver: { hex: 'c0c0c0', rgb: '192,192,192' },\n    DarkGrey: { hex: 'a9a9a9', rgb: '169,169,169' },\n    Grey: { hex: '808080', rgb: '128,128,128' },\n    DimGrey: { hex: '696969', rgb: '105,105,105' },\n    LightSlateGrey: { hex: '778899', rgb: '119,136,153' },\n    SlateGrey: { hex: '708090', rgb: '112,128,144' },\n    DarkSlateGrey: { hex: '2f4f4f', rgb: '47,79,79' },\n    Black: { hex: '000000', rgb: '0,0,0' }\n};\n","import {\n    LINEAR\n} from '../enums/constants';\n/**\n * Set of default colors\n */\nexport const palette = [\n    '#086bb6',\n    '#f37d45',\n    '#f5ce02',\n    '#67bda0',\n    '#c54e4e',\n    '#ae70af'\n];\n\nexport const DEFAULT_GRADIENT_COLOR = '#eaeaea';\n\nexport const DEFAULT_CONFIG = {\n    range: palette,\n    value: palette[0],\n    step: false,\n    stops: 5,\n    type: LINEAR\n};\n","import { mergeRecursive, detectColor, hexToHsv, rgbToHsv } from 'muze-utils';\nimport { x11Colors } from './color-maps';\nimport { palette, DEFAULT_GRADIENT_COLOR } from './defaults';\nimport { LINEAR, RGB, HEX, HSL, HSLA } from '../enums/constants';\n\nexport const getHslString = hslArr => `hsla(${hslArr[0] * 360},${hslArr[1] * 100}%,${hslArr[2] * 100}%,\\\n${hslArr[3] || 1})`;\n\nexport const convertToXllString = baseString => (baseString.split(' ') || [])\n                .reduce((x, e) => `${x}${e.charAt(0).toUpperCase()}${e.slice(1)}`, '');\n\nexport const getActualHslColor = (e, paletteColor) => {\n    let color = '';\n    if (typeof e === 'string') {\n        e = e.replace(/ /g, '');\n        e = e.toLowerCase();\n        if (detectColor(e) === HSL || detectColor(e) === HSLA) {\n            color = e.match(/(\\d+(\\.\\d+)?)/g);\n            color = [color[0] / 360, color[1] / 100, color[2] / 100, color[3] || 1];\n        } else if (detectColor(e) === HEX) {\n            color = hexToHsv(e);\n        } else if (detectColor(e) === RGB) {\n            const col = e.substring(e.indexOf('(') + 1, e.lastIndexOf(')')).split(/,\\s*/);\n            color = rgbToHsv(...col);\n        } else if (x11Colors[convertToXllString(e)]) {\n            color = rgbToHsv(...x11Colors[convertToXllString(e)].rgb.split(','));\n        }\n    } else if (!(e instanceof Array)) {\n        color = rgbToHsv(paletteColor);\n    } else {\n        color = e;\n    }\n    return color;\n};\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => {\n            const defCon = mergeRecursive({}, context.constructor.defaultConfig());\n            if (config.type === LINEAR) {\n                config.range = config.range || [defCon.range[0]];\n                config.range = config.range.length > 1 ? config.range : [DEFAULT_GRADIENT_COLOR, ...config.range];\n            }\n            const oldConfig = mergeRecursive(defCon, context.config());\n            const newConfig = mergeRecursive(oldConfig, config);\n\n            if (newConfig.range instanceof Array) {\n                newConfig.range = newConfig.range.map((e, i) => getActualHslColor(e, palette[i]));\n                newConfig.stops = config.stops || newConfig.range.length;\n            }\n            newConfig.value = getActualHslColor(newConfig.value, newConfig.value);\n            return newConfig;\n        }\n    },\n    domain: {},\n    scale: {},\n    uniqueValues: {}\n};\n","import { InvalidAwareTypes } from 'muze-utils';\n\nexport const treatNullMeasures = (domainVal, scaledVal, minDomainScaledVal) => {\n    if (domainVal instanceof InvalidAwareTypes) {\n        return minDomainScaledVal;\n    }\n    return scaledVal;\n};\n","import { numberInterpolator, piecewiseInterpolator, hslInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, SEQUENTIAL, ORDINAL, QUANTILE } from '../enums/scale-type';\nimport { getHslString } from './props';\nimport { treatNullMeasures } from '../helper';\n\nconst getStops = (domain, stops) => {\n    let newStops = [];\n\n    if (stops instanceof Array) {\n        newStops = stops.slice().sort();\n        newStops = [...new Set([domain[0], ...stops, domain[1]])].sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i <= stops; i++) {\n            newStops[i] = interpolator(i / stops);\n        }\n    }\n\n    if (newStops[0] < domain[0]) {\n        newStops.shift();\n    }\n    return { domain, newStops };\n};\n\nconst rangeStops = (newStopsLength, range) => {\n    let newRange = [];\n    const maxRangeLength = Math.min(range.length, 18);\n\n    if (newStopsLength > maxRangeLength) {\n        const interpolator = piecewiseInterpolator()(hslInterpolator(), range.map(e => getHslString(e)));\n        for (let i = 0; i < newStopsLength; i++) {\n            newRange[i] = interpolator(i / (newStopsLength - 1));\n        }\n    } else {\n        newRange = range.slice(0, newStopsLength);\n    }\n    return { newRange };\n};\n\n/**\n*\n*\n* @param {*} domain\n*\n*/\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomainMeasure = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { domain, uniqueVals, scaleDomain: [0, 1], range };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain, nice: true, range };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} stops\n *\n */\nconst steppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, stops);\n    const { newRange } = rangeStops(newStops.length - 1, range);\n\n    return { uniqueVals, domain: newStops, nice: true, range: newRange };\n};\n\nconst continousSteppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, range.length - 1);\n    const hslRange = range.map(e => getHslString(e));\n    return { uniqueVals, domain: newStops, nice: true, range: hslRange };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst uniqueRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    return scale(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst indexedRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n\n    return treatNullMeasures(domainValue, scale(numVal), scale(0));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) => treatNullMeasures(domainValue, scale(domainValue),\n    scale(domain[0]));\n\n/**\n *\n *\n * @param {*} stops\n */\nconst strategies = () => ({\n    [`${CONTINOUS}-${CONTINOUS}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomain,\n        value: () => uniqueRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${ORDINAL}`]: {\n        scale: ORDINAL,\n        domainRange: () => normalDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}-${ORDINAL}`]: {\n        scale: LINEAR,\n        domainRange: () => continousSteppedDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${ORDINAL}`]: {\n        scale: QUANTILE,\n        domainRange: () => steppedDomain,\n        value: () => normalRange\n\n    }\n});\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} stops\n */\nexport const strategyGetter = (domainType, rangeType, schemeType, stops) =>\n     strategies(stops)[`${domainType}-${rangeType}-${schemeType || ''}`];\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters, rgbToHsv } from 'muze-utils';\nimport { createScale, getScheme, getSchemeType } from '../scale-creator';\nimport { CONTINOUS, DISCRETE, COLOR } from '../enums/constants';\nimport { strategyGetter } from './color-strategy';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { PROPS, getHslString } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ColorAxis {\n\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} config input parameters.\n    * @param {Object | undefined} params.range Type of color range.\n    * @param {string} params.name the label to show on axis.\n    * @param {string} params.type The type of scale to handle.\n    * @memberof ColorAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n        this.config(config);\n\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = (this._config.type === 'linear' && !this._config.step) ? CONTINOUS : DISCRETE;\n\n        this._schemeType = getSchemeType(this._config.range);\n\n        this._colorStrategy = this.setColorStrategy(this._domainType, this._rangeType, this._schemeType);\n        this._scale = this.createScale(this._colorStrategy);\n\n        this._id = getUniqueId();\n\n        this.updateDomain(config.domain);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return COLOR;\n    }\n\n    /**\n     *\n     *\n     * @param {*} colorStrategy\n     *\n     * @memberof ColorAxis\n     */\n    createScale (colorStrategy) {\n        const { range } = this.config();\n        if (range && typeof (range) === 'string') {\n            return getScheme(range);\n        }\n        return createScale({\n            type: colorStrategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setColorStrategy (domainType, rangeType, schemeType) {\n        const { stops } = this.config();\n\n        return strategyGetter(domainType, rangeType, schemeType, stops);\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getHslString (hslColorArray) {\n        return getHslString(hslColorArray);\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getColor (domainVal) {\n        return this.getHslString(this.getRawColor(domainVal));\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getRawColor (domainVal) {\n        if (this.domain() && domainVal !== undefined) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const color = this._colorStrategy.value(range)(domainVal, scale, this.domain(), this.uniqueValues());\n            if (color) {\n                if (typeof color === 'string') {\n                    const col = color.substring(color.indexOf('(') + 1, color.lastIndexOf(')')).split(/,\\s*/);\n                    return rgbToHsv(...col);\n                }\n                return [...color];\n            }\n        }\n        return [...this.config().value];\n    }\n\n    /**\n     *\n     *\n     * @param {*} [domain=[]]\n     *\n     * @memberof ColorAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const domainRangeFn = this._colorStrategy.domainRange();\n            const scaleInfo = domainRangeFn(domain, this.config().stops, range);\n\n            this.domain(scaleInfo.domain);\n            scaleInfo.range && this.scale().range(scaleInfo.range);\n            this.uniqueValues(scaleInfo.uniqueVals);\n            this.scale().domain(scaleInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            config: this.config()\n        };\n    }\n\n    transformColor (color, transformationArr) {\n        const h = color[0] * 360;\n        const s = color[1] * 100;\n        const l = color[2] * 100;\n        const a = color[3] || 1;\n        const newH = h + transformationArr[0];\n        const newS = s + transformationArr[1];\n        const newL = l + transformationArr[2];\n        const newA = a + transformationArr[3] || 0;\n\n        return { color: `hsla(${newH},${newS}%,${newL}%,${newA})`, hsla: [newH / 360, newS / 100, newL / 100, newA] };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n\n}\n","export const DEFAULT_CONFIG = {\n    value: 36,\n    range: [36, 1000]\n};\n","import { numberInterpolator, piecewiseInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, THRESHOLD } from '../enums/scale-type';\nimport { treatNullMeasures } from '../helper';\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} intervals\n *\n */\nconst steppedDomain = (domain, intervals) => {\n    let newIntervals = [];\n    if (intervals instanceof Array) {\n        newIntervals = intervals.slice().sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i < intervals; i++) {\n            newIntervals[i] = interpolator(i / (intervals - 1));\n        }\n    }\n    if (newIntervals[0] < domain[0]) {\n        newIntervals.shift();\n    }\n    const retDomain = newIntervals;\n    return { uniqueVals: newIntervals, domain: retDomain, nice: true };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst discreteRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n    const interpolator = numberInterpolator()(...scale.range());\n    return treatNullMeasures(domainValue, interpolator(numVal), interpolator(domain[0]));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst pieceWiseRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    const fn = piecewiseInterpolator()(numberInterpolator(), [...scale.range()]);\n    return fn(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) =>\n    treatNullMeasures(domainValue, scale(domainValue), scale(domain[0]));\n\n/**\n *\n *\n * @param {*} intervals\n */\nconst strategies = {\n    [`${DISCRETE}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: indexedDomain,\n        range: pieceWiseRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: normalDomain,\n        range: normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}`]: {\n        scale: THRESHOLD,\n        domain: steppedDomain,\n        range: discreteRange\n    }\n};\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} intervals\n */\nexport const strategyGetter = (domainType, rangeType) =>\n     strategies[`${domainType}-${rangeType}`];\n","export const PROPS = {\n    config: {},\n    domain: {\n        sanitization: (context, value) => {\n            context.scale().domain(value);\n            return value;\n        }\n    },\n    range: {},\n    scale: {},\n    uniqueValues: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SIZE, CONTINOUS, DISCRETE } from '../enums/constants';\nimport { strategyGetter } from './size-strategy';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class SizeAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @param {Object} config input parameters.\n     * @memberof SizeAxis\n     */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig(), config);\n        // @todo: Will use configuration override using scale decorator\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = CONTINOUS;\n\n        this._sizeStrategy = this.setStrategy(this._domainType, this._rangeType);\n        this._scale = this.createScale(this._sizeStrategy);\n        this._range = this._config.range;\n\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setStrategy (domainType, rangeType) {\n        return strategyGetter(domainType, rangeType);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SizeAxis\n     */\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SIZE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof SizeAxis\n     */\n    getSize (domainVal = 0) {\n        let sizeVal = 1;\n        const {\n            value\n        } = this.config();\n        const scale = this.scale();\n        const domain = this.domain() || [1, 1];\n\n        if (!scale || domain[0] === domain[1]) {\n            sizeVal = value;\n        } else {\n            return this._sizeStrategy.range(domainVal, scale, this.domain(), this.uniqueValues());\n        }\n        return sizeVal;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof SizeAxis\n     */\n    updateDomain (domain) {\n        if (domain) {\n            const domainFn = this._sizeStrategy.domain;\n\n            const domainInfo = domainFn(domain, this.config().intervals);\n\n            this.domain(domainInfo.domain);\n            this.uniqueValues(domainInfo.uniqueVals);\n\n            this.scale().domain(domainInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","export const DEFAULT_CONFIG = {\n    generator: null,\n    value: 'circle',\n    range: ['circle', 'diamond', 'star', 'cross', 'square', 'wye', 'triangle']\n};\n","export const PROPS = {\n    config: {},\n    domain: {},\n    scale: {},\n    uniqueValues: {},\n    generator: {}\n};\n\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, getSymbol, generateGetterSetters, mergeRecursive, InvalidAwareTypes } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SHAPE } from '../enums/constants';\nimport { shapeGenerator } from './helper';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ShapeAxis {\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} params input parameters.\n    * @param {Object | undefined} params.range Type of color scheme.\n    * @memberof ShapeAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(this._config, config);\n\n        this._scale = createScale({\n            type: 'ordinal',\n            range: this._config.range\n        });\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SHAPE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} value\n     *\n     * @memberof ShapeAxis\n     */\n    getShape (value) {\n        if (!this.scale() || !this.domain() || !value || value instanceof InvalidAwareTypes) {\n            return this.config().value;\n        }\n\n        if (this._generatedShapes) {\n            return this._generatedShapes[value];\n        }\n\n        const shapeType = this.scale()(value);\n        if (shapeType === 'string') {\n            return getSymbol(shapeType);\n        }\n\n        return shapeType;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof ShapeAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            this.uniqueValues(domain);\n            this.domain(domain);\n            this.scale().domain(domain);\n\n            if (this.config().generator) {\n                this._generatedShapes = shapeGenerator(domain, this.config().generator);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.config().range,\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","/**\n *\n *\n * @param {*} domain\n * @param {*} generatorFn\n *\n */\nexport const shapeGenerator = (domain, generatorFn) => {\n    const generatedShapes = {};\n    domain.forEach((value) => {\n        generatedShapes[value] = generatorFn(value);\n    });\n    return generatedShapes;\n};\n","import * as ScaleType from './enums/scale-type';\n\nconst DATA_TYPES = {\n    DIMENSION: 'dimension',\n    CATEGORICAL: 'categorical',\n    MEASURE: 'measure',\n    TEMPORAL: 'temporal'\n};\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    [DATA_TYPES.DIMENSION]: ScaleType.BAND,\n    [DATA_TYPES.MEASURE]: ScaleType.LINEAR,\n    [DATA_TYPES.TEMPORAL]: ScaleType.TIME\n};\n\n","import { nestCollection, InvalidAwareTypes } from 'muze-utils';\n\n/**\n * Create multiple datasets from a single dataset by grouping the data using\n * a dimensional field.\n * @param {Array} schema Name and type of fields are stored in schema\n * @param {Array} data Data array\n * @param {Object} config Configuration object\n * @return {Array} Grouped data array\n */\nexport default (schema, data, config) => {\n    const groupBy = config.groupBy instanceof Array ? config.groupBy : [config.groupBy];\n    const groupByIndices = groupBy.map(fieldName => schema.findIndex(d => d.name === fieldName));\n\n    if (groupByIndices.find(d => d === -1) !== undefined) {\n        throw new Error(`Groupby field ${groupBy} not found in schema`);\n    }\n\n    const groupedData = nestCollection({\n        keys: groupByIndices,\n        data\n    });\n\n    groupedData.forEach((d) => {\n        const key = d.key;\n        if (InvalidAwareTypes.isInvalid(key)) {\n            d.key = InvalidAwareTypes.getInvalidType(key);\n        }\n    });\n    return groupedData;\n};\n","/**\n * @module Transform\n * This file exports a function that is used to implement\n * the identity transform\n */\n /* eslint no-unused-vars: 0 */\n /**\n  * This function accepts data and returns the data unchanged.\n  * @param {Object} schema The schema.\n  * @param {Array} data The data array.\n  * @param {Object} config The config object.\n  * @return {Array} The unchanged data.\n  */\n function identityTransform (schema, data, config) {\n     return data;\n }\n\n export default identityTransform;\n","/**\n * @module Transform\n * This file exports the transform factory.\n */\nimport * as TransformType from '../enums/transform-type';\nimport identity from '../identity-transform';\nimport group from '../group-transform';\nimport stack from '../stack-transform';\n\n/* istanbul ignore next */\nconst transformMap = {\n    [TransformType.IDENTITY]: identity,\n    [TransformType.GROUP]: group,\n    [TransformType.STACK]: stack\n};\n\n/**\n * This function is used to retirn a transform associated\n * with the given type.\n *\n * @param {string} type The type of the transform.\n * @return {Function} The transform function.\n */\nfunction transformFactory (type) {\n    const transform = transformMap[type];\n    if (typeof transform !== 'function') {\n        throw new Error('Invalid transform type supplied.');\n    }\n    return transform;\n}\n\nexport default transformFactory;\n","/**\n * @module Transform\n * This module exports constants that are used to reference transforms in\n * a consistent manner throughout the project.\n */\n/* eslint one-var: 0 */\n export const IDENTITY = 'identity';\n export const GROUP = 'group';\n export const STACK = 'stack';\n export const FRACTURE = 'fracture';\n","import { stack } from 'muze-utils';\n\nimport group from '../group-transform';\n/*\n    Normalize the data to a form which can be given to d3 stack for stacking the data\n    ['Product', 'Sales', 'Region'],\n    0 ['A', 2000, 'North'],\n    1 ['A', 3000, 'South'],\n    2 ['B', 3000, 'South'],\n    3 ['B', 2000, 'North'],\n    4 ['C', 3000, 'South'],\n    5 ['C', 2000, 'North']\n            |\n            |\n    ['Product', 'North', 'South'],\n    ['A', 2000, 3000],\n    ['B', 2000, 3000],\n    ['C', 2000, 3000]\n*/\n// eslint-disable-next-line require-jsdoc\nconst normalizeData = (data, schema, valueField, uniqueField, groupBy) => {\n    const groupedData = group(schema, data, {\n        groupBy: uniqueField\n    });\n    const uniqueFieldIndex = schema.findIndex(d => d.name === uniqueField);\n    const valueFieldIndex = schema.findIndex(d => d.name === valueField);\n    const seriesKeyIndex = schema.findIndex(d => d.name === groupBy);\n    const seriesKeys = data.map(d => d[seriesKeyIndex]).filter((item, pos, arr) => arr.indexOf(item) === pos).sort();\n    const fieldNames = schema.reduce((acc, obj, i) => {\n        acc[i] = obj.name;\n        return acc;\n    }, {});\n    const dataArr = groupedData.map((arr) => {\n        const tuples = {};\n        const rowObj = arr.values.reduce((acc, row) => {\n            acc = row.reduce((obj, value, i) => {\n                if (i === seriesKeyIndex) {\n                    obj[value] = row[valueFieldIndex];\n                    tuples[value] = row;\n                } else if (i !== valueFieldIndex) {\n                    obj[fieldNames[i]] = value;\n                }\n                return obj;\n            }, acc);\n            return acc;\n        }, {});\n        rowObj._tuple = tuples;\n            // Set missing values field to zero value\n        seriesKeys.forEach((seriesKey) => {\n            if (rowObj[seriesKey] === undefined) {\n                rowObj[seriesKey] = 0;\n                const newArr = new Array(arr.values[0].length);\n                newArr[uniqueFieldIndex] = arr.key;\n                newArr[seriesKeyIndex] = seriesKey;\n                rowObj._tuple[seriesKey] = newArr;\n            }\n        });\n        return rowObj;\n    });\n\n    return {\n        data: dataArr,\n        keys: seriesKeys\n    };\n};\n/**\n * Generate a stacked representation of data\n * @param {Array} schema schema Array\n * @param {Array} data data array\n * @param {Object} config Configuration object\n * @return {Array} stacked data\n */\nexport default (schema, data, config) => {\n    const uniqueField = config.uniqueField;\n    const valueField = config.value;\n    const groupBy = config.groupBy;\n    const sort = config.sort || 'descending';\n    const normalizedData = normalizeData(data, schema, valueField, uniqueField, groupBy);\n    const keys = normalizedData.keys;\n    const map = {};\n    const orderBy = config.orderBy;\n    const orderIndex = schema.findIndex(d => d.name === orderBy);\n    const groupByIndex = schema.findIndex(d => d.name === groupBy);\n    if (orderIndex !== -1) {\n        keys.forEach((key) => {\n            const name = data.find(d => d[groupByIndex] === key);\n            map[key] = name[orderIndex];\n        });\n        normalizedData.keys.sort((a, b) => map[a].localeCompare(map[b]));\n    }\n\n    const stackData = stack({\n        keys: normalizedData.keys,\n        offset: config.offset || 'diverging',\n        order: sort,\n        data: normalizedData.data\n    });\n    stackData.forEach((seriesData) => {\n        seriesData.forEach((dataObj) => {\n            dataObj.data = dataObj.data._tuple[seriesData.key];\n        });\n    });\n    return stackData;\n};\n\n","import {\n    FieldType,\n    getDomainFromData,\n    setStyles,\n    easeFns,\n    selectElement,\n    DimensionSubtype,\n    STATE_NAMESPACES,\n    retrieveNearestGroupByReducers,\n    getObjProp\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { transformFactory } from '@chartshq/transform';\nimport { IDENTITY, STACK, GROUP, COLOR, SHAPE, SIZE, ENCODING, AGG_FN_SUM } from '../enums/constants';\n\nconst BAND = ScaleType.BAND;\n\nexport const getLayerColor = ({ datum, index }, { colorEncoding, colorAxis, colorFieldIndex }) => {\n    let rawColor = '';\n    let color = '';\n    if (colorEncoding && colorEncoding.value instanceof Function) {\n        color = colorEncoding.value(datum, index);\n        rawColor = colorEncoding.value(datum, index);\n    } else {\n        rawColor = colorAxis.getRawColor(datum._data[colorFieldIndex]);\n        color = colorAxis.getHslString(rawColor);\n    }\n    return { color, rawColor };\n};\n\nconst transfromColor = (colorAxis, datum, styleType, intensity) => {\n    datum.meta.stateColor[styleType] = datum.meta.stateColor[styleType] || datum.meta.originalColor;\n    const fillColorInfo = colorAxis.transformColor(datum.meta.stateColor[styleType], intensity);\n    datum.meta.stateColor[styleType] = fillColorInfo.hsla;\n\n    return fillColorInfo;\n};\n\nexport const applyInteractionStyle = (context, selectionSet, interactionStyles, config) => {\n    const elements = context.getPlotElementsFromSet(selectionSet);\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const apply = config.apply;\n    const interactionType = config.interactionType;\n    interactionStyles.forEach((style) => {\n        const styleType = style.type;\n        elements.style(styleType, ((d) => {\n            const { colorTransform, stateColor, originalColor } = d.meta;\n            colorTransform[interactionType] = colorTransform[interactionType] || {};\n            if (apply && !colorTransform[interactionType][styleType]) {\n                // fade selections\n                colorTransform[interactionType][styleType] = style.intensity;\n                const color = transfromColor(colorAxis, d, styleType, style.intensity).color;\n                return color;\n            }\n            if (!apply && colorTransform[interactionType][styleType]) {\n                 // unfade selections\n                colorTransform[interactionType][styleType] = null;\n                return transfromColor(colorAxis, d, styleType, style.intensity.map(e => -e)).color;\n            }\n            const [h, s, l, a] = stateColor[styleType] ? stateColor[styleType] : originalColor;\n            return `hsla(${h * 360},${s * 100}%,${l * 100}%, ${a || 1})`;\n        }));\n    });\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const fadeUnfadeSelection = (context, selectionSet, hasFaded, interaction) => {\n    const interactionConfig = { interaction, apply: hasFaded };\n    applyInteractionStyle(context, selectionSet, 'fade', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const focusUnfocusSelection = (context, selectionSet, isFocussed, interaction) => {\n    const interactionConfig = { interaction, apply: isFocussed };\n    applyInteractionStyle(context, selectionSet, 'focus', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} axes\n *\n */\nexport const getAxesScales = (axes) => {\n    const [xAxis, yAxis] = [ENCODING.X, ENCODING.Y].map(e => axes[e]);\n    const [xScale, yScale] = [xAxis, yAxis].map(e => e && e.scale());\n    return {\n        xAxis,\n        yAxis,\n        xScale,\n        yScale\n    };\n};\n\n/**\n *\n *\n * @param {*} encoding\n * @param {*} fieldsConfig\n *\n */\nexport const getEncodingFieldInf = (encoding, fieldsConfig) => {\n    const [xField, yField, x0Field, y0Field, colorField, shapeField, sizeField] =\n        [ENCODING.X, ENCODING.Y, ENCODING.X0, ENCODING.Y0, COLOR, SHAPE, SIZE].map(e => encoding[e] &&\n            encoding[e].field);\n\n    const [xFieldType, yFieldType] = [xField, yField, x0Field, y0Field].map(e => fieldsConfig[e] &&\n        fieldsConfig[e].def.type);\n\n    const [xFieldSubType, yFieldSubType] = [xField, yField].map(e => fieldsConfig[e] && (fieldsConfig[e].def.subtype ||\n        fieldsConfig[e].def.type));\n\n    const [xFieldIndex, yFieldIndex, x0FieldIndex, y0FieldIndex] = [xField, yField, x0Field, y0Field]\n        .map(e => fieldsConfig[e] && fieldsConfig[e].index);\n\n    return {\n        xField,\n        yField,\n        colorField,\n        shapeField,\n        sizeField,\n        x0Field,\n        y0Field,\n        xFieldType,\n        yFieldType,\n        xFieldSubType,\n        yFieldSubType,\n        xFieldIndex,\n        yFieldIndex,\n        x0FieldIndex,\n        y0FieldIndex\n    };\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} config\n * @param {*} transformType\n *\n */\nexport const transformData = (dataModel, config, transformType, encodingFieldInf) => {\n    const data = dataModel.getData({ withUid: true });\n    const schema = data.schema;\n    const transform = config.transform;\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = encodingFieldInf;\n    const uniqueField = xFieldType === FieldType.MEASURE ? yField : xField;\n\n    return transformFactory(transformType)(schema, data.data, {\n        groupBy: transform.groupBy,\n        uniqueField,\n        sort: transform.sort || 'none',\n        offset: transform.offset,\n        orderBy: transform.orderBy,\n        value: yFieldType === FieldType.MEASURE ? yField : xField\n    }, data.uids);\n};\n\nexport const getIndividualClassName = (d, i, data, context) => {\n    const className = context.config().individualClassName;\n    let classNameStr = '';\n    if (className instanceof Function) {\n        classNameStr = className(d, i, data, context);\n    }\n    return classNameStr;\n};\n\n/*\n * This method resolves the x, y, x0 and y0 values from the transformed data.\n * It also checks the type of transformed data for example, if it is a stacked data\n * then it fetches the y and y0 values from the stacked data.\n * @param {Array.<Array>} transformedData transformed data\n * @param {Object} fieldsConfig field definitions\n * @param {string} transformType type of transformed data - stack, group or identity.\n * @return {Array.<Object>} Normalized data\n*/\nexport const getNormalizedData = (transformedData, fieldsConfig, encodingFieldInf, transformType) => {\n    const transformedDataArr = transformType === IDENTITY ? [transformedData] : transformedData;\n    const {\n        xFieldType,\n        xFieldIndex,\n        yFieldIndex,\n        x0FieldIndex,\n        y0FieldIndex\n    } = encodingFieldInf;\n    const fieldsLen = Object.keys(fieldsConfig).length;\n    /**\n     * Returns normalized data from transformed data. It recursively traverses through\n     * the transformed data if there it is nested.\n     */\n    return transformedDataArr.map((data) => {\n        const values = transformType === GROUP ? data.values : data;\n        return values.map((d) => {\n            let pointObj = {};\n            let tuple;\n            if (transformType === STACK) {\n                tuple = d.data || [];\n                let y;\n                let y0;\n                let x;\n                let x0;\n                if (d[1] >= d[0]) {\n                    y = x0 = d[1];\n                    x = y0 = d[0];\n                } else {\n                    y = x0 = d[0];\n                    x = y0 = d[1];\n                }\n\n                pointObj = xFieldType === FieldType.MEASURE ? {\n                    x,\n                    x0,\n                    y: tuple[yFieldIndex],\n                    y0: tuple[yFieldIndex]\n                } : {\n                    x: tuple[xFieldIndex],\n                    x0: tuple[xFieldIndex],\n                    y,\n                    y0\n                };\n                pointObj._data = tuple;\n                pointObj._id = tuple[fieldsLen];\n            } else {\n                pointObj = {\n                    x: d[xFieldIndex],\n                    y: d[yFieldIndex],\n                    x0: d[x0FieldIndex],\n                    y0: d[y0FieldIndex]\n                };\n                pointObj._data = d;\n                pointObj._id = d[fieldsLen];\n            }\n            return pointObj;\n        });\n    }).filter(d => d.length);\n};\n\nexport const calculateDomainFromData = (data, encodingFieldInf, transformType) => {\n    const {\n        xFieldSubType,\n        yFieldSubType,\n        xField,\n        yField,\n        x0Field,\n        y0Field\n    } = encodingFieldInf;\n    const domains = {};\n    const yEnc = ENCODING.Y;\n    const xEnc = ENCODING.X;\n    if (xField) {\n        domains.x = getDomainFromData(data, x0Field || transformType === STACK ? [xEnc, ENCODING.X0] : [xEnc, xEnc],\n            xFieldSubType);\n    }\n    if (yField) {\n        domains.y = getDomainFromData(data, y0Field || transformType === STACK ? [ENCODING.Y0, ENCODING.Y] :\n            [yEnc, yEnc], yFieldSubType);\n    }\n\n    return domains;\n};\n\nexport const attachDataToVoronoi = (voronoi, points) => {\n    voronoi.data([].concat(...points).filter(d => d._id !== undefined).map((d) => {\n        const point = d.update;\n        return {\n            x: point.x,\n            y: point.y,\n            data: d\n        };\n    }));\n};\n\n/**\n *\n *\n * @param {*} target\n * @param {*} styles\n * @param {*} remove\n */\nexport const updateStyle = (target, styles, remove) => {\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            target.style(key, remove ? null : styles[key]);\n        }\n    }\n};\n\n/**\n *\n *\n * @param {*} mount\n * @param {*} context\n */\nexport const animateGroup = (mount, context) => {\n    let groupTransition;\n    let update;\n    const { transition, groupAnimateStyle } = context;\n    const { duration, effect, disabled } = transition;\n    if (groupAnimateStyle) {\n        setStyles(mount.node(), groupAnimateStyle.enter);\n        update = groupAnimateStyle.update;\n        if (!disabled) {\n            groupTransition = mount.transition()\n                .ease(easeFns[effect])\n                .duration(duration)\n                .on('end', function () {\n                    updateStyle(selectElement(this), update, true);\n                });\n        } else {\n            groupTransition = mount;\n        }\n        updateStyle(groupTransition, update);\n    }\n};\n\nexport const positionPoints = (context, points) => {\n    const positioner = context.encodingTransform();\n    if (positioner) {\n        return positioner(points, context, { smartLabel: context._dependencies.smartLabel });\n    }\n    return points;\n};\n\n/**\n  * Gets the width of each group. It gets the width from axis if it is available for\n  * example when the scale is nominal else it calculates the width from the\n  * range of the axis and number of data points.\n  *\n  * @param {SimpleAxis} axis instance of axis\n  * @param {number} minDiff Minimum difference between data points\n  * @return {number} width of each bar\n  * @private\n*/\nexport const getGroupSpan = (axis, minDiff) => {\n    let groupSpan;\n    const width = axis.getUnitWidth();\n    const scale = axis.scale();\n    const range = scale.range();\n    const domain = scale.domain();\n    !width ? groupSpan = (Math.abs(range[1] - range[0]) / Math.abs(domain[1] - domain[0])) * minDiff :\n        (groupSpan = width);\n\n    return groupSpan;\n};\n\nexport const getPlotMeasurement = (context, dimensionalValues) => {\n    const fieldInfo = context.encodingFieldsInf();\n    const axes = context.axes();\n    const transformType = context.transformType();\n    const config = context.config();\n    const bandScale = context._bandScale;\n\n    return ['x', 'y'].map((type) => {\n        let span = 0;\n        let groupSpan = 0;\n        let padding = 0;\n        let offsetValues = [];\n        if (fieldInfo[`${type}FieldType`] === FieldType.DIMENSION) {\n            let actualGroupWidth;\n            const isTemporal = fieldInfo[`${type}FieldSubType`] === DimensionSubtype.TEMPORAL;\n            const timeDiff = isTemporal ? context.dataProps().timeDiffs[type] : 0;\n            const axis = axes[type];\n            const pad = config[`pad${type.toUpperCase()}`];\n            const innerPadding = config.innerPadding;\n            const keys = dimensionalValues;\n            const scale = axis.scale();\n            groupSpan = getGroupSpan(axis, timeDiff);\n            const isAxisBandScale = axis.constructor.type() === BAND;\n            const axisPadding = axis.config().padding;\n            // If it is a grouped bar then the width of each bar in a grouping is retrieved from\n            // a band scale. The band scale will have range equal to width of one group of bars and\n            // the domain is set to series keys.\n            if (transformType === 'group') {\n                const groupPadding = isAxisBandScale ? 0 : axisPadding * groupSpan / 2;\n                bandScale.range([groupPadding, groupSpan - groupPadding]).domain(keys).paddingInner(innerPadding);\n                span = bandScale.bandwidth();\n                actualGroupWidth = groupSpan - (isAxisBandScale ? 0 : axisPadding * groupSpan);\n                offsetValues = keys.map(key => bandScale(key) - (isAxisBandScale ? 0 : (groupSpan / 2)));\n            } else if (pad !== undefined) {\n                let offset;\n                if (isAxisBandScale) {\n                    const step = scale.step();\n                    offset = scale.padding() * step;\n                    span = scale.bandwidth() + offset;\n                } else {\n                    span = groupSpan;\n                }\n                offsetValues = keys.map(() => (isAxisBandScale ? -(offset / 2) : -(span / 2)));\n            } else {\n                padding = isAxisBandScale ? 0 : axisPadding * groupSpan;\n                span = groupSpan - padding;\n                actualGroupWidth = span;\n                offsetValues = keys.map(() => (isAxisBandScale ? 0 : -(span / 2)));\n            }\n\n            groupSpan = actualGroupWidth;\n            padding = isAxisBandScale ? axisPadding * axis.scale().step() : axisPadding * groupSpan;\n        }\n\n        return {\n            span,\n            offsetValues,\n            groupSpan,\n            padding\n        };\n    });\n};\n\nexport const initializeGlobalState = (context) => {\n    const store = context.store();\n    const globalState = context.constructor.getState()[0];\n    const namespace = context.metaInf().namespace;\n    for (const prop in globalState) {\n        store.append(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${prop}`, {\n            [namespace]: null\n        });\n    }\n};\n\nexport const resolveInvalidTransformType = (context) => {\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n    const fieldsConfig = context.data().getFieldsConfig();\n    const groupByFieldMeasure = fieldsConfig[groupByField] && fieldsConfig[groupByField].def.type === FieldType.MEASURE;\n    if (!xField || !yField || groupByFieldMeasure || !groupByField || xFieldType === FieldType.DIMENSION &&\n        yFieldType === FieldType.DIMENSION) {\n        return IDENTITY;\n    }\n    return null;\n};\n\nexport const getValidTransform = context => resolveInvalidTransformType(context) || context.config().transform.type;\n\nexport const getValidTransformForAggFn = (context) => {\n    const resolvedInvalidTransformType = resolveInvalidTransformType(context);\n    if (resolvedInvalidTransformType) {\n        return resolvedInvalidTransformType;\n    }\n\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n    const isCustomTransformTypeProvided = !!getObjProp(context._customConfig, 'transform', 'type');\n    let transformType = context.config().transform.type;\n\n    if (!isCustomTransformTypeProvided && groupByField && xFieldType !== yFieldType) {\n        const measureField = xFieldType === FieldType.MEASURE ? xField : yField;\n        const { [measureField]: aggFn } = retrieveNearestGroupByReducers(context.data(), measureField);\n        transformType = aggFn === AGG_FN_SUM ? STACK : GROUP;\n    }\n\n    return transformType;\n};\n\nexport const getMarkId = (source, schema) => source.filter((val, i) => schema[i] &&\n    schema[i].type === FieldType.DIMENSION).join();\n","import { CommonProps, STATE_NAMESPACES } from 'muze-utils';\nimport { getEncodingFieldInf } from '../helpers';\nimport * as PROPS from '../enums/props';\n\nconst renderLayer = (context) => {\n    const mount = context.mount();\n    if (mount) {\n        context.render(mount);\n        context.dependencies().throwback.commit(CommonProps.ON_LAYER_DRAW, true);\n    }\n};\n\nexport const listenerMap = (context, ns) => [\n    {\n        props: [`${ns.local}.${PROPS.DATA}`],\n        listener: ([, data]) => {\n            const config = context.config();\n            const encodingValue = config.encoding;\n            if (data && encodingValue) {\n                const fieldsConfig = data.getFieldsConfig();\n                const encodingFieldsInf = getEncodingFieldInf(encodingValue, fieldsConfig);\n                context.encodingFieldsInf(encodingFieldsInf);\n                context.resolveTransformType();\n                context._transformedData = context.getTransformedData(data, config,\n                    context.transformType(), encodingFieldsInf);\n                context._normalizedData = context.getNormalizedData(context._transformedData, fieldsConfig);\n                const domain = context.calculateDomainFromData(context._normalizedData, context.encodingFieldsInf(),\n                    context.data().getFieldsConfig());\n                context._domain = domain;\n                !context._updateLock && context.domain(domain);\n            }\n        },\n        type: 'registerImmediateListener'\n    },\n    {\n        props: [`${ns.local}.${PROPS.CONFIG}`],\n        listener: ([, config]) => {\n            const calculateDomain = config.calculateDomain;\n            const props = context.getRenderProps();\n            const store = context.store();\n            const namespaceInf = {\n                namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${context.metaInf().namespace}`,\n                key: 'renderListener'\n            };\n            store.unsubscribe(namespaceInf);\n            if (calculateDomain === false) {\n                props.push(`${ns.local}.${PROPS.DATA}`);\n            }\n            store.registerChangeListener(props,\n                () => {\n                    renderLayer(context);\n                }, false, namespaceInf);\n        },\n        type: 'registerImmediateListener'\n    }\n];\n\n","export const DATA = 'data';\nexport const CONFIG = 'config';\nexport const MEASUREMENT = 'measurement';\nexport const DOMAIN = 'domain';\nexport const MOUNT = 'mount';\n","import { mergeRecursive } from 'muze-utils';\nimport * as PROPS from '../enums/props';\n\nexport const defaultOptions = {\n    [PROPS.CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig, context) => {\n                context._customConfig = config;\n                const constructor = context.constructor;\n                const newConf = mergeRecursive({}, constructor.defaultConfig());\n                return constructor.defaultPolicy(newConf, config);\n            }\n        }\n    },\n    [PROPS.DATA]: {\n        value: null,\n        meta: {\n            preset: (data, context) => {\n                if (context._cacheEnabled) {\n                    context._cachedData.push(data);\n                } else {\n                    context._cachedData = [data];\n                }\n            }\n        }\n    }\n    // [PROPS.MOUNT]: {\n    //     value: null\n    // },\n    // [PROPS.AXES]: {\n    //     value: null\n    // },\n    // [PROPS.MEASUREMENT]: {\n    //     value: null\n    // }\n};\n","import {\n    getUniqueId,\n    mergeRecursive,\n    FieldType,\n    selectElement,\n    ReservedFields,\n    registerListeners,\n    transactor,\n    DataModel,\n    clone,\n    generateGetterSetters,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { SimpleLayer } from '../simple-layer';\nimport * as PROPS from '../enums/props';\nimport { props } from './props';\nimport {\n    transformData,\n    calculateDomainFromData,\n    getNormalizedData,\n    applyInteractionStyle,\n    initializeGlobalState,\n    getValidTransform\n} from '../helpers';\nimport { listenerMap } from './listener-map';\nimport { defaultOptions } from './default-options';\n\n/**\n * An abstract class which gives definition of common layer functionality like\n * - transforming data for various modes. Supported modes: identity, group and stack.\n * - calculating data domain\n * - linking dependent layers\n * - merging policy of configuration\n * - interaction sideffect helpers\n * - retrieving dom elements from data using id\n * - retrieving the physical dimensions of marks\n * - disposing layer\n *\n * Every layer has to extend base layer and give concrete definition.\n * This layer does not have any default visual. A new layer has to define the logic of `render` for rendering the\n * visuals\n *\n * @public\n * @class\n * @module BaseLayer\n */\nexport default class BaseLayer extends SimpleLayer {\n\n    /**\n     * Creates a layer using a configuration and data.\n     *\n     * @public\n     * @constructor\n     * @param {DataModel} data Instance of DataModel to be used. This DataModel instance serves as the data for a layer.\n     * @param {Object} axes Axes instances to be used for rendering the layer. Axes are used for mapping data from\n     *      value to px.\n     * @param {SimpleAxis} axes.x X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {SimpleAxis} axes.y X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {ColorAxis} axes.color Axis for coloring a layer using color interpolators\n     * @param {ShapeAxis} axes.shape Axis for providing a shape\n     * @param {SizeAxis} axes.size Axis for determining size of a mark using size interpolator\n     * @param {LayerConfig} config Configuration of the layer\n     * @param {Object} dependencies Dependencies of the layer\n     * @param {SmartLabel} dependencies.smartLabel Smartlabel singleton instance\n     */\n    constructor (data, axes, config, dependencies = {}) {\n        super();\n\n        generateGetterSetters(this, props);\n        this.data(data);\n        this.axes(axes);\n        this.config(config);\n        this.alias(this.constructor.formalName() + getUniqueId());\n        this.dependencies(dependencies);\n        this._points = [];\n        this._cachedData = [];\n        this._id = getUniqueId();\n        this._measurement = {};\n        this._animationDonePromises = [];\n        this._customConfig = null;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: {}\n            },\n            {\n                config: {},\n                data: {}\n            }\n        ];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            const metaInf = this.metaInf();\n            const localNs = `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${metaInf.namespace}`;\n            initializeGlobalState(this);\n            const store = this.store();\n            store.append(`${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}`, {\n                [metaInf.namespace]: null\n            });\n\n            transactor(this, defaultOptions, store.model, {\n                namespace: localNs\n            });\n            registerListeners(this, listenerMap, {\n                local: localNs,\n                global: STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE\n            }, {\n                unitRowIndex: metaInf.unitRowIndex,\n                unitColIndex: metaInf.unitColIndex\n            });\n            return this;\n        }\n        return this._store;\n    }\n\n    domain (...dom) {\n        const prop = `${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${this.metaInf().namespace}`;\n        if (dom.length) {\n            this.store().commit(prop, dom[0]);\n            return this;\n        }\n        return this.store().get(prop);\n    }\n\n    /**\n     * Creates a layer instance\n     * @return {BaseLayer} Instance of a layer\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Default configuration of the layer. This configuration gets merged to the user passed configuration using a\n     * plolicy. Base layer only returns part of configuraion, any layer overridding base layer should return its own\n     * configuration.\n     *\n     * @public\n     * @static\n     *\n     * @return {Object} Default configuration\n     */\n    static defaultConfig () {\n        return {\n            transform: {\n                type: 'identity'\n            }\n        };\n    }\n\n    /**\n     * Policy defines how user config gets merged to default config. The default policy here does a deep copy\n     * operation.\n     * Any policy which does more than deep copying should define the policy as a static member.\n     *\n     * @static\n     * @public\n     *\n     * @param {LayerConfig} conf Configuration with which the user config will be merged\n     * @param {LayerConfig} userConf Configuration given by the user\n     *\n     * @return {LayerConfig} Merged layer configuration\n     */\n    static defaultPolicy (conf, userConf) {\n        return mergeRecursive(conf, userConf);\n    }\n\n    /**\n     * Determines a name for a layer. This name of the layer is used in the input data to refer to this layer.\n     * ```\n     *  .layers([\n     *      mark: 'bar',\n     *      encoding: { ... }\n     *  ])\n     * ```\n     *\n     * @static\n     * @public\n     *\n     * @return {string} name of layer\n     */\n    static formalName () {\n        return 'base';\n    }\n\n    encodingFieldsInf (...fieldsInf) {\n        if (fieldsInf.length) {\n            this._encodingFieldsInf = fieldsInf[0];\n            return this;\n        }\n        return this._encodingFieldsInf;\n    }\n\n    encodingTransform (...encodingTransform) {\n        if (encodingTransform.length) {\n            this._encodingTransform = encodingTransform[0];\n            return this;\n        }\n        return this._encodingTransform;\n    }\n\n    /**\n     * Provides a alias for a layer. Like it's possible to have same layer (like bar) multiple times, but among multiple\n     * layers of same type if one layer has to be referred, alias is used. If no alias is given then `formalName` is set\n     * as the alias name.\n     *\n     *\n     * If used as setter\n     * @param  {string} alias Name of the alias\n     * @return {BaseLayer} Instance of current base layer\n     *\n     * If used as getter\n     * @return {string} Alias of the current layer\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            this._alias = params[0];\n            return this;\n        }\n        return this._alias || this.constructor.formalName();\n    }\n\n    dependencies (...params) {\n        if (params.length) {\n            this._dependencies = params[0];\n            return this;\n        }\n        return this._dependencies;\n    }\n\n    enableCaching () {\n        this._cacheEnabled = true;\n        return this;\n    }\n\n    clearCaching () {\n        this._cacheEnabled = false;\n        return this.data(this._cachedData[0]);\n    }\n\n    /**\n     * Serialize the schema. Merge config is used for serialization.\n     *\n     * @public\n     *\n     * @return {LayerConfig} Serialized schema\n     */\n    serialize () {\n        return this.config();\n    }\n\n    /**\n     * Returns the unique identifier of this layer. Id is auto generated during the creation proceess of a schema.\n     *\n     * @public\n     *\n     * @return {string} id of the layer\n     */\n    id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the transformed data based on given transform type.\n     * It first gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of DataModel\n     * @param {Object} config Configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     */\n    getTransformedData (dataModel, config, transformType, encodingFieldsInf) {\n        return transformData(dataModel, config, transformType, encodingFieldsInf);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a categorical field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @param {Object} fieldsConfig Configuration of fields\n     * @return {Array} Domain values array.\n     */\n    calculateDomainFromData (data) {\n        let domains = {};\n        const isEmpty = this.data().isEmpty();\n\n        if (!isEmpty) {\n            domains = calculateDomainFromData(data, this.encodingFieldsInf(), this.transformType());\n        }\n        return domains;\n    }\n\n    static shouldDrawAnchors () {\n        return false;\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getDataDomain (encodingType) {\n        const domains = this.store()\n            .get(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${this.metaInf().namespace}`);\n        return encodingType !== undefined ? domains[encodingType] || [] : domains;\n    }\n\n    /**\n     * Normalizes the transformed data and returns it.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getNormalizedData (transformedData, fieldsConfig) {\n        return getNormalizedData(transformedData, fieldsConfig, this.encodingFieldsInf(), this.transformType());\n    }\n\n    /**\n     * Gets the nearest point closest to the given x and y coordinate. If no nearest point is found, then it returns\n     * null.\n     *\n     * @public\n     *\n     * @param {number} x X Coordinate.\n     * @param {number} y Y Coordinate.\n     *\n     * @return {Object} Information of the nearest point.\n     * ```\n     *      {\n     *          // id property contains the field names and their corresponding values in a 2d array. This is the data\n     *          // associated with the nearest point.\n     *          id: // Example data: [['Origin'], ['USA']],\n     *          dimensions: // Physical dimensions of the point.\n     *          layerId: // Id of the layer instance.\n     *      }\n     * ```\n     */\n    getNearestPoint () {\n        return null;\n    }\n\n    applyInteractionStyle (interactionType, selectionSet, apply, styles) {\n        const interactionConfig = this.config().interaction || {};\n\n        let interactionStyles = interactionConfig[interactionType];\n        interactionStyles = styles || interactionStyles;\n        if (interactionStyles) {\n            applyInteractionStyle(this, selectionSet, interactionStyles, {\n                apply,\n                interactionType\n            });\n        }\n    }\n\n    disableUpdate () {\n        this._updateLock = true;\n        return this;\n    }\n\n    enableUpdate () {\n        this._updateLock = false;\n        return this;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransform(this);\n    }\n\n    transformType () {\n        return this._transformType;\n    }\n\n    /**\n     * Renders the layer\n     * @return {BaseLayer} Instance of the layer.\n     */\n    render () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BaseLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Disposes the entire layer.\n     *\n     * @return {BaseLayer} Instance of layer.\n     */\n    remove () {\n        this.store().unsubscribe({\n            namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${this.metaInf().namespace}`\n        });\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     * Stores point in an object with key as the categorical value or temporal value\n     *\n     * @param {string} key categorical value or temporal value\n     * @param {Object} data Information of the data point\n     * @return {BarLayer} Instance of bar layer\n     */\n    cachePoint (key, data) {\n        if (key === null) {\n            return this;\n        }\n        const pointMap = this._pointMap;\n        !pointMap[key] && (pointMap[key] = []);\n        pointMap[key].push(data);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} dataProps\n     *\n     * @memberof BaseLayer\n     */\n    dataProps (...dataProps) {\n        if (dataProps.length) {\n            this._dataProps = dataProps[0];\n            return this;\n        }\n        return this._dataProps;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} id\n     *\n     * @memberof BaseLayer\n     */\n    getIdentifiersFromData (data) {\n        const schema = this.data().getData().schema;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const identifiers = [[], []];\n        const {\n                xFieldType,\n                yFieldType,\n                xField,\n                yField\n            } = this.encodingFieldsInf();\n\n        const [xMeasure, yMeasure] = [xFieldType, yFieldType].map(type => type === FieldType.MEASURE);\n        schema.forEach((d, i) => {\n            const name = d.name;\n            if (fieldsConfig[name].def.type === FieldType.DIMENSION) {\n                identifiers[0].push(name);\n                identifiers[1].push(data[i]);\n            }\n        });\n\n        if (xMeasure && yMeasure) {\n            const xMeasureIndex = fieldsConfig[xField].index;\n            const yMeasureIndex = fieldsConfig[yField].index;\n            identifiers[0].push(...[xField, yField]);\n            identifiers[1].push(...[data[xMeasureIndex], data[yMeasureIndex]]);\n        }\n        return identifiers;\n    }\n\n    getPlotSpan () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    getPlotPadding () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    /**\n     * Returns the information of the marks corresponding to the supplied identifiers. Identifiers are a set of field\n     * names and their corresponding values in an array. It can also be an instance of datamodel.\n     *\n     * For example,\n     * ```\n     *  const identifiers = [\n     *      ['Origin', 'Cylinders'],\n     *      ['USA', '8']\n     *  ];\n     *  const points = barLayer.getPointsFromIdentifiers(identifiers);\n     * ```\n     * @public\n     * @param {Array|DataModel} identifiers Identifiers of the marks.\n     * @param {Object} config Optional configuration which describes how to get the information.\n     * @param {boolean} config.getAllAttrs If true, then returns all the information of the points, else returns only\n     * the positions of the points.\n     * @param {boolean} config.getBBox If true, then returns the bounding box of all the marks.\n     *\n     * @return {Array} Array of points contains\n     */\n    getPointsFromIdentifiers (identifiers, config = {}) {\n        const getAllAttrs = config.getAllAttrs;\n        const getBBox = config.getBBox;\n        if (!this.data()) {\n            return [];\n        }\n        let fieldNames;\n        let values;\n        if (identifiers instanceof DataModel) {\n            const dataObj = identifiers.getData();\n            fieldNames = dataObj.schema.map(d => d.name);\n            values = dataObj.data;\n        } else {\n            fieldNames = identifiers[0];\n            values = identifiers.slice(1, identifiers.length);\n        }\n\n        const points = this._points;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPoints = [].concat(...points).filter((point) => {\n            const { _data, _id } = point;\n\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === _data[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === _id) !== -1;\n                } return true;\n            });\n        });\n        return getAllAttrs ? filteredPoints : filteredPoints.map((d) => {\n            const obj = clone(d);\n            if (getBBox) {\n                const update = obj.update || obj;\n                if (obj.size !== undefined) {\n                    const sizeVal = Math.sqrt(obj.size / Math.PI) * 2;\n                    update.width = sizeVal;\n                    update.height = sizeVal;\n                    update.x -= sizeVal / 2;\n                    update.y -= sizeVal / 2;\n                } else {\n                    if (update.width === undefined) {\n                        update.width = 2;\n                    }\n                    if (update.height === undefined) {\n                        update.height = 2;\n                    }\n                }\n            }\n\n            return obj.update || obj;\n        }).sort((a, b) => a.y - b.y);\n    }\n\n    getTransformedDataFromIdentifiers (identifiers) {\n        const { data: identifierData, schema: identifierSchema } = identifiers.getData();\n        const normalizedData = this._normalizedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            yField,\n            xField,\n            yFieldType,\n            xFieldType\n        } = this.encodingFieldsInf();\n        let measureIndex;\n        let enc;\n        if (xFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[xField].index;\n            enc = 'x';\n        } else if (yFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[yField].index;\n            enc = 'y';\n        }\n\n        const transformedData = [];\n        normalizedData.forEach((dataArr) => {\n            dataArr.forEach((dataObj) => {\n                const tupleArr = dataObj._data;\n                const exist = identifierSchema.every((obj, i) =>\n                    identifierData.findIndex(d => tupleArr[fieldsConfig[obj.name].index] === d[i]) !== -1);\n                if (exist) {\n                    const transformedVal = dataObj[enc];\n                    const row = dataObj._data;\n                    const tuple = {};\n                    for (const key in fieldsConfig) {\n                        const index = fieldsConfig[key].index;\n                        tuple[key] = row[index];\n                        if (index === measureIndex) {\n                            tuple[key] = transformedVal;\n                        }\n                    }\n                    transformedData.push(tuple);\n                }\n            });\n        });\n\n        return [transformedData, this.data().getData().schema];\n    }\n\n    /**\n     * Returns the dom elements associated with the supplied set of row ids.\n     * Each element in the layer is mapped with a row of the datamodel. When given an array of row ids, it returns all\n     * the elements which is mapped with those row ids.\n     *\n     * @public\n     * @param {Array} set Array of row ids\n     *\n     * @return {Selection} D3 Selection of dom elements.\n     */\n    getPlotElementsFromSet (set) {\n        return selectElement(this.mount()).selectAll(this.elemType()).filter(data =>\n            (data ? set.indexOf(data._id) !== -1 : false));\n    }\n\n    /**\n     * Notifies when all animations/transitions of the layer are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n\n    getRenderProps () {\n        const metaInf = this.metaInf();\n        return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${metaInf.unitRowIndex}0`,\n            `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${metaInf.unitColIndex}0`];\n    }\n}\n","import {\n    selectElement,\n    makeElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\nimport { updateStyle } from '../../helpers';\n\nconst line = Symbols.line;\n\nconst filterFn = (d) => {\n    const { update } = d;\n    return update.y !== null && update.x !== null;\n};\n\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nexport const drawLine = (context) => {\n    let filteredPoints;\n    const { layer, container, points, interpolate, connectNullData, className, style, transition } = context;\n    const mount = selectElement(container).attr('class', className);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const linepath = line()\n                .curve(curveInterpolatorFn)\n                .x(d => d.update.x)\n                .y(d => d.update.y)\n                .defined(filterFn);\n\n    filteredPoints = points;\n    if (connectNullData) {\n        filteredPoints = points.filter(filterFn);\n    }\n\n    updateStyle(mount, style);\n    let element = makeElement(mount, 'path', [1]);\n    element.classed(points[0].className, true);\n    if (!transition.disabled) {\n        element = element.transition()\n        .duration(transition.duration)\n        .on('end', layer.registerAnimationDoneHook());\n    }\n    element.attr('d', linepath(filteredPoints))\n                    .style('fill-opacity', 0);\n    return element;\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-line',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: 'group'\n    },\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    nearestPointThreshold: 20,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n\n","import {\n    Voronoi,\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    FieldType,\n    getObjProp,\n    InvalidAwareTypes\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawLine } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    animateGroup,\n    getLayerColor,\n    positionPoints,\n    getIndividualClassName\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to render straight or smoothed line paths. The mark type of this layer is ```line```.\n *\n * @public\n *\n * @class\n * @module LineLayer\n * @extends BaseLayer\n */\nexport default class LineLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of LineLayer.\n     * @param {*} args\n     * @memberof LineLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof LineLayer\n     */\n    static formalName () {\n        return 'line';\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof LineLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Default configuration of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     *\n     * @memberof LineLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField && !transform.groupBy) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     * Returns the draw method for line\n     * @return {Function} Draw method of line layer\n     */\n    getDrawFn () {\n        return drawLine;\n    }\n\n    static shouldDrawAnchors () {\n        return true;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @param {number} seriesIndex index of series\n     * @return {Array} Array of points\n     */\n    translatePoints (data, encodingFieldsInf, axes) {\n        let points = [];\n        const xAxis = axes.x;\n        const yAxis = axes.y;\n        const colorAxis = axes.color;\n        const encoding = this.config().encoding;\n        const { xFieldType, yFieldType } = encodingFieldsInf;\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const colorFieldIndex = colorField && fieldsConfig[colorField].index;\n        const style = {};\n        const meta = {};\n\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y) + yAxis.getUnitWidth() / 2;\n            const { color, rawColor } = getLayerColor({ datum: d, index: i }, {\n                colorEncoding, colorAxis, colorFieldIndex });\n\n            style.stroke = color;\n            style['fill-opacity'] = 0;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n\n            const point = {\n                enter: {},\n                update: {\n                    x: d.x instanceof InvalidAwareTypes ? null : xPx,\n                    y: d.y instanceof InvalidAwareTypes ? null : yPx\n                },\n                style,\n                _data: d._data,\n                _id: d._id,\n                rowId: d._id,\n                source: d._data,\n                meta\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Renders the line plot\n     * @param {SVGElement} container svg element\n     * @return {LineLayer} instance of line layer\n     */\n    render (container) {\n        let points;\n        let seriesClassName;\n        let style;\n\n        const config = this.config();\n        const {\n            encoding,\n            interpolate,\n            className,\n            defClassName,\n            transition\n        } = config;\n        const normalizedData = this._normalizedData;\n        const transformedData = this._transformedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const keys = transformedData.map(d => d.key);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n        const colorField = encoding.color.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n        this._points = [];\n        this._pointMap = {};\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        makeElement(container, 'g', normalizedData, null, {\n            enter: (group) => {\n                animateGroup(group, {\n                    transition,\n                    groupAnimateStyle: {\n                        enter: {\n                            'stroke-opacity': 0,\n                            'fill-opacity': this.getPathStyle()['fill-opacity']\n                        },\n                        update: {\n                            'stroke-opacity': encoding.strokeOpacity.value\n                        }\n                    }\n                });\n            },\n            update: (group, dataArr, i) => {\n                points = this.translatePoints(dataArr, this.encodingFieldsInf(), axes, i);\n                this._points.push(points);\n                seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n\n                let color;\n                const colorValFn = encoding.color.value;\n                const colorVal = points.find(d => d._data[colorFieldIndex] !== null &&\n                        d._data[colorFieldIndex] !== undefined);\n\n                if (colorValFn) {\n                    color = colorValFn(dataArr, i, normalizedData);\n                } else {\n                    color = axes.color.getColor(colorVal && colorVal._data[colorFieldIndex]);\n                }\n\n                style = this.getPathStyle(color);\n                this.getDrawFn()({\n                    layer: this,\n                    container: group.node(),\n                    interpolate,\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: style || {},\n                    connectNullData: config.connectNullData\n                });\n            }\n        }, d => d[0]._data[colorFieldIndex] || d[0]._id);\n\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            stroke: color,\n            'fill-opacity': '0'\n        };\n    }\n\n    /**\n     * Gets the nearest point closest to the given position\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point information\n     */\n    getNearestPoint (x, y, config) {\n        let searchRadius = config.searchRadius;\n        const data = this.data();\n\n        if (!data || (data && data.isEmpty())) {\n            return null;\n        }\n\n        searchRadius = searchRadius !== undefined ? searchRadius : this.config().nearestPointThreshold;\n        const point = this._voronoi.find(x, y, searchRadius);\n        const dimensions = getObjProp(point, 'data', 'data', 'update');\n\n        if (point) {\n            const { _data, _id } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(_data, _id);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: 2,\n                    height: 2\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import {\n    easeFns,\n    selectElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\n\nconst area = Symbols.area;\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nconst /* istanbul ignore next */ drawArea = (params) => {\n    let filteredPoints;\n    const { layer, container, points, style, transition, className, connectNullData, interpolate } = params;\n\n    const { effect: easeEffect, duration } = transition;\n    const mount = selectElement(container);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const selection = mount.selectAll('path').data([params.points]);\n    const [enterAreaPath, updateAreaPath] = ['enter', 'update'].map(e => area().curve(curveInterpolatorFn)\n                    .x(d => d[e].x)\n                    .y1(d => d[e].y)\n                    .y0(d => d[e].y0)\n                    .defined(d => d[e].y !== null\n            ));\n\n    filteredPoints = points;\n    mount.attr('class', className);\n    if (connectNullData) {\n        filteredPoints = points.filter(d => d.update.y !== null);\n    }\n    const selectionEnter = selection.enter().append('path').attr('d', enterAreaPath(filteredPoints));\n    selection.merge(selectionEnter).transition().ease(easeFns[easeEffect])\n                    .duration(duration)\n                    .on('end', layer.registerAnimationDoneHook())\n                    .attr('d', updateAreaPath(filteredPoints))\n                    .each(function (d) {\n                        const element = selectElement(this);\n\n                        element.classed(d[0].className, true);\n                        Object.keys(style).forEach(key => element.style(key, style[key]));\n                    });\n};\n\nexport default drawArea;\n","import { FieldType, InvalidAwareTypes } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { LineLayer } from '../line';\nimport drawArea from './renderer';\nimport './styles.scss';\nimport { STACK, ENCODING } from '../../enums/constants';\nimport {\n    getAxesScales,\n    positionPoints,\n    getLayerColor,\n    getIndividualClassName,\n    getValidTransformForAggFn\n} from '../../helpers';\n\n/**\n * Area layer renders a closed path. The mark type of this layer is ```area```. This layer can be used\n * to create stacked or multi-series areas and vertical range area plots by using the encoding properties.\n *\n * To create this layer using layer configuration from canvas,\n * ```\n *      canvas.layers([{\n *          mark: 'area',\n *          transform: {\n *              type: 'stack' // Produces a stacked area.\n *          }\n *      }]);\n * ```\n *\n * @public\n *\n * @class\n * @module AreaLayer\n * @extends LineLayer\n */\nexport default class AreaLayer extends LineLayer {\n    /** oation of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof AreaLayer\n     */\n    static formalName () {\n        return 'area';\n    }\n\n    /**\n     * Calculates the domain from data. It calls its parent class's method which is line layer\n     * to get the domain and overwrites the domain according to its need.\n     * @return {Array} Domain values\n     */\n    calculateDomainFromData (data, encodingFieldsInf, fieldsConfig) {\n        const domains = super.calculateDomainFromData(data, fieldsConfig);\n        [ENCODING.X, ENCODING.Y].forEach((type) => {\n            const { [`${type}FieldType`]: fieldType } = encodingFieldsInf;\n            if (fieldType === FieldType.MEASURE && domains[type] !== undefined) {\n                domains[type][0] = Math.min(domains[type][0], 0);\n            }\n        });\n        return domains;\n    }\n\n    /**\n     * Returns the drawing method of this layer\n     * @return {Function} Draw method\n     */\n    getDrawFn () {\n        return drawArea;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @return {Array} Array of points\n     */\n    translatePoints (data, encodingFieldsInf, axes) {\n        let points = [];\n        const transformType = this.transformType();\n        const colorAxis = axes.color;\n        const config = this.config();\n        const encoding = config.encoding;\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const colorFieldIndex = colorField && fieldsConfig[colorField].index;\n        const { xField, yField, y0Field } = encodingFieldsInf;\n        const {\n            xAxis,\n            yAxis\n       } = getAxesScales(axes);\n        const classNameFn = config.individualClassName;\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y);\n            const y0Px = (y0Field || transformType === STACK) ? yAxis.getScaleValue(d.y0) : yAxis.getScaleValue(0);\n            const { color, rawColor } = getLayerColor({ datum: d, index: i }, {\n                colorEncoding, colorAxis, colorFieldIndex });\n            const style = {};\n            const meta = {};\n            style.fill = color;\n            // style['fill-opacity'] = 0;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n            const invalidY = d.y instanceof InvalidAwareTypes;\n            const invalidY0 = d.y0 instanceof InvalidAwareTypes;\n            const point = {\n                enter: {\n                    x: xPx,\n                    y: invalidY ? null : yAxis.getScaleValue(0),\n                    y0: invalidY0 ? null : yAxis.getScaleValue(0)\n                },\n                update: {\n                    x: xPx,\n                    y: invalidY ? null : yPx,\n                    y0: invalidY0 ? null : y0Px\n                },\n                _id: d._id,\n                _data: d._data,\n                source: d._data,\n                rowId: d._id,\n                className: classNameFn ? classNameFn(d, i, data, this) : '',\n                style,\n                meta\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            fill: color\n        };\n    }\n}\n\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-arc',\n    padding: { top: 1, bottom: 1, left: 1, right: 1 },\n    className: '',\n    minOuterRadius: 10,\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    height: 100,\n    width: 100,\n    sort: '',\n    cornerRadius: 0,\n    padAngle: 0,\n    padRadius: 0,\n    startAngle: 0,\n    endAngle: 360,\n    colors: ['#F44336', 'blue', 'green', 'yellow', 'orange', 'purple'],\n    transform: {\n        type: 'identity'\n    },\n    encoding: {\n        'stroke-width': {\n            value: '2px'\n        },\n        'stroke-linejoin': {\n            value: 'round'\n        },\n        angle: {\n            value: '1'\n        },\n        radius: {\n            value: '1'\n        },\n        opacity: {\n            value: '1'\n        },\n        color: {\n            value: '1'\n        },\n        shape: {\n            value: '1'\n        },\n        size: {\n            value: '1'\n        }\n    },\n    innerRadiusFixer: 10,\n    transition: {\n        effect: 'cubic',\n        duration: 500\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-arc-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-arc-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-arc-selected`\n        }\n    }\n};\n\n","import {\n    makeElement,\n    selectElement,\n    getQualifiedClassName,\n    isSimpleObject,\n    getDomainFromData,\n    Symbols,\n    FieldType,\n    ReservedFields,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { BaseLayer } from '../../base-layer';\nimport { ASCENDING, OUTER_RADIUS_VALUE } from '../../enums/constants';\nimport { getIndividualClassName } from '../../helpers';\nimport { getRangeValue, getRadiusRange, tweenPie, tweenExitPie, getFieldIndices, getPreviousPoint } from './arc-helper';\nimport './styles.scss';\n\nconst pie = Symbols.pie;\nconst arc = Symbols.arc;\n\n/**\n * Arc Layer creates a plot with polar coordinates.\n *\n * @public\n *\n * @class\n * @module ArcLayer\n * @extends BaseLayer\n */\nexport default class ArcLayer extends BaseLayer {\n\n    constructor (data, axes, config, dependencies) {\n        super(data, axes, config, dependencies);\n        this._prevPieData = {};\n    }\n\n    /**\n     * returns the default configuration of the layer\n     *\n     * @static\n     * @return {Object} Default configuration for arc layer\n     * @memberof ArcLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ArcLayer\n     */\n    static formalName () {\n        return 'arc';\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof ArcLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Transforms data in the appropriate data structure to be consumed by the layer for rendering\n     *\n     * @param {Object} data data model associated with the layer\n     * @param {Object} config configuration of the layer that contains encoding and other parameters\n     * @return {Object} Transformed pie data\n     * @memberof ArcLayer\n     */\n    getTransformedData (dataModel, config) {\n        let pieData = [];\n        const pieIndex = {};\n        const {\n            startAngle,\n            endAngle,\n            encoding,\n            sort,\n            minOuterRadius\n        } = config;\n        const prevData = this._transformedData || [];\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            angleIndex,\n            sizeIndex,\n            radiusIndex,\n            colorIndex\n        } = getFieldIndices(encoding, fieldsConfig);\n        const dataVal = dataModel.getData();\n        const data = dataVal.data;\n        const uids = dataVal.uids;\n\n        this._prevPieData = {};\n\n        prevData.forEach((e, index) => {\n            this._prevPieData[e.uid] = [e, index];\n            pieIndex[e.index] = e;\n        });\n        // Creating pie data using angle field provided. If the angle field is a dimension,\n        // all the angles will be equal(360/number of dimensions)\n\n        pieData = pie()\n            .startAngle((startAngle / 180) * Math.PI)\n            .endAngle(Math.PI * endAngle / 180)\n            .value(d => d[angleIndex] || 1)\n            .sortValues(null);\n\n        sort.length && radiusIndex && pieData.sort((a, b) => {\n            if (sort === ASCENDING) {\n                return a[radiusIndex] - b[radiusIndex];\n            } return b[radiusIndex] - a[radiusIndex];\n        });\n        const sizeVal = data.reduce((acc, d) => acc + (d[sizeIndex] || 0), 1);\n\n        // Adding the radius field values to each data point in pie data\n        pieData = pieData(data).map((d, i) => {\n            d.outerRadiusValue = data[i][radiusIndex] || minOuterRadius;\n            d.innerRadius = config.innerRadius;\n            d.colorVal = data[i][colorIndex];\n            d.angleVal = data[i][angleIndex];\n            d.sizeVal = sizeVal;\n            d.uid = uids[i];\n            d.rowId = d.uid;\n            d.source = data[i];\n            d._previousInfo = this._prevPieData[d.uid] ? this._prevPieData[d.uid][0] :\n                getPreviousPoint(pieIndex, d.index, config);\n            return d;\n        });\n        return pieData;\n    }\n\n    /**\n     * Returns normalized data after transformation (it is the same in the case of pie layer)\n     *\n     * @param {Object} data transformed data\n     * @return {Object} normalized data\n     * @memberof ArcLayer\n     */\n    getNormalizedData (data) {\n        return data;\n    }\n\n    /**\n     *\n     *\n     * @param {Object} data\n     * @return {}\n     * @memberof ArcLayer\n     */\n    calculateDomainFromData (data) {\n        const domainKey = OUTER_RADIUS_VALUE;\n        return {\n            radius: getDomainFromData([data], [domainKey, domainKey])\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {Object} x\n     * @param {Object} y\n     * @return {}\n     * @memberof ArcLayer\n     */\n    getNearestPoint (x, y, config = {}) {\n        const dataPoint = selectElement(config.event.target).data()[0];\n        if (isSimpleObject(dataPoint)) {\n            const { data, uid } = dataPoint.datum;\n            return {\n                id: this.getIdentifiersFromData(data, uid),\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n\n    /**\n     *\n     *\n     * @param {*} set\n     *\n     * @memberof ArcLayer\n     */\n    getPlotElementsFromSet (set) {\n        return selectElement(this.mount()).selectAll(this.elemType()).filter(d => set.indexOf(d.datum.uid) !== -1);\n    }\n\n    /**\n     *\n     *\n     * @param {Object} container\n     * @return {}\n     * @memberof ArcLayer\n     */\n    render (container) {\n        const {\n            height,\n            width\n        } = this.measurement();\n        const {\n            classPrefix,\n            defClassName,\n            minOuterRadius,\n            innerRadius,\n            outerRadius,\n            cornerRadius,\n            padAngle,\n            padRadius,\n            padding,\n            transition,\n            innerRadiusFixer\n       } = this.config();\n        const sizeAxis = this.axes().size;\n        const transformedData = this._transformedData;\n        const chartHeight = height - padding.top - padding.bottom;\n        const chartWidth = width - padding.left - padding.right;\n        const qualClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        // Sets range for radius\n        const range = getRadiusRange(chartWidth, chartHeight, {\n            minOuterRadius,\n            innerRadius,\n            outerRadius,\n            innerRadiusFixer\n        });\n        const colorAxis = this.axes().color;\n        const defaultRadius = outerRadius || Math.min(chartHeight, chartWidth) / 2;\n        const radiusDomain = this.domain().radius;\n        const rangeValueGetter = d => getRangeValue(d, range, radiusDomain, defaultRadius, sizeAxis);\n        // This returns a function that generates the arc path based on the datum provided\n        const path = arc()\n                // .outerRadius(d => rangeValueGetter(d))\n                .innerRadius(innerRadius ? Math.min(chartHeight / 2, chartWidth / 2, innerRadius) : 0)\n                .cornerRadius(cornerRadius)\n                .padAngle(padAngle)\n                .padRadius(padRadius);\n        this._chartWidth = chartWidth;\n        this._chartHeight = chartHeight;\n        // Creating the group that holds all the arcs\n        const g = makeElement(selectElement(container), 'g', [1], `${qualClassName[0]}-group`)\n                .classed(`${qualClassName[1]}-group`, true)\n                .attr('transform', `translate(${chartWidth / 2},${chartHeight / 2})`);\n        const tween = (elem) => {\n            makeElement(elem, 'path', (d, i) => [{\n                datum: d,\n                index: i,\n                arcFn: path,\n                meta: {\n                    originalColor: colorAxis.getRawColor(d.colorVal),\n                    stateColor: {},\n                    colorTransform: {}\n                }\n            }], `${qualClassName[0]}-path`)\n                            .style('fill', d => colorAxis.getColor(d.datum.colorVal))\n                            .transition()\n                            .duration(transition.duration)\n                            .on('end', this.registerAnimationDoneHook())\n                            .attrTween('d', (...params) => tweenPie(path, rangeValueGetter, params))\n                            .attr('class', (d, i) => {\n                                const individualClass = getIndividualClassName(d, i, transformedData, this);\n                                return `${qualClassName[0]}-path ${qualClassName[1]}-path-${d.index}\n                                    ${individualClass}`;\n                            });\n        };\n        const consecutiveExits = [];\n        let exitCounter = 0;\n        const tweenExit = (elem, d) => {\n            let exitArr = consecutiveExits[exitCounter];\n            const oldExitCounter = exitCounter;\n            if (!exitArr) {\n                exitArr = [{ elem, datum: d }];\n            } else if (exitArr[exitArr.length - 1].datum.index === d.index - 1) {\n                exitArr.push({ elem, datum: d });\n            } else {\n                exitCounter++;\n            }\n            consecutiveExits[oldExitCounter] = exitArr;\n        };\n        // Creating groups for all the arcs present individually\n        makeElement(g, 'g', transformedData, `${qualClassName[0]}`,\n            {\n                update: tween,\n                exit: tweenExit\n            })\n                        .attr('class', (d, i) => `${qualClassName[0]} ${qualClassName[1]}-${i}`);\n        tweenExitPie(consecutiveExits, transition, rangeValueGetter, path);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     *\n     * @memberof BaseLayer\n     */\n    getPointsFromIdentifiers (identifiers) {\n        if (!this.data()) {\n            return [];\n        }\n        const fieldNames = identifiers[0];\n        const values = identifiers.slice(1, identifiers.length);\n        const pieSlices = selectElement(this.mount()).selectAll('path').data();\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPies = pieSlices.filter((tData) => {\n            const data = tData.datum.data;\n            const uid = tData.datum.uid;\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === data[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === uid) !== -1;\n                } return true;\n            });\n        });\n\n        const pieSliceInf = filteredPies[0];\n        if (pieSliceInf) {\n            const centroid = pieSliceInf.arcFn.centroid(pieSliceInf.datum);\n            return [{\n                x: centroid[0] + this._chartWidth / 2,\n                y: centroid[1] + this._chartHeight / 2,\n                width: 2,\n                height: 2\n            }];\n        }\n        return [];\n    }\n\n    getRenderProps () {\n        return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.radius`];\n    }\n}\n","import { getObjProp, interpolator, FieldType, selectElement } from 'muze-utils';\nimport { ANGLE, RADIUS, SIZE, COLOR } from '../../enums/constants';\n\n/**\n * Returns the range value from a value inside the domain\n *\n * @param {Object} domainValue Value whose range has to be returned\n * @return {number} range value\n * @memberof ArcLayer\n */\nexport const getRangeValue = (datum, range, domain, defaultRadius, sizeAxis) => {\n    let domainMultiplier = 1;\n    const {\n        outerRadiusValue,\n        sizeVal\n    } = datum;\n    const sizeAxisDomain = sizeAxis.domain();\n    const sizeMultiplier = sizeAxis.getSize(sizeVal) / (sizeAxisDomain ? sizeAxis.range()[1] : sizeAxis.config().value);\n\n    domainMultiplier *= (range[1] - range[0]) / (domain[1] - domain[0]);\n    const rangeVal = (range[0] + (outerRadiusValue - domain[0]) * domainMultiplier);\n    return (rangeVal || defaultRadius) * sizeMultiplier;\n};\n\n/**\n *\n *\n * @memberof ArcLayer\n */\nexport const getRadiusRange = (width, height, config) => {\n    const {\n        minOuterRadius,\n        innerRadius,\n        outerRadius,\n        innerRadiusFixer\n    } = config;\n\n    return [Math.max((innerRadius + innerRadiusFixer || 0), minOuterRadius), outerRadius || Math.min(height,\n        width) / 2];\n};\nexport const getPreviousPoint = (prevData, currIndex, config) => {\n    const prevArc = prevData[currIndex - 1];\n    const nextArc = prevData[currIndex];\n\n    if (prevArc && nextArc) {\n        return {\n            startAngle: prevArc.endAngle,\n            endAngle: nextArc.startAngle\n        };\n    } else if (!nextArc) {\n        return {\n            startAngle: config.endAngle * Math.PI * 2 / 360,\n            endAngle: config.endAngle * Math.PI * 2 / 360\n        };\n    }\n    return {\n        startAngle: config.startAngle * Math.PI * 2 / 360,\n        endAngle: config.startAngle * Math.PI * 2 / 360\n    };\n};\n\n/**\n *\n *\n * @param {*} path\n * @param {*} b\n *\n * @memberof ArcLayer\n */\nexport const tweenPie = (path, rangeValueGetter, b) => {\n    const { datum } = b[0];\n    const outerRadius = rangeValueGetter(datum);\n    datum.outerRadius = outerRadius;\n    datum._previousInfo.outerRadius = datum._previousInfo.outerRadius || outerRadius;\n    return function (t) {\n        return path(interpolator()(datum._previousInfo, datum)(t));\n    };\n};\n\n/**\n *\n *\n * @param {*} path\n * @param {*} b\n *\n * @memberof ArcLayer\n */\nexport const tweenExitPie = (consecutiveExits, transition, rangeValueGetter, path) => {\n    if (consecutiveExits.length > 0) {\n        consecutiveExits.forEach((consecutiveExitArr) => {\n            const startAngle = consecutiveExitArr[0].datum.startAngle;\n            const endAngle = consecutiveExitArr[consecutiveExitArr.length - 1].datum.endAngle;\n            const mid = (Math.PI * 2 * startAngle) / ((Math.PI * 2) + startAngle - endAngle);\n\n            consecutiveExitArr.forEach((e) => {\n                const { elem, datum } = e;\n\n                elem.each(function () {\n                    const gElem = selectElement(this);\n                    gElem.selectAll('path')\n                                    .transition()\n                                    .duration(transition.duration)\n                                    .attrTween('d', () => function (t) {\n                                        const outerRadius = rangeValueGetter(datum);\n                                        datum.outerRadius = outerRadius;\n                                        return path(interpolator()(datum, {\n                                            startAngle: mid,\n                                            endAngle: mid,\n                                            outerRadius\n                                        })(t));\n                                    })\n                                    .remove();\n                    gElem.remove();\n                });\n            });\n        });\n    }\n};\n\nexport const getFieldIndices = (encoding, fieldsConfig) => {\n    const [angleField, radiusField, colorField, sizeField] = [ANGLE, RADIUS, COLOR, SIZE]\n            .map(e => encoding[e].field);\n    const [angleIndex, sizeIndex, radiusIndex] = [angleField, sizeField, radiusField]\n        .map((e) => {\n            const conf = fieldsConfig[e];\n            if (conf && conf.def.type === FieldType.MEASURE) {\n                return conf.index;\n            }\n            return null;\n        });\n    const colorIndex = getObjProp(fieldsConfig, colorField, 'index');\n    return {\n        angleIndex,\n        sizeIndex,\n        radiusIndex,\n        colorIndex\n    };\n};\n","import {\n    setAttrs,\n    setStyles,\n    selectElement,\n    makeElement,\n    getSmartComputedStyle\n} from 'muze-utils';\n\n/**\n * Draws svg text in the specified container.\n * @param {SVGElement} container Container where labels will be appended.\n * @param {Array.<Object>} data Data of the elements.\n * @return {Selection} d3 selection of the elements.\n */\nconst drawText = (container, data, config, smartLabel) => {\n    const selection = selectElement(container).selectAll('g').data(data);\n\n    const selectionMerge = selection.enter().append('g')\n        .each(function (dataObj) {\n            setAttrs(this, dataObj.enter);\n        })\n        .merge(selection);\n    const style = getSmartComputedStyle(selectElement(container), config.className);\n    const fontSize = parseInt(style.fontSize, 10);\n\n    smartLabel.setStyle(style);\n    selectionMerge.each(function (dataObj) {\n        const element = selectElement(this);\n        const { update, text, color, textanchor, style: textStyle } = dataObj;\n        const background = dataObj.background;\n        let backgroundVal;\n        if (backgroundVal = background.value) {\n            const backgroundPadding = background.padding;\n            let diff;\n            const { width, height } = smartLabel.getOriSize(dataObj.text);\n            const backgroundEl = makeElement(element, 'rect', [1]);\n\n            if (textanchor === 'end') {\n                diff = width;\n            } else if (textanchor === 'start') {\n                diff = 0;\n            } else {\n                diff = width / 2;\n            }\n\n            setAttrs(backgroundEl.node(), {\n                x: update.x - diff - backgroundPadding / 2,\n                y: update.y - fontSize - backgroundPadding / 2,\n                width: width + backgroundPadding,\n                height: height + backgroundPadding\n            });\n            background && setStyles(backgroundEl, {\n                background: backgroundVal\n            });\n        }\n        const textEl = makeElement(element, 'text', d => [d]).text(text);\n        const textNode = textEl.node();\n        textStyle && setStyles(textNode, textStyle);\n        color && setStyles(textNode, {\n            fill: color\n        });\n        dataObj.className && textEl.classed(dataObj.className, true);\n        setAttrs(textNode, update);\n        textEl.attr('text-anchor', textanchor);\n    });\n    selection.exit().remove();\n    return selection;\n};\n\nexport default drawText;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-text',\n    classPrefix: CLASSPREFIX,\n    className: '',\n    transform: {\n        type: 'identity'\n    },\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: {},\n        text: {\n            value: '',\n            formatter: (val, i, data, context) => {\n                const valueParser = context.valueParser();\n                return valueParser(val);\n            },\n            background: {\n                padding: 10\n            }\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-text-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-text-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-text-selected`\n        }\n    }\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    setStyles,\n    createElements\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawText from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getLayerColor, positionPoints, getIndividualClassName } from '../../helpers';\nimport { TEXT_ANCHOR_MIDDLE, ENCODING } from '../../enums/constants';\n\nimport './styles.scss';\n\n/**\n * This layer is used to create labels for each data point. It has an encoding property ```text```\n * which determines from which field's data the value of the label will be taken. The text encoding\n * property is necessary for the layer to render the text.The mark type of this layer is ```text```.\n *\n * @public\n *\n * @class\n * @module TextLayer\n * @extends BaseLayer\n */\nexport default class TextLayer extends BaseLayer {\n    /**\n     * Returns the default configuration of the text layer\n     * @return {Object} Default configuration of the text layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'text';\n    }\n\n    elemType () {\n        return 'text';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes) {\n        let points = [];\n        const colorAxis = axes.color;\n        const textEncoding = encoding.text;\n        const { field: textField, value, formatter: textFormatter } = textEncoding;\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding && colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const colorFieldIndex = fieldsConfig[colorField] ? fieldsConfig[colorField].index : -1;\n        const textFieldIndex = textField ? fieldsConfig[textField] && fieldsConfig[textField].index : -1;\n        const xEnc = ENCODING.X;\n        const yEnc = ENCODING.Y;\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d._data;\n            const textValue = textField ? row[textFieldIndex] : value;\n\n            const [xPx, yPx] = [xEnc, yEnc].map(type => (axes[type] ? axes[type].getScaleValue(d[type]) +\n                    axes[type].getUnitWidth() / 2 : 0));\n\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            const point = {\n                enter: {},\n                update: {\n                    x: xPx,\n                    y: yPx\n                },\n                text: textFormatter(textValue, i, data, this),\n                color,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, this) : null,\n                    padding: backgroundPadding\n                },\n                meta: {\n                    stateColor: {},\n                    originalColor: rawColor,\n                    colorTransform: {}\n                },\n                style: {},\n                _data: row,\n                _id: d._id,\n                source: d._data,\n                rowId: d._id\n            };\n\n            point.className = getIndividualClassName(d, i, data, this);\n            points.push(point);\n        }\n\n        points = positionPoints(this, points);\n        points = points.filter((d) => {\n            const update = d.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {textLayer} Instance of text layer\n     */\n    render (container) {\n        let points;\n        const config = this.config();\n        const encoding = config.encoding;\n        const normalizedData = this._normalizedData;\n        const className = config.className;\n        const qualifiedClassName = getQualifiedClassName(config.defClassName, this.id(), config.classPrefix);\n        const axes = this.axes();\n        const containerSelection = selectElement(container);\n\n        containerSelection.classed(`${qualifiedClassName.join(' ')} ${className}`, true);\n        createElements({\n            data: normalizedData,\n            append: 'g',\n            selector: 'g',\n            container,\n            each: (dataArr, group, i) => {\n                const node = group.node();\n                points = this.translatePoints(dataArr, encoding, axes, i);\n                setStyles(node, {\n                    'text-anchor': TEXT_ANCHOR_MIDDLE\n                });\n                drawText(node, points, {\n                    className: qualifiedClassName[0]\n                }, this._dependencies.smartLabel);\n            }\n        });\n        return this;\n    }\n}\n","/* global Element, document  */\nimport {\n    makeElement,\n    selectElement,\n    easeFns,\n    objectIterator,\n    getSymbol\n} from 'muze-utils';\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, groupElement) {\n    const { shape, size, update } = d;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            createShape(d, groupElement);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        if (newShape.nodeName === 'path' || newShape.nodeName === 'image') {\n            shapeElement.attr('transform', `scale(${size / 100})`);\n        } else {\n            shapeElement.attr('height', size);\n            shapeElement.attr('width', size);\n        }\n        shapeElement.attr('x', -size / 2);\n        shapeElement.attr('y', -size / 2);\n        makeElement(groupElement, () => newShape, [1]);\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = getSymbol(shape).size(size)(update);\n        }\n        makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    } else {\n        d.shape = 'circle';\n        createShape(d, groupElement);\n    }\n};\n\n/**\n * Draws symbols using d3 symbol api\n * @param {Object} params Contains the svg container, points and other symbol related attributes.\n */\n/* istanbul ignore next */ const drawSymbols = (params) => {\n    const { layer, container, points, transition, className } = params;\n    const { duration, effect, disabled } = transition;\n    const mount = selectElement(container);\n\n    mount.attr('class', className);\n    return makeElement(mount, 'g', points, null, {\n        enter: (group, d) => {\n            const { enter } = d;\n            group.attr('transform', `translate(${enter.x},${enter.y})`);\n        },\n        update: (group, d) => {\n            createShape(d, group);\n            const { update, style } = d;\n            objectIterator(style, key => group.style(key, style[key]));\n            group.attr('class', className);\n            group.classed(d.className, true);\n            if (!disabled) {\n                group = group.transition()\n                    .duration(transition.duration)\n                    .on('end', layer.registerAnimationDoneHook());\n            }\n            group.attr('transform', `translate(${update.x},${update.y})`);\n        },\n        exit: (exitGroup) => {\n            if (!disabled) {\n                exitGroup.transition().ease(easeFns[effect])\n                .duration(duration)\n                .on('end', () => exitGroup.remove())\n                .style('fill-opacity', 0)\n                .style('stroke-opacity', 0);\n            } else {\n                exitGroup.remove();\n            }\n        }\n    }, params.keyFn);\n};\n\nexport default drawSymbols;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-point',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    defColorStyle: 'stroke',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -20, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }\n        ]\n    },\n    innerPadding: 0.1,\n    nearestPointThreshold: 10,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        size: {\n            value: 30\n        },\n        color: { },\n        shape: {\n            value: 'circle'\n        },\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    shapes: ['circle', 'cross', 'diamond', 'square', 'star', 'wye', 'triangle'],\n    sizes: [20, 30, 40, 50, 60, 70]\n};\n","import {\n    Voronoi,\n    selectElement,\n    getQualifiedClassName,\n    makeElement,\n    FieldType,\n    Scales\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawSymbols from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    getLayerColor,\n    positionPoints,\n    getPlotMeasurement,\n    getIndividualClassName,\n    getMarkId\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to create various symbols for each data point. This is commonly used in\n * scatterplot visualizations. The mark type of this layer is ```point```.\n *\n * @public\n *\n * @class\n * @module PointLayer\n * @extends BaseLayer\n */\nexport default class PointLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of PointLayer.\n     * @param {*} args\n     * @memberof PointLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n        this._bandScale = Scales.band();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PointLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Returns the default configuration of the point layer\n     * @return {Object} Default configuration of the point layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof PointLayer\n     */\n    static formalName () {\n        return 'point';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof PointLayer\n     */\n    static drawFn () {\n        return drawSymbols;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes, config = {}) {\n        let points = [];\n        const {\n            size: sizeEncoding,\n            shape: shapeEncoding,\n            color: colorEncoding,\n            x,\n            y\n        } = encoding;\n        const sizeField = sizeEncoding.field;\n        const sizeValue = sizeEncoding.value;\n        const shapeField = shapeEncoding.field;\n        const xField = x.field;\n        const yField = y.field;\n        const { size: sizeAxis, shape: shapeAxis } = axes;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorField = colorEncoding && colorEncoding.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n        const measurement = this.measurement();\n        const shapeFieldIndex = fieldsConfig[shapeField] && fieldsConfig[shapeField].index;\n        const sizeFieldIndex = fieldsConfig[sizeField] && fieldsConfig[sizeField].index;\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d._data;\n            const size = sizeValue instanceof Function ? sizeValue(d, i) : sizeAxis.getSize(row[sizeFieldIndex]);\n            const shape = shapeAxis.getShape(row[shapeFieldIndex]);\n\n            let [xPx, yPx] = [ENCODING.X, ENCODING.Y].map((type) => {\n                const value = d[type] === null ? undefined : d[type];\n                const measure = type === ENCODING.X ? measurement.width : measurement.height;\n                return !encoding[type].field ? measure / 2 : axes[type].getScaleValue(value);\n            });\n\n            xPx += offsetX;\n            yPx += offsetY;\n\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            const style = {\n                fill: color,\n                stroke: color\n            };\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {\n                        x: xPx,\n                        y: yPx\n                    },\n                    update: {\n                        x: xPx,\n                        y: yPx\n                    },\n                    shape,\n                    size: Math.abs(size),\n                    meta: {\n                        stateColor: {},\n                        originalColor: rawColor,\n                        colorTransform: {}\n                    },\n                    style,\n                    _data: row,\n                    _id: d._id,\n                    source: d._data,\n                    rowId: d._id\n                };\n                point.className = getIndividualClassName(d, i, data, this);\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container.\n     *\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {BarLayer} Instance of bar layer\n     */\n    render (container) {\n        let maxSize = 0;\n        let seriesClassName;\n        const config = this.config();\n        const keys = this._transformedData.map(d => d.key);\n        const { transition, className, defClassName, classPrefix } = config;\n        const normalizedData = this._normalizedData;\n        const containerSelection = selectElement(container);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        this._points = [];\n        this._pointMap = {};\n\n        containerSelection.classed(qualifiedClassName.join(' '), true).classed(className, true);\n\n        this._points = this.generateDataPoints(normalizedData, keys);\n        const schema = this.data().getSchema();\n        makeElement(container, 'g', this._points, null, {\n            update: (group, points) => {\n                maxSize = Math.max(maxSize, ...points.map(d => d.size));\n                seriesClassName = `${qualifiedClassName[0]}`;\n                this.constructor.drawFn()({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    keyFn: v => getMarkId(v.source, schema)\n                });\n            }\n        }, data => data[0]._id);\n        this._maxSize = Math.sqrt(maxSize / Math.PI) * 2;\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    generateDataPoints (normalizedData, keys) {\n        const encoding = this.config().encoding;\n        const axes = this.axes();\n        const [widthMetrics, heightMetrics] = getPlotMeasurement(this, keys);\n        const offsetXValues = widthMetrics.offsetValues || [];\n        const offsetYValues = heightMetrics.offsetValues || [];\n        return normalizedData.map((dataArr, i) => {\n            const measurementConf = this.getMeasurementConfig(offsetXValues[i], offsetYValues[i], widthMetrics.span,\n                heightMetrics.span);\n            return this.translatePoints(dataArr, encoding, axes, measurementConf);\n        }).filter(d => d.length);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0) + widthSpan / 2,\n                y: (offsetY || 0) + heightSpan / 2\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n\n    /**\n     * Gets the nearest point from a position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Point details\n     */\n    getNearestPoint (x, y) {\n        const distanceLimit = Math.max(this._maxSize, this.config().nearestPointThreshold);\n\n        if (!this.data()) {\n            return null;\n        }\n\n        const point = this._voronoi.find(x, y, distanceLimit);\n        const dimensions = point && point.data.data.update;\n        const radius = point ? Math.sqrt(point.data.data.size / Math.PI) : 0;\n\n        if (point) {\n            const { _data, _id } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(_data, _id);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: radius,\n                    height: radius\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import { makeElement, easeFns } from 'muze-utils';\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} datum\n * @param {*} index\n * @param {*} context\n */\nconst transitionBars = (layer, elem, datum, index, context) => {\n    const { transition } = context;\n    const { duration, disabled, effect } = transition;\n    const selection = elem;\n\n    const selTransition = disabled ? selection :\n        selection.transition()\n        .duration(duration)\n        .ease(easeFns[effect])\n        .on('end', layer.registerAnimationDoneHook());\n    const update = datum.update || datum;\n    const updateStyle = datum.style || {};\n    datum.className && selection.classed(datum.className, true);\n    Object.entries(update).forEach(attr => (!isNaN(attr[1]) && selTransition.attr(attr[0], attr[1])));\n    Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n};\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} d\n */\nconst barEnterFn = (elem, d) => {\n    const selection = elem;\n    const enter = d.enter || {};\n    Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n};\n\n/**\n * Draws rectangles by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Bar Selection\n */\n/* istanbul ignore next */ export const drawRects = (params) => {\n    const { layer, points, container, keyFn } = params;\n    const updateFns = {\n        enter (elem, d) { barEnterFn(elem, d); },\n        update (elem, d, i) { transitionBars(layer, elem, d, i, params); }\n    };\n    return makeElement(container, 'rect', points, null, updateFns, keyFn);\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-bar',\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transform: {\n        type: 'stack'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    innerPadding: 0.1,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        x0: {},\n        y0: {}\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-bar-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-bar-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-bar-selected`\n        }\n    }\n};\n\n","import { MeasureSubtype, DimensionSubtype } from 'muze-utils';\nimport { STACK } from '../../enums/constants';\nimport { getLayerColor, positionPoints, getIndividualClassName } from '../../helpers';\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fieldInfo\n * @param {*} config\n * @param {*} data\n *\n */\nconst resolveDimByField = (type, axesInfo, config, data) => {\n    const spaceType = type === 'x' ? 'width' : 'height';\n    const [fieldType, axis] = [config[`${type}FieldType`], axesInfo[`${type}Axis`]];\n    const {\n        transformType,\n        sizeEncoding,\n        sizeConfig,\n        measurement\n    } = config;\n\n    const sizeValue = sizeEncoding.value;\n    let enter = 0;\n    let pos;\n    let space = 0;\n    let enterSpace = 0;\n    if (fieldType !== undefined) {\n        if (config[`${type}0Field`]) {\n            const minVal = data[type];\n            const maxVal = data[`${type}0`];\n            let min;\n            let max;\n            if (minVal === null || maxVal === null) {\n                return {\n                    enterSpace: undefined,\n                    enter: undefined,\n                    pos: undefined,\n                    space: undefined\n                };\n            } else if (fieldType === MeasureSubtype.CONTINUOUS || fieldType === DimensionSubtype.TEMPORAL) {\n                min = Math.min(minVal, maxVal);\n                max = Math.max(minVal, maxVal);\n            } else {\n                min = minVal;\n                max = maxVal;\n            }\n            const scales = type === 'x' ? [min, max] : [max, min];\n            pos = axis.getScaleValue(scales[0]) + axis.getUnitWidth() / 2;\n            space = Math.abs(axis.getScaleValue(scales[1]) - pos) + axis.getUnitWidth() / 2;\n\n            enter = pos;\n            enterSpace = 0;\n        } else if (fieldType === DimensionSubtype.CATEGORICAL || fieldType === DimensionSubtype.TEMPORAL) {\n            pos = axis.getScaleValue(data[type]) +\n                (sizeConfig[type === 'x' ? 'barWidthOffset' : 'barHeightOffset'] || 0);\n\n            space = sizeConfig[type === 'x' ? 'barWidth' : 'barHeight'];\n            if (sizeValue !== undefined) {\n                const diffPx = sizeValue * space;\n                space -= diffPx;\n                pos += diffPx / 2;\n            }\n            enter = pos;\n            enterSpace = space;\n        } else {\n            const zeroPos = axis.getScaleValue(0);\n            const axisType = axis.getScaleValue(data[type]);\n            const axisType0 = axis.getScaleValue(data[`${type}0`]);\n\n            enterSpace = 0;\n            if (type === 'x') {\n                pos = data[type] < 0 || transformType === STACK ? axisType : zeroPos;\n                space = Math.abs(pos - (transformType === STACK ? axisType0 : (data[type] >= 0 ? axisType : zeroPos)));\n            } else {\n                pos = transformType === STACK || data[type] >= 0 ? axisType : zeroPos;\n                space = Math.abs(pos - (transformType === STACK ? axisType0 : (data[type] >= 0 ? zeroPos : axisType)));\n            }\n            enter = zeroPos;\n        }\n    } else {\n        pos = 0;\n        space = measurement[spaceType];\n    }\n\n    return {\n        enterSpace,\n        enter,\n        pos,\n        space\n    };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} config\n * @param {*} axes\n *\n */\nconst resolveDimensions = (data, config, axes) => {\n    const axesInfo = {\n        xAxis: axes.x,\n        yAxis: axes.y\n    };\n    const {\n        enterSpace: enterWidth,\n        enter: enterX,\n        pos: xPos,\n        space: width\n    } = resolveDimByField('x', axesInfo, config, data);\n\n    const {\n        enterSpace: enterHeight,\n        enter: enterY,\n        pos: yPos,\n        space: height\n    } = resolveDimByField('y', axesInfo, config, data);\n    return {\n        enter: {\n            x: enterX,\n            y: enterY,\n            width: enterWidth,\n            height: enterHeight\n        },\n        update: {\n            x: xPos,\n            y: yPos,\n            width,\n            height\n        }\n    };\n};\n\n/**\n * Generates an array of objects containing x, y, width and height of the bars from the data\n * @param  {Array.<Array>} data Data Array\n * @param  {Object} encoding  Config\n * @param  {Object} axes     Axes object\n * @param {Object} conf config object for point generation\n * @return {Array.<Object>}  Array of points\n */\nexport const getTranslatedPoints = (context, data, sizeConfig) => {\n    let points = [];\n    const encoding = context.config().encoding;\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const fieldsConfig = context.data().getFieldsConfig();\n    const colorEncoding = encoding.color;\n    const colorField = colorEncoding.field;\n    const sizeEncoding = encoding.size || {};\n    const {\n            x0Field,\n            y0Field,\n            xFieldSubType,\n            yFieldSubType\n        } = context.encodingFieldsInf();\n    const measurement = context.measurement();\n    const isXDim = xFieldSubType === DimensionSubtype.CATEGORICAL || xFieldSubType === DimensionSubtype.TEMPORAL;\n    const isYDim = yFieldSubType === DimensionSubtype.CATEGORICAL || yFieldSubType === DimensionSubtype.TEMPORAL;\n    const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n    const transformType = context.transformType();\n    const colorFieldIndex = colorField && fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n    for (let i = 0, len = data.length; i < len; i++) {\n        const d = data[i];\n        const style = {};\n        const meta = {};\n        const dimensions = resolveDimensions(d, {\n            xFieldType: xFieldSubType,\n            yFieldType: yFieldSubType,\n            x0Field,\n            y0Field,\n            transformType,\n            measurement,\n            sizeConfig,\n            sizeEncoding\n        }, axes);\n\n        const { color, rawColor } = getLayerColor({ datum: d, index: i },\n            { colorEncoding, colorAxis, colorFieldIndex });\n\n        style.fill = color;\n        meta.stateColor = {};\n        meta.originalColor = rawColor;\n        meta.colorTransform = {};\n\n        const update = dimensions.update;\n\n        if (!isNaN(update.x) && !isNaN(update.y) && d._id !== undefined) {\n            let point = null;\n            point = {\n                enter: dimensions.enter,\n                update,\n                style,\n                _data: d._data,\n                _id: d._id,\n                source: d._data,\n                rowId: d._id,\n                meta\n            };\n            point.className = getIndividualClassName(d, i, data, context);\n            points.push(point);\n            // Store each point in a hashmap with key as the dimensional or temporal field value\n            context.cachePoint(d[key], point);\n        }\n    }\n\n    points = positionPoints(context, points);\n    return points;\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    createElements,\n    clipElement,\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    Scales,\n    getNearestValue\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawRects } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getPlotMeasurement, getValidTransformForAggFn } from '../../helpers';\nimport './styles.scss';\nimport { getTranslatedPoints } from './bar-helper';\n\nconst MEASURE = FieldType.MEASURE;\nconst scaleBand = Scales.band;\n\n/**\n * Bar layer creates rectangle marks. The mark type of this layer is ```bar```. This layer can be used\n * to create stacked or grouped bars, range bars, heatmap plots and also reference bands by using\n * the encoding properties.\n *\n * @public\n *\n * @class\n * @module BarLayer\n * @extends BaseLayer\n */\nexport default class BarLayer extends BaseLayer {\n    /**\n     * Creates an instance of bar layer\n     */\n    constructor (...params) {\n        super(...params);\n        this._bandScale = scaleBand();\n        this._plotPadding = {\n            x: 0,\n            y: 0\n        };\n        this._plotSpan = {\n            x: 0,\n            y: 0\n        };\n        this._pointMap = {};\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BarLayer\n     */\n    elemType () {\n        return 'rect';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BarLayer\n     */\n    static formalName () {\n        return 'bar';\n    }\n\n    /**\n     * Returns the default configuration of the bar layer\n     * @return {Object} Default configuration of the bar layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     *\n     * @memberof BarLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const colorField = encoding.color.field;\n        const transform = config.transform;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} fieldsConfig\n     *\n     * @memberof BarLayer\n     */\n    calculateDomainFromData (data, encodingFieldInf, fieldsConfig) {\n        const domain = super.calculateDomainFromData(data, encodingFieldInf, fieldsConfig);\n        ['x', 'y'].forEach((d) => {\n            if (encodingFieldInf[`${d}FieldType`] === MEASURE && domain[d]) {\n                encodingFieldInf[`${d}0Field}`] ? domain[d] = domain[d].sort((a, b) => a - b) :\n                    (domain[d][0] = Math.min(domain[d][0], 0));\n            }\n        });\n        return domain;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the bars from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @param {Object} conf config object for point generation\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, sizeConfig) {\n        return getTranslatedPoints(this, data, sizeConfig);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGGroup} container SVGGroup where plot will be rendered.\n     * @return {BarLayer} Instance of bar layer.\n     */\n    render (container) {\n        const config = this.config();\n        const transition = config.transition;\n        const normalizedDataArr = this._normalizedData;\n        const transformedData = this._transformedData;\n        const keys = transformedData.map(d => d.key);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const height = axes.y && axes.y.scale().range()[0];\n        const width = axes.x && axes.x.scale().range()[1];\n        const defClassName = config.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const className = config.className;\n        const containerSelection = selectElement(container);\n        const dimensions = Object.values(fieldsConfig).filter(e => e.def.type === FieldType.DIMENSION)\n            .map(e => e.index);\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        clipElement(container, {\n            x: 0,\n            y: 0,\n            width,\n            height\n        }, `id-${this.id()}`);\n\n        this._points = this.generateDataPoints(normalizedDataArr, keys);\n\n        createElements({\n            data: this._points,\n            container,\n            selector: 'g',\n            append: 'g',\n            each: (points, group, i) => {\n                const seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n                group.style('display', 'block');\n                drawRects({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: {},\n                    keyFn: d => dimensions.map(key => d._data[key]).join('-')\n                });\n            }\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} normalizedData\n     * @param {*} keys\n     *\n     * @memberof BarLayer\n     */\n    generateDataPoints (normalizedData, keys) {\n        const [barWidthMetrics, barHeightMetrics] = getPlotMeasurement(this, keys);\n        const barWidthOffsets = barWidthMetrics.offsetValues || [];\n        const barHeightOffsets = barHeightMetrics.offsetValues || [];\n        this._plotSpan = {\n            x: barWidthMetrics.groupSpan || 0,\n            y: barHeightMetrics.groupSpan || 0\n        };\n        this._plotPadding = {\n            x: barWidthMetrics.padding || 0,\n            y: barHeightMetrics.padding || 0\n        };\n\n        this._pointMap = {};\n        return normalizedData.map((data, i) => this.translatePoints(data,\n            {\n                barWidth: barWidthMetrics.span,\n                barWidthOffset: barWidthOffsets[i] || 0,\n                barHeight: barHeightMetrics.span,\n                barHeightOffset: barHeightOffsets[i] || 0\n            }));\n    }\n\n    getPlotPadding () {\n        return this._plotPadding;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Gets the nearest point of the position passed.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point.\n     */\n    getNearestPoint (x, y) {\n        if (!this.data()) {\n            return null;\n        }\n        let axis;\n        let value;\n        let points;\n        let uniqueFieldType;\n        let uniqueFieldIndex;\n        let filterData;\n        let identifiers;\n        let pointFound = null;\n        const dataModel = this.data();\n        const dataObj = dataModel.getData();\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const axes = this.axes();\n        const data = dataObj.data;\n        const pointMap = this._pointMap;\n        const {\n                xField,\n                yField,\n                xFieldSubType,\n                yFieldSubType\n            } = this.encodingFieldsInf();\n\n        if (xFieldSubType === MeasureSubtype.CONTINUOUS) {\n            axis = axes.y;\n            value = axis.invert(y);\n            uniqueFieldIndex = fieldsConfig[yField].index;\n            uniqueFieldType = yFieldSubType;\n        } else {\n            axis = axes.x;\n            value = axis.invert(x);\n            uniqueFieldIndex = fieldsConfig[xField].index;\n            uniqueFieldType = xFieldSubType;\n        }\n\n        if (uniqueFieldType === DimensionSubtype.CATEGORICAL) {\n            points = pointMap[value];\n        }\n\n        if (uniqueFieldType === DimensionSubtype.TEMPORAL) {\n            filterData = [...new Set(data.map(d => d[uniqueFieldIndex]))];\n            value = getNearestValue(filterData, value);\n            points = pointMap[value];\n        }\n        const len = points && points.length;\n        points && points.sort((p1, p2) => p1.update.y - p2.update.y);\n        for (let i = 0; i < len; i++) {\n            const point = points[i];\n            const update = point.update;\n            if (x >= update.x && x <= (update.width + update.x) && y >= update.y && y <= (update.height + update.y)) {\n                pointFound = point;\n                break;\n            }\n            pointFound = null;\n        }\n\n        const values = pointFound && pointFound._data;\n        if (values) {\n            identifiers = this.getIdentifiersFromData(values, pointFound._id);\n        }\n        return pointFound ? {\n            dimensions: [pointFound.update],\n            id: identifiers,\n            layerId: this.id()\n        } : pointFound;\n    }\n\n    getPlotSpan () {\n        return this._plotSpan;\n    }\n}\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-tick',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }]\n    },\n    innerPadding: 0.1,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: { },\n        x: {},\n        y: {},\n        x0: {},\n        y0: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-tick-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-tick-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-tick-selected`\n        }\n    }\n};\n","import { selectElement } from 'muze-utils';\n\n/**\n * Draws ticks by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Ticks Selection\n */\nexport default /* istanbul ignore next */ (params) => {\n    const { points, container, keyFn, className } = params;\n    const mount = selectElement(container);\n    const ticks = mount.selectAll('path').data(points, keyFn);\n    const ticksEnter = ticks.enter().append('path');\n\n    mount.attr('class', className || '');\n    ticksEnter.each(function (d) {\n        const selection = selectElement(this);\n        const enter = d.enter || {};\n        Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n    });\n\n    ticks.exit().remove();\n    return ticks.merge(ticksEnter)\n                    .each(function (d) {\n                        const selection = selectElement(this);\n                        const update = d.update;\n                        const updateStyle = d.style || {};\n                        const x0 = update.x0 !== undefined ? update.x0 : update.x;\n                        const y0 = update.y0 !== undefined ? update.y0 : update.y;\n                        const path = `M ${update.x} ${update.y} L ${x0} ${y0}`;\n                        d.className && selection.classed(d.className, true);\n                        selection.attr('d', path);\n                        Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n                    });\n};\n\n","import { FieldType } from 'muze-utils';\nimport { PointLayer } from '../point';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport drawTicks from './renderer';\nimport './styles.scss';\nimport { getAxesScales, getLayerColor, positionPoints, getIndividualClassName } from '../../helpers';\n\n/**\n * This layer is used to create small lines. The orientation of the line is determined by the positional\n * encoding properties x0 and y0. The mark type of the layer is ```tick```.\n *\n * @public\n *\n * @class\n * @module TickLayer\n * @extends BaseLayer\n */\nexport default class TickLayer extends PointLayer {\n\n    /**\n     *\n     *\n     * @staticg\n     *\n     * @memberof TickLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static formalName () {\n        return 'tick';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static drawFn () {\n        return drawTicks;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TickLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes, config = {}) {\n        let points = [];\n        const {\n                xAxis,\n                yAxis\n            } = getAxesScales(axes);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n                xField,\n                yField,\n                x0Field,\n                y0Field,\n                xFieldType,\n                yFieldType\n            } = this.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding && colorEncoding.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n        const measurement = this.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n        const { x: xSpan, y: ySpan } = config.span;\n        for (let i = 0, len = data.length; i < len; i++) {\n            let xPx;\n            let x0Px;\n            let y0Px;\n            let yPx;\n            const d = data[i];\n            const row = d._data;\n            if (xField) {\n                xPx = xAxis.getScaleValue(d.x) + offsetX;\n                x0Px = xPx + xSpan;\n            }\n\n            if (yField) {\n                yPx = yAxis.getScaleValue(d.y) + offsetY;\n                y0Px = yPx !== null ? yPx + ySpan : null;\n            }\n\n            if (!xField) {\n                xPx = 0;\n                x0Px = measurement.width;\n                if (!isNaN(yPx)) {\n                    yPx += ySpan / 2;\n                    y0Px = yPx;\n                }\n            }\n\n            if (!yField) {\n                yPx = 0;\n                y0Px = measurement.height;\n                x0Px = xPx += xSpan / 2;\n            }\n\n            if (x0Field) {\n                x0Px = xAxis.getScaleValue(d.x0) + xSpan;\n                yPx += ySpan / 2;\n                y0Px -= ySpan / 2;\n            }\n\n            if (y0Field) {\n                y0Px = yAxis.getScaleValue(d.y0) + ySpan;\n                xPx += xSpan / 2;\n                x0Px -= xSpan / 2;\n            }\n            const style = {};\n            const meta = {};\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            style.stroke = color;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {},\n                    update: {\n                        x: xPx,\n                        y: yPx,\n                        x0: x0Px,\n                        y0: y0Px\n                    },\n                    style,\n                    _data: row,\n                    _id: d._id,\n                    source: row,\n                    rowId: d._id,\n                    meta\n                };\n                point.className = getIndividualClassName(d, i, data, this);\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0),\n                y: (offsetY || 0)\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n}\n","export const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { isSimpleObject, mergeRecursive, getObjProp } from 'muze-utils';\n\nconst parseLayerDefinition = (sink, definition, layerDef, layerType) => {\n    for (const key in definition) {\n        if (Object.hasOwnProperty.call(definition, key)) {\n            let strs;\n            let propValue;\n            const def = definition[key];\n            if (isSimpleObject(def)) {\n                sink[key] = {};\n                parseLayerDefinition(sink[key], def, layerDef, layerType);\n            } else if (typeof def === 'string' && (strs = def.split('.')) && strs[0] === layerType) {\n                propValue = getObjProp(layerDef, ...strs.slice(1, strs.length));\n                if (propValue !== undefined) {\n                    sink[key] = propValue;\n                }\n            } else {\n                sink[key] = def;\n            }\n        }\n    }\n};\n\nconst sanitizeEncoding = (encoding) => {\n    // Create object for each encoding value if encoding value is a string\n    for (const key in encoding) {\n        if (typeof encoding[key] === 'string') {\n            encoding[key] = {\n                field: encoding[key]\n            };\n        }\n    }\n};\n\n/**\n * Layer Factory creates layers based on the layer type. All types of layers needs to register in\n * the layer factory. For getting a layer instance, getLayer method needs to invoked with the\n * layerType and other arguments. It also registers the definition of composite layers.\n *\n * @public\n *\n * @module LayerFactory\n */\nconst layerFactory = (() => {\n    const compositeLayers = {};\n    const factoryObj = {\n        setLayerRegistry: (reg) => {\n            factoryObj._layerRegistry = reg;\n        },\n        getSerializedConf: (mark, layerDef) => {\n            let serializedDefs;\n            const defs = compositeLayers[mark];\n            const newConf = mergeRecursive({}, layerDef);\n\n                // If it is a composite layer then resolve all the definitions of each unit layer\n            if (defs) {\n                serializedDefs = defs.map((unitLayerDef) => {\n                    const sDef = {};\n                    parseLayerDefinition(sDef, unitLayerDef, newConf, mark);\n                    sanitizeEncoding(sDef.encoding);\n                    return sDef;\n                });\n            } else {\n                const encoding = newConf.encoding;\n                // Create object for each encoding value if encoding value is a string\n                sanitizeEncoding(encoding);\n                serializedDefs = newConf;\n            }\n\n            return serializedDefs;\n        },\n        getLayerInstance: (layerDef, ...params) => {\n            const layerRegistry = factoryObj._layerRegistry;\n            layerDef = !(layerDef instanceof Array) ? [layerDef] : layerDef;\n            const instances = layerDef.map((layerObj) => {\n                const layerConstructor = layerRegistry[layerObj.mark];\n                return layerConstructor.create(...params);\n            });\n            return instances.length === 1 ? instances[0] : instances;\n        },\n        getLayerClass: mark => factoryObj._layerRegistry[mark],\n        /**\n         * Registers a new composite layer definition in the layer factory.\n         *\n         * @public\n         *\n         * @param {string} layerType Mark type of the new composite layer.\n         * @param {Array} layerDefs Layer definitions of the composite layer.\n         */\n        composeLayers: (layerType, layerDefs) => {\n            compositeLayers[layerType] = layerDefs;\n        },\n        sanitizeLayerConfig: (layerDef) => {\n            const newConf = mergeRecursive({}, layerDef);\n            sanitizeEncoding(newConf.encoding);\n            return newConf;\n        }\n    };\n    return factoryObj;\n})();\n\nexport default layerFactory;\n","import layerFactory from './layer-factory';\n\nexport default layerFactory;\n","import { AreaLayer } from './layers/area';\nimport { ArcLayer } from './layers/arc';\nimport { LineLayer } from './layers/line';\nimport { TextLayer } from './layers/text';\nimport { PointLayer } from './layers/point';\nimport { BarLayer } from './layers/bar';\nimport { BaseLayer } from './base-layer';\nimport * as LAYER_TYPES from './enums/layer-types';\nimport { TickLayer } from './layers/tick';\n\nexport const DEFAULT_LAYERS = {\n    [LAYER_TYPES.AREA_LAYER]: AreaLayer,\n    [LAYER_TYPES.ARC_LAYER]: ArcLayer,\n    [LAYER_TYPES.LINE_LAYER]: LineLayer,\n    [LAYER_TYPES.TEXT_LAYER]: TextLayer,\n    [LAYER_TYPES.POINT_LAYER]: PointLayer,\n    [LAYER_TYPES.TICK_LAYER]: TickLayer,\n    [LAYER_TYPES.BAR_LAYER]: BarLayer,\n    [LAYER_TYPES.BASE_LAYER]: BaseLayer\n};\n","/**\n * This file exports constants that are used as enums in the\n *  crosstab group implementation.\n */\n/**\n * Width of the crosstab.\n */\nexport const X = 'x';\n/**\n * Width of the crosstab.\n */\nexport const Y = 'y';\n/**\n * Width of the crosstab.\n */\nexport const WIDTH = 'width';\n\n/**\n * Height of the crosstab.\n */\nexport const HEIGHT = 'height';\n\n/**\n * Field referring to object storing measurement configuration.\n */\nexport const MEASUREMENT = 'measurement';\n\n/**\n * Field referring to object storing configuration properties.\n */\nexport const CONFIG = 'config';\n\n/**\n * Width of visual unit in crosstab.\n */\nexport const MIN_UNIT_WIDTH = 'minUnitWidth';\n\n/**\n * Height of visual unit.\n */\nexport const MIN_UNIT_HEIGHT = 'minUnitHeight';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSIONS = 'dimensions';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURES = 'measures';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSION = 'dimension';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURE = 'measure';\n\n/**\n * Flag to specify if model should be pivoted.\n */\nexport const PIVOT = 'pivot';\n\n/**\n * Flag to specify format\n */\nexport const FORMAT = 'format';\n\n/**\n * Mount point where the variable will be hosted\n */\nexport const MOUNT = 'mount';\n\n/**\n * Data update flag\n */\nexport const HAS_DATA_UPDATED = 'hasDataUpdated';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROWS = 'rows';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMNS = 'columns';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COL = 'col';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROW = 'row';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMN = 'column';\n\n/**\n * Field referring to object storing color field\n */\nexport const COLOR = 'color';\n\n/**\n * Field referring to object storing shape field\n */\nexport const SHAPE = 'shape';\n\n/**\n * Field referring to object storing size field\n */\nexport const SIZE = 'size';\n\n/**\n * Field referring to object storing detail field\n */\nexport const DETAIL = 'detail';\n\n/**\n * Field referring to object storing set of layers\n */\nexport const LAYERS = 'layers';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const TRANSFORM = 'transform';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const ORDINAL = 'ordinal';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const LINEAR = 'linear';\n/**\n * Field referring to object storing the transforms\n */\nexport const LEFT = 'left';\n/**\n * Field referring to object storing the transforms\n */\nexport const RIGHT = 'right';\n/**\n * Field referring to object storing the transforms\n */\nexport const TOP = 'top';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTTOM = 'bottom';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const RETINAL = 'retinal';\n/**\n * Field referring to object storing the transforms\n */\nexport const CELL = 'cell';\n/**\n * Field referring to object storing the transforms\n */\nexport const X_AXES = 'xAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const Y_AXES = 'yAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const ENTRY_CELLS = 'entryCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const INITIALIZED = 'initialized';\n/**\n * Field referring to object storing the transforms\n */\nexport const EXIT_CELLS = 'exitCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const AXIS = 'axis';\n/**\n * Field referring to object storing the transforms\n */\nexport const UNIT = 'unit';\n/**\n * Field referring to object storing the transforms\n */\nexport const UPDATED = 'updated';\n/**\n * Field referring to object storing the transforms\n */\nexport const BEFORE_UPDATE = 'beforeupdate';\n/**\n * Field referring to object storing the transforms\n */\nexport const VALUE_MATRIX = 'valueMatrix';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET_HEADERS = 'facet-headers';\n/**\n * Field referring to object storing the transforms\n */\nexport const RADIUS = 'radius';\n/**\n * Field referring to object storing the transforms\n */\nexport const ANGLE = 'angle';\n/**\n * Field referring to object storing the transforms\n */\nexport const ARC = 'arc';\n/**\n * Field referring to object storing the transforms\n */\nexport const CARTESIAN = 'cartesian';\n/**\n * Field referring to object storing the transforms\n */\nexport const POLAR = 'polar';\n/**\n * Field referring to object storing the transforms\n */\nexport const CATEGORICAL = 'categorical';\n/**\n * Field referring to object storing the transforms\n */\nexport const TEMPORAL = 'temporal';\n/**\n * Field referring to object storing the transforms\n */\nexport const BAR = 'bar';\n/**\n * Field referring to object storing the transforms\n */\nexport const LINE = 'line';\n/**\n * Field referring to object storing the transforms\n */\nexport const POINT = 'point';\n/**\n * Field referring to object storing the transforms\n */\nexport const PRIMARY = 'Primary';\n/**\n * Field referring to object storing the transforms\n */\nexport const SECONDARY = 'Secondary';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTH = 'both';\n/**\n * Field referring to object storing the transforms\n */\nexport const INTERACTION = 'interaction';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_LINES = 'gridLines';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_BANDS = 'gridBands';\n/**\n * Field referring to object storing the transforms\n */\nexport const HEADER = 'header';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET = 'facet';\n\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Artboard.\n * Artboard merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module\n */\n\nexport default {\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * Interfaces for VisualGroup. Any new VisualGroup has to implement this class.\n * @class  SimpleGroup\n */\nclass SimpleGroup {\n\n    /**\n     * This method is used to set or get the DataModel instance.\n     *\n     * @param {DataModel | undefined} dataModel Instance of datamodel.\n\n     * @memberof  SimpleGroup\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to set or get the group specific configuration\n     * properties\n     *\n     * @param {Object | undefined} configObj The input configuration.\n     *                                or instance of visual group.\n     * @memberof  SimpleGroup\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to return a serialized representation of the\n     * instance's properties.\n     *\n     * @memberof  SimpleGroup\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to get or set the measurement object which houses\n     * layout properties like width and height.\n     *\n     * @param {Object  | undefined} mObj The measurement properties.\n     * @memberof  SimpleGroup\n     */\n    measurement () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n\nexport default SimpleGroup;\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n *\n *\n * @export\n * @class Variable\n */\nexport default class Variable {\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    type () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    toString () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n","import Variable from './variable';\n\n/**\n * This is a wrapper on top of multiple variables which are of same type but they are shown in the same axis.This is\n * required in case of range plots or ohlc plots where one plot is mapped to multiple measure fields. At that time,\n * we need to create a composed variable from multiple variables. This class just wraps them into one variable instance\n * and provides methods to get the type and other common functionalities which can be performed on a simple variable\n * instance.\n *\n * @public\n * @class ComposeVars\n */\nclass ComposedVars extends Variable {\n\n    /**\n     * Creates an instance of ComposeVars.\n     *\n     * @param {Array} texts Array of field names\n     */\n    constructor (...texts) {\n        super(...texts);\n        this.vars(texts);\n    }\n\n    vars (...params) {\n        if (params.length) {\n            this._vars = params[0];\n            return this;\n        }\n        return this._vars;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this.vars().forEach(d => d.data(dm[0]));\n            return this;\n        }\n        return this._data;\n    }\n\n    /**\n     * Get all the field names from composed variable instance.\n     *\n     * @public\n     * @return {Array} Array of field names.\n     */\n    getMembers () {\n        const vars = this.vars();\n        return vars.map(member => member.getMembers()[0]);\n    }\n\n    /**\n     * Type of field associated with this composed variable.\n     *\n     * @return {string} Type of variable (Measure/Dimension).\n     */\n    type () {\n        return this.vars()[0].type();\n    }\n\n    toString () {\n        return this.vars().map(d => d.toString()).join(',');\n    }\n\n    /**\n     * Returns the number formatter function of the variable.\n     *\n     * @return {Function} Number formatter function of the variable.\n     */\n    numberFormat () {\n        return this.vars()[0].numberFormat();\n    }\n\n    format (values) {\n        return this.vars()[0].format(values);\n    }\n\n    /**\n     * Returns the subtype of the fields associated with this variable instance.\n     *\n     * @public\n     * @return {string} Subtype of the variable.\n     */\n    subtype () {\n        return this.vars()[0].subtype();\n    }\n\n    /**\n     * Returns the consecutive minimum difference of the field values.\n     *\n     * @public\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        return this.vars()[0].getMinDiff();\n    }\n}\n\nexport default ComposedVars;\n","import { DateTimeFormatter } from 'muze-utils';\nimport Variable from './variable';\n\n/**\n * This is a wrapper on top of fields passed in rows or columns in canvas. This is used to get the type of field or\n * get min difference from the field values.\n *\n * @public\n * @class SimpleVariable\n */\nexport default class SimpleVariable extends Variable {\n\n    /**\n     * Creates an instance of simple variable instance.\n     *\n     * @param {string} text Field name.\n     */\n    constructor (text) {\n        super();\n        this.oneVar(text);\n    }\n\n    /**\n     * Gets the field name associated with this variable instance.\n     *\n     * @public\n     * @return {string} Name of the field.\n     */\n    oneVar (...oneV) {\n        if (oneV.length) {\n            this._oneVar = oneV[0];\n            return this;\n        }\n        return this._oneVar;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    toString () {\n        return this.oneVar();\n    }\n\n    /**\n     * Gets the number formatter function of this variable.\n     *\n     * @public\n     * @return {Function} Number formatter function.\n     */\n    numberFormat () {\n        if (this.type() === 'measure') {\n            const formatter = this.data().getFieldspace().getMeasure()[this.oneVar()];\n            return formatter.numberFormat();\n        } return val => val;\n    }\n\n    format (values) {\n        if (values && this.subtype() === 'temporal') {\n            const formatter = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            const dtFormat = new DateTimeFormatter(formatter);\n            values = values.map(e => dtFormat.getNativeDate(e));\n        }\n        return values;\n    }\n\n    /**\n     * Return the field names associated with this variable instance.\n     *\n     * @public\n     * @return {Array} Array of fields.\n     */\n    getMembers () {\n        return [this.oneVar()];\n    }\n\n    /**\n     * Returns the type of the variable. Whether it is measure or dimension.\n     *\n     * @public\n     * @return {string} Type of variable.\n     */\n    type () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.type;\n    }\n\n    /**\n     * Returns the subtype of the variable. Subtype can be categorical or temporal. If no subtype is found, then it\n     * returns the type of the variable.\n     *\n     * @public\n     * @return {string} Subtype of variable.\n     */\n    subtype () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.subtype || fieldDef.type;\n    }\n\n    /**\n     * Returns the minimum consecutive difference between the data values of this variable.\n     *\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        const fieldSpace = this.data().getFieldspace();\n        return fieldSpace.fieldsObj()[this.oneVar()].minimumConsecutiveDifference();\n    }\n\n    /**\n     * Returns true if two variable instances are same.If both variable has the same field names, they are equal.\n     *\n     * @return {Boolean} Whether two variable instances are same.\n     */\n    equals (varInst) {\n        return this.oneVar() === varInst.oneVar();\n    }\n}\n","import { ComposedVars, SimpleVariable } from '../variable';\nimport { DIMENSION, COLUMNS, ROWS, TEMPORAL } from '../enums/constants';\n\n/**\n * Gets the list of fields in a sorted order by measurement and dimension\n *\n * @param {Array} fieldList List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields sorted by measurement and dimensions\n */\nconst orderFields = (fieldArray, type) => {\n    const dimensionArr = [[], []];\n    const measureArr = [[], []];\n    const temporalArr = [[], []];\n    const categoricalArr = [[], []];\n\n    fieldArray.forEach((fieldList, index) => {\n        fieldList.forEach((field) => {\n            if (field.type() === DIMENSION) {\n                dimensionArr[index].push(field);\n                field.subtype() === TEMPORAL ? temporalArr[index].push(field) : categoricalArr[index].push(field);\n            } else {\n                measureArr[index].push(field);\n            }\n        });\n    });\n\n    const numOfMeasures = measureArr[0].length + (measureArr[1] ? measureArr[1].length : 0);\n\n    // Single array of fields\n    if (!fieldArray[1]) {\n        // Push measures to bottom\n        measureArr[1] = type === COLUMNS ? measureArr[0] : [];\n        // Push measures to left\n        measureArr[0] = type !== COLUMNS ? measureArr[0] : [];\n        // Bottom and right dimensions empty\n        dimensionArr[1] = [];\n        // Left and top filled with dimensions\n        dimensionArr[0] = dimensionArr[0];\n        if (numOfMeasures === 0) {\n            const allDimensions = [...dimensionArr[0], ...dimensionArr[1]];\n            if (type === COLUMNS) {\n                dimensionArr[1] = allDimensions[allDimensions.length - 1] ? [allDimensions[allDimensions.length - 1]]\n                        : [];\n                allDimensions.splice(-1, 1);\n            } else {\n                dimensionArr[1] = [];\n            }\n            dimensionArr[0] = [...allDimensions];\n        }\n    }\n\n    if (dimensionArr[0].length && dimensionArr[1].length && numOfMeasures > 0) {\n        dimensionArr[0] = [...dimensionArr[0], ...dimensionArr[1]];\n        dimensionArr[1] = [];\n    }\n    return {\n        fields: dimensionArr.map((list, i) => (i === 1 ?\n            measureArr[i].concat(dimensionArr[i]) : dimensionArr[i].concat(measureArr[i]))),\n        dimensions: [...dimensionArr[0], ...dimensionArr[1]],\n        measures: [...measureArr[0], ...measureArr[1]],\n        temporal: [...temporalArr[0], ...temporalArr[1]],\n        categorical: [...categoricalArr[0], ...categoricalArr[1]]\n    };\n};\n\n/**\n * Gets the list of normalized fields\n *\n * @param {Array} fields List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields normalized by measurement and dimensions\n */\nconst normalizeFields = (config, type) => {\n    const fieldsArr = [];\n    const fields = config[type];\n\n    if (!(fields[0] instanceof Array)) {\n        fieldsArr[0] = fields;\n    } else {\n        fieldsArr[0] = fields[0] || [];\n        fieldsArr[1] = fields[1] || [];\n    }\n    return fieldsArr;\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} datamodel\n *\n */\nconst convertToVar = (datamodel, fields) => {\n    const vars = [];\n\n    fields && fields.forEach((field) => {\n        if (field instanceof ComposedVars) {\n            vars.push(field);\n            field.data(datamodel);\n        } else {\n            vars.push(new SimpleVariable(field).data(datamodel));\n        }\n    });\n    return vars;\n};\n\n/**\n *\n *\n * @param {*} rows\n * @param {*} columns\n * @param {*} datamodel\n *\n */\nexport const transformFields = (datamodel, config) => {\n    const [rowsInfo, columnsInfo] = [ROWS, COLUMNS].map((fields) => {\n        const normalizedFields = normalizeFields(config, fields);\n        const norFields = [convertToVar(datamodel, normalizedFields[0])];\n\n        if (normalizedFields[1]) {\n            norFields[1] = convertToVar(datamodel, normalizedFields[1]);\n        }\n        return orderFields(norFields, fields);\n    });\n    const {\n        fields: rows,\n        dimensions: rowDimensions,\n        measures: rowMeasures,\n        temporal: rowTemporalFields,\n        categorical: rowCategoricalFields\n    } = rowsInfo;\n    const {\n        fields: columns,\n        dimensions: columnDimensions,\n        measures: columnMeasures,\n        temporal: columnTemporalFields,\n        categorical: columnCategoricalFields\n    } = columnsInfo;\n    return {\n        rows,\n        rowDimensions,\n        rowMeasures,\n        rowTemporalFields,\n        rowCategoricalFields,\n        columns,\n        columnTemporalFields,\n        columnCategoricalFields,\n        columnDimensions,\n        columnMeasures\n    };\n};\n","import { ERROR_MSG, mergeRecursive } from 'muze-utils';\nimport { transformFields } from './field-sanitizer';\nimport { getHeaderAxisFrom } from '../group-helper/group-utils';\nimport { ROW, COLUMN } from '../enums/constants';\n\n/**\n *\n *\n * @export\n * @class VisualEncoder\n */\nexport default class VisualEncoder {\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    createAxis () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    setCommonDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    getLayerConfig () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    fieldInfo (...info) {\n        if (info.length) {\n            this._fieldInfo = mergeRecursive(this._fieldInfo || {}, info[0]);\n            return this;\n        }\n        return this._fieldInfo;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof VisualEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        this.fieldInfo(transformFields(datamodel, config));\n        return this.fieldInfo();\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    axisFrom (...params) {\n        if (params.length) {\n            this._axisFrom = params[0];\n            return this;\n        }\n        return this._axisFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    headerFrom (...params) {\n        if (params.length) {\n            this._headerFrom = params[0];\n            return this;\n        }\n        return this.__headerFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axisFrom\n     *\n     * @memberof CartesianEncoder\n     */\n    setAxisAndHeaders (axisFrom = {}, fields) {\n        const [rowHeader, rowAxis] = getHeaderAxisFrom(ROW, fields.rows, axisFrom);\n        const [colHeader, colAxis] = getHeaderAxisFrom(COLUMN, fields.columns, axisFrom);\n\n        this.axisFrom({\n            row: rowAxis,\n            column: colAxis\n        });\n        this.headerFrom({\n            row: rowHeader,\n            column: colHeader\n        });\n        return this;\n    }\n}\n","import { ContinousAxis, BandAxis, TimeAxis, ColorAxis, SizeAxis, ShapeAxis } from '@chartshq/muze-axis';\n\nexport const scaleMaps = {\n    linear: ContinousAxis,\n    band: BandAxis,\n    temporal: TimeAxis,\n    size: SizeAxis,\n    color: ColorAxis,\n    shape: ShapeAxis\n};\n","import { ScaleType } from '@chartshq/muze-axis';\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    dimension: ScaleType.BAND,\n    categorical: ScaleType.BAND,\n    temporal: ScaleType.TIME,\n    measure: ScaleType.LINEAR,\n    continuous: ScaleType.LINEAR\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { AxisOrientation } from '@chartshq/muze-axis';\nimport { scaleMaps } from '../enums/scale-maps';\nimport { getAxisType, getAxisKey } from '../group-helper';\nimport { dataTypeScaleMap } from '../data-type-scale-map';\nimport { CATEGORICAL, TEMPORAL, BAR, LINE, POINT, BOTH, Y } from '../enums/constants';\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst getAxisConfig = (axisInfo, field, axesCreators, indices) => {\n    let axisOrientation;\n    const { index, axisIndex, axisType } = axisInfo;\n    const { config, position } = axesCreators;\n    const { rowIndex, columnIndex } = indices;\n    const rawUserAxisConfig = config.axes ? (config.axes[axisType] || {}) : {};\n\n    // Change config object to a function if not already one\n    const userAxisConfigFn = typeof rawUserAxisConfig !== 'function' ?\n        () => rawUserAxisConfig : rawUserAxisConfig;\n    const userAxisConfig = userAxisConfigFn(field.getMembers(), rowIndex, columnIndex);\n\n    // If current config does not specifes config for an axis, retain old config\n    if (!userAxisConfig) {\n        return {};\n    }\n\n    const {\n        LEFT,\n        RIGHT,\n        TOP,\n        BOTTOM\n    } = AxisOrientation;\n    const allOrientations = axisType === Y ? [LEFT, RIGHT] : [TOP, BOTTOM];\n\n    if (position === BOTH) {\n        axisOrientation = allOrientations[axisIndex];\n    } else {\n        axisOrientation = position;\n    }\n    const axisConfig = {\n        id: `${axisType}-${index}-${axisIndex}`,\n        name: field.toString(),\n        field: field.toString(),\n        numberFormat: field.numberFormat(),\n        orientation: axisOrientation,\n        showAxisName: true,\n        show: true,\n        type: dataTypeScaleMap[field.subtype()]\n    };\n    userAxisConfig.tickValues = field.format(userAxisConfig.tickValues);\n    userAxisConfig.domain = field.format(userAxisConfig.domain);\n\n    return mergeRecursive(axisConfig, userAxisConfig);\n};\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst createSimpleAxis = (axisConfig, field, axesCreators) => {\n    const { labelManager } = axesCreators;\n    const Cls = scaleMaps[dataTypeScaleMap[field.subtype()]];\n    const simpleAxis = new Cls(axisConfig, { labelManager });\n    return simpleAxis;\n};\n\nexport const getAdjustedDomain = (max, min) => {\n    const y1ratio = max[0] / (max[0] - min[0]);\n    const y2ratio = max[1] / (max[1] - min[1]);\n\n    // adjust min/max values for positive negative values zero line etc\n    let allSameSign = false;\n\n    // if all numbers are positive set floor to zero\n    if (min[0] > 0 && min[1] > 0 && min[1] > 0 && max[1] > 0) {\n        allSameSign = true;\n        min[0] = 0;\n        min[1] = 0;\n    }\n\n    // if all numbers are negative set ceiling to zero\n    if (min[0] < 0 && min[1] < 0 && min[1] < 0 && max[1] < 0) {\n        allSameSign = true;\n        max[0] = 0;\n        max[1] = 0;\n    }\n\n    // align zero line if necessary\n    if (!allSameSign && y1ratio !== y2ratio) {\n        if (y1ratio < y2ratio) {\n                    // adjust min[1]\n            min[1] = min[0] / max[0] * max[1];\n        } else {\n                    // adjust min[0]\n            min[0] = min[1] / max[1] * max[0];\n        }\n    }\n    return [\n        [min[0], max[0]],\n        [min[1], max[1]]\n    ];\n};\n\n/**\n *\n *\n * @param {*} axisType\n * @param {*} fieldInfo\n * @param {*} axesCreators\n * @param {*} groupAxes\n *\n */\nexport const generateAxisFromMap = (axisType, fieldInfo, axesCreators, axesInfo, indices) => {\n    let axisKey;\n    const { groupAxes, valueParser } = axesInfo;\n    const currentAxes = [];\n    const { fields, index } = fieldInfo;\n    const { cacheMaps } = axesCreators;\n    const map = cacheMaps[`${axisType}AxesMap`];\n\n    const commonAxisKey = getAxisKey(axisType, index);\n    fields.forEach((field, axisIndex) => {\n        axisKey = getAxisKey(axisType, index, axisIndex, dataTypeScaleMap[field.subtype()]);\n        const axisConfig = getAxisConfig({ index, axisIndex, axisType }, field, axesCreators, indices);\n\n        let axis;\n        if (!map.has(axisKey)) {\n            axis = createSimpleAxis(axisConfig, field, axesCreators);\n        } else {\n            axis = map.get(axisKey);\n            axis._rotationLock = false;\n            axis.config(axisConfig);\n        }\n        axis.valueParser(valueParser);\n        currentAxes.push(axis);\n        map.set(axisKey, axis);\n    });\n\n    if (currentAxes.length) {\n        map.set(commonAxisKey, currentAxes);\n        groupAxes.add(commonAxisKey);\n    }\n\n    return currentAxes;\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n    const xAxes = [];\n    const yAxes = [];\n\n    xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes.push(xAxis);\n    });\n    yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes.push(yAxis);\n    });\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n * return a default mark based on predefined set of rules of type and subtype of the fields\n *\n * @param {string} colFieldType dimension/measure - temporal/ordinal/nominal\n * @param {string} rowFieldType dimension/measure - temporal/ordinal/nominal\n * @return {Object} return mark type\n */\nexport const getDefaultMark = (colFieldType, rowFieldType) => {\n    let mark;\n\n    if (colFieldType === CATEGORICAL || rowFieldType === CATEGORICAL) {\n        mark = BAR;\n    } else if (colFieldType === TEMPORAL || rowFieldType === TEMPORAL) {\n        mark = LINE;\n    } else {\n        mark = POINT;\n    }\n\n    return mark;\n};\n\n/**\n *\n *\n * @param {*} axesCreators\n * @param {*} [fieldInfo=[]]\n *\n */\nexport const createRetinalAxis = (axesCreators, fieldProps = {}) => {\n    const { axisType, fieldsConfig } = axesCreators;\n    const field = fieldProps.field;\n    const axis = [];\n    const Cls = scaleMaps[axisType];\n\n    fieldProps.type = fieldProps.type ? fieldProps.type : getAxisType(fieldsConfig, field || null);\n    axis.push(new Cls(fieldProps));\n    return axis;\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} val\n *\n */\nexport const getIndex = (arr, val) => {\n    let i = 0;\n    let arrIndex = -1;\n\n    while (arrIndex === -1 && i < arr.length) {\n        if (arr[i].toString() === val.toString()) {\n            arrIndex = i;\n        }\n        i++;\n    }\n    return arrIndex;\n};\n\n/**\n *\n *\n * @param {*} colFields\n * @param {*} rowFields\n * @param {*} userLayerConfig\n *\n * @memberof CartesianEncoder\n */\nexport const getLayerConfFromFields = (colFields, rowFields, userLayerConfig) => userLayerConfig.filter((conf) => {\n    const userConf = conf instanceof Array ? conf : [conf];\n    const encodingArr = [].concat(...userConf.map(d => d.encoding).filter(d => d !== undefined));\n\n    if (!encodingArr.length) {\n        return true;\n    }\n\n    const xFields = [].concat(...encodingArr.map(d => [d.x && d.x.field, d.x0 && d.x0.field]))\n                .filter(d => d !== undefined && d !== null);\n    const yFields = [].concat(...encodingArr.map(d => [d.y && d.y.field, d.y0 && d.y0.field]))\n                .filter(d => d !== undefined && d !== null);\n\n    if (!xFields.length && !yFields.length) {\n        return true;\n    }\n\n    const colFieldExist = xFields.length ? xFields.every(d => colFields.indexOf(d) !== -1) : false;\n    const rowFieldExist = yFields.length ? yFields.every(d => rowFields.indexOf(d) !== -1) : false;\n    if (xFields.length && yFields.length) {\n        return colFieldExist && rowFieldExist;\n    }\n    return colFieldExist || rowFieldExist;\n});\n","import { layerFactory } from '@chartshq/visual-layer';\nimport { mergeRecursive, STATE_NAMESPACES, unionDomain } from 'muze-utils';\nimport {\n    generateAxisFromMap,\n    getDefaultMark,\n    getIndex,\n    getLayerConfFromFields,\n    getAdjustedDomain\n} from './encoder-helper';\nimport { retriveDomainFromData } from '../group-helper';\n\nimport { ROW, COLUMN, COL, LEFT, TOP, CARTESIAN, MEASURE, BOTH, X, Y } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class CartesianEncoder\n * @extends {VisualEncoder}\n */\nexport default class CartesianEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     *\n     * @memberof CartesianEncoder\n     */\n    static type () {\n        return CARTESIAN;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof CartesianEncoder\n     */\n    createAxis (axesCreators, fieldInfo, context) {\n        const geomCellAxes = {};\n        const {\n            axes\n        } = axesCreators;\n        const {\n            projections,\n            indices\n        } = fieldInfo;\n        const {\n            rowFields,\n            columnFields\n        } = projections;\n        const {\n             rowIndex,\n             columnIndex\n        } = indices;\n        const axisFields = [{\n            fields: rowFields,\n            index: rowIndex\n        }, {\n            fields: columnFields,\n            index: columnIndex\n        }];\n        const xAxes = axes.x || [];\n        const yAxes = axes.y || [];\n\n        [rowFields, columnFields].forEach((fields, i) => {\n            const type = i === 0 ? ROW : COLUMN;\n            const axis = i === 0 ? Y : X;\n\n            if (fields.length > 1) {\n                axesCreators.position = BOTH;\n            } else {\n                axesCreators.position = this.axisFrom()[type];\n            }\n            geomCellAxes[axis] = generateAxisFromMap(axis, axisFields[i], axesCreators, {\n                groupAxes: axis === X ? xAxes : yAxes,\n                valueParser: context.resolver.valueParser()\n            }, indices);\n        });\n        return geomCellAxes;\n    }\n\n    updateDomains (store, axes) {\n        const xAxes = axes.x;\n        const yAxes = axes.y;\n        store.model.lock();\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${0}${i}0`, xAxes[i][j].domain());\n            }\n        }\n        for (let i = 0; i < yAxes.length; i++) {\n            for (let j = 0; j < yAxes[i].length; j++) {\n                store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${i}${0}0`, yAxes[i][j].domain());\n                yAxes[i][j]._domainLock = false;\n            }\n        }\n\n        store.model.unlock();\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const unitDomains = store.get(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`);\n        const resolver = context.resolver();\n        const units = resolver.units();\n        const domains = {\n            0: {},\n            1: {}\n        };\n\n        for (let rIdx = 0, len = units.length; rIdx < len; rIdx++) {\n            const unitsArr = units[rIdx];\n            for (let cIdx = 0, len2 = unitsArr.length; cIdx < len2; cIdx++) {\n                const unit = unitsArr[cIdx];\n                const axisFields = unit.fields();\n                [axisFields.x, axisFields.y].forEach((fieldArr, axisType) => {\n                    fieldArr.forEach((field, axisIndex) => {\n                        const key = !axisType ? `0${cIdx}${axisIndex}` : `${rIdx}0${axisIndex}`;\n                        const dom = unitDomains[`${rIdx}${cIdx}`];\n                        if (dom && Object.keys(dom).length !== 0) {\n                            domains[axisType][key] = unionDomain([(domains[axisType] && domains[axisType][key]) || [],\n                                dom[`${field}`]], field.subtype());\n                        }\n                    });\n                });\n            }\n        }\n\n        const { x: xAxes, y: yAxes } = resolver.axes();\n        store.model.lock();\n        [xAxes, yAxes].forEach((axesArr, axisType) => {\n            axesArr.forEach((axes, idx) => {\n                const min = [];\n                const max = [];\n                let domain = [];\n                let adjustedDomain = [];\n                if (axes.length > 1 && axes[0].constructor.type() === 'linear' && axes[0].config().alignZeroLine) {\n                    axes.forEach((axis, i) => {\n                        const key = !axisType ? `0${idx}${i}` : `${idx}0${i}`;\n                        domain = domains[axisType][key];\n                        min[i] = domain[0];\n                        max[i] = domain[1];\n                    });\n                    adjustedDomain = getAdjustedDomain(max, min);\n                }\n\n                axes.forEach((axis, index) => {\n                    const key = !axisType ? `0${idx}${index}` : `${idx}0${index}`;\n                    domain = adjustedDomain[index] || domains[axisType][key];\n                    axis.domain(domain);\n                    const type = !axisType ? 'x' : 'y';\n                    store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type}.${idx}${index}`, domain);\n                });\n            });\n        });\n        store.model.unlock();\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields, type) {\n        let facets = [];\n        let projections = [];\n        let counter = 0;\n        const primaryFacets = [];\n        const secondaryFacets = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n        const axisFrom = this.axisFrom();\n\n        for (let i = 0; i < primaryLen; i++) {\n            let projArr = [primaryFields[i]];\n            const primaryField = primaryFields[i];\n\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter];\n                if (secondaryField && secondaryField.type() === MEASURE) {\n                    counter++;\n                    projArr = [primaryField, secondaryField];\n                }\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n                primaryFacets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                    secondaryFacets.push(secondaryField);\n                }\n            }\n        }\n        if ((primaryFacets.length || secondaryFacets.length) && !projections.length) {\n            type = type === COL ? COLUMN : type;\n            if ((axisFrom[type] === LEFT || axisFrom[type] === TOP) && primaryFacets.length) {\n                const axisFromIndex = primaryFacets.length - 1;\n                const facet = primaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(secondaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    secondaryFacets.splice(existIndex, 1);\n                }\n                primaryFacets.splice(axisFromIndex, 1);\n            } else {\n                const axisFromIndex = 0;\n                const facet = secondaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(primaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    primaryFacets.splice(existIndex, 1);\n                }\n                secondaryFacets.splice(axisFromIndex, 1);\n            }\n        }\n\n        facets = [...primaryFacets, ...secondaryFacets];\n        facets = facets.filter((el, index, self) => index === self.findIndex(t => (t.toString() === el.toString())));\n        return {\n            facets,\n            projections\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof CartesianEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        return super.fieldSanitizer(datamodel, config);\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     *\n     * @memberof CartesianEncoder\n     */\n    getRetinalFieldsDomain (dataModels, encoding) {\n        const groupedModel = dataModels.groupedModel;\n        const domains = {};\n        for (const key in encoding) {\n            if ({}.hasOwnProperty.call(encoding, key)) {\n                const encodingObj = encoding[key];\n                const field = encodingObj.field;\n                if (!encodingObj.domain && field) {\n                    const domain = retriveDomainFromData(groupedModel, field);\n                    domains[field] = domain;\n                }\n            }\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     * @memberof CartesianEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n        // let currentLayerIndex = 0;\n        layerArray.length && layerArray.forEach((layer, i) => {\n            const def = layerFactory.sanitizeLayerConfig(layer);\n            def.order = i;\n            serializedLayers.push(def);\n        });\n        return serializedLayers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof CartesianEncoder\n     */\n    getLayerConfig (fields, userLayerConfig) {\n        const layerConfig = [];\n        const {\n            columnFields,\n            rowFields\n        } = fields;\n\n        // let currentLayerIndex = 0;\n        columnFields.forEach((colField) => {\n            const colFieldName = colField.toString();\n            rowFields.forEach((rowField) => {\n                let configs = [];\n                const rowFieldName = rowField.toString();\n                const encoding = {\n                    x: {\n                        field: colFieldName\n                    },\n                    y: {\n                        field: rowFieldName\n                    }\n                };\n                const rowFieldType = rowField.subtype();\n                const colFieldType = colField.subtype();\n                const mark = getDefaultMark(colFieldType, rowFieldType);\n\n                const defConfigs = [{\n                    mark,\n                    def: {\n                        mark,\n                        encoding\n                    }\n                }];\n\n                const layerConfigs = getLayerConfFromFields(colField.getMembers(),\n                    rowField.getMembers(), userLayerConfig || []);\n                if (layerConfigs.length) {\n                    configs = layerConfigs.map((layerConf) => {\n                        const mergedLayerConf = mergeRecursive(mergeRecursive({}, defConfigs[0].def), layerConf);\n                        const serializedLayerConfig = layerFactory.getSerializedConf(mergedLayerConf.mark,\n                            mergedLayerConf);\n                        return {\n                            mark: mergedLayerConf.mark,\n                            order: mergedLayerConf.order,\n                            def: serializedLayerConfig\n                        };\n                    });\n                } else {\n                    configs = defConfigs;\n                }\n\n                layerConfig.push(...configs);\n            });\n        });\n        return layerConfig;\n    }\n}\n","import { layerFactory } from '@chartshq/visual-layer';\nimport { mergeRecursive, STATE_NAMESPACES } from 'muze-utils';\nimport VisualEncoder from './visual-encoder';\nimport { RADIUS, ANGLE, SIZE, MEASURE, ARC, POLAR, COLOR } from '../enums/constants';\n/**\n *\n *\n * @export\n * @class PolarEncoder\n * @extends {VisualEncoder}\n */\nexport default class PolarEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof PolarEncoder\n     */\n    createAxis (axesCreators, fieldInfo) {\n        const {\n            axes\n        } = axesCreators;\n        const geomCellAxes = axes;\n        const {\n            indices\n        } = fieldInfo;\n        const {\n            rowIndex,\n            columnIndex\n        } = indices;\n        // Dummy axes for polar, to create blank cells\n        const pieAxes = geomCellAxes.pie || [];\n\n        pieAxes[rowIndex] = pieAxes[rowIndex] || [];\n        pieAxes[rowIndex][columnIndex] = [];\n\n        geomCellAxes.pie = pieAxes;\n        geomCellAxes.x = null;\n        geomCellAxes.y = null;\n\n        return geomCellAxes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields) {\n        let counter = 0;\n        const facets = [];\n        const projections = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n\n        for (let i = 0; i < primaryLen; i++) {\n            const primaryField = primaryFields[i];\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter++];\n                const projArr = secondaryField ? [primaryField, secondaryField] : [primaryField];\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                }\n            }\n        }\n        return {\n            facets,\n            projections\n        };\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const domains = store.get(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`);\n        const domainProps = {\n            radius: [Infinity, -Infinity]\n        };\n        Object.values(domains).forEach((domainVal) => {\n            for (const key in domainVal) {\n                domainProps[key] = [Math.min(domainVal[key][0], domainProps[key][0]),\n                    Math.min(domainVal[key][1], domainProps[key][1])];\n            }\n        });\n        store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.radius`, domainProps.radius);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    setCommonDomain () {\n        // No domain to be set\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    static type () {\n        return POLAR;\n    }\n\n    layers (...layers) {\n        if (layers.length) {\n            this._layers = layers[0];\n            return this;\n        }\n        return this._layers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof PolarEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        let sanitizedRows = [[], []];\n        let sanitizedColumns = [[], []];\n        const fields = super.fieldSanitizer(datamodel, config);\n        const {\n            layers\n        } = config;\n        const {\n            rows,\n            columns\n        } = fields;\n        const layer = layers[0];\n        const encoding = layer.encoding;\n        const radius = encoding && encoding.radius ? encoding.radius.field : null;\n        const angle = encoding && encoding.angle ? encoding.angle.field : null;\n        const sanitizedFields = [sanitizedRows, sanitizedColumns];\n\n        [rows, columns].forEach((fieldType, typeIndex) => {\n            fieldType.forEach((fieldSet, i) => fieldSet.forEach((field) => {\n                if (field.toString() !== radius && field.toString() !== angle && field.type() !== MEASURE) {\n                    sanitizedFields[typeIndex][i].push(field);\n                }\n            }));\n        });\n        sanitizedColumns = [...new Set(sanitizedColumns)];\n        sanitizedRows = [...new Set(sanitizedRows)];\n        this.fieldInfo({ rows: sanitizedRows, columns: sanitizedColumns });\n        return this.fieldInfo();\n    }\n\n    getRetinalFieldsDomain (dataModels, encoding, facetFields, groupBy) {\n        let sizeField;\n        let colorField;\n        const fields = [];\n        const layers = this.layers();\n        const dataModel = dataModels.groupedModel;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const domains = {};\n        if (layers && layers[0]) {\n            const layer = layers[0];\n            const layerEncoding = layer.def.encoding || {};\n\n            [RADIUS, ANGLE, SIZE, COLOR].forEach((encType) => {\n                const field = layerEncoding[encType] ? layerEncoding[encType].field : '';\n                const measureField = fieldsConfig[field] && fieldsConfig[field].def.type === MEASURE;\n                if (encType === SIZE && measureField) {\n                    sizeField = field;\n                }\n                if (encType === COLOR) {\n                    colorField = field;\n                }\n                fieldsConfig[field] && !measureField && fields.push(field);\n            });\n        }\n\n        if (sizeField) {\n            domains[sizeField] = dataModel.groupBy(facetFields, {\n                [sizeField]: 'sum'\n            }).getFieldspace().fieldsObj()[sizeField].domain();\n        }\n\n        if (colorField) {\n            const dm = dataModel.groupBy([...facetFields, ...fields], groupBy.measures);\n            domains[colorField] = dm.getFieldspace().fieldsObj()[colorField].domain();\n        }\n        return domains;\n    }\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof PolarEncoder\n     */\n    getLayerConfig (fields, userLayerConfig) {\n        let layerConfig = [];\n        const {\n                columnFields,\n                rowFields\n            } = fields;\n        const allFields = [...columnFields, ...rowFields];\n\n        allFields.forEach(() => {\n            const encoding = {};\n            let config = {\n                mark: ARC,\n                def: {\n                    encoding\n                }\n            };\n            if (userLayerConfig && userLayerConfig.length > 0) {\n                config = mergeRecursive(config, userLayerConfig[0]);\n            }\n            layerConfig.push(config);\n        });\n        if (layerConfig.length === 0) {\n            layerConfig = userLayerConfig;\n        }\n\n        this.layers(layerConfig);\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     *\n     * @memberof PolarEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n\n        layerArray.length && layerArray.forEach((layer) => {\n            const def = layerFactory.getSerializedConf(layer.mark, layer);\n            serializedLayers.push({\n                mark: layer.mark,\n                def\n            });\n        });\n        return serializedLayers;\n    }\n}\n","import { createRetinalAxis } from './encoder-helper';\nimport { COLOR, SHAPE, SIZE } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class RetinalEncoder\n * @extends {VisualEncoder}\n */\nexport default class RetinalEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     *\n     * @memberof RetinalEncoder\n     */\n    createAxis (axesCreators) {\n        const { fieldsConfig, config } = axesCreators;\n        const newAxes = {};\n\n        [COLOR, SHAPE, SIZE].forEach((axisType) => {\n            newAxes[`${axisType}`] = createRetinalAxis({ axisType, fieldsConfig }, config[axisType]);\n        });\n        return newAxes;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof RetinalEncoder\n     */\n    static type () {\n        return 'retinal';\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof RetinalEncoder\n     */\n    getLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n        userLayerConfig.forEach((e) => {\n            const config = e;\n            [COLOR, SHAPE, SIZE].forEach((axis) => {\n                if (encodingConfigs[axis] && encodingConfigs[axis].field) {\n                    const def = config.def;\n                    if (config.def instanceof Array) {\n                        def.forEach((conf) => {\n                            conf.encoding = conf.encoding || {};\n                            !conf.encoding[axis] && (conf.encoding[axis] = {});\n                            conf.encoding[axis].field = encodingConfigs[axis].field;\n                        });\n                    } else {\n                        def.encoding = def.encoding || {};\n                        !def.encoding[axis] && (def.encoding[axis] = {});\n                        def.encoding[axis].field = encodingConfigs[axis].field;\n                    }\n                }\n            });\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} context\n     *\n     * @memberof RetinalEncoder\n     */\n    setCommonDomain (context) {\n        const { domains, axes, encoding } = context;\n\n        Object.entries(encoding).forEach((enc) => {\n            if (enc[1] && enc[1].field) {\n                const encType = enc[0];\n                const field = enc[1].field;\n\n                if (field) {\n                    axes[encType].forEach((axis) => {\n                        const domain = domains[field];\n                        !enc[1].domain && axis.updateDomain(domain);\n                    });\n                }\n            }\n        });\n        return axes;\n    }\n}\n","import { Store, FieldType } from 'muze-utils';\nimport { DATA_UPDATE_COUNTER } from '../enums/defaults';\nimport { Variable } from '../variable';\nimport { PolarEncoder, CartesianEncoder } from '../encoder';\nimport {\n    DIMENSION,\n    MEASURE,\n    ORDINAL,\n    LINEAR,\n    ROW,\n    COLUMN,\n    COL,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    COLOR,\n    SIZE,\n    TEMPORAL,\n    SHAPE,\n    INTERACTION,\n    GRID_LINES,\n    GRID_BANDS,\n    HEADER,\n    FACET,\n    X,\n    Y,\n    POLAR\n} from '../enums/constants';\n\n/**\n * Creates an instance of a store which contains the arguments to make the class reactive\n *\n * @return {Object} instance of store\n * @memberof VisualGroup\n */\nexport const initStore = () => new Store({\n    [DATA_UPDATE_COUNTER]: DATA_UPDATE_COUNTER\n});\n\n/**\n *\n *\n * @param {*} arr\n */\nexport const isDistributionEqual = arr => [...arr[0], ...arr[1]].reduce((isEqual, row) => {\n    const rowType = row.type();\n\n    if (rowType === MEASURE || rowType === TEMPORAL) {\n        isEqual = true;\n    }\n    return isEqual;\n}, false);\n\n/**\n *\n *\n */\nexport const initializeCacheMaps = () => ({\n    cellMap: new Map(),\n    xAxesMap: new Map(),\n    yAxesMap: new Map(),\n    entryCellMap: new Map(),\n    exitCellMap: new Map()\n});\n\n/**\n *\n *\n * @param {*} axisName\n * @param {*} id\n */\nexport const getAxisKey = (axisName, ...params) => `${axisName}-axis-${params.join('-')}`;\n\n/**\n *\n *\n * @param {*} rowId\n * @param {*} columnId\n */\nexport const getCellKey = (rowId, columnId) => `cell-${rowId}-${columnId}`;\n\n/**\n *\n *\n * @param {*} config\n *\n */\nexport const extractUnitConfig = (config) => {\n    const unitConfig = {};\n    const attrNames = [INTERACTION, GRID_LINES, GRID_BANDS];\n\n    attrNames.forEach((attr) => {\n        if (config[attr] !== undefined) {\n            unitConfig[attr] = config[attr];\n        }\n    });\n    return unitConfig;\n};\n\n/**\n *\n *\n * @param {*} headers\n * @param {*} index\n * @param {*} rowLength\n *\n * @memberof MatrixResolver\n */\nexport const getHeaderText = (headers, index, rowLength) => {\n    let header = '';\n\n    if (index === rowLength - 1 && headers.length > rowLength) {\n        for (let i = index; i < headers.length - 1; i++) {\n            header += `${headers[i].toString()} / `;\n        }\n        header += headers[headers.length - 1].toString();\n        return header;\n    } else if (headers[index]) {\n        return headers[index].toString();\n    }\n    return '';\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} fieldHeaders\n * @param {*} TextCell\n * @param {*} labelManager\n *\n */\nexport const headerCreator = (fields, fieldHeaders, TextCell, { classPrefix, labelManager }) => {\n    const headers = fields.length > 0 ? fields[0].map((cell, i) => new TextCell({\n        type: HEADER,\n        className: `${classPrefix}-grid-headers`\n    }, {\n        labelManager\n    }).source(getHeaderText(fieldHeaders, i, fields[0].length))\n                    .config({ show: cell.config().show })) : [];\n    return headers;\n};\n\n/**\n *\n *\n * @param {*} variable\n * @param {*} allFields\n *\n */\nexport const findInGroup = (variable, allFields) => {\n    let channel = null;\n\n    [COLOR, SIZE, SHAPE].forEach((e) => {\n        if (this.store.get(e) && variable === this.store.get(e)[0]) {\n            channel = e;\n        }\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    [ROW, COL].forEach((facetType) => {\n        allFields[`${facetType}Facets`].forEach((e) => {\n            if (e.toString() === variable) {\n                channel = { channel: FACET, type: facetType === COL ? COLUMN : ROW };\n            }\n        });\n    });\n\n    if (channel) {\n        return channel;\n    }\n\n    [ROW, COL].forEach((projType) => {\n        allFields[`${projType}Projections`].forEach((e) => {\n            e.forEach((m) => {\n                if (m.toString() === variable) {\n                    channel = projType === COL ? X : Y;\n                }\n            });\n        });\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    return null;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} field\n */\nexport const getAxisType = (fieldsConfig, field) => {\n    let fieldType = ORDINAL;\n\n    if (field && fieldsConfig[field].def.type !== DIMENSION) {\n        fieldType = LINEAR;\n    }\n    return fieldType;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} fieldName\n *\n */\nexport const retriveDomainFromData = (datamodel, fieldName) => {\n    const field = datamodel.getFieldspace().fields.find(d => d.name() === fieldName.toString());\n    return field.domain();\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    let xAxes = null;\n    let yAxes = null;\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n\n    xAxisSet && xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes = xAxes || [];\n        xAxes.push(xAxis);\n    });\n\n    yAxisSet && yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes = yAxes || [];\n        yAxes.push(yAxis);\n    });\n\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n *\n *\n * @param {*} layers\n *\n */\nexport const getEncoder = (layers) => {\n    let encoder = new CartesianEncoder();\n\n    if (layers.length) {\n        // Figuring out the kind of layers the group will have\n        encoder = layers.every(e => e.mark === 'arc') ? new PolarEncoder() : encoder;\n    }\n    return encoder;\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} userAxisFromConfig\n *\n */\nexport const getHeaderAxisFrom = (type, fields, userAxisFromConfig) => {\n    let axisFrom = userAxisFromConfig[type];\n    let headerFrom = '';\n    const options = type === ROW ? [LEFT, RIGHT] : [BOTTOM, TOP];\n    const [firstField, secondField] = fields;\n    const firstFieldType = i => (firstField.length ? firstField[i].type() : null);\n    const secondFieldType = i => (secondField.length ? secondField[i].type() : null);\n\n    if (firstFieldType(firstField.length - 1) === DIMENSION && secondFieldType(0) === DIMENSION) {\n        headerFrom = axisFrom ? options[1 - options.indexOf(axisFrom)] : options[1];\n\n        if (type === COLUMN && (firstField[firstField.length - 1].toString() === secondField[0].toString())) {\n            axisFrom = TOP;\n        } else {\n            axisFrom = axisFrom || options[0];\n        }\n    } else if (secondFieldType(secondField.length - 1) === DIMENSION) {\n        headerFrom = type === ROW ? RIGHT : BOTTOM;\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else {\n        headerFrom = type === ROW ? LEFT : TOP;\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    if (firstFieldType(firstField.length - 1) === MEASURE && secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    } else if (secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else if (firstFieldType(firstField.length - 1) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    return [headerFrom, axisFrom];\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} layers\n *\n * @memberof MatrixResolver\n */\nexport const setFacetsAndProjections = (context, fieldInfo, encoder) => {\n    const {\n        fields,\n        type\n    } = fieldInfo;\n    const { facets, projections } = encoder.simpleEncoder.getFacetsAndProjections(fields, type);\n\n    context.facets({ [`${type}Facets`]: facets });\n    context.projections({ [`${type}Projections`]: projections });\n\n    return { facets, projections, fields };\n};\n\nconst getRowBorders = (left, right) => {\n    const borders = {};\n    borders.top = false;\n    borders.bottom = false;\n    if (left.length > 1 || right.length > 1) {\n        borders.top = true;\n        borders.bottom = true;\n    }\n    return borders;\n};\n\nconst getColumnsBorders = (top, bottom) => {\n    const borders = {};\n    borders.left = false;\n    borders.right = false;\n    if (top.length || bottom.length) {\n        if ((top[0] && top[0].length > 1) || (bottom[0] && bottom[0].length > 1)) {\n            borders.left = true;\n            borders.right = true;\n        }\n    }\n    return borders;\n};\n\nconst getValueBorders = (rows, columns) => {\n    const borders = { top: true, left: true, bottom: true, right: true };\n    const borderTypeRow = [LEFT, RIGHT];\n    const borderTypeCol = [TOP, BOTTOM];\n    rows.forEach((e, i) => {\n        if (e[0] && e[0].length) {\n            borders[borderTypeRow[i]] = true;\n        } else {\n            borders[borderTypeRow[i]] = false;\n        }\n    });\n    columns.forEach((e, i) => {\n        if (e.length) {\n            borders[borderTypeCol[i]] = true;\n        } else {\n            borders[borderTypeCol[i]] = false;\n        }\n    });\n\n    return borders;\n};\n\nexport const getBorders = (matrices, encoder) => {\n    let showRowBorders = { top: false, bottom: false };\n    let showColBorders = { left: false, right: false };\n    let showValueBorders = { top: false, bottom: false, left: false, right: false };\n    const {\n        rows,\n        columns,\n        values: valueMatrix\n    } = matrices;\n    const [leftRows, rightRows] = rows;\n    const [topColumns, bottomColumns] = columns;\n    const {\n        rowDimensions,\n        columnDimensions,\n        rowTemporalFields,\n        columnTemporalFields,\n        columnMeasures,\n        rowMeasures\n    } = encoder.fieldInfo();\n    const allDimensionLength = rowDimensions.length + columnDimensions.length;\n    const allMeasuresLength = rowMeasures.length + columnMeasures.length;\n    const allTemporalFieldsLength = rowTemporalFields.length + columnTemporalFields.length;\n\n    if (encoder.constructor.type() === POLAR) {\n        if (!allDimensionLength) {\n            return { showRowBorders, showColBorders, showValueBorders };\n        }\n    } else if (!allMeasuresLength && !allTemporalFieldsLength && allDimensionLength <= 2) {\n        return { showRowBorders, showColBorders, showValueBorders };\n    }\n\n    showRowBorders = getRowBorders(leftRows, rightRows);\n    showColBorders = getColumnsBorders(topColumns, bottomColumns);\n    showValueBorders = getValueBorders([leftRows, rightRows], [topColumns, bottomColumns]);\n\n    if (valueMatrix.length > 1) {\n        showValueBorders.top = true;\n        showValueBorders.bottom = true;\n    }\n    if (valueMatrix.length && valueMatrix[0].length > 1) {\n        showValueBorders.left = true;\n        showValueBorders.right = true;\n    }\n    return { showRowBorders, showColBorders, showValueBorders };\n};\n\nexport const getFieldsFromSuppliedLayers = (suppliedLayerConfig, fieldsConfig) => {\n    let fields = [];\n    const encodingArr = suppliedLayerConfig.map(conf => (conf.encoding || {}));\n    fields = [...fields, [].concat(...encodingArr.map(enc => Object.values(enc).map(d => d.field)))];\n    fields = fields.filter(field => fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n    return fields;\n};\n\nexport const extractFields = (facetsAndProjections, layerFields) => {\n    const fields = Object.values(facetsAndProjections).map((arr) => {\n        const flattenArray = [].concat(...arr);\n        return [].concat(...flattenArray.map((field) => {\n            if (field instanceof Variable) {\n                return field.getMembers();\n            }\n            return field;\n        }));\n    });\n    return [].concat(...fields, ...layerFields);\n};\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: false\n    },\n    [ACTIONS.HOVER]: {\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.LONGTOUCH]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: true\n    },\n    [ACTIONS.TOUCHDRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: true\n    },\n    [ACTIONS.CLICK]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: false\n    }\n};\n","import {\n    FieldType,\n    getDependencyOrder,\n    getObjProp,\n    defaultValue,\n    objectIterator,\n    unionDomain,\n    makeElement,\n    DimensionSubtype,\n    toArray,\n    MeasureSubtype,\n    getNearestValue\n} from 'muze-utils';\nimport { layerFactory } from '@chartshq/visual-layer';\n\nexport const getDimensionMeasureMap = (layers, fieldsConfig) => {\n    const retinalEncodingsAndMeasures = {};\n\n    layers.forEach((layer) => {\n        const {\n            colorField,\n            sizeField,\n            shapeField,\n            xField,\n            yField\n        } = layer.encodingFieldsInf();\n        const measures = [xField, yField].filter(field => fieldsConfig[field] && fieldsConfig[field].def.type ===\n            FieldType.MEASURE);\n        [colorField, sizeField, shapeField].forEach((field) => {\n            if (fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                !retinalEncodingsAndMeasures[field] && (retinalEncodingsAndMeasures[field] = []);\n                retinalEncodingsAndMeasures[field].push(...measures);\n            }\n        });\n    });\n\n    for (const key in retinalEncodingsAndMeasures) {\n        if ({}.hasOwnProperty.call(retinalEncodingsAndMeasures, key)) {\n            retinalEncodingsAndMeasures[key] = [...new Set(retinalEncodingsAndMeasures[key])];\n        }\n    }\n    return retinalEncodingsAndMeasures;\n};\n\nexport const transformDataModels = (transform, dataModel) => {\n    const dataModels = {};\n    for (const key in transform) {\n        if ({}.hasOwnProperty.call(transform, key)) {\n            const transformVal = transform[key];\n            dataModels[key] = transformVal(dataModel);\n        }\n    }\n\n    return dataModels;\n};\n\nexport const getLayerFromDef = (context, definition, existingLayer, namespaces) => {\n    let instances = existingLayer;\n    const dependencies = context._layerDeps;\n    const metaInf = context.metaInf();\n    if (!existingLayer) {\n        instances = layerFactory.getLayerInstance(definition);\n        toArray(instances).forEach((inst, i) => {\n            inst.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: namespaces[i]\n            });\n            inst.store(context.store());\n        });\n    }\n    const layers = {};\n    const instanceArr = toArray(instances);\n    definition = toArray(definition);\n    definition.reduce((acc, def, idx) => {\n        const instance = instanceArr[idx];\n        instance.config(def);\n        instance.valueParser(context.valueParser());\n        instance.dependencies(dependencies);\n        instance.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        if (def.name) {\n            instance.alias(def.name);\n        }\n        layers[instance.alias()] = instance;\n        return acc;\n    }, {});\n    return layers;\n};\n\nexport const resolveEncodingTransform = (layerInst, store) => {\n    const encodingTransform = layerInst.config().encodingTransform || {};\n    const resolvable = encodingTransform.resolvable;\n    let depArr = [];\n    if (resolvable) {\n        const resolved = resolvable(store);\n        depArr = resolved.depArr;\n        layerInst.encodingTransform(resolved.fn);\n    } else if (encodingTransform instanceof Function) {\n        layerInst.encodingTransform(encodingTransform);\n    }\n    return depArr;\n};\n\nexport const createLayers = (context, layerDefinitions) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    const store = {\n        layers: {},\n        components: {\n            unit: context\n        }\n    };\n    let layerIndex = 0;\n    let layers = layerDefinitions.sort((a, b) => a.order - b.order).reduce((layersArr, layerDef, i) => {\n        const mark = layerDef.mark;\n        const definition = layerDef.def;\n        const markId = `${mark}-${i}`;\n        const defArr = toArray(definition);\n        defArr.forEach((def) => {\n            def.order = layerDef.order + layerIndex;\n        });\n        layerIndex += defArr.length;\n        const instances = getLayerFromDef(context, definition, layersMap[markId], i);\n        store.layers = Object.assign(store.layers, instances);\n        const instanceValues = Object.values(instances);\n        layersArr = layersArr.concat(...instanceValues);\n        layersMap[markId] = instanceValues;\n        markSet[markId] = markId;\n        return layersArr;\n    }, []);\n    store.unit = context;\n    const layerdeps = {};\n    layers.forEach((layer) => {\n        const depArr = resolveEncodingTransform(layer, store);\n        layerdeps[layer.alias()] = depArr;\n    });\n\n    const order = getDependencyOrder(layerdeps);\n    layers = order.map(name => store.layers[name]);\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n    return layers;\n};\n\nexport const sanitizeLayerDef = (layerDefs) => {\n    const sanitizedDefs = [];\n    layerDefs.forEach((layerDef, i) => {\n        const def = layerDef.def;\n        const mark = layerDef.mark;\n        if (!def) {\n            const sConf = layerFactory.getSerializedConf(layerDef.mark, layerDef);\n            if (!sConf.name) {\n                sConf.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push({\n                mark: layerDef.mark,\n                def: sConf\n            });\n        } else {\n            if (!def.name) {\n                def.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push(layerDef);\n        }\n    });\n    return sanitizedDefs;\n};\n\nexport const attachDataToLayers = (layers, dm, transformedDataModels) => {\n    layers.forEach((layer) => {\n        const dataSource = layer.config().source;\n        const dataModel = dataSource instanceof Function ? dataSource(dm) :\n            (transformedDataModels[dataSource] || dm);\n        if (layer.data() !== dataModel) {\n            layer.data(dataModel);\n        }\n    });\n};\n\nexport const attachAxisToLayers = (axes, layers, layerAxisIndex) => {\n    layers.forEach((layer) => {\n        const layerId = layer.id();\n        const axesObj = {};\n\n        objectIterator(axes, (key) => {\n            const axisInf = layerAxisIndex[layerId];\n            if (axisInf) {\n                axes[key] && (axesObj[key] = axes[key][axisInf[key] || 0]);\n            }\n        });\n        Object.keys(axesObj).length && layer.axes(axesObj);\n    });\n};\n\nexport const getLayerAxisIndex = (layers, fields) => {\n    const layerAxisIndex = {};\n    layers.forEach((layer) => {\n        const { axis, encoding } = layer.config();\n        const id = layer.id();\n        ['x', 'y'].forEach((type) => {\n            let index;\n            const field = defaultValue(getObjProp(axis, type), encoding[type] && encoding[type].field);\n            if (fields[type]) {\n                index = fields[type].findIndex(fieldInst => fieldInst.getMembers().indexOf(field) !== -1);\n            } else {\n                index = 0;\n            }\n            !layerAxisIndex[id] && (layerAxisIndex[id] = {});\n            layerAxisIndex[id][type] = index;\n        });\n    });\n    return layerAxisIndex;\n};\n\nexport const unionDomainFromLayers = (layers, axisFields, layerAxisIndex, fieldsConfig) => {\n    let domains = {};\n    layers = layers.filter(layer => layer.getDataDomain() !== null);\n    layers.forEach((layer) => {\n        let domainValues = {};\n        const config = layer.config();\n        const encoding = config.encoding;\n        const layerDomain = layer.getDataDomain();\n        const layerId = layer.id();\n\n        if (layerDomain !== null && config.calculateDomain !== false) {\n            domainValues = Object.entries(layerDomain);\n            domains = domainValues.reduce((fieldDomain, domain) => {\n                const encodingType = domain[0];\n                const field = encoding[encodingType].field;\n                const axisIndex = layerAxisIndex[layerId][encodingType];\n                if (encodingType in axisFields) {\n                    const fieldStr = `${axisFields[encodingType][axisIndex]}`;\n                    fieldDomain[fieldStr] = fieldDomain[fieldStr] || [];\n                    fieldDomain[fieldStr] = unionDomain(([fieldDomain[fieldStr], domain[1]]),\n                        fieldsConfig[field].def.subtype ? fieldsConfig[field].def.subtype :\n                                fieldsConfig[field].def.type);\n                } else {\n                    fieldDomain[encodingType] = domain[1];\n                }\n                return fieldDomain;\n            }, domains);\n        }\n    });\n    return domains;\n};\n\nexport const renderLayers = (context, container, layers, measurement) => {\n    context._lifeCycleManager.notify({ client: layers, action: 'beforedraw', formalName: 'layer' });\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const orderedLayers = context.layers().sort((a, b) => a.config().order - b.config().order);\n    const layerParentGroup = makeElement(container, 'g', [1], `${classPrefix}-layer-group`);\n    const layerDepOrder = getDependencyOrder(context._layerDepOrder);\n    const groups = {};\n    makeElement(layerParentGroup, 'g', orderedLayers, null, {\n        update: (group, layer) => {\n            groups[layer.alias()] = {\n                group,\n                layer\n            };\n        }\n    });\n    const layerSeq = layerDepOrder.map(name => groups[name]);\n    layerSeq.forEach((o) => {\n        const layer = o.layer;\n        const group = o.group;\n        layer.measurement(measurement);\n        layer.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        layer.config().render !== false && layer.mount(group.node());\n    });\n    return this;\n};\n\nexport const getNearestDimensionalValue = (context, position) => {\n    const fields = context.fields();\n    if (!fields.x.length || !fields.y.length) {\n        return null;\n    }\n    const data = context.data();\n    const axes = context.axes();\n    const fieldsConfig = data.getFieldsConfig();\n    const xField = getObjProp(fields, 'x', 0).getMembers()[0];\n    const yField = getObjProp(fields, 'y', 0).getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n\n    const entryVal = [['x', xFieldType, xField], ['y', yFieldType, yField]].find(entry =>\n        entry[1] === DimensionSubtype.CATEGORICAL || entry[1] === DimensionSubtype.TEMPORAL);\n\n    if (!entryVal || (xFieldType !== MeasureSubtype.CONTINUOUS && yFieldType !== MeasureSubtype.CONTINUOUS)) {\n        return null;\n    }\n    const field = entryVal[2];\n    const index = fieldsConfig[field].index;\n    let key = axes[entryVal[0]][0].invert(position[entryVal[0]]);\n    if (entryVal[1] === DimensionSubtype.TEMPORAL) {\n        const filterData = [...new Set(data.getData().data.map(d => d[index]))];\n        key = getNearestValue(filterData, key);\n    }\n\n    return key !== undefined ? [[field], [key]] : null;\n};\n\nexport const getLayersBy = (layers, searchBy, value) => layers.filter((layer) => {\n    const name = searchBy === 'type' ? layer.constructor.formalName() : layer.alias();\n    return name === value;\n});\n\nexport const removeLayersBy = (layers, searchBy, value) => {\n    layers.filter((inst) => {\n        const name = searchBy === 'type' ? inst.config().mark : inst.alias();\n        if (name === value) {\n            inst.remove();\n            return false;\n        }\n        return true;\n    });\n};\n\nexport const createSideEffectGroup = (container, className) => makeElement(container, 'g', [1], className).node();\n\nexport const createRenderPromise = (unit) => {\n    const renderedPromise = unit._renderedPromise;\n    renderedPromise.then(() => {\n        unit._renderedPromise = new Promise((resolve) => {\n            unit._renderedResolve = resolve;\n        });\n        createRenderPromise(unit);\n    });\n};\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const GRID_LINE_PARENT_GROUP_CLASS = 'grid-lines';\nexport const GRID_BAND_PARENT_GROUP_CLASS = 'grid-bands';\nexport const GRID_PARENT_GROUP = 'grid-parent-group';\nexport const BAND = 'band';\nexport const TICK = 'tick';\nexport const GRID_BAND = 'gridBands';\nexport const GRID_LINE = 'gridLines';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const RETINAL_FIELDS = 'retinalFields';\nexport const PARENT_ALIAS = 'parentAlias';\nexport const LAYERS = 'layers';\nexport const CACHED_DATA = 'cachedData';\nexport const STORE = 'store';\n","import { getObjProp, defaultValue, makeElement, DimensionSubtype, DataModel } from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { layerFactory, LAYER_TYPES } from '@chartshq/visual-layer';\nimport {\n    GRID_BAND,\n    GRID_LINE,\n    GRID_BAND_PARENT_GROUP_CLASS,\n    GRID_LINE_PARENT_GROUP_CLASS,\n    GRID_PARENT_GROUP\n} from '../enums/constants';\n\nconst { BAR_LAYER, TICK_LAYER } = LAYER_TYPES;\n\nconst LINEAR = ScaleType.LINEAR;\n\nconst getLayerDefinition = (context, axes, type, orientation) => {\n    let encoding;\n    const config = context.config();\n    const { classPrefix, gridLines, gridBands } = config;\n    const gridLineColor = gridLines.color;\n    const zeroLineColor = gridLines.zeroLineColor;\n    const defClassName = type === GRID_BAND ? gridBands.defClassName : gridLines.defClassName;\n    const gridBandColor = gridBands[orientation].color;\n    const axis = axes[orientation][0];\n    const isLinearScale = axis.constructor.type() === LINEAR;\n\n    if (type === GRID_BAND && isLinearScale) {\n        encoding = {\n            [orientation]: `${orientation}value`,\n            [`${orientation}0`]: `${orientation}value0`\n        };\n    } else {\n        encoding = {\n            [orientation]: isLinearScale ? `${orientation}value` : `${orientation}dim`\n        };\n    }\n    encoding.color = {\n        value: (data, i) => {\n            const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n            if (type === GRID_BAND) {\n                return gridBandColor[i % 2];\n            }\n            return isNegativeDomain && data[orientation] === 0 ? zeroLineColor : gridLineColor;\n        }\n    };\n\n    return {\n        definition: {\n            defClassName: `${defClassName}-${orientation}`,\n            className: config.className,\n            name: orientation,\n            individualClassName: (data, i) => {\n                let className;\n                const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n                if (isNegativeDomain && data.y === 0 && type !== GRID_BAND) {\n                    className = `${classPrefix}-axis-zero-line`;\n                } else {\n                    className = `${classPrefix}-grid-${type}-${orientation}-${i % 2}`;\n                }\n                return className;\n            },\n            [`pad${orientation.toUpperCase()}`]: type === GRID_BAND ? 0 : undefined,\n            encoding\n        },\n        axes: {\n            [orientation]: axis\n        },\n        interactive: false\n    };\n};\n\nconst getDefaultVisibilty = (show, axis) => {\n    if (axis.constructor.type() === LINEAR) {\n        return show;\n    }\n    return false;\n};\n\nexport const getGridLayerDefinitions = (context, config, type) => ['x', 'y'].map((axisType) => {\n    const axes = context.axes();\n    if (!axes[axisType]) {\n        return null;\n    }\n    const show = defaultValue(config[axisType] && config[axisType].show,\n        getDefaultVisibilty(config.show, axes[axisType][0]));\n\n    return show ? getLayerDefinition(context, axes, type, axisType) : null;\n}).filter(d => d !== null);\n\nexport const getGridLayerData = (axes, fields, fieldsConfig) => {\n    const gridData = {};\n    ['x', 'y'].forEach((type) => {\n        let ticks = axes[type][0].getTickValues();\n        const subtype = getObjProp(fieldsConfig, getObjProp(fields, type, 0).getMembers()[0], 'def', 'subtype');\n        const jsonData = [];\n        const schema = [\n            {\n                name: 'yvalue',\n                type: 'measure'\n            }, {\n                name: 'xvalue',\n                type: 'measure'\n            },\n            {\n                name: 'yvalue0',\n                type: 'measure'\n            }, {\n                name: 'xvalue0',\n                type: 'measure'\n            }, {\n                name: 'xdim',\n                type: 'dimension',\n                subtype\n            }, {\n                name: 'ydim',\n                type: 'dimension',\n                subtype\n            }\n        ];\n        const len = Math.max(ticks.length);\n        ticks = subtype === DimensionSubtype.TEMPORAL ? ticks.map(d => d.getTime()) : ticks;\n        for (let i = 0; i < len; i += 1) {\n            jsonData.push({\n                [`${type}value`]: ticks[i],\n                [`${type}value0`]: ticks[i + 1],\n                [`${type}dim`]: ticks[i],\n                [`${type}dim`]: ticks[i]\n            });\n        }\n        gridData[type] = new DataModel(jsonData, schema);\n    });\n    return gridData;\n};\n\n// @todo Use dataSelect method to reuse instances when the method is fixed. #110\nexport const createGridLines = (instances = {}, createFn, definitions, iteratorFn) => {\n    const map = {};\n    definitions.forEach((def) => {\n        const name = def.definition.name;\n        let instance = instances[name];\n        if (!instance) {\n            instances[name] = instance = createFn(def);\n        }\n        iteratorFn(instance, def, name);\n        map[name] = 1;\n    });\n    for (const key in instances) {\n        if (!(key in map)) {\n            instances[key].remove();\n            delete instances[key];\n        }\n    }\n    return instances;\n};\n\nexport const createGridLineLayer = (context) => {\n    const vuConf = context.config();\n    const metaInf = context.metaInf();\n    const store = context.store();\n    const timeDiffs = context._timeDiffs;\n    [GRID_BAND, GRID_LINE].forEach((type) => {\n        let mark;\n        let config;\n        if (type === GRID_BAND) {\n            mark = BAR_LAYER;\n            config = vuConf.gridBands;\n        } else {\n            mark = TICK_LAYER;\n            config = vuConf.gridLines;\n        }\n        const definitions = getGridLayerDefinitions(context, config, type);\n\n        const sel = `_${type}Selection`;\n        context[sel] = createGridLines(context[sel], () => {\n            const inst = layerFactory.getLayerInstance({ mark });\n            inst.dependencies(context._layerDeps);\n            return inst;\n        }, definitions, (layer, atomicDef, key) => {\n            const definition = atomicDef.definition;\n            const sConf = layerFactory.getSerializedConf(mark, definition);\n            const axesObj = atomicDef.axes;\n            layer.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: `${metaInf.namespace}${type}${key}`\n            })\n                .store(store)\n                .config(sConf)\n                .dataProps({\n                    timeDiffs\n                })\n                .axes(axesObj);\n        });\n        context[`_${type}`] = Object.values(context[sel]);\n    });\n};\n\nexport const attachDataToGridLineLayers = (context) => {\n    const axes = context.axes();\n    const measurement = {\n        width: context.width(),\n        height: context.height()\n    };\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n    const gridLayerData = getGridLayerData(axes, context.fields(), context.data().getFieldsConfig());\n    [].concat(...gridBands, ...gridLines).forEach((inst) => {\n        inst.data(inst.axes().x ? gridLayerData.x : gridLayerData.y).measurement(measurement);\n    });\n};\n\nexport const renderGridLineLayers = (context, container) => {\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n\n    const gridLineParentGroup = makeElement(container, 'g', [1], `${classPrefix}-${GRID_PARENT_GROUP}`);\n    [[gridLines, `${classPrefix}-${GRID_LINE_PARENT_GROUP_CLASS}`],\n            [gridBands, `${classPrefix}-${GRID_BAND_PARENT_GROUP_CLASS}`]].forEach((entry) => {\n                const [instances, parentGroupClass] = entry;\n                const mountPoint = makeElement(gridLineParentGroup, 'g', [1], `.${parentGroupClass}`);\n                const className = `${parentGroupClass}-group`;\n                makeElement(mountPoint, 'g', instances, `.${className}`, {\n                    update: (group, instance) => {\n                        instance.dataProps({ timeDiffs: context._timeDiffs }).mount(group.node());\n                    }\n                });\n            });\n};\n","import { CLASSPREFIX, CONSOLIDATED } from './enums/constants';\n\n/**\n * Returns the default configuration of the visual unit\n * @return {Object} Default configuration of visual unit\n */\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'visual-unit',\n    className: '',\n    trackerClassName: 'visual-unit-tracker',\n    gridLines: {\n        defClassName: 'axis-grid-lines',\n        className: '',\n        show: true,\n        color: '#efefef',\n        zeroLineColor: '#b6b6b6'\n    },\n    gridBands: {\n        defClassName: 'axis-grid-bands',\n        className: '',\n        show: false,\n        y: {\n            color: ['#fff', '#fbfbfb']\n        },\n        x: {\n            color: ['#fff', '#f9f9f9']\n        }\n    },\n    arcLayerClassName: 'layer-arc',\n    interaction: {\n        tooltip: {\n            mode: CONSOLIDATED\n        }\n    },\n    sideEffectClassName: 'side-effect-container'\n};\n","import { mergeRecursive, DataModel } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { CONFIG, LAYERDEFS, TRANSFORM, DATA, LAYERS, TRANSFORMEDDATA } from './enums/reactive-props';\nimport { sanitizeLayerDef } from './helper';\n\nexport default {\n    [CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig) => (\n                mergeRecursive(oldConfig || mergeRecursive({}, defaultConfig), config)\n            )\n        }\n    },\n    [LAYERDEFS]: {\n        value: null,\n        meta: {\n            preset: layerDef => sanitizeLayerDef(layerDef)\n        }\n    },\n    [TRANSFORM]: {\n        value: null\n    },\n    [LAYERS]: {\n        value: null\n    },\n    [DATA]: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel,\n            preset: (data, context) => {\n                if (context._cache) {\n                    const cachedData = context.cachedData();\n                    context.cachedData([...cachedData, data]);\n                } else {\n                    const oldData = context.data();\n                    oldData && oldData.unsubscribe('propagation');\n                    context.cachedData([data]);\n                }\n            }\n        }\n    },\n    [TRANSFORMEDDATA]: {\n        value: null,\n        meta: {\n            addAsMethod: false\n        }\n    }\n};\n","export const CONFIG = 'config';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const MOUNT = 'mount';\nexport const TRANSFORM = 'transform';\nexport const TRANSFORMEDDATA = 'transformedData';\nexport const DATADOMAIN = 'dataDomain';\nexport const FIELDS = 'fields';\nexport const LAYERAXISINDEX = 'layerAxisIndex';\nexport const LAYERS = 'layers';\nexport const DOMAIN = 'domain';\n\n","import { STATE_NAMESPACES, temporalFields } from 'muze-utils';\nimport * as PROPS from './enums/reactive-props';\nimport {\n    transformDataModels,\n    getDimensionMeasureMap,\n    attachDataToLayers,\n    attachAxisToLayers,\n    unionDomainFromLayers\n} from './helper';\n\nimport { createGridLineLayer, attachDataToGridLineLayers } from './helper/grid-lines';\n\nconst removeExitLayers = (layerDefs, context) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    layerDefs.forEach((layerDef, i) => {\n        const id = `${layerDef.mark}-${i}`;\n        markSet[id] = true;\n    });\n\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n};\n\nexport const calculateDomainListener = (context, namespace) => () => {\n    const domain = unionDomainFromLayers(context.layers(), context.fields(), context._layerAxisIndex,\n        context.data().getFieldsConfig());\n    context.store().commit(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${namespace}`, domain);\n};\n\nexport const listenerMap = (context, namespace, metaInf) => ([\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.CONFIG}`],\n        listener: ([, config]) => {\n            config && context.firebolt().config(config.interaction);\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.LAYERDEFS}`],\n        listener: ([, layerDefs]) => {\n            const fieldsVal = context.fields();\n            if (layerDefs && fieldsVal) {\n                removeExitLayers(layerDefs, context);\n                const axes = context.axes();\n                if (axes.x || axes.y) {\n                    const props = [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${metaInf.rowIndex}0`,\n                        `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${metaInf.colIndex}0`];\n                    const store = context.store();\n                    const listenerInf = {\n                        namespace: namespace.local,\n                        key: 'gridLineListener'\n                    };\n                    store.unsubscribe(listenerInf);\n                    store.registerChangeListener(props, () => {\n                        attachDataToGridLineLayers(context);\n                    }, false, listenerInf);\n                }\n\n                context.addLayer(layerDefs);\n                context._lifeCycleManager.notify({\n                    client: context.layers(),\n                    action: 'initialized',\n                    formalName: 'layer'\n                });\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.DATA}`],\n        listener: ([, dataModel]) => {\n            const axesObj = context.axes();\n            const timeDiffs = {};\n            const timeDiffsByField = {};\n\n            Object.entries(temporalFields(dataModel)).forEach(([fieldName, fieldObj]) => {\n                timeDiffsByField[fieldName] = fieldObj.minimumConsecutiveDifference();\n            });\n\n            Object.entries(context.fields()).forEach(([type, [field]]) => {\n                if (field) {\n                    const timeDiff = timeDiffsByField[`${field}`];\n                    if (timeDiff) {\n                        timeDiffs[type] = timeDiff;\n                        axesObj[type].forEach(axis => axis.minDiff(timeDiff));\n                    }\n                }\n            });\n\n            context._timeDiffsByField = timeDiffsByField;\n            context._timeDiffs = timeDiffs;\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.CONFIG}`],\n        listener: () => {\n            createGridLineLayer(context);\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.DATA}`,\n            `${namespace.local}.${PROPS.TRANSFORM}`],\n        listener: ([, dataModel], [, transform]) => {\n            if (dataModel) {\n                const dataModels = transformDataModels(transform, dataModel);\n                context.store().commit(`${namespace.local}.${PROPS.TRANSFORMEDDATA}`, dataModels);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.TRANSFORMEDDATA}`,\n            `${namespace.local}.${PROPS.LAYERS}`],\n        listener: ([, transformedData], [, layers]) => {\n            const layerAxisIndexVal = context._layerAxisIndex;\n            const axesVal = context.axes();\n            const dataModel = context.data();\n            if (transformedData && layers && axesVal && layerAxisIndexVal) {\n                context._lifeCycleManager.notify({ client: layers, action: 'beforeupdate', formalName: 'layer' });\n                const model = context.store().model;\n                layers.forEach(lyr => lyr.disableUpdate());\n                attachDataToLayers(layers, dataModel, transformedData);\n                model.lock();\n                layers.forEach((lyr) => {\n                    lyr.enableUpdate().domain(lyr._domain);\n                });\n                model.unlock();\n                context._dimensionMeasureMap = getDimensionMeasureMap(layers,\n                    dataModel.getFieldsConfig(), context.retinalFields());\n                attachAxisToLayers(axesVal, layers, layerAxisIndexVal);\n                context._lifeCycleManager.notify({ client: layers, action: 'updated', formalName: 'layer' });\n            }\n        }\n    }\n]);\n","import { FACET_BY_FIELDS, RETINAL_FIELDS, PARENT_ALIAS, LAYERS, CACHED_DATA } from './enums/constants';\n\nexport const PROPS = {\n    [FACET_BY_FIELDS]: {},\n    [RETINAL_FIELDS]: {},\n    [PARENT_ALIAS]: {},\n    [LAYERS]: {},\n    [CACHED_DATA]: {},\n    detailFields: {},\n    axes: {\n        defaultValue: {\n            x: [],\n            y: []\n        }\n    },\n    fields: {},\n    metaInf: {},\n    registry: {},\n    width: {},\n    height: {},\n    parentContainerInf: {},\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import { CommonProps } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { DATA } from '../enums/reactive-props';\n\nexport const initSideEffects = (sideEffects, firebolt) => {\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            sideEffects[key] instanceof SpawnableSideEffect && sideEffects[key].drawingContext(() => {\n                const context = firebolt.context;\n                return context.getDrawingContext();\n            });\n            sideEffects[key].valueParser(firebolt.context.valueParser());\n        }\n    }\n};\n\nexport const clearActionHistory = (context) => {\n    const actionHistory = context._actionHistory;\n    for (const key in actionHistory) {\n        if (actionHistory[key].isMutableAction) {\n            delete context._actionHistory[key];\n        }\n    }\n};\n\nexport const dispatchQueuedSideEffects = (context) => {\n    const queuedSideEffects = context._queuedSideEffects;\n    Object.entries(queuedSideEffects).forEach((entry) => {\n        const sideEffect = entry[1];\n        context.dispatchSideEffect(sideEffect.name, ...sideEffect.params);\n    });\n    context._queuedSideEffects = {};\n};\n\nexport const registerListeners = (firebolt) => {\n    const context = firebolt.context;\n    const store = context.store();\n\n    store.registerImmediateListener([`local.units.${context.metaInf().namespace}.${DATA}`], (dataModel) => {\n        const dm = dataModel[1];\n\n        if (dm) {\n            firebolt.createSelectionSet(firebolt.context.data().getData().uids);\n            firebolt.initializeSideEffects();\n            const originalData = firebolt.context.cachedData()[0];\n            firebolt.attachPropagationListener(originalData);\n        }\n    });\n\n    store.registerChangeListener([`local.units.${context.metaInf().namespace}.${DATA}`], () => {\n        if (!firebolt.context.mount()) {\n            const originalData = firebolt.context.cachedData()[0];\n            originalData.unsubscribe('propagation');\n        }\n    });\n\n    context._layerDeps.throwback.registerChangeListener([CommonProps.ON_LAYER_DRAW],\n        ([, onlayerdraw]) => {\n            if (onlayerdraw) {\n                dispatchQueuedSideEffects(firebolt);\n                clearActionHistory(firebolt);\n            }\n        });\n};\n","import { DimensionSubtype } from 'muze-utils';\n\nconst getRangeFromData = (instance, selectionDataModel, propConfig) => {\n    let criteria;\n    const dataObj = selectionDataModel[0].getData();\n    const propCriteria = propConfig.payload.criteria;\n    const sourceIdentifiers = propConfig.sourceIdentifiers;\n    const schema = dataObj.schema;\n    const fieldMap = instance.data().getFieldsConfig();\n    const data = dataObj.data;\n    const isActionSourceSame = instance.id() === propConfig.sourceId;\n\n    if (isActionSourceSame) {\n        criteria = propCriteria;\n    } else {\n        criteria = (sourceIdentifiers !== null) ? schema.reduce((acc, obj, index) => {\n            let range;\n            const field = obj.name;\n            const fieldObj = fieldMap[field];\n            const type = fieldObj && (fieldObj.def.subtype ? fieldObj.def.subtype : fieldObj.def.type);\n            const isDimension = type === DimensionSubtype.CATEGORICAL;\n\n            if (!fieldObj) {\n                return acc;\n            }\n\n            if (!isDimension) {\n                range = [Math.min(...data.map(d => d[index])), Math.max(...data.map(d => d[index]))];\n            } else {\n                range = data.map(d => d[index]);\n            }\n            acc[field] = range;\n            return acc;\n        }, {}) : null;\n    }\n    return criteria;\n};\n\nexport const payloadGenerator = {\n    brush: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const criteria = getRangeFromData(instance, selectionDataModel, propConfig);\n        const payload = Object.assign({}, propPayload);\n        payload.criteria = criteria;\n        return payload;\n    },\n\n    __default: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const sourceIdentifiers = propConfig.sourceIdentifiers;\n        const dataObj = selectionDataModel[0].getData();\n        let schema = dataObj.schema;\n        const payload = Object.assign({}, propPayload);\n        schema = dataObj.schema;\n        const data = dataObj.data;\n        const sourceFields = schema.map(d => d.name);\n        payload.criteria = !sourceIdentifiers && selectionDataModel[0].isEmpty() ? null :\n            [sourceFields, ...data];\n        payload.sourceFields = sourceIdentifiers ? sourceIdentifiers.getSchema().map(d => d.name) : [];\n        return payload;\n    }\n};\n\n","import { isSimpleObject, FieldType, DataModel } from 'muze-utils';\n\nconst getModelWithFacetData = (dm, data) => {\n    const dataObj = dm.getData();\n    const schema1 = dataObj.schema;\n    const data1 = dataObj.data;\n    const jsonData = [];\n    const schema2 = data[0].map(d => ({\n        name: `${d}`,\n        type: FieldType.DIMENSION\n    }));\n    const data2 = data[1];\n\n    data1.forEach((d) => {\n        const tuple = {};\n        schema1.forEach((obj, i) => {\n            tuple[obj.name] = d[i];\n        });\n        schema2.forEach((obj, i) => {\n            tuple[obj.name] = data2[i];\n        });\n        jsonData.push(tuple);\n    });\n\n    return new DataModel(jsonData, [...schema1, ...schema2]);\n};\n\nexport const propagateValues = (instance, action, config = {}) => {\n    let propagationData;\n    const payload = config.payload;\n    const selectionSet = config.selectionSet;\n    const propagationFieldInf = config.propagationFields[action] || {};\n    const propagationFields = propagationFieldInf.fields || [];\n    const append = propagationFieldInf.append;\n    const criteria = payload.criteria;\n    const context = instance.context;\n    const dataModel = context.cachedData()[0];\n    const sourceId = context.id();\n    const sideEfffects = instance.sideEffects();\n    const behaviourEffectMap = instance._behaviourEffectMap;\n    const mergedModel = selectionSet.mergedEnter.model;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    payload.sourceUnit = sourceId;\n    payload.action = action;\n    payload.sourceCanvas = context.parentAlias();\n    const propagationBehaviourMap = instance._propagationBehaviourMap;\n    const propagationBehaviour = propagationBehaviourMap[action] || action;\n\n    let propFields = [];\n    if (criteria === null) {\n        propagationData = null;\n    } else if (isSimpleObject(criteria)) {\n        propFields = Object.keys(criteria || {});\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    } else {\n        propFields = criteria[0];\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    }\n\n    const facetByFields = context.facetByFields();\n    if (propagationData !== null && propagationFields.length) {\n        const fields = propagationData.getData().schema.map(d => d.name);\n        propagationData = getModelWithFacetData(propagationData, facetByFields);\n        propFields = append ? [...fields, ...propagationFields] : propagationFields;\n        propagationData = propagationData.project(propFields);\n    }\n\n    let propagateInterpolatedValues = false;\n    if (propFields.length && propFields.every(field => fieldsConfig[field] &&\n        fieldsConfig[field].def.type === FieldType.MEASURE)) {\n        propagateInterpolatedValues = true;\n    }\n\n    const groupId = context.parentAlias();\n    payload.action = action;\n    const behaviourInstance = instance._actions.behavioural[propagationBehaviour];\n    const isMutableAction = behaviourInstance ? behaviourInstance.constructor.mutates() : false;\n\n    const filterFn = (entry, propagationConf) => {\n        const effects = behaviourEffectMap[entry.config.action];\n        const mutates = entry.config.groupId ?\n            effects.some(d => sideEfffects[d.name || d].constructor.mutates()) : true;\n        return entry.config.groupId !== propagationConf.groupId && mutates;\n    };\n\n    const sourceBehaviour = instance._actions.behavioural[action];\n    const mutates = sourceBehaviour ? sourceBehaviour.constructor.mutates() : false;\n    let propConfig = {\n        payload,\n        action,\n        criteria: propagationData,\n        isMutableAction: mutates,\n        propagateInterpolatedValues,\n        groupId,\n        sourceId: mutates ? groupId : sourceId,\n        filterFn,\n        enabled: (propConf, firebolt) => (action !== propagationBehaviour ?\n            propConf.payload.sourceCanvas === firebolt.context.parentAlias() : true)\n    };\n\n    dataModel.propagate(propagationData, propConfig, true);\n\n    if (action !== propagationBehaviour) {\n        propConfig = {\n            payload,\n            sourceId: isMutableAction ? groupId : sourceId,\n            criteria: propagationData,\n            isMutableAction,\n            propagateInterpolatedValues,\n            action: propagationBehaviour,\n            groupId,\n            applyOnSource: action === propagationBehaviour,\n            enabled: (propConf, firebolt) => propConf.payload.sourceCanvas !== firebolt.context.parentAlias(),\n            filterFn\n        };\n\n        dataModel.propagate(propagationData, propConfig, true, {\n            filterImmutableAction: (actionInf, propInf) => actionInf.groupId !== propInf.groupId\n        });\n    }\n};\n","import { FieldType } from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\nimport { registerListeners } from './helper';\nimport { payloadGenerator } from './payload-generator';\nimport { propagateValues } from './data-propagator';\n\n/**\n * This class manages the interactions of visual unit. It associates physical actions with\n * behavioural actions. It also propagates the behavioural actions to other datamodels.\n */\nexport default class UnitFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        registerListeners(this);\n    }\n\n    propagate (behaviour, payload, selectionSet, sideEffects) {\n        propagateValues(this, behaviour, {\n            payload,\n            selectionSet,\n            sideEffects,\n            propagationFields: this._propagationFields\n        });\n    }\n\n    getApplicableSideEffects (sideEffects, payload, propagationInf) {\n        const context = this.context;\n        const unitId = context.id();\n        const aliasName = context.parentAlias();\n        const propagationSourceCanvas = propagationInf.propPayload && propagationInf.propPayload.sourceCanvas;\n        const sourceUnitId = propagationInf.propPayload && propagationInf.propPayload.sourceUnit;\n        const sourceSideEffects = this._sourceSideEffects;\n        const sideEffectInstances = this.sideEffects();\n        const actionOnSource = sourceUnitId ? sourceUnitId === unitId : true;\n\n        const applicableSideEffects = payload.sideEffects ? [{\n            effects: payload.sideEffects,\n            behaviours: [payload.action]\n        }] : sideEffects;\n        applicableSideEffects.forEach((d) => {\n            let mappedEffects = d.effects;\n            mappedEffects = mappedEffects.filter((se) => {\n                const mutates = sideEffectInstances[se.name || se].constructor.mutates();\n                if (mutates && propagationInf.isMutableAction === false) {\n                    return false;\n                }\n                if (!actionOnSource && payload.criteria !== null) {\n                    const sideEffectChecker = sourceSideEffects[se.name || se];\n                    return sideEffectChecker ? sideEffectChecker(propagationInf.propPayload, context) : true;\n                }\n                if (propagationSourceCanvas === aliasName || actionOnSource) {\n                    return se.applyOnSource !== false;\n                }\n\n                return true;\n            });\n            d.effects = mappedEffects;\n        });\n        return applicableSideEffects;\n    }\n\n    shouldApplySideEffects (propagate) {\n        return propagate === false;\n    }\n\n    onDataModelPropagation () {\n        return (data, config) => {\n            let isSourceFieldPresent = true;\n            let isMutableAction = false;\n            const propPayload = config.payload;\n            const sourceIdentifiers = config.sourceIdentifiers;\n            const enabledFn = config.enabled;\n            const action = config.action;\n            const payloadFn = payloadGenerator[action] || payloadGenerator.__default;\n\n            if (sourceIdentifiers) {\n                const fieldsConfig = sourceIdentifiers.getFieldsConfig();\n                const sourceIdentifierFields = Object.keys(fieldsConfig);\n                const propFields = Object.keys(data[0].getFieldsConfig());\n                if (!Object.values(fieldsConfig).some(d => d.def.type === FieldType.MEASURE)) {\n                    isSourceFieldPresent = sourceIdentifierFields.some(d => propFields.indexOf(d) !== -1);\n                }\n            }\n\n            const payload = payloadFn(this.context, data, config);\n            const sourceBehaviours = this._sourceBehaviours;\n            const filterFn = sourceBehaviours[action] || sourceBehaviours['*'];\n            let enabled = true;\n\n            if (filterFn) {\n                enabled = filterFn(propPayload || {}, this.context);\n            }\n\n            if (enabledFn) {\n                enabled = enabledFn(config, this) && enabled !== false;\n            }\n\n            if (enabled) {\n                const effects = this._behaviourEffectMap[action];\n                const sideEffectInstances = this.sideEffects();\n                isMutableAction = config.groupId ?\n                    effects.some(d => sideEffectInstances[d.name || d].constructor.mutates()) : config.isMutableAction;\n\n                const propagationInf = {\n                    propagate: false,\n                    data,\n                    propPayload,\n                    sourceIdentifiers,\n                    persistent: false,\n                    isSourceFieldPresent,\n                    sourceId: config.propagationSourceId,\n                    isMutableAction: config.isMutableAction\n                };\n\n                this._actionHistory[action] = {\n                    payload,\n                    propagationInf,\n                    isMutableAction\n                };\n                this.dispatchBehaviour(action, payload, propagationInf);\n            }\n        };\n    }\n\n    prepareSelectionSets (behaviours) {\n        const data = this.context.data();\n        if (data) {\n            this.createSelectionSet(data.getData().uids, behaviours);\n        }\n        return this;\n    }\n\n    initializeSideEffects () {\n        if (this.context.data()) {\n            super.initializeSideEffects();\n        }\n        return this;\n    }\n\n    remove () {\n        this.context.cachedData()[0].unsubscribe('propagation');\n        return this;\n    }\n}\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    Store,\n    setAttrs,\n    getUniqueId,\n    getQualifiedClassName,\n    selectElement,\n    transactor,\n    makeElement,\n    registerListeners,\n    generateGetterSetters,\n    getDataModelFromIdentifiers,\n    isSimpleObject,\n    transposeArray,\n    CommonProps,\n    toArray,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { actionBehaviourMap } from './firebolt/action-behaviour-map';\nimport {\n    renderLayers,\n    getNearestDimensionalValue,\n    removeLayersBy,\n    getLayersBy,\n    getLayerFromDef,\n    getLayerAxisIndex,\n    sanitizeLayerDef,\n    createSideEffectGroup,\n    resolveEncodingTransform,\n    createRenderPromise\n} from './helper';\nimport { renderGridLineLayers } from './helper/grid-lines';\nimport localOptions from './local-options';\nimport { listenerMap, calculateDomainListener } from './listener-map';\nimport {\n    DOMAIN\n} from './enums/reactive-props';\nimport { PROPS } from './props';\nimport UnitFireBolt from './firebolt';\nimport { initSideEffects } from './firebolt/helper';\nimport './styles.scss';\n\nconst FORMAL_NAME = 'unit';\n\n/**\n * Visual Unit is hierarchical component created by {@link VisualGroup}. This component accepts layer definitions\n * and creates concrete layer instances from them, binds data and attaches axis to them. It also retreives the domain\n * from the layers and unions them and sets them on corresponding axis instances. This also creates the parent svg\n * groups for all the layers and delegates the rendering to all the layers.\n *\n * @public\n * @module VisualUnit\n * @class\n */\nexport default class VisualUnit {\n\n    /**\n     * Creates instance of visualization unit.\n     *\n     * @param {Object} registry  Component registry\n     * @param {Object} dependencies  Dependencies required by visual unit.\n     */\n    constructor (registry, dependencies) {\n        this._id = getUniqueId();\n        this._dependencies = dependencies;\n        this._layerDeps = {\n            throwback: new Store({\n                [CommonProps.ON_LAYER_DRAW]: false\n            }),\n            smartLabel: dependencies.smartLabel,\n            lifeCycleManager: dependencies.lifeCycleManager\n        };\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        createRenderPromise(this);\n        this._layerDeps.throwback.registerChangeListener([CommonProps.ON_LAYER_DRAW], () => {\n            this._renderedResolve();\n            this._lifeCycleManager.notify({ client: this.layers(), action: 'drawn', formalName: 'layer' });\n        });\n\n        this._lifeCycleManager = dependencies.lifeCycleManager;\n        this._layersMap = {};\n        this._gridLinesSelection = {};\n        this._gridBandsSelection = {};\n        this._gridLines = [];\n        this._gridBands = [];\n        this._layerNamespaces = {};\n        this._layerAxisIndex = {};\n        this._transformedDataModels = {};\n        layerFactory.setLayerRegistry(registry.layerRegistry);\n        generateGetterSetters(this, PROPS);\n        this.registry(registry);\n        this.cachedData([]);\n    }\n\n    static formalName () {\n        return FORMAL_NAME;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: {}\n            },\n            localOptions\n        ];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            const metaInf = this.metaInf();\n            this.store().append(`${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}`, {\n                [`${metaInf.namespace}`]: null\n            });\n            const localNs = `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`;\n            transactor(this, localOptions, this.store().model, {\n                namespace: localNs\n            });\n            registerListeners(this, listenerMap, {\n                local: localNs,\n                global: STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE\n            }, {\n                rowIndex: metaInf.rowIndex,\n                colIndex: metaInf.colIndex\n            });\n            this.firebolt(new UnitFireBolt(this, {\n                physical: physicalActions,\n                behavioural: behaviouralActions,\n                physicalBehaviouralMap: actionBehaviourMap\n            }, sideEffects, behaviourEffectMap));\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Static helper for creates a unit instance\n     *\n     * @param {Object} [id] optional unique identifier for a unit; , id is calculated internally\n     * @param {DataModel} data instance of datamodel\n     * @param {Array.<Layer>} layers layer configuration\n     * @param {Object} config configurtion for the visual unit\n     * @return {VisualUnit} Instance of a unit\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this visual unit. Firebolt dispatches the behavioural actions\n     * when any physical action happens on the elements of visual unit.\n     *\n     * @public\n     *\n     * @return {Firebolt} Instance of firebolt.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Returns the unique id of this visual unit.\n     *\n     * @public\n     * @return {string} Unique identifier.\n     */\n    id () {\n        return this._id;\n    }\n\n    lockModel () {\n        this._store.model.lock();\n        return this;\n    }\n\n    unlockModel () {\n        this._store.model.unlock();\n        return this;\n    }\n\n    timeDiffsByField (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._timeDiffsByField;\n    }\n\n    /**\n     * Renders the visual unit. It creates the layout and renders the axes and layers.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    render (container) {\n        const config = this.config();\n        const { className, defClassName, sideEffectClassName, classPrefix } = config;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const width = this.width();\n        const height = this.height();\n        const containerSelection = selectElement(container).style('position', 'relative');\n\n        this._rootSvg = makeElement(containerSelection, 'svg', [null], className)\n                        .style('width', `${width}px`).style('height', `${height}px`);\n\n        const node = this._rootSvg.node();\n        setAttrs(node, {\n            width,\n            height,\n            class: qualifiedClassName.join(' ')\n        });\n        renderGridLineLayers(this, node);\n        renderLayers(this, node, this.layers(), {\n            width,\n            height\n        });\n        this._sideEffectGroup = createSideEffectGroup(node, `${classPrefix}-${sideEffectClassName}`);\n        const firebolt = this.firebolt();\n        initSideEffects(firebolt.sideEffects(), firebolt);\n        return this;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Caches all the datamodels in an array from the next `data()` call on visual unit until `clearCaching()` or\n     * `resetData()` is called on it.\n     *\n     * @public\n     * @return {VisualUnit} Instance of visual unit.\n     */\n\n    enableCaching () {\n        this._cache = true;\n        return this;\n    }\n\n    /**\n     * Clears all the previous cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    clearCaching () {\n        this._cache = false;\n        this.cachedData([this.cachedData()[0]]);\n        return this;\n    }\n\n    /**\n     * Returns the drawing information from visual unit.Drawing context contains the dimensions of unit and the svg\n     * container of the visual unit.\n     *\n     * @public\n     *\n     * @return {Object} Drawing information.\n     *      ```\n     *          {\n     *              htmlContainer: // Html container of svg container of the visual unit\n     *              svgContainer: // Root svg container\n     *              width: // Width of the visual unit\n     *              height: // Height of the visual unit\n     *              sideEffectGroup: // Svg group for drawing side effect elements.\n     *              parentContainer: // Parent html container of the visual unit.\n     *              xOffset: // x offset space from the starting x position of the container,\n     *              yOffset: // y offset space from the starting y position of the container\n     *          }\n     *      ```\n     */\n    getDrawingContext () {\n        const rootSvg = this._rootSvg && this._rootSvg.node();\n        const width = this.width();\n        const height = this.height();\n        const { el, dimensions } = this.parentContainerInf();\n        return {\n            htmlContainer: this.mount(),\n            svgContainer: rootSvg,\n            width,\n            height,\n            sideEffectGroup: this._sideEffectGroup,\n            parentContainer: el,\n            parentContainerDimensions: dimensions,\n            xOffset: 0,\n            yOffset: 0\n        };\n    }\n\n    /**\n     * Returns the serialized configuration of visual unit.\n     *\n     * @return {Object} serialized configuration\n     */\n    serialize () {\n        return {\n            layers: this.layers().map(layer => layer.serialize()),\n            config: this.config(),\n            axes: this.axes().map(axis => axis.serialize())\n        };\n    }\n\n    mount (...mount) {\n        if (mount.length) {\n            this._mount = mount[0];\n            this.render(mount[0]);\n            this.firebolt().mapActionsAndBehaviour();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     * Adds a new layer to the visual unit. It takes a layer definition and creates layer instances from them. It does\n     * not render the layers. It returns the layer instances in an array. If the layer definition is a composite layer,\n     * then multiple layer instances will be returned in the array.\n     *\n     * To add a layer in the unit,\n     * ```\n     *      unit.addLayer({\n     *          name: 'bullet',\n     *          mark: 'bar',\n     *          encoding: {\n     *              x: 'Year',\n     *              y: 'Acceleration',\n     *              color: 'Origin'\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} layerDef Definition of new layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    addLayer (layerDefinition) {\n        const layerDefinitions = sanitizeLayerDef(toArray(layerDefinition));\n\n        const layersMap = this._layersMap;\n        const markSet = {};\n        const store = {\n            layers: {},\n            components: {\n                unit: this\n            }\n        };\n        let layerIndex = 0;\n        let startIndex = [].concat(...Object.values(this._layersMap)).length;\n        const metaInf = this.metaInf();\n        const props = this._layerNamespaces;\n        const layers = layerDefinitions.sort((a, b) => a.order - b.order).reduce((layersArr, layerDef) => {\n            const definition = layerDef.def;\n            const markId = definition.name;\n            const defArr = toArray(definition);\n            const namespaces = [];\n            defArr.forEach((def) => {\n                def.order = layerDef.order + layerIndex;\n                const namespace = `${metaInf.namespace}${startIndex}`;\n                if (!layersMap[markId]) {\n                    startIndex++;\n                    if (definition.calculateDomain !== false) {\n                        props[`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${DOMAIN}.${namespace}`] = true;\n                    }\n                }\n                namespaces.push(namespace);\n            });\n            layerIndex += defArr.length;\n            const instances = getLayerFromDef(this, definition, layersMap[markId], namespaces);\n            store.layers = Object.assign(store.layers, instances);\n            const instanceValues = Object.values(instances);\n            layersArr = layersArr.concat(...instanceValues);\n            layersMap[markId] = instanceValues;\n            markSet[markId] = markId;\n            return layersArr;\n        }, []);\n\n        store.unit = this;\n        const layerdeps = {};\n        const layersArr = [].concat(...Object.values(this._layersMap));\n\n        layersArr.forEach((layer) => {\n            const alias = layer.alias();\n            store.layers[alias] = layer;\n            layerdeps[alias] = [];\n        });\n        layers.forEach((layer) => {\n            const depArr = resolveEncodingTransform(layer, store);\n            layerdeps[layer.alias()] = depArr;\n        });\n\n        this._layerDepOrder = layerdeps;\n        this._layerAxisIndex = Object.assign(this._layerAxisIndex, getLayerAxisIndex(layers, this.fields()));\n        const stateStore = this.store();\n\n        stateStore.unsubscribe({\n            key: 'calculateDomainListener',\n            namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`\n        });\n        stateStore.registerImmediateListener(Object.keys(props), calculateDomainListener(this, metaInf.namespace),\n            false, {\n                key: 'calculateDomainListener',\n                namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`\n            });\n        this.layers(layersArr);\n        return layers;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    remove () {\n        const lifeCycleManager = this._dependencies.lifeCycleManager;\n        lifeCycleManager.notify({ client: this, action: 'beforeremove', formalName: 'unit' });\n        this.store().unsubscribe({\n            namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${this.metaInf().namespace}`\n        });\n        selectElement(this.mount()).remove();\n        this.firebolt().remove();\n        // Remove layers\n        lifeCycleManager.notify({ client: this.layers(), action: 'beforeremove', formalName: 'layer' });\n        this.layers().forEach(layer => layer.remove());\n        lifeCycleManager.notify({ client: this.layers(), action: 'removed', formalName: 'layer' });\n        lifeCycleManager.notify({ client: this, action: 'removed', formalName: 'unit' });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     *\n     * @memberof VisualUnit\n     */\n    getDataModelFromIdentifiers (identifiers, mode, parentModel) {\n        if (identifiers === null) {\n            return null;\n        }\n        const dataModel = parentModel || this.data();\n        return getDataModelFromIdentifiers(dataModel, identifiers, mode);\n    }\n\n    /**\n     * Resets the data of visual unit to original data model. It also clears the cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    resetData () {\n        this.data(this.cachedData()[0]);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getSourceInfo () {\n        return {\n            dimensionMeasureMap: this._dimensionMeasureMap,\n            fields: this.fields(),\n            data: this.data(),\n            axes: this.axes()\n        };\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getDefaultTargetContainer () {\n        const { classPrefix, defClassName } = this.config();\n        return [`.${classPrefix}-${defClassName}`];\n    }\n\n    /**\n     * Returns an array of layer instances which matches the supplied mark type.\n     *\n     * @public\n     *\n     * @param {string} type Mark type of layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    getLayersByType (type) {\n        const layers = getLayersBy(this.layers(), 'type', type);\n        return layers;\n    }\n\n    /**\n     * Returns the layer instance which matches the supplied layer name. If no layer is found, then it returns\n     * undefined.\n     *\n     * @public\n     * @param {string} name Name of layer.\n     *\n     * @return {VisualUnit} Layer instance.\n     */\n    getLayerByName (name) {\n        const layers = getLayersBy(this.layers(), 'name', name);\n        return layers[0];\n    }\n\n    /**\n     * Returns the point located nearest to the supplied x and y position. It returns the unique identifiers of the\n     * point. This function also accepts an additional configuration `getAllPoints` inside `config` object in the third\n     * argument which if set to true, then it returns the identifiers of all the points which falls on the nearest\n     * x value or y value if any one of the field is a dimension. Additionally, a target property is also returned\n     * which contains the identifier of the nearest point. If no nearest point is found, then it returns identifier\n     * as null.\n     *\n     * @public\n     *\n     * @param {number} x X Position of the point from where nearest point is to be found.\n     * @param {number} y Y Position of the point from where nearest point is to be found.\n     * @param {Object} config Additional configuration options.\n     * @param {boolean} config.getAllPoints If true, then returns all the points nearest to the x value or y value if\n     * it is dimension.\n     * @param {Object} config.data Data associated with the nearest point.\n     * @return {Object} Nearest point information\n     * ```\n     *      {\n     *          id: [['Origin'], ['USA'], ['Japan']], // Identifiers of all the points closest to the x value.\n     *          target: [['Origin'], ['Japan']] // Identifier of the nearest point.\n     *      }\n     * ```\n     */\n    getNearestPoint (x, y, config) {\n        let pointObj = {\n            id: null\n        };\n        const dimValue = getNearestDimensionalValue(this, {\n            x,\n            y\n        });\n\n        if (dimValue !== null && config.getAllPoints) {\n            pointObj.id = dimValue;\n            const pointInf = this.getMarkInfFromLayers(x, y, config);\n            pointObj.target = pointInf && pointInf.id ? pointInf.id : pointObj.id;\n            return pointObj;\n        }\n\n        const markInf = this.getMarkInfFromLayers(x, y, config) || { id: null };\n        pointObj = Object.assign({}, markInf);\n\n        pointObj.target = markInf.id;\n        return pointObj;\n    }\n\n    getMarkInfFromLayers (x, y, args) {\n        const layers = this.layers();\n        const len = layers.length;\n        let point = null;\n        // Iterate through the layers array and fetch the nearest point from each layer. If a valid\n        // nearest point is found from any layer, then return that point.\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            const config = layer.config();\n            if (config.interactive !== false) {\n                point = layer.getNearestPoint(x, y, args);\n            }\n            if (point) {\n                return point;\n            }\n        }\n        return point;\n    }\n\n    /**\n     * Get the information of all the marks such as x, y position and size from supplied identifiers. It\n     * returns an array of points whose data matches the given identifiers.\n     *\n     * @public\n     *\n     * @param {Array|Object} identifiers Field names and their corresponding values.\n     * ```\n     * identifiers can be given in an array of array,\n     *      ['Origin', 'Name'], // Names of the fields supplied in first array\n     *      ['USA', 'ford'], // Data values of each field supplied in rest of the arrays.\n     *      ['Japan', 'ford']\n     * or in an object,\n     *      {\n     *          Origin: ['USA']\n     *      }\n     * ```\n     * @param {Object} config Optional configurations which decides which information of the mark will\n     * be retrieved.\n     * @param {boolean} [config.getAllAttrs = false] If true, then returns all the information of each mark.\n     * @param {boolean} [config.getBBox = false] If true, then returns the bounding box of each mark.\n     *\n     * @return {Array} Array of objects containing the information of each point.\n     * ```\n     * By default, the method returns the array of points in this structure,\n     *      [\n     *          {\n     *              x: 20,\n     *              y: 100,\n     *              width: 200,\n     *              height: 100\n     *          }\n     *      ]\n     * If 'config.getAllAttrs' is true, then it returns all the information of each mark,\n     *      [\n     *      // Positions of mark on initial state of transition.\n     *          enter: {\n     *              x: 0,\n     *              y: 0\n     *          },\n     *          // Final positions of the mark\n     *          update: {\n     *              x: 20,\n     *              y: 10\n     *          },\n     *          style: // css styles of each mark\n     *          source: [200, 'USA'] // Row information of each mark\n     *          id: 20 // Row id of each mark\n     *      ]\n     * ```\n     */\n    getPlotPointsFromIdentifiers (identifiers, config = {}) {\n        let points = [];\n        let parsedIdentifiers = identifiers;\n        if (identifiers === null) {\n            return [];\n        }\n        const layers = this.layers();\n        const len = layers.length;\n        if (isSimpleObject(identifiers)) {\n            parsedIdentifiers = [Object.keys(identifiers)];\n            parsedIdentifiers = [...parsedIdentifiers, ...transposeArray(Object.values(identifiers))];\n        }\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            if (layer.config().interactive !== false) {\n                points = [...points, ...layer.getPointsFromIdentifiers(parsedIdentifiers, config)];\n            }\n        }\n        return points;\n    }\n\n    /**\n     * Removes the layer instance which matches the supplied layer name.\n     *\n     * @public\n     * @param {string} name Name of layer\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayerByName (name) {\n        removeLayersBy('name', name);\n        return this;\n    }\n\n    /**\n     * Removes all the layer instances which matches the supplied mark type.\n     *\n     * @public\n     * @param {string} type Mark type of layer.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayersByType (type) {\n        removeLayersBy('type', type);\n        return this;\n    }\n}\n","import { DataModel } from 'muze-utils';\n\nimport { retriveDomainFromData } from './group-utils';\n\n/**\n * Gets name of fields form the variables\n *\n * @param {*} fields1\n * @param {*} [fields2=[]]\n *\n */\nconst getFieldNames = (fields1, fields2 = []) => [fields1, fields2].map(fields => fields.reduce((acc, d) => {\n    acc = [...acc, ...d.getMembers()];\n    return acc;\n}, []));\n\n/**\n * Creates a selected datamodel from a parent datamodel and a set of field names\n *\n * @param {Object} datamodel provided as input\n * @param {Array} fieldNames schema  names\n * @param {Array} fieldValues values of those schema names to be selected\n * @return {Object} creates a new selected datamodel\n */\nconst createSelectedDataModel = (datamodel, fieldNames, fieldValues) =>\n    datamodel.select(fields => fieldNames.every((field, k) => fields[field].value === fieldValues[k]));\n\n/**\n *\n *\n * @param {*} facets\n * @param {*} keyArray\n *\n */\nconst uniqueKeyGenerator = (keyArray, context, depth = 0, val = []) => {\n    const {\n        facets,\n        dataModel,\n        uniqueValues\n    } = context;\n\n    // Get unique keys for the next depth recursively if required\n    if (facets[depth + 1]) {\n        const field = facets[depth];\n        uniqueValues.forEach((value) => {\n            const newDm = dataModel.select(fields => fields[field].value === value);\n            const nextDepthUniqueValues = retriveDomainFromData(newDm, facets[depth + 1]);\n            const newContext = {\n                facets,\n                dataModel: newDm,\n                uniqueValues: nextDepthUniqueValues\n            };\n\n            uniqueKeyGenerator(keyArray, newContext, depth + 1, [...val, value]);\n        });\n    } else {\n        uniqueValues.forEach((value) => {\n            keyArray.push([...val, value]);\n        });\n    }\n};\n\n/**\n * projects row model based on the set of row and/or column and other projection fields\n *\n * @param {Object} datamodel provided as input\n * @return {Object} Projected datamodel\n */\nconst projectRows = (datamodel, projections) => {\n    const {\n        allColumnProjections,\n        rowProjections,\n        optionalProjections\n    } = projections;\n\n    if (rowProjections.length > 0) {\n        return rowProjections.map((projectFields) => {\n            const [projFieldNames, colProjFieldNames] = getFieldNames(projectFields, allColumnProjections);\n            return datamodel.project([...projFieldNames, ...colProjFieldNames, ...optionalProjections]);\n        });\n    }\n    return [datamodel];\n};\n\n/**\n * Adds the datamodels to current row index based on column fields\n *\n * @param {Array} context current context\n * @param {Array} valueCellCreator List of facets applied to the current datamodel\n */\nconst pushToMatrix = (context, valueCellCreator) => {\n    let cells = [];\n    const {\n        matrix,\n        datamodel,\n        facetInfo,\n        fieldInfo\n    } = context;\n    // Get projected fields for current row\n    const {\n        rowProjections,\n        colProjections,\n        optionalProjections\n    } = fieldInfo;\n    const {\n        rowIndex,\n        columnIndex\n    } = facetInfo;\n    const rowProj = rowProjections[(rowIndex) % rowProjections.length] || [];\n\n    // Get the cells for the matrix from the return function of the callback on the datamodel.\n    // callback function -> (datamodel, {projections, indices}, facets)\n    if (colProjections.length > 0) {\n        cells = colProjections.map((projectFields, projIdx) => {\n            const [colProjFieldNames, rowProjFieldNames] = getFieldNames(projectFields, rowProj);\n            const projectedDm = datamodel.project([...colProjFieldNames, ...rowProjFieldNames, ...optionalProjections]);\n            const projections = { rowFields: rowProj, columnFields: projectFields };\n            const indices = { rowIndex, columnIndex: columnIndex * colProjections.length + projIdx };\n\n            return valueCellCreator(projectedDm, { projections, indices }, facetInfo);\n        });\n    } else {\n        const projections = { rowFields: rowProj, columnFields: [] };\n        const indices = { rowIndex, columnIndex };\n\n        cells = [valueCellCreator(datamodel, { projections, indices }, facetInfo)];\n    }\n\n    matrix[rowIndex] = matrix[rowIndex] || [];\n    matrix[rowIndex].push(...cells);\n};\n\n/**\n * Gets Matrixes for corresponding datamodel, facets and projections\n *\n * @param {Object} dataModel input datamodel\n * @param {Object} fieldMap corresponding fieldmap\n * @param {Array} facetsAndProjections contains the set of facets and projections for the matrices\n * @param {Function} valueCellCreator Callback executed after datamodels are prepared after sel/proj\n * @return {Object} set of matrices with the corresponding row and column keys\n */\nexport const getMatrixModel = (dataModel, facetsAndProjections, valueCellCreator) => {\n    let rowDataModels = [];\n    const rowKeys = [];\n    const columnKeys = [];\n    const allColumnProjections = [];\n    const matrix = [];\n    const facetInfo = [];\n\n    const fieldInfo = Object.assign({}, facetsAndProjections);\n    const {\n        rowFacets,\n        colFacets,\n        colProjections\n    } = fieldInfo;\n\n    colProjections.forEach((colProj) => {\n        allColumnProjections.push(...colProj);\n    });\n    fieldInfo.allColumnProjections = allColumnProjections;\n\n    // Performing row selection and projection\n    if (rowFacets.length > 0) {\n        // Get unique values for the root level of facet\n        const field = rowFacets[0].toString();\n        const firstLevelRowKeys = retriveDomainFromData(dataModel, field);\n\n        // Get unique keys in the form of an array of arrays for each row\n        uniqueKeyGenerator(rowKeys, { facets: rowFacets, dataModel, uniqueValues: firstLevelRowKeys });\n\n        // Apply selection -> projection -> row datamodels\n        rowKeys.forEach((val) => {\n            // Create faceted datamodel\n            const [rowFacetFieldNames] = getFieldNames(rowFacets);\n            const selectedDataModel = createSelectedDataModel(dataModel, rowFacetFieldNames, val);\n\n            // Project the datamodel based on the number of projections (based on last levels)\n            const newProjectedDataModels = projectRows(selectedDataModel, fieldInfo);\n            rowDataModels.push(...newProjectedDataModels);\n\n            newProjectedDataModels.forEach(() => {\n                facetInfo.push([rowFacets, val]);\n            });\n        });\n    } else {\n        // No row facets, hence only row projection\n        rowDataModels.push(...projectRows(dataModel, fieldInfo));\n    }\n\n    // Maintaining set of row datamodels for column resolution\n    rowDataModels = rowDataModels.length > 0 ? rowDataModels : [[]];\n\n    // Performing column selection and projection\n    if (colFacets.length > 0) {\n        const colFacetNames = colFacets.map(d => `${d}`);\n        // Get unique values for the root level of facet\n        const field = colFacetNames[0];\n        const firstLevelColumnKeys = retriveDomainFromData(dataModel, field);\n\n        // Get unique keys to create faceted datamodels: this time for columns\n        uniqueKeyGenerator(columnKeys, {\n            facets: colFacetNames,\n            dataModel,\n            uniqueValues: firstLevelColumnKeys\n        });\n        // For each row in the datamodel, apply selection -> projection -> push the projection to matri\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            columnKeys.forEach((val, cIndex) => {\n                matrix[rIndex] = matrix[rIndex] || [];\n\n                // If datamodel is not present in current row, choose parent datamodel\n                const datamodel = dme instanceof DataModel ? dme : dataModel;\n\n                // Selection is made on the datamodel for the current row\n                const selectedDataModel = createSelectedDataModel(datamodel, colFacetNames, val);\n                const context = {\n                    matrix,\n                    datamodel: selectedDataModel,\n                    facetInfo: {\n                        rowFacets: facetInfo[rIndex],\n                        colFacets: [colFacets, val],\n                        rowIndex: rIndex,\n                        columnIndex: cIndex\n                    },\n                    fieldInfo\n                };\n                pushToMatrix(context, valueCellCreator);\n            });\n        });\n    } else {\n        // No column facets, hence only row projection\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            const context = {\n                matrix,\n                datamodel: dme || dataModel,\n                facetInfo: {\n                    rowFacets: facetInfo[rIndex],\n                    colFacets: [[], []],\n                    rowIndex: rIndex,\n                    columnIndex: 0\n                },\n                fieldInfo\n            };\n\n            pushToMatrix(context, valueCellCreator);\n        });\n    }\n\n    // Getting column keys\n    const transposedColKeys = columnKeys.length > 0 ? columnKeys[0].map((col, i) =>\n                    columnKeys.map(row => row[i])) : columnKeys;\n\n    return { matrix, rowKeys, columnKeys: transposedColKeys };\n};\n","import { AxisOrientation } from '@chartshq/muze-axis';\nimport {\n    getObjProp,\n    FieldType,\n    STATE_NAMESPACES,\n    retrieveNearestGroupByReducers,\n    mergeRecursive,\n    createSelection\n} from 'muze-utils';\nimport { getMatrixModel } from './matrix-model';\nimport {\n    getCellKey,\n    isDistributionEqual,\n    mutateAxesFromMap,\n    getFieldsFromSuppliedLayers,\n    extractFields\n} from './group-utils';\nimport { ROW, ROWS, COLUMNS, COL, LEFT, RIGHT, TOP, BOTTOM, PRIMARY, SECONDARY, X, Y } from '../enums/constants';\n\n/**\n * Updates row and column cells with the geom cell corresponding to the facet keys\n *\n * @param {*} resolver\n * @param {*} facets\n */\nconst updateCells = (resolver, facets, geomCell) => {\n    [ROW, COL].forEach((field) => {\n        const cells = resolver[`${field}Cells`]();\n        const facetKey = facets[`${field}Facets`][1].join();\n\n        !cells[facetKey] && (cells[facetKey] = []);\n        cells[facetKey].push(geomCell);\n        resolver[`${field}Cells`](cells);\n    });\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} datamodel\n * @param {*} fieldInfo\n * @param {*} facets\n *\n */\nexport const createValueCells = (context, datamodel, fieldInfo, facets) => {\n    const {\n        projections,\n        indices\n    } = fieldInfo;\n    const {\n        rowFields,\n        columnFields\n    } = projections;\n    const {\n         rowIndex,\n         columnIndex\n    } = indices;\n    const {\n        suppliedLayers,\n        cell: GeomCell,\n        resolver,\n        config,\n        encoder,\n        detailFields\n    } = context;\n    const axes = resolver.axes();\n    const cacheMaps = resolver.cacheMaps();\n    const matrixLayers = resolver.matrixLayers();\n    const labelManager = resolver.dependencies().smartlabel;\n    const horizontalAxis = resolver.horizontalAxis();\n    const verticalAxis = resolver.verticalAxis();\n    const datamodelTransform = resolver.datamodelTransform();\n    const {\n        entryCellMap,\n        exitCellMap\n    } = cacheMaps;\n    const layerConfigArr = encoder.getLayerConfig({ columnFields, rowFields }, suppliedLayers || []);\n    const axesCreators = { config, labelManager, axes, cacheMaps };\n\n    fieldInfo.normalizedColumns = verticalAxis.fields;\n    fieldInfo.normalizedRows = horizontalAxis.fields;\n\n    const groupAxes = encoder.createAxis(axesCreators, fieldInfo, context);\n\n    matrixLayers[rowIndex] = matrixLayers[rowIndex] ? matrixLayers[rowIndex] : [];\n    matrixLayers[rowIndex][columnIndex] = layerConfigArr;\n\n    // return from map if already there otherwise create and put in map\n    const geomCellKey = getCellKey(rowIndex, columnIndex);\n    const fields = {\n        y: rowFields,\n        x: columnFields\n    };\n\n    const allFacets = [\n        [...facets.rowFacets[0], ...facets.colFacets[0]],\n        [...facets.rowFacets[1], ...facets.colFacets[1]]\n    ];\n    const geomCell = !exitCellMap.has(geomCellKey) ? new GeomCell() : exitCellMap.get(geomCellKey);\n\n    geomCell.data(datamodel)\n                    .axes(groupAxes)\n                    .fields(fields)\n                    .transform(datamodelTransform)\n                    .detailFields(detailFields)\n                    .facetByFields(allFacets);\n    entryCellMap.set(geomCellKey, geomCell);\n    exitCellMap.delete(geomCellKey);\n\n    updateCells(resolver, facets, geomCell);\n\n    return entryCellMap.get(geomCellKey);\n};\n\n/**\n * Creates axis cells based on the set of axes\n *\n * @param {Selection} selection Contains a selection of the axis units\n * @param {Array} axes Actual axis units\n * @param {number} axisIndex 0-> primary axis, 1-> secondary axis(when dual axis is made)\n * @param {Object} cells Contains a collection of the cells\n * @return {Object} return either set of axis/blank cells depending on the config\n */\n\nconst createAxisCells = (selection, axes, axisIndex, cells) =>\n    createSelection(selection, axis => axis, axes, (item, i) => i + item.reduce((e, n) => {\n        const id = n.id + axisIndex;\n        return e + id;\n    }, '')).map((axis) => {\n        if (axis && axis[axisIndex]) {\n            const axisInst = axis[axisIndex];\n            const { orientation, show } = axisInst.config();\n\n            return new cells.AxisCell().source(axisInst).config({\n                isOffset: orientation === AxisOrientation.LEFT || orientation === AxisOrientation.TOP,\n                show\n            });\n        }\n        return new cells.BlankCell().config({ show: false });\n    });\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @retur\n */\nconst axisPlaceholderGn = (context, selObj, cells) => {\n    const {\n        matrices\n    } = context;\n    const {\n        axesMatrix\n    } = matrices;\n\n    return (type, axisFrom) => {\n        const axes = axesMatrix[`${type}`];\n\n        if (axes && axes.length) {\n            if (type === X || type === Y) {\n                const fieldNames = type === Y ? ROWS : COLUMNS;\n\n                [PRIMARY, SECONDARY].forEach((fieldType, index) => {\n                    const selObjProp = `${fieldNames}${fieldType}`;\n                    let axisIndex = index;\n                    let axesForDraw = axes;\n                    if (axisFrom === RIGHT || axisFrom === BOTTOM) {\n                        axisIndex = 1 - axisIndex;\n                    }\n                    if (!getObjProp(axes, 0, axisIndex)) {\n                        axesForDraw = [];\n                    }\n                    selObj[selObjProp] = createAxisCells(selObj[selObjProp], axesForDraw, axisIndex, cells);\n                });\n            } else {\n                selObj.rowsPrimary = createAxisCells(selObj.rowPrime, axes.map(() => []), 0, cells);\n                selObj.columnsPrimary = createAxisCells(selObj.colPrime, axes[0], 0, cells);\n            }\n        }\n        return selObj;\n    };\n};\n\n/**\n * Creates header cells based on the set of headers\n *\n * @param {Object} selection Contains a selection of the header units\n * @param {string} headers Contains a list of the headers\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} return either set of header cells depending on the config\n */\nconst createTextCells = (selection, headers, cells, labelManager) => createSelection(selection,\n    label => new cells.TextCell({}, { labelManager }).source(label), headers, (key, i) => key + i);\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @param {*} labelManager\n *\n */\nconst headerPlaceholderGn = (context, selectionObj, cells, labelManager) => {\n    const {\n        axis,\n        keys,\n        type,\n        facet\n    } = context;\n    const counter = axis.length / keys.length;\n    const selectionKeys = keys.length ? axis.map((d, i) => keys[Math.floor(i / counter)]) : [];\n\n    return createSelection(selectionObj[`${type}Headers`], keySet => keySet, selectionKeys,\n        (keySet, i) => `${keySet.join(',')}-${i}`)\n                    .map(keySet => createTextCells(null, keySet, cells, labelManager)\n                                    .map((cell, k, i) => cell.source(keySet[i]).config(facet)));\n};\n\n/**\n * Creates a set of placeholders as a part of selection object\n *\n * @param {Array} normalizedOptions contains normalized rows and columns\n * @param {Array} matrices contains axis and value matrices\n * @param {aArrayny} projections contains set of row and column projections\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} Creates a set of placeholders as a part of selections\n */\nconst generatePlaceholders = (context, cells, labelManager) => {\n    let selectionObj;\n    const {\n        matrices,\n        fields,\n        facetsAndProjections,\n        selection,\n        facet,\n        encoders,\n        resolver\n    } = context;\n    const {\n        rows,\n        columns\n    } = fields;\n    const {\n        valuesMatrix\n    } = matrices;\n    const {\n        rowProjections,\n        colProjections\n    } = facetsAndProjections;\n    const {\n        rowKeys,\n        columnKeys\n    } = valuesMatrix;\n    const takeAxisFrom = encoders.simpleEncoder._axisFrom;\n    const takeHeaderFrom = encoders.simpleEncoder._headerFrom;\n\n    selectionObj = selection || {};\n\n    ['pie', X, Y].forEach((axis) => {\n        const axisFrom = axis === X ? takeAxisFrom.column : takeAxisFrom.row;\n        selectionObj = axisPlaceholderGn(context, selectionObj, cells)(axis, axisFrom);\n    });\n\n    const {\n        rowsPrimary,\n        rowsSecondary,\n        columnsPrimary,\n        columnsSecondary\n    } = selectionObj;\n\n    const rowAxis = rowsPrimary && rowsPrimary.getObjects().length ? rowsPrimary.getObjects() :\n        (rowsSecondary && rowsSecondary.getObjects().length ? rowsSecondary.getObjects() : []);\n    const colAxis = columnsPrimary && columnsPrimary.getObjects().length ? columnsPrimary.getObjects() :\n        (columnsSecondary && columnsSecondary.getObjects().length ? columnsSecondary.getObjects() : []);\n\n    const headerConfig = [\n        { type: LEFT, section: rows[0], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: RIGHT, section: rows[1], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: TOP, section: columns[0], axis: colAxis, headerFrom: takeHeaderFrom.column },\n        { type: BOTTOM, section: columns[1], axis: colAxis, headerFrom: takeHeaderFrom.column }\n    ];\n\n    headerConfig.forEach((config, index) => {\n        let keys;\n        let length;\n        const {\n            type,\n            section,\n            axis,\n            headerFrom\n        } = config;\n\n        if (index < 2) {\n            keys = rowKeys;\n            length = rowProjections.length > 0 ? rowProjections.length : 1;\n        } else {\n            keys = columnKeys;\n            length = colProjections.length > 0 ? colProjections.length : 1;\n        }\n        keys = keys.map(arr => arr.map(val => resolver.valueParser()(val)));\n        if (section.length && headerFrom === type && axis && keys.length) {\n            const hContext = { axis, length, type };\n            let headers = [];\n            if (index < 2) {\n                hContext.keys = keys;\n                hContext.facet = facet.rows;\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            } else {\n                hContext.facet = facet.columns;\n                hContext.keys = keys[0].map((key, i) => keys.map(e => e[i]));\n\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            }\n            selectionObj[`${type}Headers`] = headers;\n        } else {\n            selectionObj[`${type}Headers`] = null;\n        }\n    });\n    return selectionObj;\n};\n\n/**\n * Generates matrices\n *\n * @param {Object} config Configuration to generate matrices\n * @param {Array} matrices Matrices containing the set of visual units and axes units\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} contains a collection of matrices\n */\nexport const generateMatrices = (context, matrices, cells, labelManager) => {\n    const {\n        unitHeight,\n        unitWidth,\n        facetsAndProjections,\n        normalizedRows,\n        normalizedColumns,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n     } = context;\n    const placeholderContext = {\n        fields: {\n            rows: normalizedRows,\n            columns: normalizedColumns\n        },\n        matrices,\n        facetsAndProjections,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n    };\n    // Generate placeholders for all matrices\n    const selectionObj = generatePlaceholders(placeholderContext, cells, labelManager);\n    const {\n        columnsPrimary,\n        columnsSecondary,\n        rowsPrimary,\n        rowsSecondary,\n        leftHeaders,\n        topHeaders,\n        bottomHeaders,\n        rightHeaders\n    } = selectionObj;\n    const [rowPrime, rowSec, colPrime, colSec] = [rowsPrimary, rowsSecondary, columnsPrimary, columnsSecondary]\n        .map(d => (d ? d.getObjects() : []));\n    const [leftFacets, rightFacets] = [leftHeaders, rightHeaders]\n        .map(e => (e ? e.getObjects()\n                        .map(f => f.getObjects()) : []));\n    let rowPriority = rowSec.length ? 1 : -1;\n    rowPrime.length && rowPriority++;\n    let colPriority = colSec.length ? 1 : -1;\n    colPrime.length && colPriority++;\n\n    // Compute left matrix using left headers and the axes on the rows\n    let leftMatrix = leftFacets.length ? leftFacets.map((d, i) => {\n        rowPrime[i] = rowPrime[i] ? [rowPrime[i]] : [];\n        return [...d, ...rowPrime[i]];\n    }) : (rowPrime ? rowPrime.map(d => [d]) : []);\n\n    // Compute right matrix using right headers and the axes on the rows\n    const rightMatrix = rowSec.length ? rowSec.map((d, i) => [d, ...(rightFacets[i] || [])]) : (rightFacets.length ?\n        rightFacets.map(d => [...d]) : []);\n\n    const topMatrix = [];\n    if (topHeaders) {\n        const headers = topHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                topMatrix[i] = topMatrix[i] || [];\n                topMatrix[i].push(x);\n            });\n        });\n    }\n    // Compute top matrix using the top headers and axes on the columns\n    if (colPrime.length) {\n        topMatrix.push(colPrime);\n    }\n\n    // Bottom and right matrices are prepared using the user config.\n    let bottomMatrix = [];\n    if (colSec.length) {\n        bottomMatrix.push(colSec);\n    }\n    const currentBottomLength = bottomMatrix.length;\n    if (bottomHeaders) {\n        const headers = bottomHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                bottomMatrix[i + currentBottomLength] = bottomMatrix[i + currentBottomLength] || [];\n                bottomMatrix[i + currentBottomLength].push(x);\n            });\n        });\n    }\n\n    if (!leftMatrix.length && !rightMatrix.length) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        leftMatrix = [[cell]];\n    }\n\n    if (!topMatrix.length && (!bottomMatrix.length || !bottomMatrix[0].length)) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        bottomMatrix = [[cell]];\n    }\n\n    return {\n        rows: [leftMatrix, rightMatrix],\n        columns: [topMatrix, bottomMatrix],\n        selectionObj,\n        colPriority,\n        rowPriority\n    };\n};\n\n/**\n * Computes matrices for a group\n *\n * @param {Object} datamodel on which the matrices are to be computed\n * @param {Object} config configuration of the matrices\n * @param {Object} layerRegistry contains the registered layers\n * @return {Object} conputed matrices\n * @memberof MatrixResolver\n */\nexport const computeMatrices = (context, config) => {\n    const {\n        resolver,\n        datamodel,\n        componentRegistry,\n        encoders\n    } = context;\n    const {\n            globalConfig,\n            selection,\n            transform\n        } = config;\n    const groupBy = globalConfig.autoGroupBy;\n    const { smartlabel: labelManager } = resolver.dependencies();\n    const fieldMap = datamodel.getFieldsConfig();\n    const layerConfig = resolver.layerConfig();\n    const registry = resolver.registry();\n    const { fields: normalizedRows } = resolver.horizontalAxis();\n    const { fields: normalizedColumns } = resolver.verticalAxis();\n    const otherEncodings = resolver.optionalProjections(config, layerConfig);\n    const facetsAndProjections = resolver.getAllFields();\n    const matrixGnContext = {\n        // Configuration to be passed to generate the  different matrices.\n        // A common config is used for both value matrices and other matrices\n        normalizedColumns,\n        normalizedRows,\n        facetsAndProjections,\n        layers: layerConfig,\n        fieldMap,\n        otherEncodings,\n        encoders,\n        facet: globalConfig.facet || {},\n        axisFrom: globalConfig.axisFrom || {},\n        selection,\n        resolver\n    };\n    const cells = {\n        GeomCell: resolver.getCellDef(registry.GeomCell),\n        AxisCell: resolver.getCellDef(registry.AxisCell),\n        BlankCell: resolver.getCellDef(registry.BlankCell),\n        TextCell: resolver.getCellDef(registry.TextCell)\n    };\n    const isRowSizeEqual = isDistributionEqual(normalizedRows);\n    const isColumnSizeEqual = isDistributionEqual(normalizedColumns);\n\n    resolver.colCells({});\n    resolver.rowCells({});\n    resolver.datamodelTransform(transform || {});\n\n    // Cell creation begins here\n    resolver.resetSimpleAxes();\n\n    const {\n        entryCellMap\n    } = resolver.cacheMaps();\n    const newCacheMap = {\n        exitCellMap: entryCellMap,\n        entryCellMap: new Map()\n    };\n\n    resolver.cacheMaps(newCacheMap);\n\n    const valueCellContext = {\n        config: globalConfig,\n        suppliedLayers: encoders.simpleEncoder.serializeLayerConfig(resolver.layerConfig()),\n        resolver,\n        cell: cells.GeomCell,\n        encoder: encoders.simpleEncoder,\n        newCacheMap,\n        detailFields: config.detail\n    };\n    const fieldsConfig = datamodel.getFieldsConfig();\n    let groupedModel = datamodel;\n    if (!groupBy.disabled) {\n        const fields = getFieldsFromSuppliedLayers(valueCellContext.suppliedLayers, datamodel.getFieldsConfig());\n        const allFields = extractFields(facetsAndProjections, fields);\n\n        const dimensions = allFields.filter(field =>\n            fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n        const aggregationFns = groupBy.measures;\n        const measureNames = Object.keys(datamodel.getFieldspace().getMeasure());\n        const nearestAggFns = retrieveNearestGroupByReducers(datamodel, ...measureNames);\n        const resolvedAggFns = mergeRecursive(nearestAggFns, aggregationFns);\n\n        groupedModel = datamodel.groupBy(dimensions.length ? dimensions : [''], resolvedAggFns).project(allFields);\n    }\n\n    // return a callback function to create the cells from the matrix\n    const cellCreator = resolver.valueCellsCreator(valueCellContext);\n    // Creates value matrices from the datamodel and configs\n    const valueMatrixInfo = getMatrixModel(groupedModel, facetsAndProjections, cellCreator);\n\n    resolver.cacheMaps().exitCellMap.forEach((placeholder) => {\n        placeholder.remove();\n    });\n    resolver.cacheMaps().exitCellMap.clear();\n    resolver.valueMatrix(valueMatrixInfo.matrix);\n\n    const { xAxes, yAxes } = mutateAxesFromMap(resolver.cacheMaps(), resolver.axes());\n\n    resolver.axes({\n        x: xAxes,\n        y: yAxes\n    });\n    const store = resolver.store();\n\n    [xAxes, yAxes].forEach((axesArr, type) => {\n        const stateProps = {};\n        axesArr = axesArr || [];\n        axesArr.forEach((axes, idx) => {\n            axes.forEach((axis, axisIndex) => {\n                stateProps[`${idx}${axisIndex}`] = null;\n            });\n        });\n        store.append(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type ? 'y' : 'x'}`, stateProps);\n    });\n    resolver.createUnits(componentRegistry, config);\n\n    const matrices = {\n        valuesMatrix: valueMatrixInfo,\n        axesMatrix: resolver.axes()\n    };\n    // Create all matrices\n    const {\n        rows,\n        columns,\n        selectionObj,\n        rowPriority,\n        colPriority\n    } = generateMatrices(matrixGnContext, matrices, cells, labelManager);\n\n    resolver.rowMatrix(rows);\n    resolver.columnMatrix(columns);\n\n    return {\n        rows: resolver.rowMatrix(),\n        columns: resolver.columnMatrix(),\n        values: resolver.valueMatrix(),\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority: {\n            row: rowPriority,\n            col: colPriority\n        },\n        selection: selectionObj,\n        dataModels: {\n            groupedModel,\n            parentModel: datamodel\n        }\n    };\n};\n","export const RESOLVER_PROPS = {\n    dependencies: {},\n    units: {},\n    datamodelTransform: {},\n    layerConfig: {},\n    matrixLayers: {},\n    colCells: {},\n    rowCells: {},\n    rowMatrix: {},\n    columnMatrix: {},\n    valueMatrix: {},\n    encoder: {},\n    valueParser: {}\n};\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { generateGetterSetters, STATE_NAMESPACES } from 'muze-utils';\nimport {\n     initializeCacheMaps,\n     headerCreator,\n     extractUnitConfig,\n     setFacetsAndProjections\n} from './group-utils';\nimport {\n     ROW, COL, LEFT, RIGHT, COLOR, SIZE, SHAPE, DETAIL, CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS, INITIALIZED,\n     AXIS, UNIT, BEFORE_UPDATE, UPDATED, VALUE_MATRIX, FACET_HEADERS\n} from '../enums/constants';\nimport { createValueCells, computeMatrices } from './cell-creator';\nimport { RESOLVER_PROPS } from './resolver-props';\n\n/**\n * Resolves the matrices from configuration provided\n *\n * @export\n * @class MatrixResolver\n */\nexport default class MatrixResolver {\n\n    /**\n     * Creates an instance of MatrixResolver.\n     * @param {Object} dependencies needed to run the resolver\n     * @memberof MatrixResolver\n     */\n    constructor (dependencies) {\n        this._registry = {};\n        this._layerConfig = [];\n        this._matrixLayers = [];\n        this._dependencies = dependencies;\n        this._rowMatrix = [];\n        this._columnMatrix = [];\n        this._valueMatrix = [];\n        this._facets = { rowFacets: [], colFacets: [] };\n        this._projections = { rowProjections: [], colProjections: [] };\n        this._datamodelTransform = {};\n        this._units = [];\n        this._cacheMaps = {};\n        this._axes = {\n            x: {},\n            y: {},\n            color: [],\n            size: [],\n            shape: []\n        };\n        generateGetterSetters(this, RESOLVER_PROPS);\n        this.cacheMaps(initializeCacheMaps());\n    }\n\n    /**\n     * Set:  Registers placeholders, Get: return {Object} those placeholders\n     *\n     * @param {Object} placeholders cells that will construct the group\n     * @return {Object} Either current instance or the set of placeholders\n     * @memberof MatrixResolver\n     */\n    registry (...placeholders) {\n        if (placeholders.length) {\n            Object.entries(placeholders[0]).forEach((val) => {\n                this._registry[val[0]] = val[1];\n            });\n            return this;\n        }\n        return this._registry;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    cacheMaps (...maps) {\n        if (maps.length) {\n            [CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS].forEach((e) => {\n                this._cacheMaps[`${e}Map`] = maps[0][`${e}Map`] || this._cacheMaps[`${e}Map`];\n            });\n            return this;\n        }\n        return this._cacheMaps;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    axes (...axes) {\n        if (axes.length) {\n            this._axes = Object.assign({}, this._axes, axes[0]);\n            return this;\n        }\n        return this._axes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} facets\n     *\n     * @memberof MatrixResolver\n     */\n    facets (...facets) {\n        if (facets.length) {\n            Object.entries(facets[0]).forEach((e) => {\n                this._facets[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._facets;\n    }\n\n    /**\n     *\n     *\n     * @param {*} projections\n     *\n     * @memberof MatrixResolver\n     */\n    projections (...projections) {\n        if (projections.length) {\n            Object.entries(projections[0]).forEach((e) => {\n                this._projections[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._projections;\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @param {*} layerConfig\n     *\n     * @memberof MatrixResolver\n     */\n    optionalProjections (config, layerConfig) {\n        const otherEncodings = {};\n        const optionalProjections = [];\n        const otherEncodingTypes = [SIZE, COLOR, SHAPE];\n\n        otherEncodingTypes.forEach((type) => {\n            if (config[type] && config[type].field) {\n                const enc = config[type];\n                otherEncodings[type] = enc.field;\n                optionalProjections.push(enc.field);\n            }\n        });\n\n        if (config[DETAIL]) {\n            optionalProjections.push(...config.detail);\n        }\n\n        if (layerConfig.length) {\n            layerConfig.forEach((layer) => {\n                if (layer.encoding) {\n                    Object.values(layer.encoding).forEach((enc) => {\n                        if (enc && optionalProjections.indexOf(enc.field) === -1) {\n                            optionalProjections.push(enc.field ? enc.field : enc);\n                        }\n                    });\n                }\n            });\n        }\n        this.projections({ optionalProjections });\n        return otherEncodings;\n    }\n\n    /**\n     * return the normalized set of rows and facets and projections\n     *\n     * @param {Object} rows parameters needed to set horizontal axis consisiting of rows\n     * @return {Object} facets, projections and normalized rows\n     * @memberof MatrixResolver\n     */\n    horizontalAxis (rows, encoder) {\n        if (rows) {\n            this._horizontalAxis = setFacetsAndProjections(this, { type: ROW, fields: rows }, encoder);\n            return this;\n        }\n        return this._horizontalAxis;\n    }\n\n    /**\n     * return the normalized set of columns and facets and projections\n     *\n     * @param {Object} columns parameters needed to set vertical axis consisiting of columns\n     * @return {Object} facets, projections and normalized columns\n     * @memberof MatrixResolver\n     */\n    verticalAxis (columns, encoder) {\n        if (columns) {\n            this._verticalAxis = setFacetsAndProjections(this, { type: COL, fields: columns }, encoder);\n            return this;\n        }\n        return this._verticalAxis;\n    }\n\n    /**\n     * Gets the class definition of a particular cell type(if the particular type has been extended, that particular\n     * definition is returned)\n     *\n     * @param {Object} cell cell whose class definition is to be retrieved\n     * @return {Object} cell definition\n     * @memberof MatrixResolver\n     */\n    getCellDef (cell) {\n        const registry = this.registry();\n\n        Object.values(registry).forEach((e) => {\n            if (e.prototype instanceof cell) {\n                cell = e;\n            }\n        });\n        return cell;\n    }\n\n    /**\n     * return a visual cell creator along with its axis information to be injected to the datamodel creation\n     * function\n     *\n     * @param {Object} GeomCell Type of cell to be created\n     * @return {Object} Created cell\n     * @memberof MatrixResolver\n     */\n    valueCellsCreator (context) {\n        // reset matrix layers\n        this.matrixLayers([]);\n\n        return (datamodel, fieldInfo, facets) => createValueCells(context, datamodel, fieldInfo, facets);\n    }\n\n    /**\n     * Callback to be applied on each cell of a matrix of a particular type\n     *\n     * @param {string} matrixType type of matrix on which callback is to be applied\n     * @param {Function} callback function to be applied to each cell\n     * @memberof MatrixResolver\n     */\n    forEach (matrixType, callback) {\n        this[matrixType]().forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                callback(rIndex, cIndex, col);\n            });\n        });\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getAllFields () {\n        const retObj = this.projections();\n\n        Object.entries(this.facets()).forEach((e) => {\n            retObj[e[0]] = e[1];\n        });\n        return retObj;\n    }\n\n    /**\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    resetSimpleAxes () {\n        return this.axes({\n            x: new Set(),\n            y: new Set()\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} componentRegistry\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createUnits (componentRegistry, config) {\n        const {\n            globalConfig,\n            alias\n        } = config;\n        const {\n            layerRegistry,\n            sideEffectRegistry\n        } = componentRegistry;\n        const {\n            smartlabel: smartLabel,\n            lifeCycleManager\n        } = this.dependencies();\n        // Provide the source for the matrix\n        const units = [[]];\n        // Setting unit configuration\n        const unitConfig = extractUnitConfig(globalConfig || {});\n        const globalState = VisualUnit.getState()[0];\n        const globalStates = {};\n        const store = this.store();\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            let unit = el.source();\n            if (!unit) {\n                const namespace = `${i}${j}`;\n\n                unit = VisualUnit.create({\n                    layerRegistry,\n                    sideEffectRegistry\n                }, {\n                    smartLabel,\n                    lifeCycleManager\n                });\n                globalStates[namespace] = null;\n                unit.metaInf({\n                    rowIndex: i,\n                    colIndex: j,\n                    namespace\n                });\n                unit.store(store);\n                el.source(unit);\n            }\n            !units[i] && (units[i] = []);\n            units[i][j] = unit;\n            unit.parentAlias(alias);\n            unit.valueParser(this.valueParser());\n            el.config(unitConfig);\n        });\n\n        for (const key in globalState) {\n            store.append(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${key}`, globalStates);\n        }\n\n        lifeCycleManager.notify({ client: units, action: INITIALIZED, formalName: UNIT });\n        return this.units(units);\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    setDomains (config, datamodel, encoders) {\n        const {\n            color,\n            shape,\n            size,\n            globalConfig\n        } = config;\n        const groupBy = globalConfig.autoGroupBy;\n        const {\n            rowFacets,\n            colFacets\n        } = this.getAllFields();\n        const encoding = {\n            color,\n            shape,\n            size\n        };\n        const facetFields = [...rowFacets.map(e => e.toString()), ...colFacets.map(e => e.toString())];\n        const retContext = {\n            domains: encoders.simpleEncoder.getRetinalFieldsDomain(datamodel, encoding, facetFields, groupBy),\n            axes: this.axes(),\n            encoding\n        };\n        encoders.retinalEncoder.setCommonDomain(retContext);\n        return this;\n    }\n\n    resetFacetsAndProjections () {\n        this._facets = {};\n        this._projections = {};\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getRetinalAxes () {\n        const {\n            color,\n            shape,\n            size\n        } = this.axes();\n\n        return {\n            color: [...color],\n            shape: [...shape],\n            size: [...size]\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} type\n     *\n     * @memberof MatrixResolver\n     */\n    getSimpleAxes (type) {\n        return this.axes()[`${type}`];\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createRetinalAxes (fieldsConfig, config, encoders) {\n        const layerConfig = this.layerConfig();\n        this.optionalProjections(config, layerConfig);\n        const retinalAxes = encoders.retinalEncoder.createAxis({\n            fieldsConfig,\n            config,\n            axes: this.axes()\n        });\n        const {\n            lifeCycleManager\n        } = this.dependencies();\n\n        [COLOR, SHAPE, SIZE].forEach((e) => {\n            this.axes()[e] = retinalAxes[e];\n        });\n\n        lifeCycleManager.notify({ client: this.axes(), action: INITIALIZED, formalName: AXIS });\n        lifeCycleManager.notify({ client: this.units(), action: BEFORE_UPDATE, formalName: UNIT });\n\n        const units = [];\n        const matrixLayers = this.matrixLayers();\n\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            el.axes(retinalAxes);\n            el.source() && el.source().retinalFields(config);\n            el.layerDef(encoders.retinalEncoder.getLayerConfig(config, matrixLayers[i][j]));\n            el.updateModel();\n\n            units.push(el.source());\n        });\n\n        lifeCycleManager.notify({ client: units, action: UPDATED, formalName: UNIT });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} placeholders\n     * @param {*} fieldNames\n     *\n     * @memberof MatrixResolver\n     */\n    createHeaders (placeholders, fieldNames, config) {\n        let bottomLeft = [];\n        let bottomRight = [];\n        const {\n            rows,\n            columns\n        } = placeholders;\n        const {\n            smartlabel: labelManager,\n            lifeCycleManager\n        } = this.dependencies();\n        const {\n            showHeaders,\n            classPrefix\n        } = config;\n        const TextCell = this.getCellDef(this.registry().TextCell);\n        const BlankCell = this.getCellDef(this.registry().BlankCell);\n        const [leftRows, rightRows] = rows;\n        const [topCols, bottomCols] = columns;\n        const rowHeaders = fieldNames.rows;\n        const blankCellCreator = cell => new BlankCell().config({ show: cell.config().show });\n\n        // Headers and footers are created based on the rows. Thereafter, using the column information\n        // they are tabularized into the current structure\n        const headers = {\n            left: headerCreator(leftRows, rowHeaders[0], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager }),\n            right: headerCreator(rightRows, rowHeaders[1], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager })\n        };\n        const footers = {\n            left: leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : [],\n            right: rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []\n        };\n        const [topLeft, topRight] = [LEFT, RIGHT].map(type => topCols.map((col, i) => {\n            if (i === topCols.length - 1) {\n                return headers[type];\n            }\n            return footers[type];\n        }));\n\n        // Creating only bottom matrices if there is no information on the top\n        if (topCols.length === 0) {\n            [bottomLeft, bottomRight] = [LEFT, RIGHT].map(type => bottomCols.map((col, i) => {\n                if (i === 0) {\n                    return headers[type];\n                }\n                return footers[type];\n            }));\n        } else {\n            bottomLeft = bottomCols.map(() => (leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : []));\n            bottomRight = bottomCols.map(() => (rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []));\n        }\n\n        lifeCycleManager.notify({\n            client: [topLeft, topRight, bottomLeft, bottomRight],\n            action: INITIALIZED,\n            formalName: FACET_HEADERS\n        });\n\n        return { topLeft, topRight, bottomLeft, bottomRight };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @param {*} componentRegistry\n     * @param {*} encoders\n     *\n     * @memberof MatrixResolver\n     */\n    getMatrices (datamodel, config, componentRegistry, encoders) {\n        const context = {\n            datamodel,\n            componentRegistry,\n            encoders,\n            resolver: this\n        };\n\n        return computeMatrices(context, config);\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            return this;\n        }\n        return this._store;\n    }\n}\n","/**\n * This is a wrapper class over the matrix of cells which gets created in visual group. Visual Group creates left,\n * right, bottom and top and center matrices and wraps them using this class.\n *\n * @public\n * @class ValueMatrix\n */\nclass ValueMatrix {\n\n    /**\n     * Creates an instance of ValueMatrix.\n     *\n     * @param {Array} matrixArr Matrix array.\n     */\n    constructor (matrixArr) {\n        const instancesById = {};\n\n        this.matrix(matrixArr || []);\n        this.filter(() => true);\n\n        this.each((el, rIdx, cIdx) => {\n            const cellValue = el.valueOf();\n            if (cellValue && cellValue.id) {\n                const id = cellValue.id();\n                instancesById[id] = {\n                    instance: cellValue,\n                    rowIndex: rIdx,\n                    colIndex: cIdx\n                };\n            }\n        });\n\n        this.instancesById(instancesById);\n    }\n\n    instancesById (...id) {\n        if (id.length) {\n            this._instancesById = id[0];\n            return this;\n        }\n        return this._instancesById;\n    }\n\n    /**\n     * Returns the array of matrices contained in this instance.\n     *\n     * @public\n     * @return {Array} Array of matrices.\n     */\n    matrix (...matrix) {\n        if (matrix.length) {\n            this._matrix = matrix[0];\n            return this;\n        }\n        return this._matrix;\n    }\n\n    /**\n     * Sets a filter criteria. This filter criteria gets applied when each function is called.\n     *\n     * @public\n     * @param {Function} fn Filter function.\n     *\n     * @return {ValueMatrix} Instance of value matrix.\n     */\n    filter (...fn) {\n        if (fn.length) {\n            this._filterFn = fn[0];\n            return this;\n        }\n        return this._filterFn;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    width () {\n        let rowWidth = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowWidth = 0;\n            row.forEach((cell) => {\n                currentRowWidth += cell.getLogicalSpace().width;\n            });\n            rowWidth = Math.max(rowWidth, currentRowWidth);\n        });\n        return rowWidth;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    height () {\n        let rowHeight = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowHeight = 0;\n            row.forEach((cell) => {\n                currentRowHeight = Math.max(currentRowHeight, cell.getLogicalSpace().height);\n            });\n            rowHeight += currentRowHeight;\n        });\n        return rowHeight;\n    }\n\n    /**\n     * Iterates through the two dimensional matrix array and calls the given callback function with the cell instance,\n     * row index, column index and the matrix array.\n     *\n     * @param {Function} fn Callback function which will get called for every cell.\n     * @return {ValueMatrix} Instance of the value matrix.\n     */\n    each (fn) {\n        const matrix = this.matrix();\n        const filterFn = this.filter();\n\n        matrix.forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                if (filterFn(col)) {\n                    fn(col, rIndex, cIndex, matrix);\n                }\n            });\n        });\n        return this;\n    }\n\n    findPlaceHolderById (id) {\n        return this.instancesById()[id];\n    }\n}\n\nexport default ValueMatrix;\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { BaseLayer } from '@chartshq/visual-layer';\nimport { getEncoder, getBorders } from '../group-helper';\nimport { RetinalEncoder } from '../encoder';\nimport { registerDomainChangeListener, unsubscribeChangeListeners } from './change-listener';\nimport ValueMatrix from './value-matrix';\n\nexport const createUnitState = (context) => {\n    const [globalState] = VisualUnit.getState();\n    const store = context.store();\n    store.append(STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const initializeGlobalState = (context) => {\n    const globalState = context.constructor.getState()[0];\n    const store = context.store();\n    store.append(STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const createLayerState = (context) => {\n    const [globalState] = BaseLayer.getState();\n    context.store().append(STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE, globalState);\n};\n\nconst sanitizeRetinalConfig = (retinalConf) => {\n    const conf = {};\n    for (const key in retinalConf) {\n        const confValue = retinalConf[key];\n        if (typeof confValue === 'string' || !confValue) {\n            conf[key] = {\n                field: retinalConf[key]\n            };\n        } else {\n            conf[key] = confValue;\n        }\n    }\n    return conf;\n};\n\nexport const setMatrixInstances = (context, placeholder) => {\n    let {\n        values,\n        rows,\n        columns\n    } = placeholder;\n    values = values || [];\n    rows = rows || [];\n    columns = columns || [];\n    context._composition.matrices = {\n        value: new ValueMatrix(values),\n        left: new ValueMatrix(rows[0]),\n        right: new ValueMatrix(rows[1]),\n        top: new ValueMatrix(columns[0]),\n        bottom: new ValueMatrix(columns[1])\n    };\n\n    context._dependencies.throwback.commit(CommonProps.MATRIX_CREATED, true);\n    return context;\n};\n\nexport const createMatrices = (context) => {\n    const rows = context.rows();\n    const columns = context.columns();\n    const color = context.color();\n    const datamodel = context.data();\n    const size = context.size();\n    const detail = context.detail();\n    const layers = context.layers();\n    const transform = context.transform();\n    const config = context.config();\n    const shape = context.shape();\n\n    // Get the resolver for the matrices\n    const resolver = context.resolver();\n    resolver.store(context.store());\n    resolver.valueParser(context.valueParser());\n    // Prepare configuration for matrix preparation\n    let matrixConfig = {\n        selection: context.selection(),\n        alias: context.alias(),\n        globalConfig: config || {},\n        rows,\n        columns,\n        detail,\n        layers,\n        transform\n    };\n\n    unsubscribeChangeListeners(context);\n\n    const retinalConfig = sanitizeRetinalConfig({\n        color,\n        shape,\n        size\n    });\n\n    matrixConfig = Object.assign(matrixConfig, retinalConfig);\n    // Create the encoders for the group\n    const encoders = {};\n    encoders.retinalEncoder = new RetinalEncoder();\n    encoders.simpleEncoder = getEncoder(layers);\n    resolver.encoder(encoders.simpleEncoder);\n\n    // Set the group type\n    context.groupType(encoders.simpleEncoder.constructor.type());\n\n    // Get sanitized fields as instances of the Vars Class\n    const fields = encoders.simpleEncoder.fieldSanitizer(datamodel, matrixConfig);\n    encoders.simpleEncoder.setAxisAndHeaders(config ? config.axisFrom : {}, fields);\n    // Setting layers for the code\n    layers && resolver.layerConfig(layers);\n    // Set the row and column axes\n    resolver.horizontalAxis(fields.rows, encoders).verticalAxis(fields.columns, encoders);\n    // Getting the placeholders\n    const placeholderInfo = resolver.getMatrices(datamodel, matrixConfig, context.registry(), encoders);\n    context._groupedDataModel = placeholderInfo.dataModels.groupedModel;\n    // Set the selection object\n    context.selection(placeholderInfo.selection);\n\n    // Create retinal axes\n    resolver.createRetinalAxes(placeholderInfo.dataModels.parentModel.getFieldsConfig(), retinalConfig,\n            encoders);\n\n    // Domains are evaluated for each of the axes for commonality\n    resolver.setDomains(matrixConfig, placeholderInfo.dataModels, encoders);\n\n    // Create matrix instances\n    setMatrixInstances(context, placeholderInfo);\n\n    // Prepare corner matrices\n    context.cornerMatrices(resolver.createHeaders(placeholderInfo, fields, config));\n\n    // Set placeholder information\n    context.placeholderInfo(placeholderInfo);\n\n    context._composition.axes = resolver.axes();\n    context.metaData({\n        border: getBorders(placeholderInfo, encoders.simpleEncoder)\n    });\n\n    resolver.encoder().unionUnitDomains(context);\n\n    registerDomainChangeListener(context);\n    return context;\n};\n","import { STATE_NAMESPACES } from 'muze-utils';\n\nexport const setupChangeListeners = (context) => {\n    const store = context.store();\n\n    store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x`], () => {\n        const groupAxes = context.resolver().axes();\n        groupAxes.x.forEach(axes => axes.forEach((axis) => {\n            axis.render();\n        }));\n    });\n\n    store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y`], () => {\n        const groupAxes = context.resolver().axes();\n        groupAxes.y.forEach(axes => axes.forEach((axis) => {\n            axis.render();\n        }));\n    });\n};\n\nexport const registerDomainChangeListener = (context) => {\n    const store = context.store();\n    store.registerChangeListener([`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`], () => {\n        context.resolver().encoder().unionUnitDomains(context);\n    }, false, {\n        namespace: 'group',\n        key: 'unionDomain'\n    });\n};\n\nexport const unsubscribeChangeListeners = (context) => {\n    context.store().unsubscribe({\n        namespace: 'group',\n        key: 'unionDomain'\n    });\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\nexport const PROPS = {\n    alias: {},\n    data: {},\n    cornerMatrices: {\n        defaultValue: {\n            topLeft: [],\n            topRight: [],\n            bottomLeft: [],\n            bottomRight: []\n        }\n    },\n    groupType: {},\n\n    metaData: {\n        defaultValue: {\n            border: {}\n        }\n    },\n    placeholderInfo: {\n        defaultValue: {}\n    },\n    resolver: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    registry: {\n        sanitization: (context, value) => {\n            if (context.resolver) {\n                context.resolver().registry(value.cellRegistry);\n            }\n            return value;\n        }\n    },\n    selection: {},\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { generateGetterSetters } from 'muze-utils';\nimport localOptions from './local-options';\nimport { SimpleGroup } from '../simple-group';\nimport {\n    MatrixResolver,\n    findInGroup\n} from '../group-helper';\nimport { createUnitState, initializeGlobalState, setMatrixInstances, createMatrices, createLayerState } from './helper';\nimport { setupChangeListeners } from './change-listener';\nimport { PROPS } from './props';\nimport {\n    CONFIG,\n    MOUNT,\n    RETINAL,\n    Y\n} from '../enums/constants';\n\n/**\n * VisualGroup is instantiated by canvas for creating {@link VisualUnit} and axes instances.It creates the\n * the matrix of visual units and axes. It also creates the layout instance which manages the allocation\n * of space of matrices.\n *\n * To get instance of visual group,\n * ```\n *      const visualGroup = canvas.composition().visualGroup;\n * ```\n * @public\n *\n * @class VisualGroup\n */\nclass VisualGroup extends SimpleGroup {\n\n    /**\n     * Creates an instance of VisualGroup. Requires dependencies and other registry options for placeholders\n     * and layers that create individual units.\n     *\n     * @param {Object} registry Key value pair of compostions for the group\n     * @param {Object} dependencies Dependencies needed to run the group\n     * @memberof VisualGroup\n     */\n    constructor (registry, dependencies) {\n        super();\n\n        const {\n            componentSubRegistry\n        } = registry;\n\n        this._dependencies = dependencies;\n        // Generate getter/setter methods for all properties of the class\n        // One can get each property by calling the method and can set it\n        // by passing paramaters for the same. Thus, one can chain setter\n        // getter methods.\n        generateGetterSetters(this, PROPS);\n        generateGetterSetters(this, localOptions);\n        // Populate the store with default values\n        // initialize group compositions\n        this._composition = {};\n        // store reference to data\n        this._data = [];\n        // store reference to mountpoint\n        this._mount = null;\n        // selection object that takes care of updating of components\n        this._selection = {};\n        // Create instance of matrix resolver\n        this.resolver(new MatrixResolver(this._dependencies));\n        // matrix instance store each of the matrices\n        setMatrixInstances(this, {});\n         // Getting indiviual registered items\n        this.registry({\n            layerRegistry: componentSubRegistry.layerRegistry.get(),\n            cellRegistry: componentSubRegistry.cellRegistry.get()\n        });\n    }\n\n    static getState () {\n        return [{\n            domain: {\n                x: {},\n                y: {},\n                radius: {}\n            }\n        }, {}];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            initializeGlobalState(this);\n            createUnitState(this);\n            createLayerState(this);\n            // Register listeners\n            setupChangeListeners(this);\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Return the instances of matrices created by the visual group.\n     *\n     * @return {Object} Instance of matrices.\n     */\n    matrixInstance (...matrices) {\n        if (matrices.length) {\n            return this;\n        }\n        return this.composition().matrices;\n    }\n\n    /**\n     * Returns the composition of visual group.\n     *\n     * @public\n     *\n     * @return {Object} Composition of visual group. It contains instance of matrices {@link ValueMatrix}\n     * and instances of axis.\n     * ```\n     *          {\n     *              matrices: {\n     *                  value: // Instance of center value matrix.\n     *                  left: // Instance of left value matrix\n     *                  right: // Instance of right value matrix\n     *                  bottom: // Instance of bottom value matrix\n     *                  top: // Instance of top value matrix.\n     *              },\n     *              axes: {\n     *                  x: // Array of x axis.\n     *                  y: // Array of y axis\n     *                  color: // Array of color axis\n     *                  shape: // Array of shape axis\n     *                  size: // Array of size axis.\n     *              }\n     *          }\n     * ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    /**\n     * Locks the model to prevent change listeners to be triggered until unlocked\n     *\n     * @return {Object} Instance of class VisualGroup\n     * @memberof VisualGroup\n     */\n    lockModel () {\n        this.store().model.lock();\n        return this;\n    }\n\n    /**\n     * Unlocks the model so that all change listeners can be triggered\n     *\n     * @return {Object} Instance of class VisualGroup\n     */\n    unlockModel () {\n        this.store().model.unlock();\n        return this;\n    }\n\n    /**\n     * Returns the channel name of the variable. Channels are rows, columns, color, shape and size.\n     *\n     * @public\n     * @param {string} variable Name of the variable.\n     *\n     * @return {string} Name of the channel.\n     */\n    where (variable) {\n        return findInGroup(variable, this.resolver().getAllFields());\n    }\n\n    /**\n     * Gets the axis instances of the visual group based on the given axis type.\n     *\n     * @public\n     * @param {string} type Type of axis. X,Y or retinal axes.\n     *\n     * @return {Array} Array of axis instances.\n     */\n    getAxes (type) {\n        if (type === RETINAL) {\n            return this.resolver().getRetinalAxes();\n        }\n        return this.resolver().getSimpleAxes(type);\n    }\n\n    /**\n     * Returns the instances of cells based on the given type. Type can be given as `row' or `col`.\n     *\n     * @public\n     * @return {Array} Two dimensional array of cells.\n     */\n    getCells (type) {\n        return this.resolver()[`${type}Cells`]();\n    }\n\n    getFieldsFromChannel (channel) {\n        const {\n            rowProjections,\n            colProjections\n        } = this.resolver().getAllFields();\n        return channel === Y ? rowProjections : colProjections;\n    }\n\n    getCellsByFacetKey (facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey] || [];\n        return cells;\n    }\n\n    getAxesByFacetKey (axisType, facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey];\n        const axes = cells[0].valueOf().axes()[axisType] || [];\n\n        return axes;\n    }\n\n    /**\n     * This method is used to return a serialized representation of the instance's properties.\n     *\n     * @return {Object} Object with config proprties.\n     * @memberof VisualGroup\n     */\n    serialize () {\n        const store = this.store();\n\n        return {\n            [CONFIG]: store.get(CONFIG),\n            [MOUNT]: store.get(MOUNT)\n        };\n    }\n\n    /**\n     * Returns the grouped datamodel prepared by visual group. If there is no group by performed, then it returns the\n     * original data model passed to visual group.\n     *\n     * @return {DataModel} Grouped data model.\n     */\n    getGroupByData () {\n        return this._groupedDataModel;\n    }\n\n    createMatrices () {\n        createMatrices(this);\n    }\n}\n\nexport default VisualGroup;\n","import { PersistentBehaviour, SELECTION } from '@chartshq/muze-firebolt';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return 'select';\n    }\n\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            // new add set\n            const existingRemoveSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_OLD_EXIT\n                || selectionSet._set[d] === SELECTION.SELECTION_NEW_EXIT);\n                // existing add set\n            if (existingRemoveSet.length) {\n                selectionSet.updateEntry();\n                selectionSet.add(existingRemoveSet);\n            } else {\n                selectionSet.updateExit();\n                selectionSet.remove(addSet);\n            }\n            const { exitSet } = selectionSet.getSets();\n            const mergedExitSet = [...new Set(exitSet[1]), ...new Set(exitSet[0])];\n            const completeSetCount = selectionSet.getCompleteSet().length;\n            if (exitSet[1].length !== completeSetCount && mergedExitSet.length === completeSetCount) {\n                selectionSet.reset();\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n        return this;\n    }\n}\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nconst CLASSPREFIX = 'muze';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        target: `.${CLASSPREFIX}-gradient-rect`,\n        behaviours: [BEHAVIOURS.BRUSH]\n    },\n    [ACTIONS.HOVER]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.CLICK]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.SELECT]\n    }\n};\n\nexport const propagationBehaviourMap = {\n    [BEHAVIOURS.SELECT]: BEHAVIOURS.FILTER,\n    [BEHAVIOURS.BRUSH]: BEHAVIOURS.HIGHLIGHT\n};\n","import * as BEHAVIOURS from '../enums/behaviours';\nimport * as sideEffects from '../enums/side-effects';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: [sideEffects.SELECTIONBOX, {\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [sideEffects.Highlighter],\n    select: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }]\n};\n\nexport const propagationSideEffects = {\n    [BEHAVIOURS.BRUSH]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.SELECT]: ['filter']\n};\n\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n\n","export const SELECTIONBOX = 'selectionBox';\nexport const Highlighter = 'highlighter';\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const CONFIG = 'config';\nexport const DATAMODEL = 'dataModel';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const MAXWIDTH = 'max-width';\nexport const HEIGHT = 'height';\nexport const MOUNTPOINT = 'mountPoint';\nexport const GRIDLINEPARENTGROUPCLASS = 'grid-lines';\nexport const TRANSFORM = 'transform';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const DEFAULTCOLOR = '#F44336';\nexport const DEFAULTSIZE = 50;\nexport const DEFAULTSHAPE = 'circle';\nexport const STEP = 'step';\nexport const GRADIENT = 'gradient';\nexport const ORDINAL = 'ordinal';\nexport const SCALE_FUNCTIONS = {\n    size: 'getSize',\n    shape: 'getShape',\n    color: 'getColor'\n};\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const HORIZONTAL = 'horizontal';\nexport const VERTICAL = 'vertical';\nexport const CENTER = 'center';\nexport const VALUE = 'value';\nexport const PATH = 'path';\nexport const SHAPE = 'shape';\nexport const ICON = 'icon';\nexport const RECT = 'rect';\nexport const START = 'start';\nexport const UPPER = 'upper';\nexport const LOWER = 'lower';\nexport const END = 'end';\nexport const SIZE = 'size';\nexport const DISCRETE = 'discrete';\nexport const MEASURE = 'measure';\n\n","import { assembleModelFromIdentifiers, getDataModelFromRange } from 'muze-utils';\nimport { propagationBehaviourMap } from './action-behaviour-map';\nimport { propagationSideEffects } from './behaviour-effect-map';\nimport { STEP, GRADIENT, DISCRETE, MEASURE } from '../enums/constants';\n\nexport const propagate = (firebolt, action, selectionSet, config = {}) => {\n    let propagationData;\n    const type = firebolt.context.constructor.type();\n    const payload = config.payload;\n    const data = firebolt.context.data();\n    const metaData = firebolt.context.metaData();\n    const fieldType = metaData.getData().schema[0].type;\n\n    const propPayload = {};\n    const sourceId = firebolt.context._id;\n    propPayload.action = propagationBehaviourMap[action] || action;\n    propPayload.sideEffects = propagationSideEffects[action];\n    propPayload.sourceCanvas = firebolt.context.canvasAlias();\n    const isMutableAction = firebolt._actions.behavioural[propPayload.action].constructor.mutates();\n    if (payload.criteria === null) {\n        propagationData = null;\n    } else {\n        const entrySet = selectionSet.mergedEnter;\n        let values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.rawVal);\n        if (type === STEP || (type === DISCRETE && fieldType === MEASURE)) {\n            const field = Object.keys(payload.criteria || {})[0];\n            values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.range);\n            propagationData = values.length ? metaData.select((fields) => {\n                let check = false;\n                for (let i = 0; i < values.length; i++) {\n                    check = fields[field].value >= values[i][0] && fields[field].value <= values[i][1];\n                    if (check === true) {\n                        break;\n                    }\n                }\n                return check;\n            }, {\n                saveChild: false\n            }) : null;\n        } else if (type === GRADIENT) {\n            propagationData = getDataModelFromRange(metaData, payload.criteria);\n        } else if (values.length) {\n            propagationData = assembleModelFromIdentifiers(metaData, [payload.criteria[0], ...values.map(d => [d])]);\n        } else {\n            propPayload.criteria = null;\n            propagationData = metaData.select(() => true, {\n                saveChild: false\n            });\n        }\n    }\n\n    let propagateInterpolatedValues = false;\n\n    if (propagationData) {\n        const schema = propagationData.getSchema();\n        propagateInterpolatedValues = schema.every(d => d.type === MEASURE);\n    }\n\n    const propConfig = {\n        sourceId: `legend-${sourceId}`,\n        payload: propPayload,\n        criteria: propPayload.criteria === null ? null : propagationData,\n        isMutableAction,\n        propagateInterpolatedValues,\n        action: propPayload.action\n    };\n\n    metaData.propagate(propagationData, propConfig, true);\n};\n","import { Firebolt } from '@chartshq/muze-firebolt';\nimport { propagate } from './helper';\nimport { STEP, GRADIENT } from '../enums/constants';\n\n/**\n * This class manages the interactions of legend.\n * @export\n * @class LegendFireBolt\n * @extends {Firebolt}\n */\nexport class LegendFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this.initializeSideEffects();\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet[0];\n    }\n\n    propagate (behaviourName, payload, selectionSet) {\n        propagate(this, behaviourName, selectionSet, {\n            payload\n        });\n    }\n\n    getAddSetFromCriteria (criteria) {\n        let values;\n        let uniqueIds;\n        const type = this.context.constructor.type();\n\n        if (criteria === null) {\n            uniqueIds = null;\n        } else if (type === STEP) {\n            values = Object.values(criteria);\n            uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n        } else if (type === GRADIENT) {\n            uniqueIds = [];\n        } else {\n            values = criteria[1];\n            if (values) {\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.rawVal) !== -1).map(d => d.id);\n            } else {\n                values = Object.values(criteria);\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n            }\n        }\n        return {\n            uids: uniqueIds,\n            model: null\n        };\n    }\n\n    getFullData () {\n        return null;\n    }\n}\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\n/**\n * Adds dragging action to the target element.\n * @param {firebolt} firebolt firebolt\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let endPos = {};\n    let payload;\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const boundingBox = context.measurement().gradientDimensions;\n    const axisType = context.config().align === 'horizontal' ? 'x' : 'y';\n    const axisScale = context.axis().source().scale();\n    const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n    }).on('drag', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                    axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n            }\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }).on('end', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n        if (startPos[axisType] === endPos[axisType]) {\n            payload = {\n                criteria: {}\n            };\n        } else {\n            payload = {\n                criteria: {\n                    [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                        axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n                }\n            };\n        }\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }));\n};\n\nexport default drag;\n","import { getEvent } from 'muze-utils';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} Firebolt instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        const event = getEvent();\n                        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, {\n                            criteria: null\n                        }));\n                        event.stopPropagation();\n                    });\n};\n\nexport default hover;\n","/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nconst click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\n\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport click from './click';\nimport * as ACTIONNAMES from '../../enums/actions';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click\n};\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\n","import {\n    getMousePos,\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\nimport { HEIGHT, WIDTH, HORIZONTAL } from '../../enums/constants';\n\nconst getSelectionCriteria = (subject, axis, measures) => {\n    let criteria = [];\n    const {\n        axisScale,\n        axisType\n    } = axis;\n    const {\n        startPos,\n        endPos,\n        selectionBoxMeasure,\n        drawingInfMeasure,\n        offset\n    } = measures;\n    const subjectStartPoint = subject[axisType];\n\n    if (startPos[axisType] === endPos[axisType]) {\n        criteria = [];\n    } else if (subjectStartPoint + selectionBoxMeasure >= drawingInfMeasure + offset) {\n        criteria = [axisScale.invert(drawingInfMeasure + offset - selectionBoxMeasure),\n            axisScale.invert(drawingInfMeasure + offset)];\n    } else if (subjectStartPoint - offset < offset) {\n        criteria = [axisScale.invert(offset * 2), axisScale.invert(selectionBoxMeasure + offset * 2)];\n    } else {\n        criteria = [axisScale.invert(subjectStartPoint), axisScale.invert(subjectStartPoint + selectionBoxMeasure)];\n    }\n    axisType === 'x' ? criteria : criteria.reverse();\n    return criteria;\n};\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let payload;\n    const endPos = {};\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const axisScale = context.axis().source().scale();\n    const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n    const drawingInfMeasure = context.measurement().gradientDimensions[axisType === 'x' ?\n        WIDTH : HEIGHT];\n    const offset = axisScale.range()[axisType === 'x' ? 0 : 1];\n    const measures = {\n        drawingInfMeasure,\n        offset\n    };\n    let subject = {};\n\n    targetEl.call(d3Drag().on('start', function () {\n        const event = getEvent();\n        startPos = getMousePos(this, event.sourceEvent);\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n\n        subject.x += event.dx;\n        subject.y += event.dy;\n\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(subject, { axisScale, axisType }, measures);\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }).on('end', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(event, { axisScale, axisType }, measures);\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true,\n            config: {\n                transition: {\n                    duration: 200\n                }\n            }\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }));\n};\n\n","import { makeElement } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { CLASSPREFIX, HEIGHT, WIDTH, HORIZONTAL, RECT } from '../../../enums/constants';\nimport { SELECTIONBOX } from '../../../enums/side-effects';\nimport { selectionBoxDrag } from '../../physical/selection-box-drag';\nimport './styles.scss';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\n/* istanbul ignore next */ class SelectionBox extends SpawnableSideEffect {\n    static formalName () {\n        return SELECTIONBOX;\n    }\n\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            className: 'legend-selection-box',\n            classPrefix: CLASSPREFIX\n        };\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     */\n    /* istanbul ignore next */ apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const firebolt = this.firebolt;\n        const context = firebolt.context;\n        const config = this.config();\n        const axis = context.axis().source();\n        const className = `${config.classPrefix}-${config.className}`;\n\n        const domain = payload.criteria[firebolt.context.fieldName()];\n        const axisScale = axis.scale();\n        const range = domain ? [axis.getScaleValue(domain[0]), axis.getScaleValue(domain[1])] : [];\n\n        const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n\n        const gradientDimension = firebolt.context.measurement().gradientDimensions[axisType === 'x' ?\n            HEIGHT : WIDTH];\n\n        const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n        const legendGradContainer = context.getDrawingContext().svgContainer;\n        const legendSelGroup = makeElement(legendGradContainer, 'g', [1], `${config.classPrefix}-selection-box-group`);\n\n        if (firebolt.context.config().align === HORIZONTAL) {\n            x = range[0] - rangeShifter || 0;\n            y = 0;\n            width = range[1] - range[0] || 0;\n            height = gradientDimension;\n        } else {\n            x = 0;\n            y = range[1] - rangeShifter || 0;\n            height = range[0] - range[1] || 0;\n            width = gradientDimension;\n        }\n        const enterFn = function (el) {\n            selectionBoxDrag(firebolt)(el, ['brush']);\n        };\n        const selBox = makeElement(legendSelGroup, RECT, [{ domain, x, y, width, height }], className,\n            { enter: enterFn });\n        selBox.attr('y', y)\n                        .attr('x', x)\n                        .attr(WIDTH, width)\n                        .attr(HEIGHT, height);\n    }\n}\n\nexport default SelectionBox;\n\n","import { selectElement } from 'muze-utils';\n\nexport const strategies = (firebolt) => {\n    const context = firebolt.context;\n    const classed = (set, className, change) => {\n        const classPrefix = context.config().classPrefix;\n        selectElement(context.mount())\n                        .selectAll(`.${classPrefix}-legend-columns`)\n                        .filter(d => set.uids.indexOf(d.id) !== -1)\n                        .selectAll('div')\n                        .classed(className, change);\n    };\n\n    return {\n        fade: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-fadeout`, false);\n            } else {\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-fadeout`, true);\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-fadeout`, false);\n            }\n        },\n        brighten: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-brighten`, false);\n            } else {\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-brighten`, true);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n            }\n        }\n    };\n};\n","import { GenericSideEffect } from '@chartshq/muze-firebolt';\nimport { strategies } from './strategies';\nimport { Highlighter } from '../../../enums/side-effects';\n\nexport default class LegendHighlighter extends GenericSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategies = strategies(this.firebolt);\n        this._strategy = 'brighten';\n    }\n\n    static formalName () {\n        return Highlighter;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        strategy(selectionSet, this);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    data: {},\n    fieldName: {},\n    legendContainer: {},\n    measurement: {\n        sanitization: (context, value) => {\n            const measurement = mergeRecursive(context._measurement, value);\n            ['padding', 'border', 'margin'].forEach((space) => {\n                measurement[space] = Math.min(measurement[space] > 0 ? measurement[space] : 0,\n                     measurement.maxWidth * 0.1, measurement.maxHeight * 0.1);\n            });\n            return measurement;\n        }\n    },\n    logicalSpace: {},\n    metaData: {},\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.resetLogicalSpace();\n            context.store().commit('range', value);\n            return value;\n        }\n    },\n    scale: {},\n    smartTicks: {},\n    store: {},\n    title: {\n        sanitization: (context, value) => mergeRecursive(context._title || {}, value)\n    },\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import { getSymbol } from 'muze-utils';\nimport {\n    CENTER,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\nexport const ALIGN = {\n    HORIZONTAL: 'horizontal',\n    VERTICAL: 'vertical'\n};\n\nexport const DEFAULT_MEASUREMENT = {\n    height: 30,\n    width: 30,\n    maxWidth: Infinity,\n    maxHeight: Infinity,\n    padding: 2,\n    margin: 2,\n    border: 1\n};\n\nexport const LEGEND_TITLE = {\n    text: '',\n    orientation: (pos) => {\n        if (pos === LEFT || pos === RIGHT) {\n            return LEFT;\n        } return CENTER;\n    }\n};\n\nexport const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    borderStyle: 'solid',\n    borderColor: 'rgba(0,0,0,0)',\n    formatter: {\n        bounds: {\n            lower: 'less than',\n            upper: 'more than'\n        }\n    },\n    item: {\n        text: {\n            orientation: 'right',\n            width: 10,\n            formatter: (val, i, data, context) => context.valueParser()(val)\n        },\n        icon: {\n            className: 'legend-icon',\n            height: 20,\n            width: 20,\n            color: 'rgba(0,0,0,.5)',\n            type: 'square'\n        }\n    }\n};\n\n/**\n * Creates a map of pre defined icons\n *\n * @param {string} icon Accepts a icon name like 'square', 'cross', 'diamond' etc\n * @return {Object} icon object which can be used to draw the icons\n */\nexport const ICON_MAP = (icon) => {\n    if (icon && typeof (icon) === 'string') {\n        return getSymbol(icon);\n    } return icon;\n};\n","import { makeElement, numberInterpolator } from 'muze-utils';\n\nimport {\n    SCALE_FUNCTIONS,\n    WIDTH,\n    HEIGHT,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    MAXWIDTH\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} scale\n *\n */\nexport const getScaleInfo = (scale) => {\n    const scaleType = scale.constructor.type();\n    const domain = scale.uniqueValues();\n    const steps = scale.config().stops || 1;\n    const scaleFn = SCALE_FUNCTIONS[scaleType];\n\n    return { scaleType, domain, steps, scaleFn };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} steps\n *\n */\nexport const getInterpolatedData = (domain, steps) => {\n    const domainForLegend = [];\n    const interpolatedFn = numberInterpolator()(domain[0], domain[1]);\n\n    for (let i = 0; i <= steps; i++) {\n        domainForLegend[i] = interpolatedFn(i / steps);\n    }\n    return domainForLegend;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} text\n * @param {*} measurement\n * @param {*} classPrefix\n */\nexport const titleCreator = (container, title, measurement, config) => {\n    const titleWidth = Math.min(measurement.maxWidth, measurement.width);\n\n    const titleContainer = makeElement(container, 'table', [1], `${config.classPrefix}-legend-title`)\n            .style(WIDTH, `${titleWidth}px`)\n            .style(HEIGHT, `${measurement.height}px`)\n            .style('border-bottom', `${measurement.border}px ${config.borderStyle} ${config.borderColor}`)\n            .style('text-align', title.orientation instanceof Function ?\n            title.orientation(config.position) : title.orientation);\n    return makeElement(titleContainer, 'td', [1], `${config.classPrefix}-legend-title-text`)\n                    .style(WIDTH, `${titleWidth}px`)\n                    .style(MAXWIDTH, `${titleWidth}px`)\n                    .style(HEIGHT, '100%')\n                    .style('line-height', 1)\n                    .style('padding', `${measurement.padding}px`)\n                    .text(title.text)\n                    .style('overflow-x', 'scroll')\n                    .node();\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getMaxMeasures = (data, prop, labelManager) => {\n    let maxHeight = -Infinity;\n    let maxWidth = -Infinity;\n\n    data.forEach((item) => {\n        const value = prop ? item[prop] : item;\n        const space = labelManager.getOriSize(value);\n        maxHeight = Math.max(space.height + 2, maxHeight);\n        maxWidth = Math.max(space.width + 2, maxWidth);\n    });\n\n    return { height: maxHeight, width: maxWidth };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getItemMeasures = (context, prop, formatter) => {\n    const space = [];\n    const data = context.data();\n    const labelManager = context._labelManager;\n\n    data.forEach((item, index) => {\n        const value = prop ? item[prop] : item;\n        const { height, width } = labelManager.getOriSize(formatter(value, index, data, context));\n        space[index] = { height: height + 1, width: width + 1 };\n    });\n    return space;\n};\n\n/**\n *\n *\n * @param {*} textOrientation\n * @param {*} effPadding\n * @param {*} titleSpace\n *\n * @memberof Legend\n */\nexport const computeItemSpaces = (config, measures, data) => {\n    let totalHeight = 0;\n    let totalWidth = 0;\n    let maxItemSpaces = {\n        width: 0, height: 0\n    };\n    const {\n        effPadding,\n        titleWidth,\n        labelSpaces,\n        titleHeight,\n        maxWidth\n    } = measures;\n    const {\n        item,\n        align\n    } = config;\n    const {\n        icon,\n        text\n    } = item;\n    const textOrientation = text.orientation;\n    const itemSpaces = [];\n    const iconSpaces = [];\n    let maxIconWidth = 0;\n    labelSpaces.forEach((labelSpace, i) => {\n        const itemSpace = { width: 0, height: 0 };\n        const iconSpace = { width: 0, height: 0 };\n        const datum = data[i] || {};\n            // Compute each legend item height/width\n        if (textOrientation === LEFT || textOrientation === RIGHT) {\n            // Get label, icon and item widths\n            labelSpace.width += effPadding;\n            iconSpace.width = (datum.size ? 2 * Math.sqrt(datum.size / Math.PI) : icon.width) + effPadding;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n            itemSpace.width = labelSpace.width + maxIconWidth;\n\n            // Get label, icon and item heights\n            labelSpace.height = Math.max(labelSpace.height, icon.height) + effPadding;\n            iconSpace.height = labelSpace.height;\n            itemSpace.height = labelSpace.height;\n        } else {\n            // Get label, icon and item widths\n            labelSpace.width = Math.max(labelSpace.width, datum.size ? 2 * Math.sqrt(datum.size / Math.PI)\n            : icon.width) + effPadding;\n            iconSpace.width = labelSpace.width;\n            itemSpace.width = labelSpace.width;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n\n            // Get label, icon and item heights\n            labelSpace.height += effPadding;\n            iconSpace.height = icon.height + effPadding;\n            itemSpace.height = labelSpace.height + iconSpace.height;\n        }\n        // Compute height and width of legend for each alignment\n        if (align === 'horizontal') {\n            totalHeight = Math.max(totalHeight, itemSpace.height);\n        } else {\n            totalHeight += itemSpace.height;\n            totalWidth = Math.max(totalWidth, itemSpace.width, titleWidth);\n        }\n        maxItemSpaces = {\n            width: Math.max(itemSpace.width, maxItemSpaces.width),\n            height: Math.max(itemSpace.height, maxItemSpaces.height)\n        };\n        itemSpaces.push(itemSpace);\n        iconSpaces.push(iconSpace);\n    });\n    itemSpaces.forEach((itemSpace, i) => {\n        if (align === 'horizontal') {\n            itemSpace.height = totalHeight;\n            iconSpaces[i].width = maxIconWidth;\n            if (textOrientation === LEFT || textOrientation === RIGHT) {\n                labelSpaces[i].height = totalHeight;\n                iconSpaces[i].height = totalHeight;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n            } else {\n                labelSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = maxIconWidth;\n                labelSpaces[i].width = maxIconWidth;\n            }\n            totalWidth = Math.max(totalWidth + itemSpaces[i].width);\n        } else {\n            itemSpace.width = Math.max(totalWidth, maxWidth);\n            if (textOrientation === TOP || textOrientation === BOTTOM) {\n                labelSpaces[i].width = totalWidth;\n                iconSpaces[i].width = totalWidth;\n                maxIconWidth = totalWidth;\n            } else {\n                const labelWidth = labelSpaces[i].width;\n                const newLabelWidth = (maxItemSpaces.width - maxIconWidth);\n                iconSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n                labelSpaces[i].width = Math.max(labelWidth, newLabelWidth);\n                totalWidth = Math.max(totalWidth, itemSpace.width);\n            }\n        }\n    });\n    totalWidth = Math.ceil(Math.max(totalWidth, titleWidth)) + effPadding;\n    totalHeight += titleHeight + effPadding;\n    totalHeight = Math.ceil(totalHeight);\n    return { totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth };\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} scaleInfo\n * @param {*} domainInfo\n *\n */\nexport const getDomainBounds = (type, scaleInfo, domainInfo) => {\n    const {\n        scaleFn,\n        scaleType,\n        scale\n    } = scaleInfo;\n    const {\n        domain,\n        domainBounds,\n        domainLeg,\n        steps\n    } = domainInfo;\n    const ele = domain[type === 'lower' ? 0 : domain.length - 1];\n    const step = steps[type === 'lower' ? 0 : steps.length - 1];\n\n    return {\n        [scaleType]: scaleType === 'size' ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n        value: domainBounds[type],\n        id: type === 'lower' ? 0 : domainLeg.length + 2,\n        range: [ele, step]\n    };\n};\n","import {\n    makeElement,\n    selectElement,\n    getUniqueId,\n    getSmartComputedStyle,\n    generateGetterSetters,\n    mergeRecursive\n} from 'muze-utils';\nimport { behaviouralActions } from '@chartshq/muze-firebolt';\nimport * as legendBehaviours from '../firebolt/behavioural';\n\nimport { LegendFireBolt } from '../firebolt/legend-firebolt';\nimport { actionBehaviourMap } from '../firebolt/action-behaviour-map';\nimport { physicalActions } from '../firebolt/physical';\nimport * as sideEffects from '../firebolt/side-effects';\nimport { behaviourEffectMap } from '../firebolt/behaviour-effect-map';\nimport { VALUE, PATH, RIGHT, LEFT, TOP, BOTTOM } from '../enums/constants';\nimport { PROPS } from './props';\nimport { DEFAULT_MEASUREMENT, DEFAULT_CONFIG, LEGEND_TITLE } from './defaults';\nimport { getItemMeasures, titleCreator, computeItemSpaces } from './legend-helper';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class SimpleLegend\n */\nexport default class SimpleLegend {\n\n    /**\n     * Creates an instance of Legend.\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @memberof Legend\n     */\n    constructor (dependencies) {\n        this._data = [];\n        this._metaData = [];\n        this._mount = null;\n        this._fieldName = null;\n        this._title = Object.assign({}, LEGEND_TITLE);\n        this._metaData = null;\n        this._labelManager = dependencies.labelManager;\n        this._cells = dependencies.cells;\n        this._id = getUniqueId();\n        this._measurement = Object.assign({}, this.constructor.defaultMeasurement());\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n\n        generateGetterSetters(this, PROPS);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'),\n            `${this.config().classPrefix}-legend-item-info`);\n\n        this._firebolt = new LegendFireBolt(this, {\n            behavioural: Object.assign({}, behaviouralActions, legendBehaviours),\n            physical: physicalActions,\n            physicalBehaviouralMap: actionBehaviourMap\n        }, sideEffects, behaviourEffectMap);\n    }\n\n    id () {\n        return this._id;\n    }\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new SimpleLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENT;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleLegend\n     */\n    firebolt (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return PATH;\n    }\n\n    canvasAlias (...alias) {\n        if (alias.length) {\n            this._canvasAlias = alias[0];\n            return this;\n        }\n        return this._canvasAlias;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    mount (...params) {\n        if (params.length) {\n            this._mount = params[0];\n            this.render();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces () {\n        const {\n            item,\n            classPrefix\n        } = this.config();\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n            `${classPrefix}-legend-item-info`));\n        return getItemMeasures(this, VALUE, item.text.formatter);\n    }\n\n    /**\n     * Sets the height and width of a legend based on provided max\n     * height and width and based on its contents\n     *\n     * @return {Instance} Current instance\n     * @memberof Legend\n     */\n    setLegendMeasures () {\n        const {\n            width,\n            height,\n            maxWidth,\n            maxHeight,\n            padding,\n            margin,\n            border\n        } = this.measurement();\n        const {\n            align\n        } = this.config();\n\n        // Effective padding, margin and padding\n        const effPadding = padding * 2;\n        const effBorder = border * 2;\n        const effMargin = margin * 2;\n\n        this.data(this.dataFromScale(this.scale()));\n        // Get space occupied by title\n        const titleSpace = this.getTitleSpace();\n        const titleHeight = titleSpace.height > 0 ? titleSpace.height + effPadding : 0;\n        const titleWidth = titleSpace.width + effPadding;\n\n        // Get space occupied by labels\n        const labelSpaces = this.getLabelSpaces(effPadding, align);\n        const {\n            totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth\n        } = computeItemSpaces(this.config(),\n        { effPadding, titleWidth, labelSpaces, titleHeight, maxWidth, maxHeight }, this.data());\n\n        this.measurement({\n            width: Math.max(totalWidth, width) + effMargin + effBorder,\n            height: Math.max(totalHeight, height) + effMargin + effBorder,\n            labelSpaces,\n            iconSpaces,\n            itemSpaces,\n            maxItemSpaces,\n            maxIconWidth,\n            titleSpaces: {\n                width: Math.min(maxWidth, this.measurement().width) - effMargin - effBorder,\n                height: titleHeight\n            }\n        });\n        return this;\n    }\n\n    /**\n     * Returns the space occupied by the legend title\n     *\n     * @return {Object} Space occupied by title\n     * @memberof Legend\n     */\n    getTitleSpace () {\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n                                                `${this.config().classPrefix}-legend-title`));\n        return this._labelManager.getOriSize(this.title().text ? this.title().text : '');\n    }\n\n    /**\n     * Creates the title for the legend\n     *\n     * @param {DOM} container Container made for the title\n     * @return {Selection} Title and it's node\n     * @memberof Legend\n     */\n    renderTitle (container) {\n        const { titleSpaces, border, padding, width, maxWidth } = this.measurement();\n        const { borderStyle, borderColor } = this.config();\n        return titleCreator(container, this.title(), {\n            height: titleSpaces.height,\n            width,\n            maxWidth,\n            border,\n            padding,\n            borderStyle,\n            borderColor\n        }, this.config());\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const {\n            classPrefix,\n            borderStyle,\n            borderColor,\n            position\n        } = this.config();\n        const {\n            maxWidth,\n            maxHeight,\n            width,\n            height,\n            margin,\n            border\n        } = this.measurement();\n        const legendContainer = makeElement(selectElement(this.mount()), 'div', [1], `${classPrefix}-legend-box`);\n        let marginPosition;\n        switch (position) {\n        case TOP:\n            marginPosition = `margin-${BOTTOM}`;\n            break;\n        case LEFT:\n            marginPosition = `margin-${RIGHT}`;\n            break;\n        case BOTTOM:\n            marginPosition = `margin-${TOP}`;\n            break;\n        default:\n            marginPosition = `margin-${LEFT}`;\n        }\n        legendContainer.classed(`${classPrefix}-legend-box-${this._id}`, true);\n        legendContainer.style('float', 'left');\n        // set height and width\n        legendContainer.style('width', `${Math.min(maxWidth, width) - margin * 2}px`)\n                        .style('height', `${Math.min(maxHeight, height) - margin * 2}px`)\n                        .style(`${marginPosition}`, `${margin}px`)\n                        .style('border', `${border}px ${borderStyle} ${borderColor}`);\n        this.legendContainer(legendContainer.node());\n\n        // create title\n        this.renderTitle(legendContainer);\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n  /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        const type = this.metaData().getData().schema[0].type;\n        if (type === 'measure') {\n            return {\n                [fieldName]: data.range\n            };\n        }\n        return [[fieldName], [data.rawVal]];\n    }\n}\n","import {\n    LEFT,\n    RIGHT,\n    START,\n    END,\n    TOP,\n    BOTTOM,\n    HORIZONTAL,\n    VERTICAL,\n    CENTER,\n    SHAPE,\n    VALUE\n} from '../enums/constants';\n\nconst legendOrientation = {\n    [HORIZONTAL]: {\n        datasets: data => ({\n            row: [1],\n            column: data\n        }),\n        itemContainerMeasures: (measurement) => {\n            const {\n                itemSpaces,\n                width\n            } = measurement;\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                },\n                column: {\n                    width: (d, i) => `${itemSpaces[i].width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, height } = measurement;\n            return {\n                iconHeight: height,\n                iconWidth: maxItemSpaces.width,\n                stepPadding: {\n                    horizontal: true,\n                    vertical: false\n                }\n            };\n        }\n    },\n    [VERTICAL]: {\n        datasets: data => ({\n            row: data,\n            column: d => [d]\n        }),\n        itemContainerMeasures: (measurement, config) => {\n            const {\n                width\n            } = measurement;\n            const { padding } = config;\n\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${padding}px`\n                },\n                column: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, width } = measurement;\n            return {\n                iconHeight: maxItemSpaces.height,\n                iconWidth: width,\n                stepPadding: {\n                    horizontal: false,\n                    vertical: true\n                }\n            };\n        }\n    }\n};\n\nexport const positionConfig = {\n    [LEFT]: legendOrientation[VERTICAL],\n    [RIGHT]: legendOrientation[VERTICAL],\n    [TOP]: legendOrientation[HORIZONTAL],\n    [BOTTOM]: legendOrientation[HORIZONTAL]\n};\n\nexport const alignmentMap = {\n    [LEFT]: END,\n    [RIGHT]: START,\n    [TOP]: CENTER,\n    [BOTTOM]: CENTER\n};\n\n// Reverses data for step legend\nexport const stepData = data => ({\n    [LEFT]: data.reverse(),\n    [RIGHT]: data.reverse(),\n    [TOP]: data,\n    [BOTTOM]: data\n});\n\n// Changes the item layout based on the position of the text\nexport const itemStack = {\n    [LEFT]: [VALUE, SHAPE],\n    [RIGHT]: [SHAPE, VALUE],\n    [TOP]: [VALUE, SHAPE],\n    [BOTTOM]: [SHAPE, VALUE]\n};\n","import { makeElement, selectElement, applyStyle } from 'muze-utils';\nimport { ICON_MAP } from './defaults';\nimport { positionConfig, alignmentMap, itemStack } from './position-config';\nimport {\n    WIDTH,\n    HEIGHT,\n    CENTER,\n    VALUE,\n    RECT,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} legendInstance\n * @param {*} align\n *\n */\nexport const getItemContainers = (container, data, legendInstance) => {\n    const measurement = legendInstance.measurement();\n    const config = legendInstance.config();\n    const {\n        itemSpaces\n    } = measurement;\n    const {\n        classPrefix,\n        position\n    } = config;\n    const positionObj = positionConfig[position];\n    const datasets = positionObj.datasets(data);\n    const measures = positionObj.itemContainerMeasures(measurement, config);\n\n    const rows = makeElement(container, 'div', datasets.row, `${classPrefix}-legend-row`);\n    rows.style(HEIGHT, (d, i) => `${itemSpaces[i].height}px`);\n    rows.style(WIDTH, measures.row.width);\n    rows.style('padding', measures.row.padding);\n\n    const columns = makeElement(rows, 'div', datasets.column, `${classPrefix}-legend-columns`);\n    columns.style(WIDTH, measures.column.width);\n    columns.style('padding', measures.column.padding);\n\n    return columns;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} classPrefix\n * @param {*} data\n *\n * @memberof DiscreteLegend\n */\nexport const createLegendSkeleton = (context, container, classPrefix, data) => {\n    let gradWidth = 0;\n    let gradHeight = 0;\n    let maxGradHeight = 0;\n    let maxGradWidth = 0;\n    const measurement = context.measurement();\n    const {\n            margin,\n            border,\n            titleSpaces,\n            width,\n            height,\n            maxWidth,\n            maxHeight\n        } = measurement;\n\n    gradHeight = height - (titleSpaces.height + 2 * margin + 2 * border);\n    gradWidth = width - (margin * 2 + border * 2);\n\n    maxGradHeight = maxHeight - (titleSpaces.height + margin * 2 + border * 2);\n    maxGradWidth = maxWidth - (margin * 2 + border * 2);\n\n    let legendBody = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    legendBody.select(`.${classPrefix}-legend-overflow`).remove();\n        // Create a div with scroll when overflow\n    if (maxGradWidth && maxGradWidth < gradWidth) {\n        legendBody = legendBody.style(WIDTH, `${maxGradWidth}px`).style('overflow-x', 'scroll');\n    }\n        // Create a div with scroll when overflow\n    if (maxGradHeight && maxGradHeight < gradHeight) {\n        legendBody.style(HEIGHT, `${maxGradHeight}px`).style('overflow-y', 'scroll');\n    }\n\n    legendBody = makeElement(legendBody, 'div', [1], `${classPrefix}-legend-overflow`);\n\n    legendBody.style(WIDTH, `${gradWidth}px`);\n    legendBody.style(HEIGHT, `${gradHeight}px`);\n\n    const legendItem = getItemContainers(legendBody, data, context);\n    return { legendItem };\n};\n\n/**\n * Creates legend item based on alignment and text orientation\n *\n * @param {Selection} container Point where items are to be mounted\n * @return {Instance} Current instance\n * @memberof Legend\n */\nexport const createItemSkeleton = (context, container) => {\n    const {\n        classPrefix,\n        item\n    } = context.config();\n    const textOrientation = item.text.orientation;\n\n    const stack = itemStack[textOrientation];\n    const itemSkeleton = makeElement(container, 'div', (d, i) => stack.map(e => [e, d[e], d.color, d.size,\n        d.value, context.fieldName(), i]), `${classPrefix}-legend-item-info`);\n\n    const alignClass = alignmentMap[textOrientation];\n\n    itemSkeleton.classed(alignClass, true);\n    return { itemSkeleton };\n};\n\n/**\n *\n *\n * @param {*} measureType\n * @param {*} stepColorCheck\n */\nexport const applyItemStyle = (item, measureType, stepColorCheck, context) => {\n    const {\n        padding,\n        labelSpaces,\n        iconSpaces,\n        maxIconWidth\n    } = context.measurement();\n    const diff = stepColorCheck ? -padding * 2 : 0;\n\n    if (item[0] === VALUE) {\n        return `${labelSpaces[item[6]][measureType]}px`;\n    }\n    return `${measureType === 'width' && !stepColorCheck ? maxIconWidth : iconSpaces[item[6]][measureType] - diff}px`;\n};\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, elem, defaultIcon, width, height) {\n    const groupElement = elem;\n    // const { shape, size, update } = d;\n    const size = d[3] || Math.min(width, height) * Math.PI;\n    const shape = d[1] || defaultIcon;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            return createShape(d, elem);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        shapeElement.attr('transform', `scale(${size / 100})`);\n        return selectElement(groupElement.node().appendChild(newShape));\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = ICON_MAP(shape).size(size)();\n        }\n        return makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    }\n    d[1] = 'circle';\n    return createShape(d, elem, 'circle');\n};\n\n/**\n * Returns the icon of the legend item\n *\n * @param {Object} datum Data property attached to the item\n * @param {number} width width of the item\n * @param {number} height height of the item\n * @return {Object|string} returns the path string or the string name of the icon\n * @memberof Legend\n */\nexport const getLegendIcon = (datum, width, height, defaultIcon) => {\n    const icon = ICON_MAP(datum[1]);\n\n    if (icon) {\n        return icon.size(datum[3] || Math.min(width, height) * Math.PI);\n    }\n    return ICON_MAP(datum[3] ? 'circle' : defaultIcon).size(datum[3] || Math.min(width, height) * Math.PI);\n};\n\n/**\n *\n *\n */\nexport const renderIcon = (icon, container, datum, context) => {\n    const {\n        classPrefix,\n        iconHeight,\n        iconWidth,\n        maxIconWidth,\n        padding,\n        color\n    } = context;\n    const svg = makeElement(container, 'svg', f => [f], `${classPrefix}-legend-icon-svg`)\n    .attr(WIDTH, maxIconWidth)\n    .attr(HEIGHT, iconHeight)\n    .style(WIDTH, `${maxIconWidth}px`)\n    .style(HEIGHT, `${iconHeight}px`);\n\n    if (icon !== RECT) {\n        const group = makeElement(svg, 'g', [datum[1]], `${classPrefix}-legend-icon`);\n        createShape(datum, group, datum[3] ? 'circle' : 'square', iconWidth, iconHeight)\n                        .attr('transform', `translate(${maxIconWidth / 2 - padding} ${iconHeight / 2})`)\n                        .attr('fill', datum[2] || color);\n    } else {\n        makeElement(svg, RECT, [datum[1]], `${classPrefix}-legend-icon`)\n                        .attr('x', 0)\n                        .attr('y', 0)\n                        .attr(WIDTH, maxIconWidth)\n                        .attr(HEIGHT, iconHeight)\n                        .attr('fill', datum[2] || color);\n    }\n};\n\n/**\n * Renders the items in the legend i.e, icon and text\n *\n * @param {DOM} container Point where item is to be mounted\n * @memberof Legend\n */\nexport const renderDiscreteItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n           item,\n           classPrefix\n    } = context.config();\n    const {\n        maxIconWidth,\n        padding\n    } = context.measurement();\n    const {\n            width: iconWidth,\n            height: iconHeight,\n            color,\n            className\n        } = item.icon;\n\n    const textOrientation = item.text.orientation;\n    const formatter = item.text.formatter;\n\n    labelManager.useEllipsesOnOverflow(true);\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, false, context),\n        height: d => applyItemStyle(d, HEIGHT, false, context),\n        'text-align': CENTER,\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context))\n                            .style(`padding-${textOrientation === RIGHT ? LEFT : RIGHT}`, '0px');\n        } else {\n            // const icon = getLegendIcon(d, iconWidth, iconHeight, type);\n            selectElement(this).classed(`${classPrefix}-${className}`, true);\n            selectElement(this).classed(`${classPrefix}-${className}-${i}`, true);\n            renderIcon('circle', selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                // iconWidth: 2 * Math.sqrt(d[3] / Math.PI) || iconWidth,\n                iconHeight,\n                maxIconWidth,\n                padding,\n                color\n            });\n        }\n    });\n};\n\n/**\n* Renders the items in the legend i.e, icon and text\n*\n* @param {DOM} container Point where item is to be mounted\n* @memberof Legend\n*/\nexport const renderStepItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n      item,\n      position,\n      classPrefix\n   } = context.config();\n    const {\n      maxItemSpaces,\n      maxIconWidth,\n      padding\n   } = context.measurement();\n    const {\n       width,\n       height,\n       color\n   } = item.icon;\n    const {\n        formatter\n   } = item.text;\n\n    labelManager.useEllipsesOnOverflow(true);\n    const { iconHeight, iconWidth, stepPadding } = positionConfig[position].getStepSpacesInfo({\n        maxItemSpaces, height, width\n    });\n\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, stepPadding.horizontal, context),\n        height: d => applyItemStyle(d, HEIGHT, stepPadding.vertical, context),\n        'text-align': 'center',\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context));\n        } else {\n            renderIcon(RECT, selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                iconHeight,\n                maxIconWidth,\n                color\n            });\n        }\n    });\n};\n","import {\n    FieldType,\n    DimensionSubtype,\n    formatTemporal\n} from 'muze-utils';\nimport SimpleLegend from './simple-legend';\nimport { DISCRETE, LEFT, SIZE } from '../enums/constants';\nimport { getScaleInfo } from './legend-helper';\nimport { createLegendSkeleton, createItemSkeleton, renderDiscreteItem } from './renderer';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class DiscreteLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new DiscreteLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof DiscreteLegend\n     */\n    static type () {\n        return DISCRETE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof DiscreteLegend\n     */\n    dataFromScale (scale) {\n        const { scaleType, domain, scaleFn } = getScaleInfo(scale);\n        let domainForLegend = [...new Set(domain)];\n        const field = this.metaData().getFieldspace().fields[0];\n        const { type, subtype } = field.schema();\n\n        domainForLegend = domainForLegend.map((ele, i) => {\n            let value = 0;\n            let range = 0;\n            const rawVal = domainForLegend[i];\n            if (type === FieldType.MEASURE) {\n                value = (+domainForLegend[i]).toFixed(0);\n                const nextVal = domainForLegend[i + 1] ? +domainForLegend[i + 1] : +value;\n                range = [value, nextVal.toFixed(0)];\n            } else {\n                let domainVal = rawVal;\n                if (subtype === DimensionSubtype.TEMPORAL) {\n                    domainVal = formatTemporal(domainForLegend[i], field.minimumConsecutiveDifference());\n                }\n                value = domainVal;\n                range = [domainVal];\n            }\n            return {\n                [scaleType]: scale[scaleFn](ele),\n                value,\n                id: i,\n                range,\n                rawVal\n            };\n        }).filter(d => d.value !== null);\n\n        domainForLegend = scaleType === SIZE ? domainForLegend.sort((a, b) => a[scaleType] - b[scaleType])\n            : domainForLegend;\n        return domainForLegend;\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const data = this.data();\n        const { classPrefix } = this.config();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n        renderDiscreteItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n}\n","import { makeElement, applyStyle } from 'muze-utils';\nimport { ContinousAxis } from '@chartshq/muze-axis';\nimport { BOTTOM, RIGHT } from '../enums/constants';\nimport { ALIGN } from './defaults';\nimport '../styles.scss';\n\n/**\n *\n *\n * @param {*} data\n *\n */\nexport const getGradientDomain = (data) => {\n    if (typeof data[0].value === 'number') {\n        return data.reduce((accumulator, currentValue) =>\n            [Math.min(currentValue.value, accumulator[0]), Math.max(currentValue.value, accumulator[1])],\n                [Number.MAX_VALUE, Number.MIN_VALUE]);\n    }\n    return data.map(e => e.value);\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} domain\n *\n */\nexport const makeLinearGradient = (container, data, domain) => {\n    const defs = makeElement(container, 'defs', [1]);\n    const linearGradient = makeElement(defs, 'linearGradient', [1])\n                .attr('id', 'linear-gradient')\n                .attr('x1', '0%')\n                .attr('y2', '0%');\n    makeElement(linearGradient, 'stop', data, 'stop-gradient')\n                    .attr('offset', d => `${(d.value - domain[0]) * 100 / (domain[1] - domain[0])}%`)\n                    .attr('stop-color', d => d.color);\n    return linearGradient;\n};\n\n/**\n * Creates an axis cell with a linear axis for computing space and\n * creating gradient legend\n *\n * @return {AxisCell} Instance of Axis Cell for the gradient axis\n * @memberof Legend\n */\nexport const createAxis = (context) => {\n    const data = context.data();\n    const { align } = context.config();\n    const AxisCell = context._cells.AxisCell;\n    const newAxis = new ContinousAxis({\n        id: `legend-${context._id}`,\n        orientation: align === ALIGN.VERTICAL ? RIGHT : BOTTOM,\n        style: context._computedStyle,\n        nice: false,\n        showAxisName: false,\n        tickValues: data.map(d => d.value),\n        fixedBaseline: false,\n        labels: {\n            rotation: 0\n        }\n    }, { labelManager: context._labelManager });\n\n    newAxis.domain(getGradientDomain(data));\n    newAxis.range([1, 1]);\n    return new AxisCell().source(newAxis).config({\n        margin: { left: 0, bottom: 0, top: 0, right: 0 }\n    });\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} classPrefix\n *\n * @memberof GradientLegend\n */\nconst createLegendSkeleton = (container, classPrefix, data) => {\n    const domain = getGradientDomain(data);\n    const legendContainer = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    const legendGradSvg = makeElement(legendContainer, 'svg', [1], `${classPrefix}-gradient`);\n    const legendGradCont = makeElement(legendGradSvg, 'g', [1], `${classPrefix}-gradient-group`);\n    const linearGradient = makeLinearGradient(legendGradSvg, data, domain);\n    const legendRect = makeElement(legendGradCont, 'rect', [1], `${classPrefix}-gradient-rect`);\n\n    return {\n        legendContainer,\n        legendGradCont,\n        legendGradSvg,\n        linearGradient,\n        legendRect\n    };\n};\n\n/**\n * Renders the axis for the gradient\n *\n * @param {Selection} container Point where axis is to be mounted\n * @param {number} height Height for axis\n * @param {number} width Width for axis\n * @memberof Legend\n */\nexport const renderAxis = (context, container, height, width) => {\n    const axis = context.axis();\n\n    axis.setAvailableSpace(width, height);\n    axis.render(container.node());\n    axis.source().render();\n};\n\n/**\n * Renders gradient legends\n *\n * @param {Selection} container Point where the legend is to be appended\n * @memberof GradientLegend\n */\nexport const renderGradient = (context, container) => {\n    let gradHeight = 0;\n    let gradWidth = 0;\n    const {\n        align,\n        classPrefix,\n        item\n    } = context.config();\n    const data = context.data();\n    // Create the skeleton for the legend\n    const {\n        legendContainer,\n        legendGradSvg,\n        legendGradCont,\n        linearGradient,\n        legendRect\n    } = createLegendSkeleton(container, classPrefix, data);\n    const labelDim = context.axis().source().getAxisDimensions().tickDimensions;\n    const {\n        padding,\n        margin,\n        border,\n        titleSpaces,\n        maxItemSpaces,\n        maxHeight,\n        maxWidth,\n        height,\n        width\n    } = context.measurement();\n    const gradientDimensions = {};\n\n    gradHeight = Math.floor(height - (titleSpaces.height + 2 * margin + 2 * border));\n    gradWidth = Math.floor(width - (margin * 2 + border * 2));\n\n    if (align === ALIGN.HORIZONTAL) {\n        gradientDimensions.height = item.icon.height;\n        gradientDimensions.width = gradWidth - 2 * padding - labelDim.width / 2;\n        linearGradient.attr('x2', '100%').attr('y1', '0%');\n        legendGradCont.attr('transform', `translate( ${labelDim.width / 2} 0)`);\n        renderAxis(context, legendContainer, gradHeight - item.icon.height - padding, gradWidth - 2 * padding - 1);\n        legendContainer.classed(`${classPrefix}-overflow-x`, width > maxWidth);\n\n        applyStyle(legendContainer, {\n            height: `${maxItemSpaces.height + border + padding}px`,\n            width: `${Math.min(width, maxWidth)}px`,\n            padding: `${padding}px`\n        });\n\n        legendRect.attr('height', gradientDimensions.height);\n        legendRect.attr('width', gradientDimensions.width - labelDim.width / 2);\n    } else {\n        gradientDimensions.height = gradHeight - 2 * padding - labelDim.height / 2;\n        gradientDimensions.width = item.icon.width;\n        linearGradient.attr('x2', '0%').attr('y1', '100%');\n        legendGradCont.attr('transform', `translate(0 ${labelDim.height / 2})`);\n        renderAxis(context, legendContainer, gradHeight - 2 * padding - 1, gradWidth - item.icon.width - padding * 2);\n        legendContainer.classed(`${classPrefix}-overflow-y`, height > maxHeight);\n        applyStyle(legendContainer, {\n            height: `${Math.min(height, maxHeight)}px`,\n            width: `${width}px`,\n            padding: `${padding}px`\n        });\n        legendRect.attr('height', gradientDimensions.height - labelDim.height / 2);\n        legendRect.attr('width', gradientDimensions.width);\n    }\n\n    // Apply Styles to the legend plot area\n    applyStyle(legendGradSvg, {\n        height: `${gradientDimensions.height}px`,\n        width: `${gradientDimensions.width}px`\n    });\n\n        // Apply styles to the legend rect\n    applyStyle(legendRect, {\n        fill: 'url(#linear-gradient)'\n    });\n    legendGradSvg.attr('height', gradientDimensions.height);\n    legendGradSvg.attr('width', gradientDimensions.width);\n\n    context.measurement({\n        gradientDimensions\n    });\n    context._legendGradientSvg = legendGradSvg;\n    return context;\n};\n","import SimpleLegend from './simple-legend';\nimport { getScaleInfo, getInterpolatedData } from './legend-helper';\nimport { GRADIENT, LEFT, SIZE } from '../enums/constants';\nimport { renderGradient, createAxis } from './gradient-helper';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class GradientLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new GradientLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof GradientLegend\n     */\n    static type () {\n        return GRADIENT;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axis\n     *\n     * @memberof GradientLegend\n     */\n    axis (...axis) {\n        if (axis.length) {\n            this._axis = axis[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof GradientLegend\n     */\n    dataFromScale (scale) {\n        let domainForLegend = [];\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainForLegend[0] = domain[0];\n            }\n            domainForLegend = [...domainForLegend, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainForLegend.push(domain[1]);\n            }\n        } else {\n            domainForLegend = getInterpolatedData(domain, steps - 1);\n        }\n        domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n        return domainForLegend.map((ele, i) => {\n            const value = domainForLegend[i];\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor()\n                    : scale[scaleFn](Math.floor(ele)),\n                value: +value.toFixed(2),\n                id: i\n            };\n        }).filter(d => d.value !== null);\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        const axis = createAxis(this);\n        const axisSpace = axis.getLogicalSpace();\n        const space = { width: axisSpace.width - effPadding, height: axisSpace.height - effPadding };\n        const axisDomainLength = axis.source().domain().length;\n        const labelSpaces = new Array(axisDomainLength).fill(space);\n\n        this.axis(axis);\n        return labelSpaces;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof GradientLegend\n     */\n    getDrawingContext () {\n        return {\n            svgContainer: this._legendGradientSvg\n        };\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        renderGradient(this, legendContainer);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof SimpleLegend\n     */\n    getCriteriaFromData (data) {\n        return [[this.fieldName()], [data.value]];\n    }\n}\n","import SimpleLegend from './simple-legend';\nimport {\n    getScaleInfo,\n    getInterpolatedData,\n    getDomainBounds\n} from './legend-helper';\nimport {\n    createLegendSkeleton,\n    createItemSkeleton,\n    renderStepItem\n} from './renderer';\nimport { STEP, RECT, LEFT, SIZE, UPPER, LOWER } from '../enums/constants';\nimport { stepData } from './position-config';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class StepLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new StepLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof StepLegend\n     */\n    static type () {\n        return STEP;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof StepLegend\n     */\n    dataFromScale (scale) {\n        let domainLeg = [];\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        const { formatter } = this.config();\n        const domainBounds = {\n            lower: null, upper: null\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainBounds.lower = [`${formatter.bounds.lower} ${steps[0]}`];\n            }\n            domainLeg = [...domainLeg, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainBounds.upper = [`${formatter.bounds.upper} ${steps[steps.length - 1]}`];\n            }\n        } else {\n            domainLeg = getInterpolatedData(domain, steps);\n        }\n\n        domainLeg = [...new Set(domainLeg)].sort((a, b) => a - b);\n        domainLeg = domainLeg.map((ele, i) => {\n            let value = null;\n            if (i < domainLeg.length - 1) {\n                value = `${(ele.toFixed(1))} - ${(+domainLeg[i + 1].toFixed(1))}`;\n            }\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n                value,\n                id: i + 1,\n                range: [ele, domainLeg[i + 1]]\n            };\n        }).filter(d => d.value !== null);\n\n        if (domainBounds.lower) {\n            const lowerBounds = getDomainBounds(LOWER, { scale, scaleFn, scaleType },\n                { domain, steps, domainBounds });\n            domainLeg = [lowerBounds, ...domainLeg];\n        }\n        if (domainBounds.upper) {\n            const upperBounds = getDomainBounds(UPPER, { scale, scaleFn, scaleType },\n            { domain, steps, domainBounds, domainLeg });\n            domainLeg = [...domainLeg, upperBounds];\n        }\n        return domainLeg;\n    }\n\n     /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding, align) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        return super.getLabelSpaces(effPadding, align);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return RECT;\n    }\n\n     /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const { classPrefix, position } = this.config();\n        const data = stepData(this.data())[position];\n\n        const legendContainer = super.render(this.mount());\n\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n\n        renderStepItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        return {\n            [fieldName]: data.range\n        };\n    }\n}\n","import { GradientLegend, DiscreteLegend, StepLegend } from '@chartshq/muze-legend';\n\n/**\n * Contants to be used as attr\n */\nexport const ROWS = 'rows';\nexport const COLUMNS = 'columns';\nexport const DATA = 'data';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\nexport const DETAIL = 'detail';\nexport const LAYERS = 'layers';\nexport const TRANSFORM = 'transform';\nexport const INITIALIZED = 'isInitialized';\nexport const SOURCE = 'source';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const PADDING = 'padding';\nexport const BORDER = 'border';\nexport const MARGIN = 'margin';\nexport const CONFIG = 'config';\nexport const MOUNT = 'mount';\nexport const CANVAS_UPDATED = 'canvasUpdated';\nexport const CLASSPREFIX = 'classPrefix';\nexport const POLICIES = '_policies';\nexport const LEGEND = 'legend';\nexport const TITLE = 'title';\nexport const SUB_TITLE = 'subtitle';\nexport const RESOLVE = 'resolve';\nexport const DISCRETE = 'discrete';\nexport const STEP_COLOR = 'step-color';\nexport const GRADIENT = 'gradient';\nexport const LINEAR = 'linear';\nexport const ORDINAL = 'ordinal';\nexport const MUZE_PREFIX = 'muze';\n\nexport const TITLE_TEMPLATE_NOT_ALLOWED_TAGS = [\n    'script',\n    'style'\n];\n\nexport const LEGEND_TYPE_MAP = {\n    [`${ORDINAL}-${true}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${COLOR}`]: StepLegend,\n    [`${LINEAR}-${false}-${COLOR}`]: GradientLegend\n};\n\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const GROUP = 'group';\nexport const LAYOUT = 'layout';\nexport const RETINAL = 'retinal';\nexport const DIMENSION = 'dimension';\nexport const MEASURE = 'measure';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\nexport const HORIZONTAL_CENTER = 'h-center';\nexport const VERTICAL_CENTER = 'v-center';\nexport const HIDDEN = 'hidden';\nexport const OVERFLOW = 'overflow';\nexport const OVERFLOW_X = 'overflow-x';\nexport const OVERFLOW_Y = 'overflow-y';\nexport const AUTO = 'auto';\nexport const VISIBLE = 'visible';\n","import { ComposedVars, SimpleVariable } from '@chartshq/visual-group';\nimport { TITLE_TEMPLATE_NOT_ALLOWED_TAGS } from './constants';\n\n/**\n * This method creates a new composed variable instance from multiple variables. This is required when we have multiple\n * variables on a single axis and the union of domain of all the variables needs to be set on the axis.\n *\n * To create a new composed variable from multiple fields,\n * ```\n *  const sharedVar = share('open', 'high', 'low', 'close');\n *  canvas.rows([sharedVar])\n *      .columns(['date']);\n * ```\n *\n * @module Operators\n * @public\n * @function share\n * @param {Array} vars Variable names.\n *\n * @return {ComposedVars} Instance of composed variable\n */\nexport const share = (...vars) => new ComposedVars(...vars.map(variable => new SimpleVariable(variable)));\n\n/**\n *\n *\n * @param {*} node\n *\n */\nfunction treeShakeNode (node) {\n    if (node.nodeType !== Node.ELEMENT_NODE) { return; }\n\n    if (TITLE_TEMPLATE_NOT_ALLOWED_TAGS.indexOf(node.tagName.toLowerCase()) !== -1) {\n        node.parentNode.removeChild(node);\n    } else {\n        for (const childNode of node.childNodes) {\n            treeShakeNode(childNode);\n        }\n    }\n}\n\n/**\n * A string template tagged function which sanitizes input html formatted string according to the allowed html tags.\n * This is used to render html in canvas components like title and tooltip.\n *\n * To render html in canvas components,\n * ```\n *     canvas.title(html`<span style=font-size:20px;>TITLE</span>`);\n * ```\n *\n * @public\n * @module Operators\n * @function html\n * @param {Array.<string>} strings - The string parts of the template.\n * @param {Array} exps - The list of evaluated expression values.\n *\n * @return {Function} Returns a function which returns the sanitized html string.\n */\nexport function html (strings, ...exps) {\n    let htmlCode = '';\n    const expLn = exps.length;\n    let i = 0;\n\n    for (; i < expLn; ++i) {\n        htmlCode += strings[i] + exps[i];\n    }\n    htmlCode += strings[i];\n\n    const frag = document.createDocumentFragment();\n    const wrapper = document.createElement('div');\n\n    frag.appendChild(wrapper);\n    wrapper.innerHTML = htmlCode;\n\n    treeShakeNode(wrapper);\n    const { innerHTML } = wrapper;\n\n    return () => innerHTML;\n}\n","import { mergeRecursive, CommonProps } from 'muze-utils';\n\nconst defaultPolicy = (registrableComponents) => {\n    const aliases = registrableComponents.map(comp => comp.alias());\n    return {\n        behaviours: {\n            '*': (propagationPayload) => {\n                const propagationCanvas = propagationPayload.sourceCanvas;\n                return propagationCanvas ? aliases.indexOf(propagationCanvas) !== -1 : true;\n            }\n        }\n    };\n};\n\nconst listenerFn = (canvas, fn) => () => {\n    const valueMatrix = canvas.composition().visualGroup.matrixInstance().value;\n    valueMatrix.each(cell => fn(cell.valueOf().firebolt()));\n};\n\nconst canvasIterator = (canvases, iteratorFn, cFn) => {\n    canvases.forEach((canvas) => {\n        const matrix = canvas.composition().visualGroup.matrixInstance().value;\n        matrix.each(cell => iteratorFn(cell.valueOf().firebolt()));\n        cFn && cFn(canvas);\n        // Also register actions on canvas update\n        const throwback = canvas._throwback;\n\n        throwback.registerImmediateListener([CommonProps.MATRIX_CREATED],\n            listenerFn(canvas, iteratorFn));\n    });\n};\n\n/**\n * This class is initiated only once in lifecycle and is reponsible for regisration of physical and behavioural\n * actions and side effects and the mapping between them.\n *\n * To get the instance of action model\n * ```\n *  const ActionModel = muze.ActionModel;\n * ```\n *\n * @public\n * @module ActionModel\n */\nclass ActionModel {\n    constructor () {\n        this._registrableComponents = [];\n    }\n\n    /**\n     * Takes an array of canvases on which the physical and behavioural actions will get registered.\n     *\n     * @public\n     * @param  {Canvas} components Array of canvases\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    for (...components) {\n        this._registrableComponents = components;\n        return this;\n    }\n\n    /**\n     * Registers physical actions on the canvases. It takes an object with key as the name of action and value having\n     * the definition of the action.\n     *\n     * To register a {@link PhysicalAction},\n     * ```\n     *  const ActionModel = muze.ActionModel;\n     *  ActionModel\n     *       // Physical actions will be registered on these canvases.\n     *      .for(canvas)\n     *      .registerPhysicalActions({\n     *          // Key is the name of physical action.\n     *          ctrlClick: (firebolt) => (targetEl, behaviours) => {\n     *              targetEl.on('click', function (data) {\n     *                  const event = utils.getEvent();\n     *                  const pos = utils.getClientPoint(event, this);\n     *                  // Get the data point nearest to the mouse position.\n     *                  const nearestPoint = firebolt.context.getNearestPoint(pos, {\n     *                      data\n     *                  });\n     *                  // Prepare the payload\n     *                  const payload = {\n     *                      criteria: nearestPoint.id\n     *                  };\n     *                  behaviours.forEach((behaviour) => firebolt.dispatchBehaviour(behaviour, payload));\n     *              });\n     *          }\n     *      });\n     * ```\n     * @public\n     *\n     * @param {Object} action Names of physical actions and their definitions.\n     *\n     * @return {ActionModel} Instance of the action model.\n     */\n    registerPhysicalActions (action) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalActions(action);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalActions(action);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers behavioural actions on the canvases. It takes definitions of the behavioural actions and registers\n     * them on the canvases. Every behavioural action must inherit the {@link GenericBehaviour} class.\n     *\n     * To register a behavioural action\n     * ```\n     *  // Define a new behavioural action\n     *  class SingleSelectBehaviour extends GenericBehaviour {\n     *      static formalName () {\n     *          return 'singleSelect';\n     *      }\n     *\n     *      setSelectionSet (addSet, selectionSet) {\n     *          if (addSet === null) {\n     *              selectionSet.reset();\n     *          } else if (addSet.length) {\n     *              const existingAddSet = selectionSet.getExistingEntrySet(addSet);\n     *              if (existingAddSet.length){\n     *                  selectionSet.reset();\n     *              } else {\n     *               selectionSet.add(addSet);\n     *              }\n     *          } else {\n     *              selectionSet.reset();\n     *          }\n     *      }\n     * }\n     * muze.ActionModel.registerBehaviouralActions(SingleSelectBehaviour);\n     * ```\n     *\n     * @public\n     *\n     * @param {GenericBehaviour} actions Definition of behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerBehaviouralActions (...actions) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerBehaviouralActions(actions);\n        }, (canvas) => {\n            canvas.firebolt().registerBehaviouralActions(actions);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of physical and behavioural actions. This mapping is used to establish which behavioural\n     * actions should be dispatched on any triggering of physical actions.\n     *\n     * To map physical actions with behavioural actions,\n     * ```\n     *  muze.ActionModel.registerPhysicalBehaviouralMap({\n     *      ctrlClick: {\n     *          behaviours: ['select'] // This array must be the formal names of the behavioural actions.\n     *      }\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Contains the physical and behavioural action map.\n     * ```\n     *   {\n     *      // Name of the physical action\n     *      click: {\n     *          // Target element selector. This is an optional field. If not passed, then by default takes the\n     *          // container element of visual unit.\n     *          target: '.muze-layers-area path',\n     *          // Behaviours which should be dispatched on triggering of the mapped physical action.\n     *          behaviours: ['select']\n     *      }\n     *   }\n     * ```\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPhysicalBehaviouralMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalBehaviouralMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalBehaviouralMap(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers what behaviour to propagate on dispatch of a certain behavioural action. By default, when any\n     * behavioural action is dispatched, then the same behavioural action gets propagated to all the other canvases.\n     * This can be changed using this api.\n     *\n     * To register what behaviour should be propagated on dispatch of any behavioural action,\n     * ```\n     *  ActionModel.for(canvas1, canvas2).registerPropagationBehaviourMap({\n     *      select: 'filter',\n     *      brush: 'filter'\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Propagation behaviour map.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPropagationBehaviourMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPropagationBehaviourMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPropagationBehaviourMap(map);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of side effects and behavioural actions. It takes an object which contains key as the\n     * name of behavioural action and the side effects which will be linked to it.\n     *\n     * To map side effects to select behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: ['infoBox'] // This array must be the formal names of the side effects\n     *  });\n     * ```\n     *\n     * To map side effects to select behaviour, but disable all the default side effects attached with this behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: {\n     *          effects: ['infoBox'],\n     *          preventDefaultActions: true\n     *      }\n     *  });\n     * @public\n     * @param {Object} map Mapping of behavioural actions and side effects.\n     * ```\n     *     {\n     *          select: ['infoBox']\n     *     }\n     * ```\n     * @return {ActionModel} Instance of action model.\n     */\n    mapSideEffects (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.mapSideEffects(map);\n        }, (canvas) => {\n            canvas.firebolt().mapSideEffects(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers the side effects on the registered canvases. It takes definitions of side effects and registers them\n     * on the canvases. Every side effect must inherit the base class {@link GenericSideEffect} or\n     * {@link SpawnableSideEffect} or {@link SurrogateSideEffect} class.\n     *\n     * ```\n     * // Define a custom side effect\n     *  class InfoBox extends SpawnableSideEffect {\n     *      static formalName () {\n     *          return 'infoBox';\n     *      }\n     *\n     *      apply (selectionSet) {\n     *      }\n     *  }\n     *  muze.ActionModel.registerSideEffects(InfoBox);\n     * ```\n     * @public\n     * @param  {GenericSideEffect} sideEffects Definition of side effects.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerSideEffects (...sideEffects) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerSideEffects(sideEffects);\n        }, (canvas) => {\n            canvas.firebolt().registerSideEffects(sideEffects);\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between behavioural actions and physical actions. It takes an array of behavioural action\n     * and it's physical action.\n     *\n     * To dissociate behavioural actions from physical actions\n     * ```\n     *  muze.ActionModel.dissociateBehaviour(['select', 'click'], ['highlight', 'hover']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of behavioural action and physical action.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateBehaviour (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateBehaviour(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateBehaviour(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between side effects and behavioural actions. It takes an array of formal names of the side\n     * effects and it's linked behavioural action.\n     *\n     * To dissociate side effects from behavioural actions\n     * ```\n     *  muze.ActionModel.dissociateSideEffect(['crossline', 'highlight'], ['selectionBox', 'brush']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of side effects and behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateSideEffect (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateSideEffect(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateSideEffect(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * By default cross interactivity is disabled between canvases. This enables cross interaction between the canvases\n     * so that any action happening in one canvas gets dispatched on other canvases as well. An optional policy can also\n     * be passed in this method. The policy can be used to control on which canvases the behavioural actions and\n     * side effects gets dispatched.\n     *\n     * To just enable cross interactivity between two canvases,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity();\n     * ```\n     *\n     * To enable cross interactivity but enable any behavioural action only when it is triggered from canvas1.\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          behaviours: {\n     *              // Here * stands for any behavioural action name. We can also give any name of behavioural action\n     *              // in place of this.\n     *              '*': (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     *\n     * To enable cross interactivity but enable tooltip effect if the action is propagated from canvas1,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          sideEffects: {\n     *              tooltip: (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} policy Policy definition.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    enableCrossInteractivity (policy = {}) {\n        const registrableComponents = this._registrableComponents;\n        const mergedPolicy = mergeRecursive(mergeRecursive({}, defaultPolicy(registrableComponents)), policy);\n\n        registrableComponents.forEach((canvas) => {\n            canvas.firebolt().crossInteractionPolicy(mergedPolicy);\n        });\n\n        return this;\n    }\n}\n\nexport const actionModel = (() => new ActionModel())();\n","import { MUZE_PREFIX } from '../constants';\n\nexport const TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 4,\n    className: `${MUZE_PREFIX}-title-container`\n};\n\nexport const SUB_TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 16,\n    maxLines: 2,\n    className: `${MUZE_PREFIX}-subtitle-container`\n};\n\nexport const GRID = 'grid';\n\nexport const CANVAS = 'canvas';\n\nexport const LAYOUT_ALIGN = {\n    TOP: 'top',\n    LEFT: 'left',\n    RIGHT: 'right',\n    BOTTOM: 'bottom'\n};\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    ROWS,\n    COLUMNS,\n    COLOR,\n    SHAPE,\n    SIZE,\n    DETAIL,\n    LAYERS,\n    TRANSFORM,\n    TITLE,\n    SUB_TITLE\n} from '../constants';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG } from './defaults';\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Canvas.\n * Canvas merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module LocalOptions\n */\n\nexport const localOptions = {\n    [ROWS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLUMNS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLOR]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || config === null) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SHAPE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || config === null) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SIZE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || config === null) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [DETAIL]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n\n    [LAYERS]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [TRANSFORM]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object'\n        }\n    }\n};\n\nexport const canvasOptions = {\n    [TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(title) => {\n                if (typeof title === 'string') {\n                    const t = () => title;\n                    t._sanitized = true;\n                    return t;\n                }\n                return title;\n            }, (titleConfig) => {\n                const defConfig = mergeRecursive({}, TITLE_CONFIG);\n                return mergeRecursive(defConfig, titleConfig);\n            }]\n        }\n    },\n    [SUB_TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(subtitle) => {\n                if (typeof subtitle === 'string') {\n                    const sub = () => subtitle;\n                    sub._sanitized = true;\n                    return sub;\n                }\n                return subtitle;\n            }, (subtitleConfig) => {\n                const defConfig = mergeRecursive({}, SUB_TITLE_CONFIG);\n                return mergeRecursive(defConfig, subtitleConfig);\n            }]\n        }\n    }\n};\n","export default class LayoutComponent {\n    constructor (name, dimensions, seed) {\n        this._seed = seed;\n        this._boundBox = {\n            height: dimensions.height,\n            width: dimensions.width,\n            top: null,\n            left: null\n        };\n        this._renderAt = null;\n        this._alignWith = null;\n        this._alignment = null;\n        this._target = null;\n        this._position = null;\n        this._componentName = name;\n        this._className = null;\n    }\n\n    getLogicalSpace () {\n        throw new Error('getLogicalSpace is not defined');\n    }\n\n    setSpatialConfig () {\n        throw new Error('setSpatialSpace is not defined');\n    }\n\n    name (param) {\n        if (param) {\n            this._componentName = param;\n        }\n        return this._componentName;\n    }\n\n    target (param) {\n        if (param) {\n            this._target = param;\n        }\n        return this._target;\n    }\n\n    position (param) {\n        if (param) {\n            this._position = param;\n        }\n        return this._position;\n    }\n\n    alignment (param) {\n        if (param) {\n            this._alignment = param;\n        }\n        return this._alignment;\n    }\n\n    alignWith (param) {\n        if (param) {\n            this._alignWith = param;\n        }\n        return this._alignWith;\n    }\n\n    renderAt (param) {\n        if (param) {\n            this._renderAt = param;\n        }\n        return this._renderAt;\n    }\n\n    boundBox (param) {\n        if (param) {\n            Object.assign(this._boundBox, param);\n        }\n        return this._boundBox;\n    }\n\n    className (param) {\n        if (param) {\n            this._className = param;\n        }\n        return this._className;\n    }\n\n    draw () {\n        throw new Error('draw is not defined');\n    }\n  }\n\n","import LayoutComponent from './layoutComponent';\n\nclass DummyComponent extends LayoutComponent {\n    getLogicalSpace () {\n        return {\n            width: this.boundBox().width,\n            height: this.boundBox().height\n        };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n        return this;\n    }\n\n    draw () {\n        if (!this.component) {\n            throw new Error(`Component not set for ${this.componentName}`);\n        }\n        this.component.mount(document.getElementById(this.renderAt)); // Change the draw method to component draw\n        return this;\n    }\n}\n\nexport default DummyComponent;\n","export const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    interaction: {\n        sideEffect: 'individual'\n    },\n    pagination: 'scroll',\n    scrollBar: {\n        thickness: 10,\n        speed: 2,\n        vertical: {\n            align: 'right'\n        },\n        horizontal: {\n            align: 'bottom'\n        }\n    },\n    legend: {\n        position: 'right',\n        color: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        shape: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        size: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        }\n    },\n    showHeaders: false,\n    minWidth: 100,\n    minHeight: 100,\n    facet: {\n        rows: {\n            minCharacters: 3\n        },\n        columns: {\n            maxLines: 2,\n            verticalAlign: 'middle',\n            minCharacters: 1\n        }\n    },\n    border: {\n        style: 'solid',\n        color: '#d6d6d6',\n        width: 2,\n        collapse: true,\n        spacing: 0\n    },\n    autoGroupBy: {\n        disabled: false\n    },\n    invalidValues: {}\n};\n","import { DEFAULT_CONFIG } from '../../../../muze/src/defaults';\n\nconst DEFAULT_WIDTH = 600;\nconst DEFAULT_HEIGHT = 400;\nconst DEFAULT_CLASS_NAME = `${DEFAULT_CONFIG.classPrefix}-layout-container-component`;\nconst NODE_PREFIX = `${DEFAULT_CONFIG.classPrefix}-layout-container`;\n\nexport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT,\n  DEFAULT_CLASS_NAME,\n  NODE_PREFIX\n};\n","export default class DefinitionModel {\n    constructor (config) {\n        this._host = config.host || null;\n        this._cut = config.cut || null;\n        this._ratioWeight = config.ratioWeight === 0 ? 0 : config.ratioWeight || 1;\n        this._preferred = config.preferred || false;\n        this._lanes = config.lanes || [];\n        this._remainingHeight = 0;\n        this._remainingWidth = 0;\n    }\n\n    host (host) {\n        if (host) {\n            this._host = host;\n        }\n        return this._host;\n    }\n\n    preferred (preferred) {\n        if (preferred) {\n            this._preferred = preferred;\n        }\n        return this._preferred;\n    }\n\n    cut (cut) {\n        if (cut) {\n            this._cut = cut;\n        }\n        return this._cut;\n    }\n\n    ratioWeight (ratioWeight) {\n        if (ratioWeight) {\n            this._ratioWeight = ratioWeight;\n        }\n        return this._ratioWeight;\n    }\n\n    lanes (lanes) {\n        if (lanes) {\n            this._lanes = lanes;\n        }\n        return this._lanes;\n    }\n\n    remainingHeight (remainingHeight) {\n        if (remainingHeight) {\n            this._remainingHeight = remainingHeight;\n        }\n        return this._remainingHeight;\n    }\n\n    remainingWidth (remainingWidth) {\n        if (remainingWidth) {\n            this._remainingWidth = remainingWidth;\n        }\n        return this._remainingWidth;\n    }\n}\n","import { NODE_PREFIX } from '../../constants/defaults';\nimport DefinitionModel from '../definition-manager/definitionModel';\nimport DummyComponent from '../../layout-component/dummy-component';\n/**\n * Compares two strings in lowercase\n *\n * @export\n * @param {string} value the value to be compared\n * @param {string} compareTo whom the value would be compared\n * @return {boolean} true if values are equal\n */\nexport function isEqual (value, compareTo) {\n    if (typeof value !== 'string' || typeof compareTo !== 'string') {\n        throw new TypeError('value and compareTo must be string');\n    }\n    return value.toLowerCase() === compareTo.toLowerCase();\n}\n\nexport const getNodeId = (() => {\n    let _uid = 0;\n    return () => `${NODE_PREFIX}-${++_uid}`;\n})();\n\nexport function yExtraSpace (node) {\n    let smallestHeight = 0;\n    if (node.getCutType() === 'v') {\n        smallestHeight = smallestExtraHeightHorizontally(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'h') {\n        node.children().forEach((child) => {\n            smallestHeight += yExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerHeight = node.boundBox().height;\n        const hostHeight = node.model().host().getLogicalSpace().height;\n\n        smallestHeight = containerHeight - hostHeight;\n        if (smallestHeight < 0) {\n            smallestHeight = 0;\n        }\n    } else {\n        smallestHeight = 0;\n    }\n    return smallestHeight;\n}\n\nexport function smallestExtraHeightHorizontally (node) {\n    let smallestHeight = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const h = yExtraSpace(child);\n        if (h < smallestHeight) {\n            smallestHeight = h;\n        }\n    });\n    return smallestHeight;\n}\n\nexport function xExtraSpace (node) {\n    let smallestWidth = 0;\n    if (node.getCutType() === 'h') {\n        smallestWidth = smallestExtraWidthVertically(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'v') {\n        node.children().forEach((child) => {\n            smallestWidth += xExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerWidth = node.boundBox().width;\n        const hostWidth = node.model().host().getLogicalSpace().width;\n        smallestWidth = containerWidth - hostWidth;\n        if (smallestWidth < 0) {\n            smallestWidth = 0;\n        }\n    } else {\n        smallestWidth = 0;\n    }\n    return smallestWidth;\n}\n\nexport function smallestExtraWidthVertically (node) {\n    let smallestWidth = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const w = xExtraSpace(child);\n        if (w < smallestWidth) {\n            smallestWidth = w;\n        }\n    });\n    return smallestWidth;\n}\n\nexport function determineBoundBox (bb, i, arr, instance) {\n    if (i) {\n    // if not first sibling, take boundbox from previous sibling\n        const lastSibling = arr[i - 1];\n        const { top: _top, left: _left, height: _height, width: _width } = lastSibling.boundBox();\n        return {\n            width: bb.width,\n            height: bb.height,\n\n            top: instance.parentCut() === 'h'\n        ? _top + _height : _top,\n\n            left: instance.parentCut() === 'h'\n        ? _left : _left + _width\n        };\n    }\n  // if first sibling, take boundbox from parent\n    const { top: _top, left: _left } = instance.parent().boundBox();\n    return {\n        width: bb.width,\n        height: bb.height,\n        top: _top,\n        left: _left\n    };\n}\n\n// prepares the targetComponent Map for target Mapping ie. where a component should lie\nexport function prepareTargetComponentMap (context) {\n    context.targetComponentMap(new Map());\n    context.componentMap().forEach((value) => {\n        if (context.targetComponentMap().has(value.target())) {\n            context.targetComponentMap().get(value.target()).push(value);\n        } else {\n            const temp = [];\n            temp.push(value);\n            context.targetComponentMap().set(value.target(), temp);\n        }\n    });\n}\n\nexport function getComponent (canvasComponent, componentName) {\n    const comp = canvasComponent.find(component => component.name() === componentName);\n    return (comp && comp !== -1) ? comp : null;\n}\nexport function createPlaceHolderComponent (height, width, position) {\n    const comp = new DummyComponent(0, { height, width });\n    comp.name('placeHolder');\n    comp.position(position);\n    return comp;\n}\n\nexport function placeComponent (definitionModel, component, isPreferred = false, isGridComponent = false) {\n    let cut = '';\n    let componentRatioWidth = 1;\n    let leftOvercomponentRationWidth = 1;\n    let leftHeight = 0;\n    let leftWidth = 0;\n\n    if (!component) {\n        return { first: definitionModel, second: definitionModel };\n    }\n\n    const { height: componentHeight, width: componentWidth } = component.getLogicalSpace();\n    const position = component.position();\n    if (position === 'top' || position === 'bottom') {\n        cut = 'h';\n        componentRatioWidth = componentHeight / definitionModel.remainingHeight();\n        leftHeight = definitionModel.remainingHeight() - componentHeight;\n        leftWidth = definitionModel.remainingWidth();\n    } else {\n        cut = 'v';\n        componentRatioWidth = componentWidth / definitionModel.remainingWidth();\n        leftWidth = definitionModel.remainingWidth() - componentWidth;\n        leftHeight = definitionModel.remainingHeight();\n    }\n    leftOvercomponentRationWidth = 1 - componentRatioWidth;\n\n// update parentModel\n    definitionModel.cut(cut);\n    const firstLaneConfig = {\n        host: component.name(),\n        cut: null,\n        ratioWeight: componentRatioWidth,\n        preferred: isGridComponent ? false : isPreferred,\n        lanes: []\n    };\n    const firstLane = new DefinitionModel(firstLaneConfig);\n    firstLane.remainingHeight(componentHeight);\n    firstLane.remainingWidth(componentWidth);\n\n    const secondLaneConfig = {\n        host: null,\n        cut: null,\n        ratioWeight: leftOvercomponentRationWidth,\n        preferred: isGridComponent ? false : !isPreferred,\n        lanes: []\n    };\n    const secondLane = new DefinitionModel(secondLaneConfig);\n    secondLane.remainingHeight(leftHeight);\n    secondLane.remainingWidth(leftWidth);\n    if (isPreferred) {\n        definitionModel.lanes([firstLane]);\n    } else if (position === 'top' || position === 'left') {\n        definitionModel.lanes([firstLane, secondLane]);\n    } else {\n        definitionModel.lanes([secondLane, firstLane]);\n    }\n    return { first: firstLane, second: secondLane };\n}\n\nexport function placeGridComponent (definitionModel, gridComponents) {\n    let tempDefModel = definitionModel;\n    const rows = gridComponents.length;\n    const column = rows ? gridComponents[0].length : 0;\n    const height = gridComponents.reduce((acc, val) => (acc + val[0].getLogicalSpace().height), 0);\n\n    for (let i = 0; i < column; i++) {\n        const iscolumnPreffered = i === column - 1;\n        const columnPlaceHolderComponent = createPlaceHolderComponent(height,\n                                                    gridComponents[0][i].getLogicalSpace().width, 'left');\n        const { first, second } = placeComponent(tempDefModel, columnPlaceHolderComponent, iscolumnPreffered);\n        tempDefModel = first;\n        for (let j = 0; j < rows; j++) {\n            const rowpreffred = j === (rows - 1);\n            tempDefModel = placeComponent(tempDefModel, gridComponents[j][i], rowpreffred, true).second;\n        }\n        tempDefModel = second;\n    }\n    return tempDefModel;\n}\n\nexport function negotiateDimension (node) {\n    let preferred;\n    let cumultiveExtraSpaceAmt = 0;\n    let alteredDim;\n    let nonAlteredDim;\n\n    const childrenLength = node.children().length;\n\n    for (let index = 0; index < childrenLength; index++) {\n        let fn;\n        let extraSpaceAmt;\n        const child = node.children()[index];\n\n        if (child.parentCut() === 'h') {\n            fn = yExtraSpace;\n            alteredDim = 'height';\n            nonAlteredDim = 'width';\n        } else {\n            fn = xExtraSpace;\n            alteredDim = 'width';\n            nonAlteredDim = 'height';\n        }\n  // if vertical then get extra height from other node and push it to the preferred node.\n  // for horizontal cut the same thing is to be done with width\n        if (child.isPreferred()) {\n    // push extra space in sink. Execute it when all non preferred space are computed.\n            preferred = child;\n\n            continue; // eslint-disable-line no-continue\n        }\n  // reduce own height and save it in a var\n        cumultiveExtraSpaceAmt += (extraSpaceAmt = fn(child));\n        child.boundBox()[alteredDim] -= extraSpaceAmt;\n  // update nonaltered dim from parent for any change which happened during negotiation\n        child.boundBox()[nonAlteredDim] = child.parent().boundBox()[nonAlteredDim];\n\n        negotiateDimension(child);\n    }\n\n    if (preferred) {\n        preferred.boundBox()[alteredDim] += cumultiveExtraSpaceAmt;\n        preferred.boundBox()[nonAlteredDim] = preferred.parent().boundBox()[nonAlteredDim];\n        negotiateDimension(preferred);\n    }\n}\n\nexport function computePosition (node) {\n    node.children().forEach((child, i, children) => {\n        const boundBox = determineBoundBox(child.boundBox(), i, children, child);\n        child.boundBox(boundBox);\n        computePosition(child);\n    });\n}\n\nexport function allocateBoundingBox (node) {\n    const totalWeight = node.children()\n                            .map(child => child.model().ratioWeight())\n                            .reduce((carry, val) => carry + val, 0);\n\n    node.children().forEach((child, i, children) => {\n        const lastSibling = children[i - 1];\n        const ratio = child.model().ratioWeight() / totalWeight;\n\n        if (child.parentCut() === 'h') {\n            child.boundBox({\n                top: i ? lastSibling.boundBox().top + lastSibling.boundBox().height : 0,\n                left: child.parent().boundBox().left,\n                height: child.parent().boundBox().height * ratio,\n                width: child.parent().boundBox().width\n            });\n        } else {\n            child.boundBox({\n                top: child.parent().boundBox().top,\n                left: i ? lastSibling.boundBox().left + lastSibling.boundBox().width : 0,\n                height: child.parent().boundBox().height,\n                width: child.parent().boundBox().width * ratio\n            });\n        }\n        allocateBoundingBox(child);\n    });\n}\n\n","import { getNodeId } from '../helper';\nimport { LayoutComponent } from '../../layout-component';\n\nclass Node {\n    constructor (data) {\n        this._model = data;\n        this._parent = null;\n        this._children = [];\n        this._parentCut = null;\n        this._boundBox = {\n            top: null,\n            left: null,\n            height: null,\n            width: null\n        };\n\n        this._id = this._model.host() instanceof LayoutComponent && this._model.host().renderAt() ?\n                    this._model.host().renderAt() :\n                    getNodeId();\n    }\n\n    addChildren (entries) {\n        this._children.push(...entries);\n        entries.forEach((e) => { e.parent(this); });\n    }\n\n    isRoot () {\n        return this._parent === null;\n    }\n\n    isLeaf () {\n        return !this._children.length;\n    }\n\n    getCutType () {\n        return this._model.cut();\n    }\n\n    isPreferred () {\n        return !!this._model.preferred();\n    }\n\n    children (children) {\n        if (children) {\n            this._children = children;\n        }\n        return this._children;\n    }\n\n    parent (parent) {\n        if (parent) {\n            this._parent = parent;\n        }\n        return this._parent;\n    }\n\n    parentCut (parentCut) {\n        if (parentCut) {\n            this._parentCut = parentCut;\n        }\n        return this._parentCut;\n    }\n\n    id (id) {\n        if (id) {\n            this._id = id;\n        }\n        return this._id;\n    }\n\n    model (model) {\n        if (model) {\n            this._model = model;\n        }\n        return this._model;\n    }\n\n    boundBox (bound) {\n        if (bound) {\n            this._boundBox = {\n                top: bound.top,\n                left: bound.left,\n                height: bound.height,\n                width: bound.width\n            };\n        }\n        return this._boundBox;\n    }\n  /**\n     * function to search a node and update it with the config provided.\n     * @param  {Object} nodeconfig\n     */\n    updateNode (nodeconfig) {\n        if (this._id === nodeconfig._id) {\n            this._model.cut(nodeconfig.cut);\n            this._model.ratioWeight(nodeconfig.ratioWeight);\n        } else {\n            this._children.forEach((node) => {\n                if (node._id === nodeconfig._id) {\n                    node.model.cut(nodeconfig.cut);\n                    node.model.ratioWeight(nodeconfig.ratioWeight);\n                    return;\n                }\n                this.searchNode(node, nodeconfig);\n            });\n        }\n    }\n\n  // Recursive function to search a node\n    searchNode (node, nodeconfig) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeconfig._id) {\n                childNode.model().cut(nodeconfig.cut);\n                childNode.model().ratioWeight(nodeconfig.ratioWeight);\n            } else {\n                this.searchNode(childNode, nodeconfig);\n            }\n        });\n    }\n\n  /**\n     * function to delete a node from tree Structure.\n     * @param  {String} nodeId - node Id of the Node\n     */\n    delete (nodeId) {\n        this._children.forEach((node) => {\n            if (node.id() === nodeId) {\n                const index = this._children.indexOf(node);\n                this._model.lanes().splice(index, 1);\n            }\n            this.deleteSearchNode(node, nodeId);\n        });\n    }\n\n  // Recursive function to search a node\n    deleteSearchNode (node, nodeId) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeId) {\n                const index = node.children().indexOf(childNode);\n                node.model().lanes().splice(index, 1);\n            } else {\n                this.deleteSearchNode(childNode, nodeId);\n            }\n        });\n    }\n}\n\nexport default Node;\n","import Node from '../tree';\nimport {\n    allocateBoundingBox,\n    negotiateDimension,\n    computePosition\n} from '../helper';\n\nexport default class LayoutModel {\n    constructor (measurements, config) {\n        this._measurements = measurements;\n        this._config = config;\n        this._root = this.createTree(this._config, null);\n        this.setBoundBox();\n    }\n\n    createTree (config, parent) {\n        const node = new Node(config);\n        if (parent) {\n            node.parentCut(parent.getCutType());\n            parent.addChildren([node]);\n        } else {\n            this._root = node;\n        }\n        for (const lane of config.lanes()) {\n            this.createTree(lane, node);\n        }\n\n        return this._root;\n    }\n\n    setBoundBox () {\n        this._root.boundBox({\n            top: 0,\n            left: 0,\n            width: this._measurements.width,\n            height: this._measurements.height\n        });\n        allocateBoundingBox(this._root);\n    }\n\n    setHostPosition (node) {\n        node.children().forEach((child) => {\n            LayoutModel.setHostSpatialConfig(child);\n            this.setHostPosition(child);\n        });\n    }\n\n    static setHostSpatialConfig (node) {\n        const bb = node.boundBox();\n        const host = node.model().host();\n        if (host && host.setSpatialConfig) {\n            const conf = {\n                x: bb.left,\n                y: bb.top,\n                width: bb.width,\n                height: bb.height,\n                renderAt: node.id()\n            };\n            host.setSpatialConfig(conf);\n        }\n    }\n\n    negotiate () {\n        negotiateDimension(this._root);\n        computePosition(this._root);\n        return this;\n    }\n\n    broadcast () {\n        this.setHostPosition(this._root);\n        return this;\n    }\n\n    tree () {\n        return this._root;\n    }\n}\n","/* eslint no-undef: \"off\" */\n/* eslint default-case: \"off\" */\nexport class Utils {\n    static isDOMElement (element) {\n        return element instanceof Element;\n    }\n\n    static getID (element) {\n        return element.id;\n    }\n\n    static getElement (id) {\n        return document.getElementById(id);\n    }\n\n    static findContainer (data) {\n        return data.filter(coordinate => coordinate.parent == null)[0];\n    }\n  /**\n   * static method to remove the div\n   * @param  {} divId - div ID to be removed.\n   */\n    static removeDiv (divId) {\n        if (document.getElementById(divId) !== null) { document.getElementById(divId).remove(); }\n    }\n}\n","import { DEFAULT_CLASS_NAME } from '../constants/defaults';\nimport { LayoutComponent } from '../layout-component';\n\nexport default class DataPoint {\n    constructor (node) {\n        this._node = node;\n        this._className = node.model().host() instanceof LayoutComponent ?\n                            node.model().host().className() : DEFAULT_CLASS_NAME;\n    }\n\n    node () {\n        return this._node;\n    }\n\n    hasHost () {\n        return this._node.model().host() instanceof LayoutComponent;\n    }\n\n    className () {\n        return this._className || DEFAULT_CLASS_NAME;\n    }\n}\n","import { getnodePoints } from './helper';\n\nexport class DataParser {\n    constructor (data) {\n        this._data = data;\n    }\n\n    defaultDataPointLogic () {\n        const nodepoints = [];\n        getnodePoints(this._data, nodepoints);\n        return nodepoints;\n    }\n\n}\n","import DataPoint from './data-point';\n\nexport const getnodePoints = (node, nodepoints) => {\n    const datapoint = new DataPoint(node);\n    nodepoints.push(datapoint);\n    node.children().forEach((child) => {\n        getnodePoints(child, nodepoints);\n    });\n};\n","import { DataParser } from './data-parser';\n\nexport class HTMLDataAdapter extends DataParser {\n    getCoordinates () {\n        return super.defaultDataPointLogic();\n    }\n}\n","export class Renderer {\n\n    initRenderer (node, tree) {\n        node.__logicalTree = tree;\n    }\n}\n","import { HTMLDataAdapter } from '../data-adapters/html-data';\nimport { Utils } from '../utils';\nimport { Renderer } from './renderer';\n\nexport class HTMLRenderer extends Renderer {\n    constructor (data) {\n        super();\n        this._data = data;\n        this._coordinates = new HTMLDataAdapter(this._data).getCoordinates();\n    }\n\n    createhtml (mount, className) {\n        const mainDiv = mount;\n        super.initRenderer(mainDiv, this._data); // Initialise node with layout id\n        this.parentDiv = this.createAndCustomiseParent(className);\n        this._coordinates.forEach((node) => {\n            if (node.hasHost()) {\n                const host = node.node();\n                this.parentDiv.appendChild(this.createAndPositionDiv({ ...host.boundBox(),\n                    id: host.id(),\n                    className: node.className() }));\n            }\n        });\n        mainDiv.appendChild(this.parentDiv);\n    }\n\n    createAndPositionDiv (config) {\n        const { top, left, height, width, className, id } = config;\n        const existingDiv = document.getElementById(id);\n        const div = existingDiv || document.createElement('div');\n        div.style.position = 'absolute';\n        div.style.left = `${left}px`;\n        div.style.top = `${top}px`;\n        div.style.height = `${height}px`;\n        div.style.width = `${width}px`;\n        div.id = id;\n        div.className = className;\n        return div;\n    }\n\n    createAndCustomiseParent (className) {\n        const container = Utils.findContainer(this._coordinates);\n        const host = container.node();\n        const parentDiv = this.createAndPositionDiv({ ...host.boundBox(),\n            id: host.id(),\n            className: container.className() });\n        parentDiv.className = className;\n        parentDiv.style.position = 'relative';\n        return parentDiv;\n    }\n\n    coordinates () {\n        return this._coordinates;\n    }\n}\n","import { HTMLRenderer } from '../renderers/html-renderer';\nimport { LayoutComponent } from '../layout-component';\n\nexport const getChildNode = (context, config) =>\n                        context.renderer().createAndPositionDiv(config);\n\nexport const findNode = (context, nodeID) =>\n                        context.renderer().coordinates().find(point => point.node().id() === nodeID);\n\nexport const renderHTML = (context) => {\n    context.renderer(new HTMLRenderer(context.data()));\n    context.renderer().createhtml(context.mount(), context.className());\n};\n\nexport const drawLayout = (context) => {\n    switch (context.renderer()) {\n    case 'html' :\n        renderHTML(context);\n        break;\n    default:\n        renderHTML(context);\n    }\n};\n\nexport const drawComponent = (componentData) => {\n    componentData.children().forEach((node) => {\n        const host = node.model().host();\n        if (host instanceof LayoutComponent) {\n            host.draw();\n        }\n        drawComponent(node);\n    });\n};\n\nexport const removeElement = (elemID) => {\n    document.removeElement(document.getElementById(elemID));\n};\n\nexport const resolveAligment = (context, componentData) => {\n    componentData.children().forEach((component) => {\n        const host = component.model().host();\n        if (host instanceof LayoutComponent && host.alignWith()) {\n            let newNodeConfig = {};\n            const point = findNode(context, component.id()).node();\n            const node = point.boundBox();\n            const refNode = findNode(context, context.componentMap().get(host.alignWith()).renderAt())\n                                .node()\n                                .boundBox();\n            switch (host.alignment()) {\n            case 'left':\n                newNodeConfig = {\n                    top: node.top,\n                    left: refNode.left,\n                    height: node.height,\n                    width: Math.abs(node.width - Math.abs(refNode.left - node.left))\n                };\n                break;\n\n            case 'right':\n                newNodeConfig = {\n                    top: node.top,\n                    left: node.left,\n                    height: node.height,\n                    width: Math.abs(node.width - Math.abs(node.left + node.width - (refNode.left + refNode.width)))\n                };\n                break;\n\n            case 'top':\n                newNodeConfig = {\n                    top: refNode.top,\n                    left: node.left,\n                    height: Math.abs(node.height - Math.abs(refNode.top - node.top)),\n                    width: node.width\n                };\n                break;\n\n            case 'bottom':\n                newNodeConfig = {\n                    top: node.top,\n                    left: node.left,\n                    height: Math.abs(node.top - refNode.top + refNode.height),\n                    width: node.width\n                };\n                break;\n\n            case 'h-center':\n                newNodeConfig = {\n                    top: node.top,\n                    left: refNode.left,\n                    height: node.height,\n                    width: refNode.width\n                };\n                break;\n\n            case 'v-center':\n                newNodeConfig = {\n                    top: refNode.top,\n                    left: node.left,\n                    height: refNode.top,\n                    width: node.width\n                };\n                break;\n            default:\n                break;\n            }\n    // check if model in parent component\n            Object.assign(newNodeConfig, { id: point.id(), className: host.className() });\n            context.renderer().createAndPositionDiv(newNodeConfig);\n            context.componentMap().get(host.name()).setSpatialConfig({\n                x: newNodeConfig.left,\n                y: newNodeConfig.top,\n                height: newNodeConfig.height,\n                width: newNodeConfig.width\n\n            });\n        }\n        resolveAligment(context, component);\n    });\n};\n","import { Utils } from '../utils';\nimport { drawLayout, resolveAligment, drawComponent } from './helper';\n\nexport class DrawingManager {\n    constructor (data, renderer, container) {\n        this._data = data.tree;\n        this._componentMap = data.componentMap;\n        this._layoutClassName = data.layoutClassName;\n        this._renderer = renderer;\n        this._mount = Utils.isDOMElement(container) ? container : Utils.getElement(container);\n    }\n\n    draw () {\n        drawLayout(this);\n        resolveAligment(this, this._data);\n        drawComponent(this._data);\n        return this;\n    }\n\n    data (data) {\n        if (data) {\n            this._data = data;\n        }\n        return this._data;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    className (param) {\n        if (param) {\n            this._layoutClassName = param;\n        }\n        return this._layoutClassName;\n    }\n\n    renderer (param) {\n        if (param) {\n            this._renderer = param;\n        }\n        return this._renderer;\n    }\n\n    mount (param) {\n        if (param) {\n            this._mount = param;\n        }\n        return this._mount;\n    }\n}\n","import DefinitionModel from './definitionModel';\nimport { prepareTargetComponentMap, getComponent, placeComponent, placeGridComponent } from '../helper';\n\nexport default class DefinitionManager {\n    constructor (componentMap, sequence, totalHeight, totalWidth) {\n        this._componentMap = componentMap;\n        this._prioritySequence = sequence;\n        this._totalHeight = totalHeight;\n        this._totalWidth = totalWidth;\n        this._targetComponentMap = null;\n    }\n\n    // create the config model\n    generateConfigModel () {\n        prepareTargetComponentMap(this);\n        const canvasComponent = this._targetComponentMap.get('canvas');\n        const definitionModel = new DefinitionModel({});\n        let tempDefModel = definitionModel;\n        definitionModel.remainingHeight(this._totalHeight);\n        definitionModel.remainingWidth(this._totalWidth);\n\n        let componentRef = null;\n\n        this._prioritySequence.forEach((name) => {\n            componentRef = getComponent(canvasComponent, name);\n            if (name !== 'grid') {\n                tempDefModel = placeComponent(tempDefModel, componentRef).second;\n            } else {\n                tempDefModel = placeGridComponent(tempDefModel, componentRef.component);\n            }\n        });\n        return definitionModel;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    targetComponentMap (param) {\n        if (param) {\n            this._targetComponentMap = param;\n        }\n        return this._targetComponentMap;\n    }\n}\n","import { sanitizeConfig } from './helper';\n\nexport class LayoutDef {\n    constructor () {\n        this._componentMap = new Map();\n        this._layoutDefinition = null;\n    }\n\n    addComponent (component) {\n        this._componentMap.set(component.name(), component);\n    }\n\n    layoutDefinition (def) {\n        if (def) {\n            this._layoutDefinition = def;\n        }\n        return this._layoutDefinition;\n    }\n\n    addMultipleComponent (componentArray) {\n        componentArray.forEach((comp) => {\n            this.addComponent(comp);\n        });\n    }\n\n    sanitizedDefinition () {\n        sanitizeConfig(this, this._layoutDefinition);\n        return this.layoutDefinition();\n    }\n\n    componentMap () {\n        return this._componentMap;\n    }\n    resetComponentMap () {\n        this._componentMap.clear();\n    }\n}\n","import DefinitionManager from '../layout-definition/definition-manager';\n\nexport function sanitizeConfig (context, hostObj) {\n    const hostID = hostObj.host();\n    if (hostObj.lanes() && hostObj.lanes().length) {\n        hostObj.lanes().forEach(childHost => sanitizeConfig(context, childHost));\n    }\n    if (hostID != null && typeof (hostID) === 'string') {\n        if (context.componentMap().get(hostID) !== undefined) {\n            hostObj.host(context.componentMap().get(hostID));\n        }\n    }\n}\n\nexport function calLayOutDef (context) {\n    const { height, width } = context.dimension();\n    const defManager = new DefinitionManager(context.layoutDef().componentMap(),\n                                              context.prioritySequence(),\n                                              height,\n                                              width);\n    const genLayoutdef = defManager.generateConfigModel();\n    return genLayoutdef;\n}\n","import {\n  LayoutModel\n} from '../layout-definition';\n\nimport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT\n} from '../constants/defaults';\n\nimport { DrawingManager } from '../drawing-manager';\nimport { Utils } from '../utils';\nimport { LayoutDef } from './layout-def';\nimport { calLayOutDef } from './helper';\n\nexport default class LayoutManager {\n    constructor (conf) {\n        this._renderAt = conf.renderAt;\n        this._layoutClassName = conf.className;\n        this._dimension = {\n            width: conf.width || DEFAULT_WIDTH,\n            height: conf.height || DEFAULT_HEIGHT\n        };\n\n        this._skeletonType = conf.skeletonType || 'html';\n        this._layoutDefinition = null;\n        this._layoutDef = new LayoutDef();\n        this._drawingManager = null;\n        this._prioritySequence = [];\n        this.tree = null;\n        this._rootNodeID = null;\n    }\n\n    layoutDef (param) {\n        if (param) {\n            this._layoutDef = param;\n        }\n        return this._layoutDef;\n    }\n\n    prioritySequence (param) {\n        if (param) {\n            this._prioritySequence = param;\n        }\n        return this._prioritySequence;\n    }\n\n    dimension (param) {\n        if (param) {\n            Object.assign(this._dimension, param);\n        }\n        return this._dimension;\n    }\n\n    addComponent (component) {\n        this._layoutDef.addComponent(component);\n    }\n\n    addMultipleComponent (componentArray) {\n        this._layoutDef.addMultipleComponent(componentArray);\n    }\n\n    resetNode (node) {\n        if (this.con) {\n            this.con.resetNode(node);\n        }\n    }\n\n  /**\n   * function to update the node and rerender the layout.\n   * @param  {} config - node configuration to change.\n   */\n    updateNode (config) {\n        this.tree.updateNode(config);\n        this._layoutDefinition = this.tree.model;\n        this.compute();\n    }\n\n    compute () {\n        //----\n        if (Utils.isDOMElement(this._renderAt)) {\n            this._renderAt._layout = this;\n        } else {\n            document.getElementById(this._renderAt)._layout = this;\n        }\n        //-----\n        this._layoutDefinition = calLayOutDef(this);\n        this._layoutDef.layoutDefinition(this._layoutDefinition);\n        this._layoutDefinition = this._layoutDef.sanitizedDefinition();\n        this._layout = new LayoutModel({\n            width: this._dimension.width,\n            height: this._dimension.height\n        },\n            this._layoutDefinition);\n        this.tree = this._layout.negotiate().tree();\n        this._layout.broadcast();\n        this._drawingManager = new DrawingManager({\n            tree: this.tree,\n            componentMap: this._layoutDef.componentMap(),\n            layoutClassName: this._layoutClassName\n        }, this._skeletonType, this._renderAt);\n\n        if (this._rootNodeID) {\n            this.tree.id(this._rootNodeID);\n        } else {\n            this._rootNodeID = this.tree.id();\n        }\n    // this will draw all the components by calling their draw method\n        this._drawingManager.draw();\n    }\n\n    getRootNodeId () {\n        return this._rootNodeID;\n    }\n\n  /**\n  * This function takes the LayoutComponents and Register them in component store\n  * @param {Array<LayoutComponent>} layoutComponents\n  */\n    registerComponents (layoutComponents) {\n        this._prioritySequence.length = 0;\n        this._layoutDef.resetComponentMap();\n        layoutComponents.forEach((container) => {\n            if (container) {\n                this._prioritySequence.push(container.name());\n                this.addComponent(container);\n                if (container.name() === 'grid') {\n                    container.component.forEach((componentArr) => {\n                        componentArr.forEach((compo) => {\n                            this.addComponent(compo);\n                        });\n                    });\n                }\n            }\n        });\n        return this;\n    }\n\n    getComponent (componentName) {\n        return this._layoutDef.componentMap().get(componentName);\n    }\n\n    renderAt (mount) {\n        if (mount) {\n            this._renderAt = mount;\n        }\n        return this._renderAt;\n    }\n}\n","import { isEqual, STATE_NAMESPACES, selectElement, getValueParser } from 'muze-utils';\nimport { VisualGroup } from '@chartshq/visual-group';\nimport { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, DATA, CONFIG }\n    from '../constants';\nimport { canvasOptions } from './local-options';\nimport { LayoutManager } from '../../../layout/src/tree-layout';\n\n/**\n * Instantiate high level components. Canvas knows what all high level component it has.\n * @nice-to-have dynamic high level components.\n *  - Is it even required ?\n *  - Reactive to source (canvas) streaming ?\n * @param {*} context Canvas instance\n * @return {Object.<Array>} Arrays of Title, visualGroup, Legend\n */\nexport const initCanvas = (context) => {\n    const reg = context._registry.components;\n\n    return [new reg.VisualGroup(context._registry, Object.assign({\n        throwback: context._throwback\n    }, context.dependencies()))];\n};\n\nexport const fixScrollBarConfig = (config) => {\n    config.scrollBar.thickness = Math.min(50, Math.max(10, config.scrollBar.thickness));\n    return config;\n};\n\nexport const setLayoutInfForUnits = (context) => {\n    const layoutManager = context._layoutManager;\n    const boundBox = layoutManager.getComponent('grid').getBoundBox();\n    const valueMatrix = context.composition().visualGroup.matrixInstance().value;\n    const parentContainer = selectElement(`#${layoutManager.getRootNodeId()}`).node();\n    valueMatrix.each((cell) => {\n        cell.valueOf().parentContainerInf({\n            el: parentContainer,\n            dimensions: boundBox\n        });\n    });\n};\n\n/**\n *\n *\n * @memberof Canvas\n */\nexport const dispatchProps = (context) => {\n    const lifeCycleManager = context.dependencies().lifeCycleManager;\n    lifeCycleManager.notify({ client: context, action: 'beforeupdate' });\n    const visualGroup = context.composition().visualGroup;\n\n    const allOptions = context._allOptions;\n    for (const key in allOptions) {\n        const value = context[key]();\n        if (value !== null) {\n            visualGroup[key] && visualGroup[key](value);\n        }\n    }\n    const { invalidValues } = context.config();\n\n    visualGroup.valueParser(getValueParser(invalidValues));\n    visualGroup.createMatrices();\n    context._cachedProps = {};\n    lifeCycleManager.notify({ client: context, action: 'initialized' });\n    lifeCycleManager.notify({ client: context, action: 'updated' });\n};\n\nconst equalityChecker = (props, params) => {\n    let checker = () => false;\n    return !props.every((option, i) => {\n        switch (option) {\n        case ROWS:\n        case COLUMNS:\n        case DETAIL:\n            checker = isEqual('Array');\n            break;\n\n        case SHAPE:\n        case SIZE:\n        case COLOR:\n        case DATA:\n        case CONFIG:\n            checker = isEqual('Object');\n            break;\n        default:\n            checker = () => true;\n            break;\n        }\n        const oldVal = params[i][0];\n        const newVal = params[i][1];\n\n        return checker(oldVal, newVal);\n    });\n};\n\nconst updateChecker = (props, params) => props.every((option, i) => {\n    const val = params[i][1];\n    switch (option) {\n    case ROWS:\n    case COLUMNS:\n        return val !== null;\n\n    case DATA:\n        return val && !val.isEmpty();\n\n    default:\n        return true;\n\n    }\n});\n\nexport const notifyAnimationEnd = (context) => {\n    const centerMatrix = context.layout().viewInfo().viewMatricesInfo.matrices.center[1] || [];\n    const promises = [];\n    centerMatrix.forEach((cellArr) => {\n        cellArr.forEach((cell) => {\n            promises.push(cell.valueOf().done());\n        });\n    });\n    const lifeCycleManager = context.lifeCycle();\n    if (promises.length) {\n        Promise.all(promises).then(() => {\n            // Update life cycle\n            lifeCycleManager.notify({ client: context, action: 'drawn' });\n            const animDonePromises = [];\n\n            centerMatrix.forEach((cellArr) => {\n                cellArr.forEach((cell) => {\n                    cell.valueOf().layers().forEach((layer) => {\n                        animDonePromises.push(layer.animationDone());\n                    });\n                });\n            });\n\n            [context.xAxes(), context.yAxes()].forEach((axisArr) => {\n                axisArr = axisArr || [];\n                axisArr.forEach((axes) => {\n                    axes.forEach((axisInst) => {\n                        animDonePromises.push(axisInst.animationDone());\n                    });\n                });\n            });\n\n            Promise.all(animDonePromises).then(() => {\n                lifeCycleManager.notify({ client: context, action: 'animationend' });\n            });\n        });\n    } else {\n        lifeCycleManager.notify({ client: context, action: 'animationend' });\n    }\n};\n\nexport const setupChangeListener = (context) => {\n    const store = context._store;\n\n    const allOptions = Object.keys(context._allOptions);\n    const props = [...allOptions, ...Object.keys(canvasOptions)];\n    const nameSpaceProps = [...allOptions, ...Object.keys(canvasOptions)].map(prop =>\n        `${STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE}.${prop}`);\n    store.registerChangeListener(nameSpaceProps, (...params) => {\n        let updateProps = equalityChecker(props, params);\n        updateProps = updateChecker(props, params);\n\n        // inform attached board to rerender\n        if (updateProps && context.mount()) {\n            dispatchProps(context);\n            context.render();\n        }\n        notifyAnimationEnd(context);\n    }, true);\n};\n\nexport const applyInteractionPolicy = (firebolt) => {\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    if (visualGroup) {\n        const valueMatrix = visualGroup.matrixInstance().value;\n        const interactionPolicy = firebolt._interactionPolicy;\n        interactionPolicy(valueMatrix, firebolt);\n        const crossInteractionPolicy = firebolt._crossInteractionPolicy;\n        const behaviours = crossInteractionPolicy.behaviours;\n        const sideEffects = crossInteractionPolicy.sideEffects;\n        valueMatrix.each((cell) => {\n            const unitFireBolt = cell.valueOf().firebolt();\n            for (const key in behaviours) {\n                unitFireBolt.changeBehaviourStateOnPropagation(key, behaviours[key]);\n            }\n            for (const key in sideEffects) {\n                unitFireBolt.changeSideEffectStateOnPropagation(key, sideEffects[key]);\n            }\n        });\n    }\n};\n\n/**\n * Sets the rotation for all x axes if any axis has the rotation config set in the\n * entire view\n *\n * @param {Array} columns Column cells that contain the axes cells\n */\nexport const setLabelRotationForAxes = (context) => {\n    let rotation = 0;\n\n    const xAxes = context.xAxes() || [];\n\n    (() => {\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                const rotationVal = xAxes[i][j].renderConfig().labels.rotation;\n                if (rotationVal && rotationVal !== 0) {\n                    rotation = rotationVal;\n                    return;\n                }\n            }\n        }\n    })();\n\n    if (rotation) {\n        xAxes.forEach((axes) => {\n            axes.forEach((axis) => {\n                axis.renderConfig({ labels: { rotation } });\n                axis.smartTicks(axis.setTickConfig());\n            });\n        });\n    }\n};\n\nexport const createGroupState = (context) => {\n    const [globalState, localState] = VisualGroup.getState();\n    const store = context._store;\n    store.append('app.group', globalState);\n    store.append('local.group', localState);\n};\n\nexport const removeChild = (mount) => {\n    while (mount.firstChild) {\n        mount.removeChild(mount.firstChild);\n    }\n};\n\nexport const createLayoutManager = () => {\n    const layoutManager = new LayoutManager({\n        className: 'muze-group-container'\n    });\n    return layoutManager;\n};\n","/**\n * This is the global options semantics based on which setters getters are created and reactivity is initiated.\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n * @module GlobalOptions\n */\n\nimport { intSanitizer, mergeRecursive, DataModel } from 'muze-utils';\nimport { fixScrollBarConfig } from './canvas/helper';\nimport { DEFAULT_CONFIG } from './defaults';\n\nexport default {\n    data: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel\n        }\n    },\n    width: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    height: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitWidth: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitHeight: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    config: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config, oldConfig) => {\n                // Reset the configuration when null is passed\n                const oldConf = mergeRecursive({}, config === null ? {} : oldConfig);\n                const defConfig = mergeRecursive(oldConf, DEFAULT_CONFIG);\n                let newConf = mergeRecursive(defConfig, config);\n                newConf = fixScrollBarConfig(newConf);\n\n                return newConf;\n            }\n\n        }\n    }\n};\n","/**\n * This file exports constants that will be used to\n * create the state store of the table layout.\n */\n/**\n * The index of top, bottom and center in the matrix\n */\nexport const VIEW_INDEX = {\n    top: 0,\n    center: 1,\n    bottom: 2\n};\n\nexport const ROW_MATRIX_INDEX = {\n    0: 'top',\n    1: 'center',\n    2: 'bottom'\n};\n\nexport const COLUMN_MATRIX_INDEX = {\n    0: 'left',\n    1: 'middle',\n    2: 'right'\n};\n\n/**\n * The width of the grid suppied by the user.\n */\nexport const GRID_WIDTH = 'width';\n\n/**\n * The height of the grid supplied by the user.\n */\nexport const GRID_HEIGHT = 'height';\n\n/**\n  * The border for the grid\n  */\nexport const BORDER = 'border';\n\n /**\n  *  The index of the first visible row in view matrix.\n  */\nexport const ROW_POINTER = 'rowPointer';\n\n/**\n * The index of the first visible column in the view matrix.\n */\nexport const COLUMN_POINTER = 'columnPointer';\n\n/**\n * Flag to specify whether row sizes should be equal.\n */\nexport const ROW_SIZE_IS_EQUAL = 'isRowSizeEqual';\n\n/**\n * Flag to specify whether column sizes are equal.\n */\nexport const COLUMN_SIZE_IS_EQUAL = 'isColumnSizeEqual';\n\n/**\n * Field to store an array an of the widths of visible columns.\n * @computed\n */\nexport const COLUMN_WIDTHS = 'visibleColumnWidths';\n\n/**\n * Field to store an array of heights of visible rows.\n * @computed\n */\nexport const ROW_HEIGHTS = 'visibleRowHeights';\n\n/**\n * Field to store the width of the left matrix.\n * @computed\n */\nexport const LEFT_MATRIX_WIDTH = 'leftMatrixWidth';\n\n/**\n * Field to store the width of the right matrix.\n * @computed\n */\nexport const RIGHT_MATRIX_WIDTH = 'rightMatrixWidth';\n\n/**\n * Field to store the height of the top matrix.\n * @computed\n */\nexport const TOP_MATRIX_HEIGHT = 'topMatrixHeight';\n\n/**\n * Field to store the height of the bottom matrix.\n * @computed\n */\nexport const BOTTOM_MATRIX_HEIGHT = 'bottomMatrixHeight';\n\n/**\n * The dom element to render the layout inside.\n */\nexport const MOUNT_POINT = 'mount';\n\n/**\n * The id attribute of the left table element.\n */\nexport const LEFT_TABLE_ID = 'grid-left';\n\n/**\n * The id attribute of the right table element.\n */\nexport const RIGHT_TABLE_ID = 'grid-right';\n\n/**\n * The id attribute of the top table.\n */\nexport const TOP_TABLE_ID = 'grid-top';\n\n/**\n * The id attribute of the bottom table.\n */\nexport const BOTTOM_TABLE_ID = 'grid-bottom';\n\n/**\n * The id attribute of the center table.\n */\nexport const CENTER_TABLE_ID = 'grid-center';\n\n/**\n * The id attribute of the top div.\n */\nexport const TOP_DIV_ID = 'muze-div-top';\n\n/**\n * The id attribute of the bottom div.\n */\nexport const BOTTOM_DIV_ID = 'muze-div-bottom';\n\n/**\n * The id attribute of the center div.\n */\nexport const CENTER_DIV_ID = 'muze-div-center';\n\n/**\n * Field that indicates if the row configuration has changed\n */\nexport const HAVE_ROWS_CHANGED = 'haveRowsChanged';\n\n/**\n * Field that indicates if the column configuration has changed\n */\nexport const HAVE_COLUMNS_CHANGED = 'haveColumnsChanged';\n\n/**\n * Field that indicates if the values configuration for the center matrix has changed\n */\nexport const HAVE_VALUES_CHANGED = 'haveValuesChanged';\n\n/**\n * Field that indicates the width of row matrix\n */\nexport const ROW_MATRIX_WIDTH = 'rowMatrixWidth';\n\n/**\n * Field that indicates the height of row matrix\n */\nexport const COLUMN_MATRIX_HEIGHT = 'columnMatrixHeight';\n\n/**\n * Field that indicates the unit width of layout\n */\nexport const UNIT_WIDTH = 'unitWidth';\n\n/**\n * Field that indicates the unit height of layout\n */\nexport const UNIT_HEIGHT = 'unitHeight';\n\n/**\n * Field that indicates the style object\n */\nexport const STYLE = 'style';\n\n/**\n * Field that indicates the color configuration\n */\nexport const COLOR = 'color';\n\n/**\n * Field that indicates width\n */\nexport const WIDTH = 'width';\n\n/**\n * Field that indicates collpase property for border\n */\nexport const COLLAPSE = 'collapse';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SPACING = 'spacing';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const DISTRIBUTION = 'distribution';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const GUTTERSPACE = 'gutterSpace';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const BREAK_PAGE = 'breakPage';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_ROW_BORDERS = 'showRowBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_COL_BORDERS = 'showColBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_VALUE_BORDERS = 'showValueBorders';\n\nexport const HEIGHT = 'height';\nexport const COLUMN = 'column';\nexport const ROW = 'row';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const CENTER = 'center';\nexport const CLICK = 'click';\nexport const ROW_LEFT = 'rowLeft';\nexport const ROW_RIGHT = 'rowRight';\nexport const COLUMN_BOTTOM = 'colBottom';\nexport const COLUMN_TOP = 'colTop';\nexport const AUTO = 'auto';\nexport const ROW_SPAN = 'rowSpan';\nexport const COL_SPAN = 'colSpan';\nexport const ROW_ROOT = 'rowRoot';\nexport const COLUMN_ROOT = 'columnRoot';\nexport const PRIMARY = 'primary';\nexport const SECONDARY = 'secondary';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n\nexport const PAGINATION = 'pagination';\nexport const BUFFER = 'buffer';\nexport const HOLISTIC = 'holistic';\nexport const SCROLL = 'scroll';\nexport const MIDDLE = 'middle';\nexport const NO_BORDERS = null;\n\nexport const MAX_WIDTH_AVAIL_FOR_COL_MATRIX = 'maxWidthAvailableForColumnMatrix';\nexport const COLUMN_MATRIX = 'columnMatrix';\nexport const MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX = 'maxHeightAvailableForRowMatrix';\nexport const ROW_MATRIX = 'rowMatrix';\n","import { sanitizeIP, mergeRecursive } from 'muze-utils';\nimport { TOP, CENTER, BOTTOM } from '../enums/constants';\n\n/*\n * This is the abstract implementation of the root layout. This takes care of common work which all the layouts\n * has to handle. The common work includes sanitizaion of inputs, update, rerender, dispose etc. This class can't be\n * used directly (as ofcourse this is an abstract implementaiton), the class which is implementing it has to implement\n * the necessary methods and gives its on visual.\n */\n\n/**\n * This class is used to create a generic layout. It can be extended to create layouts\n * of different types\n * @class GenericLayout\n */\nexport default class GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config configuration to be given for the layout\n     * @param {Object} dependencies external dependencies.\n     *\n     * @memberof GenericLayout\n     *\n     */\n    constructor (mountPoint, measurement, config, dependencies) {\n        this._config = {};\n        this._measurement = {};\n        this._matrices = [];\n        // External dependencies to be included for the layout. This includes the ext global dependencies like\n        // smartlabel which has one single implementation of throughout the page or per isntance\n        this._dependencies = dependencies;\n\n        this.measurement(measurement);\n        this.mountPoint(mountPoint);\n        this.config(config);\n    }\n\n    /**\n     * Returns an object which is used to recreate the layout.\n     * @return {Object} the serialized components\n     */\n    serialize () {\n        return {\n            measurement: this.measurement(),\n            config: this.config(),\n            matrices: this.matrices()\n        };\n    }\n\n     /**\n     * Sets/Gets the config for the layout\n     * @param {Object} config configuration for the layout\n     * @return {Layout|Object} Gets the Config/ Returns this instance when set\n     */\n    config (config) {\n        if (config) {\n            this._config = mergeRecursive(this._config || {}, config);\n            this._config.border.width = Math.max(0, this._config.border.width);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Sets/Gets the measurement for the layout\n     * @param {Object} measurement measurement for the layout\n     * @return {Layout|Object} Gets the measurement/ Returns this instance when set\n     */\n    measurement (measurement) {\n        if (measurement) {\n            this._measurement = mergeRecursive(this._measurement || {}, measurement);\n\n            return this;\n        }\n        return this._measurement;\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     * @param {Object} matrices matrices for the layout\n     * @return {Layout|Object} Gets the matrices/ Returns this instance when set\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = sanitizeIP.typeObj([TOP, CENTER, BOTTOM], matrices);\n\n            return this;\n        }\n        return this._matrices;\n    }\n\n    /**\n     * Sets/Gets the matrix for row\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    rowMatrix (matrix) {\n        if (matrix) {\n            this._rowMatrix = matrix;\n            return this;\n        }\n        return this._rowMatrix;\n    }\n\n    /**\n     * Sets/Gets the matrix for columns\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    columnMatrix (matrix) {\n        if (matrix) {\n            this._columnMatrix = matrix;\n            return this;\n        }\n        return this._columnMatrix;\n    }\n\n   /**\n     * Sets/Gets the matrix for value\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    centerMatrix (matrix) {\n        if (matrix) {\n            this._centerMatrix = matrix;\n            return this;\n        }\n        return this._centerMatrix;\n    }\n\n    /**\n     * Sets/Gets the mountPoint for the layout\n     * @param {Object} mountPoint mountPoint for the layout\n     * @return {Layout|Object} Gets the mountPoint/ Returns this instance when set\n     */\n    mountPoint (mountPoint) {\n        if (mountPoint) {\n            this._mountPoint = mountPoint;\n\n            return this;\n        }\n        return this._mountPoint;\n    }\n}\n","import * as FieldNames from '../enums/constants';\n\n/**\n * Default configuration of the layout\n * @return {Object} returns the default configuration\n */\nexport const DEFAULT_CONFIGURATION = {\n    [FieldNames.BORDER]: {\n        [FieldNames.STYLE]: 'solid',\n        [FieldNames.COLOR]: '#d6d6d6',\n        [FieldNames.WIDTH]: 2,\n        [FieldNames.COLLAPSE]: true,\n        [FieldNames.SPACING]: 0\n    },\n    [FieldNames.PAGINATION]: 'scroll',\n    [FieldNames.BUFFER]: 20,\n    [FieldNames.GUTTERSPACE]: { rows: [], columns: [] },\n    [FieldNames.DISTRIBUTION]: { rows: [], columns: [] },\n    [FieldNames.BREAK_PAGE]: { rows: [], columns: [] },\n    [FieldNames.ROW_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_POINTER]: 0,\n    [FieldNames.ROW_POINTER]: 0\n};\n\n/**\n * Default measurements for the layout\n * @return {Object} returns the default measurements\n */\nexport const DEFAULT_MEASUREMENTS = {\n    [FieldNames.GRID_WIDTH]: 100,\n    [FieldNames.GRID_HEIGHT]: 100,\n    [FieldNames.UNIT_WIDTH]: 100,\n    [FieldNames.UNIT_HEIGHT]: 100\n};\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n","/**\n * This file exports utility functions that are used across the layout module\n */\nimport { Symbols } from 'muze-utils';\nimport { PRIMARY, SECONDARY, HEIGHT, WIDTH } from '../enums/constants';\n\nconst nest = Symbols.nest;\n/**\n *\n *\n * @param {*} isTransposed\n *\n */\nconst getMeasureInfo = (isTransposed) => {\n    if (isTransposed) {\n        return {\n            firstMeasure: HEIGHT,\n            secondMeasure: WIDTH\n        };\n    }\n    return {\n        firstMeasure: WIDTH,\n        secondMeasure: HEIGHT\n    };\n};\n\n/**\n *\n *\n * @param {*} i\n * @param {*} page\n *\n */\nconst findInPage = (i, page) => {\n    let count = 0;\n    for (const x in page) {\n        if (i < page[x]) {\n            count = x;\n            break;\n        }\n    }\n    return count;\n};\n\n/**\n * Creates a single matrix from two matrices\n *\n * @param {Array<Array>} matrix Input matrix\n * @return {Array<Array>} Joined matrix\n * @memberof VisualMatrix\n */\nexport const combineMatrices = (matrix, config) => {\n    const { isTransposed } = config;\n    let joinedMatrix = matrix[0].length > 0 ? matrix[0] : matrix[1];\n    if (isTransposed) {\n        joinedMatrix = matrix[0].length > 0 ? [...matrix[0]] : [];\n        joinedMatrix = matrix[1].length > 0 ? [...joinedMatrix, ...matrix[1]] : joinedMatrix;\n    } else {\n        joinedMatrix = joinedMatrix.map((row, rowIndex) => {\n            let rowData = [];\n            if (matrix[0].length > 0) {\n                rowData = [...matrix[0][rowIndex]];\n            }\n            if (matrix[1].length > 0) {\n                rowData = [...rowData, ...matrix[1][rowIndex]];\n            }\n            return rowData;\n        });\n    }\n    return joinedMatrix;\n};\n\n/**\n * Creates a hirachical tree from the context\n *\n * @param {Object} context context for creating tree\n * @return {Object} nested tree\n */\nexport const createTree = (context) => {\n    let matrixTree = {};\n    let lastLevelKey = 0;\n    let facet = PRIMARY;\n    const nestFn = nest();\n    const keys = [];\n    const layoutMatrix = context._layoutMatrix;\n    const primaryMatrix = context.primaryMatrix();\n    const secondaryMatrix = context.secondaryMatrix();\n    const { isTransposed, breakPage } = context.config();\n\n    if (!isTransposed) {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix[0].length - 1; i++) {\n                keys.push(i);\n            }\n            keys.push(primaryMatrix[0].length - 1);\n            if (facet === SECONDARY || secondaryMatrix.length === 0) {\n                lastLevelKey = primaryMatrix[0].length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const keyLength = primaryMatrix.length > 0 ? primaryMatrix[0].length : 0;\n            for (let i = secondaryMatrix[0].length - 1; i > 0; i--) {\n                keys.push(i + keyLength);\n            }\n            keys.push(keyLength);\n\n            if (facet === PRIMARY) {\n                lastLevelKey = keyLength;\n            }\n        } else {\n            lastLevelKey = primaryMatrix.length > 0 ? primaryMatrix[0].length - 1 : 0;\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        matrixTree = nestFn.entries(layoutMatrix);\n    } else {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix.length - 1; i++) {\n                keys.push(i);\n            }\n            // if (facet === PRIMARY) {\n            keys.push(primaryMatrix.length - 1);\n            // } else {\n            if (facet === SECONDARY) {\n                lastLevelKey = primaryMatrix.length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const primaryMatrixLength = primaryMatrix.length;\n            for (let i = secondaryMatrix.length - 1; i > 0; i--) {\n                keys.push(i + primaryMatrixLength);\n            }\n            // if (facet === SECONDARY) {\n            keys.push(primaryMatrixLength);\n            // }\n            if (facet === PRIMARY) {\n                lastLevelKey = primaryMatrixLength;\n            }\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        let newMatrix = [];\n        newMatrix = layoutMatrix[0].map((col, colIndex) => layoutMatrix.map(row => row[colIndex]));\n        matrixTree = nestFn.entries(newMatrix);\n    }\n    return { tree: matrixTree, lastLevelKey };\n};\n\n/**\n * Gives the min measues\n *\n * @param {boolean} isTransposed is column matrix\n * @param {Object} unitMeasures min measures to be given to cells\n * @return {Object} dimension min cell\n */\nexport const getMinMeasures = (isTransposed, unitMeasures) => {\n    if (!isTransposed) {\n        return {\n            height: unitMeasures.height,\n            width: 0\n        };\n    }\n    return {\n        height: 0,\n        width: unitMeasures.width\n    };\n};\n\n/**\n * Get the logical space from the tree\n *\n * @param {Node} item tree to be calculated\n * @param {number} measures width and height\n * @param {Array} minMeasures min measures for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} dimension\n */\nexport const getLogicalSpace = (item, measures, minMeasures, maxMeasure = []) => {\n    const { firstMeasure, secondMeasure } = measures;\n    let firstMeasureValue = 0;\n    let secondMeasureValue = 0;\n    item.values.forEach((valueArray) => {\n        let fMeasure = 0;\n        let sMeasure = 0;\n        valueArray.forEach((placeholder, colIndex) => {\n            placeholder.setAvailableSpace();\n            const space = placeholder.getLogicalSpace();\n\n            sMeasure = Math.max(sMeasure, +space[secondMeasure], minMeasures[secondMeasure]);\n            maxMeasure[colIndex] = Math.max(maxMeasure[colIndex] || 0, space[firstMeasure]);\n            fMeasure += +maxMeasure[colIndex];\n        });\n        secondMeasureValue += sMeasure;\n        firstMeasureValue = Math.max(firstMeasureValue, fMeasure);\n        item.space = {\n            [secondMeasure]: Math.ceil(secondMeasureValue),\n            [firstMeasure]: Math.ceil(firstMeasureValue)\n        };\n    });\n    return {\n        [secondMeasure]: secondMeasureValue,\n        [firstMeasure]: firstMeasureValue\n    };\n};\n\n/**\n * Computes the logical spcae taken by the matrix tree\n *\n * @param {*} [item={}] tree to be viewed\n * @param {boolean} [isTransposed=false] is column matrix\n * @param {*} unitMeasures min measues for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} logical space taken\n */\nexport const computeLogicalSpace = (item = {}, config, maxMeasures) => {\n    const { isTransposed = false, unitMeasures } = config;\n    const { firstMeasure, secondMeasure } = getMeasureInfo(isTransposed);\n    const { values } = item;\n    const minMeasures = getMinMeasures(isTransposed, unitMeasures);\n    if (values[0].key) {\n        const logicalSpace = { [firstMeasure]: 0, [secondMeasure]: 0 };\n\n        values.forEach((valueItem) => {\n            // Compute logical space for lowest level\n            const space = computeLogicalSpace(valueItem, config, maxMeasures);\n            // Set logical space for first measure\n            logicalSpace[firstMeasure] = Math.max(logicalSpace[firstMeasure], space[firstMeasure],\n                minMeasures[firstMeasure]);\n            // Set logical space for second measure\n            logicalSpace[secondMeasure] += +space[secondMeasure];\n        });\n        item.space = logicalSpace;\n        return logicalSpace;\n    }\n    return getLogicalSpace(item, { firstMeasure, secondMeasure }, minMeasures, maxMeasures);\n};\n\n/**\n * Gives the space taken by a row\n *\n * @param {Array} row matrix array of rows\n * @return {Object} dimension of the row\n */\nexport const spaceTakenByRow = (row) => {\n    let height = 0;\n    let width = 0;\n    row.forEach((col) => {\n        const spaces = col.getLogicalSpace();\n        height = Math.max(height, spaces.height);\n        width += spaces.width;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Gives the space taken by a column\n *\n * @param {Array<Array>} matrix column matrix\n * @param {number} colIndex column index\n * @return {Object} dimension of the column\n */\nexport const spaceTakenByColumn = (matrix, colIndex) => {\n    let height = 0;\n    let width = 0;\n    matrix.forEach((row) => {\n        const col = row[colIndex];\n        const spaces = col.getLogicalSpace();\n        width = Math.max(width, spaces.width);\n        height += spaces.height;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Creates different level matrices\n *\n * @param {Object} item matrix tree\n * @param {boolean} isTransposed is column matrix\n * @return {Object} matrix of each level\n */\nexport const createMatrixEachLevel = (item, isTransposed) => {\n    if (item.values[0].key) {\n        const arr = [];\n        item.values.forEach((child) => {\n            if (!isTransposed) {\n                arr.push(...createMatrixEachLevel(child, isTransposed));\n            } else {\n                const eachLevel = createMatrixEachLevel(child, isTransposed);\n                eachLevel.forEach((e, i) => {\n                    arr[i] = arr[i] || [];\n                    arr[i].push(...e);\n                });\n            }\n        });\n        item.matrix = arr;\n        return arr;\n    }\n    if (!isTransposed) {\n        item.matrix = item.values;\n    } else {\n        item.matrix = item.values[0].map((col, colIndex) => item.values.map(row => row[colIndex]));\n    }\n    return item.matrix;\n};\n\n/**\n * Breaks the matrix into two part\n *\n * @param {Array<Array>} matrix input matrix\n * @param {boolean} isTransposed is column matrix\n * @param {number} breakPointer point in matrix where it is to be broken\n * @return {Array} two broken matrix\n */\nexport const breakMatrix = (matrix, isTransposed, breakPointer) => {\n    const primaryMatrix = [];\n    const secondaryMatrix = [];\n    if (isTransposed) {\n        matrix.forEach((row, rowIndex) => {\n            if (rowIndex >= breakPointer) {\n                secondaryMatrix.push(row);\n            } else {\n                primaryMatrix.push(row);\n            }\n        });\n    } else {\n        matrix.forEach((row, rowIndex) => {\n            row.forEach((column, columnIndex) => {\n                if (columnIndex >= breakPointer) {\n                    secondaryMatrix[rowIndex] = secondaryMatrix[rowIndex] || [];\n                    secondaryMatrix[rowIndex].push(column);\n                } else {\n                    primaryMatrix[rowIndex] = primaryMatrix[rowIndex] || [];\n                    primaryMatrix[rowIndex].push(column);\n                }\n            });\n        });\n    }\n    return [primaryMatrix, secondaryMatrix];\n};\n\n/**\n * Distributed width returned\n *\n * @param {Object} context context for the width distibution\n * @return {number} distributed widths\n */\nexport const getDistributedWidth = (context, layoutConfig) => {\n    const {\n        availableWidth,\n        width,\n        row\n    } = context;\n    const {\n        isDistributionEqual,\n        isTransposed,\n        distribution\n    } = layoutConfig;\n    let distSum = 0;\n    if (distribution && distribution[0]) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    return row.map((col, colIndex) => {\n        const space = col.getLogicalSpace().width;\n        let distWidth = (space + (availableWidth - width) * (space / width));\n        if (isTransposed) {\n            if (distribution.length > 0) {\n                distWidth = (availableWidth * distribution[colIndex] / distSum);\n            } else if (isDistributionEqual || width === 0) {\n                const rowLen = row.length;\n                distWidth = (availableWidth / rowLen);\n            }\n        }\n        return Math.floor(distWidth);\n    });\n};\n\n/**\n * Distributeed heights returned\n *\n * @param {Object} context input for the height distribution\n * @return {Object} distribured heights\n */\nexport const getDistributedHeight = (context) => {\n    let distSum = 0;\n    let gutterSum = 0;\n    let heightWithoutGutter = 0;\n    const {\n        isTransposed,\n        distribution,\n        availableHeight,\n        height,\n        isDistributionEqual,\n        gutter,\n        matrix,\n        cIdx\n    } = context;\n\n    if (distribution && distribution[0] !== undefined) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    if (gutter && gutter[0] !== undefined) {\n        gutterSum = gutter.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    heightWithoutGutter = availableHeight - Math.floor(availableHeight * gutterSum);\n\n    const colLen = matrix.length;\n    return matrix.map((row, rIdx) => {\n        const col = row[cIdx];\n        const space = col.getLogicalSpace().height;\n        let distHeight = (space + (heightWithoutGutter - height) * (space / height));\n\n        if (!isTransposed) {\n            if (distribution.length > 0 && colLen === distribution.length) {\n                distHeight = (heightWithoutGutter * distribution[rIdx] / distSum);\n            } else if (isDistributionEqual || context.height === 0) {\n                distHeight = (heightWithoutGutter / colLen);\n            }\n        }\n        return Math.floor(distHeight);\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} beg\n * @param {*} end\n */\nexport const extraCellsRemover = (arr, beg, end) => arr.slice(beg, -end);\n\n/**\n * Creates matrix instancess\n *\n * @param {Array} [arr=[]] mutated arry\n * @param {number} depth depth of the tree\n * @param {Array} matrixInfo Details about the matrix(tree, etc) to be inserted\n * @param {boolean} layout Instance of layout\n */\nexport const createMatrixInstances = (arr = [], depth, matrixInfo, layout) => {\n    const breakPointer = layout._breakPointer;\n    const config = layout.config();\n    const {\n        isTransposed\n    } = config;\n    const {\n        tree,\n        layoutMatrix\n    } = matrixInfo;\n\n    if (depth === 0) {\n        const brokenMatrix = breakMatrix(tree.matrix, isTransposed, breakPointer);\n        arr.push({\n            matrix: tree.matrix,\n            primaryMatrix: brokenMatrix[0],\n            secondaryMatrix: brokenMatrix[1],\n            space: tree.space\n        });\n        return arr;\n    }\n    const nextLevel = depth - 1;\n    tree.values.forEach((e) => {\n        createMatrixInstances(arr, nextLevel, {\n            tree: e,\n            layoutMatrix\n        }, layout);\n    });\n    return arr;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    maxMeasures: {},\n    availableSpace: {},\n    logicalSpace: {}\n};\n","import { PRIMARY } from '../enums/constants';\n/**\n *\n *\n */\nexport const defaultConfig = {\n    distribution: [],\n    classPrefix: 'muze',\n    isDistributionEqual: true,\n    unitMeasures: {\n        height: 100,\n        width: 100,\n        border: 1\n    },\n    isTransposed: false,\n    facet: PRIMARY,\n    extraCellLengths: []\n};\n","import { mergeRecursive, generateGetterSetters, ERROR_MSG } from 'muze-utils';\nimport {\n    createTree,\n    combineMatrices,\n    createMatrixInstances\n  } from '../utils';\nimport { PROPS } from './props';\nimport { HEIGHT, WIDTH } from '../enums/constants';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        // Prepare matrices\n        this._lastLevelKey = 0;\n        this._primaryMatrix = matrix[0] || [];\n        this._secondaryMatrix = matrix[1] || [];\n        this._maxMeasures = [];\n        this._availableSpace = {};\n\n        // Store the config\n        generateGetterSetters(this, PROPS);\n        const defCon = Object.assign({}, this.constructor.defaultConfig());\n        this.config(mergeRecursive(defCon, config));\n\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n    }\n\n     /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    computeViewableSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getPriorityDistribution () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @returns\n     * @memberof VisualMatrix\n     */\n    primaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._primaryMatrix;\n    }\n\n    secondaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._secondaryMatrix;\n    }\n\n    tree (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._tree;\n    }\n\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    createTree () {\n        const { tree, lastLevelKey } = createTree(this);\n        this._lastLevelKey = lastLevelKey;\n        return tree;\n    }\n\n    /**\n     * Returns the space taken by visual matrix\n     *\n     * @return {Object} space taken by the matrix\n     * @memberof VisualMatrix\n     */\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    /**\n     * Sets the provied space to the visual matrix\n     *\n     * @param {number} width width provided\n     * @param {number} height height provided\n     * @memberof VisualMatrix\n     */\n    setAvailableSpace (width, height) {\n        this.availableSpace({ width, height });\n        const tree = this.tree();\n        const heightMeasures = this.populateMaxMeasures(HEIGHT, tree);\n        const widthMeasures = this.populateMaxMeasures(WIDTH, tree);\n        const depth = this.calculateDepth(widthMeasures, heightMeasures);\n\n        this.viewableMatrix = this.createViewPortMatrix(depth);\n        this.viewableMeasures = this.redistributeSpaces(width, height);\n        return this;\n    }\n\n    /**\n     * Populate the max measures in the array\n     *\n     * @param {Array} measures array to be filled with max measures\n     * @param {Object} matrixTree matrix tree of visual matrix\n     * @param {number} measure width or height\n     * @param {number} [depth=0] depth of the tree that to be calculated\n     * @memberof VisualMatrix\n     */\n    populateMaxMeasures (type, matrixTree, depth = 0, measures = []) {\n        measures[depth] = Math.max(measures[depth] || 0, matrixTree.space[type]);\n        if (matrixTree.values) {\n            const childDepth = depth + 1;\n            matrixTree.values.forEach((child) => {\n                if (child.space) {\n                    measures = this.populateMaxMeasures(type, child, childDepth, measures);\n                }\n            });\n        }\n        return measures;\n    }\n\n    /**\n     * Gets the viewable measures for the current viewable matrix\n     *\n     * @return {Object} Set of viewable measures\n     * @memberof VisualMatrix\n     */\n    getViewableSpaces () {\n        return this.viewableMeasures;\n    }\n\n    /**\n     * Returns the matrix that can be viewed in the current viewport\n     *\n     * @return {Array} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    getViewableMatrices () {\n        return this.viewableMatrix;\n    }\n\n    /**\n     * Creates the viewport that can be viewed together\n     *\n     * @param {number} depth maxDepth that can be viewed in the viewport\n     * @return {Array<Object>} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    createViewPortMatrix (depth) {\n        const arr = [];\n        createMatrixInstances(arr, depth, this.removeExtraCells(), this);\n        return arr;\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    combineMatrices,\n    spaceTakenByColumn,\n    getDistributedHeight,\n    computeLogicalSpace,\n    createMatrixEachLevel\n  } from '../utils';\nimport { ROW_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class RowVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = (matrix[0].length > 0 ? matrix[0][0].length : 0);\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n\n        // Create Tree\n        this._tree = {\n            key: ROW_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, false);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height\n        } = measures;\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i };\n            const { widths, rowHeights, columnWidths } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = [height, height];\n            const columnMeasures = widths;\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n        tree.matrix = extraCellsRemover(tree.matrix, begCellLen, endCellLen);\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        let remainaingAvailWidth;\n        let remainaingWidth;\n        let cWidths = [];\n        let conditions = [];\n        let maxPrioritySpace = 0;\n        const {\n            matrix,\n            width: availableWidth,\n            maxMeasures: maxWidths,\n            maxWidth: currentWidth,\n            height\n        } = measures;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length ? this.primaryMatrix()[0].length : 0;\n\n        const dist = [];\n\n        remainaingAvailWidth = availableWidth;\n        remainaingWidth = currentWidth;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            // divider = Math.min(2, matrixLen);\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            // divider = Math.min(1, matrixLen);\n        }\n        conditions.forEach((i) => {\n            dist[i] = maxWidths[i];\n            maxPrioritySpace += maxWidths[i];\n            remainaingAvailWidth -= dist[i];\n            remainaingWidth -= dist[i];\n        });\n        matrix[0].forEach((e, i) => {\n            if (conditions.indexOf(i) === -1) {\n                dist[i] = remainaingAvailWidth * (maxWidths[i] / remainaingWidth);\n            }\n        });\n        matrix.forEach(row => row.forEach((col, cIdx) => {\n            if (conditions.indexOf(cIdx) === -1) {\n                col.setAvailableSpace(dist[cIdx], height);\n\n                cWidths[cIdx] = Math.max(cWidths[cIdx] || 0, Math.floor(col.getLogicalSpace().width));\n            } else {\n                cWidths[cIdx] = 0;\n            }\n        }));\n\n        const prioritySpace = availableWidth - cWidths.reduce((t, n) => t + n);\n        if (prioritySpace < 0) {\n            cWidths = cWidths.map(() => 0);\n        } else {\n            conditions.forEach((i) => {\n                cWidths[i] = Math.floor(prioritySpace * (dist[i] / maxPrioritySpace || 1));\n            });\n        }\n        return cWidths;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures, heightMeasures) {\n        let i;\n        const { height } = this.availableSpace();\n\n        for (i = 0; i < heightMeasures.length; i++) {\n            if (heightMeasures[i] <= height) break;\n        }\n\n        return Math.min(widthMeasures.length - 1, i);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n        const maxMeasures = this.maxMeasures();\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        const logicalWidths = this.getPriorityDistribution({\n            matrix: this._layoutMatrix,\n            maxWidth,\n            maxMeasures,\n            width,\n            height\n        });\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths, logicalWidths };\n            const measures = this.redistributeViewSpaces(options);\n            maxWidths = measures.maxWidths;\n            maxHeights = measures.maxHeights;\n        });\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let cWidths = [];\n        let rHeights = [];\n        let mHeight = 0;\n        const maxMeasures = this.maxMeasures();\n\n        const {\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        } = this.config();\n        const { matrix, height, maxHeights, maxWidths, logicalWidths } = measures;\n        mHeight = spaceTakenByColumn(matrix, this._lastLevelKey).height;\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        measures.maxMeasures = maxMeasures;\n        measures.maxWidth = maxWidth;\n        if (maxWidth > 0) {\n            cWidths = logicalWidths;\n        } else {\n            cWidths = maxMeasures.map(() => 0);\n        }\n        rHeights = getDistributedHeight({\n            matrix,\n            cIdx: this._lastLevelKey,\n            height: mHeight,\n            availableHeight: height,\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        });\n        if (maxWidths.length > 0) {\n            cWidths = cWidths.map((e, i) => Math.max(e, maxWidths[0][i] || 0));\n        }\n        maxWidths.push(cWidths);\n        for (let x = 0; x < maxWidths.length; x++) {\n            maxWidths[x] = cWidths;\n        }\n        maxHeights.push(rHeights);\n        return { maxWidths, maxHeights };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = maxHeights[matrixIndex][rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth, colHeight - borderWidth);\n\n                if (rIdx === 0 && cIdx < breakPointer) {\n                    columnWidths[0][cIdx] = colWidth;\n                    widths[0] = (widths[0] || 0) + colWidth;\n                } else if (rIdx === 0 && cIdx >= breakPointer) {\n                    columnWidths[1][cIdx - breakPointer] = colWidth;\n                    widths[1] = (widths[1] || 0) + colWidth;\n                }\n                if (cIdx === this._lastLevelKey) {\n                    rowHeights[0][rIdx] = colHeight;\n                    rowHeights[1][rIdx] = colHeight;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    getDistributedWidth,\n    spaceTakenByRow,\n    createMatrixEachLevel,\n    computeLogicalSpace\n  } from '../utils';\nimport { COLUMN_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class ColumnVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = matrix[0].length;\n\n        // Create Tree\n        this._tree = {\n            key: COLUMN_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, true);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height,\n            width\n        } = measures;\n\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i, height };\n            const {\n                heights,\n                rowHeights,\n                columnWidths\n            } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = heights;\n            const columnMeasures = [width, width];\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n\n        tree.matrix = tree.matrix.map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        const {\n            height,\n            maxHeights\n        } = measures;\n        let remainaingHeight = height;\n        let heightDist = [];\n        let conditions = [];\n        let divider = 2;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            divider = 2;\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            divider = 1;\n        }\n        maxHeights.forEach((e, i) => {\n            if (conditions.indexOf(i) === -1) {\n                heightDist[i] = e;\n                remainaingHeight -= e;\n            }\n        });\n        if (remainaingHeight < 0) {\n            heightDist = heightDist.map(() => 0);\n        } else {\n            conditions.forEach((e) => {\n                if (remainaingHeight / divider < maxHeights[e]) {\n                    heightDist[e] = 0;\n                } else {\n                    heightDist[e] = Math.min(maxHeights[e], (remainaingHeight) / divider);\n                }\n            });\n        }\n        return heightDist;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures) {\n        let j;\n        const { width } = this.availableSpace();\n\n        for (j = 0; j < widthMeasures.length; j++) {\n            if (widthMeasures[j] <= width) break;\n        }\n        return Math.min(widthMeasures.length - 1, j);\n    }\n\n     /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths };\n            const maxMeasures = this.redistributeViewSpaces(options);\n            maxWidths = maxMeasures.maxWidths;\n            maxHeights = maxMeasures.maxHeights;\n        });\n\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space column wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let rHeights = [];\n        const {\n            matrix,\n            width,\n            maxHeights,\n            maxWidths\n        } = measures;\n        const borderWidth = this.config().unitMeasures.border;\n\n        const mWidth = spaceTakenByRow(matrix[this._lastLevelKey]).width;\n        const cWidths = getDistributedWidth({\n            row: matrix[this._lastLevelKey],\n            width: mWidth,\n            availableWidth: width\n        }, this.config());\n\n        matrix.forEach((row, rIdx) => row.forEach((col, cIdx) => {\n            const oldLogicalSpace = col.getLogicalSpace();\n\n            col.setAvailableSpace(cWidths[cIdx] - borderWidth, oldLogicalSpace.height);\n            rHeights[rIdx] = Math.max(rHeights[rIdx] || 0, Math.floor(col.getLogicalSpace().height));\n        }));\n        if (maxHeights.length > 0) {\n            rHeights = rHeights.map((e, i) => Math.max(e, maxHeights[0][i]));\n        }\n        maxHeights.push(rHeights);\n        for (let x = 0; x < maxHeights.length; x++) {\n            maxHeights[x] = rHeights;\n        }\n        maxWidths.push(cWidths);\n        return { maxHeights, maxWidths };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, height, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        const heightDistribution = this.getPriorityDistribution({ height, maxHeights: maxHeights[0] || [] });\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = heightDistribution[rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth - borderWidth, colHeight);\n\n                if (cIdx === 0 && rIdx < breakPointer) {\n                    rowHeights[0][rIdx] = colHeight;\n                    heights[0] = (heights[0] || 0) + colHeight;\n                } else if (cIdx === 0 && rIdx >= breakPointer) {\n                    rowHeights[1][rIdx - breakPointer] = colHeight;\n                    heights[1] = (heights[1] || 0) + colHeight;\n                }\n                if (rIdx === this._lastLevelKey) {\n                    columnWidths[0][cIdx] = colWidth;\n                    columnWidths[1][cIdx] = colWidth;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import {\n    HEIGHT, WIDTH, COLUMN, ROW, HORIZONTAL, VERTICAL, HOLISTIC,\n    MAX_WIDTH_AVAIL_FOR_COL_MATRIX, COLUMN_MATRIX, MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX, ROW_MATRIX, SCROLL\n} from '../enums/constants';\n\n/**\n * Gets measurement for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @return {Object} Logical height/width of the matrix\n */\nexport function getMatrixMeasurement (matrix, type) {\n    if (matrix) {\n        return matrix.getLogicalSpace()[type];\n    }\n    return 0;\n}\n\n/**\n * Sets available space for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @param {number} value Value of measurement\n */\nexport function setMatrixMeasurement (matrix, type, value) {\n    if (matrix) {\n        const spaces = matrix.getLogicalSpace();\n        if (value && spaces[type] !== value) {\n            type === HEIGHT ? matrix.setAvailableSpace(spaces.width, value) :\n                matrix.setAvailableSpace(value, spaces.height);\n        }\n    }\n}\n\nconst setAvailableSpace = (matrix, widths, heights) => {\n    matrix.forEach((row, rIdx) => {\n        row.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(widths[cIdx], heights[rIdx]);\n        });\n    });\n};\n\nconst setViewSpaces = (layout, pointerType, viewSpaces) => {\n    let pointer = layout.config()[`${pointerType}Pointer`];\n    if (viewSpaces.length - 1 < pointer) {\n        pointer = 0;\n        layout.config({ [`${pointerType}Pointer`]: pointer });\n    }\n    return pointer;\n};\n\nconst paginationDetailsMap = {\n    column: {\n        maxMeasure: MAX_WIDTH_AVAIL_FOR_COL_MATRIX,\n        matrix: COLUMN_MATRIX,\n        measureType: WIDTH,\n        scrollType: HORIZONTAL\n    },\n    row: {\n        maxMeasure: MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX,\n        matrix: ROW_MATRIX,\n        measureType: HEIGHT,\n        scrollType: VERTICAL\n    }\n};\n\n/**\n * This method provides the required width/height in the different pagination stages.\n * If the pagination is holistic, then only the max width/height will be provided for layouting\n * If scroll is enabled, then the entire width/height shall be provided for layouting\n * Note: width is required for scrolling the columns while height is required for scrolling rows\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {Object} measureDetails different measure details for row/column\n * @param {number} maxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst getMatrixMeasureForPagination = (layout, measureDetails, maxMeasure, buffer) => {\n    const {\n        pagination\n    } = layout.config();\n    const {\n        matrix,\n        measureType,\n        scrollType\n    } = measureDetails;\n\n    switch (pagination) {\n    case HOLISTIC:\n        return maxMeasure;\n    default: {\n        const actualMeasure = getMatrixMeasurement(layout[matrix](), measureType) + buffer;\n\n        if (actualMeasure > maxMeasure) {\n            layout.scrollInfo({ [scrollType]: true });\n        }\n        return Math.max(maxMeasure, actualMeasure);\n    }\n    }\n};\n\n/**\n * This method uses the getMatrixMeasureForPagination function to calculate maximum measure\n * depending on the layouting algorithm used\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {string} matrixType row/column\n * @param {number} relatedMaxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst paginationMeasureGetter = (layout, matrixType, relatedMaxMeasure, buffer) =>\n    getMatrixMeasureForPagination(layout, paginationDetailsMap[matrixType], relatedMaxMeasure, buffer);\n\nconst getMatrixWidthDetails = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const {\n        width\n    } = layout.measurement();\n    const {\n        border,\n        buffer\n    } = layout.config();\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get width of row matrix\n    const rowMatrixWidth = getMatrixMeasurement(rowMatrix, WIDTH);\n\n    // Get maximum width allowed for the row matrix\n    const maxRowMatrixWidth = Math.min(rowMatrixWidth + buffer, width / 2);\n\n    // Get maximum width available for the column matrix\n    const maxWidthAvailableForColumnMatrix = width - maxRowMatrixWidth - borderWidth;\n\n    // Set width for column matrix\n    const columnMatrixWidth = paginationMeasureGetter(layout, COLUMN, maxWidthAvailableForColumnMatrix, 0);\n\n    return {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n\nconst getHeightRequiredByColMatrix = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const columnMatrix = layout.columnMatrix();\n\n    // Get maximum allowed height for colum matrix\n    const maxColumnMatrixHeight = Math.min(columnMatrix.getLogicalSpace().height, height / 2);\n\n    // Set the computed width and max height to column matrix to determine the actual height\n    // that will be taken by the column matrix\n    columnMatrix.setAvailableSpace(columnMatrixWidth, maxColumnMatrixHeight);\n\n    // Get the set of pages column view\n    const columnViewPages = columnMatrix.getViewableSpaces();\n\n    // Figuring out total space needed by current view space\n    const columnViewSpace = columnViewPages[layout.config().columnPointer];\n\n    // Getting height of column matrix\n    const columnMatrixHeight = columnViewSpace.height.primary + columnViewSpace.height.secondary;\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight\n    };\n};\n\nconst getMatrixHeightDetails = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const {\n        buffer\n    } = layout.config();\n\n    // Get actual height required by column matrix\n    const { columnMatrixHeight, maxColumnMatrixHeight } = getHeightRequiredByColMatrix(layout, columnMatrixWidth);\n\n    // Based on column height, compute max height available for row matrix\n    const maxHeightAvailableForRowMatrix = height - Math.min(maxColumnMatrixHeight, columnMatrixHeight);\n\n    // Get height for row matrix\n    const rowMatrixHeight = paginationMeasureGetter(layout, ROW, maxHeightAvailableForRowMatrix, buffer);\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    };\n};\n\nconst setValueMatrixMeasurements = (layout, rowViewableSpaces, columnViewableSpaces) => {\n    const centerMatrix = layout.centerMatrix();\n\n    const {\n        border\n    } = layout.config();\n    const matrices = layout.matrices();\n    const {\n        top,\n        bottom\n    } = matrices;\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get the heights for each cell in the row matrix\n    const rowHeights = [].concat(...rowViewableSpaces.map(e => e.rowHeights.primary));\n\n    // Get the widths for each of the row matrix cells(primary and secondary)\n    const rowWidthsPrimary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.primary));\n    const rowWidthsSecondary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.secondary));\n\n    // Get the widths for each cell in the column matrix\n    const columnWidths = [].concat(...columnViewableSpaces.map(e => e.columnWidths.primary));\n\n    // Get the widths for each of the column matrix cells(primary and secondary)\n    const columnHeightsPrimary = columnViewableSpaces[0].rowHeights.primary;\n    const columnHeightsSecondary = [].concat(...columnViewableSpaces.map(e => e.rowHeights.secondary));\n\n    // Setting the available space for each cell in the centre matrix computed throught the row and\n    // column matrices\n    centerMatrix.forEach((matrix, rIdx) => {\n        matrix.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(columnWidths[cIdx] - borderWidth, rowHeights[rIdx] - borderWidth);\n        });\n    });\n\n    // Set the heights and widths for the corner matrices namely:\n    // TOP_LEFT\n    setAvailableSpace(top[0], rowWidthsPrimary, columnHeightsPrimary);\n    // TOP_RIGHT\n    setAvailableSpace(top[2], rowWidthsSecondary, columnHeightsPrimary);\n    // BOTTOM_LEFT\n    setAvailableSpace(bottom[0], rowWidthsPrimary, columnHeightsSecondary);\n     // BOTTOM_RIGHT\n    setAvailableSpace(bottom[2], rowWidthsSecondary, columnHeightsSecondary);\n};\n\nconst bufferCondition = {\n    isScroll: true,\n    pagination: SCROLL\n};\n\nconst getBufferFromCondition = (layout, type) => {\n    const scrollInfo = layout.scrollInfo();\n    const {\n        pagination\n    } = layout.config();\n\n    const currentBufferType = {\n        pagination,\n        isScroll: scrollInfo[type]\n    };\n\n    return Object.keys(bufferCondition).every(e => bufferCondition[e] === currentBufferType[e]);\n};\n\nconst getActualBufferFromConfig = (layout) => {\n    const {\n        buffer\n    } = layout.config();\n    const [horizontalBuffer, verticalBuffer] = [HORIZONTAL, VERTICAL].map((type) => {\n        if (getBufferFromCondition(layout, type)) {\n            return buffer;\n        }\n        return 0;\n    });\n\n    return {\n        horizontalBuffer,\n        verticalBuffer\n    };\n};\n/**\n * Computes the measurements of space for all matrices in the\n * layout\n *\n * @param {Object} layout Instance of grid layout\n * @return {Object} set of measurements for the layout\n */\nexport const computeLayoutMeasurements = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n\n    // Compute the widths of the row and column matrices\n    const {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        maxWidthAvailableForColumnMatrix,\n        columnMatrixWidth\n    } = getMatrixWidthDetails(layout);\n\n    // Compute the heights of the row and column matrices\n    const {\n        columnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    } = getMatrixHeightDetails(layout, columnMatrixWidth);\n\n    const {\n        horizontalBuffer,\n        verticalBuffer\n    } = getActualBufferFromConfig(layout);\n    rowMatrix.setAvailableSpace(maxRowMatrixWidth - verticalBuffer, rowMatrixHeight - horizontalBuffer);\n\n    // Get row and columns viewable spaces\n    const rowViewableSpaces = rowMatrix.getViewableSpaces();\n    const columnViewableSpaces = columnMatrix.getViewableSpaces();\n\n    // Set view spaces for row and columns\n    setViewSpaces(layout, ROW, rowViewableSpaces);\n    setViewSpaces(layout, COLUMN, columnViewableSpaces);\n\n    // Set measures for each cell of the value matrix\n    setValueMatrixMeasurements(layout, rowViewableSpaces, columnViewableSpaces);\n\n    return {\n        rowMatrixHeight: rowMatrixHeight - horizontalBuffer,\n        rowMatrixWidth: rowMatrixWidth - verticalBuffer,\n        maxHeightAvailableForRowMatrix: maxHeightAvailableForRowMatrix - horizontalBuffer,\n\n        columnMatrixHeight,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n","/**\n * Gets view matrices based on current pointers for row and column\n *\n * @param {Object} layout instance of layout\n * @param {number} rowPointer current row pointer\n * @param {number} columnPointer current column pointer\n * @return {Object} returns the view matrix and its relevant information\n */\nexport const getViewMatrices = (layout, rowPointer, columnPointer) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const centerMatrix = layout.centerMatrix();\n    const matrices = layout.matrices();\n    const rowMatrices = rowMatrix.getViewableMatrices();\n    const columnMatrices = columnMatrix.getViewableMatrices();\n    const centralMatrixPointer = {\n        row: 0,\n        column: 0\n    };\n\n    for (let i = rowPointer - 1; i >= 0; i--) {\n        const length = Math.max(rowMatrices[i].primaryMatrix.length,\n            rowMatrices[i].secondaryMatrix.length);\n        centralMatrixPointer.row += length;\n    }\n     /* istanbul ignore next */\n    for (let i = columnPointer - 1; i >= 0; i--) {\n        const matrix = columnMatrices[i];\n        const { primaryMatrix, secondaryMatrix } = matrix;\n        const length = Math.max(primaryMatrix[0] ? primaryMatrix[0].length : 0,\n            secondaryMatrix[0] ? secondaryMatrix[0].length : 0);\n        centralMatrixPointer.column += length;\n    }\n\n    matrices.top[1] = columnMatrices[columnPointer].primaryMatrix;\n    matrices.bottom[1] = columnMatrices[columnPointer].secondaryMatrix;\n\n    matrices.center[0] = rowMatrices[rowPointer].primaryMatrix;\n    matrices.center[2] = rowMatrices[rowPointer].secondaryMatrix;\n\n    const rowMatrixLen = Math.max(matrices.center[0].length, matrices.center[2].length);\n     /* istanbul ignore next */\n    const columnMatrixLen = Math.max(matrices.top[1][0] ? matrices.top[1][0].length : 0, matrices.bottom[1][0] ?\n            matrices.bottom[1][0].length : 0);\n    matrices.center[1] = centerMatrix.slice(centralMatrixPointer.row, centralMatrixPointer.row + rowMatrixLen)\n        .map(matrix => matrix.slice(centralMatrixPointer.column, centralMatrixPointer.column + columnMatrixLen));\n\n    return {\n        matrices,\n        rowPages: rowMatrices.length,\n        columnPages: columnMatrices.length\n    };\n};\n\nconst measureSum = measureArr => measureArr.reduce((total, measure) => total + measure, 0);\n/**\n * Returns measurements of the cells of the current matrix\n *\n * @param {Object} layout instance of layout\n * @return {Object} returns the measurements for current view matrix\n */\nexport const getViewMeasurements = (layout, maxRowHeight, maxColWidth) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const {\n        columnPointer,\n        rowPointer\n    } = layout.config();\n\n    const rowSpaces = rowMatrix.getViewableSpaces()[rowPointer];\n    const colSpaces = columnMatrix.getViewableSpaces()[columnPointer];\n\n    const {\n        rowHeights,\n        width: rowMatrixWidth\n    } = rowSpaces;\n    const {\n        columnWidths,\n        height: columnMatrixHeight\n    } = colSpaces;\n\n    const { primary: leftWidth, secondary: rightWidth } = rowMatrixWidth;\n    const { primary: topHeight, secondary: bottomHeight } = columnMatrixHeight;\n\n    const centerHeight = measureSum(rowHeights.primary);\n    const centerWidth = measureSum(columnWidths.primary);\n    const viewWidth = [leftWidth, Math.min(centerWidth, maxColWidth), rightWidth];\n    const viewHeight = [topHeight, Math.min(centerHeight, maxRowHeight), bottomHeight];\n\n    return {\n        viewWidth,\n        viewHeight,\n        actualCenterMeasures: {\n            height: centerHeight,\n            width: centerWidth\n        },\n        totalMeasures: {\n            width: measureSum(viewWidth),\n            height: measureSum(viewHeight)\n        },\n        unitHeights: rowHeights,\n        unitWidths: columnWidths\n    };\n};\n","/**\n * This file declares a table that can be extended to create a Datagrid, crosstab\n * and man other visualzations that require a tabular structure.\n */\n\nimport { getUniqueId, mergeRecursive } from 'muze-utils';\nimport GenericLayout from '../generic-layout';\nimport { DEFAULT_CONFIGURATION, DEFAULT_MEASUREMENTS } from './defaults';\nimport { generateVisualMatrices } from './layout-helper';\nimport { computeLayoutMeasurements } from './computations';\nimport { getViewMeasurements, getViewMatrices } from './view-info-getter';\n/**\n * This class is used to create a tabular structure that\n * can house charts and values.\n *\n * @class GridLayout\n */\nexport default class GridLayout extends GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} matrices Set of upto 9 matrices containing the cells to be rendered\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config external configurations.\n     * @memberof GenericLayout\n     */\n    constructor (matrices, mountPoint, measurement, config) {\n        super(mountPoint, measurement, config);\n        this.matrices(matrices);\n        this.config(this.constructor.defaultConfig());\n        this._layoutId = getUniqueId();\n        this._viewInfo = this.constructor.defaultViewInfo();\n        this._scrollInfo = { horizontal: false, vertical: false };\n    }\n\n    static defaultViewInfo () {\n        return Object.assign({}, {\n            layoutDimensions: {\n                border: this.defaultConfig().border,\n                viewHeight: [0, 0, 0],\n                viewWidth: [0, 0, 0]\n            },\n            viewMatricesInfo: {\n                columnPages: 0,\n                rowPages: 0,\n                matrices: { top: [], center: [], bottom: [] }\n            }\n        });\n    }\n\n    /**\n     * Returns initial set of measurements for the grid layout\n     *\n     * @static\n     * @return {Object} Returns initial set of measurements\n     * @memberof GridLayout\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENTS;\n    }\n\n    /**\n     * Returns initialconfiguration for grid layout\n     *\n     * @static\n     * @return {Object} Returns initial configuration for grid layout\n     * @memberof GridLayout\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIGURATION;\n    }\n\n    /**\n     * This function is used to return an instance of GridLayout\n     *\n     * @return {GridLayout} Instance of grid layout.\n     * @static\n     * @memberof GridLayout\n     */\n    static create () {\n        return new GridLayout(null, null, this.defaultMeasurement(), this.defaultConfig());\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     *\n     * @param {Array} matrices Set of matrices\n     * @return {Object} Getter/Setter\n     * @memberof GridLayout\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = generateVisualMatrices(this, matrices);\n            return this;\n        }\n        return super.matrices(matrices);\n    }\n\n    /**\n     * Triggers the computations for the layout based on the matrices available\n     * This causes a reflow in the entire layout system.\n     *\n     * @return {Object} Layout instance\n     * @memberof GridLayout\n     */\n    triggerReflow () {\n        this.scrollInfo({ horizontal: false, vertical: false });\n        const {\n            maxHeightAvailableForRowMatrix,\n            maxWidthAvailableForColumnMatrix\n        } = computeLayoutMeasurements(this);\n\n        this.setViewInformation(maxHeightAvailableForRowMatrix, maxWidthAvailableForColumnMatrix);\n        return this;\n    }\n\n    gotoPage (type, pageNumber) {\n        const pageType = type.toLowerCase();\n        const { viewMatricesInfo } = this.viewInfo();\n        const totalPages = viewMatricesInfo[`${pageType}Pages`];\n        const pointer = Math.min(Math.max(1, pageNumber), totalPages);\n        this.config({\n            [`${pageType}Pointer`]: pointer - 1\n        });\n        this.setViewInformation();\n        this.renderGrid();\n        return this;\n    }\n\n    pages (type) {\n        const { viewMatricesInfo } = this.viewInfo();\n        const pageType = type.toLowerCase();\n        return {\n            totalPages: viewMatricesInfo[`${pageType}Pages`],\n            currentPage: this.config()[`${pageType}Pointer`] + 1\n        };\n    }\n\n    viewInfo (...viewInfo) {\n        if (viewInfo.length) {\n            this._viewInfo = viewInfo[0];\n            return this;\n        }\n        return this._viewInfo;\n    }\n\n    scrollInfo (...scrollInfo) {\n        if (scrollInfo.length) {\n            this._scrollInfo = mergeRecursive(this._scrollInfo, scrollInfo[0]);\n            return this;\n        }\n        return this._scrollInfo;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof GridLayout\n     */\n    setViewInformation (maxRowHeight, maxColWidth) {\n        const {\n            rowPointer,\n            columnPointer,\n            border\n        } = this.config();\n        const viewMatricesInfo = getViewMatrices(this, rowPointer, columnPointer);\n        const layoutDimensions = getViewMeasurements(this, maxRowHeight, maxColWidth);\n        layoutDimensions.border = border;\n        this.viewInfo({\n            viewMatricesInfo,\n            layoutDimensions\n        });\n        return this;\n    }\n}\n","import RowMatrix from '../visual-matrix/row-matrix';\nimport ColumnMatrix from '../visual-matrix/column-matrix';\n\nexport const generateVisualMatrices = (context, matrices) => {\n    // Set of matrices for layout is generated starting with the left matrix\n    let leftMatrix = [];\n    let rightMatrix = [];\n    let topMatrix = [];\n    let bottomMatrix = [];\n    let begColCells;\n    let endColCells;\n    const {\n        isRowSizeEqual,\n        isColumnSizeEqual,\n        gutterSpace,\n        distribution,\n        border,\n        breakPage,\n        priority\n    } = context.config();\n    const {\n        minUnitHeight,\n        minUnitWidth\n    } = context.measurement();\n    const { top, center, bottom } = matrices;\n    const [topLeft, topColumns, topRight] = top;\n    const [leftRows, valueMatrix, rightRows] = center;\n    const [bottomLeft, bottomColumns, bottomRight] = bottom;\n\n    if (leftRows.length > 0) {\n        // If no left matrix is present, context will be empty\n        leftMatrix = [...topLeft, ...leftRows, ...bottomLeft];\n    }\n    if (rightRows.length > 0) {\n        // If no right matrix is present, context will be empty\n        rightMatrix = [...topRight, ...rightRows, ...bottomRight];\n    }\n    if (topColumns.length > 0 && topColumns[0].length > 0) {\n        // If no top matrix is present, context will be empty\n        topMatrix = topColumns.map((d, i) => [...topLeft[i], ...d, ...topRight[i]]);\n    }\n    if (bottomColumns.length > 0 && bottomColumns[0].length > 0) {\n        // If no bottom matrix is present, context will be empty\n        bottomMatrix = bottomColumns.map((d, i) => [...bottomLeft[i], ...d, ...bottomRight[i]]);\n    }\n\n    context.rowMatrix(new RowMatrix([leftMatrix, rightMatrix], {\n        isDistributionEqual: isRowSizeEqual,\n        distribution: distribution.rows,\n        gutter: gutterSpace.rows,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.row,\n        breakPage: breakPage.rows.map(e => e + Math.max(topLeft.length, topRight.length)),\n        extraCellLengths: [topLeft.length, bottomLeft.length]\n    }));\n\n    if (topLeft.length > 0) {\n        begColCells = topLeft[0].length;\n    } else {\n        begColCells = bottomLeft.length > 0 ? bottomLeft[0].length : 0;\n    }\n\n    if (topRight.length > 0) {\n        endColCells = topRight[0].length;\n    } else {\n        endColCells = bottomRight.length > 0 ? bottomRight[0].length : 0;\n    }\n\n    context.columnMatrix(new ColumnMatrix([topMatrix, bottomMatrix], {\n        isDistributionEqual: isColumnSizeEqual,\n        distribution: distribution.columns,\n        gutter: gutterSpace.columns,\n        isTransposed: true,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.col,\n        breakPage: breakPage.columns,\n        extraCellLengths: [begColCells, endColCells]\n    }));\n    context.centerMatrix(valueMatrix);\n\n    return matrices;\n};\n","import {\n    TOP, BOTTOM, LEFT, RIGHT, CENTER, BLANK_BORDERS, COLUMN, ROW,\n    VIEW_INDEX, ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, MIDDLE, NO_BORDERS\n} from '../enums/constants';\n\nconst borderMap = {\n    [`${TOP}-${LEFT}`]: NO_BORDERS,\n    [`${TOP}-${MIDDLE}`]: COLUMN,\n    [`${TOP}-${RIGHT}`]: NO_BORDERS,\n    [`${CENTER}-${LEFT}`]: ROW,\n    [`${CENTER}-${MIDDLE}`]: CENTER,\n    [`${CENTER}-${RIGHT}`]: ROW,\n    [`${BOTTOM}-${LEFT}`]: NO_BORDERS,\n    [`${BOTTOM}-${MIDDLE}`]: COLUMN,\n    [`${BOTTOM}-${RIGHT}`]: NO_BORDERS\n};\n\nconst applySpecificBorder = (cells, color, type, style) => {\n    cells.style(`border-${type}`, `${style} ${color}`);\n};\n\nconst specificBorderApplier = (borderTypes, showBorders, cells, borderInfo) => {\n    const {\n        color,\n        width,\n        style\n    } = borderInfo;\n    const borderStyle = `${width}px ${style}`;\n\n    borderTypes.forEach((borderType) => {\n        applySpecificBorder(cells, showBorders[borderType] ? color : BLANK_BORDERS, borderType, borderStyle);\n    });\n};\n\nconst borderApplier = (cells, borderInfo) => {\n    const {\n       showRowBorders,\n      showColBorders,\n      showValueBorders\n  } = borderInfo;\n    return {\n        row: () => specificBorderApplier([TOP, BOTTOM], showRowBorders, cells, borderInfo),\n        column: () => specificBorderApplier([LEFT, RIGHT], showColBorders, cells, borderInfo),\n        center: () => specificBorderApplier([LEFT, RIGHT, TOP, BOTTOM], showValueBorders, cells, borderInfo)\n    };\n};\n\nexport const applyBorders = (cells, border, row, column) => {\n    const borderApplierFn = borderApplier(cells, border);\n    const borderMapVal = borderMap[`${ROW_MATRIX_INDEX[VIEW_INDEX[row]]}-${COLUMN_MATRIX_INDEX[column]}`];\n    if (borderMapVal) {\n        borderApplierFn[borderMapVal]();\n    }\n};\n","import { selectElement } from 'muze-utils';\nimport {\n     TOP, BOTTOM, ROW_SPAN, COL_SPAN, CENTER, ROW, COLUMN\n} from '../enums/constants';\n\nconst orderMaker = arr => Array.from(Array(arr.length).keys());\n\nconst nestByStack = (stack, updateArr, optionalParams = {}) => {\n    let {\n        order,\n        keyFn\n    } = optionalParams;\n    const arr = updateArr.slice();\n    const currStack = stack.slice();\n    const prevStack = currStack.slice();\n    // Order in which element are to be checked for nesting, default normal looping\n    // Order is always in the order of nest, i.e., left to right\n    order = order || Array.from(Array(arr.length).keys());\n\n    // Key function, if array of objects\n    keyFn = keyFn || (v => v);\n\n    // Return same array if stack is empty\n    if (currStack.length === 0) {\n        const newArr = [];\n        order.forEach((e) => {\n            newArr.push(arr[e]);\n        });\n        return { prevStack, currStack: arr, arr: newArr };\n    }\n\n    let arrVal = '';\n    let stackVal = '';\n    const newArr = [];\n\n    // Loop in order\n    for (let i = order.length - 1; i >= 0; i--) {\n        // Get current element index from the order given\n        const currElemIndex = order[i];\n\n        // Crete a hashmap for the hierarchy by joining strings of the array for both stack and input array\n        arrVal += keyFn(arr[currElemIndex]);\n        stackVal += keyFn(currStack[currElemIndex]);\n\n        // If the current value and value in stack is same, convert it to null\n        if (arrVal === stackVal) {\n            newArr[currElemIndex] = null;\n        } else {\n            stackVal = '';\n            // Loop from the current index in order to the last element in order to change the\n            // whole hierarchy\n            for (let j = i; j < order.length; j++) {\n                const newElem = order[j];\n                const arrElem = arr[newElem];\n\n                newArr[newElem] = arrElem;\n\n                // Reset stack to new stack\n                currStack[newElem] = arrElem;\n                stackVal = arrVal;\n            }\n        }\n    }\n    const returnArr = [];\n    order.forEach((e) => {\n        returnArr.push(newArr[e]);\n    });\n    return { prevStack, currStack, arr: returnArr };\n};\n\nconst spanCalculator = (colData, colIdx, matrix, rIdx) => {\n    // if data is not header cell then rowspan\n    // has to be 1\n    if (!colData) {\n        return () => 1;\n    }\n\n    const conditions = {\n        row: count => matrix[rIdx + count] && matrix[rIdx + count][colIdx],\n        column: count => matrix[rIdx][colIdx + count]\n    };\n\n    return (type) => {\n        let count = 1;\n        let isNull = false;\n\n        while (!isNull) {\n            if (conditions[type](count) === null) {\n                count += 1;\n            } else {\n                isNull = true;\n            }\n        }\n        return count;\n    };\n};\n\nconst maskCreator = (matrix, order) => ({\n    row: () => {\n        let stack = [];\n        return matrix.map((e) => {\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, e, { keyFn: val => val.valueOf(), order });\n\n            stack = currStack;\n            return arr;\n        });\n    },\n    column: () => {\n        let stack = [];\n        const viewMatrix = [];\n        matrix.length && matrix[0].forEach((cell, colIndex) => {\n            const hierarchy = [];\n            matrix.forEach((row) => {\n                hierarchy.push(row[colIndex]);\n            });\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, hierarchy, { keyFn: val => val.valueOf(), order });\n            stack = currStack;\n\n            matrix.forEach((row, rowIndex) => {\n                viewMatrix[rowIndex] = viewMatrix[rowIndex] || [];\n                viewMatrix[rowIndex][colIndex] = arr[rowIndex];\n            });\n        });\n        return viewMatrix;\n    }\n});\n\nconst spanGenerator = viewMatrix => ({\n    row: () => {\n        const spans = [];\n        viewMatrix.forEach((row, ridx) => {\n            spans[ridx] = spans[ridx] || [];\n            row.forEach((col, i) => {\n                if (viewMatrix[ridx][i]) {\n                    const currSpan = spanCalculator(col, i, viewMatrix, ridx)('row');\n                    currSpan && spans[ridx].push(currSpan);\n                }\n            });\n        });\n        return spans;\n    },\n    column: () => viewMatrix.map((row, ridx) => row.map((col, i) => spanCalculator(col, i, viewMatrix, ridx)('column'))\n                    .filter(col => col !== 1))\n});\n\nconst getOrder = isReverse => ({\n    row: (matrix) => {\n        if (isReverse) {\n            return orderMaker(matrix[0]).reverse();\n        }\n        return orderMaker(matrix[0]);\n    },\n    column: (matrix) => {\n        if (isReverse) {\n            return orderMaker(matrix).reverse();\n        }\n        return orderMaker(matrix);\n    }\n});\n\nconst matrixSpanGeneratorMap = {\n    [`${TOP}-1`]: {\n        orderGetter: getOrder(false)[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${BOTTOM}-1`]: {\n        orderGetter: getOrder(true)[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${CENTER}-0`]: {\n        orderGetter: getOrder(false)[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    },\n    [`${CENTER}-2`]: {\n        orderGetter: getOrder(true)[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    }\n};\n\nconst matrixSpanGenerator = (type) => {\n    const generator = matrixSpanGeneratorMap[type];\n    if (generator) {\n        return generator;\n    }\n    return {\n        orderGetter: () => null,\n        viewMatrixMaker: matrix => () => matrix,\n        spanMaker: () => () => null\n    };\n};\n\n/**\n * This function is used to set the col and row spans\n * for the matrices based on repeated/hierarchichal data\n *\n * @export\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {string} type Type of array (center, top, bottom)\n * @param {number} index Index of array in the row\n * @return {Object} containing the view matrix and their spans\n */\nexport function cellSpanMaker (matrix, type, index) {\n    let spans = null;\n    let viewMatrix = matrix;\n    const {\n        orderGetter,\n        viewMatrixMaker,\n        spanMaker\n    } = matrixSpanGenerator(`${type}-${index}`);\n\n    if (matrix.length) {\n        const order = orderGetter(matrix);\n        viewMatrix = viewMatrixMaker(matrix, order)();\n        spans = spanMaker(viewMatrix)();\n    }\n    return { viewMatrix, spans };\n}\n\nconst spaceAllocationDueToSpan = (span, placeholder, borderWidth) => {\n    const height = placeholder.availHeight();\n    const width = placeholder.availWidth();\n\n    return {\n        [ROW_SPAN] () {\n            selectElement(this).style('height', `${height + borderWidth}px`);\n            if (span > 1) {\n                selectElement(this).style('height', `${height * span + borderWidth * (span)}px`);\n                placeholder.setAvailableSpace(width, height * span);\n            }\n        },\n        [COL_SPAN] () {\n            if (span > 1) {\n                placeholder.setAvailableSpace(width * span + borderWidth * (span - 1), height);\n            }\n            selectElement(this).style('height', `${height}px`);\n        }\n    };\n};\n\nconst spanApplier = (cells, spans, config, type) => {\n    const borderWidth = config.border.width;\n\n    cells.attr(type, function (cell, colIndex) {\n        const span = spans[cell.rowIndex][colIndex];\n        const placeholder = cell.placeholder;\n\n        spaceAllocationDueToSpan(span, placeholder, borderWidth)[type].bind(this)();\n        return span;\n    });\n};\n\nconst spanApplierMap = {\n    [`${TOP}-0`]: null,\n    [`${TOP}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${TOP}-2`]: null,\n    [`${CENTER}-0`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${CENTER}-1`]: null,\n    [`${CENTER}-2`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${BOTTOM}-0`]: null,\n    [`${BOTTOM}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${BOTTOM}-2`]: null\n};\n\nexport const applySpans = (cells, spans, config, type) => {\n    const applier = spanApplierMap[type];\n    if (applier) {\n        applier(cells, spans, config);\n    }\n};\n","import { ERROR_MSG } from 'muze-utils';\n/**\n * An Interface to be implemented if the transaction support is necessary. This class ensures reactivity to\n * global properties.\n */\nexport default class TransactionSupport {\n    /**\n     * Property accessor for data member of the class. Data is passed to the system by calling this method.\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for width of the class. Width is passed as an integer.\n     */\n    width () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for height of the class. Height is passed as an integer.\n     */\n    height () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for config of the class. Config is passed as an object.\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n}\n","import { TOP, BOTTOM, LEFT, TITLE, SUB_TITLE, GROUP, LAYOUT, LEGEND } from '../constants';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const arrangeComponents = (context) => {\n    const legendConfig = context.config().legend;\n    const titleConfig = context.title()[1];\n    const subtitleConfig = context.subtitle()[1];\n    const titleLayouts = {\n        [`${TOP}-${TOP}`]: [TITLE, SUB_TITLE, GROUP],\n        [`${BOTTOM}-${BOTTOM}`]: [GROUP, SUB_TITLE, TITLE],\n        [`${TOP}-${BOTTOM}`]: [TITLE, GROUP, SUB_TITLE],\n        [`${BOTTOM}-${TOP}`]: [SUB_TITLE, GROUP, TITLE]\n    };\n    const legendLayouts = [\n        [LEGEND, LAYOUT],\n        [LAYOUT, LEGEND]\n    ];\n    const titlePosition = titleConfig.position || TOP;\n    const subtitlePosition = subtitleConfig.position || TOP;\n\n    return {\n        headers: titleLayouts[`${titlePosition}-${subtitlePosition}`],\n        legends: legendConfig.position === LEFT || legendConfig.position === TOP ?\n        legendLayouts[0] : legendLayouts[1]\n    };\n};\n","/**\n * Flag to specify whether direction is vertical.\n */\nexport const MARGIN = 'margin';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const SPACE_FIXER = 'spaceFixer';\nexport const CLASSPREFIX = 'muze';\nexport const VERTICAL_ALIGN = 'verticalAlign';\nexport const TEXT_ALIGN = 'textAlign';\nexport const IS_OFFSET = 'isOffset';\nexport const MIDDLE = 'middle';\nexport const BASELINE = 'baseline';\nexport const SHOW = 'show';\nexport const CENTER = 'center';\nexport const TEXT = 'text';\nexport const HEADER = 'header';\nexport const HEIGHT = 'height';\nexport const WIDTH = 'width';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const FIELDS = 'fields';\nexport const TRANSFORM = 'transform';\nexport const LAYER_DEF = 'layerDef';\nexport const CONFIG = 'config';\nexport const DETAIL_FIELDS = 'detailFields';\nexport const MAX_LINES = 'maxLines';\nexport const MIN_CHARS = 'minCharacters';\nexport const ROTATION = 'rotation';\n\nexport const TEXT_CELL = 'text-cell';\nexport const AXIS_CELL = 'axis-cell';\nexport const GEOM_CELL = 'geom-cell';\nexport const BLANK_CELL = 'blank-cell';\n","// eneum to refer to simple cell\nexport const SIMPLE = 'simple';\n// eneum to refer to header cell\nexport const TEXT = 'text';\n// enum to refer to axis cell\nexport const AXIS = 'axis';\n// enum to refer to visual cell\nexport const GEOM = 'geom';\n// enum to refer blank cell\nexport const BLANK = 'blank';\n","import {\n    ERROR_MSG,\n    getUniqueId,\n    mergeRecursive\n} from 'muze-utils';\nimport { SIMPLE } from './enums/cell-type';\n\n/**\n * This file declares a class that is used as an interface to create new\n * SimpleCell elements.\n * @module SimpleCell\n */\n/**\n * Base class for all table cells.\n *\n * @interface\n * @class SimpleCell\n */\nclass SimpleCell {\n\n    /**\n     * Creates an instance of SimpleCell.\n     *\n     * @param {*} config The input configuration.\n     * @memberof SimpleCell\n     */\n    constructor (config) {\n        this._id = getUniqueId();\n\n        const defConfig = mergeRecursive({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(defConfig, config || {});\n\n        this._mount = null;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     */\n    get type () {\n        return SIMPLE;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     * @return {Object} Default config for the placeholder\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the value contained by the SimpleCell.\n     *\n     * @memberof SimpleCell\n     */\n    valueOf () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a unique identifier for the instance used\n     * to control selective rendering.\n     *\n     * @memberof SimpleCell\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized representation of the instance.\n     *\n     * @memberof SimpleCell\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns an object with width and height fields\n     * specifying the space taken up by this metod.\n     *\n     * @memberof SimpleCell\n     */\n    getLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Method used to set the space available to render the SimpleCell\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @memberof SimpleCell\n     */\n    setAvailableSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    remove () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n\nexport default SimpleCell;\n","/**\n * This file exports variables that are used as defaults for\n * the placeholders\n */\nimport * as CONSTANTS from './constants';\n\n /**\n * Default Configuration for the cells\n * @return {Object} Default configuration\n */\nexport const DEFAULT_CONFIG = {\n    [CONSTANTS.MARGIN]: {\n        [CONSTANTS.LEFT]: 0,\n        [CONSTANTS.RIGHT]: 0,\n        [CONSTANTS.TOP]: 0,\n        [CONSTANTS.BOTTOM]: 0\n    },\n    [CONSTANTS.SPACE_FIXER]: 2,\n    [CONSTANTS.IS_OFFSET]: false,\n    [CONSTANTS.VERTICAL_ALIGN]: null,\n    [CONSTANTS.TEXT_ALIGN]: CONSTANTS.CENTER,\n    [CONSTANTS.SHOW]: true,\n    [CONSTANTS.MAX_LINES]: 0,\n    [CONSTANTS.MIN_CHARS]: 0,\n    [CONSTANTS.ROTATION]: null\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { GEOM, TEXT, AXIS, BLANK } from './enums/cell-type';\n\nconst DEFAULT_PROPS = {\n    mount: {},\n    availHeight: {},\n    availWidth: {},\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config, value)\n    },\n    logicalSpace: {},\n    minSpacing: {},\n    source: {}\n};\n\nconst geomProps = {\n    data: {},\n    caption: {},\n    config: {},\n    axes: {\n        sanitization: (context, value) => Object.assign(context._axes, value)\n    },\n    facetByFields: {},\n    fields: {},\n    transform: {},\n    layerDef: {},\n    detailFields: {}\n};\n\nconst textProps = {\n    smartText: {}\n};\nexport const PROPS = {\n    [GEOM]: mergeRecursive(geomProps, DEFAULT_PROPS),\n    [TEXT]: mergeRecursive(textProps, DEFAULT_PROPS),\n    [AXIS]: DEFAULT_PROPS,\n    [BLANK]: DEFAULT_PROPS\n};\n","/**\n * This file declares a class that represents a table cell\n * used to house an axis.\n * @module VisualCell\n */\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport { CLASSPREFIX, HEIGHT, WIDTH, AXIS_CELL } from './enums/constants';\nimport SimpleCell from './simple-cell';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { AXIS } from './enums/cell-type';\nimport { PROPS } from './props';\n\n/**\n * Computes the logical space of the an axis instance within an axis cell\n *\n * @param {Object} context Required to get the needed parameters to compute axis space\n * @return {Object} Returns the logical space for axis\n */\nconst computeAxisSpace = (context) => {\n    let logicalWidth;\n    let logicalHeight;\n    const axis = context.source();\n    const {\n        spaceFixer,\n        margin\n    } = context.config();\n    const {\n        width,\n        height\n    } = axis.getLogicalSpace();\n    const {\n            show\n        } = axis.config();\n    if (show === true) {\n        logicalHeight = Math.floor(height + margin.top + margin.bottom + spaceFixer);\n        logicalWidth = Math.floor(width + margin.left + margin.right + spaceFixer);\n    } else {\n        [logicalWidth, logicalHeight] = [width, height];\n    }\n    return {\n        width: logicalWidth,\n        height: logicalHeight\n    };\n};\n\n/**\n * Represents an axis cell.\n *\n * @class Axis\n */\nclass AxisCell extends SimpleCell {\n\n    /**\n     * Creates an instance of AxisCell.\n     *\n     * @param {Object} config The input config.\n     * @memberof AxisCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._axis = null;\n        this._availHeight = null;\n        this._availWidth = null;\n        this._logicalSpace = null;\n\n        generateGetterSetters(this, PROPS[AXIS]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof AxisCell\n     */\n    get type () {\n        return AXIS;\n    }\n\n    /**\n     * This method return the value conatined by this SimpleCell.\n     *\n     * @return {SimpleAxis | ColorAxis} Instance of SimpleAxis or ColorAxis.\n     * @memberof AxisCell\n     */\n    valueOf () {\n        return this.source().id;\n    }\n\n    /**\n     * This method return the unique identififer of the axis\n     *\n     * @return {string} Id of the axis.\n     * @memberof AxisCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Retrns the serialized representation of this cell.\n     *\n     * @return {Object}Object with serializable props.\n     * @memberof AxisCell\n     */\n    serialize () {\n        return {\n            type: AXIS,\n            axis: this.source().serialize()\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof AxisCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * return the space taken up by an axis element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof AxisCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeAxisSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @return {Instance} Returns current Instance\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        const {\n            margin,\n            isOffset\n        } = this.config();\n\n        if (width || height) {\n            this.source().setAvailableSpace(width, height, margin, isOffset);\n            this.source().logicalSpace(null);\n        } else {\n            this.source().resetLogicalSpace();\n        }\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the axis inside the axis cell.\n     *\n     * @param {HTMLElement} mount The mount point.\n     * @return {Selection} node where axis mounted\n     * @memberof AxisCell\n     */\n    /* istanbul ignore next */render (mount) {\n        if (!mount) {\n            return this;\n        }\n        const axis = this.source();\n        const availHeight = this.availHeight();\n        const availWidth = this.availWidth();\n        const {\n            margin\n        } = this.config();\n        const {\n            top,\n            bottom,\n            left,\n            right\n        } = margin;\n        const {\n            show,\n            orientation\n        } = axis.config();\n        const wrapperDiv = makeElement(selectElement(mount), 'div', [this], `${CLASSPREFIX}-${AXIS_CELL}`);\n        const selection = makeElement(wrapperDiv, 'svg', [1], `${CLASSPREFIX}-axis-container`);\n        selection.classed(`${CLASSPREFIX}-axis-container-${orientation}`, true);\n\n        this.mount(mount);\n        if (!availWidth) {\n            selection.attr(WIDTH, `${0}px`);\n        }\n        if (!availHeight) {\n            selection.attr(HEIGHT, `${0}px`);\n        }\n        wrapperDiv.style(WIDTH, `${show ? Math.floor(availWidth) : 0}px`)\n                        .style(HEIGHT, `${show ? Math.floor(availHeight) : 0}px`)\n                        .style('margin-top', top)\n                        .style('margin-bottom', bottom)\n                        .style('margin-left', left)\n                        .style('margin-right', right);\n\n        axis.mount(selection.node());\n        return selection;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Current instance of AxisCell\n     * @memberof AxisCell\n     */\n    remove () {\n        this.source() && this.source().remove();\n        this.mount() && this.mount().remove();\n        return this;\n    }\n}\n\nexport default AxisCell;\n\n","/**\n * This file declares a class that represents a BLANK element in a  table.\n * @module VisualCell\n */\nimport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    generateGetterSetters\n    } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { CLASSPREFIX, BLANK_CELL } from './enums/constants';\nimport { BLANK } from './enums/cell-type';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { PROPS } from './props';\n\n/**\n * Represents a table haeder.\n *\n * @class BLANK\n */\nclass BlankCell extends SimpleCell {\n\n    /**\n     * Creates an instance of BLANK.\n     * @param {Object} config The input configuration.\n     * @memberof BLANK\n     */\n    constructor (config) {\n        super(config);\n\n        generateGetterSetters(this, PROPS[BLANK]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof BlankCell\n     */\n    get type () {\n        return BLANK;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof BlankCell\n     */\n    valueOf () {\n        return this.id;\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof BlankCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the BLANK cell.\n     *\n     * @return {string} The unique identifier for the BLANK.\n     * @memberof BlankCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof BLANK\n     */\n    serialize () {\n        return {\n            type: BLANK\n        };\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof BLANK\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            return {\n                width: this.width || 0,\n                height: this.height || 0\n            };\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the BLANK cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof BLANK\n     */\n    /* istanbul ignore next */render (mount) {\n        if (mount) {\n            const { style } = this.config();\n            // append span element to mount point\n            this.mount(mount);\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id]);\n            elem.classed(`${CLASSPREFIX}-${BLANK_CELL}`, true);\n            elem.style('width', `${this.availWidth()}px`);\n            elem.style('height', `${this.availHeight()}px`);\n            elem.html('');\n            // apply style on the returned element\n            if (style) {\n                applyStyle(elem, style);\n            }\n        } return this;\n    }\n\n    /**\n     * Removes the cell(Disposal)\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\nexport default BlankCell;\n","/**\n * This file declares a class that represents a Text element in a  table.\n * @module VisualCell\n */\n\nimport {\n    selectElement,\n    makeElement,\n    getSmartComputedStyle,\n    generateGetterSetters\n} from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { TEXT } from './enums/cell-type';\nimport { PROPS } from './props';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { CLASSPREFIX, TOP, BOTTOM, LEFT, RIGHT, HEADER, WIDTH, TEXT_CELL } from './enums/constants';\nimport './text-cell.scss';\n\nconst setSmartText = (context) => {\n    const source = context.source();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       rotation\n   } = context.config();\n    const {\n        left,\n        right,\n        top,\n        bottom\n     } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const labelManager = context.dependencies().labelManager;\n\n    labelManager.setStyle(context._computedStyle);\n\n    !rotation && context.smartText(labelManager.getSmartText(source, availWidth, availHeight, false));\n    rotation && context.smartText(labelManager.getSmartText(source, availHeight, availWidth, true));\n\n    return context;\n};\n\n/**\n* Computes the Logical Space for the text\n*\n* @param {Object} context Required to get the needed parameters to compute text space\n* @return {Object} Logical space taken up by text\n* @memberof TextCell\n*/\nconst computeTextSpace = (context) => {\n    const { labelManager } = context.dependencies();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       show,\n       maxLines,\n       minCharacters\n   } = context.config();\n    const {\n       left,\n       right,\n       top,\n       bottom\n    } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const source = context.source();\n    const space = context.smartText();\n    const minText = new Array(minCharacters).fill('W').join('');\n    const _minTextSpace = labelManager.getOriSize(minText);\n\n    context.config({ rotation: false });\n    if (space.width > (availWidth || 0) && maxLines) {\n        space.height = space.oriTextHeight * maxLines;\n    }\n    if (availWidth && availWidth < space.width) {\n        space.width = _minTextSpace.width;\n    }\n    if (availWidth && availWidth < Math.min(_minTextSpace.width, space.oriTextWidth)) {\n        const smartSpace = labelManager.getSmartText(source, availHeight, _minTextSpace.height, true);\n        space.width = smartSpace.height;\n        space.height = smartSpace.width;\n        context.config({ rotation: true });\n        context.smartText(smartSpace);\n    }\n\n    if (show) {\n        return {\n            width: Math.ceil(space.width) + paddedWidth,\n            height: Math.ceil(space.height) + paddedHeight\n        };\n    } return {\n        width: 0,\n        height: 0\n    };\n};\n\n/**\n * Represents a table haeder.\n *\n * @class Text\n */\nclass TextCell extends SimpleCell {\n\n    /**\n     * Creates an instance of Text.\n     * @param {Object} config The input configuration.\n     * @param {string} dependencies Dependencies for the class(labelManager)\n     * @memberof Text\n     */\n    constructor (config, dependencies) {\n        super(config);\n\n        this._dependencies = dependencies;\n        this._className = this._config.className ||\n                    (this._config.type === HEADER ? `${CLASSPREFIX}-${HEADER}-cell` : `${CLASSPREFIX}-${TEXT}-cell`);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'), this._className);\n        this._dependencies.labelManager.setStyle(this._computedStyle);\n        generateGetterSetters(this, PROPS[TEXT]);\n        const space = this._dependencies.labelManager.getOriSize('w');\n        this.minSpacing({ width: Math.floor(space.width * 3 / 4), height: Math.floor(space.height / 2) });\n        setSmartText(this);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof TextCell\n     */\n    get type () {\n        return TEXT;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof TextCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the Text cell.\n     *\n     * @return {string} The unique identifier for the Text.\n     * @memberof TextCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the dependencies of the instance\n     *\n     * @return {Object} Dependencies needed by the class\n     * @memberof TextCell\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof TextCell\n     */\n    serialize () {\n        return {\n            text: this.source(),\n            type: TEXT\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof TextCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof Text\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeTextSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        setSmartText(this);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the Text cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof Text\n     */\n    render (mount) {\n        const availWidth = this.availWidth();\n        const availHeight = this.availHeight();\n        const {\n            margin,\n            show,\n            verticalAlign,\n            textAlign,\n            rotation\n        } = this.config();\n\n        this.mount(mount);\n        if (show) {\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id], `${CLASSPREFIX}-${TEXT_CELL}`);\n            const vAlign = verticalAlign || rotation ? 'middle' : 'top';\n            const {\n                width,\n                height\n            } = this.smartText();\n            const {\n                height: minHeightSpace\n            } = this.minSpacing();\n            const translation = {\n                top: width + minHeightSpace / 2,\n                middle: width / 2 + minHeightSpace,\n                bottom: minHeightSpace\n            };\n\n            container.style('vertical-align', vAlign);\n\n            // Set class name\n            elem.classed(this._className, true);\n\n            // Apply styles\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            elem.style('transform', rotation ? `translate(${height / 2}px,\n                ${translation[vAlign]}px) rotate(-90deg)` : '');\n            elem.style(WIDTH, availWidth ? `${availWidth}px` : '100%');\n            [TOP, BOTTOM, LEFT, RIGHT].forEach((type) => {\n                container.style(`margin-${type}`, `${margin[type]}px`);\n            });\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            // set the text as the innerHTML\n            this._dependencies.labelManager.setStyle(this._computedStyle);\n            elem.html(this._dependencies.labelManager.getSmartText(this.source(), availWidth, availHeight, true).text);\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\n\nexport default TextCell;\n","/**\n * This file declares a class that is used to represent a table cell\n * that houses a visual unit.\n * @module VisualCell\n */\n\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { GEOM } from './enums/cell-type';\nimport { PROPS } from './props';\nimport {\n    CLASSPREFIX, HEIGHT, WIDTH, DATA, AXES, FACET_BY_FIELDS, FIELDS, TRANSFORM, LAYER_DEF, CONFIG, GEOM_CELL,\n    DETAIL_FIELDS\n} from './enums/constants';\nimport { DEFAULT_CONFIG } from './enums/defaults';\n\n/**\n * Calculates the logical space of the cell\n *\n * @param {Object} context Required to get the needed parameters to compute unit space\n * @return {Object} Logical space taken up by the unit\n * @memberof GeomCell\n */\nconst computeGeomSpace = (context) => {\n    const config = context.source().config();\n    const { width, height } = config;\n    return {\n        width: Math.ceil(width),\n        height: Math.ceil(height + context.getCaptionSpace().height)\n    };\n};\n\n /**\n * This class represents a SimpleCell for visual unit.\n *\n * @class GeomCell\n */\nclass GeomCell extends SimpleCell {\n\n    /**\n     * Creates an instance of GeomCell.\n     * @param {Object} config The input configuration.\n     * @memberof GeomCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._unit = null;\n        this._layers = null;\n        this._axes = {};\n        this._datamodel = {};\n        this._facetByFields = {};\n        this._fields = null;\n        this._transform = null;\n        this._caption = null;\n\n        generateGetterSetters(this, PROPS[GEOM]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof GeomCell\n     */\n    get type () {\n        return GEOM;\n    }\n\n    /**\n     * This method return the value contained by this cell.\n     *\n     * @return {VisualUnit} Instance of visual unit contained by visual unit.\n     * @memberof GeomCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return the id of the\n     * visual unit housed by this cell.\n     *\n     * @return {string} The unique id of the visual unit.\n     * @memberof GeomCell\n     */\n    get id () {\n        return this.source().id();\n    }\n\n    /**\n     * This method return a serialized representation of\n     * this instance.\n     *\n     * @return {Object} Object with serializable props.\n     * @memberof GeomCell\n     */\n    serialize () {\n        return {\n            type: GEOM,\n            unit: this.source().serialize(),\n            caption: this.caption()\n        };\n    }\n\n    /**\n     * return the default configuration for the geom cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof GeomCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * Updates the model based on the changed parameters\n     *\n     * @return {Instance} return instance\n     * @memberof GeomCell\n     */\n    updateModel () {\n        const unit = this.source();\n        unit.lockModel();\n        [LAYER_DEF, TRANSFORM, AXES, FIELDS, CONFIG, DATA, AXES, FACET_BY_FIELDS, DETAIL_FIELDS].forEach((prop) => {\n            this[prop]() && unit[prop](this[prop]());\n        });\n        unit.unlockModel();\n        return this;\n    }\n\n    /**\n     * It gives the space taken by the caption of the unit\n     *\n     * @return {Object} return the space taken by caption\n     * @memberof GeomCell\n     */\n    getCaptionSpace () {\n        const caption = this.caption();\n\n        let captionSpace = { width: 0, height: 0 };\n        if (caption) {\n            captionSpace = caption.getLogicalSpace();\n        }\n        return captionSpace;\n    }\n\n    /**\n     * return the space taken up by the element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof GeomCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeGeomSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space available to\n     * render the SimpleCell.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    setAvailableSpace (width, height) {\n        const unit = this.source();\n\n        this.availWidth(width);\n        this.availHeight(height);\n        unit.lockModel();\n        unit.width(width).height(height - this.getCaptionSpace().height);\n        unit.unlockModel();\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * his method is used to render the visual unit inside the provided cell.\n     *\n     * @param {HTMLElement} mount The mountpoint in the table.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    render (mount) {\n        if (mount) {\n            this.mount(mount);\n            const availHeight = this.availHeight();\n            const availWidth = this.availWidth();\n            const caption = this.caption();\n            const wrapperDiv = makeElement(selectElement(mount), 'div', [1], `${CLASSPREFIX}-${GEOM_CELL}`);\n\n            if (caption) {\n                const captionDom = makeElement(wrapperDiv, 'div', [caption], `${CLASSPREFIX}-unit-caption`).node();\n                caption.render(captionDom);\n            }\n            const selection = makeElement(wrapperDiv, 'div', [1], `${CLASSPREFIX}-unit`);\n            wrapperDiv.style(WIDTH, `${availWidth}px`).style(HEIGHT, `${availHeight}px`);\n            selection.style(WIDTH, `${availWidth}px`)\n                            .style(HEIGHT, `${availHeight - this.getCaptionSpace().height}px`);\n            this.source().mount(selection.node());\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Object} Current instance\n     * @memberof GeomCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        this.source().remove();\n        return this;\n    }\n}\n\nexport default GeomCell;\n","import AxisCell from './axis-cell';\nimport BlankCell from './blank-cell';\nimport TextCell from './text-cell';\nimport GeomCell from './geom-cell';\nimport SimpleCell from './simple-cell';\n\nimport * as CONSTANTS from './constants';\n\nexport const DEFAULT_PLACEHOLDERS = {\n    [CONSTANTS.SIMPLE_CELL]: SimpleCell,\n    [CONSTANTS.TEXT_CELL]: TextCell,\n    [CONSTANTS.AXIS_CELL]: AxisCell,\n    [CONSTANTS.GEOM_CELL]: GeomCell,\n    [CONSTANTS.BLANK_CELL]: BlankCell\n};\n\n","export const SIMPLE_CELL = 'SimpleCell';\nexport const TEXT_CELL = 'TextCell';\nexport const AXIS_CELL = 'AxisCell';\nexport const BLANK_CELL = 'BlankCell';\nexport const GEOM_CELL = 'GeomCell';\n\n","import { DEFAULT_PLACEHOLDERS } from './defaults';\n\n/**\n * Creates a registry for the cells, which can be used for\n * setting a new cell or getting the registered cells\n *\n * @return {Object} Setters and getters for registered cells\n */\nconst cellRegistry = () => {\n    const reg = DEFAULT_PLACEHOLDERS;\n    return {\n        set: (key, def) => {\n            if (key in reg) {\n                reg[key] = def;\n            }\n            return cellRegistry;\n        },\n        get: () => reg\n    };\n};\nexport default cellRegistry;\n","import { TextCell } from '@chartshq/visual-cell';\nimport { escapeHTML } from 'muze-utils';\nimport { TOP } from '../constants';\n\n/**\n *\n *\n * @param {*} rawContent\n *\n */\nconst resolveTitleSubTitleContent = (rawContent) => {\n    if (typeof rawContent === 'function' && !rawContent._sanitize) {\n        return rawContent();\n    }\n    return escapeHTML(rawContent());\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} cellType\n * @param {*} labelManager\n * @param {*} prevCell\n *\n */\nconst headerCreator = (config, cellType, labelManager, prevCell) => {\n    let margin = {};\n    const {\n        content,\n        classPrefix,\n        maxLines\n    } = config;\n    const cell = prevCell || new TextCell(\n        {\n            type: cellType === 'title' ? 'header' : 'text',\n            className: `${classPrefix}-${cellType}-cell`\n        }, {\n            labelManager\n        })\n     .config({ maxLines }).minSpacing({ width: 0, height: 0 });\n\n    cell.source(content);\n    cell._minTickDiff = { height: 0, width: 0 };\n\n    if (config.position === TOP) {\n        margin = { top: 0, bottom: config.padding };\n    } else {\n        margin = { top: config.padding, bottom: 0 };\n    }\n    cell.config({ margin });\n\n    return {\n        height: cell.getLogicalSpace().height,\n        cell\n    };\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} type\n * @param {*} labelManager\n * @param {*} cell\n *\n */\nconst createHeading = (config, type, labelManager, prevCell) => {\n    if (!config) { return ''; }\n\n    return headerCreator(\n        config,\n        type,\n        labelManager,\n        prevCell\n    );\n};\n\n/**\n *\n *\n * @param {*} context\n */\nexport const createHeaders = (context, canvasHeight, canvasWidth) => {\n    let headerHeight = 0;\n    const headers = {};\n    const subtitle = context.subtitle();\n    const isSubtitle = resolveTitleSubTitleContent(subtitle[0]);\n\n    canvasHeight >= 200 && canvasWidth >= 200 && ['title', 'subtitle'].forEach((type) => {\n        const headerOptions = context[type]();\n        const content = resolveTitleSubTitleContent(headerOptions[0]);\n        if (content.length) {\n            const config = headerOptions[1];\n\n            config.width = context.width();\n            config.height = context.height();\n            config.classPrefix = context.config().classPrefix;\n            config.content = content;\n            config.padding = (type === 'title' && !isSubtitle.length) ? subtitle[1].padding : config.padding;\n\n            const { height, cell } = createHeading(config, type, context.dependencies().smartlabel,\n                context[`${type}Cell`]);\n\n            headers[`${type}Cell`] = cell;\n            context._composition[type] = cell;\n            headerHeight += height;\n        }\n    });\n    return { headerHeight, headers };\n};\n\n","import { TextCell, AxisCell } from '@chartshq/visual-cell';\nimport { getValueParser } from 'muze-utils';\nimport {\n    VERTICAL, HORIZONTAL, LEFT, RIGHT, LEGEND_TYPE_MAP, PADDING, BORDER, MARGIN\n} from '../constants';\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n *\n */\nexport const legendCreator = (canvas) => {\n    let LegendCls;\n    const dataset = [];\n    const axes = canvas.getRetinalAxes();\n\n    Object.entries(axes).forEach((axisInfo) => {\n        const scale = axisInfo[1][0];\n        const scaleType = axisInfo[0];\n        const scaleProps = canvas[scaleType]();\n\n        if (scaleProps.field && scale) {\n            const {\n                type,\n                step\n            } = scale.config();\n\n            const stepMapper = typeof step === 'boolean' ? step : false;\n            LegendCls = LEGEND_TYPE_MAP[`${type}-${stepMapper}-${scaleType}`];\n            dataset.push({ scale, canvas, fieldName: scaleProps.field, LegendCls, scaleType });\n        }\n    });\n\n    return dataset;\n};\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n * @param {*} measurement\n * @param {*} prevLegends\n *\n */\nexport const legendInitializer = (legendConfig, canvas, measurement, prevLegends) => {\n    const legends = [];\n    const {\n        height,\n        width,\n        headerHeight\n    } = measurement;\n    const {\n        position,\n        align\n    } = legendConfig;\n\n    const legendInfo = legendCreator(canvas);\n    const { invalidValues } = canvas.config();\n\n    const parser = getValueParser(invalidValues);\n    legendInfo.forEach((dataInfo, index) => {\n        let legend = {};\n\n        const legendMeasures = {};\n        const {\n                LegendCls,\n                scale,\n                fieldName,\n                scaleType\n            } = dataInfo;\n        const config = legendConfig[scaleType] || {};\n        const title = config.title || {};\n        title.text = title.text || fieldName;\n        if (config.show) {\n            config.position = position;\n            config.align = align;\n\n            if (prevLegends[index]) {\n                legend = prevLegends[index].legend;\n            } else {\n                legend = LegendCls.create({\n                    labelManager: canvas._dependencies.smartlabel,\n                    cells: {\n                        AxisCell, TextCell\n                    }\n                });\n            }\n            legendMeasures.maxHeight = align === VERTICAL ? (height - headerHeight) : height * 0.2;\n            legendMeasures.maxWidth = align === HORIZONTAL ? width : width * 0.2;\n            legendMeasures.width = Math.min(legendMeasures.maxWidth, config.width);\n            legendMeasures.height = Math.min(legendMeasures.maxHeight, config.height);\n\n            [PADDING, BORDER, MARGIN].forEach((e) => {\n                legendMeasures[e] = config[e];\n            });\n\n            legend.scale(scale)\n                            .valueParser(parser)\n                            .title(title)\n                            .fieldName(fieldName)\n                            .config(config)\n                            .metaData(canvas.composition().visualGroup.getGroupByData().project([fieldName]))\n                            .measurement(legendMeasures)\n                            .canvasAlias(canvas.alias())\n                            .setLegendMeasures();\n\n            legends.push({ canvas, legend, scaleType });\n        }\n    });\n    return legends;\n};\n\n/**\n *\n *\n * @param {*} legends\n * @param {*} legendConfig\n * @param {*} availableHeight\n * @param {*} availableWidth\n *\n */\nexport const getLegendSpace = (legends, legendConfig, availableHeight, availableWidth) => {\n    const legendMeasures = legends.map(legendInfo => legendInfo.legend.measurement());\n    const legendSpace = { width: 0, height: 0 };\n\n    legendMeasures.forEach((space) => {\n        let height = 0;\n        let width = 0;\n        width = Math.min(space.width, space.maxWidth);\n        height = Math.min(space.height, space.maxHeight);\n\n        if (legendConfig.align === HORIZONTAL) {\n            if (legendSpace.width + width > availableWidth) {\n                legendSpace.width = availableWidth;\n                legendSpace.height += height;\n            } else {\n                legendSpace.width += width;\n                legendSpace.height = Math.max(legendSpace.height, height);\n            }\n        } else if (legendSpace.height + height > availableHeight) {\n            legendSpace.height = height;\n            legendSpace.width += width;\n        } else {\n            legendSpace.height += height;\n            legendSpace.width = Math.max(legendSpace.width, width);\n        }\n    });\n    if (legendConfig.align === HORIZONTAL) {\n        legendSpace.width = availableWidth;\n    }\n    return legendSpace;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} headerHeight\n *\n */\nexport const createLegend = (context, headerHeight, height, width) => {\n    const measurement = {\n        height,\n        width,\n        headerHeight\n    };\n    const { legend } = context.config();\n    const { show, position } = legend;\n\n    legend.classPrefix = context.config().classPrefix;\n    const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n\n    legend.show = show ? ((align === VERTICAL && width > 200) || (align === HORIZONTAL && height > 200)) : show;\n    legend.align = align;\n    return legendInitializer(legend, context, measurement, context.legends || []);\n};\n","import { LayoutComponent } from '../../../../layout/src/tree-layout';\n\nexport default class MuzeComponent extends LayoutComponent {\n    getLogicalSpace () {\n        const { width, height } = this.boundBox();\n        return { width, height };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n    }\n\n    getBoundBox () {\n        return this.boundBox();\n    }\n\n    updateWrapper () {\n        throw Error('Update is not implemented');\n    }\n\n    setParams () {\n        throw Error('set params is not implemented');\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport { LEFT } from '../../constants';\n\nexport default class HeaderComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    renderHeader (container) {\n        const layoutConfig = this.params.config;\n        container = selectElement(container);\n        const { align } = layoutConfig;\n        const sel = container\n          .selectAll(`.${layoutConfig.classPrefix}-inner-container`)\n          .data([this.name]);\n        sel.exit().remove();\n        const selEnter = sel.enter().append('div');\n\n        const cont = selEnter.merge(sel);\n        cont.classed(`${layoutConfig.classPrefix}-inner-container`, true);\n        const { height, width } = this.boundBox();\n        this.component.setAvailableSpace(width, height);\n\n        this.component && this.component.render(cont.node());\n\n        cont.selectAll('div').classed(`${layoutConfig.classPrefix}-inner-content`, true);\n        cont.style('width', `${100}%`);\n\n        if (layoutConfig && this.component) {\n            cont.style('float', LEFT)\n                            .style('text-align', align);\n                            // .style(`padding-${position === TOP ? BOTTOM : TOP}`, `${padding}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderHeader(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.component.getLogicalSpace());\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y,\n            left: conf.x,\n            width: conf.width,\n            height: conf.height });\n        this.renderAt(conf.renderAt);\n    }\n}\n","import { makeElement, selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport {\n     LEFT, RIGHT, VERTICAL, HORIZONTAL, TOP, BOTTOM, HORIZONTAL_CENTER, VERTICAL_CENTER\n} from '../../constants';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\n\nfunction defaultAlignmentHelper (position) {\n    let alignment = null;\n    const alignWith = `${ROW_MATRIX_INDEX[1]}-${COLUMN_MATRIX_INDEX[1]}`;\n    switch (position) {\n    case TOP:\n    case BOTTOM:\n        alignment = HORIZONTAL_CENTER;\n        break;\n    case LEFT:\n    case RIGHT:\n        alignment = VERTICAL_CENTER;\n        break;\n    default:\n        alignment = VERTICAL_CENTER;\n    }\n    return { alignment, alignWith };\n}\nexport default class LegendComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.config.measurement.legendSpace, 0);\n        this.setParams(params);\n    }\n\n    renderLegend (container) {\n        container = selectElement(container);\n        const sectionComponents = [];\n        const { position, classPrefix } = this.params.config;\n        const legendMount = makeElement(container, 'div', [this.components],\n                                        `${classPrefix}-inner-content`, {}, d => d);\n        legendMount.classed(`${classPrefix}-legend`, true);\n        const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n        const legWidth = this.newDimensions.width;\n        const legHeight = this.newDimensions.height;\n\n        [container, legendMount].forEach((elem) => {\n            elem.style('width', `${Math.floor(legWidth)}px`)\n                            .style('height', `${legHeight}px`)\n                            .style('float', LEFT);\n        });\n\n        if (align === VERTICAL) {\n            let sections = -1;\n            let currHeight = legHeight;\n            let currWidth = 0;\n\n            this.components.forEach((legendInfo) => {\n                const leg = legendInfo.legend;\n                if (leg.measurement().height > currHeight) {\n                    sections++;\n                    currWidth = 0;\n                    currHeight = legHeight;\n                } else {\n                    sections < 0 && sections++;\n                }\n                sectionComponents[sections] = sectionComponents[sections] || [];\n                currHeight -= Math.min(leg.measurement().height, currHeight);\n                currWidth = Math.max(Math.min(leg.measurement().width, leg.measurement().maxWidth), currWidth);\n                sectionComponents[sections].push({\n                    legend: leg,\n                    legendHeight: legHeight,\n                    legendWidth: currWidth\n                });\n            });\n\n            const mount = makeElement(legendMount, ['div'], sectionComponents, `${classPrefix}-legend-section`);\n            // mount.each((d, i) => selectElement(this).classed(`${classPrefix}-legend-section-${i}`, true));\n            mount.classed(`${classPrefix}-legend-vertical-section`, true)\n                            .style('width', d => `${d[0].legendWidth}px`);\n            makeElement(mount, ['div'], d => d, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) {\n                                d.legend.mount(this);\n                            })\n                            .style('width', d => `${d.legendWidth}px`);\n        } else {\n            const mount = makeElement(legendMount, 'div', [1], `${classPrefix}-legend-section`);\n            mount.classed(`${classPrefix}-legend-horizontal-section`, true);\n            mount.classed(`${classPrefix}-legend-section-${0}`, true)\n                            .style('width', `${legWidth}px`);\n\n            makeElement(mount, 'div', this.components, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) { d.legend.mount(this); })\n                            .style('width', d => `${d.legend.measurement().width}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderLegend(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.measurement.legendSpace);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.components = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        const { alignWith, alignment } = defaultAlignmentHelper(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith || alignWith);\n        this.alignment(params.config.alignment || alignment);\n    }\n\n}\n","import {\n    selectElement,\n    makeElement,\n    getD3Drag,\n    getEvent,\n    getWindow,\n    hasTouch\n} from 'muze-utils';\nimport './scroll-bar.scss';\nimport { WIDTH, HEIGHT } from '../../../constants';\n\nconst d3Drag = getD3Drag();\n\nconst arrowSizeMap = {\n    left: WIDTH,\n    right: WIDTH,\n    top: HEIGHT,\n    bottom: HEIGHT\n};\n\nexport const getUnitPositions = (unitMeasures, totalLength, viewLength) => {\n    let currentLen = 0;\n    const measures = unitMeasures.primary && unitMeasures.primary.length ?\n        unitMeasures.primary : unitMeasures.secondary;\n\n    return measures.map((e) => {\n        const unitPosition = currentLen * 100 / (totalLength - viewLength);\n        currentLen += e;\n        return unitPosition;\n    });\n};\n\nexport const createScrollBarArrow = (mount, type, config) => {\n    const {\n        classPrefix,\n        thickness\n    } = config;\n    const arrow = makeElement(mount, 'div', [type], `${classPrefix}-scroll-arrow-${type}`);\n\n    arrow.classed(`${classPrefix}-scroll-arrow`, true);\n    arrow.style(arrowSizeMap[type], `${thickness}px`);\n\n    const chevron = makeElement(arrow, 'div', [1], `${classPrefix}-scroll-arrow-chevron`);\n\n    chevron.attr('id', `${classPrefix}-scroll-arrow-chevron-${type}`);\n\n    return arrow;\n};\n\nexport const createScrollBarRect = (mount, config) => {\n    const {\n        classPrefix\n    } = config;\n    const rect = makeElement(mount, 'div', [1], `${classPrefix}-scroll-rect`);\n    const mover = makeElement(rect, 'div', [1], `${classPrefix}-scroll-mover`);\n\n    return { rect, mover };\n};\n\nexport const applyRectClick = (scrollMaker, moverRect) => {\n    const {\n        rect\n    } = moverRect;\n\n    rect.on('click', () => {\n        const event = getEvent();\n        scrollMaker.emptyScrollAreaClick(event);\n    });\n};\n\nconst applyMoverDrag = (scrollMaker, moverRect) => {\n    let startPos = {};\n    let moverStartPos = 0;\n    let endPos = {};\n    const {\n        mover,\n        rect\n    } = moverRect;\n    const rectStartPos = rect.node().getBoundingClientRect();\n\n    mover.call(d3Drag()\n                    .on('start', () => {\n                        const event = getEvent();\n\n                        moverStartPos = mover.node().getBoundingClientRect();\n                        startPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                    })\n                    .on('drag', () => {\n                        const event = getEvent();\n                        const window = getWindow();\n\n                        endPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                        const distanceMoved = {\n                            x: endPos.x - startPos.x,\n                            y: endPos.y - startPos.y\n                        };\n                        const actualPosition = {\n                            x: moverStartPos.x + distanceMoved.x - rectStartPos.x + window.pageXOffset,\n                            y: moverStartPos.y + distanceMoved.y - rectStartPos.y + window.pageYOffset\n                        };\n\n                        scrollMaker.changeMoverPosition(actualPosition);\n                    }));\n};\n\nconst applyScrollMouseDownAction = (moverRect, scrollMaker, speed) => {\n    const {\n        mover,\n        rect\n    } = moverRect;\n    const { x, y } = mover.node().getBoundingClientRect();\n    const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n    scrollMaker.changeMoverPosition({ x: x - rectX + speed, y: y - rectY + speed });\n};\n\nconst registerListenerOnArrow = (scrollMaker, moverRect, arrowType, speed) => {\n    let timer = '';\n    const arrow = scrollMaker._components[arrowType];\n    const isTouchDevice = hasTouch();\n\n    arrow.on(isTouchDevice ? 'touchstart' : 'mousedown', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        timer = setInterval(() => {\n            applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n        }, 100);\n    }).on(isTouchDevice ? 'touchend' : 'mouseup', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        clearInterval(timer);\n    }).on('click', () => {\n        applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n    });\n};\n\nexport const registerListeners = (scrollMaker) => {\n    const {\n        moverRect\n    } = scrollMaker._components;\n\n    const speed = scrollMaker.config().speed;\n\n    registerListenerOnArrow(scrollMaker, moverRect, 'prevArrow', -speed);\n    applyMoverDrag(scrollMaker, moverRect);\n    applyRectClick(scrollMaker, moverRect);\n    registerListenerOnArrow(scrollMaker, moverRect, 'nextArrow', speed);\n};\n\nexport const scrollContainerHelper = (mountPoint, config, dimensions, type) => {\n    const {\n        classPrefix\n    } = config;\n    const scrollBarContainer = makeElement(selectElement(mountPoint), 'div', [1], `#${classPrefix}-scroll-bar-${type}`);\n\n    scrollBarContainer.classed(`${classPrefix}-scroll-bar`, true);\n    scrollBarContainer.style(WIDTH, `${dimensions.width}px`);\n    scrollBarContainer.style(HEIGHT, `${dimensions.height}px`);\n    return scrollBarContainer;\n};\n\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n\n    config: {\n        sanitization: (context, value) => {\n            value = mergeRecursive(context._config, value);\n            return value;\n        }\n    },\n    manager: {},\n    unitPositions: {},\n    logicalSpace: {}\n};\n\n","import { ERROR_MSG, generateGetterSetters } from 'muze-utils';\nimport {\n    scrollContainerHelper,\n    registerListeners\n} from './helper';\nimport { PROPS } from './props';\n\nexport class ScrollMaker {\n\n    constructor () {\n        this._components = {};\n        this._logicalSpace = {};\n        this._attachedScrollAction = () => {};\n        this._config = {\n            thickness: 10,\n            speed: 2\n        };\n        this._unitPositions = null;\n\n        generateGetterSetters(this, PROPS);\n    }\n\n    static type () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    emptyScrollAreaClick () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    changeMoverPosition () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollDeltaTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    createScroll (mountPoint) {\n        const config = this.config();\n\n        return {\n            scrollBarContainer: scrollContainerHelper(mountPoint, config, this.logicalSpace(), this.constructor.type())\n        };\n    }\n\n    attachScrollAction (externalScrollAction) {\n        this._attachedScrollAction = externalScrollAction;\n        return this;\n    }\n\n    detachScrollAction () {\n        this._attachedScrollAction = () => {};\n        return this;\n    }\n\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    registerListeners () {\n        registerListeners(this);\n        return this;\n    }\n\n    remove () {\n        this._components.scrollBarContainer.remove();\n        return this;\n    }\n}\n\n","import MuzeComponent from './muze-chart-component';\nimport { HorizontalScrollMaker } from './scroll-bar-maker/horizontal-scroll-maker';\nimport { VerticalScrollMaker } from './scroll-bar-maker/vertical-scroll-maker';\n\nconst scrollMakerMap = {\n    horizontal: HorizontalScrollMaker,\n    vertical: VerticalScrollMaker\n};\n\n/**\n * Scroll Component acts as a wrapper over the scoll bars created using the respective Scroll Makers\n * This provides a consistent API for layouting using the tree layout system.\n *\n *\n * @class\n * @public\n * @module ScrollComponent\n */\nexport default class ScrollComponent extends MuzeComponent {\n\n    constructor (params) {\n        const ScrollMaker = scrollMakerMap[params.config.type];\n\n        params.component = new ScrollMaker();\n        params.component.config(params.config.scrollBarComponentConfig);\n        params.component.logicalSpace(params.dimensions);\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    manager (...manager) {\n        if (manager.length) {\n            this.component.manager(manager[0]);\n            return this;\n        }\n        return this.component.manager();\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollDeltaTo (delta) {\n        this.component.scrollDeltaTo(delta);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollTo (scrollPercentage) {\n        this.component.scrollTo(scrollPercentage);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page based on the unit index.\n     * The input is provided as a number represting the index for the unit.\n     * For vertical scroll, it's the row index that will be required.\n     * For horizontal scroll, it's the column index that will be required\n     *\n     * @public\n     *\n     * @param {number} unitIndex Index of the unit appearing in the grid\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollToUnitIndex (unitIndex) {\n        const unitPositions = this.component.unitPositions();\n        const sanitizedUnitIndex = Math.min(Math.max(0, unitIndex), unitPositions.length - 1);\n        this.component.scrollTo(unitPositions[sanitizedUnitIndex]);\n        return this;\n    }\n\n    /**\n     * Provides the positions of the units(either horizontal or vertical based on the type\n     * of scroll bar it wraps) relative to it's container. The position of the first unit starts at 0\n     *\n     *\n     * @public\n     *\n     * @return {Array} Positions of units either horizontal or vertical\n     */\n    getScrollPositionsForUnits () {\n        return this.component.unitPositions();\n    }\n\n    draw (container) {\n        this.component.createScroll(container || document.getElementById(this.renderAt()));\n        return this;\n    }\n\n    /**\n     * Can be used to attach a scroll action whenever scrolling occurs in the canvas\n     *\n     * @public\n     * @param {number} externalAction Action to be attached during scroll\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    attachScrollAction (externalAction) {\n        this.component.attachScrollAction(externalAction);\n        return this;\n    }\n\n    /**\n     * Can be used to detach the scroll action already bound to the scroll bar\n     *\n     * @public\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    detachScrollAction () {\n        this.component.detachScrollAction();\n        return this;\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.component.config(params.config.scrollBarComponentConfig);\n        this.component.logicalSpace(params.dimensions);\n        this.boundBox(this.component.getLogicalSpace());\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component || this.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    remove () {\n        this.component.remove();\n    }\n}\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { HORIZONTAL, HEIGHT, WIDTH, LEFT } from '../../../constants';\n\nexport class HorizontalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: horizontal\n     */\n    static type () {\n        return HORIZONTAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, config, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'left', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'right', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n\n        const { height, width, totalLength, viewLength, unitWidths } = this.logicalSpace();\n        const scrollBarWithouArrowLength = width - height * 2;\n\n        rect.style(WIDTH, `${dimensions.width - height * 2}px`);\n        rect.style(HEIGHT, `${100}%`);\n        mover.style(WIDTH, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(HEIGHT, `${100}%`);\n        mover.style(LEFT, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n        this.unitPositions(getUnitPositions(unitWidths, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n        let positionAdjuster = speed * 10;\n        if (event.x < x) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n        const {\n            totalLength\n         } = this.logicalSpace();\n\n        if (newPosition.x < 0) {\n            currentPos = 0;\n        } else if (newPosition.x + moverPos.width > rectStartPos.width) {\n            currentPos = rectStartPos.width - moverPos.width;\n        } else {\n            currentPos = newPosition.x;\n        }\n\n        mover.style(LEFT, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: 0, x: moverPos.x - rectStartPos.x - delta });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {HorizontalScrollMaker} Instance of the HorizontalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.width)) / 100;\n\n        this.changeMoverPosition({ y: 0, x: movement });\n        return this;\n    }\n\n}\n\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { VERTICAL, TOP, HEIGHT, WIDTH } from '../../../constants';\n\nexport class VerticalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: vertical\n     */\n    static type () {\n        return VERTICAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'top', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'bottom', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n        const { height, width, totalLength, viewLength, unitHeights } = this.logicalSpace();\n        const scrollBarWithouArrowLength = height - width * 2;\n\n        rect.style(HEIGHT, `${scrollBarWithouArrowLength}px`);\n        rect.style(WIDTH, `${100}%`);\n        mover.style(WIDTH, `${100}%`);\n        mover.style(HEIGHT, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(TOP, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n\n        this.unitPositions(getUnitPositions(unitHeights, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n        let positionAdjuster = speed * 10;\n        if (event.y < y) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const {\n            totalLength\n         } = this.logicalSpace();\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n\n        if (newPosition.y < 0) {\n            currentPos = 0;\n        } else if (newPosition.y + moverPos.height > rectStartPos.height) {\n            currentPos = rectStartPos.height - moverPos.height;\n        } else {\n            currentPos = newPosition.y;\n        }\n        mover.style(TOP, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: moverPos.y - rectStartPos.y - delta, x: 0 });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.height)) / 100;\n\n        this.changeMoverPosition({ x: 0, y: movement });\n        return this;\n    }\n\n}\n","import { makeElement } from 'muze-utils';\nimport { cellSpanMaker, applySpans } from '../../../../layout/src/grid-layout/span-maker';\nimport { applyBorders } from '../../../../layout/src/grid-layout/border-helper';\n\nimport {\n     TOP, CENTER\n} from '../../../../layout/src/enums/constants';\nimport MuzeComponent from './muze-chart-component';\nimport { WIDTH, HEIGHT, HIDDEN, OVERFLOW, AUTO, VISIBLE } from '../../constants';\n\nconst renderPlaceholders = (cells) => {\n    // Rendering content within placeholders\n    cells.each(function (cell) {\n        cell.placeholder.render(this);\n    });\n};\n\nexport default class MatrixComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.setParams(params);\n        this.className(params.config.className);\n    }\n\n    applyScroll (container) {\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const { horizontal, vertical } = this.params.config.scrollInfo;\n        container.style(OVERFLOW, VISIBLE);\n        container.style(WIDTH, AUTO);\n        container.style(HEIGHT, AUTO);\n\n        if (horizontal && column === 1) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(WIDTH, '100%');\n        }\n\n        if (vertical && row === CENTER) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(HEIGHT, '100%');\n        }\n    }\n\n    renderMatrix (mountPoint) {\n        // Creating containers for each matrix individually\n        const classPrefix = this.params.config.classPrefix;\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const dimensions = this.params.config.dimensions;\n        const border = this.params.config.border;\n\n        // Creating containers for each matrix individually\n        const containerForMatrix = makeElement(mountPoint, 'div', [1], `${classPrefix}-grid-${row}-${column + 1}`)\n            .classed(`${classPrefix}-grid-${row}`, true)\n            .classed(`${classPrefix}-grid`, true);\n\n        this.applyScroll(containerForMatrix);\n\n        const {\n            viewMatrix,\n            spans\n        } = cellSpanMaker(this.component, row, column);\n\n            // Rendering the table components\n        const { cells } = this.renderTable(containerForMatrix, `${classPrefix}-grid`, viewMatrix);\n\n        applySpans(cells, spans, { dimensions, border }, `${row}-${column}`);\n        renderPlaceholders(cells);\n\n        cells.exit().each((cell) => {\n            cell.placeholder.remove();\n        });\n\n        applyBorders(cells, border, row, column);\n    }\n\n    renderTable (mount, className, rowData) {\n        const table = makeElement(mount, 'table', ['layout'], `${className}-table`);\n        const body = makeElement(table, 'tbody', ['layout'], `${className}-body`);\n        const rows = makeElement(body, 'tr', rowData, `${className}-tr`);\n        const cells = makeElement(rows, 'td', (d, i) => d.filter(e => e !== null).map(e =>\n                                  ({ placeholder: e, rowIndex: i })), `${className}-td`, {}, key => key.placeholder.id);\n\n        return { table, body, rows, cells };\n    }\n\n    draw (container) {\n        this.renderMatrix(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(TOP);\n        this.className(params.config.className);\n    }\n}\n","import { selectElement, getEvent } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport MatrixComponent from './matrix-component';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\n\n/**\n * Based on the type of scroll, it changes the scrollLeft/scrollTop property of the specific\n * elements based on the scroll distance provided\n *\n *\n */\nconst applyScrollAction = (elem, classPrefix, scollDistance, type) => {\n    selectElement(elem)\n                    .selectAll(`.${classPrefix}-grid`)\n                    .property(type, scollDistance);\n};\n\n/**\n * Applies the action of the scroll by actually scrolling the respective matrices based on the\n * type of scroll. It returns a function which has both the scroll methods available\n *\n * @return {Object} contains the horizontal and vertical scroll actions on the grid component\n */\nconst scrollActionApplier = (movement, context) => {\n    const classPrefix = context.params.config.classPrefix;\n\n    return {\n        horizontal: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[e][1].renderAt()}`, classPrefix, movement, 'scrollLeft'));\n        },\n        vertical: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[1][e].renderAt()}`, classPrefix, movement, 'scrollTop'));\n        }\n    };\n};\n\nexport default class GridComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.gridComponents = [];\n        this.setParams(params);\n    }\n\n    sanitizeGrid () {\n        let height = 0;\n        let width = 0;\n        const { viewMatricesInfo, layoutDimensions } = this.component.viewInfo();\n        const scrollInfo = this.component.scrollInfo();\n\n        for (let i = 0; i < 3; i++) {\n            if (!(this.gridComponents.length && this.gridComponents[i] instanceof Array)) {\n                this.gridComponents[i] = [];\n            }\n            for (let j = 0; j < 3; j++) {\n                const matrixDim = { height: layoutDimensions.viewHeight[i], width: layoutDimensions.viewWidth[j] };\n                const matrix = viewMatricesInfo.matrices[`${ROW_MATRIX_INDEX[i]}`][j];\n                const matrixName = `${ROW_MATRIX_INDEX[i]}-${COLUMN_MATRIX_INDEX[j]}`;\n                const matrixConfig = {\n                    dimensions: matrixDim,\n                    border: layoutDimensions.border,\n                    classPrefix: this.params.config.classPrefix,\n                    scrollInfo,\n                    row: ROW_MATRIX_INDEX[i],\n                    column: j\n                };\n                if (this.gridComponents[i][j] instanceof MuzeComponent) {\n                    this.gridComponents[i][j].updateWrapper({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                } else {\n                    const matrixWrapper = new MatrixComponent({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                    this.gridComponents[i].push(matrixWrapper);\n                }\n                if (i === 0) {\n                    width += matrixDim.width;\n                }\n                if (j === 0) {\n                    height += matrixDim.height;\n                }\n            }\n        }\n        this.boundBox({ height, width });\n\n        this.component = this.gridComponents;\n        this.allComponents = this.gridComponents;\n    }\n\n    scrollBarManager (...manager) {\n        if (manager.length) {\n            this._scrollBarManager = manager[0];\n            return this;\n        }\n        return this._scrollBarManager;\n    }\n\n    /**\n     * Attaches a mousewheel listener to the center matrix, based on which the scrolling can occur.\n     * It uses the scroll component to change the position of the scroller, which ultimately scrolls the center matrix\n     *\n     *\n     * @return {GridComponent} Instance of the GridComponent\n     */\n    attachScrollListener () {\n        selectElement(`#${this.component[1][1].renderAt()}`)\n                        .on('wheel', () => {\n                            const event = getEvent();\n                            const {\n                                wheelDeltaX,\n                                wheelDeltaY\n                            } = event;\n\n                            // Prevent default behaviour and stop propagating\n                            event.preventDefault();\n                            event.stopPropagation();\n\n                            // Scrolling horizontally\n                            if (wheelDeltaX !== 0 && Math.abs(wheelDeltaX) > Math.abs(wheelDeltaY)) {\n                                this.scrollBarManager().triggerScrollBarAction('horizontal', wheelDeltaX);\n                            }\n\n                            // Scrolling Vertically\n                            if (wheelDeltaY !== 0 && Math.abs(wheelDeltaX) < Math.abs(wheelDeltaY)) {\n                                this.scrollBarManager().triggerScrollBarAction('vertical', wheelDeltaY);\n                            }\n                        });\n        return this;\n    }\n\n    performScrollAction (direction, movedView) {\n        scrollActionApplier(movedView, this)[direction]();\n        return this;\n    }\n\n    getBoundBox () {\n        const { top, left } = this.component[0][0].boundBox();\n        const { height, width } = this.boundBox();\n\n        return {\n            top,\n            left,\n            height,\n            width\n        };\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.className(params.config.className);\n        this.sanitizeGrid();\n        return this;\n    }\n}\n","import { TITLE, SUB_TITLE, LEGEND, VERTICAL, HORIZONTAL, WIDTH, HEIGHT, TOP, LEFT, RIGHT } from '../constants';\nimport HeaderComponent from './components/headerComponent';\nimport LegendComponent from './components/legendComponent';\nimport ScrollComponent from './components/scroll-component';\nimport GridComponent from './components/grid-component';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG, GRID, CANVAS, LAYOUT_ALIGN } from './defaults';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, CENTER } from '../../../layout/src/enums/constants';\n\n// Mapping between types of headers and their required configs for wrapper creation\nconst headerMap = {\n    title: {\n        headerCell: 'titleCell',\n        configType: TITLE_CONFIG\n    },\n    subtitle: {\n        headerCell: 'subtitleCell',\n        configType: SUB_TITLE_CONFIG\n    }\n};\n\n/**\n * Creates the wrapper for the header, i.e., title and subtitle to be used in the tree layout\n *\n *\n * @param {string} headerType type of header: title/subtite\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createHeaderWrapper = (headerType, layoutManager, renderDetails) => {\n    let wrapper = null;\n\n    const { components, layoutConfig } = renderDetails;\n    const { headerCell, configType } = headerMap[headerType];\n    const target = { target: CANVAS };\n\n    if (components.headers && components.headers[headerCell]) {\n        let headerConfig = layoutConfig[headerType];\n        const header = components.headers[headerCell];\n\n        headerConfig = Object.assign({}, headerConfig, {\n            classPrefix: layoutConfig.classPrefix,\n            ...target,\n            alignWith: `${ROW_MATRIX_INDEX[0]}-${COLUMN_MATRIX_INDEX[1]}`,\n            alignment: LAYOUT_ALIGN.LEFT,\n            className: configType.className\n        });\n\n        if (headerConfig.align === CENTER) {\n            headerConfig.alignment = null;\n            headerConfig.alignWith = null;\n        }\n        if (headerConfig.align === RIGHT) {\n            headerConfig.alignment = RIGHT;\n        }\n\n        const wrapperParams = {\n            name: headerType,\n            component: header,\n            config: headerConfig\n        };\n\n        const existingComponent = layoutManager.getComponent(headerType);\n        if (existingComponent) {\n            wrapper = existingComponent\n                      .updateWrapper(wrapperParams);\n        } else {\n            wrapper = new HeaderComponent(wrapperParams);\n        }\n    }\n    return wrapper;\n};\n\n// Mapping between types of scrollBars and their required configs for wrapper creation\nconst scrollBarMap = config => ({\n    vertical: {\n        componentName: 'verticalScrollBar',\n        width: 'thickness',\n        height: 'layoutBasedMeasure',\n        layoutBasedMeasure: HEIGHT,\n        viewMeasure: 'viewHeight',\n        rowAlign: 1,\n        colAlign: config.align === 'right' ? 2 : 0,\n        position: config.align,\n        alignment: TOP\n    },\n    horizontal: {\n        componentName: 'horizontalScrollBar',\n        width: 'layoutBasedMeasure',\n        layoutBasedMeasure: WIDTH,\n        viewMeasure: 'viewWidth',\n        height: 'thickness',\n        rowAlign: config.align === 'top' ? 0 : 2,\n        colAlign: 1,\n        position: config.align,\n        alignment: LEFT\n    }\n});\n\n/**\n * Creates the wrapper for the scroller, i.e., horizontal and vertical to be used in the tree layout\n *\n *\n * @param {string} scrollBarType type of scrollbar: horizontal/vertical\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst createScrollBarWrapper = (scrollBarType, layoutManager, renderDetails, grid) => {\n    let scrollBarWrapper = null;\n    const { layoutConfig } = renderDetails;\n    const target = { target: CANVAS };\n    const { scrollBar } = layoutConfig;\n    const { layoutDimensions } = grid.viewInfo();\n    const {\n        actualCenterMeasures,\n        unitHeights,\n        unitWidths\n    } = layoutDimensions;\n    const {\n        componentName, layoutBasedMeasure, width, height, rowAlign, colAlign,\n        viewMeasure, position, alignment\n    } = scrollBarMap(scrollBar[scrollBarType])[scrollBarType];\n    const dimensions = {\n        thickness: scrollBar.thickness,\n        layoutBasedMeasure: layoutDimensions[viewMeasure][1]\n    };\n    const isScroll = grid.scrollInfo()[scrollBarType];\n    const totalLength = actualCenterMeasures[layoutBasedMeasure];\n    const viewLength = layoutDimensions[viewMeasure][1];\n\n    const scrollConfig = Object.assign({}, {\n        classPrefix: layoutConfig.classPrefix,\n        ...target,\n        scrollBarComponentConfig: {\n            ...scrollBar,\n            classPrefix: layoutConfig.classPrefix\n        },\n\n        type: scrollBarType,\n        alignWith: `${ROW_MATRIX_INDEX[rowAlign]}-${COLUMN_MATRIX_INDEX[colAlign]}`,\n        alignment,\n        position\n    });\n\n    const wrapperParams = {\n        name: componentName,\n        config: scrollConfig,\n        dimensions: {\n            width: dimensions[width],\n            height: dimensions[height],\n            totalLength,\n            viewLength,\n            unitHeights,\n            unitWidths\n        }\n    };\n\n    const existingComponent = layoutManager.getComponent(componentName);\n\n    if (!isScroll) {\n        existingComponent && existingComponent.remove();\n        return null;\n    }\n\n    if (existingComponent) {\n        scrollBarWrapper = existingComponent\n                                .updateWrapper(wrapperParams);\n    } else {\n        scrollBarWrapper = new ScrollComponent(wrapperParams);\n    }\n\n    return scrollBarWrapper;\n};\n\n/**\n * Creates the wrapper for the legend to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createLegendWrapper = (layoutManager, renderDetails) => {\n    let legendWrapper = null;\n    const { components, layoutConfig, measurement } = renderDetails;\n    const target = { target: CANVAS };\n\n    if (components.legends && components.legends.length) {\n        const legendConfig = { ...layoutConfig.legend, ...target, measurement };\n        const wrapperParams = {\n            name: LEGEND,\n            component: components.legends,\n            config: legendConfig\n        };\n\n        const existingComponent = layoutManager.getComponent(LEGEND);\n\n        if (existingComponent) {\n            legendWrapper = existingComponent\n                       .updateWrapper(wrapperParams);\n        } else {\n            legendWrapper = new LegendComponent(wrapperParams);\n        }\n    }\n    return legendWrapper;\n};\n\n/**\n * Creates the wrapper for the grid layout to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst gridLayoutWrapper = (layoutManager, renderDetails, grid) => {\n    let gridWrapper = null;\n    const target = { target: CANVAS };\n    const { layoutConfig } = renderDetails;\n\n    const config = {\n        ...target,\n        pagination: layoutConfig.pagination,\n        classPrefix: layoutConfig.classPrefix,\n        dimensions: { height: 0, width: 0 }\n    };\n    const wrapperParams = {\n        name: GRID,\n        component: grid,\n        config\n    };\n    const existingComponent = layoutManager.getComponent(GRID);\n    if (existingComponent) {\n        gridWrapper = existingComponent\n                    .updateWrapper(wrapperParams);\n    } else {\n        gridWrapper = new GridComponent(wrapperParams);\n    }\n    return gridWrapper;\n};\n\n/**\n * Responsible for providing the wrapper creators for every component in Muze.\n * This function, when called, returns the set of components and their respective wrappers.\n *\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {GridLayout} grid Instance of the grid layout\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers for each component\n */\nexport const componentWrapperMaker = (layoutManager, grid, renderDetails) => ({\n    title: createHeaderWrapper(TITLE, layoutManager, renderDetails),\n    subtitle: createHeaderWrapper(SUB_TITLE, layoutManager, renderDetails),\n    legend: createLegendWrapper(layoutManager, renderDetails),\n    grid: gridLayoutWrapper(layoutManager, renderDetails, grid),\n    verticalScrollBar: createScrollBarWrapper(VERTICAL, layoutManager, renderDetails, grid),\n    horizontalScrollBar: createScrollBarWrapper(HORIZONTAL, layoutManager, renderDetails, grid)\n});\n","export class ScrollManager {\n\n    constructor () {\n        this._scrollBarComponents = {};\n        this._attachedComponents = {};\n    }\n\n    scrollBarComponents (...sbc) {\n        if (sbc.length) {\n            this._scrollBarComponents = sbc[0];\n            return this;\n        }\n        return this._scrollBarComponents;\n    }\n\n    attachedComponents (...abc) {\n        if (abc.length) {\n            this._attachedComponents = abc[0];\n            return this;\n        }\n        return this._attachedComponents;\n    }\n\n    performAttachedScrollFunction (type, movedViewLength) {\n        Object.values(this.attachedComponents()).forEach((e) => {\n            e.performScrollAction(type, movedViewLength);\n        });\n    }\n\n    triggerScrollBarAction (type, delta) {\n        this.scrollBarComponents()[type] && this.scrollBarComponents()[type].scrollDeltaTo(delta);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\nimport { arrangeComponents } from './component-resolver';\nimport { createHeaders } from './title-maker';\nimport { createLegend, getLegendSpace } from './legend-maker';\nimport { componentWrapperMaker } from './component-wrapper-maker';\nimport { TOP, BOTTOM, LEFT, RIGHT } from '../constants';\nimport { ScrollManager } from './scroll-manager';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const prepareLayout = (layout, renderDetails) => {\n    const { components, layoutConfig, measurement } = renderDetails;\n    const {\n        rows,\n        columns,\n        values,\n        cornerMatrices\n    } = components;\n    const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n    } = cornerMatrices;\n    if (rows && columns) {\n        layout.measurement(measurement)\n                        .config(layoutConfig)\n                        .matrices({\n                            top: [topLeft, columns[0], topRight],\n                            center: [rows[0], values, rows[1]],\n                            bottom: [bottomLeft, columns[1], bottomRight]\n                        })\n                        .triggerReflow();\n    }\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} mount\n *\n */\nexport const getRenderDetails = (context, mount) => {\n    let layoutConfig = mergeRecursive({}, context.config());\n    // Get height width of the mount point\n    let { height, width } = mount.getBoundingClientRect();\n    const heightAttr = context.height();\n    const widthAttr = context.width();\n    const visGroup = context.composition().visualGroup;\n    const {\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority,\n        rows,\n        columns,\n        values\n    } = visGroup.placeholderInfo();\n    const {\n        minWidth,\n        minHeight,\n        classPrefix,\n        showHeaders,\n        legend,\n        pagination,\n        scrollBar\n    } = context.config();\n\n    // Get title configuration\n    const titleConfig = context.title()[1];\n     // Get subtitle configuration\n    const subtitleConfig = context.subtitle()[1];\n    // Get legend position\n    const legendPosition = legend.position;\n    // Arrange components according to config\n    const layoutArrangement = arrangeComponents(context);\n\n    height = Math.floor(height);\n    width = Math.floor(width);\n\n    const availableHeightForCanvas = Math.max(heightAttr > 0 ? heightAttr : height, minHeight);\n    const availableWidthForCanvas = Math.max(widthAttr > 0 ? widthAttr : width, minWidth);\n\n    // Create headers and determine header height\n    const { headers, headerHeight } = createHeaders(context, availableHeightForCanvas, availableWidthForCanvas);\n\n    // Create legends and determine legend space\n    const legends = createLegend(context, headerHeight, availableHeightForCanvas, availableWidthForCanvas);\n    context._composition.legend = {};\n    legends.forEach((e) => {\n        context._composition.legend[e.scaleType] = e.legend;\n    });\n\n    const legendSpace = getLegendSpace(legends, legend, availableHeightForCanvas, availableWidthForCanvas);\n    const legendWidth = (legendPosition === LEFT || legendPosition === RIGHT) ? legendSpace.width : 0;\n    const legendHeight = (legendPosition === TOP || legendPosition === BOTTOM) ? legendSpace.height : 0;\n\n    // Set components for layouting\n    const components = {\n        headers,\n        legends,\n        canvases: [context],\n        rows,\n        columns,\n        values,\n        cornerMatrices: visGroup.cornerMatrices()\n    };\n\n    const measurement = {\n        mountSpace: {\n            height,\n            width\n        },\n        headerHeight,\n        legendSpace,\n        canvasWidth: availableWidthForCanvas,\n        canvasHeight: availableHeightForCanvas,\n        width: availableWidthForCanvas - legendWidth,\n        height: availableHeightForCanvas - headerHeight - legendHeight,\n        minUnitHeight: context.minUnitHeight(),\n        minUnitWidth: context.minUnitWidth()\n    };\n    layoutConfig = mergeRecursive(layoutConfig, {\n        classPrefix,\n        showHeaders,\n        border: mergeRecursive(visGroup.metaData().border, context.config().border),\n        layoutArrangement,\n        legend,\n        buffer: scrollBar.thickness,\n        pagination,\n        title: titleConfig,\n        subtitle: subtitleConfig,\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        mount,\n        priority\n    });\n    return {\n        layoutConfig,\n        components,\n        measurement\n    };\n};\n\nconst componentIndexes = {\n    title: 0,\n    subtitle: 1,\n    legend: 2,\n    verticalScrollBar: 3,\n    horizontalScrollBar: 4,\n    grid: 5\n};\n\n/**\n * Responsible for creating a scroll manager that manages interactions between the grid\n * component and the scroll bar components\n *\n * @param {Array} componentWrappers Contains the wrappers for all the components\n * @param {Canvas} canvas Instance of the current canvas\n * @return {Array} Positions of units either horizontal or vertical\n */\nconst createScrollManager = (componentWrappers, canvas) => {\n    const {\n        horizontalScrollBar,\n        verticalScrollBar,\n        grid\n    } = componentIndexes;\n\n    const horizontalScrollWrapper = componentWrappers[horizontalScrollBar];\n    const verticalScrollWrapper = componentWrappers[verticalScrollBar];\n    const gridWrapper = componentWrappers[grid];\n    const scrollBarManager = new ScrollManager();\n    const scrollBarComponents = {};\n\n    verticalScrollWrapper && (scrollBarComponents.vertical = verticalScrollWrapper);\n    horizontalScrollWrapper && (scrollBarComponents.horizontal = horizontalScrollWrapper);\n\n    scrollBarManager\n                    .scrollBarComponents(scrollBarComponents)\n                    .attachedComponents({\n                        grid: gridWrapper\n                    });\n    canvas.composition().hScrollBar = horizontalScrollWrapper;\n    canvas.composition().vScrollBar = verticalScrollWrapper;\n\n    [horizontalScrollWrapper, verticalScrollWrapper].forEach((wrapper) => {\n        wrapper && wrapper.manager(scrollBarManager);\n    });\n\n    gridWrapper.scrollBarManager(scrollBarManager);\n};\n\nexport const renderLayout = (canvas, renderDetails) => {\n    const layoutManager = canvas._layoutManager;\n    const gridLayout = canvas.layout();\n    const {\n\n        grid\n    } = componentIndexes;\n\n    // Get the component wrappers\n    const compWrappers = componentWrapperMaker(layoutManager, gridLayout, renderDetails);\n    const componentWrappers = Object.keys(componentIndexes).map(e => compWrappers[e]);\n    const gridWrapper = componentWrappers[grid];\n    createScrollManager(componentWrappers, canvas);\n\n    layoutManager.registerComponents(componentWrappers).compute();\n    gridWrapper.attachScrollListener();\n};\n\n","import {\n    getDataModelFromIdentifiers,\n    FieldType,\n    mergeRecursive,\n    isSimpleObject,\n    CommonProps\n} from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\n\nimport { applyInteractionPolicy } from '../helper';\n\nconst defaultInteractionPolicy = (valueMatrix, firebolt) => {\n    const isMeasure = field => field.type() === FieldType.MEASURE;\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    const xFields = [].concat(...visualGroup.getFieldsFromChannel('x'));\n    const yFields = [].concat(...visualGroup.getFieldsFromChannel('y'));\n    const colDim = xFields.every(field => field.type() === FieldType.DIMENSION);\n    const fieldInf = visualGroup.resolver().getAllFields();\n    const rowFacets = fieldInf.rowFacets;\n    const colFacets = fieldInf.colFacets;\n    valueMatrix.each((cell) => {\n        const unitFireBolt = cell.valueOf().firebolt();\n        if (!(xFields.every(isMeasure) && yFields.every(isMeasure))) {\n            const facetFields = cell.valueOf().facetByFields()[0];\n            const unitColFacets = facetFields.filter(d => colFacets.findIndex(v => v.equals(d)) !== -1);\n            const unitRowFacets = facetFields.filter(d => rowFacets.findIndex(v => v.equals(d)) !== -1);\n            let propFields;\n            if (colDim) {\n                propFields = unitColFacets.map(d => `${d}`);\n            } else {\n                propFields = unitRowFacets.map(d => `${d}`);\n            }\n\n            unitFireBolt.propagateWith('*', propFields, true);\n        }\n    });\n};\n\nconst defaultCrossInteractionPolicy = {\n    behaviours: {\n        '*': (propagationPayload, context) => {\n            const propagationCanvasAlias = propagationPayload.sourceCanvas;\n            const canvasAlias = context.parentAlias();\n            return propagationCanvasAlias ? canvasAlias === propagationCanvasAlias : true;\n        }\n    },\n    sideEffects: {\n        tooltip: (propagationPayload, context) => {\n            const propagationUnit = propagationPayload.sourceUnit;\n            const propagationCanvas = propagationPayload.sourceCanvas;\n            const unitId = context.id();\n            const canvasAlias = context.parentAlias();\n            if (propagationCanvas) {\n                return propagationCanvas !== canvasAlias ? true : unitId === propagationUnit;\n            }\n            return true;\n        }\n    }\n};\n\n/**\n * This class is responsible for dispatching any behavioural action to all the visual units housed by the canvas.\n * It is created by {@link Canvas}. This class does not handle any physical actions. Physical actions get triggered\n * in {@link VisualUnit} which is managed by it's own firebolt instance. The firebolt instance of canvas only\n * propagates the action to all the visual units in it's composition.\n *\n * To get the firebolt instance of {@link Canvas}\n * ```\n *  const firebolt = canvas.firebolt();\n * ```\n *\n * @class GroupFireBolt\n * @public\n */\nexport default class GroupFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this._interactionPolicy = this.constructor.defaultInteractionPolicy();\n        this.crossInteractionPolicy(this.constructor.defaultCrossInteractionPolicy());\n    }\n\n    static defaultInteractionPolicy () {\n        return defaultInteractionPolicy;\n    }\n\n    static defaultCrossInteractionPolicy () {\n        return defaultCrossInteractionPolicy;\n    }\n\n    interactionPolicy (...policy) {\n        if (policy.length) {\n            this._interactionPolicy = policy[0] || this.constructor.defaultInteractionPolicy();\n            return this;\n        }\n        return this._interactionPolicy;\n    }\n\n    crossInteractionPolicy (...policy) {\n        if (policy.length) {\n            this._crossInteractionPolicy = mergeRecursive(mergeRecursive({},\n                this.constructor.defaultCrossInteractionPolicy()), policy[0] || {});\n            const context = this.context;\n            applyInteractionPolicy(this);\n            context._throwback.registerImmediateListener([CommonProps.MATRIX_CREATED], () => {\n                applyInteractionPolicy(this);\n            });\n            return this;\n        }\n        return this._crossInteractionPolicy;\n    }\n\n    /**\n     * Dispatches a behavioural action with a payload. It takes the name of the behavioural action and a payload\n     * object which contains the criteria aend an array of side effects which determines what side effects are\n     * going to be shown in each visual unit of the canvas. It prepares the datamodel from the given criteria\n     * and initiates a propagation from the datamodel of canvas. Then all the visual units of canvas which listens\n     * to the propagation gets informed on which rows got selected and dispatches the behavioural action sent during\n     * propagation.\n     *\n     * To dispatch a behavioural action on the canvas\n     * ```\n     *  // Get the firebolt instance of the canvas\n     *  const firebolt = canvas.firebolt();\n     *  // Dispatch a brush behaviour\n     *  firebolt.dispatchBehaviour('brush', {\n     *      // Selects all the rows with Horsepower having range between 100 and 200.\n     *      criteria: {\n     *          Horsepower: [100, 200]\n     *      }\n     *  });\n     * // On dispatch of this behavioural action, a selection box gets created and plots gets faded out which are the\n     * // default side effects mapped to this behavioural action.\n     * ```\n     *\n     * ```\n     * Additionally, it can also be passed an array of side effects in the payload.\n     *  // Dispatch a select behaviour with only crossline as side effect.\n     *  firebolt.dispatchBehaviour('select', {\n     *      criteria: {\n     *          Cylinders: ['8']\n     *      },\n     *      sideEffects: ['crossline']\n     *  });\n     * ```\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of the behavioural action\n     * @param {Object} payload Object which contains the interaction information.\n     * @param {Object | Array.<Array>} payload.criteria Identifiers by which the selection happens.\n     * @param {Array.<string|Object>} payload.sideEffects Side effects which needs to be shown.\n     *\n     * @return {GroupFireBolt} Instance of firebolt.\n     */\n    dispatchBehaviour (behaviour, payload) {\n        const propPayload = Object.assign(payload);\n        const criteria = propPayload.criteria;\n        const data = this.context.composition().visualGroup.getGroupByData();\n        const fieldsConfig = data.getFieldsConfig();\n        const model = getDataModelFromIdentifiers(data, criteria);\n        const behaviouralAction = this._actions.behavioural[behaviour];\n\n        if (behaviouralAction) {\n            const fields = isSimpleObject(criteria) ? Object.keys(criteria) : (criteria ? criteria[0] : []);\n            const validFields = fields.filter(field => field in fieldsConfig);\n            const mutates = behaviouralAction.constructor.mutates();\n            const propConfig = {\n                payload: propPayload,\n                action: behaviour,\n                criteria: model,\n                sourceId: this.context.alias(),\n                isMutableAction: mutates,\n                propagateInterpolatedValues: validFields.every(field => fieldsConfig[field].def.type ===\n                    FieldType.MEASURE)\n            };\n            data.propagate(model, propConfig, true);\n        }\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        return this;\n    }\n}\n","import GroupFireBolt from './group-firebolt';\n\nexport default GroupFireBolt;\n","export const APP_INITIAL_STATE = {\n    app: {\n        group: {},\n        units: {},\n        layers: {},\n        canvas: {}\n    },\n    local: {\n        canvas: {},\n        group: {},\n        units: {},\n        layers: {}\n    }\n};\n\n","import { GridLayout } from '@chartshq/layout';\nimport { transactor, Store, getUniqueId, selectElement, STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { RETINAL } from '../constants';\nimport TransactionSupport from '../transaction-support';\nimport { getRenderDetails, prepareLayout, renderLayout } from './layout-maker';\nimport { localOptions, canvasOptions } from './local-options';\nimport GroupFireBolt from './firebolt';\nimport options from '../options';\nimport { APP_INITIAL_STATE } from './app-state';\nimport { initCanvas,\n        setupChangeListener,\n        setLabelRotationForAxes,\n        createGroupState,\n        createLayoutManager,\n        setLayoutInfForUnits\n} from './helper';\n/**\n * Canvas is a logical component which houses a visualization by taking multiple variable in different encoding channel.\n * Canvas manages lifecycle of many other logical component and exposes one consistent interface for creation of chart.\n * Canvas is intialized from environment with settings from environment and singleton dependencies.\n *\n * To create an instance of canvas\n * ```\n *  const env = Muze();\n *  const canvas = env.canvas()\n * ```\n *\n *\n * @class\n * @public\n * @module Canvas\n */\nexport default class Canvas extends TransactionSupport {\n\n    /**\n     * Creates reactive property accessors.\n     * - data\n     * - height\n     * - width\n     * - config\n     * This configs are retrieved from options.\n     */\n    constructor (globalDependencies) {\n        super();\n\n        this._allOptions = Object.assign({}, options, localOptions);\n        this._registry = {};\n        this._composition = {};\n        this._cachedProps = {};\n        this._alias = null;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        this._composition.layout = new GridLayout();\n        this._store = new Store(APP_INITIAL_STATE);\n\n        this._throwback = new Store({\n            [CommonProps.MATRIX_CREATED]: false\n        });\n\n        // Setters and getters will be mounted on this. The object will be mutated.\n        const namespace = STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE;\n        const [, store] = transactor(this, options, this._store.model, {\n            namespace\n        });\n        transactor(this, localOptions, store, {\n            namespace\n        });\n        transactor(this, canvasOptions, store, {\n            namespace\n        });\n\n        this.dependencies(Object.assign({}, globalDependencies, this._dependencies));\n        this.firebolt(new GroupFireBolt(this, {\n            behavioural: behaviouralActions,\n            physical: physicalActions,\n            physicalBehaviouralMap: {}\n        }, sideEffects, behaviourEffectMap));\n        this.alias(`canvas-${getUniqueId()}`);\n        this.title('', {});\n        this.subtitle('', {});\n        this.legend({});\n        this.color({});\n        this.shape({});\n        this.size({});\n        setupChangeListener(this);\n         // init layoutManager\n        this._layoutManager = createLayoutManager();\n    }\n\n    /**\n     * Retrieves an instance of layout which is responsible for layouting. Layout is responsible for creating faceted\n     * presentation using table layout.\n     *\n     * @public\n     *\n     * @return {GridLayout} Instance of layout attached to canvas.\n     */\n    layout (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().layout;\n    }\n\n    /**\n     * Retrieves the composition for a canvas\n     *\n     * @public\n     *\n     * @return {object} Instances of the components which canvas requires to draw the full visualization.\n     *      ```\n     *          {\n     *              layout: // Instance of {@link GridLayout}\n     *              legend: // Instance of {@link Legend}\n     *              subtitle: // Instance of {@link TextCell} using which the title is rendered\n     *              title: // Instance of {@link TextCell} using which the title is rendered\n     *              visualGroup: // Instance of {@link visualGroup}\n     *          }\n     *      ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Sets or gets the alias of the canvas. Alias is a name by which the canvas can be referred.\n     *\n     * When setter\n     * @param {string} alias Name of the alias.\n     *\n     * @return {Canvas} Instance of the canvas.\n     *\n     * When getter\n     *\n     * @return {string} Alias of canvas.\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            const visualGroup = this.composition().visualGroup;\n            this._alias = params[0];\n            visualGroup && visualGroup.alias(this.alias());\n            return this;\n        }\n        return this._alias;\n    }\n\n    /**\n     * Creates an instance initiated with given settings.\n     *\n     * @param {Object} initialSettings Initial settings to be populated in the model\n     * @param {Object} regEntry newly created instance with the initial settings\n     * @param {Object} globalDependencies dependencies which will be created only once in the page\n     *\n     * @return {Object} newly created instance with the initial settings\n     */\n    static withSettings (initialSettings, regEntry, globalDependencies) {\n        const instance = new Canvas(globalDependencies);\n\n        for (const key in initialSettings) {\n            instance[key](initialSettings[key]);\n        }\n        // set registry for instance\n        instance.registry(regEntry);\n        return instance;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof Canvas\n     */\n    static formalName () {\n        return 'canvas';\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this canvas. The firebolt instance can be used to dispatch a\n     * behaviour dynamically on the canvas. This firebolt does not handle any physical actions. It is just used to\n     * propagate the action to all the visual units in it's composition.\n     *\n     * @public\n     *\n     * @return {GroupFireBolt} Instance of firebolt associated with canvas.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Registry peoperty accessor\n     *\n     * @param {Object} reg plain old javascript object keyvalue pairs. Key containing module name and value contains\n     * module definition class. The reg object has to be flat object of level 1.\n     */\n    registry (...params) {\n        if (params.length) {\n            const components = Object.assign({}, params[0].components);\n            const componentSubRegistry = Object.assign({}, params[0].componentSubRegistry);\n\n            this._registry = { components, componentSubRegistry };\n            const initedComponents = initCanvas(this);\n            // @todo is it okay to continue this tight behaviour? If not use a resolver to resolve diff component type.\n            this._composition.visualGroup = initedComponents[0];\n            createGroupState(this);\n            this.composition().visualGroup.alias(this.alias()).store(this._store);\n            return this;\n        }\n        return this._registry;\n    }\n\n    /*\n     * Prepare dependencies for top level elements\n     */\n    dependencies (...param) {\n        if (param.length) {\n            this._dependencies = param[0];\n            return this;\n        }\n        // @todo prepare dependencies here.\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     * @param {*} lifeCycles\n     *\n     * @memberof Canvas\n     */\n    lifeCycle (lifeCycles) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        if (lifeCycles) {\n            lifeCycleManager.register(lifeCycles);\n            return this;\n        }\n        return lifeCycleManager;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof Canvas\n     */\n    legend (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().legend;\n    }\n\n    /**\n     * Returns a promise for various {@link LifecycleEvents} of the various components of canvas. The promise gets\n     * resolved once the particular event gets completed.\n     *\n     * To use this,\n     * ```\n     *      canvas.once('layer.drawn').then(() => {\n     *          // Do any post drawing work here.\n     *      });\n     * ```\n     * @public\n     *\n     * @param {string} eventName Name of the lifecycle event.\n     *\n     * @return {Promise} A pending promise waiting for resolve to be called.\n     */\n    once (eventName) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        return lifeCycleManager.retrieve(eventName);\n    }\n\n    /**\n     * Internal function to trigger render, this method is cognizant of all the properties of the core modules and\n     * establish a passive reactivity. Passive reactivity is not always a bad thing :)\n     * @internal\n     */\n    render () {\n        const mount = this.mount();\n        // removeChild(mount);\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        // Get render details including arrangement and measurement\n        const renderDetails = getRenderDetails(this, mount);\n        lifeCycleManager.notify({ client: this, action: 'beforedraw' });\n        // Prepare the layout by triggering the matrix calculation\n        prepareLayout(this.layout(), renderDetails);\n\n        this._layoutManager.dimension({\n            height: renderDetails.measurement.canvasHeight,\n            width: renderDetails.measurement.canvasWidth\n        });\n\n        this._layoutManager.renderAt(mount);\n\n        // Render each component\n        renderLayout(this, renderDetails);\n\n        setLayoutInfForUnits(this);\n\n        // setLabelRotation\n        setLabelRotationForAxes(this);\n    }\n\n    /**\n     * Returns the instances of x axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the top axis and the second element represents the bottom\n     *   // axis.\n     *   [\n     *      [X1, X2],\n     *      [X3, X4]\n     *   ]\n     * ```\n     * @public\n     *\n     * @return {Array.<Array>} Instances of x axis.\n     */\n    xAxes () {\n        return this.composition().visualGroup.getAxes('x');\n    }\n\n    /**\n     * Returns the instances of y axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the left axis and the second element represents the right\n     *   // axis.\n     *   [\n     *      [Y1, Y2],\n     *      [Y3, Y4]\n     *   ]\n     * ```\n     * @public\n     * @return {Array.<Array>} Instances of y axis.\n     */\n    yAxes () {\n        return this.composition().visualGroup.getAxes('y');\n    }\n\n    /**\n     * Returns all the retinal axis of the canvas. Color, shape and size axis are combinedly called retinal axis.\n     *\n     * @public\n     * @return {Object} Instances of retinal axis.\n     *          ```\n     *              {\n     *                  color: [ColorAxis], // Array of color axis.\n     *                  shape: [ShapeAxis], // Array of shape axis.\n     *                  size: [SizeAxis] // Array of size axis.\n     *              }\n     *          ```\n     */\n    getRetinalAxes () {\n        const visualGroup = this.composition().visualGroup;\n        return visualGroup.getAxes(RETINAL);\n    }\n\n    mount (...params) {\n        if (params.length) {\n            let value = params[0];\n            if (typeof params[0] === 'string') {\n                value = selectElement(params[0]).node();\n            }\n            this._mount = value;\n            return this;\n        }\n        return this._mount;\n    }\n}\n","import { cellRegistry, SimpleCell } from '@chartshq/visual-cell';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { layerRegistry } from '@chartshq/visual-layer';\nimport { SimpleGroup, VisualGroup } from '@chartshq/visual-group';\n\nexport const COMPONENTS = {\n    VisualGroup,\n    VisualUnit\n};\nexport const SUBREGISTRIES = {\n    cellRegistry,\n    layerRegistry\n};\nexport const INTERFACES = {\n    SimpleGroup,\n    SimpleCell\n};\n\n","import { DEFAULT_LAYERS } from './defaults';\n\nexport default () => {\n    const reg = DEFAULT_LAYERS;\n    const regObj = {\n        set: (key, def) => {\n            reg[key] = def;\n            return regObj;\n        },\n        get: () => reg\n    };\n    return regObj;\n};\n","import {\n    transactor,\n    Smartlabel,\n    enableChainedTransaction,\n    LifeCycleManager,\n    DataModel,\n    makeElement,\n    getClientPoint,\n    selectElement,\n    getEvent,\n    require,\n    DateTimeFormatter\n} from 'muze-utils';\n\nimport {\n    SurrogateSideEffect,\n    SpawnableSideEffect,\n    sideEffects,\n    PersistentBehaviour,\n    GenericBehaviour,\n    VolatileBehaviour,\n    behaviouralActions,\n    GenericSideEffect\n} from '@chartshq/muze-firebolt';\nimport { layerFactory } from '@chartshq/visual-layer';\nimport pkg from '../package.json';\nimport * as operators from './operators';\nimport { actionModel as ActionModel } from './action-model';\nimport options from './options';\nimport { Canvas } from './canvas';\nimport { COMPONENTS, SUBREGISTRIES } from './default-registry';\nimport './muze.scss';\n\n// Cache singleton instances which should be included only once in a page\nconst globalCache = {};\nconst defaultRegistry = COMPONENTS;\n\nconst overrideRegistryDefinitions = (overrideRegistry, registry) => {\n    for (const prop in overrideRegistry) {\n        registry.set(prop, overrideRegistry[prop]);\n    }\n};\n\n/**\n * Entry point to renderer. Initializes an environment with settings and registries for canvas. This is a simple wrapper\n * over {@link Canvas} which enables common configuration passing to multiple such canvases.\n *\n * Everytime `muze()` is called it creates an environment. These environment supports subset of APIs of Canvas. If\n * common configuration is used to render multiple canvases then it can be set directly in the env. Like if data is\n * common across all the visulization then its better to set the data in env. When a canvas is created it receives all\n * those configuration from env.\n *\n * ```\n *  // Creates an environment\n *  const env = muze()\n *  // Set data property in environment, so that all the canvas created from the same environment gets this data\n *  // automatically\n *  env.data(dm);\n *  // Creates canvas, by default env pushes data to canvas instance\n *  const canvas = env.canvas();\n * ```\n *\n * If a property is set on both environment and canvas instance, property set on canvas instance gets more priority.\n *\n * @public\n * @module muze\n * @namespace Muze\n *\n * @return {Env} Instance of an environment\n */\nconst muze = () => {\n    // Setters and getters will be mounted on this. Object will be mutated.\n    const [env, globalStore] = transactor({}, options);\n    const components = Object.assign({}, COMPONENTS);\n    const componentSubRegistryDef = Object.assign(SUBREGISTRIES);\n    const componentSubRegistry = {};\n\n    for (const prop in componentSubRegistryDef) {\n        componentSubRegistry[prop] = componentSubRegistryDef[prop]();\n    }\n\n    // Apart form the setter getter, an instance method is injected to create real renderer instances\n    env.canvas = () => {\n        // Create a canvas instance with this settings\n        const settings = globalStore.serialize();\n        const canvas = Canvas.withSettings(settings, { /* registry */\n            components,\n            componentSubRegistry\n        }, env.globalDependencies());\n\n        // Whenever settings is changed canvas is updated\n        enableChainedTransaction(globalStore, canvas, Object.keys(settings));\n\n        return canvas;\n    };\n\n    // Global dependencies for for compositions. Only one copy of the same should be in the page\n    env.globalDependencies = () => {\n        if (!globalCache.smartlabel) {\n            globalCache.smartlabel = new Smartlabel(1, 'body');\n        }\n        return {\n            smartlabel: globalCache.smartlabel,\n            lifeCycleManager: new LifeCycleManager()\n        };\n    };\n\n    // Retrieves global settings. This getter is readonly so that user can't change this as change should happen\n    // only from setter to avoid unwanted sync issues.\n    env.settings = () => globalStore.serialize();\n\n    env.registry = (...overrideRegistry) => {\n        // Selectively copy the properties from COMPONENTS\n        if (overrideRegistry.length) {\n            for (const prop in overrideRegistry) {\n                if (prop in defaultRegistry) {\n                    components[prop] = overrideRegistry[prop];\n                }\n            }\n            return env;\n        }\n        return components;\n    };\n\n    env.cellRegistry = (...overrideRegistry) => {\n        const cellRegistry = componentSubRegistry.cellRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], cellRegistry);\n            return env;\n        }\n        return cellRegistry.get();\n    };\n\n    env.layerRegistry = (...overrideRegistry) => {\n        const layerRegistry = componentSubRegistry.layerRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], layerRegistry);\n            return env;\n        }\n        return layerRegistry.get();\n    };\n\n    return env;\n};\n\nconst SideEffects = {\n    sideEffects,\n    standards: {\n        SurrogateSideEffect,\n        SpawnableSideEffect,\n        GenericSideEffect\n    }\n};\n\nconst Behaviours = {\n    behaviouralActions,\n    standards: {\n        GenericBehaviour,\n        PersistentBehaviour,\n        VolatileBehaviour\n    }\n};\n\nmuze.DataModel = DataModel;\nmuze.version = pkg.version;\nmuze.SideEffects = SideEffects;\nmuze.ActionModel = ActionModel;\nmuze.layerFactory = layerFactory;\nmuze.Operators = operators;\nmuze.Behaviours = Behaviours;\nmuze.utils = {\n    getClientPoint,\n    getEvent,\n    makeElement,\n    selectElement,\n    DateTimeFormatter,\n    require\n};\n\nexport default muze;\n"],"sourceRoot":""}