{"version":3,"sources":["webpack://muze/webpack/universalModuleDefinition","webpack://muze/webpack/bootstrap","webpack://muze/webpack://DataModel/webpack/universalModuleDefinition","webpack://muze/webpack://DataModel/webpack/bootstrap","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/autoType.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/csv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/dsv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/index.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/tsv.js","webpack://muze/webpack://DataModel/src/constants/index.js","webpack://muze/webpack://DataModel/src/converter/dataConverterStore.js","webpack://muze/webpack://DataModel/src/converter/defaultConverters/autoConverter.js","webpack://muze/webpack://DataModel/src/converter/defaultConverters/dsvArrayConverter.js","webpack://muze/webpack://DataModel/src/converter/defaultConverters/dsvStringConverter.js","webpack://muze/webpack://DataModel/src/converter/defaultConverters/index.js","webpack://muze/webpack://DataModel/src/converter/defaultConverters/jsonConverter.js","webpack://muze/webpack://DataModel/src/converter/index.js","webpack://muze/webpack://DataModel/src/converter/model/dataConverter.js","webpack://muze/webpack://DataModel/src/converter/utils/auto-resolver.js","webpack://muze/webpack://DataModel/src/converter/utils/dsv-arr.js","webpack://muze/webpack://DataModel/src/converter/utils/dsv-str.js","webpack://muze/webpack://DataModel/src/converter/utils/flat-json.js","webpack://muze/webpack://DataModel/src/datamodel.js","webpack://muze/webpack://DataModel/src/default-config.js","webpack://muze/webpack://DataModel/src/enums/data-format.js","webpack://muze/webpack://DataModel/src/enums/dimension-subtype.js","webpack://muze/webpack://DataModel/src/enums/field-type.js","webpack://muze/webpack://DataModel/src/enums/filtering-mode.js","webpack://muze/webpack://DataModel/src/enums/group-by-functions.js","webpack://muze/webpack://DataModel/src/enums/index.js","webpack://muze/webpack://DataModel/src/enums/measure-subtype.js","webpack://muze/webpack://DataModel/src/export.js","webpack://muze/webpack://DataModel/src/field-creator.js","webpack://muze/webpack://DataModel/src/field-store.js","webpack://muze/webpack://DataModel/src/fields/binned/index.js","webpack://muze/webpack://DataModel/src/fields/categorical/index.js","webpack://muze/webpack://DataModel/src/fields/continuous/index.js","webpack://muze/webpack://DataModel/src/fields/dimension/index.js","webpack://muze/webpack://DataModel/src/fields/field-registry.js","webpack://muze/webpack://DataModel/src/fields/field/index.js","webpack://muze/webpack://DataModel/src/fields/index.js","webpack://muze/webpack://DataModel/src/fields/measure/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/binned-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/categorical-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/continuous-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/field-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/temporal-parser/index.js","webpack://muze/webpack://DataModel/src/fields/partial-field/index.js","webpack://muze/webpack://DataModel/src/fields/temporal/index.js","webpack://muze/webpack://DataModel/src/helper.js","webpack://muze/webpack://DataModel/src/index.js","webpack://muze/webpack://DataModel/src/invalid-aware-types.js","webpack://muze/webpack://DataModel/src/operator/bucket-creator.js","webpack://muze/webpack://DataModel/src/operator/compose.js","webpack://muze/webpack://DataModel/src/operator/cross-product.js","webpack://muze/webpack://DataModel/src/operator/data-builder.js","webpack://muze/webpack://DataModel/src/operator/difference.js","webpack://muze/webpack://DataModel/src/operator/get-common-schema.js","webpack://muze/webpack://DataModel/src/operator/group-by-function.js","webpack://muze/webpack://DataModel/src/operator/group-by.js","webpack://muze/webpack://DataModel/src/operator/index.js","webpack://muze/webpack://DataModel/src/operator/merge-sort.js","webpack://muze/webpack://DataModel/src/operator/natural-join-filter-function.js","webpack://muze/webpack://DataModel/src/operator/natural-join.js","webpack://muze/webpack://DataModel/src/operator/outer-join.js","webpack://muze/webpack://DataModel/src/operator/pure-operators.js","webpack://muze/webpack://DataModel/src/operator/row-diffset-iterator.js","webpack://muze/webpack://DataModel/src/operator/sort.js","webpack://muze/webpack://DataModel/src/operator/union.js","webpack://muze/webpack://DataModel/src/relation.js","webpack://muze/webpack://DataModel/src/stats/index.js","webpack://muze/webpack://DataModel/src/utils/column-major.js","webpack://muze/webpack://DataModel/src/utils/date-time-formatter.js","webpack://muze/webpack://DataModel/src/utils/domain-generator.js","webpack://muze/webpack://DataModel/src/utils/extend2.js","webpack://muze/webpack://DataModel/src/utils/helper.js","webpack://muze/webpack://DataModel/src/utils/index.js","webpack://muze/webpack://DataModel/src/utils/reducer-store.js","webpack://muze/webpack://DataModel/src/value.js","webpack://muze/(webpack)/buildin/module.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/SmartlabelManager.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/lib.js","webpack://muze/webpack://hyperdis/webpack/universalModuleDefinition","webpack://muze/webpack://hyperdis/webpack/bootstrap","webpack://muze/webpack://hyperdis/src/utils/set.js","webpack://muze/webpack://hyperdis/src/utils/index.js","webpack://muze/webpack://hyperdis/src/graph-node.js","webpack://muze/webpack://hyperdis/src/electric-node.js","webpack://muze/webpack://hyperdis/src/graph.js","webpack://muze/webpack://hyperdis/src/model.js","webpack://muze/webpack://hyperdis/src/index.js","webpack://muze/./packages/muze/src/index.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/container-manager.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisector.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisect.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/range.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ticks.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/threshold/sturges.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/map.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/nest.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/set.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/ordinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/band.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/define.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/lab.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/rgb.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/object.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/string.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/value.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/parse.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/date.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/round.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/decompose.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/zoom.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hsl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hcl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/piecewise.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/continuous.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatDecimal.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/exponent.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatSpecifier.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTrim.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatPrefixAuto.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatRounded.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTypes.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatGroup.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatNumerals.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionFixed.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/tickFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionPrefix.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionRound.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/nice.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/log.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/pow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/threshold.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/interval.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/millisecond.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/second.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/minute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/hour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/day.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/week.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/month.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/year.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMinute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcHour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcDay.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcWeek.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMonth.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcYear.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoParse.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/time.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20b.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20c.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/viridis.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/sequential.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/ramp.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack://muze/./packages/muze-utils/src/enums/namespace.js","webpack://muze/./packages/muze-utils/src/enums/reserved-fields.js","webpack://muze/./packages/muze-utils/src/enums/common-props.js","webpack://muze/./packages/muze-utils/src/enums/constants.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/axis.js","webpack://muze/./packages/muze-utils/node_modules/d3-path/src/path.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/arc.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/line.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/area.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/radial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/lineRadial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/diamond.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/star.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/square.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/triangle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/wye.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/noop.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/bundle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRom.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linearClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/monotone.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/natural.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/step.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/stack.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/cubic.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/poly.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/sin.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/bounce.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/back.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/elastic.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/RedBlackTree.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Edge.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Cell.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Beach.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Diagram.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/voronoi.js","webpack://muze/./packages/muze-utils/src/DataSystem/selection.js","webpack://muze/./packages/muze-utils/src/DataSystem/dataSelect.js","webpack://muze/./packages/muze-utils/src/enums/stack-config.js","webpack://muze/./packages/muze-utils/src/common-utils.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/diverging.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/expand.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/wiggle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/pie.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespaces.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespace.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/creator.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selector.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selectorAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/matcher.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sparse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/enter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/data.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sort.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/window.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/classed.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/html.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/raise.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/lower.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/insert.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/clone.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/exit.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/join.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/order.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/call.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/nodes.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/node.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/size.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/empty.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/each.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/property.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/append.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/datum.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/local.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/sourceEvent.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/mouse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/touch.js","webpack://muze/./packages/muze-utils/node_modules/d3-dispatch/src/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/noevent.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/nodrag.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/event.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/drag.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timer.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timeout.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/schedule.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/tween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/interpolate.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selection.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attrTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/styleTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/delay.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/ease.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/end.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/interrupt.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/interrupt.js","webpack://muze/./packages/muze-utils/src/renderer-utils.js","webpack://muze/./packages/muze-utils/src/store.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/event-list.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/lifecycle-manager.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/index.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/helper.js","webpack://muze/./packages/muze-utils/src/index.js","webpack://muze/./packages/visual-layer/src/enums/constants.js","webpack://muze/./packages/visual-layer/src/simple-layer/simple-layer.js","webpack://muze/./packages/visual-layer/src/enums/props.js","webpack://muze/./packages/visual-layer/src/base-layer/props.js","webpack://muze/./packages/muze-axis/src/enums/axis-orientation.js","webpack://muze/./packages/muze-axis/src/enums/scale-type.js","webpack://muze/./packages/muze-axis/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/scale-creator.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/default-config.js","webpack://muze/./packages/muze-axis/src/axis-renderer.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/skip-ticks.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/space-setter.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/helper.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/props.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/simple-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/linear.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/log.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/pow.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/continous-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/band-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/time-axis.js","webpack://muze/./packages/muze-axis/src/color-axis/color-maps.js","webpack://muze/./packages/muze-axis/src/color-axis/defaults.js","webpack://muze/./packages/muze-axis/src/color-axis/props.js","webpack://muze/./packages/muze-axis/src/helper.js","webpack://muze/./packages/muze-axis/src/color-axis/color-strategy.js","webpack://muze/./packages/muze-axis/src/color-axis/color-axis.js","webpack://muze/./packages/muze-axis/src/size-axis/defaults.js","webpack://muze/./packages/muze-axis/src/size-axis/size-strategy.js","webpack://muze/./packages/muze-axis/src/size-axis/props.js","webpack://muze/./packages/muze-axis/src/size-axis/size-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/defaults.js","webpack://muze/./packages/muze-axis/src/shape-axis/props.js","webpack://muze/./packages/muze-axis/src/shape-axis/shape-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/helper.js","webpack://muze/./packages/muze-axis/src/polar-axis/props.js","webpack://muze/./packages/muze-axis/src/polar-axis/angle-axis.js","webpack://muze/./packages/visual-group/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/polar-axis/radius-axis.js","webpack://muze/./packages/muze-axis/src/data-type-scale-map.js","webpack://muze/./packages/transform/src/group-transform/index.js","webpack://muze/./packages/transform/src/identity-transform/index.js","webpack://muze/./packages/transform/src/transform-factory/index.js","webpack://muze/./packages/transform/src/enums/transform-type.js","webpack://muze/./packages/transform/src/stack-transform/index.js","webpack://muze/./packages/visual-layer/src/helpers/index.js","webpack://muze/./packages/visual-layer/src/base-layer/local-options.js","webpack://muze/./packages/visual-layer/src/base-layer/listener-map.js","webpack://muze/./packages/visual-layer/src/base-layer/base-mixin.js","webpack://muze/./packages/visual-layer/src/base-layer/base-layer.js","webpack://muze/./packages/visual-layer/src/layers/line/renderer.js","webpack://muze/./packages/visual-layer/src/layers/line/default-config.js","webpack://muze/./packages/visual-layer/src/layers/line/helper.js","webpack://muze/./packages/visual-layer/src/layers/line/line-mixin.js","webpack://muze/./packages/visual-layer/src/layers/area/default-config.js","webpack://muze/./packages/visual-layer/src/layers/area/renderer.js","webpack://muze/./packages/visual-layer/src/layers/area/area-mixin.js","webpack://muze/./packages/visual-layer/src/layers/area/area.js","webpack://muze/./packages/visual-layer/src/layers/arc/default-config.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc-mixin.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc-helper.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc.js","webpack://muze/./packages/visual-layer/src/layers/line/line.js","webpack://muze/./packages/visual-layer/src/layers/text/renderer.js","webpack://muze/./packages/visual-layer/src/layers/text/default-config.js","webpack://muze/./packages/visual-layer/src/layers/text/text-mixin.js","webpack://muze/./packages/visual-layer/src/layers/text/text.js","webpack://muze/./packages/visual-layer/src/layers/point/renderer.js","webpack://muze/./packages/visual-layer/src/layers/point/default-config.js","webpack://muze/./packages/visual-layer/src/layers/point/helper.js","webpack://muze/./packages/visual-layer/src/layers/point/point-mixin.js","webpack://muze/./packages/visual-layer/src/layers/point/point.js","webpack://muze/./packages/visual-layer/src/layers/bar/renderer.js","webpack://muze/./packages/visual-layer/src/layers/bar/default-config.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar-helper.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar-mixin.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar.js","webpack://muze/./packages/visual-layer/src/layers/tick/default-config.js","webpack://muze/./packages/visual-layer/src/layers/tick/renderer.js","webpack://muze/./packages/visual-layer/src/layers/tick/helper.js","webpack://muze/./packages/visual-layer/src/layers/tick/tick-mixin.js","webpack://muze/./packages/visual-layer/src/layers/tick/tick.js","webpack://muze/./packages/visual-layer/src/enums/layer-types.js","webpack://muze/./packages/visual-layer/src/layer-factory/layer-factory.js","webpack://muze/./packages/visual-layer/src/layer-factory/index.js","webpack://muze/./packages/visual-layer/src/defaults.js","webpack://muze/./packages/visual-layer/src/layer-registry.js","webpack://muze/./packages/visual-layer/src/index.js","webpack://muze/./packages/visual-unit/src/helper/index.js","webpack://muze/./packages/visual-unit/src/enums/reactive-props.js","webpack://muze/./packages/visual-unit/src/enums/constants.js","webpack://muze/./packages/muze-firebolt/src/enums/actions.js","webpack://muze/./packages/muze-firebolt/src/enums/selection.js","webpack://muze/./packages/muze-firebolt/src/selection-set/index.js","webpack://muze/./packages/muze-firebolt/src/selection-set/selection-set.js","webpack://muze/./packages/muze-firebolt/src/helper/index.js","webpack://muze/./packages/muze-firebolt/src/firebolt.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/generic.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/volatile.js","webpack://muze/./packages/muze-firebolt/src/enums/behaviours.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/highlight.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/brush.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/filter.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/persistent.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/select.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-action-config.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-event.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/hover.js","webpack://muze/./packages/muze-firebolt/src/enums/constants.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/click.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/drag.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/longtouch.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/touch-drag.js","webpack://muze/./packages/muze-firebolt/src/enums/side-effects.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/props.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/generic-sideeffect.js","webpack://muze/./packages/muze-firebolt/src/side-effects/surrogate.js","webpack://muze/./packages/muze-firebolt/src/side-effects/spawnable.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/helper.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/selection-box-drag.js","webpack://muze/./packages/muze-tooltip/src/constants.js","webpack://muze/./packages/muze-tooltip/src/default-config.js","webpack://muze/./packages/muze-tooltip/src/helper.js","webpack://muze/./packages/muze-tooltip/src/content.js","webpack://muze/./packages/muze-tooltip/src/tooltip.js","webpack://muze/./packages/muze-firebolt/src/enums/tooltip-strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/helper/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/crossline/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/helper.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/strategy.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/filter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/anchors/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/persistent-anchors.js","webpack://muze/./packages/muze-firebolt/src/side-effects/brush-anchors.js","webpack://muze/./packages/muze-firebolt/src/behaviour-effect-map.js","webpack://muze/./packages/muze-firebolt/src/registry.js","webpack://muze/./packages/visual-unit/src/firebolt/payload-generator.js","webpack://muze/./packages/visual-unit/src/firebolt/data-propagator.js","webpack://muze/./packages/visual-unit/src/firebolt/index.js","webpack://muze/./packages/visual-unit/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/visual-unit/src/firebolt/behaviours/brush.js","webpack://muze/./packages/visual-unit/src/enums/behaviours.js","webpack://muze/./packages/visual-unit/src/helper/grid-lines.js","webpack://muze/./packages/visual-unit/src/listener-map.js","webpack://muze/./packages/visual-unit/src/props.js","webpack://muze/./packages/visual-unit/src/firebolt/helper.js","webpack://muze/./packages/visual-unit/src/default-config.js","webpack://muze/./packages/visual-unit/src/local-options.js","webpack://muze/./packages/visual-unit/src/visual-unit.js","webpack://muze/./packages/visual-group/src/variable/variable.js","webpack://muze/./packages/visual-group/src/variable/composed-vars.js","webpack://muze/./packages/visual-group/src/variable/simple-var.js","webpack://muze/./packages/visual-group/src/encoder/field-sanitizer.js","webpack://muze/./packages/visual-group/src/group-helper/group-utils.js","webpack://muze/./packages/visual-group/src/enums/defaults.js","webpack://muze/./packages/visual-group/src/encoder/props.js","webpack://muze/./packages/visual-group/src/encoder/visual-encoder.js","webpack://muze/./packages/visual-group/src/enums/scale-maps.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-model.js","webpack://muze/./packages/visual-group/src/group-helper/cell-creator.js","webpack://muze/./packages/visual-group/src/group-helper/resolver-props.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-resolver.js","webpack://muze/./packages/visual-group/src/data-type-scale-map.js","webpack://muze/./packages/visual-group/src/encoder/encoder-helper.js","webpack://muze/./packages/visual-group/src/encoder/cartesian-encoder.js","webpack://muze/./packages/visual-group/src/encoder/polar-encoder.js","webpack://muze/./packages/visual-group/src/encoder/retinal-encoder.js","webpack://muze/./packages/visual-group/src/visual-group/local-options.js","webpack://muze/./packages/visual-group/src/simple-group/simple-group.js","webpack://muze/./packages/visual-group/src/visual-group/value-matrix.js","webpack://muze/./packages/visual-group/src/visual-group/helper.js","webpack://muze/./packages/visual-group/src/visual-group/change-listener.js","webpack://muze/./packages/visual-group/src/visual-group/props.js","webpack://muze/./packages/visual-group/src/visual-group/visual-group.js","webpack://muze/./packages/muze-legend/src/firebolt/behavioural/select.js","webpack://muze/./packages/muze-legend/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/muze-legend/src/firebolt/behaviour-effect-map.js","webpack://muze/./packages/muze-legend/src/enums/behaviours.js","webpack://muze/./packages/muze-legend/src/enums/side-effects.js","webpack://muze/./packages/muze-legend/src/firebolt/helper.js","webpack://muze/./packages/muze-legend/src/enums/constants.js","webpack://muze/./packages/muze-legend/src/firebolt/legend-firebolt.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/drag.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/hover.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/click.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/index.js","webpack://muze/./packages/muze-legend/src/enums/actions.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/selection-box-drag.js","webpack://muze/./packages/muze-legend/src/legend/defaults.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/selection-box/index.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/strategies.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/index.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-marker/index.js","webpack://muze/./packages/muze-legend/src/legend/props.js","webpack://muze/./packages/muze-legend/src/legend/legend-helper.js","webpack://muze/./packages/muze-legend/src/legend/simple-legend.js","webpack://muze/./packages/muze-legend/src/legend/position-config.js","webpack://muze/./packages/muze-legend/src/legend/renderer.js","webpack://muze/./packages/muze-legend/src/legend/discrete-legend.js","webpack://muze/./packages/muze-legend/src/legend/gradient-helper.js","webpack://muze/./packages/muze-legend/src/legend/gradient-legend.js","webpack://muze/./packages/muze-legend/src/legend/step-legend.js","webpack://muze/./packages/muze/src/constants.js","webpack://muze/./packages/muze/src/operators.js","webpack://muze/./packages/muze/src/action-model.js","webpack://muze/./packages/muze/src/canvas/defaults.js","webpack://muze/./packages/muze/src/canvas/local-options.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/layoutComponent.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/dummy-component.js","webpack://muze/./packages/muze/src/defaults.js","webpack://muze/./packages/layout/src/tree-layout/constants/defaults.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/definitionModel.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/helper/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/tree/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/layout-model/index.js","webpack://muze/./packages/layout/src/enums/constants.js","webpack://muze/./packages/layout/src/tree-layout/utils/index.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-point.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-parser.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/helper.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/html-data.js","webpack://muze/./packages/layout/src/tree-layout/renderers/renderer.js","webpack://muze/./packages/layout/src/tree-layout/renderers/html-renderer.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/layout-def.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/index.js","webpack://muze/./packages/muze/src/canvas/helper.js","webpack://muze/./packages/muze/src/options.js","webpack://muze/./packages/layout/src/generic-layout/index.js","webpack://muze/./packages/layout/src/grid-layout/defaults.js","webpack://muze/./packages/layout/src/utils/index.js","webpack://muze/./packages/layout/src/visual-matrix/props.js","webpack://muze/./packages/layout/src/visual-matrix/default-config.js","webpack://muze/./packages/layout/src/visual-matrix/visual-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/row-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/column-matrix.js","webpack://muze/./packages/layout/src/grid-layout/computations.js","webpack://muze/./packages/layout/src/grid-layout/view-info-getter.js","webpack://muze/./packages/layout/src/grid-layout/layout.js","webpack://muze/./packages/layout/src/grid-layout/layout-helper.js","webpack://muze/./packages/layout/src/grid-layout/border-helper.js","webpack://muze/./packages/layout/src/grid-layout/span-maker.js","webpack://muze/./packages/muze/src/transaction-support.js","webpack://muze/./packages/muze/src/canvas/component-resolver.js","webpack://muze/./packages/visual-cell/src/enums/constants.js","webpack://muze/./packages/visual-cell/src/enums/cell-type.js","webpack://muze/./packages/visual-cell/src/simple-cell.js","webpack://muze/./packages/visual-cell/src/constants.js","webpack://muze/./packages/visual-cell/src/enums/defaults.js","webpack://muze/./packages/visual-cell/src/props.js","webpack://muze/./packages/visual-cell/src/axis-cell.js","webpack://muze/./packages/visual-cell/src/blank-cell.js","webpack://muze/./packages/visual-cell/src/text-cell.js","webpack://muze/./packages/visual-cell/src/geom-cell.js","webpack://muze/./packages/visual-cell/src/defaults.js","webpack://muze/./packages/visual-cell/src/cell-registry.js","webpack://muze/./packages/muze/src/canvas/title-maker.js","webpack://muze/./packages/muze/src/canvas/legend-maker.js","webpack://muze/./packages/muze/src/canvas/components/muze-chart-component.js","webpack://muze/./packages/muze/src/canvas/components/headerComponent.js","webpack://muze/./packages/muze/src/canvas/components/legendComponent.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/helper.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/props.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-component.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/horizontal-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/vertical-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/matrix-component.js","webpack://muze/./packages/muze/src/canvas/components/grid-component.js","webpack://muze/./packages/muze/src/enums/constants.js","webpack://muze/./packages/muze/src/canvas/components/message-component.js","webpack://muze/./packages/muze/src/canvas/component-wrapper-maker.js","webpack://muze/./packages/muze/src/canvas/scroll-manager.js","webpack://muze/./packages/muze/src/canvas/layout-maker.js","webpack://muze/./packages/muze/src/canvas/firebolt/group-firebolt.js","webpack://muze/./packages/muze/src/canvas/firebolt/index.js","webpack://muze/./packages/muze/src/canvas/app-state.js","webpack://muze/./packages/muze/src/canvas/canvas.js","webpack://muze/./packages/muze/src/default-registry.js","webpack://muze/./packages/muze/src/muze.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","_typeof2","__WEBPACK_AMD_DEFINE_ARRAY__","undefined","__WEBPACK_AMD_DEFINE_RESULT__","__WEBPACK_AMD_DEFINE_FACTORY__","apply","autoType","number","trim","NaN","isNaN","test","Date","__webpack_exports__","csvParse","csvParseRows","csvFormat","csvFormatBody","csvFormatRows","_dsv__WEBPACK_IMPORTED_MODULE_0__","csv","dsv","parse","parseRows","format","formatBody","formatRows","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","columns","Function","map","JSON","join","inferColumns","rows","columnSet","row","column","pad","width","length","Array","formatDate","date","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","milliseconds","getUTCMilliseconds","formatYear","year","delimiter","reFormat","RegExp","DELIMITER","text","f","N","I","eof","eol","token","j","preformatBody","formatValue","formatRow","convert","customConverter","concat","_csv__WEBPACK_IMPORTED_MODULE_1__","_tsv__WEBPACK_IMPORTED_MODULE_2__","_autoType__WEBPACK_IMPORTED_MODULE_3__","tsvParse","tsvParseRows","tsvFormat","tsvFormatBody","tsvFormatRows","tsv","PROPAGATION","ROW_ID","DM_DERIVATIVES","JOINS","LOGICAL_OPERATORS","_enums__WEBPACK_IMPORTED_MODULE_0__","SELECT","PROJECT","GROUPBY","COMPOSE","CAL_VAR","BIN","SORT","CROSS","LEFTOUTER","RIGHTOUTER","NATURAL","FULLOUTER","AND","OR","DataConverterStore","_classCallCheck","this","store","Map","converters","_getDefaultConverters","DSVStringConverter","DSVArrayConverter","JSONConverter","AutoDataConverter","_this","arguments","converter","set","type","DataConverter","has","converterStore","getStore","_possibleConstructorReturn","__proto__","getPrototypeOf","DataFormat","AUTO","data","schema","options","DSV_ARR","DSVArr","DSV_STR","DSVStr","_dsvStringConverter__WEBPACK_IMPORTED_MODULE_0__","_jsonConverter__WEBPACK_IMPORTED_MODULE_1__","_dsvArrayConverter__WEBPACK_IMPORTED_MODULE_2__","_autoConverter__WEBPACK_IMPORTED_MODULE_3__","FLAT_JSON","FlatJSON","_dataConverterStore__WEBPACK_IMPORTED_MODULE_0__","_model_dataConverter__WEBPACK_IMPORTED_MODULE_1__","_type","Error","_flat_json__WEBPACK_IMPORTED_MODULE_0__","_dsv_arr__WEBPACK_IMPORTED_MODULE_1__","_dsv_str__WEBPACK_IMPORTED_MODULE_2__","_utils__WEBPACK_IMPORTED_MODULE_3__","Auto","dataFormat","detectDataFormat","arr","schemaFields","unitSchema","firstRowHeader","push","columnMajor","headers","headerMap","reduce","acc","h","fields","field","schemaField","headIndex","d3_dsv__WEBPACK_IMPORTED_MODULE_0__","str","fieldSeparator","d3Dsv","_utils__WEBPACK_IMPORTED_MODULE_0__","header","insertionIndex","schemaFieldsName","item","DataModel","_ref","_len","args","_key","_onPropagation","Relation","order","formatter","withUid","getAllFields","sort","getPartialFieldspace","dataGenerated","_operator__WEBPACK_IMPORTED_MODULE_3__","_rowDiffset","_colIdentifier","columnWise","addUid","uids","fieldNames","e","fmtFieldIdx","next","idx","elem","fIdx","fmtFn","datum","datumIdx","rowDiffset","ids","diffSets","_set$split$map","Number","_set$split$map2","_slicedToArray","start","end","fill","_","fieldsArr","reducers","config","saveChild","groupByString","params","newDataModel","groupBy","persistDerivations","defaultReducer","reducerStore","sortingDetails","rawData","getData","dataInCSVArr","sortedDm","constructor","getFieldspace","colData","formattedData","rowsCount","serializedData","rowIdx","colIdx","fieldName","partialFieldspace","_partialFieldspace","cachedValueObjects","_cachedValueObjects","fieldIndex","findIndex","fieldinst","obj","Value","__calculateFieldspace","calculateFieldsConfig","dependency","_this2","sanitizeUnitSchema","replaceVar","fieldsConfig","getFieldsConfig","depVars","retrieveFn","depFieldIndices","fieldSpec","index","clone","fs","suppliedFields","cachedStore","cloneProvider","detachedRoot","computedValues","rowDiffsetIterator","fieldsData","_createFields","createFields","identifiers","addToNameSpace","propConfig","isMutableAction","propagationSourceId","sourceId","payload","rootModel","getRootDataModel","propagationNameSpace","_propagationNameSpace","rootModels","groupByModel","getRootGroupByModel","model","addToPropNamespace","propagateToAllDataModels","propagationSource","assign","propagateImmutableActions","eventName","callback","propModel","_this3","propListeners","fn","measureFieldName","binFieldName","measureField","fieldsObj","_createBinnedFieldDat","createBinnedFieldData","binnedData","bins","binField","_field_creator__WEBPACK_IMPORTED_MODULE_7__","FieldType","DIMENSION","subtype","DimensionSubtype","BINNED","serialize","getSchema","dimensionArr","reducerFn","defConfig","FilteringMode","NORMAL","splitWithSelect","uniqueFields","commonFields","fieldConfig","allFields","normalizedProjFieldSets","fieldSet","getNormalizedProFields","splitWithProject","InvalidAwareTypes","fieldRegistry","CATEGORICAL","TEMPORAL","MEASURE","INVERSE","ALL","GROUP_BY_FUNCTIONS","SUM","AVG","MIN","MAX","FIRST","LAST","COUNT","STD","_data_format__WEBPACK_IMPORTED_MODULE_0__","_dimension_subtype__WEBPACK_IMPORTED_MODULE_1__","_measure_subtype__WEBPACK_IMPORTED_MODULE_2__","_field_type__WEBPACK_IMPORTED_MODULE_3__","_filtering_mode__WEBPACK_IMPORTED_MODULE_4__","_group_by_functions__WEBPACK_IMPORTED_MODULE_5__","MeasureSubtype","CONTINUOUS","_datamodel__WEBPACK_IMPORTED_MODULE_0__","_operator__WEBPACK_IMPORTED_MODULE_1__","_stats__WEBPACK_IMPORTED_MODULE_2__","_enums__WEBPACK_IMPORTED_MODULE_3__","_converter__WEBPACK_IMPORTED_MODULE_4__","_utils__WEBPACK_IMPORTED_MODULE_5__","_constants__WEBPACK_IMPORTED_MODULE_6__","_invalid_aware_types__WEBPACK_IMPORTED_MODULE_7__","_package_json__WEBPACK_IMPORTED_MODULE_8__","_fields__WEBPACK_IMPORTED_MODULE_9__","Operators","compose","bin","select","project","calculateVariable","crossProduct","difference","naturalJoin","leftOuterJoin","rightOuterJoin","fullOuterJoin","union","version","pkg","Stats","DateTimeFormatter","FieldsUtility","createUnitFieldFromPartial","_fields__WEBPACK_IMPORTED_MODULE_1__","partialField","build","dataColumn","headersObj","createUnitField","_utils__WEBPACK_IMPORTED_MODULE_1__","fieldStore","createNamespace","fieldArr","dataId","getUniqueId","_cachedFieldsObj","forEach","getMeasure","measureFields","_cachedMeasure","getDimension","dimensionFields","_cachedDimension","Binned","Dimension","binsArr","BinnedParser","Categorical","hash","Set","domain","CategoricalParser","Continuous","Measure","min","POSITIVE_INFINITY","max","NEGATIVE_INFINITY","ContinuousParser","Field","_cachedDomain","calculateDataDomain","FieldTypeRegistry","_fieldType","dimension","registerDefaultFields","Temporal","description","displayName","_params","_context","_schema","_data","_partialField","PartialField","_dimension__WEBPACK_IMPORTED_MODULE_0__","_measure__WEBPACK_IMPORTED_MODULE_1__","_parsers_field_parser__WEBPACK_IMPORTED_MODULE_2__","_field_registry__WEBPACK_IMPORTED_MODULE_3__","_utils__WEBPACK_IMPORTED_MODULE_4__","unit","defAggFn","defaultReducerName","numberFormat","formatNumber","FieldParser","val","String","result","matched","parsedVal","parseFloat","TemporalParser","_dtf","nativeDate","getNativeDate","parser","_sanitize","_cachedMinDiff","sortedData","filter","a","b","arrLn","minDiff","prevDatum","nextDatum","processedCount","Math","parsedDatum","prepareJoinData","resp","formattedValue","rawValue","updateFields","_ref3","fieldStoreName","_ref4","colIdentifier","collID","partialFieldMap","newFields","coll","persistCurrentDerivation","operation","_model$_derivation","criteriaFn","_derivation","_toConsumableArray","op","meta","criteria","persistAncestorDerivation","sourceDm","newDm","_newDm$_ancestorDeriv","_ancestorDerivation","selectModeMap","_defineProperty","_selectModeMap","diffIndex","calcDiff","generateRowDiffset","lastInsertedValue","li","selectRowDiffsetIterator","checker","newRowDiffSet","rejRowDiffSet","_selectModeMap$mode$c","shouldSelect","shouldReject","checkerResult","rejectRowDiffset","rowSplitDiffsetIterator","fieldStoreObj","splitRowDiffset","dimensionMap","dimensionSet","keys","selectHelper","clonedDm","selectFn","iterator","selectorHelperFn","cloneWithAllFields","keyFn","rowId","internalValue","domainChecker","some","dom","boundsChecker","_boundsChecker","filterPropagationModel","propModels","fns","_config$filterByDim","filterByDim","_config$filterByMeasu","filterByMeasure","_config$clone","clonedModel","modelFieldsConfig","_ref5","_ref5$criteria","_criteria$identifiers","range","_identifiers","_identifiers$","_identifiers$2","values","indices","dLen","valuesMap","_loop","len","rangeKeys","hasData","present","getKey","every","isWithinDomain","fieldType","_selectHelper","clonedDMs","cloned","derivation","derivationFormula","addDiffsetToClonedDm","selectConfig","cloneWithSelect","cloneConfig","extraCloneDm","setOfRowDiffsets","cloneWithProject","projField","projectionSet","actualProjField","projFieldSet","projFields","extend2","validateUnitSchema","sanitizeAndValidateSchema","resolveFieldName","dataHeader","fieldNameAs","as","updateData","relation","defaultConfig","_converter$convert","_converter$convert2","nameSpace","valueObjects","rawFieldsData","formattedFieldsData","prepareSelectionData","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","done","_ref2","err","fieldInSchema","getDerivationArguments","applyExistingOperationOnModel","dataModel","selectionModel","getDerivations","derivations","_selectionModel","_getDerivationArgumen","find","_parent","getPathToRootModel","path","propagationInf","propagateToSource","addGroupedModel","_ref6","conf","crit","groupedModel","criterias","_ref7","actionCriterias","mutableActions","filteredCriteria","filterFn","entry","excludeModels","sourceActionCriterias","actionInf","actionConf","models","sourceIdentifiers","inf","propagationModel","filteredModel","getFilteredModel","reverse","propagateIdentifiers","propModelInf","nonTraversingModel","propagate","_children","children","child","matchingCriteria","immutableActions","action","filterImmutableAction","criteriaModel","sourceNamespace","normalizedProjField","from","getNumberFormattedVal","require","_value","_invalidAwareValsMap","invalid","NA","nil","NIL","null","NULL","generateBuckets","binSize","buckets","findBucketRange","bucketRanges","leftIdx","rightIdx","midIdx","binsCount","_measureField$domain","_measureField$domain2","dMin","dMax","dm","_len2","_key2","_len3","_key3","_len4","_key4","_len5","operations","_key5","currentDM","firstChild","_get_common_schema__WEBPACK_IMPORTED_MODULE_2__","_row_diffset_iterator__WEBPACK_IMPORTED_MODULE_3__","_constants__WEBPACK_IMPORTED_MODULE_4__","_helper__WEBPACK_IMPORTED_MODULE_5__","defaultFilterFn","dm1","dm2","replaceCommonSchema","jointype","applicableFilterFn","dm1FieldStore","dm2FieldStore","dm1FieldStoreName","dm2FieldStoreName","commonSchemaList","getCommonSchema","tmpSchema","rowAdded","rowPosition","ii","tuple","userArg","dm1Fields","dm2Fields","cloneProvider1","cloneProvider2","tupleObj","cellVal","iii","dataBuilder","retObj","reqSorting","tmpDataArr","colIArr","colName","insertInd","sortData","tmpData","_row_diffset_iterator__WEBPACK_IMPORTED_MODULE_2__","_utils_helper__WEBPACK_IMPORTED_MODULE_3__","hashTable","schemaNameArr","dm1FieldStoreFieldObj","dm2FieldStoreFieldObj","isArrEqual","prepareDataHelper","addData","hashData","schemaName","fs1","fs2","retArr","fs1Arr","getFilteredValues","sum","isArray","filteredNumber","curr","avg","totalSum","fnList","filteredValues","first","last","count","std","variance","mean","num","pow","_fnList","getFieldArr","dimensions","getReducerObj","measures","defReducer","measureName","existingDataModel","sFieldArr","reducerObj","dbName","measureArr","hashMap","rowCount","_bucket_creator__WEBPACK_IMPORTED_MODULE_0__","_compose__WEBPACK_IMPORTED_MODULE_1__","_pure_operators__WEBPACK_IMPORTED_MODULE_2__","_cross_product__WEBPACK_IMPORTED_MODULE_3__","_data_builder__WEBPACK_IMPORTED_MODULE_4__","_difference__WEBPACK_IMPORTED_MODULE_5__","_get_common_schema__WEBPACK_IMPORTED_MODULE_6__","_group_by_function__WEBPACK_IMPORTED_MODULE_7__","_group_by__WEBPACK_IMPORTED_MODULE_8__","_merge_sort__WEBPACK_IMPORTED_MODULE_9__","_natural_join_filter_function__WEBPACK_IMPORTED_MODULE_10__","_natural_join__WEBPACK_IMPORTED_MODULE_11__","_outer_join__WEBPACK_IMPORTED_MODULE_12__","_row_diffset_iterator__WEBPACK_IMPORTED_MODULE_13__","_union__WEBPACK_IMPORTED_MODULE_14__","defSortFn","a1","b1","mergeSort","sortFn","lo","hi","mid","merge","mainArr","auxArr","naturalJoinFilter","_get_common_schema__WEBPACK_IMPORTED_MODULE_0__","commonSchemaArr","retainTuple","_cross_product__WEBPACK_IMPORTED_MODULE_0__","_natural_join_filter_function__WEBPACK_IMPORTED_MODULE_1__","dataModel1","dataModel2","_constants__WEBPACK_IMPORTED_MODULE_1__","_union__WEBPACK_IMPORTED_MODULE_2__","rowDiffArr","diffStr","diffStsArr","resolveStrSortOrder","fDetails","strSortOrder","sortOrder","getSortFn","dataType","sortType","retFunc","groupData","groupedData","fieldVal","createSortingFnArg","groupedDatum","targetFields","targetFieldDetails","arg","label","applyStandardSort","sortMeta","isCallable","sortingFn","makeGroupMapAndSort","depColumns","targetCol","currRow","fVal","nMap","dataObj","sDetial","groupSortingIdx","standardSortingDetails","groupSortingDetails","applyGroupSort","detail","sortedGroupMap","nextMap","shift","pop","_export__WEBPACK_IMPORTED_MODULE_0__","source","_dataFormat","_fieldStoreName","_fieldspace","joinWith","unionWith","differenceWith","_helper__WEBPACK_IMPORTED_MODULE_2__","_fieldConfig","fieldObj","def","removeChild","sibling","splice","parent","sd","_operator_group_by_function__WEBPACK_IMPORTED_MODULE_0__","convertToNativeDate","dtParams","YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","defVal","isFinite","parseInt","nVal","toLowerCase","daysDef","short","long","monthsDef","H","extract","defaultNumberParser","toString","getHours","P","M","getMinutes","S","getSeconds","K","getMilliseconds","day","getDay","A","getDate","month","getMonth","B","y","presentDate","presentYear","getFullYear","Y","definitions","getTokenDefinitions","HOUR_12","AMPM_UPPERCASE","AMPM_LOWERCASE","SHORT_DAY","LONG_DAY","DAY_OF_MONTH","DAY_OF_MONTH_CONSTANT_WIDTH","SHORT_MONTH","LONG_MONTH","MONTH_OF_YEAR","SHORT_YEAR","LONG_YEAR","defaultResolver","targetParam","hourFormat24","hourFormat12","ampmLower","ampmUpper","amOrpm","isPM","tokenPrefix","TOKEN_PREFIX","tokenLiterals","occurrence","forwardChar","nDate","formattedStr","formattedVal","dateTimeStamp","tokenResolver","extractTokenValue","dtParamSeq","DATETIME_PARAM_SEQUENCE","noBreak","dtParamArr","resolverKey","resolverParams","resolverFn","param","resolvedVal","checkIfOnlyYear","tokenObj","lastOccurrenceIndex","occObj","occIndex","targetText","regexFormat","tokenArr","occurrenceLength","extractValues","match","OBJECTSTRING","objectToStrFn","objectToStr","arrayToStr","checkCyclicRef","parentArr","bIndex","obj1","obj2","skipUndef","_typeof","tgtArr","srcArr","srcVal","tgtVal","cRef","isObject","isString","uniqueValues","getTime","arr1","arr2","_date_time_formatter__WEBPACK_IMPORTED_MODULE_0__","_column_major__WEBPACK_IMPORTED_MODULE_1__","_domain_generator__WEBPACK_IMPORTED_MODULE_2__","_extend2__WEBPACK_IMPORTED_MODULE_3__","_helper__WEBPACK_IMPORTED_MODULE_4__","ReducerStore","reducer","__unregister","configurable","writable","_formattedValue","_internalValue","webpackPolyfill","deprecate","paths","_interopRequireDefault","default","_lib2","_containerManager2","slLib","init","doc","win","document","round","htmlSplCharSpace"," ","documentSupport","getDocumentSupport","SVG_BBOX_CORRECTION","isWebKit","SmartLabelManager","id","container","useEllipses","wrapper","prop","prevInstance","isBrowserLess","dispose","maxCacheLimit","maxDefaultCacheLimit","getElementById","createContainer","innerHTML","testStrAvg","isHeadLess","isIE","offsetHeight","offsetWidth","parentContainerStyle","style","parentContainer","_containerManager","_showNoEllipses","_init","setStyle","textToLines","smartlabel","lines","split","_calCharDimWithCache","calculateDifference","size","csArr","tw","twi","cachedStyle","asymmetricDifference","maxAdvancedCacheLimit","_container","cache","_advancedCache","advancedCacheKey","_advancedCacheKey","cacheName","fontSize","fontFamily","fontWeight","fontStyle","cacheInitName","repeat","height","_getWidthFn","contObj","_containerObj","svgText","bbox","textContent","getBBox","_styleNotSet","setLineHeight","sCont","node","context","_cache","charCache","_lineHeight","lineHeight","useEllipsesOnOverflow","getSmartText","maxWidth","maxHeight","noWrap","trimStr","tempArr","tmpText","maxWidthWithEll","toolText","oriWidth","oriHeight","newCharIndex","nearestChar","tempChar","getWidth","initialLeft","initialTop","getOriSizeImproveObj","spanArr","x","minWidth","chr","elemRightMostPoint","elemLowestPoint","lastBR","removeFromIndex","removeFromIndexForEllipses","hasHTMLTag","maxStrWidth","lastDash","lastSpace","lastIndexBroken","strWidth","strHeight","oriTextArr","ellipsesStr","ellipsesWidth","dotWidth","characterArr","dashIndex","spaceIndex","lastLineBreak","fastTrim","ws","replace","charAt","slice","smartLabel","oriTextWidth","oriTextHeight","oriText","isTruncated","xmlTagRegEx","ltgtRegex","getOriSize","substr","getNearestBreakIndex","detailObj","tooltext","lastIndexOf","spanAdditionRegx","spanAdditionReplacer","classNameWithTag","classNameWithTagBR","childRetriverFn","childRetriverString","noClassTesting","classNameReg","className","spaceIdx","dashIdx","offsetLeft","offsetTop","parentNode","insertBefore","createElement","classNameBrReg","spanRemovalRegx","error","detailedCalculationFlag","textArr","letter","lSize","cumulativeSize","indiSizeStore","lib","userAgent","navigator","ceil","floor","clsNameSpace","containerClass","brReplaceRegex","position","top","whiteSpace","padding","overflow","supportedStyle","font","font-family","font-weight","font-size","line-height","font-style","getElementsByClassName","opera","hasSVG","Boolean","SVGAngle","implementation","hasFeature","containerParent","body","appendChild","setAttribute","getElementsByTagName","sl","charLen","increment","avgWidth","styleObj","fSize","makeEntry","sCon","_set","set1","set2","filteredKeys","s1","s2","ForeignSet","isSimpleObject","reqAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","getTimeBasedId","__lastTime","__id","flat","res","scheduler","onFinishCallback","queue","animationFrame","listeners","tempQ","unique","fetch","namedNode","qualifiedName","seed","fetchAggregator","dependencies","getUpstreamNodes","list","rec","qname","placedIndex","preArr","postArr","outgoingEdges","resolver","accumulate","nodeDetails","identity","CustomResolver","utils_classCallCheck","dep","_dep","graph_node_classCallCheck","edges","_seed","requireResolve","retriever","history","electricEdges","_edges","retrieveDetails","edge","head","hist","TypeError","electric_node_classCallCheck","nextFrame","currentFrame","lstnrs","nodes","nFn","qualifiedNodeMap","graph_node","_wholeSet","_propagate","propagationOverride","currentFrameListeners","nextFrameListeners","_schedule","flushTarget","flush","mount","resolveReqList","objn","perv","addDependencies","_node","getDependencies","getResolvedList","resolve","props","fnSpec","eNode","electric_node","addEdges","addElectricNode","changedSet","upstreamNodes","upstreamNode","append","__execUniqueElectricEdges","cfLstnrs","nfLstnrs","toArray","repeatHead","resetPropagationOverride","qnames","_this4","update","resolved","resolveDependencyOrder","resolveMap","neighbour","isRoot","model_classCallCheck","_graph","graph","_lockFlag","_reqQ","mountPoint","_addPropInModel","calculationConfig","customResolver","varName","fetchFn","_customResolver","createNodesFrom","instantCall","_graph$stopPropagatio","propsArr","unsub","createElectricNodeOf","stopPropagation","setPropagationOverride","resetNodeValue","_graph$stopPropagatio2","setProp","getNodeValue","getNodeFromQualifiedName","Model","Muze","ContainerManager","maxContainers","svg","containers","rootNode","createElementNS","setAttributeNS","svgRoot","diff","containerObj","keyStr","prev","removeContainer","addContainer","avgCharWidth","display","cObj","ascending","bisector","compare","ascendingComparator","left","right","ascendingBisect","bisectRight","array","src_range","stop","step","e10","sqrt","e5","e2","src_ticks","ticks","tickIncrement","power","log","LN10","tickStep","step0","abs","step1","quantile","valueof","i0","value0","each","remove","clear","empty","src_nest","sortValues","rollup","nest","sortKeys","depth","createResult","setResult","keyValue","valuesByKey","createObject","setObject","createMap","setMap","sortKey","v","k","proto","add","implicit","ordinal","unknown","scale","copy","band","bandwidth","ordinalRange","paddingInner","paddingOuter","align","rescale","sequence","rangeRound","invertExtent","r0","r1","hiIndex","getClosestIndexOf","invert","side","highVal","d1","low","high","extend","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color","exec","Rgb","rgbn","rgba","hsla","g","rgbConvert","rgb","opacity","hex","Hsl","hsl","hslConvert","hsl2rgb","m1","m2","displayable","brighter","darker","deg2rad","PI","rad2deg","Xn","Yn","Zn","t0","t1","t2","t3","labConvert","Lab","Hcl","hcl2lab","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl","cos","sin","C","D","E","ED","EB","BC_DA","cubehelix","cubehelixConvert","Cubehelix","bl","basis","v0","v1","v2","v3","cosh","sinh","src_constant","linear","hue","constant","gamma","nogamma","exponential","src_rgb","rgbGamma","colorRgb","rgbSpline","spline","colors","rgbBasis","src_number","reA","reB","src_string","am","bm","bs","bi","lastIndex","q","one","zero","cssNode","cssRoot","cssView","svgNode","src_value","value_typeof","string","setTime","nb","na","valueOf","src_round","degrees","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","pxComma","pxParen","degParen","translate","xa","ya","xb","yb","interpolateTransformCss","parseCss","documentElement","defaultView","transform","getComputedStyle","getPropertyValue","interpolateTransformSvg","parseSvg","baseVal","consolidate","matrix","SQRT2","colorHsl","hslLong","colorHcl","cubehelixGamma","colorCubehelix","cubehelixLong","piecewise","interpolate","d3_scale_src_constant","d3_scale_src_number","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","polymap","bisect","target","clamp","continuous","output","input","interpolateValue","deinterpolateClamp","reinterpolateClamp","interpolateRound","formatDecimal","toExponential","indexOf","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","sign","symbol","comma","precision","prefixExponent","locale","formatPrefix","formatTrim","out","i1","formatRounded","exponent","formatTypes","%","toFixed","toPrecision","X","toUpperCase","src_identity","prefixes","src_locale","group","grouping","thousands","substring","formatGroup","currency","decimal","numerals","formatNumerals","percent","newFormat","prefix","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","charCodeAt","Infinity","defaultLocale","formatLocale","src_tickFormat","precisionPrefix","precisionRound","precisionFixed","linearish","tickFormat","nice","interval","x0","x1","pow10","powp","base","exp","logp","log10","log2","reflect","logs","pows","u","raise","thresholds","threshold","quantiles","quantize","newInterval","floori","offseti","offset","previous","millisecond","durationMinute","durationWeek","second","minute","hour","setHours","setDate","getTimezoneOffset","weekday","sunday","monday","tuesday","wednesday","thursday","friday","saturday","setMonth","setFullYear","utcMinute","setUTCSeconds","utcHour","setUTCMinutes","utcDay","setUTCHours","setUTCDate","getUTCDate","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcYear","setUTCFullYear","localDate","L","utcDate","UTC","newYear","timeFormat","utcFormat","utcParse","pads","-","0","numberRe","percentRe","requoteRe","requote","formatRe","names","formatLookup","parseWeekdayNumberSunday","w","parseWeekdayNumberMonday","parseWeekNumberSunday","U","parseWeekNumberISO","V","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","timeDay","timeYear","formatMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","timeSunday","formatWeekNumberISO","timeThursday","formatWeekdayNumberSunday","formatWeekNumberMonday","timeMonday","formatFullYear","formatZone","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatShortWeekday","formatWeekday","formatShortMonth","formatMonth","formatPeriod","utcFormats","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCPeriod","parses","parseShortWeekday","parseWeekday","parseShortMonth","parseMonth","parseLocaleDateTime","parseSpecifier","parsePeriod","parseLocaleDate","parseLocaleTime","newParse","newDate","week","toISOString","durationSecond","durationHour","durationDay","durationMonth","durationYear","calendar","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickIntervals","tickInterval","src_time","timeMonth","timeWeek","timeHour","timeMinute","timeSecond","timeMillisecond","src_colors","interpolateCubehelixLong","ramp","sequential","interpolator","d3_scale_chromatic_src_colors","src_ramp","scheme","interpolateRgbBasis","warm","cool","sequential_multi_rainbow","ts","magma","inferno","plasma","UNIT_GLOBAL_NAMESPACE","UNIT_LOCAL_NAMESPACE","LAYER_LOCAL_NAMESPACE","LAYER_GLOBAL_NAMESPACE","GROUP_GLOBAL_NAMESPACE","GROUP_LOCAL_NAMESPACE","CANVAS_LOCAL_NAMESPACE","CANVAS_GLOBAL_NAMESPACE","ReservedFields","CommonProps","ACTION_INF","ON_LAYER_DRAW","MATRIX_CREATED","COORD_TYPES","POLAR","CARTESIAN","DATA_TYPE","d3_axis_src_identity","bottom","epsilon","entering","__axis","axis","orient","tickArguments","tickValues","tickTransform","tickSizeInner","tickSizeOuter","tickPadding","spacing","range0","range1","center","selection","selectAll","tick","tickExit","exit","tickEnter","enter","attr","line","insert","transition","getAttribute","tickSize","pi","tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","ccw","dx","dy","cw","da","rect","d3_shape_src_constant","halfPi","asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","x00","y00","d2","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","areaStart","_line","areaEnd","lineStart","_point","lineEnd","point","curve_linear","src_line","pointX","pointY","defined","curve","curveLinear","buffer","defined0","src_area","area","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","src_descending","d3_shape_src_identity","curveRadial","Radial","_curve","radial","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","kr","kx","ky","star","square","sqrt3","triangle","wye","noop","that","Basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","BasisOpen","Bundle","beta","_basis","_beta","_x","_y","custom","bundle","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","CardinalOpen","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","CatmullRomOpen","LinearClosed","slope3","h0","h1","s0","slope2","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","_t0","px","py","Step","_t","curve_step","stepBefore","stepAfter","none","series","order_none","stackValue","order_ascending","sums","cubicInOut","polyIn","polyOut","polyInOut","b2","b3","b4","b5","b6","b7","b8","b9","b0","bounceOut","backIn","overshoot","backOut","backInOut","elasticOut","elasticIn","amplitude","period","d3_voronoi_src_constant","elasticInOut","RedBlackTree","RedBlackNode","R","RedBlackRotateLeft","tree","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","createEdge","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","ax","ay","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","attachCircle","lArc","rArc","lSite","cSite","rSite","bx","by","epsilon2","ha","hc","circle","Circle","before","circles","detachCircle","beachPool","createBeach","beach","Beach","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","sortCellHalfedges","clipEdges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","cover","dc","v00","v01","v11","v10","polygons","polygon","triangles","e1","links","radius","_found","vx","vy","src_voronoi","voronoi","Selection","idGetter","_dataObjects","_updateData","_enterData","_exitData","_idGetter","newData","entryData","exitdata","tempMap","duplicateData","updatedData","newSelection","dataObjects","defaultValue","_mode","mergedObjects","mergedData","newdata","sortSel","sortSelection","kA","kB","objects","dataSelect","idFn","STRING","FUNCTION","HTMLElement","common_utils_typeof","random","checkExistence","nonExistentKeys","sanitizeIP","typeObj","htmlElem","getMax","common_utils_toConsumableArray","getMin","getDomainFromData","domArr","_fields","field0","field1","arr0","firstMin","secondMin","firstMax","secondMax","sanitizeDomainWhenEqual","unionDomain","domains","symbolFns","symbolCircle","cross","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolWye","symbolTriangle","easeFns","cubic","easeCubic","bounce","easeBounce","elastic","easeElastic","back","easeBack","poly","easePoly","circleInOut","getExtremePoint","points","compareValue","minOrMax","extremePoint","minOrMaxVal","getMinPoint","getMaxPoint","getNearestValue","filterData","getWindow","cancelAnimFrame","cancelAnimationFrame","capitalizeFirst","txt","getMinDiff","uniqueVals","getQualifiedClassName","cls","getDependencyOrder","dependencyOrder","visited","visit","objectIterator","Voronoi","common_utils_classCallCheck","_voronoi","_voronoiFn","getObjProp","intSanitizer","generateGetterSetters","propInfo","_propInfo$","sanitization","preset","onset","typeChecker","getArraySum","total","arraysEqual","isEqual","oldVal","newVal","is","enableChainedTransaction","transactionModel","transactionEndpoint","transactionItems","registerImmediateListener","isHTMLElem","ERROR_MSG","INTERFACE_IMPL","mergeRecursive","sink","createSelection","sel","appendObj","mergedSelection","exitSelection","getObjects","inst","interpolateArray","fitCount","linearInterpolate","atPoint","springFactor","tmp","angleToRadian","angle","replaceCSSPrefix","numberInterpolator","interpolateNumber","colorInterpolator","interpolateRgb","hslInterpolator","interpolateHslLong","transformColors","piecewiseInterpolator","hue2rgb","hslToRgb","rgbToHsv","hsvToRgb","hexToHsv","hslaToRgb","_hslToRgb2","RGBAtoRGB","r2","g2","r3","g3","detectColor","col","assembleModelFromIdentifiers","fieldMap","_loop2","temp","cIdx","getDataModelFromRange","hasBarLayer","selFields","selFn","fieldValue","isFieldSelected","getDataModelFromIdentifiers","filteredDataModel","dataArr","filteredSchema","include","propField","registerListeners","listenerMap","propListenerMap","namespace","mapObj","propType","listenerFn","listener","isValidValue","escapeHTML","htmlEscapes","&","<",">","\"","'","/","transposeArray","extendsClass","extendsFrom","found","concatModels","dataObj1","dataObj2","data1","data2","schema1","schema2","tuples1","tuples2","commonTuples","_loop3","row1","row2","dim1Values","dim2Values","dm1Key","dm2Key","commonSchema","getSymbol","stackOrders","_stackOrders","stackOrderNone","stackOrderAscending","stackOffsets","_stackOffsets","yp","yn","stackOffsetNone","si","sij0","s3","sk","stack","orderNone","offsetNone","oz","kz","sz","sij","ki","d3Stack","nestCollection","nestFn","getArrayDiff","el","pathInterpolators","curveStepAfter","curveStepBefore","curveStep","curveCatmullRom","Symbols","axisLeft","axisRight","axisTop","axisBottom","pie","descending","arcs","pa","cornerRadius","padRadius","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","p0","p1","oc","intersect","x3","y3","x32","y32","kc","lc","centroid","Scales","scaleBand","getSmallestDiff","timeFormats","timeDurations","formatTemporal","nearestInterval","getNearestInterval","formatAs","temporalFields","filteredFields","lookupWhat","lookupDetails","resolvable","lookupTarget","depArr","deps","nextAnimFrame","getValueParser","retrieveNearestGroupByReducers","measureFieldNames","filteredReducers","getAncestorDerivations","nearestReducers","derv","retrieveFieldDisplayName","nearestSortingDetails","nearestSortDerivation","sortOrderMap","_sortOrderMap","firstVal","secondVal","localeCompare","sortCategoricalField","sortOrderType","_accessors","fn1","fn2","partition","mix","superclass","with","_with","mixins","mixin","componentRegistry","comps","reg","regObj","register","customKey","formalName","xhtml","src_namespaces","xlink","xml","xmlns","src_namespace","namespaces","space","local","creator","fullname","creatorFixed","ownerDocument","creatorInherit","uri","namespaceURI","src_selector","selector","querySelector","selectorAll","querySelectorAll","matcher","matches","sparse","EnterNode","_next","__data__","keyPrefix","bindIndex","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","src_window","styleValue","classArray","classList","ClassList","_names","classedAdd","classedRemove","contains","textRemove","htmlRemove","nextSibling","lower","previousSibling","constantNull","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","event","mouseenter","mouseleave","filterContextListener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","typename","on","__on","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","sourceEvent","dispatchEvent","CustomEvent","createEvent","initEvent","bubbles","cancelable","groups","parents","_groups","_parents","subgroups","subnode","subgroup","enterGroup","updateGroup","_enter","_exit","onenter","onupdate","onexit","groups0","groups1","m0","merges","group0","group1","compareNode","sortgroups","sortgroup","getAttributeNS","attrRemoveNS","removeAttributeNS","attrRemove","removeAttribute","attrFunctionNS","attrFunction","attrConstantNS","attrConstant","priority","styleRemove","removeProperty","styleFunction","setProperty","styleConstant","propertyRemove","propertyFunction","propertyConstant","classed","classedFunction","classedTrue","classedFalse","textFunction","textConstant","html","htmlFunction","htmlConstant","deep","typenames","parseTypenames","dispatch","dispatchFunction","dispatchConstant","src_select","nextId","Local","current","src_point","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","mouse","changedTouches","src_touch","touches","identifier","touch","Dispatch","T","types","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","__noselect","MozUserSelect","d3_drag_src_constant","DragEvent","subject","active","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","src_drag","mousedownx","mousedowny","mousemoving","touchending","touchable","gestures","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","yesdrag","noclick","clearTimeout","sublisteners","clickDistance","taskHead","taskTail","frame","timeout","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","timer_typeof","now","setFrame","clearNow","Timer","_call","_time","timer","delay","restart","wake","timerFlush","nap","sleep","poke","clearInterval","setInterval","src_timeout","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","duration","ease","schedule","tweenValue","_id","transition_interpolate","interpolateString","Transition","_name","newId","selection_prototype","inherit","id0","id1","onFunction","on0","on1","sit","attrTween","string00","string10","interpolate0","string0","string1","value1","attrTweenNS","attrInterpolateNS","attrInterpolate","styleTween","styleNull","styleMaybeRemove","listener0","styleInterpolate","removeFunction","tweenRemove","tween0","tween1","tweenFunction","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","Promise","reject","cancel","interrupt","defaultTiming","easeCubicInOut","selectElement","element","makeElement","elemType","callbacks","SVGElement","selectorVal","selectorType","actualSelector","enterSel","mergeSel","exitSel","applyStyle","appendElement","element1","element2","setElementAttrs","attrs","setAttrs","addClass","removeClass","setStyles","styles","createElements","clipElement","measurement","clipPathElement","getMousePos","boundingClientRect","getClientPoint","pos","clientPoint","tag","getEvent","d3event","getD3Drag","d3drag","getSmartComputedStyle","css","textEl","mandatoryStyle","fill-opacity","renderer_utils_typeof","computedStyle","styleForSmartLabel","hasTouch","initProp","fetchPropValues","propNames","setContexts","contexts","propObj","contextMap","depProps","registerListener","propList","callBack","_options$","namespaceInf","callbackFn","namespaceVal","commits","_savedCommits","_propListenerMap","listenersObj","_registeredListeners","_contextMap","contextsObj","commitsObj","subNamespaces","propDeps","nm","fnInf","store_toConsumableArray","registerPropInMaps","registeredListeners","subNamespace","allProps","_fnCount","addListenerToNamespace","_listeners","namespaceListeners","listenerTypes","removePropValue","propInf","sns","Store","store_classCallCheck","_commits","_queuedProps","_locked","store_createClass","lockModel","lock","unlockModel","unlock","lockCommits","locked","unlockCommits","queuedProps","store_slicedToArray","propName","_params2","commit","addSubNamespace","propFns","nsObj","retrieveNamespaces","disableListener","sanitizedVal","savedCommits","disabled","registerChangeListener","computed","calculatedProp","_this$model","unsubscribeAll","unsubscribe","listenersMap","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","removeSubNamespace","snsMap","transactor","holder","stateProps","nameSpaceProp","nsProp","_ref$takesMultiplePar","takesMultipleParams","prevVal","typeCheck","typeExpected","oldValues","events","EVENT_LIST","composition","resolveFn","notification","hasOwn","LifeCycleManager","lifecycle_manager_classCallCheck","_eventList","_promises","_notifiers","_lifeCycles","_unreleasedLifeCycles","_boot","_preparePromises","promise","_makeNotifierPromise","createPromise","then","prm","client","_releasePromisesFromCache","_notify","stage","_resolvePromise","retrieve","_callLifeCycleCallback","_cachePromise","_resetTargetPromise","lifeCycles","CLASSPREFIX","STACK","GROUP","IDENTITY","ANGLE","RADIUS","SIZE","COLOR","SHAPE","TEXT","OUTER_RADIUS_VALUE","TEXT_ANCHOR_MIDDLE","ENCODING","X0","Y0","RADIUS0","ANGLE0","STROKE_DASHARRAY","ASCENDING","AGG_FN_SUM","AREA_LAYER","ARC_LAYER","LINE_LAYER","TEXT_LAYER","POINT_LAYER","BAR_LAYER","TICK_LAYER","SIMPLE_LAYER","BASE_LAYER","SimpleLayer","DATA","CONFIG","MEASUREMENT","DOMAIN","MOUNT","props_defineProperty","_props","axes","metaInf","valueParser","coord","PROPS","_customConfig","newConf","defaultPolicy","BOTTOM","TOP","LEFT","RIGHT","axisOrientationMap","axis_orientation_defineProperty","_axisOrientationMap","AxisOrientation","LINEAR","BAND","TIME","ORDINAL","QUANTIZE","QUANTILE","LOG","POW","SEQUENTIAL","THRESHOLD","CONTINOUS","DISCRETE","HIDDEN","DEFAULT_ANGLE_DOMAIN","scaleLinear","scales","scaleThreshold","scaleLog","scalePow","scaleIdentity","scaleOrdinal","scaleSequential","scaleQuantize","scaleQuantile","scaleTime","scaleMap","scale_creator_defineProperty","_scaleMap","ScaleType","createScale","scaleFactory","adjustRange","axisName","defClassName","axisNamePadding","classPrefix","fixedBaseline","labels","rotation","smartTicks","orientation","numberOfTicks","show","showAxisName","showInnerTicks","showOuterTicks","xOffset","yOffset","changeTickOrientation","selectContainer","axisInstance","_smartTicks","renderConfig","labelManager","isSmartTicks","tickText","registerAnimationDoneHook","rotateAxis","instance","getTickSize","yShift","xShift","tickLabelDim","quadrant","rotationNormalizer","setFixedBaseline","setAxisNamePos","textNode","axisNameHeight","availableSpace","longestWord","quarter","halfYearly","mintues","getTickIntervalFnBasedOnNumberOfTicks","possibleTickLevelIndex","maxPossibleTicks","tickIntervalLevelInfo","tickIntervalInfo","numOfPossibleTicks","getActualTickInterval","noOfTicks","minWidthBetweenTicks","_minTickDistance","getTickIntervalBasedOnCurrentLevel","_dependencies","longestWordType","applyTickSkipping","minTickDistance","minTickSpace","_minTickSpace","minTickWidth","maxTicks","getSkippedTicks","actualNumberOfTicks","_minDiff","millisecondInterval","numOfTicksAccordingToMinDiff","adjustHorizontalRange","adjustVerticalRange","rangeAdjustmentMap","space_setter_defineProperty","_rangeAdjustmentMap","setAxisRange","rangeBounds","getAdjustedRange","getAxisOffset","timeDiff","avWidth","bars","spaceSetter","spaceConfig","heightForTicks","_context$availableSpa2","availWidth","availHeight","isOffset","_context$renderConfig2","_context$getAxisDimen","getAxisDimensions","tickDimensions","allTickDimensions","axisNameDimensions","tickDimHeight","tickDimWidth","namePadding","labelConfig","minTickHeight","getTickValues","tickShifter","maxTickSpaces","widthForTicks","totalTickWidth","getRotatedSpaces","rotatedHeight","rotatedWidth","setOffset","logicalSpace","getAxisComponentDimensions","axisTicks","largestTick","largestTickDimensions","smartTick","_context$renderConfig","labelFunc","_tickLabelStyle","originalLabel","getFormattedText","_axisNameStyle","getHorizontalAxisSpace","axisDimensions","_context$config2","axisDimHeight","minTickDiff","getMinTickDifference","helper_toConsumableArray","getVerticalAxisSpace","_context$config3","calculateBandSpace","largestDimHeight","_getHorizontalAxisSpa","_getVerticalAxisSpace","getValidDomain","userDom","setContinousAxisDomain","_domain","axisComponentDimensions","oldConfig","_config","mockedOldConfig","shouldAxesScaleUpdate","hasAxesConfigChanged","properties","tickFormatter","sanitizeTickFormatter","_scale","_axis","createAxis","_tickFormatter","resetRenderConfig","_renderConfig","_maxTickSpaces","SimpleAxis","simple_axis_classCallCheck","_mount","_range","_domainLock","_axisDimensions","defCon","simpleConfig","bodyElem","dist","_animationDonePromises","domainValue","setAxisComponentDimensions","smartAxisName","axisClass","_objectSpread","setTickConfig","setSmartAxisName","_this$config2","dimType","widthDim","getSmartAxisName","oriSize","domainVal","computeAxisDimensions","_getAxisComponentDime","labelHeight","labelWidth","calculateContinousSpace","_context$renderConfig6","axisNameWidth","_getHorizontalAxisSpa2","_getVerticalAxisSpace2","renderAxis","tickLabelStyle","axisTickFormatter","labelProps","labelOffset","all","LinearInterpolator","LogInterpolator","PowInterpolator","interpolatorMap","continous_axis_defineProperty","_interpolatorMap","ContinousAxis","continous_axis_classCallCheck","_getPrototypeOf","InterpolatorCls","_interpolator","getScaleValue","_this$renderConfig","sanitizeDomain","_get2","_get","_this$renderConfig2","newTickValues","tickSpace","getNumberOfTicks","labelDim","numberOfValues","tickLength","_this$smartTicks$","BandAxis","_this$maxTickSpaces","_getRotatedSpaces","paddingNormalized","formatTickValue","TimeAxis","_getPrototypeOf2","time_axis_classCallCheck","time_axis_possibleConstructorReturn","time_axis_getPrototypeOf","time_axis_get","rawTicks","resetTickInterval","_context$config8","_context$availableSpa","adjustedRange","x11Colors","Pink","LightPink","HotPink","DeepPink","PaleVioletRed","MediumVioletRed","LightSalmon","Salmon","DarkSalmon","LightCoral","IndianRed","Crimson","FireBrick","DarkRed","Red","OrangeRed","Tomato","Coral","DarkOrange","Orange","Gold","Yellow","LightYellow","LemonChiffon","LightGoldenrodYellow","PapayaWhip","Moccasin","PeachPuff","PaleGoldenrod","Khaki","DarkKhaki","Cornsilk","BlanchedAlmond","Bisque","NavajoWhite","Wheat","BurlyWood","Tan","RosyBrown","SandyBrown","Goldenrod","DarkGoldenrod","Peru","Chocolate","SaddleBrown","Sienna","Brown","Maroon","DarkOliveGreen","Olive","OliveDrab","YellowGreen","LimeGreen","Lime","LawnGreen","Chartreuse","GreenYellow","SpringGreen","MediumSpringGreen","LightGreen","PaleGreen","DarkSeaGreen","MediumSeaGreen","SeaGreen","ForestGreen","Green","DarkGreen","MediumAquamarine","Aqua","Cyan","LightCyan","PaleTurquoise","Aquamarine","Turquoise","MediumTurquoise","DarkTurquoise","LightSeaGreen","CadetBlue","DarkCyan","Teal","LightSteelBlue","PowderBlue","LightBlue","SkyBlue","LightSkyBlue","DeepSkyBlue","DodgerBlue","CornflowerBlue","SteelBlue","RoyalBlue","Blue","MediumBlue","DarkBlue","Navy","MidnightBlue","Lavender","Thistle","Plum","Violet","Orchid","Fuchsia","Magenta","MediumOrchid","MediumPurple","BlueViolet","DarkViolet","DarkOrchid","DarkMagenta","Purple","Indigo","DarkSlateBlue","SlateBlue","MediumSlateBlue","White","Snow","Honeydew","MintCream","Azure","AliceBlue","GhostWhite","WhiteSmoke","Seashell","Beige","OldLace","FloralWhite","Ivory","AntiqueWhite","Linen","LavenderBlush","MistyRose","Gainsboro","LightGray","Silver","DarkGrey","Grey","DimGrey","LightSlateGrey","SlateGrey","DarkSlateGrey","Black","palette","DEFAULT_GRADIENT_COLOR","DEFAULT_CONFIG","stops","getHslString","hslArr","convertToXllString","baseString","getActualHslColor","paletteColor","props_toConsumableArray","newConfig","treatNullMeasures","scaledVal","minDomainScaledVal","resolveAxisConfig","propVal","defaultVal","sanitiseConfigIntervals","intervals","getStops","newStops","color_strategy_toConsumableArray","indexedDomain","scaleDomain","indexedDomainMeasure","normalDomain","steppedDomain","_getStops","rangeStops","newStopsLength","newRange","continousSteppedDomain","_getStops2","uniqueRange","indexedRange","numVal","normalRange","strategyGetter","domainType","rangeType","schemeType","strategies","color_strategy_defineProperty","domainRange","ColorAxis","color_axis_classCallCheck","_domainType","_rangeType","_schemeType","getSchemeType","_colorStrategy","setColorStrategy","updateDomain","colorStrategy","getScheme","colorSchemes","hslColorArray","getRawColor","color_axis_toConsumableArray","scaleInfo","domainRangeFn","transformationArr","newH","newS","newL","newA","size_strategy_defineProperty","_strategies","pieceWiseRange","size_strategy_toConsumableArray","newIntervals","discreteRange","_userRange","SizeAxis","size_axis_classCallCheck","_sizeStrategy","setStrategy","strategy","domainInfo","domainFn","generator","ShapeAxis","shape_axis_classCallCheck","_generatedShapes","shapeType","shapeGenerator","generatorFn","generatedShapes","createAngleValues","angleData","_angleFn","_angleValues","AngleAxis","angle_axis_classCallCheck","customDomain","customRange","_this$_range","angle_axis_slicedToArray","WIDTH","HEIGHT","MIN_UNIT_WIDTH","MIN_UNIT_HEIGHT","DIMENSIONS","MEASURES","PIVOT","FORMAT","HAS_DATA_UPDATED","ROWS","COLUMNS","COL","ROW","COLUMN","DETAIL","LAYERS","TRANSFORM","RETINAL","CELL","X_AXES","Y_AXES","ENTRY_CELLS","INITIALIZED","EXIT_CELLS","AXIS","UNIT","UPDATED","BEFORE_UPDATE","VALUE_MATRIX","FACET_HEADERS","ARC","BAR","LINE","POINT","PRIMARY","SECONDARY","BOTH","INTERACTION","GRID_LINES","GRID_BANDS","HEADER","FACET","DESCENDING","adjustDomain","minOuterRadius","RadiusAxis","radius_axis_classCallCheck","_radiusFactor","sanitizedRange","rangeVal","DATA_TYPES","group_transform","data_type_scale_map_defineProperty","_dataTypeScaleMap","groupByIndices","isInvalid","getInvalidType","identityTransform","transformMap","transform_factory_defineProperty","_transformMap","uniqueField","valueField","normalizedData","normalizeData","uniqueFieldIndex","valueFieldIndex","seriesKeyIndex","seriesKeys","tuples","rowObj","_tuple","seriesKey","newArr","orderBy","orderIndex","groupByIndex","stackData","seriesData","transformFactory","transformColor","colorAxis","styleType","intensity","stateColor","originalColor","colorInfo","applyInteractionStyle","selectionSet","interactionStyles","elements","getPlotElementsFromSet","interactionType","pathMountPoint","applySpecificStyle","_d$meta","colorTransform","_transformColor$hsla","helpers_slicedToArray","_transformColor$hsla2","retrieveEncodingInf","encoding","encodingNames","encodingInf","encodingFieldInfRetriever","helpers_defineProperty","_encodingFieldInfRetr","transformData","transformType","encodingFieldInf","xField","yField","xFieldType","yFieldType","getIndividualClassName","individualClassName","classNameStr","dataNormalizers","_dataNormalizers","transformedData","radiusFieldIndex","angleFieldIndex","radius0FieldIndex","angle0FieldIndex","fieldsLen","pointObj","radius0","angle0","enc","xFieldIndex","yFieldIndex","x0FieldIndex","y0FieldIndex","getNormalizedData","transformedDataArr","encodingFieldsInf","domainCalculator","_domainCalculator","layerInst","angleValues","radius0Field","xFieldSubType","yFieldSubType","x0Field","y0Field","yEnc","xEnc","attachDataToVoronoi","helpers_toConsumableArray","updateStyle","animateGroup","groupTransition","groupAnimateStyle","effect","positionPoints","positioner","encodingTransform","getGroupSpan","getUnitWidth","getPlotMeasurement","dimensionalValues","fieldInfo","bandScale","_bandScale","span","groupSpan","offsetValues","actualGroupWidth","dataProps","timeDiffs","innerPadding","isAxisBandScale","axisPadding","groupPadding","renderLayer","render","throwback","parentNamespace","resolveInvalidTransformType","transformResolverPredicates","groupByField","dimensionField","getValidTransform","getValidTransformForAggFn","resolvedInvalidTransformType","_context$encodingFiel","isCustomTransformTypeProvided","getMarkId","resolveEncodingValues","transformedValues","getColorMetaInf","colorInf","auxStyles","getHslArray","originalStrokeOnSelect","stroke","stroke-width","strokeWidth","originalStrokeOnHighlight","highlight","stateStrokeOnSelect","stateStrokeOnHighlight","getCoordValue","trig","coordValueGetter","toCartesianCoordinates","rangePlot","_point$update","_coordValueGetter","axisArr","localOptions","local_options_defineProperty","STATE_NAMESPACES","listener_map_slicedToArray","prevData","dataDidSet","layerNs","groupNs","BaseLayerMixin","_superclass","_class","base_mixin_classCallCheck","base_mixin_possibleConstructorReturn","base_mixin_getPrototypeOf","base_mixin_assertThisInitialized","getterSetters","alias","_points","_cachedData","_measurement","_graphicElems","base_mixin_inherits","base_mixin_createClass","_store","_this$metaInf2","_alias","enableCaching","_cacheEnabled","clearCaching","getTransformedData","calculateDomainFromData","isEmpty","getDataDomain","encodingType","_this$metaInf3","getUidsFromPayload","targetData","payloadMap","currentSetIds","getUids","uid","getNearestPoint","interaction","resolveTransformType","_transformType","_this$metaInf4","unitDom","cachePoint","pointMap","_pointMap","getInteractionStyles","interactionFn","getIdentifiersFromData","_this$encodingFieldsI","_map2","base_mixin_slicedToArray","xMeasure","yMeasure","xMeasureIndex","yMeasureIndex","hasPlotSpan","getPlotSpan","getPlotPadding","getPointsFromIdentifiers","getAllAttrs","filteredPoints","base_mixin_toConsumableArray","sizeVal","getTransformedDataFromIdentifiers","measureIndex","_identifiers$getData","identifierData","identifierSchema","_normalizedData","_this$encodingFieldsI2","tupleArr","transformedVal","graphicElems","elems","animationDone","encodingValue","retrieveEncodingFields","_transformedData","calculateDomain","getState","getListeners","getRenderProps","_context$metaInf","unitRowIndex","unitColIndex","base_mixin_defineProperty","getQualifiedStateProps","_construct","userConf","shouldDrawAnchors","BaseLayer","containsNull","getborderIndexes","indexes","prevOfNull","nextOfNull","settIndexPrevOrNext","indexesObj","prevContainsNull","nextContainsNull","getELementsForLine","layer","strokeStyle","linepath","updateFns","drawLine","connectNullData","containerSelection","nullDataLineStyle","nullDataLineClass","curveInterpolatorFn","dd","elementWithNullData","sanitizeNullConfig","makeStartEndPair","borderIndexes","pairArray","pair","prevValue","nextValue","focus","focusStroke","crossline","nearestPointThreshold","strokeOpacity","interactionStyleMap","LineLayerMixin","line_mixin_classCallCheck","line_mixin_possibleConstructorReturn","line_mixin_getPrototypeOf","line_mixin_inherits","line_mixin_createClass","getDrawFn","translatePoints","xAxis","yAxis","isXDim","isYDim","xPx","yPx","getColor","resolvedEncodings","getTranslatedData","colorValFn","colorFieldIndex","colorVal","getPathStyle","qualifiedClassName","colorField","translatedPoints","stroke-opacity","seriesClassName","searchRadius","_point$data$data","layerId","line_mixin_get","drawArea","easeEffect","renderer_slicedToArray","enterAreaPath","updateAreaPath","selectionEnter","AreaLayerMixin","area_mixin_classCallCheck","area_mixin_possibleConstructorReturn","area_mixin_getPrototypeOf","area_mixin_inherits","area_mixin_createClass","area_mixin_get","classNameFn","minYVal","basePos","y0Px","invalidY","invalidY0","resolvedValues","AreaLayer","fade","stroke-linejoin","shape","states","fadeout","selected","ArcLayerMixin","arc_mixin_classCallCheck","arc_mixin_possibleConstructorReturn","arc_mixin_getPrototypeOf","_prevPieData","arc_mixin_inherits","arc_mixin_createClass","getDataFromEvent","dataPoint","_this$axes","radiusAxis","pieIndex","angleV","angles","_angles","getOuterRadius","getInnerRadius","startAngle0","endAngle0","_previousInfo","getPreviousPoint","currIndex","prevArc","nextArc","_context$axes$angle$r2","arc_helper_slicedToArray","_this$config","qualClassName","_arcFn","consecutiveExits","exitCounter","tweenPie","individualClass","tweenExit","exitArr","oldExitCounter","tweenExitPie","consecutiveExitArr","gElem","pieSlices","pieSliceInf","tData","ArcLayer","LineLayer","drawText","selectionMerge","backgroundVal","textanchor","textStyle","background","backgroundPadding","_smartLabel$getOriSiz","backgroundEl","alignment-baseline","defaultEncoding","alignmentBaseLine","defRotation","pointTranslators","polar","textEncoding","angleAxis","textFormatter","backgroundEncoding","backgroundValue","cartesian","textField","textFieldIndex","textValue","text_mixin_slicedToArray","TextLayerMixin","text_mixin_classCallCheck","text_mixin_possibleConstructorReturn","text_mixin_getPrototypeOf","text_mixin_inherits","text_mixin_createClass","getPointTranslator","text-anchor","TextLayer","drawSymbols","createShape","groupElement","Element","newShape","nodeName","src","href","shapeElement","pathStr","checkPath","exitGroup","defColorStyle","fillOpacity","anchors","persistent-anchors","shapes","sizes","prepareDrawingInf","shapeAxis","sizeAxis","getShape","getSize","layerEncoding","helper_defineProperty","_config$offset","offsetX","offsetY","helper_slicedToArray","measure","getStrokeWidthByPosition","inside","outside","strokeInteractionStyle","_datum$meta","addOverlayPath","parentElement","removeOverlayPath","highlightStrokeOnInteraction","_datum$meta2","PointLayerMixin","point_mixin_classCallCheck","point_mixin_possibleConstructorReturn","point_mixin_getPrototypeOf","_overlayPath","formattedUids","point_mixin_inherits","point_mixin_createClass","maxSize","generateDataPoints","point_mixin_toConsumableArray","drawFn","_maxSize","_getPlotMeasurement2","point_mixin_slicedToArray","widthMetrics","heightMetrics","offsetXValues","offsetYValues","measurementConf","getMeasurementConfig","widthSpan","heightSpan","distanceLimit","refElement","pathElement","currentPath","point_mixin_get","PointLayer","drawRects","barEnterFn","transitionBars","selTransition","positionRetriever","isNegativeVal","barBasePos","resolveDimByField","axesInfo","spaceType","sizeEncoding","sizeConfig","sizeValue","enterSpace","minVal","maxVal","diffPx","minDomVal","endPos","_positionRetriever$ty2","bar_helper_slicedToArray","resolveDimensions","_resolveDimByField","enterWidth","enterX","xPos","_resolveDimByField2","enterHeight","selectStrokeOnInteraction","BarLayerMixin","bar_mixin_classCallCheck","bar_mixin_possibleConstructorReturn","bar_mixin_getPrototypeOf","_plotPadding","_plotSpan","bar_mixin_inherits","bar_mixin_createClass","bar_mixin_get","getTranslatedPoints","interactions","normalizedDataArr","barContainer","bar_mixin_slicedToArray","barWidthMetrics","barHeightMetrics","barWidthOffsets","barHeightOffsets","barWidth","barWidthOffset","barHeight","barHeightOffset","pathGroup","_strokeWidthPositionM","strokeWidthPositionMap","L1","L2","L3","BarLayer","tick_renderer","ticksEnter","angle0Axis","angle0V","angles0","_angles2","_layerInst$encodingFi","_config$span","xSpan","ySpan","x0Px","TickLayerMixin","tick_mixin_classCallCheck","tick_mixin_possibleConstructorReturn","tick_mixin_getPrototypeOf","tick_mixin_inherits","tick_mixin_createClass","drawTicks","TickLayer","sanitizeEncoding","layerFactory","compositeLayers","factoryObj","setLayerRegistry","_layerRegistry","getSerializedConf","mark","layerDef","serializedDefs","defs","unitLayerDef","sDef","parseLayerDefinition","layerType","strs","propValue","layer_factory_toConsumableArray","getLayerInstance","layerRegistry","instances","layerObj","layerConstructor","getLayerClass","composeLayers","layerDefs","sanitizeLayerConfig","DEFAULT_LAYERS","defaults_defineProperty","_DEFAULT_LAYERS","LAYER_TYPES","layer_registry","layers","helpers","commonHelpers","pointLayerHelpers","layerMixins","getDimensionMeasureMap","retinalEncodingsAndMeasures","_layer$encodingFields","sizeField","shapeField","_retinalEncodingsAndM","src_helper_toConsumableArray","transformDataModels","dataModels","transformVal","getLayerFromDef","existingLayer","rowIndex","colIndex","instanceArr","_timeDiffs","resolveEncodingTransform","sanitizeLayerDef","sanitizedDefs","sConf","attachDataToLayers","transformedDataModels","dataSource","attachAxisToLayers","layerAxisIndex","axesObj","axisInf","axisIndex","getLayerAxisIndex","_layer$config","specificField","encodingField","fieldInst","getMembers","unionDomainFromLayers","axisFields","domainValues","layerDomain","fieldDomain","encodingDomain","fieldStr","domain1","renderLayers","_lifeCycleManager","notify","orderedLayers","layerParentGroup","layerDepOrder","_layerDepOrder","getNearestDimensionalValue","entryVal","getLayersBy","searchBy","removeLayersBy","createSideEffectGroup","createRenderPromise","_renderedPromise","_renderedResolve","getRadiusRange","radiusAxes","isXandYMeasures","_context$fields","src_helper_slicedToArray","xMeasures","yMeasures","getValuesMap","idValuesMap","valuesIdMap","_model$getData","fieldIndices","getSelectionRejectionModel","propValuesMap","rejectionModel","_propModel$getData","entryRowIds","exitRowIds","rowIdsObj","AXES","LAYERDEFS","TRANSFORMEDDATA","DATADOMAIN","FIELDS","LAYERAXISINDEX","IDFIELD","GRID_LINE_PARENT_GROUP_CLASS","GRID_BAND_PARENT_GROUP_CLASS","GRID_PARENT_GROUP","TICK","GRID_BAND","GRID_LINE","CONSOLIDATED","FRAGMENTED","FACET_BY_FIELDS","RETINAL_FIELDS","PARENT_ALIAS","CACHED_DATA","STORE","DRAG","HOVER","SELECTIONDRAG","CLICK","LONGTOUCH","TOUCHDRAG","ALL_ACTIONS","SELECTION_NEW_ENTRY","SELECTION_NEW_EXIT","SELECTION_NULL","SELECTION_OLD_ENTRY","SELECTION_OLD_EXIT","SelectionSet","completeSet","_volatile","selection_set_classCallCheck","_completeSetCount","_lockedSelection","_resetted","entrySet","exitSet","lockedSel","addSet","removeSet","updateSet","mergedEnter","mergedExit","changeSideEffectAvailability","toEnable","sideEffects","change","enable","disable","getMergedSet","muze_firebolt_src_helper_toConsumableArray","Firebolt","actions","behaviourEffectMap","firebolt_classCallCheck","_sideEffectDefinitions","_sideEffects","_propagationInf","_actions","behavioural","physical","_selectionSet","_volatileSelectionSet","_propagationFields","_sourceSideEffects","_propagationBehaviourMap","_sourceBehaviours","_actionBehaviourMap","_behaviourEffectMap","_entryExitSet","_actionHistory","_queuedSideEffects","mapSideEffects","registerBehaviouralActions","registerSideEffects","registerPhysicalBehaviouralMap","physicalBehaviouralMap","registerPhysicalActions","setSideEffectConfig","sideEffect","sideEffectConf","behEffectMap","preventDefaultActions","effectNames","effects","firebolt_toConsumableArray","behaviours","initializeBehaviouralActions","dispatchableBehaviours","Action","prepareSelectionSets","initializeSideEffects","sideEffectStore","actionHistory","queuedSideEffects","combinedSet","mergeSelectionSets","firebolt_typeof","sideEffectInstance","isEnabled","mutates","dispatchSideEffect","behaviour","propagationInfo","getSideEffects","entryExitSet","shouldApplySideEffects","propagationIdentifiers","applicableSideEffects","getApplicableSideEffects","applySideEffects","getEntryExitSet","sourceSelectionSet","behaviourConditions","sideEffectConditions","physicalAction","actionBehaviourMap","behaviourMap","mapActionsAndBehaviour","onDataModelPropagation","dispatchBehaviour","uniqueIds","behaviouralActions","volatileSelectionSet","sideEffectDefinitions","sideEffectsMap","SideEffect","initedActions","initializePhysicalActions","physicalActions","phyAction","initedPhysicalActions","getDefaultTargetContainer","bindActionWithBehaviour","targets","behaviourList","applicableSelectionSets","unionSets","firebolt","uidSet","_entryExitSet$type","existingModel","aggFns","getIdentifiersFromSet","getValueFromId","GenericBehaviour","generic_classCallCheck","_enabled","selectionSets","getSelectionSets","_this$getAddSetFromCr","getAddSetFromCriteria","getPropagationInf","setSelectionSet","_this$firebolt","_selectionSet$getSets","getSets","getSetInfo","getSourceFields","propData","resetted","_partition2","generic_slicedToArray","dims","otherFields","getRangeFromIdentifiers","getMergedEntrySet","_propagationIdentifiers","VolatileBehaviour","reset","existingAddSet","SELECTION","updateExit","getCompleteSet","BRUSH","HIGHLIGHT","TOOLTIP","FILTER","HighlightBehaviour","BrushBehaviour","BEHAVIOURNAMES","FilterBehaviour","PersistentBehaviour","updateEntry","mergedExitSet","completeSetCount","SelectBehaviour","dragCriteriaRetriever","drag_action_config_defineProperty","_dragCriteriaRetrieve","sourceInfo","startPos","isXDimension","isYDimension","xRange","yRange","selectedDomains","rangeObj","xdom","ydom","getDragActionConfig","getSourceInfo","coordType","attachDragEvent","targetEl","drawingInf","touchStart","d3Drag","getDrawingContext","beh","dragEnd","hover","tooltip","svgContainer","nearestPoint","getAllPoints","showInPosition","generatePayloadFromEvent","click","physical_defineProperty","_physicalActions","ACTIONNAMES","longtouch","touchEnd","touchdrag","ANCHORS","BRUSH_ANCHORS","PERSISTENT_ANCHORS","HIGHLIGHTER","CROSSLINE","GenericSideEffect","generic_sideeffect_classCallCheck","_strategy","SurrogateSideEffect","interactive","SpawnableSideEffect","_drawingContext","changeVisibility","sideEffectGroup","visible","SelectionBox","boxConf","box","drawingContext","unitWidth","unitHeight","selectionGroupClassName","hide","sourceInf","_getBoxDimensionsFrom","getBoxDimensionsFromPayload","xDim","yDim","xLinear","yLinear","xCriteria","yCriteria","x1Val","x2Val","x1DomainIndex","x2DomainIndex","_sort2","selection_box_helper_slicedToArray","y1Val","y2Val","y1DomainIndex","y2DomainIndex","_sort4","_xDim","_yDim","direction","selectionBox","selectionBoxDrag","onDrag","boxClassName","INITIAL_STYLE","connectorClassName","margin","content","iconContainerSize","iconScale","iconShape","iconColor","rowMargin","separator","parentClassName","arrow","getArrowPos","dim","arrowPos","boxHeight","boxWidth","arrowWidth","plotBottom","boxBottom","plotRight","boxRight","placeArrow","tooltipArrow","_tooltipArrow","tooltipBackground","_tooltipBackground","arrowConf","_arrowOrientation","Content","content_classCallCheck","_model","_formatter","ctx","displayFormat","table","tbody","elemData","Tooltip","htmlContainer","tooltip_classCallCheck","connectorContainer","tooltipConf","contentClass","_tooltipContainer","_contentContainer","_contents","_tooltipConnectorContainer","defConf","contentConfig","reorderContainers","contentConf","_target","repositionArrow","arrowDisabled","arrowOrient","outsidePlot","connector","_offset","_extent","arrowSize","topSpace","dimX","rightSpace","leftSpace","positionTop","positionRight","positionLeft","positionHorizontal","positionVertical","_position","_arrowPos","HIGHLIGHT_SUMMARY","formatters","strategies_defineProperty","isSingleValue","dataLen","stackedSum","getStackedKeyValue","getKeyValue","isSelected","removeKey","stackedValue","keyObj","valueObj","stackedValueObj","margin-left","getEncodingValues","configField","getStackedSum","generateRetinalFieldsValues","valueArr","retinalFields","dimensionMeasureMap","fieldInf","retField","retIndex","retinalFieldValue","measuresArr","icon","_fieldInf$retField","formattedRetinalValue","hasMultipleMeasures","_fieldInf$measure","dName","formatterFn","strategies_toConsumableArray","buildTooltipData","nestedDataObj","fieldValues","_dataModel$getData","fieldspace","_context$firebolt$con","detailFields","containsDetailField","getFieldInf","defFormatter","nf","getTabularData","allMeasures","strategies_construct","isStacked","isStackedBar","filteredMeasures","generateTooltipContent","nestedData","_nestedData$i","_fieldInf$field","len2","_fieldInf$name","strategies_strategies","aggregatedModel","fieldsConf","measureNames","configResolvers","tooltip_defineProperty","_configResolvers","specificConf","_default","side_effects_tooltip_classCallCheck","tooltip_possibleConstructorReturn","tooltip_getPrototypeOf","_tooltips","sanitizeConfig","strategyObj","sanitizedConf","totalHeight","totalWidth","tooltips","boundBox","fragmented","showVertically","tooltipPos","boxes","tooltip_toConsumableArray","sourceFields","plotDimensions","getPlotPointsFromIdentifiers","strategyConf","dataTransform","projectFields","plotDim","dt","layoutContainer","parentContainerDimensions","layoutBoundBox","unitBoundBox","tooltipInst","TooltipRenderer","timeDiffsByField","strategyFn","positionRelativeTo","tooltipBoundBox","getContents","spaceOutBoxes","spaceOutIfOverlap","firstBox","secondBox","opposite","highlightSummary","selectionSummary","projectedFields","Crossline","bandWidth","bandClass","lineClass","plotWidth","crossline_toConsumableArray","startPx","endPx","parentGroup","getFormattedSet","selectedPointsId","formattedSet","helper_objectSpread","fadeFn","excludeSetIds","currentHighlightedSet","PlotHighlighter","plot_highlighter_classCallCheck","plot_highlighter_possibleConstructorReturn","plot_highlighter_getPrototypeOf","excludeSet","selectedPointsIds","plot_highlighter_toConsumableArray","currentStrategy","getExcludeSetIds","plot_highlighter_objectSpread","FilterEffect","entryModel","resetData","AnchorEffect","anchors_classCallCheck","anchors_possibleConstructorReturn","anchors_getPrototypeOf","_layersMap","addAnchorLayers","anchorLayer","groupId","layerName","currentInteraction","addLayer","layerCls","depLayerEncoding","defaultSizeValue","commonName","getTransitionConfig","owner","registry","_linkedLayer$getTrans2","anchors_slicedToArray","getLayerByName","transformedDataModel","anchorSizeConfig","getAnchorSizeonInteraction","currentLayers","setAnchorLayerStyle","PersistentAnchors","defaultInteractionLayerEncoding","BrushAnchors","behaviour_effect_map_defineProperty","BEHAVIOURS","convertToObj","payloadGenerator","brush","selectionDataModel","propPayload","getRangeFromData","propCriteria","isDimension","payload_generator_toConsumableArray","__default","propagateValues","propagateInterpolatedValues","propFields","propagationFields","_ref2$fields","propagationFieldNames","cachedData","sideEfffects","propagationBehaviour","facetByFields","sourceUnit","sourceCanvas","parentAlias","data_propagator_toConsumableArray","addFacetData","facetData","fieldIndexMap","getSchemaDef","dataWithFacets","newRow","sourceBehaviour","propagationConf","enabled","propConf","behaviourInstance","applyOnSource","sideEffectPolicy","propagationData","sourceIdentifierFields","hasCommonCanvas","UnitFireBolt","src_firebolt_classCallCheck","firebolt_possibleConstructorReturn","firebolt_getPrototypeOf","SIDE_EFFECTS","changeSideEffectStateOnPropagation","unitId","aliasName","propagationSourceCanvas","sourceUnitId","sourceSideEffects","sideEffectInstances","actionOnSource","mappedEffects","se","sideEffectCheckers","_getSelectionRejectio","_cachedValuesMap","enabledFn","sourceBehaviours","persistent","createSelectionSet","action_behaviour_map_defineProperty","ACTIONS","UnitBrushBehaviour","getGridLayerDefinitions","axisType","getDefaultVisibilty","getLayerDefinition","_definition","_axes","_encoding","gridLines","gridBands","gridLineColor","zeroLineColor","gridBandColor","isLinearScale","grid_lines_defineProperty","isNegativeDomain","_context$axes","dimensionSubTypes","getValidSubtype","attachDataToGridLineLayers","_gridLines","_gridBands","gridLayerData","getGridLayerData","gridData","jsonData","_jsonData$push","grid_lines_toConsumableArray","src_listener_map_slicedToArray","fieldsVal","removeExitLayers","layersMap","markSet","queuedLayerDefs","_queuedLayerDefs","layerDefArr","defFn","listener_map_toConsumableArray","minimumConsecutiveDifference","_ref8","_timeDiffsByField","originalData","attachPropagationListener","_ref9","createGridLineLayer","vuConf","atomicDef","_ref11","_ref12","_ref15","_ref16","layerAxisIndexVal","_layerAxisIndex","axesVal","_dimensionMeasureMap","src_props_defineProperty","_PROPS","trackerClassName","arcLayerClassName","sideEffectClassName","local_options","src_local_options_defineProperty","_CONFIG$LAYERDEFS$TRA","local_options_toConsumableArray","oldData","unitNs","VisualUnit","visual_unit_classCallCheck","lifeCycleManager","_gridLinesSelection","_gridBandsSelection","createFireboltInstance","fireboltDeps","Cls","getFireboltCls","visual_unit_defineProperty","getActionBehaviourMap","getBehaviourEffectMap","_firebolt","createRootContainers","_rootSvg","_sideEffectGroup","initSideEffects","class","renderGridLineLayers","gridLineParentGroup","_entry","grid_lines_slicedToArray","parentGroupClass","rootSvg","_this$parentContainer","parentContainerInf","layerDefinition","layerDefinitions","components","layerIndex","layersArr","_layersArr","markId","defArr","instanceValues","visual_unit_toConsumableArray","layerdeps","_this$_dependencies","parentModel","REACTIVE_PROPS","dimValue","pointInf","getMarkInfFromLayers","markInf","parsedIdentifiers","localNs","dataDomain","visual_unit_slicedToArray","dispatchQueuedSideEffects","firebolt_helper_toConsumableArray","clearActionHistory","visual_unit_construct","Variable","ComposedVars","composed_vars_classCallCheck","composed_vars_possibleConstructorReturn","composed_vars_getPrototypeOf","vars","_vars","member","SimpleVariable","simple_var_classCallCheck","simple_var_possibleConstructorReturn","simple_var_getPrototypeOf","oneVar","_oneVar","dtFormat","dateFormat","fieldDef","varInst","convertToVar","datamodel","transformFields","field_sanitizer_slicedToArray","normalizedFields","normalizeFields","norFields","orderFields","fieldArray","temporalArr","categoricalArr","fieldList","numOfMeasures","allDimensions","field_sanitizer_toConsumableArray","temporal","categorical","rowsInfo","columnsInfo","rowDimensions","rowMeasures","rowTemporalFields","rowCategoricalFields","columnDimensions","columnMeasures","columnTemporalFields","columnCategoricalFields","initStore","group_utils_defineProperty","isDistributionEqual","group_utils_toConsumableArray","rowType","initializeCacheMaps","cellMap","xAxesMap","yAxesMap","entryCellMap","exitCellMap","getAxisKey","getCellKey","columnId","extractUnitConfig","unitConfig","getHeaderText","rowLength","headerCreator","fieldHeaders","TextCell","findInGroup","variable","channel","group_utils_this","facetType","projType","getAxisType","retriveDomainFromData","mutateAxesFromMap","cacheMaps","xAxes","yAxes","xAxisSet","yAxisSet","axisId","getEncoder","encoder","CartesianEncoder","layerConf","hasPolarEncodings","PolarEncoder","getHeaderAxisFrom","userAxisFromConfig","axisFrom","headerFrom","group_utils_slicedToArray","firstField","secondField","firstFieldType","secondFieldType","setFacetsAndProjections","_encoder$simpleEncode","simpleEncoder","getFacetsAndProjections","facets","projections","getBorders","matrices","showRowBorders","showColBorders","showValueBorders","valueMatrix","_rows","leftRows","rightRows","_columns","topColumns","bottomColumns","_encoder$fieldInfo","allDimensionLength","allMeasuresLength","allTemporalFieldsLength","getRowBorders","borders","getColumnsBorders","getValueBorders","borderTypeRow","borderTypeCol","getFieldsFromSuppliedLayers","suppliedLayerConfig","encodingArr","group_utils_typeof","extractFields","facetsAndProjections","layerFields","flattenArray","sortFacetFields","facetNames","sortInfo","sortConfig","facet","facetSortConfig","removeExitCells","exitCells","qualifiedStateProps","placeholder","globalConfig","VisualEncoder","visual_encoder_classCallCheck","_fieldInfo","_axisFrom","_headerFrom","__headerFrom","_getHeaderAxisFrom2","visual_encoder_slicedToArray","rowHeader","rowAxis","_getHeaderAxisFrom4","colHeader","colAxis","scaleMaps","getFieldNames","fieldVar","matrix_model_toConsumableArray","prepareHashMaps","rowKey","joinedRowKey","createJoinedKeys","keyArr","joinedKey","formatKeys","formatterList","formattedKeys","rKeys","rIdx","createColumnDataModels","colContext","sourceDM","rowFacets","colFacets","rowKeyArr","colKeyObj","newRowIndex","splitModelsHashMap","currentColumnIndex","colKeyArr","colKey","hashMapKey","splitByColumn","optionalProjections","facetInfo","projectionInfo","geomCellCreator","_indices$i","projectionIndexObject","columnIndex","matrix_model_objectSpread","getMatrixModel","currentRowIndex","prepareProjectionInfo","colProjections","rowProjections","rowProj","rIndex","newRIndex","colProj","cIndex","newCIndex","newRowProj","newColProj","rowFields","columnFields","prepareFacetInfo","rowFacetNames","colFacetNames","allFacets","_getSplitModelHashMap","getSplitModelHashMap","splitModels","rowKeyHashMap","colKeyHashMap","rowKeys","colKeys","splitContext","splitByRow","generalContext","rowKeyObj","createRowDataModels","rowContext","rowIndexForCurrentKey","_createColumnDataMode","_createColumnDataMode2","_createColumnDataMode3","_createColumnDataMode4","formattedColKeys","facetField","rawFormat","columnKeys","createValueCells","suppliedLayers","GeomCell","matrixLayers","horizontalAxis","verticalAxis","datamodelTransform","sortedFields","layerConfigArr","getLayerConfig","retinalConfig","axesCreators","normalizedColumns","normalizedRows","cell_creator_toConsumableArray","facetFields","geomCellKey","geomCell","updateCells","facetKey","extractAxisIndex","createAxisCells","currObj","axisInst","_axisInst$config","AxisCell","BlankCell","extractFacetIndex","headerPlaceholderGn","selectionObj","counter","selectionKeys","keySet","textCells","createTextCells","textCell","generatePlaceholders","encoders","valuesMatrix","takeAxisFrom","takeHeaderFrom","axisPlaceholderGn","selObj","axesMatrix","selObjProp","axesForDraw","rowsPrimary","rowPrime","rowsSecondary","rowSec","columnsPrimary","colPrime","columnsSecondary","colSec","_selectionObj","section","hContext","getAxisFields","fieldHolder","ac","transformDataModel","resolvedData","newFieldsConfig","aggregationFns","nearestAggFns","resolvedAggFns","sortDmTemporalFields","computeMatrices","autoGroupBy","layerConfig","otherEncodings","matrixGnContext","getCellDef","isRowSizeEqual","isColumnSizeEqual","colCells","rowCells","resetSimpleAxes","newCacheMap","valueCellContext","serializeLayerConfig","cellCreator","valueCellsCreator","valueMatrixInfo","_mutateAxesFromMap","createUnits","_generateMatrices","generateMatrices","leftHeaders","topHeaders","bottomHeaders","rightHeaders","cell_creator_slicedToArray","_map4","leftFacets","rightFacets","rowPriority","colPriority","leftMatrix","rightMatrix","topMatrix","bottomMatrix","currentBottomLength","setAvailableSpace","rowMatrix","columnMatrix","RESOLVER_PROPS","units","MatrixResolver","matrix_resolver_classCallCheck","_registry","_layerConfig","_matrixLayers","_rowMatrix","_columnMatrix","_valueMatrix","_facets","_projections","_datamodelTransform","_units","_cacheMaps","_fireboltDeps","_placeholderInfo","maps","matrix_resolver_toConsumableArray","getProjectionFields","_horizontalAxis","_verticalAxis","matrixType","matrix_resolver_defineProperty","_this5","_this$dependencies","_this$getAllFields","retContext","getRetinalFieldsDomain","getRetinalAxes","retinalEncoder","setCommonDomain","retinalAxes","updateVisualUnit","placeholders","bottomLeft","bottomRight","_this$dependencies2","showHeaders","_this$registry$cells","matrix_resolver_slicedToArray","topCols","bottomCols","rowHeaders","blankCellCreator","footers","topLeft","topRight","updateModel","dataTypeScaleMap","src_data_type_scale_map_defineProperty","data_type_scale_map_dataTypeScaleMap","getAdjustedDomain","y1ratio","y2ratio","allSameSign","generateAxisFromMap","axisKey","groupAxes","currentAxes","commonAxisKey","axisConfig","getAxisConfig","axisInfo","axisOrientation","rawUserAxisConfig","userAxisConfig","_rotationLock","createSimpleAxis","sanitizeIndividualLayerConfig","encodingConfigs","getDefaultMark","colFieldType","rowFieldType","createRetinalAxis","fieldProps","getIndex","arrIndex","getLayerConfFromFields","colFields","userLayerConfig","encoder_helper_toConsumableArray","xFields","yFields","colFieldExist","rowFieldExist","resolverAxes","axesArr","userConfig","geomCellAxes","1","unitsArr","encodingDomains","axisTypeIndex","typeOfField","_resolver$axes","adjustedDomain","typeOfAxis","alignZeroLine","currentFieldName","sortingOrder","primaryFacets","secondaryFacets","primaryFields","secondaryFields","primaryLen","secondaryLen","projArr","primaryField","secondaryField","existIndex","axisFromIndex","cartesian_encoder_get","cartesian_encoder_getPrototypeOf","encodingObj","layerArray","serializedLayers","colField","colFieldName","rowField","configs","rowFieldName","defConfigs","layerConfigs","mergedLayerConf","serializedLayerConfig","cartesian_encoder_toConsumableArray","axesCls","polar_encoder_defineProperty","_axesCls","pieAxes","varInstances","encType","domainProps","matrixInstance","unitDomains","setRadiusFactor","sizeFieldIndex","sizeMultiplier","getSizeMultiplier","sizeAxisDomain","encodingFields","_layers","sanitizedRows","sanitizedColumns","polar_encoder_get","polar_encoder_getPrototypeOf","sanitizedFields","typeIndex","polar_encoder_toConsumableArray","sanitizedConfig","angleField","angle0Field","RetinalEncoder","newAxes","visual_group_local_options","visual_group_local_options_defineProperty","_CONFIG$ROWS$COLUMNS$","SimpleGroup","ValueMatrix","matrixArr","value_matrix_classCallCheck","instancesById","cellValue","_instancesById","_matrix","_filterFn","rowWidth","currentRowWidth","getLogicalSpace","rowHeight","currentRowHeight","setMatrixInstances","_composition","createMatrices","matrixConfig","unsubscribeChangeListeners","sanitizeRetinalConfig","retinalConf","confValue","createEncoderInstance","groupType","fieldSanitizer","setAxisAndHeaders","placeholderInfo","getMatrices","_groupedDataModel","createRetinalAxes","setRetinalAxisDomain","cornerMatrices","createHeaders","metaData","border","unionUnitDomains","registerDomainChangeListener","visual_group_props_defineProperty","visual_group_props_PROPS","cellRegistry","VisualGroup","visual_group_classCallCheck","visual_group_possibleConstructorReturn","visual_group_getPrototypeOf","componentSubRegistry","visual_group_assertThisInitialized","_selection","createMatrixResolver","initializeGlobalState","globalState","createUnitState","_VisualUnit$getState2","visual_group_helper_slicedToArray","localState","createLayerState","_BaseLayer$getState2","setupChangeListeners","stores","_context$registry","comp","storeInst","listenerInf","getSimpleAxes","_this$resolver$getAll","visual_group_defineProperty","info","existingRemoveSet","select_toConsumableArray","firebolt_action_behaviour_map_defineProperty","action_behaviour_map_actionBehaviourMap","propagationBehaviourMap","_propagationBehaviour","firebolt_behaviour_effect_map_defineProperty","firebolt_behaviour_effect_map_behaviourEffectMap","propagationSideEffects","_propagationSideEffec","DEFAULTICONSIZE","SCALE_FUNCTIONS","HORIZONTAL","VALUE","LegendFireBolt","_Firebolt","legend_firebolt_classCallCheck","legend_firebolt_possibleConstructorReturn","legend_firebolt_getPrototypeOf","legend_firebolt_inherits","legend_firebolt_createClass","getPropagationSelectionSet","behaviourName","canvasAlias","rawVal","getFullData","src_firebolt_helper_toConsumableArray","getCriteriaFromData","firebolt_physical_defineProperty","physical_physicalActions","boundingBox","gradientDimensions","axisScale","rangeShifter","drag_defineProperty","getSelectionCriteria","selectionBoxMeasure","drawingInfMeasure","subjectStartPoint","ALIGN","DEFAULT_MEASUREMENT","marginHorizontal","paddingRight","LEGEND_TITLE","_buffer","legend_defaults_defineProperty","borderStyle","borderColor","bounds","upper","tempConfig","STEP_DEFAULT_CONFIG","ICON_MAP","LEGEND_MARKER_PROPS","side_effects_selection_box_classCallCheck","side_effects_selection_box_possibleConstructorReturn","side_effects_selection_box_getPrototypeOf","gradientDimension","legendGradContainer","legendSelGroup","selBox","enterFn","selection_box_drag_defineProperty","fadeOut","brighten","LegendHighlighter","legend_highlighter_classCallCheck","legend_highlighter_possibleConstructorReturn","legend_highlighter_getPrototypeOf","SYMBOL_PADDING","LegendMarker","legend_marker_classCallCheck","legend_marker_possibleConstructorReturn","legend_marker_getPrototypeOf","_graphicElements","markerElement","legendmarkerTextContainer","legendmarkerText","rotateAngle","_getRelativePosition","getRelativePosition","canvas","legendContainer","_canvasMount","_labelManager$getSmar","lableConfig","legendmarkerGroup","textElement","createTextCell","labelManagerRef","maxLines","_minTickDiff","_cells","resetLogicalSpace","title","_title","getScaleInfo","scaleType","steps","scaleFn","getInterpolatedArrayData","domainForLegend","scaleParams","requiredWidth","requiredHeight","upperBound","maxTickDiff","alignment","smartLabelCalc","minimumTickSize","_smartLabelCalc$getOr","isInteger","getcomputedArray","computationhelper","requiredMeasure","availableMeasure","currentTickValue","nextTickValue","measureParam","pixelPerTick","getInterpolatedData","recomputeSteps","getTickMeasure","_scaleParams$measures","interpolatedFn","tickValue","getItemMeasures","_labelManager","_labelManager$getOriS","getDomainBounds","domainBounds","domainLeg","ele","legend_helper_defineProperty","getScaleFactor","SimpleLegend","simple_legend_classCallCheck","_metaData","_fieldName","defaultMeasurement","_computedStyle","legendBehaviours","_canvasAlias","_this$measurement","effPadding","effBorder","effMargin","dataFromScale","titleSpace","getTitleSpace","titleHeight","titleWidth","labelSpaces","getLabelSpaces","_computeItemSpaces","computeItemSpaces","maxItemSpaces","textOrientation","itemSpaces","iconSpaces","maxIconWidth","labelSpace","itemSpace","iconSpace","newLabelWidth","titleSpaces","_this$measurement2","_this$config3","titleCreator","titleContainer","marginPosition","_this$config4","_this$measurement3","renderTitle","simple_legend_defineProperty","idRangeMap","ranges","canvasRoot","legendOrientation","position_config_defineProperty","_legendOrientation","datasets","itemContainerMeasures","getStepSpacesInfo","iconHeight","iconWidth","stepPadding","horizontal","vertical","positionConfig","_positionConfig","alignmentMap","_alignmentMap","itemStack","_itemStack","createLegendSkeleton","gradWidth","gradHeight","maxGradHeight","maxGradWidth","legendBody","legendItem","getItemContainers","legendInstance","positionObj","createItemSkeleton","_context$config","itemSkeleton","alignClass","applyItemStyle","measureType","stepColorCheck","_context$measurement","renderIcon","transalate","defaultIcon","defaultIconSize","DiscreteLegend","_getScaleInfo","discrete_legend_toConsumableArray","_field$schema","nextVal","discrete_legend_defineProperty","discrete_legend_get","discrete_legend_getPrototypeOf","renderDiscreteItem","_context$measurement2","_item$icon","text-align","getGradientDomain","accumulator","currentValue","MAX_VALUE","MIN_VALUE","legendGradSvg","legendGradCont","linearGradient","makeLinearGradient","legendRect","GradientLegend","gradient_legend_toConsumableArray","gradient_legend_defineProperty","newAxis","axisSpace","axisDomainLength","_legendGradientSvg","gradient_legend_get","gradient_legend_getPrototypeOf","renderGradient","_createLegendSkeleton","StepLegend","step_legend_toConsumableArray","step_legend_defineProperty","lowerBounds","upperBounds","stepData","step_legend_get","step_legend_getPrototypeOf","renderStepItem","_context$measurement3","_item$icon2","_positionConfig$posit","PADDING","BORDER","MARGIN","TITLE_TEMPLATE_NOT_ALLOWED_TAGS","IS_POINT_MAP","true","false","LEGEND_TYPE_MAP","constants_defineProperty","_LEGEND_TYPE_MAP","HORIZONTAL_CENTER","VERTICAL_CENTER","share","operators_construct","operators_toConsumableArray","strings","htmlCode","expLn","frag","createDocumentFragment","treeShakeNode","nodeType","Node","ELEMENT_NODE","tagName","childNodes","canvasIterator","canvases","iteratorFn","cFn","visualGroup","_throwback","registerActions","fnName","_registrableComponents","setFireboltDependencies","actionModel","ActionModel","action_model_classCallCheck","registerPropagationBehaviourMap","dissociateBehaviour","dissociateSideEffect","policy","registrableComponents","mergedPolicy","aliases","*","propagationPayload","propagationCanvas","crossInteractionPolicy","TITLE_CONFIG","SUB_TITLE_CONFIG","MESSAGE_CONFIG","canvas_local_options_defineProperty","_localOptions","canvasOptions","_canvasOptions","local_options_slicedToArray","arg1","arg2","local_options_typeof","titleConfig","subtitle","subtitleConfig","sub","LayoutComponent","layoutComponent_classCallCheck","_boundBox","_renderAt","_alignWith","_alignment","_componentName","_className","DummyComponent","newDimensions","renderAt","component","componentName","pagination","scrollBar","thickness","speed","legend","minHeight","minCharacters","verticalAlign","collapse","invalidValues","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_CLASS_NAME","NODE_PREFIX","DefinitionModel","definitionModel_classCallCheck","_host","host","_cut","cut","_ratioWeight","ratioWeight","_preferred","preferred","_lanes","lanes","_remainingHeight","_remainingWidth","remainingHeight","remainingWidth","getNodeId","_uid","yExtraSpace","smallestHeight","getCutType","smallestExtraHeightHorizontally","MAX_SAFE_INTEGER","containerHeight","hostHeight","xExtraSpace","smallestWidth","smallestExtraWidthVertically","containerWidth","hostWidth","createPlaceHolderComponent","placeComponent","definitionModel","leftOvercomponentRationWidth","isPreferred","isGridComponent","componentRatioWidth","leftHeight","leftWidth","_component$getLogical","componentHeight","componentWidth","firstLaneConfig","firstLane","secondLane","tree_classCallCheck","_parentCut","_this$_children","tree_toConsumableArray","parentCut","bound","nodeconfig","searchNode","childNode","nodeId","deleteSearchNode","LayoutModel","measurements","layout_model_classCallCheck","_measurements","_root","createTree","setBoundBox","addChildren","lane","allocateBoundingBox","totalWeight","carry","lastSibling","ratio","setHostSpatialConfig","setHostPosition","negotiateDimension","alteredDim","nonAlteredDim","cumultiveExtraSpaceAmt","childrenLength","extraSpaceAmt","computePosition","determineBoundBox","bb","_lastSibling$boundBox","_top","_left","_height","_width","_instance$parent$boun","setSpatialConfig","VIEW_INDEX","ROW_MATRIX_INDEX","2","COLUMN_MATRIX_INDEX","ROW_ROOT","COLUMN_ROOT","VERTICAL","Utils","utils_createClass","isDOMElement","getID","getElement","findContainer","coordinate","removeDiv","divId","DataPoint","data_point_classCallCheck","DataParser","data_parser_classCallCheck","data_parser_createClass","defaultDataPointLogic","nodepoints","getnodePoints","datapoint","HTMLDataAdapter","_DataParser","html_data_classCallCheck","html_data_possibleConstructorReturn","html_data_getPrototypeOf","html_data_inherits","html_data_createClass","getCoordinates","html_data_get","Renderer","renderer_classCallCheck","renderer_createClass","initRenderer","__logicalTree","HTMLRenderer","_Renderer","html_renderer_classCallCheck","html_renderer_possibleConstructorReturn","html_renderer_getPrototypeOf","_coordinates","html_renderer_inherits","html_renderer_createClass","createhtml","mainDiv","html_renderer_get","parentDiv","createAndCustomiseParent","hasHost","createAndPositionDiv","html_renderer_objectSpread","div","coordinates","findNode","nodeID","renderer","drawLayout","renderHTML","resolveAligment","componentData","alignWith","componentToAlign","componentMap","refNode","newNodeConfig","setAlignConfig","DrawingManager","drawing_manager_classCallCheck","_componentMap","_layoutClassName","layoutClassName","_renderer","drawing_manager_createClass","drawComponent","DefinitionManager","definition_manager_classCallCheck","_prioritySequence","_totalHeight","_totalWidth","_targetComponentMap","prepareTargetComponentMap","targetComponentMap","canvasComponent","tempDefModel","componentRef","getComponent","placeGridComponent","gridComponents","iscolumnPreffered","_placeComponent","rowpreffred","LayoutDef","layout_def_classCallCheck","_layoutDefinition","layout_def_createClass","addComponent","layoutDefinition","addMultipleComponent","componentArray","sanitizedDefinition","hostObj","hostID","childHost","resetComponentMap","LayoutManager","layout_manager_classCallCheck","_dimension","_skeletonType","skeletonType","_layoutDef","_drawingManager","_rootNodeID","con","resetNode","updateNode","compute","_layout","calLayOutDef","_context$dimension","layoutDef","prioritySequence","generateConfigModel","negotiate","broadcast","layoutComponents","componentArr","compo","elementName","removeElement","elemID","co","deleteElement","setupChangeListener","allOptions","_allOptions","canvas_helper_toConsumableArray","nameSpaceProps","equalityProps","equalityChecker","option","updateProps","updateChecker","dispatchProps","_cachedProps","notifyAnimationEnd","viewInfo","layout","centerMatrix","viewMatricesInfo","promises","cellArr","lifeCycle","animDonePromises","applyInteractionPolicy","interactionPolicy","_interactionPolicy","_crossInteractionPolicy","unitFireBolt","changeBehaviourStateOnPropagation","createLayoutManager","src_options","minUnitWidth","minUnitHeight","options_slicedToArray","_ref2$","_auxConfig$reset","oldConf","fixScrollBarConfig","GenericLayout","generic_layout_classCallCheck","_matrices","_centerMatrix","_mountPoint","DEFAULT_CONFIGURATION","grid_layout_defaults_defineProperty","_DEFAULT_CONFIGURATIO","_FieldNames$BORDER","DEFAULT_MEASUREMENTS","_DEFAULT_MEASUREMENTS","findInPage","page","combineMatrices","isTransposed","joinedMatrix","utils_toConsumableArray","rowData","computeLogicalSpace","maxMeasures","_config$isTransposed","unitMeasures","_getMeasureInfo","getMeasureInfo","firstMeasure","secondMeasure","minMeasures","getMinMeasures","_logicalSpace","utils_defineProperty","valueItem","maxMeasure","firstMeasureValue","secondMeasureValue","valueArray","_item$space","fMeasure","sMeasure","minSecondMeasure","createMatrixEachLevel","_arr$i","extraCellsRemover","beg","distribution","extraCellLengths","VisualMatrix","visual_matrix_classCallCheck","_lastLevelKey","_primaryMatrix","_secondaryMatrix","_maxMeasures","_availableSpace","_layoutMatrix","_tree","_createTree2","matrixTree","lastLevelKey","layoutMatrix","primaryMatrix","secondaryMatrix","breakPage","primaryMatrixLength","newMatrix","keyLength","heightMeasures","populateMaxMeasures","widthMeasures","calculateDepth","viewableMatrix","createViewPortMatrix","viewableMeasures","redistributeSpaces","childDepth","createMatrixInstances","matrixInfo","breakPointer","_breakPointer","brokenMatrix","breakMatrix","nextLevel","removeExtraCells","RowVisualMatrix","row_matrix_classCallCheck","row_matrix_possibleConstructorReturn","row_matrix_getPrototypeOf","maxHeights","maxWidths","matrixInst","cellDimOptions","matrixIndex","_this2$getCellDimensi","getCellDimensions","widths","rowHeights","columnWidths","primary","secondary","begCellLen","endCellLen","remainingAvailWidth","cWidths","conditions","maxPrioritySpace","availableWidth","currentWidth","prioritySpace","logicalWidths","getPriorityDistribution","mWidth","mHeight","redistributeViewSpaces","computeViewableSpaces","rHeights","gutter","spaceTakenByColumn","spaces","getDistributedHeight","heightWithoutGutter","distSum","gutterSum","availableHeight","colLen","distHeight","borderWidth","colHeight","colWidth","heights","ColumnVisualMatrix","column_matrix_classCallCheck","column_matrix_possibleConstructorReturn","column_matrix_getPrototypeOf","heightDist","divider","condition","spaceTakenByRow","getDistributedWidth","layoutConfig","distWidth","rowLen","oldLogicalSpace","heightDistribution","getMatrixMeasurement","setViewSpaces","pointerType","viewSpaces","pointer","computations_defineProperty","paginationDetailsMap","scrollType","paginationMeasureGetter","relatedMaxMeasure","getMatrixMeasureForPagination","measureDetails","actualMeasure","scrollInfo","getMatrixHeightDetails","columnMatrixWidth","_getHeightRequiredByC","getHeightRequiredByColMatrix","maxColumnMatrixHeight","columnViewSpace","getViewableSpaces","columnPointer","columnMatrixHeight","maxHeightAvailableForRowMatrix","rowMatrixHeight","bufferCondition","isScroll","getActualBufferFromConfig","computations_slicedToArray","getBufferFromCondition","currentBufferType","horizontalBuffer","verticalBuffer","computeLayoutMeasurements","_getMatrixWidthDetail","getMatrixWidthDetails","_layout$config3","rowMatrixWidth","maxRowMatrixWidth","maxWidthAvailableForColumnMatrix","_getMatrixHeightDetai","_getActualBufferFromC","rowViewableSpaces","columnViewableSpaces","setValueMatrixMeasurements","computations_toConsumableArray","rowWidthsPrimary","rowWidthsSecondary","columnHeightsPrimary","columnHeightsSecondary","measureSum","GridLayout","layout_classCallCheck","layout_possibleConstructorReturn","layout_getPrototypeOf","_layoutId","_scrollInfo","generateVisualMatrices","begColCells","endColCells","gutterSpace","layout_helper_slicedToArray","_center","_bottom","layout_helper_toConsumableArray","RowMatrix","ColumnMatrix","layout_get","_computeLayoutMeasure","setViewInformation","pageNumber","pageType","totalPages","layout_defineProperty","renderGrid","currentPage","_viewInfo","maxRowHeight","maxColWidth","rowPointer","getViewMatrices","rowMatrices","getViewableMatrices","columnMatrices","centralMatrixPointer","rowMatrixLen","columnMatrixLen","rowPages","columnPages","layoutDimensions","getViewMeasurements","_layout$config","rowSpaces","colSpaces","rightWidth","topHeight","bottomHeight","centerHeight","centerWidth","viewWidth","viewHeight","actualCenterMeasures","totalMeasures","unitHeights","unitWidths","borderMap","border_helper_defineProperty","_borderMap","specificBorderApplier","borderTypes","showBorders","borderInfo","borderType","applySpecificBorder","applyBorders","borderApplierFn","borderApplier","borderMapVal","orderMaker","nestByStack","updateArr","optionalParams","currStack","prevStack","arrVal","stackVal","currElemIndex","newElem","arrElem","returnArr","spanCalculator","isNull","maskCreator","_nestByStack","viewMatrix","hierarchy","_nestByStack2","spanGenerator","spans","ridx","currSpan","getOrder","matrixSpanGeneratorMap","span_maker_defineProperty","_matrixSpanGeneratorM","orderGetter","viewMatrixMaker","spanMaker","matrixSpanGenerator","spanApplier","cellCounter","spaceAllocationDueToSpan","primaryUnitWidth","cumulativeWidth","spanApplierMap","_spanApplierMap","TransactionSupport","INTERFACE_IMPl","LAYER_DEF","DETAIL_FIELDS","GEOM","BLANK","SimpleCell","simple_cell_classCallCheck","enums_defaults_defineProperty","_DEFAULT_CONFIG","_CONSTANTS$MARGIN","CONSTANTS","DEFAULT_PROPS","minSpacing","visual_cell_src_props_defineProperty","visual_cell_src_props_PROPS","caption","smartText","axis_cell_classCallCheck","axis_cell_possibleConstructorReturn","axis_cell_getPrototypeOf","_availHeight","_availWidth","axis_cell_assertThisInitialized","computeAxisSpace","logicalWidth","logicalHeight","spaceFixer","_axis$getLogicalSpace","actualWidth","actualHeight","_axis$config2","wrapperDiv","blank_cell_classCallCheck","blank_cell_possibleConstructorReturn","blank_cell_getPrototypeOf","blank_cell_assertThisInitialized","setSmartText","_context$minSpacing","minHeightSpace","minWidthSpace","paddedHeight","paddedWidth","text_cell_classCallCheck","text_cell_possibleConstructorReturn","text_cell_getPrototypeOf","text_cell_assertThisInitialized","computeTextSpace","_context$minSpacing2","minText","_minTextSpace","smartSpace","textAlign","vAlign","_this$smartText","translation","middle","geom_cell_classCallCheck","geom_cell_possibleConstructorReturn","geom_cell_getPrototypeOf","_unit","_datamodel","_facetByFields","_transform","_caption","geom_cell_assertThisInitialized","captionSpace","computeGeomSpace","getCaptionSpace","captionDom","DEFAULT_PLACEHOLDERS","src_defaults_defineProperty","_DEFAULT_PLACEHOLDERS","resolveTitleSubTitleContent","rawContent","createHeading","prevCell","cellType","legendInitializer","legendConfig","prevLegends","legends","headerHeight","legendInfo","legendCreator","LegendCls","dataset","scaleProps","_scale$config","stepMapper","interactionRegistry","dataInfo","legendMeasures","titleText","legendIconShapeMapper","layerMarks","includes","getGroupByData","setLegendMeasures","MuzeComponent","_this$boundBox","HeaderComponent","headerComponent_classCallCheck","headerComponent_possibleConstructorReturn","headerComponent_getPrototypeOf","setParams","cont","renderHeader","LegendComponent","legendComponent_classCallCheck","legendComponent_possibleConstructorReturn","legendComponent_getPrototypeOf","legendSpace","sectionComponents","_this$params$config","legendMount","legWidth","legHeight","sections","currHeight","currWidth","leg","legendHeight","legendWidth","renderLegend","_defaultAlignmentHelp","defaultAlignmentHelper","setParentInfo","arrowSizeMap","getUnitPositions","totalLength","viewLength","currentLen","unitPosition","createScrollBarArrow","createScrollBarRect","mover","applyScrollMouseDownAction","moverRect","scrollMaker","_mover$node$getBoundi","_rect$node$getBoundin","rectX","rectY","changeMoverPosition","registerListenerOnArrow","arrowType","_components","isTouchDevice","applyMoverDrag","moverStartPos","rectStartPos","distanceMoved","actualPosition","pageXOffset","pageYOffset","applyRectClick","emptyScrollAreaClick","manager","unitPositions","ScrollMaker","scroll_maker_classCallCheck","_attachedScrollAction","_unitPositions","scroll_maker_createClass","scrollTo","scrollDeltaTo","createScroll","scrollBarContainer","scrollContainerHelper","attachScrollAction","externalScrollAction","detachScrollAction","scrollMakerMap","_ScrollMaker","HorizontalScrollMaker","horizontal_scroll_maker_classCallCheck","horizontal_scroll_maker_possibleConstructorReturn","horizontal_scroll_maker_getPrototypeOf","horizontal_scroll_maker_inherits","horizontal_scroll_maker_createClass","horizontal_scroll_maker_get","prevArrow","nextArrow","_this$logicalSpace","scrollBarWithouArrowLength","_scrollBarWithouArrowLength","_this$_components$mov","positionAdjuster","newPosition","currentPos","_this$_components$mov2","moverPos","movedViewLength","performAttachedScrollFunction","delta","_this$_components$mov3","scrollPercentage","movement","VerticalScrollMaker","vertical_scroll_maker_classCallCheck","vertical_scroll_maker_possibleConstructorReturn","vertical_scroll_maker_getPrototypeOf","vertical_scroll_maker_inherits","vertical_scroll_maker_createClass","vertical_scroll_maker_get","ScrollComponent","scroll_component_classCallCheck","scrollBarComponentConfig","scroll_component_possibleConstructorReturn","scroll_component_getPrototypeOf","unitIndex","sanitizedUnitIndex","externalAction","MatrixComponent","matrix_component_classCallCheck","matrix_component_possibleConstructorReturn","matrix_component_getPrototypeOf","_this$params$config$s","containerForMatrix","applyScroll","_cellSpanMaker","cellSpanMaker","_matrixSpanGenerator","renderTable","applySpans","applier","renderPlaceholders","renderMatrix","applyScrollAction","scollDistance","GridComponent","grid_component_classCallCheck","grid_component_possibleConstructorReturn","grid_component_getPrototypeOf","_this$component$viewI","matrixDim","matrixName","updateWrapper","matrixWrapper","allComponents","_scrollBarManager","scrollBarManager","wheelDeltaX","wheelDeltaY","preventBrowserScroll","triggerScrollBarAction","movedView","scrollActionApplier","_this$component$0$0$b","sanitizeGrid","attachScrollListener","MessageComponent","message_component_classCallCheck","message_component_possibleConstructorReturn","message_component_getPrototypeOf","_config$dimensions","message","_params$config","headerCell","configType","headerAlignmentMap","component_wrapper_maker_defineProperty","_headerAlignmentMap","isGridPresent","renderDetails","_renderDetails$compon","checkParamsValidation","createHeaderWrapper","headerType","layoutManager","_headerMap$headerType","headerConfig","wrapperParams","component_wrapper_maker_objectSpread","existingComponent","createScrollBarWrapper","scrollBarType","grid","_scrollBarMap$scrollB","scrollBarMap","layoutBasedMeasure","viewMeasure","rowAlign","colAlign","componentWrapperMaker","_layoutManager","createMessageWrapper","_i","_headerValues","defaultDimensions","gridComponent","getBoundBox","createLegendWrapper","legendWrapper","gridLayoutWrapper","verticalScrollBar","horizontalScrollBar","ScrollManager","scroll_manager_classCallCheck","_scrollBarComponents","_attachedComponents","scroll_manager_createClass","scrollBarComponents","attachedComponents","performScrollAction","getRenderDetails","_mount$getBoundingCli","heightAttr","widthAttr","visGroup","_visGroup$placeholder","legendPosition","layoutArrangement","arrangeComponents","_titleLayouts","titleLayouts","component_resolver_defineProperty","legendLayouts","titlePosition","subtitlePosition","availableHeightForCanvas","availableWidthForCanvas","_createHeaders","canvasHeight","canvasWidth","isSubtitle","headerOptions","_createHeading","createLegend","getLegendSpace","mountSpace","componentIndexes","componentNames","3","4","5","6","renderLayout","gridLayout","compWrappers","componentWrappers","createScrollManager","horizontalScrollWrapper","verticalScrollWrapper","gridWrapper","hScrollBar","vScrollBar","componentWrapper","deleteElementName","removeComponent","registerComponents","attachListeners","attachListener","defaultInteractionPolicy","isMeasure","group_firebolt_toConsumableArray","getFieldsFromChannel","colDim","unitColFacets","equals","unitRowFacets","propagateWith","defaultCrossInteractionPolicy","propagationCanvasAlias","propagationUnit","GroupFireBolt","group_firebolt_classCallCheck","group_firebolt_possibleConstructorReturn","group_firebolt_getPrototypeOf","behaviouralAction","validFields","APP_INITIAL_STATE","app","Canvas","globalDependencies","canvas_classCallCheck","canvas_possibleConstructorReturn","canvas_getPrototypeOf","canvas_defineProperty","canvas_assertThisInitialized","initedComponents","initCanvas","createGroupState","_VisualGroup$getState2","canvas_helper_slicedToArray","prepareLayout","triggerReflow","setLayoutInfForUnits","getRootNodeId","setComponentInfo","setLabelRotationForAxes","rotationVal","getAxes","initialSettings","regEntry","COMPONENTS","default_registry_defineProperty","_COMPONENTS","SUBREGISTRIES","utils","Smartlabel","globalCache","defaultRegistry","globalRegistry","overrideRegistryDefinitions","overrideRegistry","muze","_transactor2","muze_slicedToArray","env","globalStore","componentSubRegistryDef","settings","withSettings","Components","VisualLayer","enums","unitHelpers","unitEnums","Encoders","encoderHelpers","groupUtils","groupEnums","SideEffects","standards","Behaviours","operators"],"mappings":"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+DACA,sEACAzC,IAAIwnD,gCCES+W,cAZK,IAAI59D,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzC,IAAIwnD,gCCES+W,cAZK,IAAI59D,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzC,IAAIwnD,gCCES+W,gBAZK,IAAI59D,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzC,IAAIwnD,gCCES+W,gBAZK,IAAI59D,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzC,IAAIwnD,gCCES+W,kBAZK,IAAI59D,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzC,IAAIwnD,gCCAS+W,cAVK,IAAI59D,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzC,IAAIwnD,gCCES+W,cAVK,IAAI59D,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzC,IAAIwnD,gCCES+W,cAVK,IAAI59D,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzC,IAAIwnD,gCCES+W,cAVK,IAAI59D,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzC,IAAIwnD,gCCES+W,gBAVK,IAAI59D,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzC,IAAIwnD,gCCES+W,cAVK,IAAI59D,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzC,IAAIwnD,gCCES+W,cAVK,IAAI59D,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzC,IAAIwnD,gCCES+W,cAVK,IAAI59D,M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","file":"muze.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"muze\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"muze\"] = factory();\n\telse\n\t\troot[\"muze\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"DataModel\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DataModel\"] = factory();\n\telse\n\t\troot[\"DataModel\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","export default function autoType(object) {\n  for (var key in object) {\n    var value = object[key].trim(), number;\n    if (!value) value = null;\n    else if (value === \"true\") value = true;\n    else if (value === \"false\") value = false;\n    else if (value === \"NaN\") value = NaN;\n    else if (!isNaN(number = +value)) value = number;\n    else if (/^([-+]\\d{2})?\\d{4}(-\\d{2}(-\\d{2})?)?(T\\d{2}:\\d{2}(:\\d{2}(\\.\\d{3})?)?(Z|[-+]\\d{2}:\\d{2})?)?$/.test(value)) value = new Date(value);\n    else continue;\n    object[key] = value;\n  }\n  return object;\n}\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatBody = csv.formatBody;\nexport var csvFormatRows = csv.formatRows;\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nfunction pad(value, width) {\n  var s = value + \"\", length = s.length;\n  return length < width ? new Array(width - length + 1).join(0) + s : s;\n}\n\nfunction formatYear(year) {\n  return year < 0 ? \"-\" + pad(-year, 6)\n    : year > 9999 ? \"+\" + pad(year, 6)\n    : pad(year, 4);\n}\n\nfunction formatDate(date) {\n  var hours = date.getUTCHours(),\n      minutes = date.getUTCMinutes(),\n      seconds = date.getUTCSeconds(),\n      milliseconds = date.getUTCMilliseconds();\n  return isNaN(date) ? \"Invalid Date\"\n      : formatYear(date.getUTCFullYear(), 4) + \"-\" + pad(date.getUTCMonth() + 1, 2) + \"-\" + pad(date.getUTCDate(), 2)\n      + (milliseconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \".\" + pad(milliseconds, 3) + \"Z\"\n      : seconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \"Z\"\n      : minutes || hours ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \"Z\"\n      : \"\");\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function preformatBody(rows, columns) {\n    return rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    });\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n  }\n\n  function formatBody(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return preformatBody(rows, columns).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(value) {\n    return value == null ? \"\"\n        : value instanceof Date ? formatDate(value)\n        : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : value;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatBody: formatBody,\n    formatRows: formatRows\n  };\n}\n","export {default as dsvFormat} from \"./dsv\";\nexport {csvParse, csvParseRows, csvFormat, csvFormatBody, csvFormatRows} from \"./csv\";\nexport {tsvParse, tsvParseRows, tsvFormat, tsvFormatBody, tsvFormatRows} from \"./tsv\";\nexport {default as autoType} from \"./autoType\";\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatBody = tsv.formatBody;\nexport var tsvFormatRows = tsv.formatRows;\n","export { DataFormat, FilteringMode } from '../enums';\n/**\n * The event name for data propagation.\n */\nexport const PROPAGATION = 'propagation';\n\n/**\n * The name of the unique row id column in DataModel.\n */\nexport const ROW_ID = '__id__';\n\n/**\n * The enums for operation names performed on DataModel.\n */\nexport const DM_DERIVATIVES = {\n    SELECT: 'select',\n    PROJECT: 'project',\n    GROUPBY: 'group',\n    COMPOSE: 'compose',\n    CAL_VAR: 'calculatedVariable',\n    BIN: 'bin',\n    SORT: 'sort'\n};\n\nexport const JOINS = {\n    CROSS: 'cross',\n    LEFTOUTER: 'leftOuter',\n    RIGHTOUTER: 'rightOuter',\n    NATURAL: 'natural',\n    FULLOUTER: 'fullOuter'\n};\n\nexport const LOGICAL_OPERATORS = {\n    AND: 'and',\n    OR: 'or'\n};\n","import DataConverter from './model/dataConverter';\nimport { DSVStringConverter, DSVArrayConverter, JSONConverter, AutoDataConverter } from './defaultConverters';\n\nclass DataConverterStore {\n    constructor() {\n        this.store = new Map();\n        this.converters(this._getDefaultConverters());\n    }\n\n    _getDefaultConverters() {\n        return [\n            new DSVStringConverter(),\n            new DSVArrayConverter(),\n            new JSONConverter(),\n            new AutoDataConverter()\n        ];\n    }\n\n    /**\n     * Sets the given converters in the store and returns the store\n     * @param  {Array<DataConverter>} converters : contains array of converter instance\n     * @return { Map<String,DataConverter> }\n     */\n    converters(converters = []) {\n        converters.forEach(converter => this.store.set(converter.type, converter));\n        return this.store;\n    }\n\n    /**\n     * Registers a Converter of type DataConverter\n     * @param {DataConverter} converter : converter Instance\n     * @returns self\n     */\n    register(converter) {\n        if (converter instanceof DataConverter) {\n            this.store.set(converter.type, converter);\n            return this;\n        }\n        return null;\n    }\n\n    /**\n     * Rempves a converter from store\n     * @param {DataConverter} converter : converter Instance\n     * @returns self\n     */\n\n    unregister(converter) {\n        this.store.delete(converter.type);\n        return this;\n    }\n\n    get(name) {\n        if (this.store.has(name)) {\n            return this.store.get(name);\n        }\n        return null;\n    }\n\n}\n\nconst converterStore = (function () {\n    let store = null;\n\n    function getStore () {\n        store = new DataConverterStore();\n        return store;\n    }\n    return store || getStore();\n}());\n\nexport default converterStore;\n","import DataConverter from '../model/dataConverter';\nimport AUTO from '../utils/auto-resolver';\nimport DataFormat from '../../enums/data-format';\n\nexport default class AutoDataConverter extends DataConverter {\n    constructor() {\n        super(DataFormat.AUTO);\n    }\n\n    convert(data, schema, options) {\n        return AUTO(data, schema, options);\n    }\n}\n","import DataConverter from '../model/dataConverter';\nimport DSVArr from '../utils/dsv-arr';\nimport DataFormat from '../../enums/data-format';\n\nexport default class DSVArrayConverter extends DataConverter {\n    constructor() {\n        super(DataFormat.DSV_ARR);\n    }\n\n    convert(data, schema, options) {\n        return DSVArr(data, schema, options);\n    }\n}\n","import DataConverter from '../model/dataConverter';\nimport DSVStr from '../utils/dsv-str';\nimport DataFormat from '../../enums/data-format';\n\nexport default class DSVStringConverter extends DataConverter {\n    constructor() {\n        super(DataFormat.DSV_STR);\n    }\n\n    convert(data, schema, options) {\n        return DSVStr(data, schema, options);\n    }\n}\n","export { default as DSVStringConverter } from './dsvStringConverter';\nexport { default as JSONConverter } from './jsonConverter';\nexport { default as DSVArrayConverter } from './dsvArrayConverter';\nexport { default as AutoDataConverter } from './autoConverter';\n","import DataConverter from '../model/dataConverter';\nimport FlatJSON from '../utils/flat-json';\nimport DataFormat from '../../enums/data-format';\n\nexport default class JSONConverter extends DataConverter {\n    constructor() {\n        super(DataFormat.FLAT_JSON);\n    }\n\n    convert(data, schema, options) {\n        return FlatJSON(data, schema, options);\n    }\n}\n","import converterStore from './dataConverterStore';\nimport DataConverter from './model/dataConverter';\n\nexport { DataConverter, converterStore };\n","/**\n * Interface for all data converters\n */\nexport default class DataConverter {\n    constructor(type) {\n        this._type = type;\n    }\n\n    get type() {\n        return this._type;\n    }\n\n    convert() {\n        throw new Error('Convert method not implemented.');\n    }\n\n}\n","import FlatJSON from './flat-json';\nimport DSVArr from './dsv-arr';\nimport DSVStr from './dsv-str';\nimport { detectDataFormat } from '../../utils';\n\n/**\n * Parses the input data and detect the format automatically.\n *\n * @param {string|Array} data - The input data.\n * @param {Object} options - An optional config specific to data format.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n */\nfunction Auto (data, schema, options) {\n    const converters = { FlatJSON, DSVStr, DSVArr };\n    const dataFormat = detectDataFormat(data);\n\n    if (!dataFormat) {\n        throw new Error('Couldn\\'t detect the data format');\n    }\n\n    return converters[dataFormat](data, schema, options);\n}\n\nexport default Auto;\n","import { columnMajor } from '../../utils';\n\n/**\n * Parses and converts data formatted in DSV array to a manageable internal format.\n *\n * @param {Array.<Array>} arr - A 2D array containing of the DSV data.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv data is header or not.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    [\"a\", \"b\", \"c\"],\n *    [1, 2, 3],\n *    [4, 5, 6],\n *    [7, 8, 9]\n * ];\n */\nfunction DSVArr(arr, schema, options) {\n    if (!Array.isArray(schema)) {\n        throw new Error('Schema missing or is in an unsupported format');\n    }\n    const defaultOption = {\n        firstRowHeader: true,\n    };\n    const schemaFields = schema.map(unitSchema => unitSchema.name);\n    options = Object.assign({}, defaultOption, options);\n\n    const columns = [];\n    const push = columnMajor(columns);\n\n    let headers = schemaFields;\n    if (options.firstRowHeader) {\n        // If header present then remove the first header row.\n        // Do in-place mutation to save space.\n        headers = arr.splice(0, 1)[0];\n    }\n    // create a map of the headers\n    const headerMap = headers.reduce((acc, h, i) => (\n        Object.assign(acc, { [h]: i })\n    ), {});\n\n    arr.forEach((fields) => {\n        const field = [];\n        schemaFields.forEach((schemaField) => {\n            const headIndex = headerMap[schemaField];\n            field.push(fields[headIndex]);\n        });\n        return push(...field);\n    });\n    return [schemaFields, columns];\n}\n\nexport default DSVArr;\n","import { dsvFormat as d3Dsv } from 'd3-dsv';\nimport DSVArr from './dsv-arr';\n\n/**\n * Parses and converts data formatted in DSV string to a manageable internal format.\n *\n * @todo Support to be given for https://tools.ietf.org/html/rfc4180.\n * @todo Sample implementation https://github.com/knrz/CSV.js/.\n *\n * @param {string} str - The input DSV string.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv string data is header or not.\n * @param {string} [options.fieldSeparator=\",\"] - The separator of two consecutive field.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = `\n * a,b,c\n * 1,2,3\n * 4,5,6\n * 7,8,9\n * `\n */\nfunction DSVStr (str, schema, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n        fieldSeparator: ','\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    const dsv = d3Dsv(options.fieldSeparator);\n    return DSVArr(dsv.parseRows(str), schema, options);\n}\n\nexport default DSVStr;\n","import { columnMajor } from '../../utils';\n\n/**\n * Parses and converts data formatted in JSON to a manageable internal format.\n *\n * @param {Array.<Object>} arr - The input data formatted in JSON.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    {\n *      \"a\": 1,\n *      \"b\": 2,\n *      \"c\": 3\n *    },\n *    {\n *      \"a\": 4,\n *      \"b\": 5,\n *      \"c\": 6\n *    },\n *    {\n *      \"a\": 7,\n *      \"b\": 8,\n *      \"c\": 9\n *    }\n * ];\n */\nfunction FlatJSON (arr, schema) {\n    if (!Array.isArray(schema)) {\n        throw new Error('Schema missing or is in an unsupported format');\n    }\n\n    const header = {};\n    let i = 0;\n    let insertionIndex;\n    const columns = [];\n    const push = columnMajor(columns);\n    const schemaFieldsName = schema.map(unitSchema => unitSchema.name);\n\n    arr.forEach((item) => {\n        const fields = [];\n        schemaFieldsName.forEach((unitSchema) => {\n            if (unitSchema in header) {\n                insertionIndex = header[unitSchema];\n            } else {\n                header[unitSchema] = i++;\n                insertionIndex = i - 1;\n            }\n            fields[insertionIndex] = item[unitSchema];\n        });\n        push(...fields);\n    });\n\n    return [Object.keys(header), columns];\n}\n\nexport default FlatJSON;\n","/* eslint-disable default-case */\n\nimport { FieldType, DimensionSubtype, DataFormat, FilteringMode } from './enums';\nimport {\n    persistDerivations,\n    getRootGroupByModel,\n    propagateToAllDataModels,\n    getRootDataModel,\n    propagateImmutableActions,\n    addToPropNamespace,\n    sanitizeUnitSchema,\n    splitWithSelect,\n    splitWithProject,\n    getNormalizedProFields\n} from './helper';\nimport { DM_DERIVATIVES, PROPAGATION } from './constants';\nimport {\n    dataBuilder,\n    rowDiffsetIterator,\n    groupBy\n} from './operator';\nimport { createBinnedFieldData } from './operator/bucket-creator';\nimport Relation from './relation';\nimport reducerStore from './utils/reducer-store';\nimport { createFields } from './field-creator';\nimport InvalidAwareTypes from './invalid-aware-types';\nimport Value from './value';\nimport { converterStore } from './converter';\nimport { fieldRegistry } from './fields';\n\n/**\n * DataModel is an in-browser representation of tabular data. It supports\n * {@link https://en.wikipedia.org/wiki/Relational_algebra | relational algebra} operators as well as generic data\n * processing opearators.\n * DataModel extends {@link Relation} class which defines all the relational algebra opreators. DataModel gives\n * definition of generic data processing operators which are not relational algebra complient.\n *\n * @public\n * @class\n * @extends Relation\n * @memberof Datamodel\n */\nclass DataModel extends Relation {\n    /**\n     * Creates a new DataModel instance by providing data and schema. Data could be in the form of\n     * - Flat JSON\n     * - DSV String\n     * - 2D Array\n     *\n     * By default DataModel finds suitable adapter to serialize the data. DataModel also expects a\n     * {@link Schema | schema} for identifying the variables present in data.\n     *\n     * @constructor\n     * @example\n     * const data = loadData('cars.csv');\n     * const schema = [\n     *      { name: 'Name', type: 'dimension' },\n     *      { name: 'Miles_per_Gallon', type: 'measure', unit : 'cm', scale: '1000', numberformat: val => `${val}G`},\n     *      { name: 'Cylinders', type: 'dimension' },\n     *      { name: 'Displacement', type: 'measure' },\n     *      { name: 'Horsepower', type: 'measure' },\n     *      { name: 'Weight_in_lbs', type: 'measure' },\n     *      { name: 'Acceleration', type: 'measure' },\n     *      { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *      { name: 'Origin', type: 'dimension' }\n     * ];\n     * const dm = new DataModel(data, schema, { name: 'Cars' });\n     * table(dm);\n     *\n     * @public\n     *\n     * @param {Array.<Object> | string | Array.<Array>} data Input data in any of the mentioned formats\n     * @param {Array.<Schema>} schema Defination of the variables. Order of the variables in data and order of the\n     *      variables in schema has to be same.\n     * @param {object} [options] Optional arguments to specify more settings regarding the creation part\n     * @param {string} [options.name] Name of the datamodel instance. If no name is given an auto generated name is\n     *      assigned to the instance.\n     * @param {string} [options.fieldSeparator=','] specify field separator type if the data is of type dsv string.\n     */\n    constructor (...args) {\n        super(...args);\n\n        this._onPropagation = [];\n    }\n\n    /**\n     * Reducers are simple functions which reduces an array of numbers to a representative number of the set.\n     * Like an array of numbers `[10, 20, 5, 15]` can be reduced to `12.5` if average / mean reducer function is\n     * applied. All the measure fields in datamodel (variables in data) needs a reducer to handle aggregation.\n     *\n     * @public\n     *\n     * @return {ReducerStore} Singleton instance of {@link ReducerStore}.\n     */\n    static get Reducers () {\n        return reducerStore;\n    }\n\n    /**\n     * Converters are functions that transforms data in various format tpo datamodel consumabe format.\n     */\n    static get Converters() {\n        return converterStore;\n    }\n\n    /**\n     * Register new type of fields\n     */\n    static get FieldTypes() {\n        return fieldRegistry;\n    }\n\n    /**\n     * Configure null, undefined, invalid values in the source data\n     *\n     * @public\n     *\n     * @param {Object} [config] - Configuration to control how null, undefined and non-parsable values are\n     * represented in DataModel.\n     * @param {string} [config.undefined] - Define how an undefined value will be represented.\n     * @param {string} [config.null] - Define how a null value will be represented.\n     * @param {string} [config.invalid] - Define how a non-parsable value will be represented.\n     */\n    static configureInvalidAwareTypes (config) {\n        return InvalidAwareTypes.invalidAwareVals(config);\n    }\n\n    /**\n     * Retrieve the data attached to an instance in JSON format.\n     *\n     * @example\n     * // DataModel instance is already prepared and assigned to dm variable\n     *  const data = dm.getData({\n     *      order: 'column',\n     *      formatter: {\n     *          origin: (val) => val === 'European Union' ? 'EU' : val;\n     *      }\n     *  });\n     *  console.log(data);\n     *\n     * @public\n     *\n     * @param {Object} [options] Options to control how the raw data is to be returned.\n     * @param {string} [options.order='row'] Defines if data is retieved in row order or column order. Possible values\n     *      are `'rows'` and `'columns'`\n     * @param {Function} [options.formatter=null] Formats the output data. This expects an object, where the keys are\n     *      the name of the variable needs to be formatted. The formatter function is called for each row passing the\n     *      value of the cell for a particular row as arguments. The formatter is a function in the form of\n     *      `function (value, rowId, schema) => { ... }`\n     *      Know more about {@link Fomatter}.\n     *\n     * @return {Array} Returns a multidimensional array of the data with schema. The return format looks like\n     *      ```\n     *          {\n     *              data,\n     *              schema\n     *          }\n     *      ```\n     */\n    getData (options) {\n        const defOptions = {\n            order: 'row',\n            formatter: null,\n            withUid: false,\n            getAllFields: false,\n            sort: []\n        };\n        options = Object.assign({}, defOptions, options);\n        const fields = this.getPartialFieldspace().fields;\n\n        const dataGenerated = dataBuilder.call(\n            this,\n            this.getPartialFieldspace().fields,\n            this._rowDiffset,\n            options.getAllFields ? fields.map(d => d.name()).join() : this._colIdentifier,\n            options.sort,\n            {\n                columnWise: options.order === 'column',\n                addUid: !!options.withUid\n            }\n        );\n\n        if (!options.formatter) {\n            return dataGenerated;\n        }\n\n        const { formatter } = options;\n        const { data, schema, uids } = dataGenerated;\n        const fieldNames = schema.map((e => e.name));\n        const fmtFieldNames = Object.keys(formatter);\n        const fmtFieldIdx = fmtFieldNames.reduce((acc, next) => {\n            const idx = fieldNames.indexOf(next);\n            if (idx !== -1) {\n                acc.push([idx, formatter[next]]);\n            }\n            return acc;\n        }, []);\n\n        if (options.order === 'column') {\n            fmtFieldIdx.forEach((elem) => {\n                const fIdx = elem[0];\n                const fmtFn = elem[1];\n\n                data[fIdx].forEach((datum, datumIdx) => {\n                    data[fIdx][datumIdx] = fmtFn.call(\n                        undefined,\n                        datum,\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        } else {\n            data.forEach((datum, datumIdx) => {\n                fmtFieldIdx.forEach((elem) => {\n                    const fIdx = elem[0];\n                    const fmtFn = elem[1];\n\n                    datum[fIdx] = fmtFn.call(\n                        undefined,\n                        datum[fIdx],\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        }\n\n        return dataGenerated;\n    }\n\n    /**\n     * Returns the unique ids in an array.\n     *\n     * @return {Array} Returns an array of ids.\n     */\n    getUids () {\n        const rowDiffset = this._rowDiffset;\n        const ids = [];\n\n        if (rowDiffset.length) {\n            const diffSets = rowDiffset.split(',');\n\n            diffSets.forEach((set) => {\n                let [start, end] = set.split('-').map(Number);\n\n                end = end !== undefined ? end : start;\n                ids.push(...Array(end - start + 1).fill().map((_, idx) => start + idx));\n            });\n        }\n\n        return ids;\n    }\n    /**\n     * Groups the data using particular dimensions and by reducing measures. It expects a list of dimensions using which\n     * it projects the datamodel and perform aggregations to reduce the duplicate tuples. Refer this\n     * {@link link_to_one_example_with_group_by | document} to know the intuition behind groupBy.\n     *\n     * DataModel by default provides definition of few {@link reducer | Reducers}.\n     * {@link ReducerStore | User defined reducers} can also be registered.\n     *\n     * This is the chained implementation of `groupBy`.\n     * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n     *\n     * @example\n     * const groupedDM = dm.groupBy(['Year'], { horsepower: 'max' } );\n     * console.log(groupedDm);\n     *\n     * @public\n     *\n     * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n     * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n     *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n     *      schema of the variable.\n     *\n     * @return {DataModel} Returns a new DataModel instance after performing the groupby.\n     */\n    groupBy (fieldsArr, reducers = {}, config = { saveChild: true }) {\n        const groupByString = `${fieldsArr.join()}`;\n        let params = [this, fieldsArr, reducers];\n        const newDataModel = groupBy(...params);\n\n        persistDerivations(\n            this,\n            newDataModel,\n            DM_DERIVATIVES.GROUPBY,\n            { fieldsArr, groupByString, defaultReducer: reducerStore.defaultReducer() },\n            reducers\n        );\n\n        if (config.saveChild) {\n            newDataModel.setParent(this);\n        } else {\n            newDataModel.setParent(null);\n        }\n\n        return newDataModel;\n    }\n\n    /**\n     * Performs sorting operation on the current {@link DataModel} instance according to the specified sorting details.\n     * Like every other operator it doesn't mutate the current DataModel instance on which it was called, instead\n     * returns a new DataModel instance containing the sorted data.\n     *\n     * DataModel support multi level sorting by listing the variables using which sorting needs to be performed and\n     * the type of sorting `ASC` or `DESC`.\n     *\n     * In the following example, data is sorted by `Origin` field in `DESC` order in first level followed by another\n     * level of sorting by `Acceleration` in `ASC` order.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * let sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\"] // Default value is ASC\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * // Sort with a custom sorting function\n     * sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\", (a, b) => a - b] // Custom sorting function\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @text\n     * DataModel also provides another sorting mechanism out of the box where sort is applied to a variable using\n     * another variable which determines the order.\n     * Like the above DataModel contains three fields `Origin`, `Name` and `Acceleration`. Now, the data in this\n     * model can be sorted by `Origin` field according to the average value of all `Acceleration` for a\n     * particular `Origin` value.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * const sortedDm = dm.sort([\n     *     ['Origin', ['Acceleration', (a, b) => avg(...a.Acceleration) - avg(...b.Acceleration)]]\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @public\n     *\n     * @param {Array.<Array>} sortingDetails - Sorting details based on which the sorting will be performed.\n     * @return {DataModel} Returns a new instance of DataModel with sorted data.\n     */\n    sort (sortingDetails, config = { saveChild: false }) {\n        const rawData = this.getData({\n            order: 'row',\n            sort: sortingDetails\n        });\n        const header = rawData.schema.map(field => field.name);\n        const dataInCSVArr = [header].concat(rawData.data);\n\n        const sortedDm = new this.constructor(dataInCSVArr, rawData.schema, { dataFormat: 'DSVArr' });\n\n        persistDerivations(\n            this,\n            sortedDm,\n            DM_DERIVATIVES.SORT,\n            config,\n            sortingDetails\n        );\n\n        if (config.saveChild) {\n            sortedDm.setParent(this);\n        } else {\n            sortedDm.setParent(null);\n        }\n\n        return sortedDm;\n    }\n\n    /**\n     * Performs the serialization operation on the current {@link DataModel} instance according to the specified data\n     * type. When an {@link DataModel} instance is created, it de-serializes the input data into its internal format,\n     * and during its serialization process, it converts its internal data format to the specified data type and returns\n     * that data regardless what type of data is used during the {@link DataModel} initialization.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance.\n     * const csvData = dm.serialize(DataModel.DataFormat.DSV_STR, { fieldSeparator: \",\" });\n     * console.log(csvData); // The csv formatted data.\n     *\n     * const jsonData = dm.serialize(DataModel.DataFormat.FLAT_JSON);\n     * console.log(jsonData); // The json data.\n     *\n     * @public\n     *\n     * @param {string} type - The data type name for serialization.\n     * @param {Object} options - The optional option object.\n     * @param {string} options.fieldSeparator - The field separator character for DSV data type.\n     * @return {Array|string} Returns the serialized data.\n     */\n    serialize (type, options) {\n        type = type || this._dataFormat;\n        options = Object.assign({}, { fieldSeparator: ',' }, options);\n\n        const fields = this.getFieldspace().fields;\n        const colData = fields.map(f => f.formattedData());\n        const rowsCount = colData[0].length;\n        let serializedData;\n        let rowIdx;\n        let colIdx;\n\n        if (type === DataFormat.FLAT_JSON) {\n            serializedData = [];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = {};\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row[fields[colIdx].name()] = colData[colIdx][rowIdx];\n                }\n                serializedData.push(row);\n            }\n        } else if (type === DataFormat.DSV_STR) {\n            serializedData = [fields.map(f => f.name()).join(options.fieldSeparator)];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row.join(options.fieldSeparator));\n            }\n            serializedData = serializedData.join('\\n');\n        } else if (type === DataFormat.DSV_ARR) {\n            serializedData = [fields.map(f => f.name())];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row);\n            }\n        } else {\n            throw new Error(`Data type ${type} is not supported`);\n        }\n\n        return serializedData;\n    }\n\n    addField (field) {\n        const fieldName = field.name();\n        this._colIdentifier += `,${fieldName}`;\n        const partialFieldspace = this._partialFieldspace;\n        const cachedValueObjects = partialFieldspace._cachedValueObjects;\n        const formattedData = field.formattedData();\n        const rawData = field.partialField.data;\n\n        if (!partialFieldspace.fieldsObj()[field.name()]) {\n            partialFieldspace.fields.push(field);\n            cachedValueObjects.forEach((obj, i) => {\n                obj[field.name()] = new Value(formattedData[i], rawData[i], field);\n            });\n        } else {\n            const fieldIndex = partialFieldspace.fields.findIndex(fieldinst => fieldinst.name() === fieldName);\n            fieldIndex >= 0 && (partialFieldspace.fields[fieldIndex] = field);\n        }\n\n        // flush out cached namespace values on addition of new fields\n        partialFieldspace._cachedFieldsObj = null;\n        partialFieldspace._cachedDimension = null;\n        partialFieldspace._cachedMeasure = null;\n\n        this.__calculateFieldspace().calculateFieldsConfig();\n        return this;\n    }\n\n    /**\n    * Creates a new variable calculated from existing variables. This method expects the definition of the newly created\n    * variable and a function which resolves the value of the new variable from existing variables.\n    *\n    * Can create a new measure based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const newDm = dataModel.calculateVariable({\n    *      name: 'powerToWeight',\n    *      type: 'measure'\n    *  }, ['horsepower', 'weight_in_lbs', (hp, weight) => hp / weight ]);\n    *\n    *\n    * Can create a new dimension based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const child = dataModel.calculateVariable(\n    *     {\n    *       name: 'Efficiency',\n    *       type: 'dimension'\n    *     }, ['horsepower', (hp) => {\n    *      if (hp < 80) { return 'low'; },\n    *      else if (hp < 120) { return 'moderate'; }\n    *      else { return 'high' }\n    *  }]);\n    *\n    * @public\n    *\n    * @param {Object} schema - The schema of newly defined variable.\n    * @param {Array.<string|function>} dependency - An array containing the dependency variable names and a resolver\n    * function as the last element.\n    * @param {Object} config - An optional config object.\n    * @param {boolean} [config.saveChild] - Whether the newly created DataModel will be a child.\n    * @param {boolean} [config.replaceVar] - Whether the newly created variable will replace the existing variable.\n    * @return {DataModel} Returns an instance of DataModel with the new field.\n    */\n    calculateVariable (schema, dependency, config) {\n        schema = sanitizeUnitSchema(schema);\n        config = Object.assign({}, { saveChild: true, replaceVar: false }, config);\n\n        const fieldsConfig = this.getFieldsConfig();\n        const depVars = dependency.slice(0, dependency.length - 1);\n        const retrieveFn = dependency[dependency.length - 1];\n\n        if (fieldsConfig[schema.name] && !config.replaceVar) {\n            throw new Error(`${schema.name} field already exists in datamodel`);\n        }\n\n        const depFieldIndices = depVars.map((field) => {\n            const fieldSpec = fieldsConfig[field];\n            if (!fieldSpec) {\n                // @todo dont throw error here, use warning in production mode\n                throw new Error(`${field} is not a valid column name.`);\n            }\n            return fieldSpec.index;\n        });\n\n        const clone = this.clone(config.saveChild);\n\n        const fs = clone.getFieldspace().fields;\n        const suppliedFields = depFieldIndices.map(idx => fs[idx]);\n\n        let cachedStore = {};\n        let cloneProvider = () => this.detachedRoot();\n\n        const computedValues = [];\n        rowDiffsetIterator(clone._rowDiffset, (i) => {\n            const fieldsData = suppliedFields.map(field => field.partialField.data[i]);\n            computedValues[i] = retrieveFn(...fieldsData, i, cloneProvider, cachedStore);\n        });\n        const [field] = createFields([computedValues], [schema], [schema.name]);\n        clone.addField(field);\n\n        persistDerivations(\n            this,\n            clone,\n            DM_DERIVATIVES.CAL_VAR,\n            { config: schema, fields: depVars },\n            retrieveFn\n        );\n\n        return clone;\n    }\n\n    /**\n     * Propagates changes across all the connected DataModel instances.\n     *\n     * @param {Array} identifiers - A list of identifiers that were interacted with.\n     * @param {Object} payload - The interaction specific details.\n     *\n     * @return {DataModel} DataModel instance.\n     */\n    propagate (identifiers, config = {}, addToNameSpace, propConfig = {}) {\n        const isMutableAction = config.isMutableAction;\n        const propagationSourceId = config.sourceId;\n        const payload = config.payload;\n        const rootModel = getRootDataModel(this);\n        const propagationNameSpace = rootModel._propagationNameSpace;\n        const rootGroupByModel = getRootGroupByModel(this);\n        const rootModels = {\n            groupByModel: rootGroupByModel,\n            model: rootModel\n        };\n\n        addToNameSpace && addToPropNamespace(propagationNameSpace, config, this);\n        propagateToAllDataModels(identifiers, rootModels, { propagationNameSpace,\n            sourceId: propagationSourceId,\n            propagationSource: this },\n            Object.assign({\n                payload\n            }, config));\n\n        if (isMutableAction) {\n            propagateImmutableActions(propagationNameSpace, rootModel, {\n                config,\n                propConfig\n            }, this);\n        }\n\n        return this;\n    }\n\n    /**\n     * Associates a callback with an event name.\n     *\n     * @param {string} eventName - The name of the event.\n     * @param {Function} callback - The callback to invoke.\n     * @return {DataModel} Returns this current DataModel instance itself.\n     */\n    on (eventName, callback) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation.push(callback);\n            break;\n        }\n        return this;\n    }\n\n    /**\n     * Unsubscribes the callbacks for the provided event name.\n     *\n     * @param {string} eventName - The name of the event to unsubscribe.\n     * @return {DataModel} Returns the current DataModel instance itself.\n     */\n    unsubscribe (eventName) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation = [];\n            break;\n\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to invoke the method associated with propagation.\n     *\n     * @param {Object} payload The interaction payload.\n     * @param {DataModel} identifiers The propagated DataModel.\n     * @memberof DataModel\n     */\n    handlePropagation (propModel, payload) {\n        let propListeners = this._onPropagation;\n        propListeners.forEach(fn => fn.call(this, propModel, payload));\n    }\n\n    /**\n     * Performs the binning operation on a measure field based on the binning configuration. Binning means discretizing\n     * values of a measure. Binning configuration contains an array; subsequent values from the array marks the boundary\n     * of buckets in [inclusive, exclusive) range format. This operation does not mutate the subject measure field,\n     * instead, it creates a new field (variable) of type dimension and subtype binned.\n     *\n     * Binning can be configured by\n     * - providing custom bin configuration with non-uniform buckets,\n     * - providing bins count,\n     * - providing each bin size,\n     *\n     * When custom `buckets` are provided as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', buckets: [30, 80, 100, 110] }\n     *  const binnedDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binsCount` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', binsCount: 5, start: 0, end: 100 }\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binSize` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHorsepower', binSize: 20, start: 5}\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @public\n     *\n     * @param {string} measureFieldName - The name of the target measure field.\n     * @param {Object} config - The config object.\n     * @param {string} [config.name] - The name of the new field which will be created.\n     * @param {string} [config.buckets] - An array containing the bucket ranges.\n     * @param {string} [config.binSize] - The size of each bin. It is ignored when buckets are given.\n     * @param {string} [config.binsCount] - The total number of bins to generate. It is ignored when buckets are given.\n     * @param {string} [config.start] - The start value of the bucket ranges. It is ignored when buckets are given.\n     * @param {string} [config.end] - The end value of the bucket ranges. It is ignored when buckets are given.\n     * @return {DataModel} Returns a new {@link DataModel} instance with the new field.\n     */\n    bin (measureFieldName, config) {\n        const fieldsConfig = this.getFieldsConfig();\n\n        if (!fieldsConfig[measureFieldName]) {\n            throw new Error(`Field ${measureFieldName} doesn't exist`);\n        }\n\n        const binFieldName = config.name || `${measureFieldName}_binned`;\n\n        if (fieldsConfig[binFieldName]) {\n            throw new Error(`Field ${binFieldName} already exists`);\n        }\n\n        const measureField = this.getFieldspace().fieldsObj()[measureFieldName];\n        const { binnedData, bins } = createBinnedFieldData(measureField, this._rowDiffset, config);\n\n        const binField = createFields([binnedData], [\n            {\n                name: binFieldName,\n                type: FieldType.DIMENSION,\n                subtype: DimensionSubtype.BINNED,\n                bins\n            }], [binFieldName])[0];\n\n        const clone = this.clone(config.saveChild);\n        clone.addField(binField);\n\n        persistDerivations(\n            this,\n            clone,\n            DM_DERIVATIVES.BIN,\n             { measureFieldName, config, binFieldName },\n             null\n        );\n\n        return clone;\n    }\n\n    /**\n     * Creates a new {@link DataModel} instance with completely detached root from current {@link DataModel} instance,\n     * the new {@link DataModel} instance has no parent-children relationship with the current one, but has same data as\n     * the current one.\n     * This API is useful when a completely different {@link DataModel} but with same data as the current instance is\n     * needed.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *  const detachedDm = dm.detachedRoot();\n     *\n     * // has different namespace\n     * console.log(dm.getPartialFieldspace().name);\n     * console.log(detachedDm.getPartialFieldspace().name);\n     *\n     * // has same data\n     * console.log(dm.getData());\n     * console.log(detachedDm.getData());\n     *\n     * @public\n     *\n     * @return {DataModel} Returns a detached {@link DataModel} instance.\n     */\n    detachedRoot () {\n        const data = this.serialize(DataFormat.FLAT_JSON);\n        const schema = this.getSchema();\n\n        return new DataModel(data, schema);\n    }\n\n    /**\n     * Creates a set of new {@link DataModel} instances by splitting the set of rows in the source {@link DataModel}\n     * instance based on a set of dimensions.\n     *\n     * For each unique dimensional value, a new split is created which creates a unique {@link DataModel} instance for\n     *  that split\n     *\n     * If multiple dimensions are provided, it splits the source {@link DataModel} instance with all possible\n     * combinations of the dimensional values for all the dimensions provided\n     *\n     * Additionally, it also accepts a predicate function to reduce the set of rows provided. A\n     * {@link link_to_selection | Selection} is performed on all the split {@link DataModel} instances based on\n     * the predicate function\n     *\n     * @example\n     *  // without predicate function:\n     *  const splitDt = dt.splitByRow(['Origin'])\n     *  console.log(splitDt));\n     * // This should give three unique DataModel instances, one each having rows only for 'USA',\n     * // 'Europe' and 'Japan' respectively\n     *\n     * @example\n     *  // without predicate function:\n     *  const splitDtMulti = dt.splitByRow(['Origin', 'Cylinders'])\n     *  console.log(splitDtMulti));\n     * // This should give DataModel instances for all unique combinations of Origin and Cylinder values\n     *\n     * @example\n     * // with predicate function:\n     * const splitWithPredDt = dt.select(['Origin'], fields => fields.Origin.value === \"USA\")\n     * console.log(splitWithPredDt);\n     * // This should not include the DataModel for the Origin : 'USA'\n     *\n     *\n     * @public\n     *\n     * @param {Array} dimensionArr - Set of dimensions based on which the split should occur\n     * @param {Object} config - The configuration object\n     * @param {string} [config.saveChild] - Configuration to save child or not\n     * @param {string}[config.mode=FilteringMode.NORMAL] -The mode of the selection.\n     * @return {Array}  Returns the new DataModel instances after operation.\n     */\n    splitByRow (dimensionArr, reducerFn, config) {\n        const fieldsConfig = this.getFieldsConfig();\n\n        dimensionArr.forEach((fieldName) => {\n            if (!fieldsConfig[fieldName]) {\n                throw new Error(`Field ${fieldName} doesn't exist in the schema`);\n            }\n        });\n\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n\n        config = Object.assign({}, defConfig, config);\n\n        return splitWithSelect(this, dimensionArr, reducerFn, config);\n    }\n\n    /**\n     * Creates a set of new {@link DataModel} instances by splitting the set of fields in the source {@link DataModel}\n     * instance based on a set of common and unique field names provided.\n     *\n     * Each DataModel created contains a set of fields which are common to all and a set of unique fields.\n     * It also accepts configurations such as saveChild and mode(inverse or normal) to include/exclude the respective\n     * fields\n     *\n     * @example\n     *  // without predicate function:\n     *  const splitDt = dt.splitByColumn( [['Acceleration'], ['Horsepower']], ['Origin'])\n     *  console.log(splitDt));\n     * // This should give two unique DataModel instances, both having the field 'Origin' and\n     * // one each having 'Acceleration' and 'Horsepower' fields respectively\n     *\n     * @example\n     *  // without predicate function:\n     *  const splitDtInv = dt.splitByColumn( [['Acceleration'], ['Horsepower'],['Origin', 'Cylinders'],\n     *                           {mode: 'inverse'})\n     *  console.log(splitDtInv));\n     * // This should give DataModel instances in the following way:\n     * // All DataModel Instances do not have the fields 'Origin' and 'Cylinders'\n     * // One DataModel Instance has rest of the fields except 'Acceleration' and the other DataModel instance\n     * // has rest of the fields except 'Horsepower'\n     *\n     *\n     *\n     * @public\n     *\n     * @param {Array} uniqueFields - Set of unique fields included in each datamModel instance\n     * @param {Array} commonFields - Set of common fields included in all datamModel instances\n     * @param {Object} config - The configuration object\n     * @param {string} [config.saveChild] - Configuration to save child or not\n     * @param {string}[config.mode=FilteringMode.NORMAL] -The mode of the selection.\n     * @return {Array}  Returns the new DataModel instances after operation.\n     */\n    splitByColumn (uniqueFields = [], commonFields = [], config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        const fieldConfig = this.getFieldsConfig();\n        const allFields = Object.keys(fieldConfig);\n        const normalizedProjFieldSets = [[commonFields]];\n\n        config = Object.assign({}, defConfig, config);\n        uniqueFields = uniqueFields.length ? uniqueFields : [[]];\n\n\n        uniqueFields.forEach((fieldSet, i) => {\n            normalizedProjFieldSets[i] = getNormalizedProFields(\n                [...fieldSet, ...commonFields],\n                allFields,\n                fieldConfig);\n        });\n\n        return splitWithProject(this, normalizedProjFieldSets, config, allFields);\n    }\n\n\n}\n\nexport default DataModel;\n","import { DataFormat } from './enums';\n\nexport default {\n    dataFormat: DataFormat.AUTO\n};\n","/**\n * DataFormat Enum defines the format of the input data.\n * Based on the format of the data the respective adapter is loaded.\n *\n * @readonly\n * @enum {string}\n */\nconst DataFormat = {\n    FLAT_JSON: 'FlatJSON',\n    DSV_STR: 'DSVStr',\n    DSV_ARR: 'DSVArr',\n    AUTO: 'Auto'\n};\n\nexport default DataFormat;\n","/**\n * DimensionSubtype enum defines the sub types of the Dimensional Field.\n *\n * @readonly\n * @enum {string}\n */\nconst DimensionSubtype = {\n    CATEGORICAL: 'categorical',\n    TEMPORAL: 'temporal',\n    BINNED: 'binned'\n};\n\nexport default DimensionSubtype;\n","/**\n * FieldType enum defines the high level field based on which visuals are controlled.\n * Measure in a high level is numeric field and Dimension in a high level is string field.\n *\n * @readonly\n * @enum {string}\n */\nconst FieldType = {\n    MEASURE: 'measure',\n    DIMENSION: 'dimension'\n};\n\nexport default FieldType;\n","/**\n * Filtering mode enum defines the filering modes of DataModel.\n *\n * @readonly\n * @enum {string}\n */\nconst FilteringMode = {\n    NORMAL: 'normal',\n    INVERSE: 'inverse',\n    ALL: 'all'\n};\n\nexport default FilteringMode;\n","/**\n * Group by function names\n *\n * @readonly\n * @enum {string}\n */\nconst GROUP_BY_FUNCTIONS = {\n    SUM: 'sum',\n    AVG: 'avg',\n    MIN: 'min',\n    MAX: 'max',\n    FIRST: 'first',\n    LAST: 'last',\n    COUNT: 'count',\n    STD: 'std'\n};\n\nexport default GROUP_BY_FUNCTIONS;\n","/**\n * FilteringMode determines if resultant DataModel should be created from selection set or rejection set.\n *\n * The following modes are available\n * - `NORMAL`: Only entries from selection set are included in the resulatant DataModel instance\n * - `INVERSE`: Only entries from rejection set are included in the resulatant DataModel instance\n * - ALL: Both the entries from selection and rejection set are returned in two different DataModel instance\n */\n\nexport { default as DataFormat } from './data-format';\nexport { default as DimensionSubtype } from './dimension-subtype';\nexport { default as MeasureSubtype } from './measure-subtype';\nexport { default as FieldType } from './field-type';\nexport { default as FilteringMode } from './filtering-mode';\nexport { default as GROUP_BY_FUNCTIONS } from './group-by-functions';\n","/**\n * MeasureSubtype enum defines the sub types of the Measure Field.\n *\n * @readonly\n * @enum {string}\n */\nconst MeasureSubtype = {\n    CONTINUOUS: 'continuous'\n};\n\nexport default MeasureSubtype;\n","import DataModel from './datamodel';\nimport {\n  compose,\n  bin,\n  select,\n  project,\n  groupby as groupBy,\n  calculateVariable,\n  sort,\n  crossProduct,\n  difference,\n  naturalJoin,\n  leftOuterJoin,\n  rightOuterJoin,\n  fullOuterJoin,\n  union,\n  rowDiffsetIterator\n} from './operator';\nimport * as Stats from './stats';\nimport * as enums from './enums';\nimport { DataConverter } from './converter';\nimport { DateTimeFormatter } from './utils';\nimport { DataFormat, FilteringMode, DM_DERIVATIVES } from './constants';\nimport InvalidAwareTypes from './invalid-aware-types';\nimport pkg from '../package.json';\nimport * as FieldsUtility from './fields';\n\nconst Operators = {\n    compose,\n    bin,\n    select,\n    project,\n    groupBy,\n    calculateVariable,\n    sort,\n    crossProduct,\n    difference,\n    naturalJoin,\n    leftOuterJoin,\n    rightOuterJoin,\n    fullOuterJoin,\n    union,\n    rowDiffsetIterator\n};\n\nconst version = pkg.version;\nObject.assign(DataModel, {\n    Operators,\n    Stats,\n    DM_DERIVATIVES,\n    DateTimeFormatter,\n    DataFormat,\n    FilteringMode,\n    InvalidAwareTypes,\n    version,\n    DataConverter,\n    FieldsUtility\n}, enums);\n\nexport default DataModel;\n","import { FieldType, DimensionSubtype, MeasureSubtype } from './enums';\nimport { fieldRegistry } from './fields';\n\n/**\n * Creates a field instance according to the provided data and schema.\n *\n * @param {Array} data - The field data array.\n * @param {Object} schema - The field schema object.\n * @return {Field} Returns the newly created field instance.\n */\nfunction createUnitField(data, schema) {\n    data = data || [];\n\n    if (fieldRegistry.has(schema.subtype)) {\n        return fieldRegistry.get(schema.subtype)\n                        .BUILDER\n                        .fieldName(schema.name)\n                        .schema(schema)\n                        .data(data)\n                        .rowDiffset(`0-${data.length - 1}`)\n                        .build();\n    }\n    return fieldRegistry\n                    .get(schema.type === FieldType.MEASURE ? MeasureSubtype.CONTINUOUS : DimensionSubtype.CATEGORICAL)\n                    .BUILDER\n                    .fieldName(schema.name)\n                    .schema(schema)\n                    .data(data)\n                    .rowDiffset(`0-${data.length - 1}`)\n                    .build();\n}\n\n\n/**\n * Creates a field instance from partialField and rowDiffset.\n *\n * @param {PartialField} partialField - The corresponding partial field.\n * @param {string} rowDiffset - The data subset config.\n * @return {Field} Returns the newly created field instance.\n */\nexport function createUnitFieldFromPartial(partialField, rowDiffset) {\n    const { schema } = partialField;\n\n    if (fieldRegistry.has(schema.subtype)) {\n        return fieldRegistry.get(schema.subtype)\n                        .BUILDER\n                        .partialField(partialField)\n                        .rowDiffset(rowDiffset)\n                        .build();\n    }\n    return fieldRegistry\n                    .get(schema.type === FieldType.MEASURE ? MeasureSubtype.CONTINUOUS : DimensionSubtype.CATEGORICAL)\n                    .BUILDER\n                    .partialField(partialField)\n                    .rowDiffset(rowDiffset)\n                    .build();\n}\n\n/**\n * Creates the field instances with input data and schema.\n *\n * @param {Array} dataColumn - The data array for fields.\n * @param {Array} schema - The schema array for fields.\n * @param {Array} headers - The array of header names.\n * @return {Array.<Field>} Returns an array of newly created field instances.\n */\nexport function createFields(dataColumn, schema, headers) {\n    const headersObj = {};\n\n    if (!(headers && headers.length)) {\n        headers = schema.map(item => item.name);\n    }\n\n    headers.forEach((header, i) => {\n        headersObj[header] = i;\n    });\n\n    return schema.map(item => createUnitField(dataColumn[headersObj[item.name]], item));\n}\n","import { FieldType } from './enums';\nimport { getUniqueId } from './utils';\n\nconst fieldStore = {\n    data: {},\n\n    createNamespace (fieldArr, name) {\n        const dataId = name || getUniqueId();\n\n        this.data[dataId] = {\n            name: dataId,\n            fields: fieldArr,\n\n            fieldsObj () {\n                let fieldsObj = this._cachedFieldsObj;\n\n                if (!fieldsObj) {\n                    fieldsObj = this._cachedFieldsObj = {};\n                    this.fields.forEach((field) => {\n                        fieldsObj[field.name()] = field;\n                    });\n                }\n                return fieldsObj;\n            },\n            getMeasure () {\n                let measureFields = this._cachedMeasure;\n\n                if (!measureFields) {\n                    measureFields = this._cachedMeasure = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.MEASURE) {\n                            measureFields[field.name()] = field;\n                        }\n                    });\n                }\n                return measureFields;\n            },\n            getDimension () {\n                let dimensionFields = this._cachedDimension;\n\n                if (!this._cachedDimension) {\n                    dimensionFields = this._cachedDimension = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.DIMENSION) {\n                            dimensionFields[field.name()] = field;\n                        }\n                    });\n                }\n                return dimensionFields;\n            },\n        };\n        return this.data[dataId];\n    },\n};\n\nexport default fieldStore;\n","import Dimension from '../dimension';\nimport BinnedParser from '../parsers/binned-parser';\n\n/**\n * Represents binned field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Binned extends Dimension {\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the last and first values of bins config array.\n     */\n    calculateDataDomain () {\n        const binsArr = this.partialField.schema.bins;\n        return [binsArr[0], binsArr[binsArr.length - 1]];\n    }\n\n    /**\n     * Returns the bins config provided while creating the field instance.\n     *\n     * @public\n     * @return {Array} Returns the bins array config.\n     */\n    bins () {\n        return this.partialField.schema.bins;\n    }\n\n    static parser() {\n        return new BinnedParser();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { DimensionSubtype } from '../../enums';\nimport Dimension from '../dimension';\nimport CategoricalParser from '../parsers/categorical-parser';\n/**\n * Represents categorical field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Categorical extends Dimension {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return DimensionSubtype.CATEGORICAL;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n        return domain;\n    }\n\n    static parser() {\n        return new CategoricalParser();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { MeasureSubtype } from '../../enums';\nimport Measure from '../measure';\nimport InvalidAwareTypes from '../../invalid-aware-types';\nimport ContinuousParser from '../parsers/continuous-parser';\n\n/**\n * Represents continuous field subtype.\n *\n * @public\n * @class\n * @extends Measure\n */\nexport default class Continuous extends Measure {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return MeasureSubtype.CONTINUOUS;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the min and max values.\n     */\n    calculateDataDomain () {\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum instanceof InvalidAwareTypes) {\n                return;\n            }\n\n            if (datum < min) {\n                min = datum;\n            }\n            if (datum > max) {\n                max = datum;\n            }\n        });\n\n        return [min, max];\n    }\n\n    static parser() {\n        return new ContinuousParser();\n    }\n}\n","import Field from '../field';\n\n/**\n * Represents dimension field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Dimension extends Field {\n    /**\n     * Returns the domain for the dimension field.\n     *\n     * @override\n     * @public\n     * @return {any} Returns the calculated domain.\n     */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @abstract\n     */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n     /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import Categorical from './categorical';\nimport Temporal from './temporal';\nimport Binned from './binned';\nimport Continuous from './continuous';\nimport { DimensionSubtype, MeasureSubtype } from '../enums';\n\n\nclass FieldTypeRegistry {\n    constructor() {\n        this._fieldType = new Map();\n    }\n\n    registerFieldType(subtype, dimension) {\n        this._fieldType.set(subtype, dimension);\n        return this;\n    }\n\n    has(type) {\n        return this._fieldType.has(type);\n    }\n\n    get(type) {\n        return this._fieldType.get(type);\n    }\n}\n\nconst registerDefaultFields = (store) => {\n    store\n                    .registerFieldType(DimensionSubtype.CATEGORICAL, Categorical)\n                    .registerFieldType(DimensionSubtype.TEMPORAL, Temporal)\n                    .registerFieldType(DimensionSubtype.BINNED, Binned)\n                    .registerFieldType(MeasureSubtype.CONTINUOUS, Continuous);\n};\n\nconst fieldRegistry = (function () {\n    let store = null;\n    function getStore () {\n        store = new FieldTypeRegistry();\n        registerDefaultFields(store);\n        return store;\n    }\n    return store || getStore();\n}());\n\nexport default fieldRegistry;\n\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport PartialField from '../partial-field';\n\n/**\n * In {@link DataModel}, every tabular data consists of column, a column is stored as field.\n * Field contains all the data for a given column in an array.\n *\n * Each record consists of several fields; the fields of all records form the columns.\n * Examples of fields: name, gender, sex etc.\n *\n * In DataModel, each field can have multiple attributes which describes its data and behaviour.\n * A field can have two types of data: Measure and Dimension.\n *\n * A Dimension Field is the context on which a data is categorized and the measure is the numerical values that\n * quantify the data set.\n * In short a dimension is the lens through which you are looking at your measure data.\n *\n * Refer to {@link Schema} to get info about possible field attributes.\n *\n * @public\n * @class\n */\nexport default class Field {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        this.partialField = partialField;\n        this.rowDiffset = rowDiffset;\n    }\n\n    static parser() {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Generates the field type specific domain.\n     *\n     * @public\n     * @abstract\n     */\n    domain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the the field schema.\n     *\n     * @public\n     * @return {string} Returns the field schema.\n     */\n    schema () {\n        return this.partialField.schema;\n    }\n\n    /**\n     * Returns the name of the field.\n     *\n     * @public\n     * @return {string} Returns the name of the field.\n     */\n    name () {\n        return this.partialField.name;\n    }\n\n    /**\n     * Returns the type of the field.\n     *\n     * @public\n     * @return {string} Returns the type of the field.\n     */\n    type () {\n        return this.partialField.schema.type;\n    }\n\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return this.partialField.schema.subtype;\n    }\n\n    /**\n     * Returns the description of the field.\n     *\n     * @public\n     * @return {string} Returns the description of the field.\n     */\n    description () {\n        return this.partialField.schema.description;\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @public\n     * @return {string} Returns the display name of the field.\n     */\n    displayName () {\n        return this.partialField.schema.displayName || this.partialField.schema.name;\n    }\n\n    /**\n     * Returns the data associated with the field.\n     *\n     * @public\n     * @return {Array} Returns the data.\n     */\n    data () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            data.push(this.partialField.data[i]);\n        });\n        return data;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @abstract\n     */\n    formattedData () {\n        throw new Error('Not yet implemented');\n    }\n\n    static get BUILDER() {\n        const builder = {\n            _params: {},\n            _context: this,\n            fieldName(name) {\n                this._params.name = name;\n                return this;\n            },\n            schema(schema) {\n                this._params.schema = schema;\n                return this;\n            },\n            data(data) {\n                this._params.data = data;\n                return this;\n            },\n            partialField(partialField) {\n                this._params.partialField = partialField;\n                return this;\n            },\n            rowDiffset(rowDiffset) {\n                this._params.rowDiffset = rowDiffset;\n                return this;\n            },\n            build() {\n                let partialField = null;\n                if (this._params.partialField instanceof PartialField) {\n                    partialField = this._params.partialField;\n                } else if (this._params.schema && this._params.data) {\n                    partialField = new PartialField(this._params.name,\n                                        this._params.data,\n                                        this._params.schema,\n                                        this._context.parser());\n                }\n                else {\n                    throw new Error('Invalid Field parameters');\n                }\n                return new this._context(partialField, this._params.rowDiffset);\n            }\n        };\n        return builder;\n    }\n}\n","export { default as Dimension } from './dimension';\nexport { default as Measure } from './measure';\nexport { default as FieldParser } from './parsers/field-parser';\nexport { default as fieldRegistry } from './field-registry';\nexport { columnMajor } from '../utils';\n","import { formatNumber } from '../../utils';\nimport { defaultReducerName } from '../../operator/group-by-function';\nimport Field from '../field';\n\n/**\n * Represents measure field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Measure extends Field {\n  /**\n   * Returns the domain for the measure field.\n   *\n   * @override\n   * @public\n   * @return {any} Returns the calculated domain.\n   */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n  /**\n   * Returns the unit of the measure field.\n   *\n   * @public\n   * @return {string} Returns unit of the field.\n   */\n    unit () {\n        return this.partialField.schema.unit;\n    }\n\n  /**\n   * Returns the aggregation function name of the measure field.\n   *\n   * @public\n   * @return {string} Returns aggregation function name of the field.\n   */\n    defAggFn () {\n        return this.partialField.schema.defAggFn || defaultReducerName;\n    }\n\n  /**\n   * Returns the number format of the measure field.\n   *\n   * @public\n   * @return {Function} Returns number format of the field.\n   */\n    numberFormat () {\n        const { numberFormat } = this.partialField.schema;\n        return numberFormat instanceof Function ? numberFormat : formatNumber;\n    }\n\n  /**\n   * Calculates the corresponding field domain.\n   *\n   * @public\n   * @abstract\n   */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the binned values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class BinnedParser extends FieldParser {\n  /**\n   * Parses a single binned value of a field and returns the sanitized value.\n   *\n   * @public\n   * @param {string} val - The value of the field.\n   * @return {string} Returns the sanitized value.\n   */\n    parse (val) {\n        const regex = /^\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*-\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*$/;\n        val = String(val);\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let matched = val.match(regex);\n            result = matched ? `${Number.parseFloat(matched[1])}-${Number.parseFloat(matched[2])}`\n                             : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the categorical values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class CategoricalParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the stringified form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the stringified value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            result = String(val).trim();\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the continuous values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class ContinuousParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the number form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the number value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let parsedVal = parseFloat(val, 10);\n            result = Number.isNaN(parsedVal) ? InvalidAwareTypes.NA : parsedVal;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","/**\n * A interface to represent a parser which is responsible to parse the field.\n *\n * @public\n * @interface\n */\nexport default class FieldParser {\n    /**\n     * Parses a single value of a field and return the sanitized form.\n     *\n     * @public\n     * @abstract\n     */\n    parse () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import { DateTimeFormatter } from '../../../utils';\nimport FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the temporal values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class TemporalParser extends FieldParser {\n\n    /**\n     * Parses a single value of a field and returns the millisecond value.\n     *\n     * @public\n     * @param {string|number} val - The value of the field.\n     * @return {number} Returns the millisecond value.\n     */\n    parse (val, { format }) {\n        let result;\n        // check if invalid date value\n        if (!this._dtf) {\n            this._dtf = new DateTimeFormatter(format);\n        }\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let nativeDate = this._dtf.getNativeDate(val);\n            result = nativeDate ? nativeDate.getTime() : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","/**\n * Stores the full data and the metadata of a field. It provides\n * a single source of data from which the future Field\n * instance can get a subset of it with a rowDiffset config.\n *\n * @class\n * @public\n */\nexport default class PartialField {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} name - The name of the field.\n     * @param {Array} data - The data array.\n     * @param {Object} schema - The schema object of the corresponding field.\n     * @param {FieldParser} parser - The parser instance corresponding to that field.\n     */\n    constructor (name, data, schema, parser) {\n        this.name = name;\n        this.schema = schema;\n        this.parser = parser;\n        this.data = this._sanitize(data);\n    }\n\n    /**\n     * Sanitizes the field data.\n     *\n     * @private\n     * @param {Array} data - The actual input data.\n     * @return {Array} Returns the sanitized data.\n     */\n    _sanitize (data) {\n        return data.map(datum => this.parser.parse(datum, { format: this.schema.format }));\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport Dimension from '../dimension';\nimport { DateTimeFormatter } from '../../utils';\nimport InvalidAwareTypes from '../../invalid-aware-types';\nimport TemporalParser from '../parsers/temporal-parser';\n\n/**\n * Represents temporal field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Temporal extends Dimension {\n     /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        super(partialField, rowDiffset);\n\n        this._cachedMinDiff = null;\n    }\n\n     /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be\n        // occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n\n        return domain;\n    }\n\n\n    /**\n     * Calculates the minimum consecutive difference from the associated field data.\n     *\n     * @public\n     * @return {number} Returns the minimum consecutive diff in milliseconds.\n     */\n    minimumConsecutiveDifference () {\n        if (this._cachedMinDiff) {\n            return this._cachedMinDiff;\n        }\n\n        const sortedData = this.data().filter(item => !(item instanceof InvalidAwareTypes)).sort((a, b) => a - b);\n        const arrLn = sortedData.length;\n        let minDiff = Number.POSITIVE_INFINITY;\n        let prevDatum;\n        let nextDatum;\n        let processedCount = 0;\n\n        for (let i = 1; i < arrLn; i++) {\n            prevDatum = sortedData[i - 1];\n            nextDatum = sortedData[i];\n\n            if (nextDatum === prevDatum) {\n                continue;\n            }\n\n            minDiff = Math.min(minDiff, nextDatum - sortedData[i - 1]);\n            processedCount++;\n        }\n\n        if (!processedCount) {\n            minDiff = null;\n        }\n        this._cachedMinDiff = minDiff;\n\n        return this._cachedMinDiff;\n    }\n\n    /**\n     * Returns the format specified in the input schema while creating field.\n     *\n     * @public\n     * @return {string} Returns the datetime format.\n     */\n    format () {\n        return this.partialField.schema.format;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data\n     * If data is of type invalid or has missing format use the raw value\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        const data = [];\n        const dataFormat = this.format();\n\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            // If value is of invalid type or format is missing\n            if (InvalidAwareTypes.isInvalid(datum) || (!dataFormat && Number.isFinite(datum))) {\n                // Use the invalid map value or the raw value\n                const parsedDatum = InvalidAwareTypes.getInvalidType(datum) || datum;\n                data.push(parsedDatum);\n            } else {\n                data.push(DateTimeFormatter.formatAs(datum, dataFormat));\n            }\n        });\n        return data;\n    }\n\n    static parser() {\n        return new TemporalParser();\n    }\n}\n\n","import { FieldType, FilteringMode, DimensionSubtype, MeasureSubtype, DataFormat } from './enums';\nimport fieldStore from './field-store';\nimport Value from './value';\nimport {\n    rowDiffsetIterator\n} from './operator';\nimport { DM_DERIVATIVES, LOGICAL_OPERATORS, ROW_ID } from './constants';\nimport { createFields, createUnitFieldFromPartial } from './field-creator';\nimport defaultConfig from './default-config';\nimport { converterStore } from './converter';\nimport { fieldRegistry } from './fields';\nimport { extend2, detectDataFormat } from './utils';\n\n/**\n * Prepares the selection data.\n */\nfunction prepareSelectionData (fields, formattedData, rawData, i) {\n    const resp = {};\n\n    for (const [key, field] of fields.entries()) {\n        resp[field.name()] = new Value(formattedData[key][i], rawData[key][i], field);\n    }\n    return resp;\n}\n\nexport function prepareJoinData (fields) {\n    const resp = {};\n\n    for (const key in fields) {\n        resp[key] = new Value(fields[key].formattedValue, fields[key].rawValue, key);\n    }\n    return resp;\n}\n\nexport const updateFields = ([rowDiffset, colIdentifier], partialFieldspace, fieldStoreName) => {\n    let collID = colIdentifier.length ? colIdentifier.split(',') : [];\n    let partialFieldMap = partialFieldspace.fieldsObj();\n    let newFields = collID.map(coll => createUnitFieldFromPartial(partialFieldMap[coll].partialField, rowDiffset));\n    return fieldStore.createNamespace(newFields, fieldStoreName);\n};\n\nexport const persistCurrentDerivation = (model, operation, config = {}, criteriaFn) => {\n    if (operation === DM_DERIVATIVES.COMPOSE) {\n        model._derivation.length = 0;\n        model._derivation.push(...criteriaFn);\n    } else {\n        model._derivation.push({\n            op: operation,\n            meta: config,\n            criteria: criteriaFn\n        });\n    }\n};\nexport const persistAncestorDerivation = (sourceDm, newDm) => {\n    newDm._ancestorDerivation.push(...sourceDm._ancestorDerivation, ...sourceDm._derivation);\n};\n\nexport const persistDerivations = (sourceDm, model, operation, config = {}, criteriaFn) => {\n    persistCurrentDerivation(model, operation, config, criteriaFn);\n    persistAncestorDerivation(sourceDm, model);\n};\n\nconst selectModeMap = {\n    [FilteringMode.NORMAL]: {\n        diffIndex: ['rowDiffset'],\n        calcDiff: [true, false]\n    },\n    [FilteringMode.INVERSE]: {\n        diffIndex: ['rejectRowDiffset'],\n        calcDiff: [false, true]\n    },\n    [FilteringMode.ALL]: {\n        diffIndex: ['rowDiffset', 'rejectRowDiffset'],\n        calcDiff: [true, true]\n    }\n};\n\nconst generateRowDiffset = (rowDiffset, i, lastInsertedValue) => {\n    if (lastInsertedValue !== -1 && i === (lastInsertedValue + 1)) {\n        const li = rowDiffset.length - 1;\n\n        rowDiffset[li] = `${rowDiffset[li].split('-')[0]}-${i}`;\n    } else {\n        rowDiffset.push(`${i}`);\n    }\n};\n\nexport const selectRowDiffsetIterator = (rowDiffset, checker, mode) => {\n    let lastInsertedValueSel = -1;\n    let lastInsertedValueRej = -1;\n    const newRowDiffSet = [];\n    const rejRowDiffSet = [];\n\n    const [shouldSelect, shouldReject] = selectModeMap[mode].calcDiff;\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        const checkerResult = checker(i);\n        checkerResult && shouldSelect && generateRowDiffset(newRowDiffSet, i, lastInsertedValueSel);\n        !checkerResult && shouldReject && generateRowDiffset(rejRowDiffSet, i, lastInsertedValueRej);\n    });\n    return {\n        rowDiffset: newRowDiffSet.join(','),\n        rejectRowDiffset: rejRowDiffSet.join(',')\n    };\n};\n\n\nexport const rowSplitDiffsetIterator = (rowDiffset, checker, mode, dimensionArr, fieldStoreObj) => {\n    let lastInsertedValue = {};\n    const splitRowDiffset = {};\n    const dimensionMap = {};\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        if (checker(i)) {\n            let hash = '';\n\n            let dimensionSet = { keys: {} };\n\n            dimensionArr.forEach((_) => {\n                const data = fieldStoreObj[_].partialField.data[i];\n                hash = `${hash}-${data}`;\n                dimensionSet.keys[_] = data;\n            });\n\n            if (splitRowDiffset[hash] === undefined) {\n                splitRowDiffset[hash] = [];\n                lastInsertedValue[hash] = -1;\n                dimensionMap[hash] = dimensionSet;\n            }\n\n            generateRowDiffset(splitRowDiffset[hash], i, lastInsertedValue[hash]);\n            lastInsertedValue[hash] = i;\n        }\n    });\n\n    return {\n        splitRowDiffset,\n        dimensionMap\n    };\n};\n\n\nexport const selectHelper = (clonedDm, selectFn, config, sourceDm, iterator) => {\n    let cachedStore = {};\n    let cloneProvider = () => sourceDm.detachedRoot();\n    const { mode } = config;\n    const rowDiffset = clonedDm._rowDiffset;\n    const cachedValueObjects = clonedDm._partialFieldspace._cachedValueObjects;\n\n    const selectorHelperFn = index => selectFn(\n        cachedValueObjects[index],\n        index,\n        cloneProvider,\n        cachedStore\n    );\n\n    return iterator(rowDiffset, selectorHelperFn, mode);\n};\n\nexport const cloneWithAllFields = (model) => {\n    const clonedDm = model.clone(false);\n    const partialFieldspace = model.getPartialFieldspace();\n    clonedDm._colIdentifier = partialFieldspace.fields.map(f => f.name()).join(',');\n\n    // flush out cached namespace values on addition of new fields\n    partialFieldspace._cachedFieldsObj = null;\n    partialFieldspace._cachedDimension = null;\n    partialFieldspace._cachedMeasure = null;\n    clonedDm.__calculateFieldspace().calculateFieldsConfig();\n\n    return clonedDm;\n};\n\nconst getKey = (arr, data, fn, rowId) => {\n    let key = fn(arr, data, 0, rowId);\n\n    for (let i = 1, len = arr.length; i < len; i++) {\n        key = `${key},${fn(arr, data, i, rowId)}`;\n    }\n    return key;\n};\n\nconst keyFn = (arr, fields, idx, rowId) => {\n    const field = arr[idx];\n    const val = field === ROW_ID ? rowId : fields[field].internalValue;\n    return val;\n};\n\nconst domainChecker = (val, domain) => {\n    const domainArr = domain[0] instanceof Array ? domain : [domain];\n    return domainArr.some(dom => val >= dom[0] && val <= dom[1]);\n};\n\nconst boundsChecker = {\n    [MeasureSubtype.CONTINUOUS]: domainChecker,\n    [DimensionSubtype.TEMPORAL]: domainChecker\n};\n\nconst isWithinDomain = (value, domain, fieldType) => boundsChecker[fieldType](value, domain);\n\nexport const filterPropagationModel = (model, propModels, config = {}) => {\n    let fns = [];\n    const operation = config.operation || LOGICAL_OPERATORS.AND;\n    const { filterByDim = true, filterByMeasure = false, clone = true } = config;\n    const clonedModel = clone ? cloneWithAllFields(model) : model;\n    const modelFieldsConfig = clonedModel.getFieldsConfig();\n\n    if (!propModels.length) {\n        fns = [() => false];\n    } else {\n        fns = propModels.map(propModel => (({ criteria = {} }) => {\n            const { identifiers = [[], []], range } = criteria;\n            let [fieldNames = [], values = []] = identifiers;\n            const indices = fieldNames.reduce((map, name, i) => {\n                map[name] = i;\n                return map;\n            }, {});\n            fieldNames = fieldNames.filter(field => (field in modelFieldsConfig &&\n                modelFieldsConfig[field].def.type === FieldType.DIMENSION) || field === ROW_ID);\n            const dLen = fieldNames.length;\n            const valuesMap = {};\n\n            if (dLen) {\n                for (let i = 1, len = identifiers.length; i < len; i++) {\n                    const row = identifiers[i];\n                    const key = `${fieldNames.map((field) => {\n                        const idx = indices[field];\n                        return row[idx];\n                    })}`;\n                    valuesMap[key] = 1;\n                }\n            }\n            let rangeKeys = Object.keys(range || {}).filter(field => field in modelFieldsConfig);\n            const hasData = values.length || rangeKeys.length;\n\n            if (!filterByMeasure) {\n                rangeKeys = rangeKeys.filter(field => modelFieldsConfig[field].def.type !== FieldType.MEASURE);\n            }\n\n            if (!filterByDim) {\n                rangeKeys = rangeKeys.filter(field => modelFieldsConfig[field].def.type !== FieldType.DIMENSION);\n            }\n\n            return hasData ? (fields, i) => {\n                let present = true;\n                if (filterByDim) {\n                    present = dLen ? valuesMap[getKey(fieldNames, fields, keyFn, i)] : true;\n                }\n\n                return rangeKeys.every((field) => {\n                    const val = fields[field].internalValue;\n                    return isWithinDomain(val, range[field], modelFieldsConfig[field].def.subtype);\n                }) && present;\n            } : () => false;\n        })(propModel));\n    }\n\n    let filteredModel;\n    if (operation === LOGICAL_OPERATORS.AND) {\n        filteredModel = clonedModel.select((fields, i) => fns.every(fn => fn(fields, i)), {\n            saveChild: false\n        });\n    } else {\n        filteredModel = clonedModel.select((fields, i) => fns.some(fn => fn(fields, i)), {\n            saveChild: false\n        });\n    }\n\n    return filteredModel;\n};\n\n\nexport const splitWithSelect = (sourceDm, dimensionArr, reducerFn = val => val, config) => {\n    const {\n        saveChild,\n    } = config;\n    const fieldStoreObj = sourceDm.getFieldspace().fieldsObj();\n\n    const {\n        splitRowDiffset,\n        dimensionMap\n    } = selectHelper(\n        sourceDm.clone(saveChild),\n        reducerFn,\n        config,\n        sourceDm,\n        (...params) => rowSplitDiffsetIterator(...params, dimensionArr, fieldStoreObj)\n        );\n\n    const clonedDMs = [];\n    Object.keys(splitRowDiffset).sort().forEach((e) => {\n        if (splitRowDiffset[e]) {\n            const cloned = sourceDm.clone(saveChild);\n            const derivation = dimensionMap[e];\n            cloned._rowDiffset = splitRowDiffset[e].join(',');\n            cloned.__calculateFieldspace().calculateFieldsConfig();\n\n            const derivationFormula = fields => dimensionArr.every(_ => fields[_].internalValue === derivation.keys[_]);\n            // Store reference to child model and selector function\n            if (saveChild) {\n                persistDerivations(sourceDm, cloned, DM_DERIVATIVES.SELECT, config, derivationFormula);\n            }\n            cloned._derivation[cloned._derivation.length - 1].meta = dimensionMap[e];\n\n            clonedDMs.push(cloned);\n        }\n    });\n\n\n    return clonedDMs;\n};\nexport const addDiffsetToClonedDm = (clonedDm, rowDiffset, sourceDm, selectConfig, selectFn) => {\n    clonedDm._rowDiffset = rowDiffset;\n    clonedDm.__calculateFieldspace().calculateFieldsConfig();\n    persistDerivations(\n        sourceDm,\n        clonedDm,\n        DM_DERIVATIVES.SELECT,\n         { config: selectConfig },\n          selectFn\n    );\n};\n\n\nexport const cloneWithSelect = (sourceDm, selectFn, selectConfig, cloneConfig) => {\n    let extraCloneDm = {};\n\n    let { mode } = selectConfig;\n\n    const cloned = sourceDm.clone(cloneConfig.saveChild);\n    const setOfRowDiffsets = selectHelper(\n        cloned,\n        selectFn,\n        selectConfig,\n        sourceDm,\n        selectRowDiffsetIterator\n    );\n    const diffIndex = selectModeMap[mode].diffIndex;\n\n    addDiffsetToClonedDm(cloned, setOfRowDiffsets[diffIndex[0]], sourceDm, selectConfig, selectFn);\n\n    if (diffIndex.length > 1) {\n        extraCloneDm = sourceDm.clone(cloneConfig.saveChild);\n        addDiffsetToClonedDm(extraCloneDm, setOfRowDiffsets[diffIndex[1]], sourceDm, selectConfig, selectFn);\n        return [cloned, extraCloneDm];\n    }\n\n    return cloned;\n};\n\nexport const cloneWithProject = (sourceDm, projField, config, allFields) => {\n    const cloned = sourceDm.clone(config.saveChild);\n    let projectionSet = projField;\n    if (config.mode === FilteringMode.INVERSE) {\n        projectionSet = allFields.filter(fieldName => projField.indexOf(fieldName) === -1);\n    }\n    // cloned._colIdentifier = sourceDm._colIdentifier.split(',')\n    //                         .filter(coll => projectionSet.indexOf(coll) !== -1).join();\n    cloned._colIdentifier = projectionSet.join(',');\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n\n    persistDerivations(\n        sourceDm,\n        cloned,\n        DM_DERIVATIVES.PROJECT,\n        { projField, config, actualProjField: projectionSet },\n        null\n    );\n\n    return cloned;\n};\n\n\nexport const splitWithProject = (sourceDm, projFieldSet, config, allFields) =>\n    projFieldSet.map(projFields =>\n        cloneWithProject(sourceDm, projFields, config, allFields));\n\nexport const sanitizeUnitSchema = (unitSchema) => {\n    // Do deep clone of the unit schema as the user might change it later.\n    unitSchema = extend2({}, unitSchema);\n    if (!unitSchema.type) {\n        unitSchema.type = FieldType.DIMENSION;\n    }\n\n    if (!unitSchema.subtype) {\n        switch (unitSchema.type) {\n        case FieldType.MEASURE:\n            unitSchema.subtype = MeasureSubtype.CONTINUOUS;\n            break;\n        default:\n        case FieldType.DIMENSION:\n            unitSchema.subtype = DimensionSubtype.CATEGORICAL;\n            break;\n        }\n    }\n\n    return unitSchema;\n};\n\nexport const validateUnitSchema = (unitSchema) => {\n    const { type, subtype, name } = unitSchema;\n    if (type === FieldType.DIMENSION || type === FieldType.MEASURE) {\n        if (!fieldRegistry.has(subtype)) {\n            throw new Error(`DataModel doesn't support measure field subtype ${subtype} used for ${name} field`);\n        }\n    } else {\n        throw new Error(`DataModel doesn't support field type ${type} used for ${name} field`);\n    }\n};\n\nexport const sanitizeAndValidateSchema = schema => schema.map((unitSchema) => {\n    unitSchema = sanitizeUnitSchema(unitSchema);\n    validateUnitSchema(unitSchema);\n    return unitSchema;\n});\n\nexport const resolveFieldName = (schema, dataHeader) => {\n    schema.forEach((unitSchema) => {\n        const fieldNameAs = unitSchema.as;\n        if (!fieldNameAs) { return; }\n\n        const idx = dataHeader.indexOf(unitSchema.name);\n        dataHeader[idx] = fieldNameAs;\n        unitSchema.name = fieldNameAs;\n        delete unitSchema.as;\n    });\n};\n\nexport const updateData = (relation, data, schema, options) => {\n    schema = sanitizeAndValidateSchema(schema);\n    options = Object.assign(Object.assign({}, defaultConfig), options);\n    const converter = converterStore.get(options.dataFormat);\n\n\n    if (!converter) {\n        throw new Error(`No converter function found for ${options.dataFormat} format`);\n    }\n\n    const [header, formattedData] = converter.convert(data, schema, options);\n    resolveFieldName(schema, header);\n    const fieldArr = createFields(formattedData, schema, header);\n\n    // This will create a new fieldStore with the fields\n    const nameSpace = fieldStore.createNamespace(fieldArr, options.name);\n    relation._partialFieldspace = nameSpace;\n\n    // If data is provided create the default colIdentifier and rowDiffset\n    relation._rowDiffset = formattedData.length && formattedData[0].length ? `0-${formattedData[0].length - 1}` : '';\n\n    // This stores the value objects which is passed to the filter method when selection operation is done.\n    const valueObjects = [];\n    const { fields } = nameSpace;\n    const rawFieldsData = fields.map(field => field.data());\n    const formattedFieldsData = fields.map(field => field.formattedData());\n    rowDiffsetIterator(relation._rowDiffset, (i) => {\n        valueObjects[i] = prepareSelectionData(fields, formattedFieldsData, rawFieldsData, i);\n    });\n    nameSpace._cachedValueObjects = valueObjects;\n\n    relation._colIdentifier = (schema.map(_ => _.name)).join();\n    relation._dataFormat = options.dataFormat === DataFormat.AUTO ? detectDataFormat(data) : options.dataFormat;\n    return relation;\n};\n\nexport const fieldInSchema = (schema, field) => {\n    let i = 0;\n\n    for (; i < schema.length; ++i) {\n        if (field === schema[i].name) {\n            return {\n                name: field,\n                type: schema[i].subtype || schema[i].type,\n                index: i,\n            };\n        }\n    }\n    return null;\n};\n\nexport const getDerivationArguments = (derivation) => {\n    let params = [];\n    let operation;\n    operation = derivation.op;\n    switch (operation) {\n    case DM_DERIVATIVES.SELECT:\n        params = [derivation.criteria];\n        break;\n    case DM_DERIVATIVES.PROJECT:\n        params = [derivation.meta.actualProjField];\n        break;\n    case DM_DERIVATIVES.SORT:\n        params = [derivation.criteria];\n        break;\n    case DM_DERIVATIVES.GROUPBY:\n        operation = 'groupBy';\n        params = [derivation.meta.groupByString.split(','), derivation.criteria];\n        break;\n    default:\n        operation = null;\n    }\n\n    return {\n        operation,\n        params\n    };\n};\n\nconst applyExistingOperationOnModel = (propModel, dataModel) => {\n    const derivations = dataModel.getDerivations();\n    let selectionModel = propModel;\n\n    derivations.forEach((derivation) => {\n        if (!derivation) {\n            return;\n        }\n\n        const { operation, params } = getDerivationArguments(derivation);\n        if (operation) {\n            selectionModel = selectionModel[operation](...params, {\n                saveChild: false\n            });\n        }\n    });\n\n    return selectionModel;\n};\n\nconst getFilteredModel = (propModel, path) => {\n    for (let i = 0, len = path.length; i < len; i++) {\n        const model = path[i];\n        propModel = applyExistingOperationOnModel(propModel, model);\n    }\n    return propModel;\n};\n\nconst propagateIdentifiers = (dataModel, propModel, config = {}, propModelInf = {}) => {\n    const nonTraversingModel = propModelInf.nonTraversingModel;\n    const excludeModels = propModelInf.excludeModels || [];\n    const criterias = propModelInf.criteria;\n\n    if (dataModel === nonTraversingModel) {\n        return;\n    }\n\n    const propagate = excludeModels.length ? excludeModels.indexOf(dataModel) === -1 : true;\n\n    propagate && dataModel.handlePropagation(propModel, config);\n\n    const children = dataModel._children;\n    children.forEach((child) => {\n        const matchingCriteria = criterias.filter(val => val.groupedModel === child);\n        let selectionModel = applyExistingOperationOnModel(propModel, child);\n\n        if (matchingCriteria.length) {\n            selectionModel = filterPropagationModel(selectionModel, matchingCriteria, {\n                filterByDim: false,\n                filterByMeasure: true,\n                clone: false\n            });\n        }\n        propagateIdentifiers(child, selectionModel, config, propModelInf);\n    });\n};\n\nexport const getRootGroupByModel = (model) => {\n    while (model._parent && model._derivation.find(d => d.op !== DM_DERIVATIVES.GROUPBY)) {\n        model = model._parent;\n    }\n    return model;\n};\n\nexport const getRootDataModel = (model) => {\n    while (model._parent) {\n        model = model._parent;\n    }\n    return model;\n};\n\nexport const getPathToRootModel = (model, path = []) => {\n    while (model._parent) {\n        path.push(model);\n        model = model._parent;\n    }\n    return path;\n};\n\nexport const propagateToAllDataModels = (identifiers, rootModels, propagationInf, config) => {\n    let criteria;\n    const { propagationNameSpace, propagateToSource } = propagationInf;\n    const propagationSourceId = propagationInf.sourceId;\n    const filterFn = (entry) => {\n        const filter = config.filterFn || (() => true);\n        return filter(entry, config);\n    };\n    const addGroupedModel = ({ config: conf, model }) => {\n        const { criteria: crit } = conf;\n        let groupedModel;\n\n        if (crit !== null && crit.fields.some(d => d.type === FieldType.MEASURE)) {\n            groupedModel = getRootGroupByModel(model);\n        }\n        return Object.assign({}, conf, {\n            groupedModel\n        });\n    };\n\n    let criterias = [];\n\n    if (identifiers === null) {\n        criterias = [{\n            criteria: []\n        }];\n        criteria = [];\n    } else {\n        let actionCriterias = Object.values(propagationNameSpace.mutableActions);\n        if (propagateToSource !== false) {\n            actionCriterias = actionCriterias.filter(d => d.config.sourceId !== propagationSourceId);\n        }\n\n        const filteredCriteria = actionCriterias.filter(filterFn);\n\n        const excludeModels = [];\n\n        if (propagateToSource !== false) {\n            const sourceActionCriterias = Object.values(propagationNameSpace.mutableActions);\n\n            sourceActionCriterias.forEach((actionInf) => {\n                const actionConf = actionInf.config;\n                if (actionConf.applyOnSource === false && actionConf.action === config.action &&\n                        actionConf.sourceId !== propagationSourceId) {\n                    excludeModels.push(actionInf.model);\n                    criteria = sourceActionCriterias.filter(d => d !== actionInf).map(addGroupedModel);\n                    criteria.length && criterias.push({\n                        criteria,\n                        models: actionInf.model,\n                        path: getPathToRootModel(actionInf.model)\n                    });\n                }\n            });\n        }\n\n\n        criteria = [].concat(...[...filteredCriteria.map(addGroupedModel), {\n            criteria: identifiers,\n            groupedModel: identifiers !== null && identifiers.fields.some(d => d.type === FieldType.MEASURE) ?\n                getRootGroupByModel(propagationInf.propagationSource) : null\n        }]).filter(d => d !== null);\n        criterias.push({\n            criteria,\n            excludeModels: [...excludeModels, ...config.excludeModels || []]\n        });\n    }\n\n    const rootModel = rootModels.model;\n\n    const propConfig = Object.assign({\n        sourceIdentifiers: identifiers,\n        propagationSourceId\n    }, config);\n\n    criterias.forEach((inf) => {\n        const { criteria: crit } = inf;\n        const propagationModel = filterPropagationModel(rootModel, crit);\n        const path = inf.path;\n\n        if (path) {\n            const filteredModel = getFilteredModel(propagationModel, path.reverse());\n            inf.models.handlePropagation(filteredModel, propConfig);\n        } else {\n            propagateIdentifiers(rootModel, propagationModel, propConfig, {\n                excludeModels: inf.excludeModels,\n                criteria: crit\n            });\n        }\n    });\n};\n\nexport const propagateImmutableActions = (propagationNameSpace, rootModel, propagationInf) => {\n    const immutableActions = propagationNameSpace.immutableActions;\n\n    for (const action in immutableActions) {\n        const actionInf = immutableActions[action];\n        const actionConf = actionInf.config;\n        const propagationSourceId = propagationInf.config.sourceId;\n        const filterImmutableAction = propagationInf.propConfig.filterImmutableAction ?\n            propagationInf.propConfig.filterImmutableAction(actionConf, propagationInf.config) : true;\n        if (actionConf.sourceId !== propagationSourceId && filterImmutableAction) {\n            const criteriaModel = actionConf.criteria;\n            propagateToAllDataModels(criteriaModel, {\n                model: rootModel,\n                groupByModel: getRootGroupByModel(actionInf.model)\n            }, {\n                propagationNameSpace,\n                propagateToSource: false,\n                sourceId: propagationSourceId,\n                propagationSource: actionInf.model\n            }, actionConf);\n        }\n    }\n};\n\nexport const addToPropNamespace = (propagationNameSpace, config = {}, model) => {\n    let sourceNamespace;\n    const isMutableAction = config.isMutableAction;\n    const criteria = config.criteria;\n    const key = `${config.action}-${config.sourceId}`;\n\n    if (isMutableAction) {\n        sourceNamespace = propagationNameSpace.mutableActions;\n    } else {\n        sourceNamespace = propagationNameSpace.immutableActions;\n    }\n\n    if (criteria === null) {\n        delete sourceNamespace[key];\n    } else {\n        sourceNamespace[key] = {\n            model,\n            config\n        };\n    }\n\n    return this;\n};\n\n\nexport const getNormalizedProFields = (projField, allFields, fieldConfig) => {\n    const normalizedProjField = projField.reduce((acc, field) => {\n        if (field.constructor.name === 'RegExp') {\n            acc.push(...allFields.filter(fieldName => fieldName.search(field) !== -1));\n        } else if (field in fieldConfig) {\n            acc.push(field);\n        }\n        return acc;\n    }, []);\n    return Array.from(new Set(normalizedProjField)).map(field => field.trim());\n};\n\n/**\n * Get the numberFormatted value if numberFormat present,\n * else returns the supplied value.\n * @param {Object} field Field Instance\n * @param {Number|String} value\n * @return {Number|String}\n */\nexport const getNumberFormattedVal = (field, value) => {\n    if (field.numberFormat) {\n        return field.numberFormat()(value);\n    }\n    return value;\n};\n","const DataModel = require('./export');\n\nmodule.exports = DataModel.default ? DataModel.default : DataModel;\n","/**\n * A parser to parser null, undefined, invalid and NIL values.\n *\n * @public\n * @class\n */\nclass InvalidAwareTypes {\n    /**\n     * Static method which gets/sets the invalid value registry.\n     *\n     * @public\n     * @param {Object} config - The custom configuration supplied by user.\n     * @return {Object} Returns the invalid values registry.\n     */\n    static invalidAwareVals (config) {\n        if (!config) {\n            return InvalidAwareTypes._invalidAwareValsMap;\n        }\n        return Object.assign(InvalidAwareTypes._invalidAwareValsMap, config);\n    }\n\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} value - The value of the invalid data type.\n     */\n    constructor (value) {\n        this._value = value;\n    }\n\n    /**\n     * Returns the current value of the instance.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    value () {\n        return this._value;\n    }\n\n    /**\n     * Returns the current value of the instance in string format.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    toString () {\n        return String(this._value);\n    }\n\n    static isInvalid(val) {\n        return (val instanceof InvalidAwareTypes) || !!InvalidAwareTypes.invalidAwareVals()[val];\n    }\n\n    static getInvalidType(val) {\n        return val instanceof InvalidAwareTypes ? val : InvalidAwareTypes.invalidAwareVals()[val];\n    }\n}\n\n/**\n * Enums for Invalid types.\n */\nInvalidAwareTypes.NULL = new InvalidAwareTypes('null');\nInvalidAwareTypes.NA = new InvalidAwareTypes('na');\nInvalidAwareTypes.NIL = new InvalidAwareTypes('nil');\n\n/**\n * Default Registry for mapping the invalid values.\n *\n * @private\n */\nInvalidAwareTypes._invalidAwareValsMap = {\n    invalid: InvalidAwareTypes.NA,\n    nil: InvalidAwareTypes.NIL,\n    null: InvalidAwareTypes.NULL,\n    undefined: InvalidAwareTypes.NA\n};\n\nexport default InvalidAwareTypes;\n","import { rowDiffsetIterator } from './row-diffset-iterator';\nimport InvalidAwareTypes from '../invalid-aware-types';\n\nconst generateBuckets = (binSize, start, end) => {\n    const buckets = [];\n    let next = start;\n\n    while (next < end) {\n        buckets.push(next);\n        next += binSize;\n    }\n    buckets.push(next);\n\n    return buckets;\n};\n\nconst findBucketRange = (bucketRanges, value) => {\n    let leftIdx = 0;\n    let rightIdx = bucketRanges.length - 1;\n    let midIdx;\n    let range;\n\n    // Here use binary search as the bucketRanges is a sorted array\n    while (leftIdx <= rightIdx) {\n        midIdx = leftIdx + Math.floor((rightIdx - leftIdx) / 2);\n        range = bucketRanges[midIdx];\n\n        if (value >= range.start && value < range.end) {\n            return range;\n        } else if (value >= range.end) {\n            leftIdx = midIdx + 1;\n        } else if (value < range.start) {\n            rightIdx = midIdx - 1;\n        }\n    }\n\n    return null;\n};\n\n /**\n  * Creates the bin data from input measure field and supplied configs.\n  *\n  * @param {Measure} measureField - The Measure field instance.\n  * @param {string} rowDiffset - The datamodel rowDiffset values.\n  * @param {Object} config - The config object.\n  * @return {Object} Returns the binned data and the corresponding bins.\n  */\nexport function createBinnedFieldData (measureField, rowDiffset, config) {\n    let { buckets, binsCount, binSize, start, end } = config;\n    const [dMin, dMax] = measureField.domain();\n\n    if (!buckets) {\n        start = (start !== 0 && (!start || start > dMin)) ? dMin : start;\n        end = (end !== 0 && (!end || end < dMax)) ? (dMax + 1) : end;\n\n        if (binsCount) {\n            binSize = Math.ceil(Math.abs(end - start) / binsCount);\n        }\n\n        buckets = generateBuckets(binSize, start, end);\n    }\n\n    if (buckets[0] > dMin) {\n        buckets.unshift(dMin);\n    }\n    if (buckets[buckets.length - 1] <= dMax) {\n        buckets.push(dMax + 1);\n    }\n\n    const bucketRanges = [];\n    for (let i = 0; i < buckets.length - 1; i++) {\n        bucketRanges.push({\n            start: buckets[i],\n            end: buckets[i + 1]\n        });\n    }\n\n    const binnedData = [];\n    rowDiffsetIterator(rowDiffset, (i) => {\n        const datum = measureField.partialField.data[i];\n        if (datum instanceof InvalidAwareTypes) {\n            binnedData.push(datum);\n            return;\n        }\n\n        const range = findBucketRange(bucketRanges, datum);\n        binnedData.push(`${range.start}-${range.end}`);\n    });\n\n    return { binnedData, bins: buckets };\n}\n","import { persistDerivations } from '../helper';\nimport { DM_DERIVATIVES } from '../constants';\n\n/**\n * DataModel's opearators are exposed as composable functional operators as well as chainable operators. Chainable\n * operators are called on the instances of {@link Datamodel} and {@link Relation} class.\n *\n * Those same operators can be used as composable operators from `DataModel.Operators` namespace.\n *\n * All these operators have similar behaviour. All these operators when called with the argument returns a function\n * which expects a DataModel instance.\n *\n * @public\n * @module Operators\n * @namespace DataModel\n */\n\n/**\n * This is functional version of selection operator. {@link link_to_selection | Selection} is a row filtering operation.\n * It takes {@link SelectionPredicate | predicate} for filtering criteria and returns a function.\n * The returned function is called with the DataModel instance on which the action needs to be performed.\n *\n * {@link SelectionPredicate} is a function which returns a boolean value. For selection opearation the selection\n * function is called for each row of DataModel instance with the current row passed as argument.\n *\n * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n * of rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * [Warn] Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * [Error] `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @example\n * const select = DataModel.Operators.select;\n * usaCarsFn = select(fields => fields.Origin.value === 'USA');\n * usaCarsDm = usaCarsFn(dm);\n * console.log(usaCarsDm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {SelectionPredicate} selectFn - Predicate funciton which is called for each row with the current row\n *      ```\n *          function (row, i)  { ... }\n *      ```\n * @param {Object} [config] - The configuration object to control the inclusion exclusion of a row in resultant\n *      DataModel instance\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const select = (...args) => dm => dm.select(...args);\n\n/**\n * This is functional version of projection operator. {@link link_to_projection | Projection} is a column filtering\n * operation.It expects list of fields name and either include those or exclude those based on {@link FilteringMode} on\n * the  resultant variable.It returns a function which is called with the DataModel instance on which the action needs\n * to be performed.\n *\n * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n * @param {Object} [config] - An optional config to control the creation of new DataModel\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const project = (...args) => dm => dm.project(...args);\n\n/**\n * This is functional version of binnig operator. Binning happens on a measure field based on a binning configuration.\n * Binning in DataModel does not aggregate the number of rows present in DataModel instance after binning, it just adds\n * a new field with the binned value. Refer binning {@link example_of_binning | example} to have a intuition of what\n * binning is and the use case.\n *\n * Binning can be configured by\n * - providing custom bin configuration with non uniform buckets\n * - providing bin count\n * - providing each bin size\n *\n * When custom buckets are provided as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const buckets = {\n *      start: 30\n *      stops: [80, 100, 110]\n *  };\n *  const config = { buckets, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(dm);\n *\n * @text\n * When `binCount` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binCount: 5, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @text\n * When `binSize` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binSize: 200, name: 'binnedHorsepower' }\n *  const binnedDm = dataModel.bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {String} name Name of measure which will be used to create bin\n * @param {Object} config Config required for bin creation\n * @param {Array.<Number>} config.bucketObj.stops Defination of bucket ranges. Two subsequent number from arrays\n *      are picked and a range is created. The first number from range is inclusive and the second number from range\n *      is exclusive.\n * @param {Number} [config.bucketObj.startAt] Force the start of the bin from a particular number.\n *      If not mentioned, the start of the bin or the lower domain of the data if stops is not mentioned, else its\n *      the first value of the stop.\n * @param {Number} config.binSize Bucket size for each bin\n * @param {Number} config.binCount Number of bins which will be created\n * @param {String} config.name Name of the new binned field to be created\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const bin = (...args) => dm => dm.bin(...args);\n\n/**\n * This is functional version of `groupBy` operator.Groups the data using particular dimensions and by reducing\n * measures. It expects a list of dimensions using which it projects the datamodel and perform aggregations to reduce\n * the duplicate tuples. Refer this {@link link_to_one_example_with_group_by | document} to know the intuition behind\n * groupBy.\n *\n * DataModel by default provides definition of few {@link reducer | Reducers}.\n * {@link ReducerStore | User defined reducers} can also be registered.\n *\n * This is the chained implementation of `groupBy`.\n * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n *\n * @example\n * const groupBy = DataModel.Operators.groupBy;\n * const groupedFn = groupBy(['Year'], { horsepower: 'max' } );\n * groupedDM = groupByFn(dm);\n *\n * @public\n *\n * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n *      schema of the variable.\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const groupBy = (...args) => dm => dm.groupBy(...args);\n\n/**\n * Enables composing operators to run multiple operations and save group of operataion as named opration on a DataModel.\n * The resulting DataModel will be the result of all the operation provided. The operations provided will be executed in\n * a serial manner ie. result of one operation will be the input for the next operations (like pipe operator in unix).\n *\n * Suported operations in compose are\n * - `select`\n * - `project`\n * - `groupBy`\n * - `bin`\n * - `compose`\n *\n * @example\n * const compose = DataModel.Operators.compose;\n * const select = DataModel.Operators.select;\n * const project = DataModel.Operators.project;\n *\n * let composedFn = compose(\n *    select(fields => fields.netprofit.value <= 15),\n *    project(['netprofit', 'netsales']));\n *\n * const dataModel = new DataModel(data1, schema1);\n *\n * let composedDm = composedFn(dataModel);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<Operators>} operators: An array of operation that will be applied on the\n * datatable.\n *\n * @returns {DataModel} Instance of resultant DataModel\n */\nexport const compose = (...operations) =>\n    (dm, config = { saveChild: true }) => {\n        let currentDM = dm;\n        let firstChild;\n        const derivations = [];\n\n        operations.forEach((operation) => {\n            currentDM = operation(currentDM);\n            derivations.push(...currentDM._derivation);\n            if (!firstChild) {\n                firstChild = currentDM;\n            }\n        });\n\n        if (firstChild && firstChild !== currentDM) {\n            firstChild.dispose();\n        }\n\n        // reset all ancestorDerivation saved in-between compose\n        currentDM._ancestorDerivation = [];\n        persistDerivations(\n            dm,\n            currentDM,\n            DM_DERIVATIVES.COMPOSE,\n            null,\n            derivations\n        );\n\n        if (config.saveChild) {\n            currentDM.setParent(dm);\n        } else {\n            currentDM.setParent(null);\n        }\n\n        return currentDM;\n    };\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { getCommonSchema } from './get-common-schema';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { JOINS } from '../constants';\nimport { prepareJoinData } from '../helper';\n/**\n * Default filter function for crossProduct.\n *\n * @return {boolean} Always returns true.\n */\nfunction defaultFilterFn() { return true; }\n\n/**\n * Implementation of cross product operation between two DataModel instances.\n * It internally creates the data and schema for the new DataModel.\n *\n * @param {DataModel} dataModel1 - The left DataModel instance.\n * @param {DataModel} dataModel2 - The right DataModel instance.\n * @param {Function} filterFn - The filter function which is used to filter the tuples.\n * @param {boolean} [replaceCommonSchema=false] - The flag if the common name schema should be there.\n * @return {DataModel} Returns The newly created DataModel instance from the crossProduct operation.\n */\nexport function crossProduct (dm1, dm2, filterFn, replaceCommonSchema = false, jointype = JOINS.CROSS) {\n    const schema = [];\n    const data = [];\n    const applicableFilterFn = filterFn || defaultFilterFn;\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreName = dm1FieldStore.name;\n    const dm2FieldStoreName = dm2FieldStore.name;\n    const name = `${dm1FieldStore.name}.${dm2FieldStore.name}`;\n    const commonSchemaList = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    if (dm1FieldStoreName === dm2FieldStoreName) {\n        throw new Error('DataModels must have different alias names');\n    }\n    // Here prepare the schema\n    dm1FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1 && !replaceCommonSchema) {\n            tmpSchema.name = `${dm1FieldStore.name}.${tmpSchema.name}`;\n        }\n        schema.push(tmpSchema);\n    });\n    dm2FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1) {\n            if (!replaceCommonSchema) {\n                tmpSchema.name = `${dm2FieldStore.name}.${tmpSchema.name}`;\n                schema.push(tmpSchema);\n            }\n        } else {\n            schema.push(tmpSchema);\n        }\n    });\n\n    // Here prepare Data\n    rowDiffsetIterator(dm1._rowDiffset, (i) => {\n        let rowAdded = false;\n        let rowPosition;\n        rowDiffsetIterator(dm2._rowDiffset, (ii) => {\n            const tuple = [];\n            const userArg = {};\n            userArg[dm1FieldStoreName] = {};\n            userArg[dm2FieldStoreName] = {};\n            dm1FieldStore.fields.forEach((field) => {\n                tuple.push(field.partialField.data[i]);\n                userArg[dm1FieldStoreName][field.name()] = {\n                    rawValue: field.partialField.data[i],\n                    formattedValue: field.formattedData()[i],\n                };\n            });\n            dm2FieldStore.fields.forEach((field) => {\n                if (!(commonSchemaList.indexOf(field.schema().name) !== -1 && replaceCommonSchema)) {\n                    tuple.push(field.partialField.data[ii]);\n                }\n                userArg[dm2FieldStoreName][field.name()] = {\n                    rawValue: field.partialField.data[ii],\n                    formattedValue: field.formattedData()[ii],\n                };\n            });\n\n            let cachedStore = {};\n            let cloneProvider1 = () => dm1.detachedRoot();\n            let cloneProvider2 = () => dm2.detachedRoot();\n\n            const dm1Fields = prepareJoinData(userArg[dm1FieldStoreName]);\n            const dm2Fields = prepareJoinData(userArg[dm2FieldStoreName]);\n            if (applicableFilterFn(dm1Fields, dm2Fields, cloneProvider1, cloneProvider2, cachedStore)) {\n                const tupleObj = {};\n                tuple.forEach((cellVal, iii) => {\n                    tupleObj[schema[iii].name] = cellVal;\n                });\n                if (rowAdded && JOINS.CROSS !== jointype) {\n                    data[rowPosition] = tupleObj;\n                }\n                else {\n                    data.push(tupleObj);\n                    rowAdded = true;\n                    rowPosition = i;\n                }\n            } else if ((jointype === JOINS.LEFTOUTER || jointype === JOINS.RIGHTOUTER) && !rowAdded) {\n                const tupleObj = {};\n                let len = dm1FieldStore.fields.length - 1;\n                tuple.forEach((cellVal, iii) => {\n                    if (iii <= len) {\n                        tupleObj[schema[iii].name] = cellVal;\n                    }\n                    else {\n                        tupleObj[schema[iii].name] = null;\n                    }\n                });\n                rowAdded = true;\n                rowPosition = i;\n                data.push(tupleObj);\n            }\n        });\n    });\n\n    return new DataModel(data, schema, { name });\n}\n","import { rowDiffsetIterator } from './row-diffset-iterator';\nimport { sortData } from './sort';\n\n/**\n * Builds the actual data array.\n *\n * @param {Array} fieldStore - An array of field.\n * @param {string} rowDiffset - A string consisting of which rows to be included eg. '0-2,4,6';\n * @param {string} colIdentifier - A string consisting of the details of which column\n * to be included eg 'date,sales,profit';\n * @param {Object} sortingDetails - An object containing the sorting details of the DataModel instance.\n * @param {Object} options - The options required to create the type of the data.\n * @return {Object} Returns an object containing the multidimensional array and the relative schema.\n */\nexport function dataBuilder (fieldStore, rowDiffset, colIdentifier, sortingDetails, options) {\n    const defOptions = {\n        addUid: false,\n        columnWise: false\n    };\n    options = Object.assign({}, defOptions, options);\n\n    const retObj = {\n        schema: [],\n        data: [],\n        uids: []\n    };\n    const addUid = options.addUid;\n    const reqSorting = sortingDetails && sortingDetails.length > 0;\n    // It stores the fields according to the colIdentifier argument\n    const tmpDataArr = [];\n    // Stores the fields according to the colIdentifier argument\n    const colIArr = colIdentifier.split(',');\n\n    colIArr.forEach((colName) => {\n        for (let i = 0; i < fieldStore.length; i += 1) {\n            if (fieldStore[i].name() === colName) {\n                tmpDataArr.push(fieldStore[i]);\n                break;\n            }\n        }\n    });\n\n    // Inserts the schema to the schema object\n    tmpDataArr.forEach((field) => {\n        /** @todo Need to use extend2 here otherwise user can overwrite the schema. */\n        retObj.schema.push(field.schema());\n    });\n\n    if (addUid) {\n        retObj.schema.push({\n            name: 'uid',\n            type: 'identifier'\n        });\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        retObj.data.push([]);\n        const insertInd = retObj.data.length - 1;\n        let start = 0;\n        tmpDataArr.forEach((field, ii) => {\n            retObj.data[insertInd][ii + start] = field.partialField.data[i];\n        });\n        if (addUid) {\n            retObj.data[insertInd][tmpDataArr.length] = i;\n        }\n        // Creates an array of unique identifiers for each row\n        retObj.uids.push(i);\n\n        // If sorting needed then there is the need to expose the index\n        // mapping from the old index to its new index\n        if (reqSorting) { retObj.data[insertInd].push(i); }\n    });\n\n    // Handles the sort functionality\n    if (reqSorting) {\n        sortData(retObj, sortingDetails);\n    }\n\n    if (options.columnWise) {\n        const tmpData = Array(...Array(retObj.schema.length)).map(() => []);\n        retObj.data.forEach((tuple) => {\n            tuple.forEach((data, i) => {\n                tmpData[i].push(data);\n            });\n        });\n        retObj.data = tmpData;\n    }\n\n    return retObj;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n\n/**\n * Performs the union operation between two dm instances.\n *\n * @todo Fix the conflicts between union and difference terminology here.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function difference (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n   // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     * @param {boolean} addData - If true only tuple will be added to the data.\n     */\n    function prepareDataHelper(dm, fieldsObj, addData) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                if (addData) { data.push(tuple); }\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj, false);\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj, true);\n\n    return new DataModel(data, schema, { name });\n}\n\n","/**\n * The helper function that returns an array of common schema\n * from two fieldStore instances.\n *\n * @param {FieldStore} fs1 - The first FieldStore instance.\n * @param {FieldStore} fs2 - The second FieldStore instance.\n * @return {Array} An array containing the common schema.\n */\nexport function getCommonSchema (fs1, fs2) {\n    const retArr = [];\n    const fs1Arr = [];\n    fs1.fields.forEach((field) => {\n        fs1Arr.push(field.schema().name);\n    });\n    fs2.fields.forEach((field) => {\n        if (fs1Arr.indexOf(field.schema().name) !== -1) {\n            retArr.push(field.schema().name);\n        }\n    });\n    return retArr;\n}\n","import { isArray } from '../utils';\nimport InvalidAwareTypes from '../invalid-aware-types';\nimport { GROUP_BY_FUNCTIONS } from '../enums';\n\nconst { SUM, AVG, FIRST, LAST, COUNT, STD, MIN, MAX } = GROUP_BY_FUNCTIONS;\n\nfunction getFilteredValues(arr) {\n    return arr.filter(item => !(item instanceof InvalidAwareTypes));\n}\n/**\n * Reducer function that returns the sum of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the sum of the array.\n */\nfunction sum (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const filteredNumber = getFilteredValues(arr);\n        const totalSum = filteredNumber.length ?\n                            filteredNumber.reduce((acc, curr) => acc + curr, 0)\n                            : InvalidAwareTypes.NULL;\n        return totalSum;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that returns the average of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the mean value of the array.\n */\nfunction avg (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const totalSum = sum(arr);\n        const len = arr.length || 1;\n        return (Number.isNaN(totalSum) || totalSum instanceof InvalidAwareTypes) ?\n                 InvalidAwareTypes.NULL : totalSum / len;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the min value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the minimum value of the array.\n */\nfunction min (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.min(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the max value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the maximum value of the array.\n */\nfunction max (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.max(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the first value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the first value of the array.\n */\nfunction first (arr) {\n    return arr[0];\n}\n\n/**\n * Reducer function that gives the last value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the last value of the array.\n */\nfunction last (arr) {\n    return arr[arr.length - 1];\n}\n\n/**\n * Reducer function that gives the count value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the length of the array.\n */\nfunction count (arr) {\n    if (isArray(arr)) {\n        return arr.length;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Calculates the variance of the input array.\n *\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the variance of the input array.\n */\nfunction variance (arr) {\n    let mean = avg(arr);\n    return avg(arr.map(num => (num - mean) ** 2));\n}\n\n/**\n * Calculates the square root of the variance of the input array.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the square root of the variance.\n */\nfunction std (arr) {\n    return Math.sqrt(variance(arr));\n}\n\n\nconst fnList = {\n    [SUM]: sum,\n    [AVG]: avg,\n    [MIN]: min,\n    [MAX]: max,\n    [FIRST]: first,\n    [LAST]: last,\n    [COUNT]: count,\n    [STD]: std\n};\n\nconst defaultReducerName = SUM;\n\nexport {\n    defaultReducerName,\n    sum as defReducer,\n    fnList,\n};\n","import { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport DataModel from '../export';\nimport reducerStore from '../utils/reducer-store';\nimport { defaultReducerName } from './group-by-function';\nimport { FieldType } from '../enums';\n\n/**\n * This function sanitize the user given field and return a common Array structure field\n * list\n * @param  {DataModel} dataModel the dataModel operating on\n * @param  {Array} fieldArr  user input of field Array\n * @return {Array}           arrays of field name\n */\nfunction getFieldArr (dataModel, fieldArr) {\n    const retArr = [];\n    const fieldStore = dataModel.getFieldspace();\n    const dimensions = fieldStore.getDimension();\n\n    Object.entries(dimensions).forEach(([key]) => {\n        if (fieldArr && fieldArr.length) {\n            if (fieldArr.indexOf(key) !== -1) {\n                retArr.push(key);\n            }\n        } else {\n            retArr.push(key);\n        }\n    });\n\n    return retArr;\n}\n\n/**\n * This sanitize the reducer provide by the user and create a common type of object.\n * user can give function Also\n * @param  {DataModel} dataModel     dataModel to worked on\n * @param  {Object|function} [reducers={}] reducer provided by the users\n * @return {Object}               object containing reducer function for every measure\n */\nfunction getReducerObj (dataModel, reducers = {}) {\n    const retObj = {};\n    const fieldStore = dataModel.getFieldspace();\n    const measures = fieldStore.getMeasure();\n    const defReducer = reducerStore.defaultReducer();\n\n    Object.keys(measures).forEach((measureName) => {\n        if (typeof reducers[measureName] !== 'string') {\n            reducers[measureName] = measures[measureName].defAggFn();\n        }\n        const reducerFn = reducerStore.resolve(reducers[measureName]);\n        if (reducerFn) {\n            retObj[measureName] = reducerFn;\n        } else {\n            retObj[measureName] = defReducer;\n            reducers[measureName] = defaultReducerName;\n        }\n    });\n    return retObj;\n}\n\n/**\n * main function which perform the group-by operations which reduce the measures value is the\n * fields are common according to the reducer function provided\n * @param  {DataModel} dataModel the dataModel to worked\n * @param  {Array} fieldArr  fields according to which the groupby should be worked\n * @param  {Object|Function} reducers  reducers function\n * @param {DataModel} existingDataModel Existing datamodel instance\n * @return {DataModel} new dataModel with the group by\n */\nfunction groupBy (dataModel, fieldArr, reducers, existingDataModel) {\n    const sFieldArr = getFieldArr(dataModel, fieldArr);\n    const reducerObj = getReducerObj(dataModel, reducers);\n    const fieldStore = dataModel.getFieldspace();\n    const fieldStoreObj = fieldStore.fieldsObj();\n    const dbName = fieldStore.name;\n    const dimensionArr = [];\n    const measureArr = [];\n    const schema = [];\n    const hashMap = {};\n    const data = [];\n    let newDataModel;\n\n    // Prepare the schema\n    Object.entries(fieldStoreObj).forEach(([key, value]) => {\n        if (sFieldArr.indexOf(key) !== -1 || reducerObj[key]) {\n            schema.push(extend2({}, value.schema()));\n\n            switch (value.schema().type) {\n            case FieldType.MEASURE:\n                measureArr.push(key);\n                break;\n            default:\n            case FieldType.DIMENSION:\n                dimensionArr.push(key);\n            }\n        }\n    });\n    // Prepare the data\n    let rowCount = 0;\n    rowDiffsetIterator(dataModel._rowDiffset, (i) => {\n        let hash = '';\n        dimensionArr.forEach((_) => {\n            hash = `${hash}-${fieldStoreObj[_].partialField.data[i]}`;\n        });\n        if (hashMap[hash] === undefined) {\n            hashMap[hash] = rowCount;\n            data.push({});\n            dimensionArr.forEach((_) => {\n                data[rowCount][_] = fieldStoreObj[_].partialField.data[i];\n            });\n            measureArr.forEach((_) => {\n                data[rowCount][_] = [fieldStoreObj[_].partialField.data[i]];\n            });\n            rowCount += 1;\n        } else {\n            measureArr.forEach((_) => {\n                data[hashMap[hash]][_].push(fieldStoreObj[_].partialField.data[i]);\n            });\n        }\n    });\n\n    // reduction\n    let cachedStore = {};\n    let cloneProvider = () => dataModel.detachedRoot();\n    data.forEach((row) => {\n        const tuple = row;\n        measureArr.forEach((_) => {\n            tuple[_] = reducerObj[_](row[_], cloneProvider, cachedStore);\n        });\n    });\n    if (existingDataModel) {\n        existingDataModel.__calculateFieldspace();\n        newDataModel = existingDataModel;\n    }\n    else {\n        newDataModel = new DataModel(data, schema, { name: dbName });\n    }\n    return newDataModel;\n}\n\nexport { groupBy, getFieldArr, getReducerObj };\n","export { createBinnedFieldData } from './bucket-creator';\nexport { compose, bin, select, project, groupBy as groupby } from './compose';\nexport { calculateVariable, sort } from './pure-operators';\nexport { crossProduct } from './cross-product';\nexport { dataBuilder } from './data-builder';\nexport { difference } from './difference';\nexport { getCommonSchema } from './get-common-schema';\nexport { defReducer, fnList } from './group-by-function';\nexport { groupBy, getFieldArr, getReducerObj } from './group-by';\nexport { mergeSort } from './merge-sort';\nexport { naturalJoinFilter } from './natural-join-filter-function';\nexport { naturalJoin } from './natural-join';\nexport { leftOuterJoin, rightOuterJoin, fullOuterJoin } from './outer-join';\nexport { rowDiffsetIterator } from './row-diffset-iterator';\nexport { union } from './union';\n","/**\n * The default sort function.\n *\n * @param {*} a - The first value.\n * @param {*} b - The second value.\n * @return {number} Returns the comparison result e.g. 1 or 0 or -1.\n */\nfunction defSortFn (a, b) {\n    const a1 = `${a}`;\n    const b1 = `${b}`;\n    if (a1 < b1) {\n        return -1;\n    }\n    if (a1 > b1) {\n        return 1;\n    }\n    return 0;\n}\n\n/**\n * The helper function for merge sort which creates the sorted array\n * from the two halves of the input array.\n *\n * @param {Array} arr - The target array which needs to be merged.\n * @param {number} lo - The starting index of the first array half.\n * @param {number} mid - The ending index of the first array half.\n * @param {number} hi - The ending index of the second array half.\n * @param {Function} sortFn - The sort function.\n */\nfunction merge (arr, lo, mid, hi, sortFn) {\n    const mainArr = arr;\n    const auxArr = [];\n    for (let i = lo; i <= hi; i += 1) {\n        auxArr[i] = mainArr[i];\n    }\n    let a = lo;\n    let b = mid + 1;\n\n    for (let i = lo; i <= hi; i += 1) {\n        if (a > mid) {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        } else if (b > hi) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else if (sortFn(auxArr[a], auxArr[b]) <= 0) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        }\n    }\n}\n\n/**\n * The helper function for merge sort which would be called\n * recursively for sorting the array halves.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {number} lo - The starting index of the array half.\n * @param {number} hi - The ending index of the array half.\n * @param {Function} sortFn - The sort function.\n * @return {Array} Returns the target array itself.\n */\nfunction sort (arr, lo, hi, sortFn) {\n    if (hi === lo) { return arr; }\n\n    const mid = lo + Math.floor((hi - lo) / 2);\n    sort(arr, lo, mid, sortFn);\n    sort(arr, mid + 1, hi, sortFn);\n    merge(arr, lo, mid, hi, sortFn);\n\n    return arr;\n}\n\n/**\n * The implementation of merge sort.\n * It is used in DataModel for stable sorting as it is not sure\n * what the sorting algorithm used by browsers is stable or not.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {Function} [sortFn=defSortFn] - The sort function.\n * @return {Array} Returns the input array itself in sorted order.\n */\nexport function mergeSort (arr, sortFn = defSortFn) {\n    if (arr.length > 1) {\n        sort(arr, 0, arr.length - 1, sortFn);\n    }\n    return arr;\n}\n","import { getCommonSchema } from './get-common-schema';\n\n/**\n * The filter function used in natural join.\n * It generates a function that will have the logic to join two\n * DataModel instances by the process of natural join.\n *\n * @param {DataModel} dm1 - The left DataModel instance.\n * @param {DataModel} dm2 - The right DataModel instance.\n * @return {Function} Returns a function that is used in cross-product operation.\n */\nexport function naturalJoinFilter (dm1, dm2) {\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    // const dm1FieldStoreName = dm1FieldStore.name;\n    // const dm2FieldStoreName = dm2FieldStore.name;\n    const commonSchemaArr = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    return (dm1Fields, dm2Fields) => {\n        let retainTuple = true;\n        commonSchemaArr.forEach((fieldName) => {\n            if (dm1Fields[fieldName].internalValue ===\n                dm2Fields[fieldName].internalValue && retainTuple) {\n                retainTuple = true;\n            } else {\n                retainTuple = false;\n            }\n        });\n        return retainTuple;\n    };\n}\n","import { crossProduct } from './cross-product';\nimport { naturalJoinFilter } from './natural-join-filter-function';\n\nexport function naturalJoin (dataModel1, dataModel2) {\n    return crossProduct(dataModel1, dataModel2, naturalJoinFilter(dataModel1, dataModel2), true);\n}\n","import { crossProduct } from './cross-product';\nimport { JOINS } from '../constants';\nimport { union } from './union';\n\n\nexport function leftOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel1, dataModel2, filterFn, false, JOINS.LEFTOUTER);\n}\n\nexport function rightOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel2, dataModel1, filterFn, false, JOINS.RIGHTOUTER);\n}\n\nexport function fullOuterJoin (dataModel1, dataModel2, filterFn) {\n    return union(leftOuterJoin(dataModel1, dataModel2, filterFn), rightOuterJoin(dataModel1, dataModel2, filterFn));\n}\n","/**\n * Wrapper on calculateVariable() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const calculateVariable = (...args) => dm => dm.calculateVariable(...args);\n\n/**\n * Wrapper on sort() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const sort = (...args) => dm => dm.sort(...args);\n","/**\n * Iterates through the diffSet array and call the callback with the current\n * index.\n *\n * @param {string} rowDiffset - The row diffset string e.g. '0-4,6,10-13'.\n * @param {Function} callback - The callback function to be called with every index.\n */\nexport function rowDiffsetIterator (rowDiffset, callback) {\n    if (rowDiffset.length > 0) {\n        const rowDiffArr = rowDiffset.split(',');\n        rowDiffArr.forEach((diffStr) => {\n            const diffStsArr = diffStr.split('-');\n            const start = +(diffStsArr[0]);\n            const end = +(diffStsArr[1] || diffStsArr[0]);\n            if (end >= start) {\n                for (let i = start; i <= end; i += 1) {\n                    callback(i);\n                }\n            }\n        });\n    }\n}\n","import { DimensionSubtype, MeasureSubtype } from '../enums';\nimport { mergeSort } from './merge-sort';\nimport { fieldInSchema } from '../helper';\nimport { isCallable, isArray } from '../utils';\n\n/**\n * Generates the sorting functions to sort the data of a DataModel instance\n * according to the input data type.\n *\n * @param {string} dataType - The data type e.g. 'measure', 'datetime' etc.\n * @param {string} sortType - The sorting order i.e. 'asc' or 'desc'.\n * @return {Function} Returns the the sorting function.\n */\nfunction getSortFn (dataType, sortType) {\n    let retFunc;\n\n    switch (dataType) {\n    case MeasureSubtype.CONTINUOUS:\n    case DimensionSubtype.TEMPORAL:\n        if (sortType === 'asc') {\n            retFunc = (a, b) => a - b;\n        } else {\n            retFunc = (a, b) => b - a;\n        }\n        break;\n    default:\n        if (sortType === 'asc') {\n            retFunc = (a, b) => {\n                a = `${a}`;\n                b = `${b}`;\n                if (a === b) {\n                    return 0;\n                }\n                return a > b ? 1 : -1;\n            };\n        } else {\n            retFunc = (a, b) => {\n                a = `${a}`;\n                b = `${b}`;\n                if (a === b) {\n                    return 0;\n                }\n                return a > b ? -1 : 1;\n            };\n        }\n    }\n\n    return retFunc;\n}\n\n/**\n * Resolves the actual sorting function based on sorting string value.\n *\n * @param {Object} fDetails - The target field info.\n * @param {string} strSortOrder - The sort order value.\n * @return {Function} Returns the sorting function.\n */\nfunction resolveStrSortOrder (fDetails, strSortOrder) {\n    const sortOrder = String(strSortOrder).toLowerCase() === 'desc' ? 'desc' : 'asc';\n    return getSortFn(fDetails.type, sortOrder);\n}\n\n/**\n * Groups the data according to the specified target field.\n *\n * @param {Array} data - The input data array.\n * @param {number} fieldIndex - The target field index within schema array.\n * @return {Array} Returns an array containing the grouped data.\n */\nfunction groupData (data, fieldIndex) {\n    const hashMap = new Map();\n    const groupedData = [];\n\n    data.forEach((datum) => {\n        const fieldVal = datum[fieldIndex];\n        if (hashMap.has(fieldVal)) {\n            groupedData[hashMap.get(fieldVal)][1].push(datum);\n        } else {\n            groupedData.push([fieldVal, [datum]]);\n            hashMap.set(fieldVal, groupedData.length - 1);\n        }\n    });\n\n    return groupedData;\n}\n\n/**\n * Creates the argument value used for sorting function when sort is done\n * with another fields.\n *\n * @param {Array} groupedDatum - The grouped datum for a single dimension field value.\n * @param {Array} targetFields - An array of the sorting fields.\n * @param {Array} targetFieldDetails - An array of the sorting field details in schema.\n * @return {Object} Returns an object containing the value of sorting fields and the target field name.\n */\nfunction createSortingFnArg (groupedDatum, targetFields, targetFieldDetails) {\n    const arg = {\n        label: groupedDatum[0]\n    };\n\n    targetFields.reduce((acc, next, idx) => {\n        acc[next] = groupedDatum[1].map(datum => datum[targetFieldDetails[idx].index]);\n        return acc;\n    }, arg);\n\n    return arg;\n}\n\n/**\n * Sorts the data by applying the standard sorting mechanism.\n *\n * @param {Array} data - The input data array.\n * @param {Array} schema - The data schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n */\nfunction applyStandardSort (data, schema, sortingDetails) {\n    let fieldName;\n    let sortMeta;\n    let fDetails;\n    let i = sortingDetails.length - 1;\n\n    for (; i >= 0; i--) {\n        fieldName = sortingDetails[i][0];\n        sortMeta = sortingDetails[i][1];\n        fDetails = fieldInSchema(schema, fieldName);\n\n        if (!fDetails) {\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n\n        if (isCallable(sortMeta)) {\n            // eslint-disable-next-line no-loop-func\n            mergeSort(data, (a, b) => sortMeta(a[fDetails.index], b[fDetails.index]));\n        } else if (isArray(sortMeta)) {\n            const groupedData = groupData(data, fDetails.index);\n            const sortingFn = sortMeta[sortMeta.length - 1];\n            const targetFields = sortMeta.slice(0, sortMeta.length - 1);\n            const targetFieldDetails = targetFields.map(f => fieldInSchema(schema, f));\n\n            groupedData.forEach((groupedDatum) => {\n                groupedDatum.push(createSortingFnArg(groupedDatum, targetFields, targetFieldDetails));\n            });\n\n            mergeSort(groupedData, (a, b) => {\n                const m = a[2];\n                const n = b[2];\n                return sortingFn(m, n);\n            });\n\n            // Empty the array\n            data.length = 0;\n            groupedData.forEach((datum) => {\n                data.push(...datum[1]);\n            });\n        } else {\n            const sortFn = resolveStrSortOrder(fDetails, sortMeta);\n            // eslint-disable-next-line no-loop-func\n            mergeSort(data, (a, b) => sortFn(a[fDetails.index], b[fDetails.index]));\n        }\n    }\n}\n\n/**\n * Creates a map based on grouping.\n *\n * @param {Array} depColumns - The dependency columns' info.\n * @param {Array} data - The input data.\n * @param {Array} schema - The data schema.\n * @param {Array} sortingDetails - The sorting details for standard sorting.\n * @return {Map} Returns a map.\n */\nconst makeGroupMapAndSort = (depColumns, data, schema, sortingDetails) => {\n    if (depColumns.length === 0) { return data; }\n\n    const targetCol = depColumns[0];\n    const map = new Map();\n\n    data.reduce((acc, currRow) => {\n        const fVal = currRow[targetCol.index];\n        if (acc.has(fVal)) {\n            acc.get(fVal).push(currRow);\n        } else {\n            acc.set(fVal, [currRow]);\n        }\n        return acc;\n    }, map);\n\n    for (let [key, val] of map) {\n        const nMap = makeGroupMapAndSort(depColumns.slice(1), val, schema, sortingDetails);\n        map.set(key, nMap);\n        if (Array.isArray(nMap)) {\n            applyStandardSort(nMap, schema, sortingDetails);\n        }\n    }\n\n    return map;\n};\n\n/**\n * Sorts the data by retaining the position/order of a particular field.\n *\n * @param {Array} data - The input data array.\n * @param {Array} schema - The data schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n * @param {Array} depColumns - The dependency column list.\n * @return {Array} Returns the sorted data.\n */\nfunction applyGroupSort (data, schema, sortingDetails, depColumns) {\n    sortingDetails = sortingDetails.filter((detail) => {\n        if (detail[1] === null) {\n            depColumns.push(detail[0]);\n            return false;\n        }\n        return true;\n    });\n    if (sortingDetails.length === 0) { return data; }\n\n    depColumns = depColumns.map(c => fieldInSchema(schema, c));\n\n    const sortedGroupMap = makeGroupMapAndSort(depColumns, data, schema, sortingDetails);\n    return data.map((row) => {\n        let i = 0;\n        let nextMap = sortedGroupMap;\n\n        while (!Array.isArray(nextMap)) {\n            nextMap = nextMap.get(row[depColumns[i++].index]);\n        }\n\n        return nextMap.shift();\n    });\n}\n\n/**\n * Sorts the data.\n *\n * @param {Object} dataObj - An object containing the data and schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n */\nexport function sortData (dataObj, sortingDetails) {\n    let { schema, data } = dataObj;\n\n    sortingDetails = sortingDetails.filter(sDetial => !!fieldInSchema(schema, sDetial[0]));\n    if (sortingDetails.length === 0) { return; }\n\n    let groupSortingIdx = sortingDetails.findIndex(sDetial => sDetial[1] === null);\n    groupSortingIdx = groupSortingIdx !== -1 ? groupSortingIdx : sortingDetails.length;\n\n    const standardSortingDetails = sortingDetails.slice(0, groupSortingIdx);\n    const groupSortingDetails = sortingDetails.slice(groupSortingIdx);\n\n    applyStandardSort(data, schema, standardSortingDetails);\n    data = applyGroupSort(data, schema, groupSortingDetails, standardSortingDetails.map(detail => detail[0]));\n\n    dataObj.uids = data.map(row => row.pop());\n    dataObj.data = data;\n}\n","import DataModel from '../export';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n/**\n * Performs the union operation between two dm instances.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function union (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n    // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     */\n    function prepareDataHelper (dm, fieldsObj) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                data.push(tuple);\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj);\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj);\n\n    return new DataModel(data, schema, { name });\n}\n","import { FilteringMode } from './enums';\nimport { getUniqueId } from './utils';\nimport {\n    updateFields,\n    cloneWithSelect,\n    cloneWithProject,\n    updateData,\n    getNormalizedProFields\n} from './helper';\nimport { crossProduct, difference, naturalJoinFilter, union } from './operator';\n\n/**\n * Relation provides the definitions of basic operators of relational algebra like *selection*, *projection*, *union*,\n * *difference* etc.\n *\n * It is extended by {@link DataModel} to inherit the functionalities of relational algebra concept.\n *\n * @class\n * @public\n * @module Relation\n * @namespace DataModel\n */\nclass Relation {\n\n    /**\n     * Creates a new Relation instance by providing underlying data and schema.\n     *\n     * @private\n     *\n     * @param {Object | string | Relation} data - The input tabular data in dsv or json format or\n     * an existing Relation instance object.\n     * @param {Array} schema - An array of data schema.\n     * @param {Object} [options] - The optional options.\n     */\n    constructor (...params) {\n        let source;\n\n        this._parent = null;\n        this._derivation = [];\n        this._ancestorDerivation = [];\n        this._children = [];\n\n        if (params.length === 1 && ((source = params[0]) instanceof Relation)) {\n            // parent datamodel was passed as part of source\n            this._colIdentifier = source._colIdentifier;\n            this._rowDiffset = source._rowDiffset;\n            this._dataFormat = source._dataFormat;\n            this._parent = source;\n            this._partialFieldspace = this._parent._partialFieldspace;\n            this._fieldStoreName = getUniqueId();\n            this.__calculateFieldspace().calculateFieldsConfig();\n        } else {\n            updateData(this, ...params);\n            this._fieldStoreName = this._partialFieldspace.name;\n            this.__calculateFieldspace().calculateFieldsConfig();\n            this._propagationNameSpace = {\n                mutableActions: {},\n                immutableActions: {}\n            };\n        }\n    }\n\n    /**\n     * Retrieves the {@link Schema | schema} details for every {@link Field | field} as an array.\n     *\n     * @public\n     *\n     * @return {Array.<Schema>} Array of fields schema.\n     *      ```\n     *      [\n     *          { name: 'Name', type: 'dimension' },\n     *          { name: 'Miles_per_Gallon', type: 'measure', numberFormat: (val) => `${val} miles / gallon` },\n     *          { name: 'Cylinder', type: 'dimension' },\n     *          { name: 'Displacement', type: 'measure', defAggFn: 'max' },\n     *          { name: 'HorsePower', type: 'measure', defAggFn: 'max' },\n     *          { name: 'Weight_in_lbs', type: 'measure', defAggFn: 'avg',  },\n     *          { name: 'Acceleration', type: 'measure', defAggFn: 'avg' },\n     *          { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *          { name: 'Origin' }\n     *      ]\n     *      ```\n     */\n    getSchema () {\n        return this.getFieldspace().fields.map(d => d.schema());\n    }\n\n    /**\n     * Returns the name of the {@link DataModel} instance. If no name was specified during {@link DataModel}\n     * initialization, then it returns a auto-generated name.\n     *\n     * @public\n     *\n     * @return {string} Name of the DataModel instance.\n     */\n    getName() {\n        return this._fieldStoreName;\n    }\n\n    getFieldspace () {\n        return this._fieldspace;\n    }\n\n    __calculateFieldspace () {\n        this._fieldspace = updateFields([this._rowDiffset, this._colIdentifier],\n             this.getPartialFieldspace(), this._fieldStoreName);\n        return this;\n    }\n\n    getPartialFieldspace () {\n        return this._partialFieldspace;\n    }\n\n    /**\n     * Performs {@link link_of_cross_product | cross-product} between two {@link DataModel} instances and returns a\n     * new {@link DataModel} instance containing the results. This operation is also called theta join.\n     *\n     * Cross product takes two set and create one set where each value of one set is paired with each value of another\n     * set.\n     *\n     * This method takes an optional predicate which filters the generated result rows. If the predicate returns true\n     * the combined row is included in the resulatant table.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.join(originDM)));\n     *\n     *  console.log(carsDM.join(originDM,\n     *      obj => obj.[originDM.getName()].Origin === obj.[carsDM.getName()].Origin));\n     *\n     * @text\n     * This is chained version of `join` operator. `join` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel to be joined with the current instance DataModel.\n     * @param {SelectionPredicate} filterFn - The predicate function that will filter the result of the crossProduct.\n     *\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    join (joinWith, filterFn) {\n        return crossProduct(this, joinWith, filterFn);\n    }\n\n    /**\n     * {@link natural_join | Natural join} is a special kind of cross-product join where filtering of rows are performed\n     * internally by resolving common fields are from both table and the rows with common value are included.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.naturalJoin(originDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel with which the current instance of DataModel on which the method is\n     *      called will be joined.\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    naturalJoin (joinWith) {\n        return crossProduct(this, joinWith, naturalJoinFilter(this, joinWith), true);\n    }\n\n    /**\n     * {@link link_to_union | Union} operation can be termed as vertical stacking of all rows from both the DataModel\n     * instances, provided that both of the {@link DataModel} instances should have same column names.\n     *\n     * @example\n     * console.log(EuropeanMakerDM.union(USAMakerDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} unionWith - DataModel instance for which union has to be applied with the instance on which\n     *      the method is called\n     *\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    union (unionWith) {\n        return union(this, unionWith);\n    }\n\n    /**\n     * {@link link_to_difference | Difference } operation only include rows which are present in the datamodel on which\n     * it was called but not on the one passed as argument.\n     *\n     * @example\n     * console.log(highPowerDM.difference(highExpensiveDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} differenceWith - DataModel instance for which difference has to be applied with the instance\n     *      on which the method is called\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    difference (differenceWith) {\n        return difference(this, differenceWith);\n    }\n\n    /**\n     * {@link link_to_selection | Selection} is a row filtering operation. It expects a predicate and an optional mode\n     * which control which all rows should be included in the resultant DataModel instance.\n     *\n     * {@link SelectionPredicate} is a function which returns a boolean value. For selection operation the selection\n     * function is called for each row of DataModel instance with the current row passed as argument.\n     *\n     * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n     * of rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resultant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  // with selection mode NORMAL:\n     *  const normDt = dt.select(fields => fields.Origin.value === \"USA\")\n     *  console.log(normDt));\n     *\n     * // with selection mode INVERSE:\n     * const inverDt = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.INVERSE })\n     * console.log(inverDt);\n     *\n     * // with selection mode ALL:\n     * const dtArr = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.ALL })\n     * // print the selected parts\n     * console.log(dtArr[0]);\n     * // print the inverted parts\n     * console.log(dtArr[1]);\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Function} selectFn - The predicate function which is called for each row with the current row.\n     * ```\n     *  function (row, i, cloneProvider, store)  { ... }\n     * ```\n     * @param {Object} config - The configuration object to control the inclusion exclusion of a row in resultant\n     * DataModel instance.\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection.\n     * @return {DataModel} Returns the new DataModel instance(s) after operation.\n     */\n    select (selectFn, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n        config.mode = config.mode || defConfig.mode;\n\n        const cloneConfig = { saveChild: config.saveChild };\n        return cloneWithSelect(\n            this,\n            selectFn,\n            config,\n            cloneConfig\n        );\n    }\n\n    /**\n     * Retrieves a boolean value if the current {@link DataModel} instance has data.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'CarName', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     * const data = [];\n     *\n     * const dt = new DataModel(data, schema);\n     * console.log(dt.isEmpty());\n     *\n     * @public\n     *\n     * @return {Boolean} True if the datamodel has no data, otherwise false.\n     */\n    isEmpty () {\n        return !this._rowDiffset.length || !this._colIdentifier.length;\n    }\n\n    /**\n     * Creates a clone from the current DataModel instance with child parent relationship.\n     *\n     * @private\n     * @param {boolean} [saveChild=true] - Whether the cloned instance would be recorded in the parent instance.\n     * @return {DataModel} - Returns the newly cloned DataModel instance.\n     */\n    clone (saveChild = true) {\n        const clonedDm = new this.constructor(this);\n        if (saveChild) {\n            clonedDm.setParent(this);\n        } else {\n            clonedDm.setParent(null);\n        }\n        return clonedDm;\n    }\n\n    /**\n     * {@link Projection} is filter column (field) operation. It expects list of fields' name and either include those\n     * or exclude those based on {@link FilteringMode} on the resultant variable.\n     *\n     * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n     * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resulatant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *\n     *  // with projection mode NORMAL:\n     *  const normDt = dt.project([\"Name\", \"HorsePower\"]);\n     *  console.log(normDt.getData());\n     *\n     *  // with projection mode INVERSE:\n     *  const inverDt = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.INVERSE })\n     *  console.log(inverDt.getData());\n     *\n     *  // with selection mode ALL:\n     *  const dtArr = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.ALL })\n     *  // print the normal parts\n     *  console.log(dtArr[0].getData());\n     *  // print the inverted parts\n     *  console.log(dtArr[1].getData());\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n     * @param {Object} [config] - An optional config to control the creation of new DataModel\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n     *\n     * @return {DataModel} Returns the new DataModel instance after operation.\n     */\n    project (projField, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n        const fieldConfig = this.getFieldsConfig();\n        const allFields = Object.keys(fieldConfig);\n        const { mode } = config;\n        const normalizedProjField = getNormalizedProFields(projField, allFields, fieldConfig);\n\n        let dataModel;\n\n        if (mode === FilteringMode.ALL) {\n            let projectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.NORMAL,\n                saveChild: config.saveChild\n            }, allFields);\n            let rejectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.INVERSE,\n                saveChild: config.saveChild\n            }, allFields);\n            dataModel = [projectionClone, rejectionClone];\n        } else {\n            let projectionClone = cloneWithProject(this, normalizedProjField, config, allFields);\n            dataModel = projectionClone;\n        }\n\n        return dataModel;\n    }\n\n    getFieldsConfig () {\n        return this._fieldConfig;\n    }\n\n    calculateFieldsConfig () {\n        this._fieldConfig = this._fieldspace.fields.reduce((acc, fieldObj, i) => {\n            acc[fieldObj.name()] = {\n                index: i,\n                def: fieldObj.schema(),\n            };\n            return acc;\n        }, {});\n        return this;\n    }\n\n\n    /**\n     * Frees up the resources associated with the current DataModel instance and breaks all the links instance has in\n     * the DAG.\n     *\n     * @public\n     */\n    dispose () {\n        this._parent && this._parent.removeChild(this);\n        this._parent = null;\n        this._children.forEach((child) => {\n            child._parent = null;\n        });\n        this._children = [];\n    }\n\n    /**\n     * Removes the specified child {@link DataModel} from the child list of the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\")\n     * dt.removeChild(dt2);\n     *\n     * @private\n     *\n     * @param {DataModel} child - Delegates the parent to remove this child.\n     */\n    removeChild (child) {\n        let idx = this._children.findIndex(sibling => sibling === child);\n        idx !== -1 ? this._children.splice(idx, 1) : true;\n    }\n\n    /**\n     * Sets the specified {@link DataModel} as a parent for the current {@link DataModel} instance.\n     *\n     * @param {DataModel} parent - The datamodel instance which will act as parent.\n     */\n    setParent (parent) {\n        this._parent && this._parent.removeChild(this);\n        this._parent = parent;\n        parent && parent._children.push(this);\n    }\n\n    /**\n     * Returns the parent {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const parentDm = dt2.getParent();\n     *\n     * @return {DataModel} Returns the parent DataModel instance.\n     */\n    getParent () {\n        return this._parent;\n    }\n\n    /**\n     * Returns the immediate child {@link DataModel} instances.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const childDm1 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const childDm2 = dt.select(fields => fields.Origin.value === \"Japan\");\n     * const childDm3 = dt.groupBy([\"Origin\"]);\n     *\n     * @return {DataModel[]} Returns the immediate child DataModel instances.\n     */\n    getChildren () {\n        return this._children;\n    }\n\n    /**\n     * Returns the in-between operation meta data while creating the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const derivations = dt3.getDerivations();\n     *\n     * @return {Any[]} Returns the derivation meta data.\n     */\n    getDerivations () {\n        return this._derivation;\n    }\n\n    /**\n     * Returns the in-between operation meta data happened from root {@link DataModel} to current instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const ancDerivations = dt3.getAncestorDerivations();\n     *\n     * @return {Any[]} Returns the previous derivation meta data.\n     */\n    getAncestorDerivations () {\n        return this._ancestorDerivation;\n    }\n}\n\nexport default Relation;\n","import { fnList } from '../operator/group-by-function';\n\nexport const { sum, avg, min, max, first, last, count, std: sd } = fnList;\n","/**\n * The utility function to calculate major column.\n *\n * @param {Object} store - The store object.\n * @return {Function} Returns the push function.\n */\nexport default (store) => {\n    let i = 0;\n    return (...fields) => {\n        fields.forEach((val, fieldIndex) => {\n            if (!(store[fieldIndex] instanceof Array)) {\n                store[fieldIndex] = Array.from({ length: i });\n            }\n            store[fieldIndex].push(val);\n        });\n        i++;\n    };\n};\n","/**\n * Creates a JS native date object from input\n *\n * @param {string | number | Date} date Input using which date object to be created\n * @return {Date} : JS native date object\n */\nfunction convertToNativeDate (date) {\n    if (date instanceof Date) {\n        return date;\n    }\n\n    return new Date(date);\n}\n/**\n * Apply padding before a number if its less than 1o. This is used when constant digit's number to be returned\n * between 0 - 99\n *\n * @param {number} n Input to be padded\n * @return {string} Padded number\n */\nfunction pad (n) {\n    return (n < 10) ? (`0${n}`) : n;\n}\n/*\n * DateFormatter utility to convert any date format to any other date format\n * DateFormatter parse a date time stamp specified by a user abiding by rules which are defined\n * by user in terms of token. It creates JS native date object from the user specified format.\n * That native date can also be displayed\n * in any specified format.\n * This utility class only takes care of format conversion only\n */\n\n/*\n * Escapes all the special character that are used in regular expression.\n * Like\n * RegExp.escape('sgfd-$') // Output: sgfd\\-\\$\n *\n * @param text {String} : text which is to be escaped\n */\nRegExp.escape = function (text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n};\n\n/**\n * DateTimeFormatter class to convert any user format of date time stamp to any other format\n * of date time stamp.\n *\n * @param {string} format Format of the date given. For the above date,\n * 'year: %Y, month: %b, day: %d'.\n * @class\n */\n/* istanbul ignore next */ function DateTimeFormatter (format) {\n    this.format = format;\n    this.dtParams = undefined;\n    this.nativeDate = undefined;\n}\n\n// The identifier of the tokens\nDateTimeFormatter.TOKEN_PREFIX = '%';\n\n// JS native Date constructor takes the date params (year, month, etc) in a certail sequence.\n// This defines the sequence of the date parameters in the constructor.\nDateTimeFormatter.DATETIME_PARAM_SEQUENCE = {\n    YEAR: 0,\n    MONTH: 1,\n    DAY: 2,\n    HOUR: 3,\n    MINUTE: 4,\n    SECOND: 5,\n    MILLISECOND: 6\n};\n\n/*\n * This is a default number parsing utility. It tries to parse a number in integer, if parsing is unsuccessful, it\n * gives back a default value.\n *\n * @param: defVal {Number} : Default no if the parsing to integer is not successful\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be parsed.\n */\nDateTimeFormatter.defaultNumberParser = function (defVal) {\n    return function (val) {\n        let parsedVal;\n        if (isFinite(parsedVal = parseInt(val, 10))) {\n            return parsedVal;\n        }\n\n        return defVal;\n    };\n};\n\n/*\n * This is a default number range utility. It tries to find an element in the range. If not found it returns a\n * default no as an index.\n *\n * @param: range {Array} : The list which is to be serached\n * @param: defVal {Number} : Default no if the serach and find does not return anything\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be found\n */\nDateTimeFormatter.defaultRangeParser = function (range, defVal) {\n    return (val) => {\n        let i;\n        let l;\n\n        if (!val) { return defVal; }\n\n        const nVal = val.toLowerCase();\n\n        for (i = 0, l = range.length; i < l; i++) {\n            if (range[i].toLowerCase() === nVal) {\n                return i;\n            }\n        }\n\n        if (i === undefined) {\n            return defVal;\n        }\n        return null;\n    };\n};\n\n/*\n * Defines the tokens which are supporter by the dateformatter. Using this definitation a value gets extracted from\n * the user specifed date string. This also formats the value for display purpose from native JS date.\n * The definition of each token contains the following named properties\n * {\n *     %token_name% : {\n *         name: name of the token, this is used in reverse lookup,\n *         extract: a function that returns the regular expression to extract that piece of information. All the\n *                  regex should be gouped by using ()\n *         parser: a function which receives value extracted by the above regex and parse it to get the date params\n *         formatter: a formatter function that takes milliseconds or JS Date object and format the param\n *                  represented by the token only.\n *     }\n * }\n *\n * @return {Object} : Definition of the all the supported tokens.\n */\nDateTimeFormatter.getTokenDefinitions = function () {\n    const daysDef = {\n        short: [\n            'Sun',\n            'Mon',\n            'Tue',\n            'Wed',\n            'Thu',\n            'Fri',\n            'Sat'\n        ],\n        long: [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday'\n        ]\n    };\n    const monthsDef = {\n        short: [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n            'Oct',\n            'Nov',\n            'Dec'\n        ],\n        long: [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December'\n        ]\n    };\n\n    const definitions = {\n        H: {\n            // 24 hours format\n            name: 'H',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n\n                return d.getHours().toString();\n            }\n        },\n        l: {\n            // 12 hours format\n            name: 'l',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours() % 12;\n\n                return (hours === 0 ? 12 : hours).toString();\n            }\n        },\n        p: {\n            // AM or PM\n            name: 'p',\n            index: 3,\n            extract () { return '(AM|PM)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'AM' : 'PM');\n            }\n        },\n        P: {\n            // am or pm\n            name: 'P',\n            index: 3,\n            extract () { return '(am|pm)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'am' : 'pm');\n            }\n        },\n        M: {\n            // Two digit minutes 00 - 59\n            name: 'M',\n            index: 4,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const mins = d.getMinutes();\n\n                return pad(mins);\n            }\n        },\n        S: {\n            // Two digit seconds 00 - 59\n            name: 'S',\n            index: 5,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const seconds = d.getSeconds();\n\n                return pad(seconds);\n            }\n        },\n        K: {\n            // Milliseconds\n            name: 'K',\n            index: 6,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const ms = d.getMilliseconds();\n\n                return ms.toString();\n            }\n        },\n        a: {\n            // Short name of day, like Mon\n            name: 'a',\n            index: 2,\n            extract () { return `(${daysDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.short[day]).toString();\n            }\n        },\n        A: {\n            // Long name of day, like Monday\n            name: 'A',\n            index: 2,\n            extract () { return `(${daysDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.long[day]).toString();\n            }\n        },\n        e: {\n            // 8 of March, 11 of November\n            name: 'e',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return day.toString();\n            }\n        },\n        d: {\n            // 08 of March, 11 of November\n            name: 'd',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return pad(day);\n            }\n        },\n        b: {\n            // Short month, like Jan\n            name: 'b',\n            index: 1,\n            extract () { return `(${monthsDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.short[month]).toString();\n            }\n        },\n        B: {\n            // Long month, like January\n            name: 'B',\n            index: 1,\n            extract () { return `(${monthsDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.long[month]).toString();\n            }\n        },\n        m: {\n            // Two digit month of year like 01 for January\n            name: 'm',\n            index: 1,\n            extract () { return '(\\\\d+)'; },\n            parser (val) { return DateTimeFormatter.defaultNumberParser()(val) - 1; },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return pad(month + 1);\n            }\n        },\n        y: {\n            // Short year like 90 for 1990\n            name: 'y',\n            index: 0,\n            extract () { return '(\\\\d{2})'; },\n            parser (val) {\n                let result;\n                if (val) {\n                    const l = val.length;\n                    val = val.substring(l - 2, l);\n                }\n                let parsedVal = DateTimeFormatter.defaultNumberParser()(val);\n                let presentDate = new Date();\n                let presentYear = Math.trunc((presentDate.getFullYear()) / 100);\n\n                result = `${presentYear}${parsedVal}`;\n\n                if (convertToNativeDate(result).getFullYear() > presentDate.getFullYear()) {\n                    result = `${presentYear - 1}${parsedVal}`;\n                }\n                return convertToNativeDate(result).getFullYear();\n            },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                let year = d.getFullYear().toString();\n                let l;\n\n                if (year) {\n                    l = year.length;\n                    year = year.substring(l - 2, l);\n                }\n\n                return year;\n            }\n        },\n        Y: {\n            // Long year like 1990\n            name: 'Y',\n            index: 0,\n            extract () { return '(\\\\d{4})'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const year = d.getFullYear().toString();\n\n                return year;\n            }\n        }\n    };\n\n    return definitions;\n};\n\n/*\n * The tokens which works internally is not user friendly in terms of memorizing the names. This gives a formal\n * definition to the informal notations.\n *\n * @return {Object} : Formal definition of the tokens\n */\nDateTimeFormatter.getTokenFormalNames = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n\n    return {\n        HOUR: definitions.H,\n        HOUR_12: definitions.l,\n        AMPM_UPPERCASE: definitions.p,\n        AMPM_LOWERCASE: definitions.P,\n        MINUTE: definitions.M,\n        SECOND: definitions.S,\n        SHORT_DAY: definitions.a,\n        LONG_DAY: definitions.A,\n        DAY_OF_MONTH: definitions.e,\n        DAY_OF_MONTH_CONSTANT_WIDTH: definitions.d,\n        SHORT_MONTH: definitions.b,\n        LONG_MONTH: definitions.B,\n        MONTH_OF_YEAR: definitions.m,\n        SHORT_YEAR: definitions.y,\n        LONG_YEAR: definitions.Y\n    };\n};\n\n/*\n * This defines the rules and declares dependencies that resolves a date parameter (year, month etc) from\n * the date time parameter array.\n *\n * @return {Object} : An object that contains dependencies and a resolver function. The dependencies values are fed\n *                  to the resolver function in that particular sequence only.\n */\nDateTimeFormatter.tokenResolver = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const defaultResolver = (...args) => { // eslint-disable-line require-jsdoc\n        let i = 0;\n        let arg;\n        let targetParam;\n        const l = args.length;\n\n        for (; i < l; i++) {\n            arg = args[i];\n            if (args[i]) {\n                targetParam = arg;\n            }\n        }\n\n        if (!targetParam) { return null; }\n\n        return targetParam[0].parser(targetParam[1]);\n    };\n\n    return {\n        YEAR: [definitions.y, definitions.Y,\n            defaultResolver\n        ],\n        MONTH: [definitions.b, definitions.B, definitions.m,\n            defaultResolver\n        ],\n        DAY: [definitions.a, definitions.A, definitions.e, definitions.d,\n            defaultResolver\n        ],\n        HOUR: [definitions.H, definitions.l, definitions.p, definitions.P,\n            function (hourFormat24, hourFormat12, ampmLower, ampmUpper) {\n                let targetParam;\n                let amOrpm;\n                let isPM;\n                let val;\n\n                if (hourFormat12 && (amOrpm = (ampmLower || ampmUpper))) {\n                    if (amOrpm[0].parser(amOrpm[1]) === 'pm') {\n                        isPM = true;\n                    }\n\n                    targetParam = hourFormat12;\n                } else if (hourFormat12) {\n                    targetParam = hourFormat12;\n                } else {\n                    targetParam = hourFormat24;\n                }\n\n                if (!targetParam) { return null; }\n\n                val = targetParam[0].parser(targetParam[1]);\n                if (isPM) {\n                    val += 12;\n                }\n                return val;\n            }\n        ],\n        MINUTE: [definitions.M,\n            defaultResolver\n        ],\n        SECOND: [definitions.S,\n            defaultResolver\n        ]\n    };\n};\n\n/*\n * Finds token from the format rule specified by a user.\n * @param format {String} : The format of the input date specified by the user\n * @return {Array} : An array of objects which contains the available token and their occurence index in the format\n */\nDateTimeFormatter.findTokens = function (format) {\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenLiterals = Object.keys(definitions);\n    const occurrence = [];\n    let i;\n    let forwardChar;\n\n    while ((i = format.indexOf(tokenPrefix, i + 1)) >= 0) {\n        forwardChar = format[i + 1];\n        if (tokenLiterals.indexOf(forwardChar) === -1) { continue; }\n\n        occurrence.push({\n            index: i,\n            token: forwardChar\n        });\n    }\n\n    return occurrence;\n};\n\n/*\n * Format any JS date to a specified date given by user.\n *\n * @param date {Number | Date} : The date object which is to be formatted\n * @param format {String} : The format using which the date will be formatted for display\n */\nDateTimeFormatter.formatAs = function (date, format) {\n    const nDate = convertToNativeDate(date);\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    let formattedStr = String(format);\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    let token;\n    let formattedVal;\n    let i;\n    let l;\n\n    for (i = 0, l = occurrence.length; i < l; i++) {\n        token = occurrence[i].token;\n        formattedVal = definitions[token].formatter(nDate);\n        formattedStr = formattedStr.replace(new RegExp(tokenPrefix + token, 'g'), formattedVal);\n    }\n\n    return formattedStr;\n};\n\n/*\n * Parses the user specified date string to extract the date time params.\n *\n * @return {Array} : Value of date time params in an array [year, month, day, hour, minutes, seconds, milli]\n */\nDateTimeFormatter.prototype.parse = function (dateTimeStamp, options) {\n    const tokenResolver = DateTimeFormatter.tokenResolver();\n    const dtParams = this.extractTokenValue(dateTimeStamp);\n    const dtParamSeq = DateTimeFormatter.DATETIME_PARAM_SEQUENCE;\n    const noBreak = options && options.noBreak;\n    const dtParamArr = [];\n    const args = [];\n    let resolverKey;\n    let resolverParams;\n    let resolverFn;\n    let val;\n    let i;\n    let param;\n    let resolvedVal;\n    let l;\n    let result = [];\n\n    for (resolverKey in tokenResolver) {\n        if (!{}.hasOwnProperty.call(tokenResolver, resolverKey)) { continue; }\n\n        args.length = 0;\n        resolverParams = tokenResolver[resolverKey];\n        resolverFn = resolverParams.splice(resolverParams.length - 1, 1)[0];\n\n        for (i = 0, l = resolverParams.length; i < l; i++) {\n            param = resolverParams[i];\n            val = dtParams[param.name];\n\n            if (val === undefined) {\n                args.push(null);\n            } else {\n                args.push([param, val]);\n            }\n        }\n\n        resolvedVal = resolverFn.apply(this, args);\n\n        if ((resolvedVal === undefined || resolvedVal === null) && !noBreak) {\n            break;\n        }\n\n        dtParamArr[dtParamSeq[resolverKey]] = resolvedVal;\n    }\n\n    if (dtParamArr.length && this.checkIfOnlyYear(dtParamArr.length))\n     {\n        result.unshift(dtParamArr[0], 0, 1); }\n    else {\n        result.unshift(...dtParamArr);\n    }\n\n    return result;\n};\n\n/*\n * Extract the value of the token from user specified date time string.\n *\n * @return {Object} : An key value pair which contains the tokens as key and value as pair\n */\nDateTimeFormatter.prototype.extractTokenValue = function (dateTimeStamp) {\n    const format = this.format;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const tokenObj = {};\n\n    let lastOccurrenceIndex;\n    let occObj;\n    let occIndex;\n    let targetText;\n    let regexFormat;\n\n    let l;\n    let i;\n\n    regexFormat = String(format);\n\n    const tokenArr = occurrence.map(obj => obj.token);\n    const occurrenceLength = occurrence.length;\n    for (i = occurrenceLength - 1; i >= 0; i--) {\n        occIndex = occurrence[i].index;\n\n        if (occIndex + 1 === regexFormat.length - 1) {\n            lastOccurrenceIndex = occIndex;\n            continue;\n        }\n\n        if (lastOccurrenceIndex === undefined) {\n            lastOccurrenceIndex = regexFormat.length;\n        }\n\n        targetText = regexFormat.substring(occIndex + 2, lastOccurrenceIndex);\n        regexFormat = regexFormat.substring(0, occIndex + 2) +\n            RegExp.escape(targetText) +\n            regexFormat.substring(lastOccurrenceIndex, regexFormat.length);\n\n        lastOccurrenceIndex = occIndex;\n    }\n\n    for (i = 0; i < occurrenceLength; i++) {\n        occObj = occurrence[i];\n        regexFormat = regexFormat.replace(tokenPrefix + occObj.token, definitions[occObj.token].extract());\n    }\n\n    const extractValues = dateTimeStamp.match(new RegExp(regexFormat)) || [];\n    extractValues.shift();\n\n    for (i = 0, l = tokenArr.length; i < l; i++) {\n        tokenObj[tokenArr[i]] = extractValues[i];\n    }\n    return tokenObj;\n};\n\n/*\n * Give back the JS native date formed from  user specified date string\n *\n * @return {Date} : Native JS Date\n */\nDateTimeFormatter.prototype.getNativeDate = function (dateTimeStamp) {\n    let date = null;\n    if (Number.isFinite(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    } else if (!this.format && Date.parse(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    }\n    else {\n        const dtParams = this.dtParams = this.parse(dateTimeStamp);\n        if (dtParams.length) {\n            this.nativeDate = new Date(...dtParams);\n            date = this.nativeDate;\n        }\n    }\n    return date;\n};\n\nDateTimeFormatter.prototype.checkIfOnlyYear = function(len) {\n    return len === 1 && this.format.match(/y|Y/g).length;\n};\n\n/*\n * Represents JS native date to a user specified format.\n *\n * @param format {String} : The format according to which the date is to be represented\n * @return {String} : The formatted date string\n */\nDateTimeFormatter.prototype.formatAs = function (format, dateTimeStamp) {\n    let nativeDate;\n\n    if (dateTimeStamp) {\n        nativeDate = this.nativeDate = this.getNativeDate(dateTimeStamp);\n    } else if (!(nativeDate = this.nativeDate)) {\n        nativeDate = this.getNativeDate(dateTimeStamp);\n    }\n\n    return DateTimeFormatter.formatAs(nativeDate, format);\n};\n\nexport { DateTimeFormatter as default };\n","/**\n * Generates domain for measure field.\n *\n * @param {Array} data - The array of data.\n * @return {Array} Returns the measure domain.\n */\nexport default (data) => {\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    data.forEach((d) => {\n        if (d < min) {\n            min = d;\n        }\n        if (d > max) {\n            max = d;\n        }\n    });\n\n    return [min, max];\n};\n","/* eslint-disable */\nconst OBJECTSTRING = 'object';\nconst objectToStrFn = Object.prototype.toString;\nconst objectToStr = '[object Object]';\nconst arrayToStr = '[object Array]';\n\nfunction checkCyclicRef(obj, parentArr) {\n    let i = parentArr.length;\n    let bIndex = -1;\n\n    while (i) {\n        if (obj === parentArr[i]) {\n            bIndex = i;\n            return bIndex;\n        }\n        i -= 1;\n    }\n\n    return bIndex;\n}\n\nfunction merge(obj1, obj2, skipUndef, tgtArr, srcArr) {\n    var item,\n        srcVal,\n        tgtVal,\n        str,\n        cRef;\n    // check whether obj2 is an array\n    // if array then iterate through it's index\n    // **** MOOTOOLS precution\n\n    if (!srcArr) {\n        tgtArr = [obj1];\n        srcArr = [obj2];\n    }\n    else {\n        tgtArr.push(obj1);\n        srcArr.push(obj2);\n    }\n\n    if (obj2 instanceof Array) {\n        for (item = 0; item < obj2.length; item += 1) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (typeof tgtVal !== OBJECTSTRING) {\n                if (!(skipUndef && tgtVal === undefined)) {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                    srcVal = obj1[item] = tgtVal instanceof Array ? [] : {};\n                }\n                cRef = checkCyclicRef(tgtVal, srcArr);\n                if (cRef !== -1) {\n                    srcVal = obj1[item] = tgtArr[cRef];\n                }\n                else {\n                    merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                }\n            }\n        }\n    }\n    else {\n        for (item in obj2) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (tgtVal !== null && typeof tgtVal === OBJECTSTRING) {\n                // Fix for issue BUG: FWXT-602\n                // IE < 9 Object.prototype.toString.call(null) gives\n                // '[object Object]' instead of '[object Null]'\n                // that's why null value becomes Object in IE < 9\n                str = objectToStrFn.call(tgtVal);\n                if (str === objectToStr) {\n                    if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                        srcVal = obj1[item] = {};\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else if (str === arrayToStr) {\n                    if (srcVal === null || !(srcVal instanceof Array)) {\n                        srcVal = obj1[item] = [];\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (skipUndef && tgtVal === undefined) {\n                    continue;\n                }\n                obj1[item] = tgtVal;\n            }\n        }\n    }\n    return obj1;\n}\n\n\nfunction extend2 (obj1, obj2, skipUndef) {\n    //if none of the arguments are object then return back\n    if (typeof obj1 !== OBJECTSTRING && typeof obj2 !== OBJECTSTRING) {\n        return null;\n    }\n\n    if (typeof obj2 !== OBJECTSTRING || obj2 === null) {\n        return obj1;\n    }\n\n    if (typeof obj1 !== OBJECTSTRING) {\n        obj1 = obj2 instanceof Array ? [] : {};\n    }\n    merge(obj1, obj2, skipUndef);\n    return obj1;\n}\n\nexport { extend2 as default };\n","import { DataFormat } from '../enums';\n\n/**\n * Checks whether the value is an array.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an array otherwise returns false.\n */\nexport function isArray (val) {\n    return Array.isArray(val);\n}\n\n/**\n * Checks whether the value is an object.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an object otherwise returns false.\n */\nexport function isObject (val) {\n    return val === Object(val);\n}\n\n/**\n * Checks whether the value is a string value.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is a string value otherwise returns false.\n */\nexport function isString (val) {\n    return typeof val === 'string';\n}\n\n/**\n * Checks whether the value is callable.\n *\n * @param {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is callable otherwise returns false.\n */\nexport function isCallable (val) {\n    return typeof val === 'function';\n}\n\n/**\n * Returns the unique values from the input array.\n *\n * @param {Array} data - The input array.\n * @return {Array} Returns a new array of unique values.\n */\nexport function uniqueValues (data) {\n    return [...new Set(data)];\n}\n\nexport const getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Checks Whether two arrays have same content.\n *\n * @param {Array} arr1 - The first array.\n * @param {Array} arr2 - The 2nd array.\n * @return {boolean} Returns whether two array have same content.\n */\nexport function isArrEqual(arr1, arr2) {\n    if (!isArray(arr1) || !isArray(arr2)) {\n        return arr1 === arr2;\n    }\n\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * It is the default number format function for the measure field type.\n *\n * @param {any} val - The input value.\n * @return {number} Returns a number value.\n */\nexport function formatNumber(val) {\n    return val;\n}\n\n/**\n * Returns the detected data format.\n *\n * @param {any} data - The input data to be tested.\n * @return {string} Returns the data format name.\n */\nexport const detectDataFormat = (data) => {\n    if (isString(data)) {\n        return DataFormat.DSV_STR;\n    } else if (isArray(data) && isArray(data[0])) {\n        return DataFormat.DSV_ARR;\n    } else if (isArray(data) && (data.length === 0 || isObject(data[0]))) {\n        return DataFormat.FLAT_JSON;\n    }\n    return null;\n};\n","export { default as DateTimeFormatter } from './date-time-formatter';\nexport { default as columnMajor } from './column-major';\nexport { default as generateMeasureDomain } from './domain-generator';\nexport { default as extend2 } from './extend2';\nexport * from './helper';\n","import { defReducer, fnList } from '../operator';\n\n/**\n * A page level storage which stores, registers, unregisters reducers for all the datamodel instances. There is only one\n * reducer store available in a page. All the datamodel instances receive same instance of reducer store. DataModel\n * out of the box provides handful of {@link reducer | reducers} which can be used as reducer funciton.\n *\n * @public\n * @namespace DataModel\n */\nclass ReducerStore {\n    constructor () {\n        this.store = new Map();\n        this.store.set('defReducer', defReducer);\n\n        Object.entries(fnList).forEach((key) => {\n            this.store.set(key[0], key[1]);\n        });\n    }\n\n    /**\n     * Changes the `defaultReducer` globally. For all the fields which does not have `defAggFn` mentioned in schema, the\n     * value of `defaultReducer` is used for aggregation.\n     *\n     * @public\n     * @param {string} [reducer='sum'] - The name of the default reducer. It picks up the definition from store by doing\n     * name lookup. If no name is found then it takes `sum` as the default reducer.\n     * @return {ReducerStore} Returns instance of the singleton store in page.\n     */\n    defaultReducer (...params) {\n        if (!params.length) {\n            return this.store.get('defReducer');\n        }\n\n        let reducer = params[0];\n\n        if (typeof reducer === 'function') {\n            this.store.set('defReducer', reducer);\n        } else {\n            reducer = String(reducer);\n            if (Object.keys(fnList).indexOf(reducer) !== -1) {\n                this.store.set('defReducer', fnList[reducer]);\n            } else {\n                throw new Error(`Reducer ${reducer} not found in registry`);\n            }\n        }\n        return this;\n    }\n\n    /**\n     *\n     * Registers a {@link reducer | reducer}.\n     * A {@link reducer | reducer} has to be registered before it is used.\n     *\n     * @example\n     *  // find the mean squared value of a given set\n     *  const reducerStore = DataModel.Reducers();\n     *\n     *  reducers.register('meanSquared', (arr) => {\n     *      const squaredVal = arr.map(item => item * item);\n     *      let sum = 0;\n     *      for (let i = 0, l = squaredVal.length; i < l; i++) {\n     *          sum += squaredVal[i++];\n     *      }\n     *\n     *      return sum;\n     *  })\n     *\n     *  // datamodel (dm) is already prepared with cars.json\n     *  const dm1 = dm.groupBy(['origin'], {\n     *      accleration: 'meanSquared'\n     *  });\n     *\n     * @public\n     *\n     * @param {string} name formal name for a reducer. If the given name already exists in store it is overridden by new\n     *      definition.\n     * @param {Function} reducer definition of {@link reducer} function.\n     *\n     * @return {Function} function for unregistering the reducer.\n     */\n    register (name, reducer) {\n        if (typeof reducer !== 'function') {\n            throw new Error('Reducer should be a function');\n        }\n\n        name = String(name);\n        this.store.set(name, reducer);\n\n        return () => { this.__unregister(name); };\n    }\n\n    __unregister (name) {\n        if (this.store.has(name)) {\n            this.store.delete(name);\n        }\n    }\n\n    resolve (name) {\n        if (name instanceof Function) {\n            return name;\n        }\n        return this.store.get(name);\n    }\n}\n\nconst reducerStore = (function () {\n    let store = null;\n\n    function getStore () {\n        if (store === null) {\n            store = new ReducerStore();\n        }\n        return store;\n    }\n    return getStore();\n}());\n\nexport default reducerStore;\n","import { getNumberFormattedVal } from './helper';\n\n/**\n * The wrapper class on top of the primitive value of a field.\n *\n * @todo Need to have support for StringValue, NumberValue, DateTimeValue\n * and GeoValue. These types should expose predicate API mostly.\n */\nclass Value {\n\n  /**\n   * Creates new Value instance.\n   *\n   * @param {*} val - the primitive value from the field cell.\n   * @param {string | Field} field - The field from which the value belongs.\n   */\n    constructor (value, rawValue, field) {\n        const formattedValue = getNumberFormattedVal(field, value);\n\n        Object.defineProperties(this, {\n            _value: {\n                enumerable: false,\n                configurable: false,\n                writable: false,\n                value\n            },\n            _formattedValue: {\n                enumerable: false,\n                configurable: false,\n                writable: false,\n                value: formattedValue\n            },\n            _internalValue: {\n                enumerable: false,\n                configurable: false,\n                writable: false,\n                value: rawValue\n            }\n        });\n\n        this.field = field;\n    }\n\n  /**\n   * Returns the field value.\n   *\n   * @return {*} Returns the current value.\n   */\n    get value () {\n        return this._value;\n    }\n\n    /**\n     * Returns the parsed value of field\n     */\n    get formattedValue () {\n        return this._formattedValue;\n    }\n\n    /**\n     * Returns the internal value of field\n     */\n    get internalValue () {\n        return this._internalValue;\n    }\n\n  /**\n   * Converts to human readable string.\n   *\n   * @override\n   * @return {string} Returns a human readable string of the field value.\n   *\n   */\n    toString () {\n        return String(this.value);\n    }\n\n  /**\n   * Returns the value of the field.\n   *\n   * @override\n   * @return {*} Returns the field value.\n   */\n    valueOf () {\n        return this.value;\n    }\n}\n\nexport default Value;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar _containerManager = require('./container-manager');\n\nvar _containerManager2 = _interopRequireDefault(_containerManager);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    M = slLib.win.Math,\n    max = M.max,\n    round = M.round,\n    BLANK = '',\n    htmlSplCharSpace = { ' ': '&nbsp;' },\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\n/*\n * Create new instance of SmartLabelManager.\n *\n * SmartLabelManager controls the lifetime of the execution space where the text's metrics will be calculated.\n * This takes a string for a given style and returns the height, width.\n * If a bound box is defined it wraps the text and returns the wrapped height and width.\n * It allows to append ellipsis at the end if the text is truncated.\n *\n * @param {String | Number} id - Id of the instance. If the same id is passed, it disposes the old instance and\n *                              save the new one;\n * @param {String | HTMLElement} container - The id or the instance of the container where the intermediate dom\n *                              elements are to be attached. If not passed, it appends in div\n *\n * @param {Boolean} useEllipses - This decides if a ellipses to be appended if the text is truncated.\n * @param {Object} options - Control options\n *                          {\n *                              maxCacheLimit: No of letter to be cached. Default: 500.\n *                          }\n * @constructor\n */\nfunction SmartLabelManager(id, container, useEllipses, options) {\n    var wrapper,\n        prop,\n        max,\n        prevInstance,\n        isBrowserLess = false,\n        store = SmartLabelManager.store;\n\n    if (typeof id === 'undefined' || typeof id === 'object') {\n        return;\n    }\n\n    if (prevInstance = store[id]) {\n        prevInstance.dispose();\n    }\n\n    store[id] = this;\n    options = options || {};\n    options.maxCacheLimit = isFinite(max = options.maxCacheLimit) ? max : slLib.maxDefaultCacheLimit;\n\n    if (typeof container === 'string') {\n        container = doc.getElementById(container);\n    }\n\n    wrapper = slLib.createContainer(container);\n    wrapper.innerHTML = slLib.testStrAvg;\n\n    if (documentSupport.isHeadLess || !documentSupport.isIE && !wrapper.offsetHeight && !wrapper.offsetWidth) {\n        isBrowserLess = true;\n    }\n\n    wrapper.innerHTML = '';\n    for (prop in slLib.parentContainerStyle) {\n        wrapper.style[prop] = slLib.parentContainerStyle[prop];\n    }\n\n    this.id = id;\n    this.parentContainer = wrapper;\n\n    this._containerManager = new _containerManager2['default'](wrapper, isBrowserLess, 10);\n    this._showNoEllipses = !useEllipses;\n    this._init = true;\n    this.style = {};\n    this.options = options;\n\n    this.setStyle();\n}\n\n/*\n * getSmartText returns the text separated by <br/> whenever a break is necessary. This is to recgonize one\n * generalized format independent of the implementation (canvas based solution, svg based solution). This method\n * converts the output of getSmartText().text to array of lines if the text is wrapped. It sets a named property\n * `lines` on the object passed as parameter.\n *\n * @param {Object} smartlabel - the object returned by getSmartText based on which line arr which to be formed.\n *\n * @return {Object} - The same object which was passed in the arguments. Also a named property `lines` is set.\n */\nSmartLabelManager.textToLines = function (smartlabel) {\n    smartlabel = smartlabel || {};\n\n    if (!smartlabel.text) {\n        smartlabel.text = '';\n    } else if (typeof smartlabel.text !== 'string') {\n        smartlabel.text = smartlabel.text.toString();\n    }\n\n    smartlabel.lines = smartlabel.text.split(/\\n|<br\\s*?\\/?>/ig);\n    return smartlabel;\n};\n\n// Saves all the instance created so far\nSmartLabelManager.store = {};\n\n// Calculates space taken by a character with an approximation value which is calculated by repeating the\n// character by string length times.\nSmartLabelManager.prototype._calCharDimWithCache = function (text, calculateDifference, length) {\n    if (!this._init) {\n        return false;\n    }\n\n    var size,\n        csArr,\n        tw,\n        twi,\n        cachedStyle,\n        asymmetricDifference,\n        maxAdvancedCacheLimit = this.options.maxCacheLimit,\n        container = this._container,\n        style = this.style || {},\n        cache = this._advancedCache || (this._advancedCache = {}),\n        advancedCacheKey = this._advancedCacheKey || (this._advancedCacheKey = []),\n        cacheName = text + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK),\n        cacheInitName = text + 'init' + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK);\n\n    htmlSplCharSpace[text] && (text = htmlSplCharSpace[text]);\n\n    if (!calculateDifference) {\n        asymmetricDifference = 0;\n    } else {\n        if ((asymmetricDifference = cache[cacheInitName]) === undefined) {\n            container.innerHTML = text.repeat ? text.repeat(length) : Array(length + 1).join(text); // jshint ignore:line\n            tw = container.offsetWidth;\n\n            container.innerHTML = text;\n            twi = container.offsetWidth;\n\n            asymmetricDifference = cache[cacheInitName] = (tw - length * twi) / (length + 1);\n            advancedCacheKey.push(cacheInitName);\n            if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n                delete cache[advancedCacheKey.shift()];\n            }\n        }\n    }\n\n    if (cachedStyle = cache[cacheName]) {\n        csArr = cachedStyle.split(',');\n        return {\n            width: parseFloat(csArr[0], 10),\n            height: parseFloat(csArr[1], 10)\n        };\n    }\n\n    container.innerHTML = text;\n\n    size = {\n        height: container.offsetHeight,\n        width: container.offsetWidth + asymmetricDifference\n    };\n\n    cache[cacheName] = size.width + ',' + size.height;\n    advancedCacheKey.push(cacheName);\n    if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n        delete cache[advancedCacheKey.shift()];\n    }\n\n    return size;\n};\n\n// Provide function to calculate the height and width based on the environment and available support from dom.\nSmartLabelManager.prototype._getWidthFn = function () {\n    var contObj = this._containerObj,\n        container = this._container,\n        svgText = contObj.svgText;\n\n    if (svgText) {\n        return function (str) {\n            var bbox, width;\n\n            svgText.textContent = str;\n            bbox = svgText.getBBox();\n            width = bbox.width - SVG_BBOX_CORRECTION;\n            if (width < 1) {\n                width = bbox.width;\n            }\n\n            return width;\n        };\n    } else {\n        return function (str) {\n            container.innerHTML = str;\n            return container.offsetWidth;\n        };\n    }\n};\n\n/*\n * Sets the style based on which the text's metrics to be calculated.\n *\n * @param {Object} style - The style object which affects the text size\n *                      {\n *                          fontSize / 'font-size' : MUST BE FOLLOWED BY PX (10px, 11px)\n *                          fontFamily / 'font-family'\n *                          fontWeight / 'font-weight'\n *                          fontStyle / 'font-style'\n *                      }\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.setStyle = function (style) {\n    if (!this._init) {\n        return this;\n    }\n\n    var sCont;\n\n    if (style === this.style && !this._styleNotSet) {\n        return;\n    }\n\n    if (!style) {\n        style = this.style;\n    }\n\n    slLib.setLineHeight(style);\n    this.style = style;\n\n    this._containerObj = sCont = this._containerManager.get(style);\n\n    if (this._containerObj) {\n        this._container = sCont.node;\n        this._context = sCont.context;\n        this._cache = sCont.charCache;\n        this._lineHeight = sCont.lineHeight;\n        this._styleNotSet = false;\n    } else {\n        this._styleNotSet = true;\n    }\n\n    return this;\n};\n\n/*\n * Decides whether ellipses to be shown if the node is truncated\n *\n * @param {Boolean} useEllipses - decides if a ellipses to be appended if the text is truncated. Default: false\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.useEllipsesOnOverflow = function (useEllipses) {\n    if (!this._init) {\n        return this;\n    }\n    this._showNoEllipses = !useEllipses;\n    return this;\n};\n\n/*\n * Get wrapped or truncated text if a bound box is defined around it. The result text would be separated by <br/>\n * if wrapped\n *\n * @param {String} text - the subject text\n * @param {Number} maxWidth - width in px of the the bound box\n * @param {Number} maxHeight - height in px of the the bound box\n * @param {Boolean} noWrap - whether the text to be wrapped. Default false.\n *\n * @return {Object} - The metrics of the text bounded by the box\n *                  {\n *                      height : height of the wrapped text\n *                      width : width of the wrapped text\n *                      isTruncated : whether the text is truncated\n *                      maxHeight : Maximum height given\n *                      maxWidth : Maximum width given\n *                      oriText : Original text sent\n *                      oriTextHeight : Original text height\n *                      oriTextWidth : Original text width\n *                      text : SMART TEXT\n *                  }\n */\nSmartLabelManager.prototype.getSmartText = function (text, maxWidth, maxHeight, noWrap) {\n    if (!this._init) {\n        return false;\n    }\n\n    if (text === undefined || text === null) {\n        text = '';\n    } else if (typeof text !== 'string') {\n        text = text.toString();\n    }\n\n    var len,\n        trimStr,\n        tempArr,\n        tmpText,\n        maxWidthWithEll,\n        toolText,\n        oriWidth,\n        oriHeight,\n        newCharIndex,\n        nearestChar,\n        tempChar,\n        getWidth,\n        initialLeft,\n        initialTop,\n        getOriSizeImproveObj,\n        spanArr,\n        x,\n        y,\n        minWidth,\n        elem,\n        chr,\n        elemRightMostPoint,\n        elemLowestPoint,\n        lastBR,\n        removeFromIndex,\n        removeFromIndexForEllipses,\n        hasHTMLTag = false,\n        maxStrWidth = 0,\n        lastDash = -1,\n        lastSpace = -1,\n        lastIndexBroken = -1,\n        strWidth = 0,\n        strHeight = 0,\n        oriTextArr = [],\n        i = 0,\n        ellipsesStr = this._showNoEllipses ? '' : '...',\n        lineHeight = this._lineHeight,\n        context = this._context,\n        container = this._container,\n        sCont = this._containerObj,\n        ellipsesWidth = sCont.ellipsesWidth,\n        dotWidth = sCont.dotWidth,\n        characterArr = [],\n        dashIndex = -1,\n        spaceIndex = -1,\n        lastLineBreak = -1,\n        fastTrim = function fastTrim(str) {\n        str = str.replace(/^\\s\\s*/, '');\n        var ws = /\\s/,\n            i = str.length;\n        while (ws.test(str.charAt(i -= 1))) {/* jshint noempty:false */}\n        return str.slice(0, i + 1);\n    },\n        smartLabel = {\n        text: text,\n        maxWidth: maxWidth,\n        maxHeight: maxHeight,\n        width: null,\n        height: null,\n        oriTextWidth: null,\n        oriTextHeight: null,\n        oriText: text,\n        isTruncated: false\n    };\n\n    getWidth = this._getWidthFn();\n\n    // In some browsers, offsetheight of a single-line text is getting little (1 px) heigher value of the\n    // lineheight. As a result, smartLabel is unable to return single-line text.\n    // To fix this, increase the maxHeight a little amount. Hence maxHeight =  lineHeight * 1.2\n    if (maxHeight === lineHeight) {\n        maxHeight *= 1.2;\n    }\n\n    if (container) {\n        if (!documentSupport.isBrowserLess) {\n            hasHTMLTag = slLib.xmlTagRegEx.test(text);\n            if (!hasHTMLTag) {\n                // Due to support of <,> for xml we convert &lt;, &gt; to <,> respectively so to get the correct\n                // width it is required to convert the same before calculation for the new improve version of the\n                // get text width.\n                tmpText = text.replace(slLib.ltgtRegex, function (match) {\n                    return match === '&lt;' ? '<' : '>';\n                });\n                getOriSizeImproveObj = this.getOriSize(tmpText, true);\n\n                smartLabel.oriTextWidth = oriWidth = getOriSizeImproveObj.width;\n                smartLabel.oriTextHeight = oriHeight = getOriSizeImproveObj.height;\n            } else {\n                container.innerHTML = text;\n                smartLabel.oriTextWidth = oriWidth = container.offsetWidth;\n                smartLabel.oriTextHeight = oriHeight = container.offsetHeight;\n            }\n\n            if (oriHeight <= maxHeight && oriWidth <= maxWidth) {\n                smartLabel.width = smartLabel.oriTextWidth = oriWidth;\n                smartLabel.height = smartLabel.oriTextHeight = oriHeight;\n                return smartLabel;\n            }\n\n            if (lineHeight > maxHeight) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = 0;\n                smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            }\n        }\n\n        // Calculate width with ellipses\n        text = fastTrim(text).replace(/(\\s+)/g, ' ');\n        maxWidthWithEll = this._showNoEllipses ? maxWidth : maxWidth - ellipsesWidth;\n\n        if (!hasHTMLTag) {\n            oriTextArr = text.split('');\n            len = oriTextArr.length;\n            trimStr = '', tempArr = [];\n            tempChar = oriTextArr[0];\n\n            if (this._cache[tempChar]) {\n                minWidth = this._cache[tempChar].width;\n            } else {\n                minWidth = getWidth(tempChar);\n                this._cache[tempChar] = { width: minWidth };\n            }\n\n            if (maxWidthWithEll > minWidth) {\n                tempArr = text.substr(0, slLib.getNearestBreakIndex(text, maxWidthWithEll, this)).split('');\n                i = tempArr.length;\n            } else if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            } else if (ellipsesStr) {\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            strWidth = getWidth(tempArr.join(''));\n            strHeight = this._lineHeight;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                            smartLabel.tooltext = smartLabel.oriText;\n                            smartLabel.width = getWidth(smartLabel.text);\n                            smartLabel.height = this._lineHeight;\n                            return smartLabel;\n                        }\n                    }\n                }\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = strWidth;\n                smartLabel.height = this._lineHeight;\n                return smartLabel;\n            } else {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (tempChar === ' ' && !context) {\n                        tempChar = '&nbsp;';\n                    }\n\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            /** @todo use regular expressions for better performance. */\n                            lastSpace = text.substr(0, tempArr.length).lastIndexOf(' ');\n                            lastDash = text.substr(0, tempArr.length).lastIndexOf('-');\n                            if (lastSpace > lastIndexBroken) {\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                tempArr.splice(lastSpace, 1, '<br/>');\n                                lastIndexBroken = lastSpace;\n                                newCharIndex = lastSpace + 1;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === tempArr.length - 1) {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '<br/>-');\n                                } else {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '-<br/>');\n                                }\n                                lastIndexBroken = lastDash;\n                                newCharIndex = lastDash + 1;\n                            } else {\n                                tempArr.splice(tempArr.length - 1, 1, '<br/>' + oriTextArr[i]);\n                                lastLineBreak = tempArr.length - 2;\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastLineBreak + 1).join(''));\n                                lastIndexBroken = lastLineBreak;\n                                newCharIndex = i;\n                            }\n                            strHeight += this._lineHeight;\n                            if (strHeight > maxHeight) {\n                                smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                                smartLabel.tooltext = smartLabel.oriText;\n                                // The max width among all the lines will be the width of the string.\n                                smartLabel.width = maxWidth;\n                                smartLabel.height = strHeight - this._lineHeight;\n                                return smartLabel;\n                            } else {\n                                maxStrWidth = max(maxStrWidth, strWidth);\n                                trimStr = null;\n                                nearestChar = slLib.getNearestBreakIndex(text.substr(newCharIndex), maxWidthWithEll, this);\n                                strWidth = getWidth(text.substr(newCharIndex, nearestChar || 1));\n                                if (tempArr.length < newCharIndex + nearestChar) {\n                                    tempArr = tempArr.concat(text.substr(tempArr.length, newCharIndex + nearestChar - tempArr.length).split(''));\n                                    i = tempArr.length - 1;\n                                }\n                            }\n                        }\n                    }\n                }\n\n                maxStrWidth = max(maxStrWidth, strWidth);\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = maxStrWidth;\n                smartLabel.height = strHeight;\n                return smartLabel;\n            }\n        } else {\n            toolText = text.replace(slLib.spanAdditionRegx, '$2');\n            text = text.replace(slLib.spanAdditionRegx, slLib.spanAdditionReplacer);\n            text = text.replace(/(<br\\s*\\/*\\>)/g, '<span class=\"' + [slLib.classNameWithTag, ' ', slLib.classNameWithTagBR].join('') + '\">$1</span>');\n\n            container.innerHTML = text;\n\n            spanArr = container[documentSupport.childRetriverFn](documentSupport.childRetriverString);\n\n            for (x = 0, y = spanArr.length; x < y; x += 1) {\n                elem = spanArr[x];\n                //chech whether this span is temporary inserted span from it's class\n                if (documentSupport.noClassTesting || slLib.classNameReg.test(elem.className)) {\n                    chr = elem.innerHTML;\n                    if (chr !== '') {\n                        if (chr === ' ') {\n                            spaceIndex = characterArr.length;\n                        } else if (chr === '-') {\n                            dashIndex = characterArr.length;\n                        }\n\n                        characterArr.push({\n                            spaceIdx: spaceIndex,\n                            dashIdx: dashIndex,\n                            elem: elem\n                        });\n                        oriTextArr.push(chr);\n                    }\n                }\n            }\n\n            i = 0;\n            len = characterArr.length;\n            minWidth = characterArr[0].elem.offsetWidth;\n\n            if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n\n                return smartLabel;\n            } else if (minWidth > maxWidthWithEll && !this._showNoEllipses) {\n\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            initialLeft = characterArr[0].elem.offsetLeft;\n            initialTop = characterArr[0].elem.offsetTop;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n                        if (container.offsetWidth > maxWidth) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            } else {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemLowestPoint = elem.offsetHeight + (elem.offsetTop - initialTop);\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    lastBR = null;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n\n                        if (elemRightMostPoint > maxWidth) {\n                            lastSpace = characterArr[i].spaceIdx;\n                            lastDash = characterArr[i].dashIdx;\n                            if (lastSpace > lastIndexBroken) {\n                                characterArr[lastSpace].elem.innerHTML = '<br/>';\n                                lastIndexBroken = lastSpace;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === i) {\n                                    // in case the overflowing character itself is the '-'\n                                    characterArr[lastDash].elem.innerHTML = '<br/>-';\n                                } else {\n                                    characterArr[lastDash].elem.innerHTML = '-<br/>';\n                                }\n                                lastIndexBroken = lastDash;\n                            } else {\n                                elem.parentNode.insertBefore(lastBR = doc.createElement('br'), elem);\n                            }\n\n                            //check whether this break made current element outside the area height\n                            if (elem.offsetHeight + elem.offsetTop > maxHeight) {\n                                //remove the lastly inserted line break\n                                if (lastBR) {\n                                    lastBR.parentNode.removeChild(lastBR);\n                                } else if (lastIndexBroken === lastDash) {\n                                    characterArr[lastDash].elem.innerHTML = '-';\n                                } else {\n                                    characterArr[lastSpace].elem.innerHTML = ' ';\n                                }\n                                removeFromIndex = i;\n                                //break the looping condition\n                                i = len;\n                            } else {\n                                removeFromIndexForEllipses = null;\n                            }\n                        }\n                    } else {\n                        //check whether this break made current element outside the area height\n                        if (elemLowestPoint > maxHeight) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            }\n\n            if (removeFromIndex < len) {\n                //set the trancated property of the smartlabel\n                smartLabel.isTruncated = true;\n\n                /** @todo is this really needed? */\n                removeFromIndexForEllipses = removeFromIndexForEllipses ? removeFromIndexForEllipses : removeFromIndex;\n\n                for (i = len - 1; i >= removeFromIndexForEllipses; i -= 1) {\n                    elem = characterArr[i].elem;\n                    //chech whether this span is temporary inserted span from it's class\n                    elem.parentNode.removeChild(elem);\n                }\n\n                for (; i >= 0; i -= 1) {\n                    elem = characterArr[i].elem;\n                    if (slLib.classNameBrReg.test(elem.className)) {\n                        //chech whether this span is temporary inserted span from it's class\n                        elem.parentNode.removeChild(elem);\n                    } else {\n                        i = 0;\n                    }\n                }\n            }\n\n            //get the smart text\n            smartLabel.text = container.innerHTML.replace(slLib.spanRemovalRegx, '$1').replace(/\\&amp\\;/g, '&');\n            if (smartLabel.isTruncated) {\n                smartLabel.text += ellipsesStr;\n                smartLabel.tooltext = toolText;\n            }\n        }\n\n        smartLabel.height = container.offsetHeight;\n        smartLabel.width = container.offsetWidth;\n\n        return smartLabel;\n    } else {\n        smartLabel.error = new Error('Body Tag Missing!');\n        return smartLabel;\n    }\n};\n\n/*\n * Get the height and width of a text.\n *\n * @param {String} text - Text whose metrics to be measured\n * @param {Boolean} Optional detailedCalculationFlag - this flag if set it calculates per letter position\n *                          information and returns it. Ideally you dont need it unless you want to post process the\n *                          string. And its an EXPENSIVE OPERATION.\n *\n * @return {Object} - If detailedCalculationFlag is set to true the returned object would be\n *                  {\n *                      height: height of the text\n *                      width: width of the text\n *                      detailObj: detail calculation of letters in the format {lettername: width}\n *                  }\n *                  If detailedCalculationFlag is set to false the returned object wont have the detailObj prop.\n */\nSmartLabelManager.prototype.getOriSize = function (text, detailedCalculationFlag) {\n    if (!this._init) {\n        return false;\n    }\n\n    var textArr,\n        letter,\n        lSize,\n        i,\n        l,\n        cumulativeSize = 0,\n        height = 0,\n        indiSizeStore = {};\n\n    if (!detailedCalculationFlag) {\n        return this._calCharDimWithCache(text);\n    }\n\n    // Calculate the width of every letter with an approximation\n    textArr = text.split('');\n    for (i = 0, l = textArr.length; i < l; i++) {\n        letter = textArr[i];\n        lSize = this._calCharDimWithCache(letter, true, textArr.length);\n        height = max(height, lSize.height);\n        cumulativeSize += lSize.width;\n        indiSizeStore[letter] = lSize.width;\n    }\n\n    return {\n        width: round(cumulativeSize),\n        height: height,\n        detailObj: indiSizeStore\n    };\n};\n\n/*\n * Dispose the container and object allocated by the smartlabel\n */\nSmartLabelManager.prototype.dispose = function () {\n    if (!this._init) {\n        return this;\n    }\n\n    this._containerManager && this._containerManager.dispose && this._containerManager.dispose();\n\n    delete this._container;\n    delete this._context;\n    delete this._cache;\n    delete this._containerManager;\n    delete this._containerObj;\n    delete this.id;\n    delete this.style;\n    delete this.parentContainer;\n    delete this._showNoEllipses;\n\n    return this;\n};\n\nexports['default'] = SmartLabelManager;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\nvar lib = {\n\tinit: function init(win) {\n\t\tvar doc = win.document,\n\t\t    nav = win.navigator,\n\t\t    userAgent = nav.userAgent,\n\t\t    DIV = 'DIV',\n\t\t    ceil = Math.ceil,\n\t\t    floor = Math.floor,\n\t\t    containerInstanceCount = 0,\n\t\t    clsNameSpace = 'fusioncharts-smartlabel-',\n\t\t    containerClass = clsNameSpace + 'container',\n\t\t    classNameWithTag = clsNameSpace + 'tag',\n\t\t    classNameWithTagBR = clsNameSpace + 'br';\n\n\t\tlib = {\n\t\t\twin: win,\n\n\t\t\tcontainerClass: containerClass,\n\n\t\t\tclassNameWithTag: classNameWithTag,\n\n\t\t\tclassNameWithTagBR: classNameWithTagBR,\n\n\t\t\tmaxDefaultCacheLimit: 500,\n\n\t\t\tclassNameReg: new RegExp('\\b' + classNameWithTag + '\\b'),\n\n\t\t\tclassNameBrReg: new RegExp('\\b' + classNameWithTagBR + '\\b'),\n\n\t\t\tspanAdditionRegx: /(<[^<\\>]+?\\>)|(&(?:[a-z]+|#[0-9]+);|.)/ig,\n\n\t\t\tspanAdditionReplacer: '$1<span class=\"' + classNameWithTag + '\">$2</span>',\n\n\t\t\tspanRemovalRegx: new RegExp('\\\\<span[^\\\\>]+?' + classNameWithTag + '[^\\\\>]{0,}\\\\>(.*?)\\\\<\\\\/span\\\\>', 'ig'),\n\n\t\t\txmlTagRegEx: new RegExp('<[^>][^<]*[^>]+>', 'i'),\n\n\t\t\tltgtRegex: /&lt;|&gt;/g,\n\n\t\t\tbrReplaceRegex: /<br\\/>/ig,\n\n\t\t\ttestStrAvg: 'WgI',\n\n\t\t\t// This style is applied over the parent smartlabel container. The container is kept hidden from the viewport\n\t\t\tparentContainerStyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: '-9999em',\n\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\tpadding: '0px',\n\t\t\t\twidth: '1px',\n\t\t\t\theight: '1px',\n\t\t\t\toverflow: 'hidden'\n\t\t\t},\n\n\t\t\t// All the style which might affect the text metrics\n\t\t\tsupportedStyle: {\n\t\t\t\tfont: 'font',\n\t\t\t\tfontFamily: 'font-family',\n\t\t\t\t'font-family': 'font-family',\n\t\t\t\tfontWeight: 'font-weight',\n\t\t\t\t'font-weight': 'font-weight',\n\t\t\t\tfontSize: 'font-size',\n\t\t\t\t'font-size': 'font-size',\n\t\t\t\tlineHeight: 'line-height',\n\t\t\t\t'line-height': 'line-height',\n\t\t\t\tfontStyle: 'font-style',\n\t\t\t\t'font-style': 'font-style'\n\t\t\t},\n\n\t\t\t// Get the support list for html the document where the text calcution is to be done.\n\t\t\tgetDocumentSupport: function getDocumentSupport() {\n\t\t\t\tvar childRetriverFn, childRetriverString, noClassTesting;\n\n\t\t\t\tif (doc.getElementsByClassName) {\n\t\t\t\t\tchildRetriverFn = 'getElementsByClassName';\n\t\t\t\t\tchildRetriverString = classNameWithTag;\n\t\t\t\t\tnoClassTesting = true;\n\t\t\t\t} else {\n\t\t\t\t\tchildRetriverFn = 'getElementsByTagName';\n\t\t\t\t\tchildRetriverString = 'span';\n\t\t\t\t\tnoClassTesting = false;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tisIE: /msie/i.test(userAgent) && !win.opera,\n\t\t\t\t\thasSVG: Boolean(win.SVGAngle || doc.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1')),\n\t\t\t\t\tisHeadLess: new RegExp(' HtmlUnit').test(userAgent),\n\t\t\t\t\tisWebKit: new RegExp(' AppleWebKit/').test(userAgent),\n\t\t\t\t\tchildRetriverFn: childRetriverFn,\n\t\t\t\t\tchildRetriverString: childRetriverString,\n\t\t\t\t\tnoClassTesting: noClassTesting\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/*\n    * Create a html div element and attach it with a parent. All the subsequent operations are performed\n    * by upding this dom tree only.\n    *\n    * @param {HTMLElement} - The html element where the newly created div is to be attached. If not passed,\n    *                      the new div is appended on the body.\n    */\n\t\t\tcreateContainer: function createContainer(containerParent) {\n\t\t\t\tvar body, container;\n\n\t\t\t\tif (containerParent && (containerParent.offsetWidth || containerParent.offsetHeight)) {\n\t\t\t\t\tif (containerParent.appendChild) {\n\t\t\t\t\t\tcontainerParent.appendChild(container = doc.createElement(DIV));\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbody = doc.getElementsByTagName('body')[0];\n\n\t\t\t\t\tif (body && body.appendChild) {\n\t\t\t\t\t\tcontainer = doc.createElement(DIV);\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\tcontainerInstanceCount += 1;\n\t\t\t\t\t\tbody.appendChild(container);\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Finds a approximate position where the text is to be broken\n\t\t\tgetNearestBreakIndex: function getNearestBreakIndex(text, maxWidth, sl) {\n\t\t\t\tif (!text || !text.length) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tvar difference,\n\t\t\t\t    getWidth = sl._getWidthFn(),\n\t\t\t\t    charLen = 0,\n\t\t\t\t    increment = 0,\n\t\t\t\t    oriWidth = getWidth(text),\n\t\t\t\t    avgWidth = oriWidth / text.length;\n\n\t\t\t\tdifference = maxWidth;\n\t\t\t\tcharLen = ceil(maxWidth / avgWidth);\n\n\t\t\t\tif (oriWidth < maxWidth) {\n\t\t\t\t\treturn text.length - 1;\n\t\t\t\t}\n\n\t\t\t\tif (charLen > text.length) {\n\t\t\t\t\tdifference = maxWidth - oriWidth;\n\t\t\t\t\tcharLen = text.length;\n\t\t\t\t}\n\n\t\t\t\twhile (difference > 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twhile (difference < 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn charLen;\n\t\t\t},\n\n\t\t\t/*\n    * Determine lineheight of a text for a given style. It adds propery lineHeight to the style passed\n    *\n    * @param {Object} - The style based on which the text's metric needs to be calculated. The calculation happens\n    *                  based on fontSize property, if its not present a default font size is assumed.\n    *\n    * @return {Object} - The style that was passed with lineHeight as a named propery set on the object.\n    */\n\t\t\tsetLineHeight: function setLineHeight(styleObj) {\n\t\t\t\tvar fSize = styleObj.fontSize = styleObj.fontSize || '12px';\n\t\t\t\tstyleObj.lineHeight = styleObj.lineHeight || styleObj['line-height'] || parseInt(fSize, 10) * 1.2 + 'px';\n\t\t\t\treturn styleObj;\n\t\t\t}\n\t\t};\n\n\t\treturn lib;\n\t}\n};\n\nexports['default'] = lib;\nmodule.exports = exports['default'];","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"hyperdis\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hyperdis\"] = factory();\n\telse\n\t\troot[\"hyperdis\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const makeEntry = (arr, sCon) => {\n    arr.forEach((elem) => {\n        if (elem === undefined || elem === null) {\n            return;\n        }\n        sCon[elem] = 1;\n    });\n};\n\nexport default class ForeignSet {\n    constructor (arr) {\n        this._set = {};\n        makeEntry(arr, this._set);\n    }\n\n    append (arr) {\n        makeEntry(arr, this._set);\n        return this;\n    }\n\n    toArray () {\n        return Object.keys(this._set);\n    }\n\n    static difference (set1, set2) {\n        let key;\n        const filteredKeys = [],\n            s1 = set1._set,\n            s2 = set2._set;\n        for (key in s1) {\n            if (!({}).hasOwnProperty.call(s1, key)) {\n                continue;\n            }\n            if (key in s2) {\n                continue;\n            }\n            filteredKeys.push(key);\n        }\n        return new ForeignSet(filteredKeys);\n    }\n}\n","/* global window */\n\nimport ForeignSet from './set';\n\nconst\n    isSimpleObject = (obj) => {\n        let token;\n        if (typeof obj === 'object') {\n            if (obj === null) { return false; }\n            token = Object.prototype.toString.call(obj);\n            if (token === '[object Object]') {\n                return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n            }\n        }\n        return false;\n    },\n    minMsThreshold = 16,\n    /* istanbul ignore next */win = typeof window === 'undefined' ? (this || {}) : window,\n    /* istanbul ignore next */ reqAnimFrame = win.requestAnimationFrame || win.webkitRequestAnimationFrame ||\n        win.mozRequestAnimationFrame || win.oRequestAnimationFrame ||\n        win.msRequestAnimationFrame ||\n        function (callback) {\n            setTimeout(callback, minMsThreshold);\n        },\n\n    getTimeBasedId = () => {\n        if (getTimeBasedId.__lastTime === new Date().getTime()) {\n            return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n        }\n\n        getTimeBasedId.__id = 0;\n        getTimeBasedId.__lastTime = new Date().getTime();\n        return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n    },\n    pullableRecent = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const\n                    hist = node.history,\n                    l = hist.length - 1;\n                return [hist[l - 1 < 0 ? 0 : l - 1], hist[l]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    pullableEnd = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const hist = node.history;\n                return [hist[0], hist[hist.length - 1]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    unique = fns => fns\n                    .reduce((store, fn) => {\n                // @warn function with side effect, it mutates the store passed during initialization\n                        if (fn.__id in store.map) {\n                            return store;\n                        }\n\n                        store.map[fn.__id] = 1;\n                        store.unique.push(fn);\n\n                        return store;\n                    }, { map: {}, unique: [] })\n                    .unique,\n    compose = fns => () => {\n        fns.forEach(fn => fn());\n    },\n    flat = (...params) => {\n        const res = [];\n        params.forEach(param => res.push(...param));\n        return res;\n    },\n    identityMap = arrays => arrays,\n    splitPathProp = (path) => {\n        const pathArr = path.split('.'),\n            len = pathArr.length;\n        return [pathArr.slice(0, len - 1), pathArr[len - 1]];\n    },\n    scheduler = (onFinishCallback) => {\n        let queue = [],\n            animationFrame = null;\n\n        onFinishCallback = onFinishCallback &&\n            typeof onFinishCallback === 'function' && onFinishCallback || (() => { });\n\n        return (listeners, payload) => {\n            [].push.apply(queue, listeners);\n            if (animationFrame === null) {\n                animationFrame = reqAnimFrame(() => {\n                    const tempQ = queue.slice(0);\n                    queue.length = 0;\n                    animationFrame = null;\n\n                    unique(tempQ).forEach(fn => fn());\n                    onFinishCallback(payload);\n                });\n            }\n        };\n    },\n    fetch = namedNode => (...params) => params.map((param) => {\n        const node = namedNode[param];\n        return {\n            name: node.name,\n            qualifiedName: node.qualifiedName,\n            value: node.seed\n        };\n    }),\n    fetchAggregator = (...params) => ({\n        dependencies: params.slice(0, params.length - 1),\n        fn: params[params.length - 1]\n    }),\n    getUpstreamNodes = (list) => {\n        let res = [];\n        const map = {};\n        list.forEach(node => map[node.qualifiedName] = -1);\n        function rec (arr) {\n            arr.forEach((node) => {\n                let qname,\n                    placedIndex,\n                    preArr,\n                    postArr;\n                if (!((qname = node.qualifiedName) in map)) {\n                    map[qname] = res.push(node) - 1;\n                } else {\n                    placedIndex = map[qname];\n                    if (placedIndex !== -1 && placedIndex !== res.length - 1) {\n                        // If not the last element, readjust the array so that the later dependency position is saved\n                        preArr = res.slice(0, placedIndex);\n                        postArr = res.slice(placedIndex + 1);\n                        res = preArr.concat(postArr);\n\n                        // reset the index in map\n                        postArr.forEach((elem, i) => map[elem.qualifiedName] = i + preArr.length);\n                        map[qname] = res.push(node) - 1;\n                    }\n                }\n                rec(node.outgoingEdges);\n            });\n        }\n        rec(list);\n        return res;\n    },\n    resolver = {\n        accumulate: (...params) => {\n            const resp = {};\n            params.forEach((nodeDetails) => {\n                Object.assign(resp, { [nodeDetails.name]: nodeDetails.value });\n            });\n            return resp;\n        },\n        identity: nodeDetails => nodeDetails.value\n    };\n\nfunction resolveDependencyOrder (node, resolved, resolveMap) {\n    let qname;\n    node.edges.forEach((neighbour) => {\n        resolveDependencyOrder(neighbour, resolved, resolveMap);\n    });\n\n    if (node.isRoot() || (qname = node.qualifiedName) in resolveMap) {\n        return;\n    }\n    resolved.push(node);\n    resolveMap[qname] = 1;\n}\n\nclass CustomResolver {\n    constructor (resolver) {\n        this.fn = resolver;\n        this.dep = [];\n    }\n\n    addDependencies(...dep) {\n        this.dep.push(...dep);\n        return this;\n    }\n\n    getDependencies () {\n        return this.dep;\n    }\n\n    get () {\n        return this.fn;\n    }\n}\n\nexport {\n    isSimpleObject,\n    scheduler,\n    compose,\n    flat,\n    identityMap,\n    pullableEnd,\n    pullableRecent,\n    unique,\n    splitPathProp,\n    resolver,\n    ForeignSet,\n    resolveDependencyOrder,\n    fetch,\n    fetchAggregator,\n    CustomResolver,\n    getUpstreamNodes\n};\n","export default class GraphNode {\n    constructor (name, qualifiedName, options) {\n        /* istanbul ignore next */options = options || {};\n        this.name = name;\n        this.qualifiedName = qualifiedName;\n        this.edges = [];\n        this.outgoingEdges = [];\n        this._seed = null;\n        this.requireResolve = true;\n        this.retriever = options.retriever;\n        this.history = [];\n        this.resolver = null;\n        this.electricEdges = [];\n    }\n\n    addDependencies (...dep) {\n        this.edges.push(...dep);\n        dep.forEach(entry => entry.outgoingEdges.push(this));\n        return this;\n    }\n\n    addElectricNode (node) {\n        this.electricEdges.push(node);\n        return this;\n    }\n\n    get seed () {\n        return this._seed;\n    }\n\n    set seed (value) {\n        this._seed = value;\n        this.requireResolve = true;\n        return this;\n    }\n\n    resolve () {\n        this.seed = this.resolver(...this.retrieveDetails());\n        this.history.push(this.seed);\n        this.requireResolve = false;\n        return this;\n    }\n\n    retrieveDetails () {\n        if (this.edges.length === 0) {\n            return [{\n                name: this.name,\n                qualifiedName: this.qualifiedName,\n                value: this.seed\n            }];\n        }\n        return this.retriever(...this.edges.map(edge => edge.qualifiedName));\n    }\n\n    repeatHead () {\n        const\n            history = this.history,\n            head = history[history.length - 1];\n        // @todo- Akash, write test case if history.length === 0 to pass code coverage\n        if (history.length === 0) {\n            return this;\n        }\n        history.push(head);\n        return this;\n    }\n\n    flush () {\n        const hist = this.history,\n            head = hist[hist.length - 1];\n        hist.length = 0;\n        hist.push(head);\n        return this;\n    }\n\n    isRoot () {\n        return this.name === null;\n    }\n}\n","import {\n    pullableRecent,\n    pullableEnd\n} from './utils';\n\nexport default class ElectricNode {\n    constructor () {\n        this.edges = [];\n        this.listeners = {\n            nextFrame: [],\n            currentFrame: []\n        };\n    }\n\n    addEdges (...nodes) {\n        this.edges.push(...nodes);\n        return this;\n    }\n\n    regListenerForCurrFrame (fn) {\n        const lstnrs = this.listeners.currentFrame;\n        let index = lstnrs.push(pullableRecent(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.currentFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    regListenerForNextFrame (fn) {\n        const lstnrs = this.listeners.nextFrame;\n        let index = lstnrs.push(pullableEnd(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.nextFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    hasNextFrameListener () {\n        return !!this.listeners.nextFrame.length;\n    }\n}\n","import {\n    isSimpleObject,\n    resolver,\n    // upstreamNodes,\n    flat,\n    resolveDependencyOrder,\n    getUpstreamNodes,\n    ForeignSet,\n    fetch,\n    CustomResolver,\n    scheduler\n} from './utils';\nimport Node from './graph-node';\nimport ElectricNode from './electric-node';\n\nexport default class Graph {\n    constructor () {\n        this.qualifiedNodeMap = {};\n        this.retriever = fetch(this.qualifiedNodeMap);\n        this.root = new Node(null, null, { retriever: this.retriever });\n        this.root.resolver = resolver.accumulate;\n\n        this._wholeSet = null;\n        this._propagate = true;\n        this.propagationOverride = {\n            currentFrameListeners: false,\n            nextFrameListeners: false\n        };\n\n        this._schedule = scheduler((payload) => {\n            let qname;\n            for (qname in payload.flushTarget) {\n                if (!({}).hasOwnProperty.call(this.qualifiedNodeMap, qname)) {\n                    return;\n                }\n                this.qualifiedNodeMap[qname].flush();\n            }\n        });\n    }\n\n    createNodesFrom (obj, mount) {\n        let val,\n            resolveReqList;\n        const qualifiedNodeMap = this.qualifiedNodeMap,\n            root = this.root,\n            retriever = this.retriever;\n\n        (function rec (objn, qualifiedName, history) {\n            let key,\n                qname,\n                perv,\n                node;\n\n            for (key in objn) {\n                if (!({}).hasOwnProperty.call(objn, key)) {\n                    continue;\n                }\n                qname = `${qualifiedName}${key}`;\n                node = new Node(key, qname, { retriever });\n                qualifiedNodeMap[qname] = node;\n\n                if ((perv = history.perv) !== undefined) {\n                    perv.addDependencies(node);\n                } else {\n                    // top most level entries\n                    root.addDependencies(node);\n                }\n\n                if (isSimpleObject(val = objn[key])) {\n                    rec(val, `${qualifiedName}${key}.`, { perv: node });\n                    node.resolver = resolver.accumulate;\n                } else if (val instanceof CustomResolver) {\n                    node.resolver = val.get();\n                    node.addDependencies(...val.getDependencies().map(qname => qualifiedNodeMap[qname]));\n                } else {\n                    node.resolver = resolver.identity;\n                    node.seed = val;\n                    // node.resolve();\n                }\n            }\n        }(obj, mount === null ? '' : `${mount}.`, {\n            perv: qualifiedNodeMap[mount]\n        }));\n\n        this._wholeSet = new ForeignSet(Object.keys(this.qualifiedNodeMap));\n\n        // Recalculate the model without firing the listeners\n        // @todo selective branch resolve. Currently resolve gets called even for a branch which was updated\n        resolveReqList = this.constructor.getResolvedList(root).concat(root).filter(node => node.requireResolve);\n        resolveReqList.forEach(node => node.resolve());\n        getUpstreamNodes(resolveReqList).forEach(node => node.resolve());\n        return this;\n    }\n\n    getNodeValue (prop) {\n        if (prop in this.qualifiedNodeMap) {\n            return this.qualifiedNodeMap[prop].seed;\n        }\n        return undefined;\n    }\n\n    createElectricNodeOf (props, fnSpec) {\n        const nodes = props.map(prop => this.qualifiedNodeMap[prop]),\n            eNode = new ElectricNode().addEdges(...nodes);\n\n        nodes.forEach(node => node.addElectricNode(eNode));\n        return eNode[`regListenerFor${fnSpec.type}`](fnSpec.fn);\n    }\n\n    update (...params) {\n        let changedSet,\n            upstreamNodes;\n        const\n            electricEdges = [],\n            nodes = params.map((entry) => {\n                entry[0].seed = entry[1];\n                return entry[0];\n            });\n        nodes.forEach(node => node.resolve());\n        electricEdges.push(...flat(...nodes.map(node => node.electricEdges)));\n        changedSet = new ForeignSet(nodes.map(node => node.qualifiedName));\n\n        if (!this._propagate) {\n            this.__execUniqueElectricEdges(electricEdges);\n            this._propagate = true;\n            return this;\n        }\n\n        upstreamNodes = getUpstreamNodes(nodes);\n        upstreamNodes.forEach(upstreamNode => upstreamNode.resolve());\n        changedSet.append(upstreamNodes.map(node => node.qualifiedName));\n        electricEdges.push(...flat(...upstreamNodes.map(node => node.electricEdges)));\n\n        this.__execUniqueElectricEdges(Array.from(new Set(electricEdges)), changedSet);\n        return this;\n    }\n\n    __execUniqueElectricEdges (electricEdges, changedSet) {\n        const\n            cfLstnrs = [], // current frame listeners\n            nfLstnrs = []; // next frame listeners\n        if (changedSet) {\n            const\n                differenceSet = ForeignSet.difference(this._wholeSet, changedSet),\n                entries = differenceSet.toArray();\n\n            entries.forEach(entry => this.qualifiedNodeMap[entry].repeatHead());\n        }\n\n        electricEdges.forEach((e) => {\n            cfLstnrs.push(...e.listeners.currentFrame);\n        });\n        electricEdges.forEach((e) => {\n            nfLstnrs.push(...e.listeners.nextFrame);\n        });\n\n        !this.propagationOverride.currentFrameListeners && cfLstnrs.forEach(fn => fn());\n        !this.propagationOverride.nextFrameListeners && this._schedule(nfLstnrs, { flushTarget: changedSet });\n        this.resetPropagationOverride();\n        return this;\n    }\n\n    resetNodeValue (...qnames) {\n        const nodes = qnames.map(qname => this.qualifiedNodeMap[qname]),\n            args = nodes.map(node => [node, node.seed]);\n        this.update(...args);\n        return this;\n    }\n\n    static getResolvedList (node) {\n        const resolved = [];\n        resolveDependencyOrder(node, resolved, {});\n        return resolved;\n    }\n\n    stopPropagation () {\n        this._propagate = false;\n        return this;\n    }\n\n    resetPropagationOverride () {\n        this.propagationOverride.currentFrameListeners = false;\n        this.propagationOverride.nextFrameListeners = false;\n        return this;\n    }\n\n    setPropagationOverride (key) {\n        this.propagationOverride[`${key}Listeners`] = true;\n        return this;\n    }\n\n    getNodeFromQualifiedName (qname) {\n        return this.qualifiedNodeMap[qname];\n    }\n}\n","import Graph from './graph';\nimport { CustomResolver, fetchAggregator } from './utils';\n\n/**\n * The container class for Hyperdis. Hyperdis is an enabler for observable object with few interesting features like,\n * calculated property, next frame and same frame listeners, multiple listeners etc with a dependency resolving system.\n * It internally uses a graph to hold the hierarchial relationship of a object. Model is merely a container which\n * ties all the components together.\n *\n * @todo Circular dependency detection is not present\n *\n * @example check src/index.spec.js\n * @class\n */\nclass Model {\n    constructor () {\n        this._graph = new Graph();\n        this._lockFlag = false;\n        this._reqQ = [];\n    }\n\n    /**\n     * Static method to create and init the model with an observable seed\n     *\n     * @param {Object} obj The target object which is required to be made observable\n     * @return {Model} instance of the observable object model\n     */\n    static create (obj) {\n        return new Model()._addPropInModel(null, obj);\n    }\n\n    /**\n     * Appends more observable property on the already observable instance. This mutates the original model.\n     *\n     * This function works in two mode. One being\n     * @param {String} mountPoint the property on which the new set of properties will be mounted. If its a nested\n     *                          property then the mountPoint has to be written such a way so it feels like you are\n     *                          accessing the object. If the mount point is not found then he obeservables are added in\n     *                          the root.\n     * @param {Object} The target object which is required to be made observable\n     *\n     * Another being\n     * @param {Object} The target object which is required to be made observable\n     *\n     * @return {Model} instance of the observable object model\n     */\n    append (...params) {\n        let mountPoint,\n            obj;\n\n        if (params.length === 1) {\n            mountPoint = null;\n            obj = params[0];\n        } else {\n            mountPoint = params[0];\n            obj = params[1];\n        }\n\n        this._addPropInModel(mountPoint, obj);\n        return this;\n    }\n\n    /**\n     * Creates a calculated variable from existing variable. This variable can't be updated from outside.\n     * @param {string} mountpoint property path on which the new variable will be placed\n     * @param {string} name name of the variable. If the variable could have hierarchy like `limits.start`\n     * @param {Function} fn funtion where the dependent variables are injected based on the dependency requirement\n     */\n    calculatedProp (...params) {\n        let calculationConfig,\n            customResolver,\n            varName,\n            mount,\n            fetchFn;\n\n        if (params.length > 2) {\n            mount = params[0];\n            varName = params[1];\n            fetchFn = params[2];\n        } else {\n            mount = null;\n            varName = params[0];\n            fetchFn = params[1];\n        }\n\n        calculationConfig = fetchFn(fetchAggregator);\n        customResolver = new CustomResolver(calculationConfig.fn);\n        customResolver.addDependencies(...calculationConfig.dependencies);\n\n        this._addPropInModel(mount, { [varName]: customResolver });\n        return this;\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    _addPropInModel (mountPoint, obj) {\n        this._graph.createNodesFrom(obj, mountPoint);\n        return this;\n    }\n\n    /**\n     * Register a listener in the current frame when a property or group of properties is changed.\n     *\n     * @example\n     * This function takes a single or group of property and handler which is called when any of the properties are\n     * changed.\n     * When a single property is changed the handler is called with two parameter, what was the old value of the state\n     * property and what is the new value.\n     * myState.on('range.start', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 9);\n     * // Output\n     * Value before prop change 1\n     * Value after prop change 9\n     *\n     * If a handler is registered on change of a property which has another state property as value, then the handler\n     * gets called whenever any state property connected to it gets changed\n     *\n     * myState.on('range', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 10);\n     * myState.prop('range.type.absolute', false);\n     *\n     * // Output\n     * Value before prop change\n     * range {\n     *      start: 9,\n     *      end: 5,\n     *      type: {\n     *          absolute: true\n     *      }\n     * }\n     * Value after prop change\n     * range: {\n     *      start: 10,\n     *      end: 5,\n     *      type: {\n     *          absolute: false\n     *      }\n     * }\n     * If a handler is registered with more than one property change then, the handler is called when any of the\n     * properties gets changed. In this cast the handler is called with more than one parameter: each for one state\n     * property which is registered for listening. Each parameter is of type array containing [oldValue, newValue]\n     *\n     * myState.on('range.start', 'range.end', (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * myState.prop('range.start', 12);\n     *\n     * // Output\n     * Start [10, 12]\n     * End [5, 5]\n     *\n     * myState.prop('range.end', 7);\n     *\n     * // Output\n     * Start [12, 12]\n     * End [5, 7]\n     *\n     * The on returns a function which is when called the listener registered gets unregistered\n     *\n     * let unsub = myState.on(['range.start', 'range.end'], (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * // Unsubscribe\n     * unsub()\n     *\n     * On takes an optional boolean value as the last parameter, which if passed as a true value the handler gets called\n     * during registration itself.\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    on (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed in the current stack frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'CurrFrame',\n                fn\n            });\n\n        if (instantCall) {\n            // Bar current next frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('nextFrame').resetNodeValue(...props);\n        }\n        return unsub;\n    }\n\n    /**\n     * Register a listener for the next frame when a property or group of properties is changed.\n     *\n     * @example\n     * See the examples for the on listener\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties. Here the oldvalue is last value of the last frame\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    next (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed at the tick of next animation frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'NextFrame',\n                fn\n            });\n\n        // @todo check support for this from the graph side\n        if (instantCall) {\n            // Bar current frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('currentFrame').resetNodeValue(...props);\n        }\n\n        return unsub;\n    }\n\n    /**\n     * Lock queues the request of property change and releases the change when unlock is called. This is helpful when\n     * multiple property is getting called and the model listeners are to be fired once at the end of update.\n     *\n     * @return {Model} instance of the model\n     */\n    lock () {\n        this._lockFlag = true;\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * Unlock unleashes the change done after the lock was called.\n\n     * @return {Model} instance of the model\n     */\n    unlock () {\n        this._lockFlag = false;\n        this.setProp(...this._reqQ);\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * This acts as getter and setter. If the function is called by passing only one argument, it retrieve the value\n     * associated with the property. If the same function is called using two parameters, first one being the property\n     * and second one being the value, then the value is set for the property and the handlers are called (if any)\n     * which got registered using the on function\n     *\n     * Getter\n     * @param {string} prop property path whose value to be retrieved\n     * @return {Object} value of the property at the time of call\n     *\n     * Setter\n     * @param {string} property property path whose value to be ser\n     * @return {Model} instance of the model\n     */\n    prop (...params) {\n        let prop,\n            val,\n            len;\n\n        switch (len = params.length) {\n        case 1:\n            prop = params[0];\n            break;\n\n        case 2:\n            prop = params[0];\n            val = params[1];\n            break;\n\n        default:\n            return this;\n        }\n\n        if (len === 2) {\n            this._lockFlag ? this._reqQ.push([prop, val]) : this.setProp([prop, val]);\n            return this;\n        }\n\n        return this._graph.getNodeValue(prop);\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    setProp (...props) {\n        // Filter out the calculated variables, so that it cant be changed from outside\n        // @todo if a node is not leafValue, and change is called, ignore it too\n        // props = props.filter(prop => !(VirtualObj.walkTill(prop[0].split('.'), this._vObj).leafValue()\n        //     instanceof CalculatedVar));\n\n        if (props.length === 0) {\n            return this;\n        }\n\n        this._graph.update(...props.map(prop => [this._graph.getNodeFromQualifiedName(prop[0]), prop[1]]));\n        return this;\n    }\n\n    /**\n     * Retrieves the graph representation of the object\n     * @return {Graph} instance of the graph associated to the model\n     */\n    graph () {\n        return this._graph;\n    }\n\n    /**\n     * Get serialized data from the model\n     *\n     * @return {Object} Serialized data\n     */\n    serialize () {\n        return this._graph.root.seed;\n    }\n}\n\nexport default Model;\n","import Model from './model';\n\nexport default Model;\n","const Muze = require('./muze');\n\nmodule.exports = Muze.default ? Muze.default : Muze;\n","'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\nfunction ContainerManager(parentContainer, isBrowserLess, maxContainers) {\n    var svg;\n\n    maxContainers = maxContainers > 5 ? maxContainers : 5;\n    maxContainers = maxContainers < 20 ? maxContainers : 20;\n\n    this.maxContainers = maxContainers;\n    this.first = null;\n    this.last = null;\n    this.containers = {};\n    this.length = 0;\n    this.rootNode = parentContainer;\n\n    if (isBrowserLess) {\n        svg = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'xlink', 'http://www.w3.org/1999/xlink');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'height', '0');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'width', '0');\n        this.svgRoot = svg;\n        this.rootNode.appendChild(svg);\n    }\n}\n\nContainerManager.prototype.get = function (style) {\n    var diff,\n        key,\n        containerObj,\n        containers = this.containers,\n        len = this.length,\n        max = this.maxContainers,\n        keyStr = '';\n\n    for (key in slLib.supportedStyle) {\n        if (style[key] !== undefined) {\n            keyStr += slLib.supportedStyle[key] + ':' + style[key] + ';';\n        }\n    }\n\n    if (!keyStr) {\n        return false;\n    }\n\n    if (containerObj = containers[keyStr]) {\n        if (this.first !== containerObj) {\n            containerObj.prev && (containerObj.prev.next = containerObj.next);\n            containerObj.next && (containerObj.next.prev = containerObj.prev);\n            containerObj.next = this.first;\n            containerObj.next.prev = containerObj;\n            this.last === containerObj && (this.last = containerObj.prev);\n            containerObj.prev = null;\n            this.first = containerObj;\n        }\n    } else {\n        if (len >= max) {\n            diff = len - max + 1;\n            // +1 is to remove an extra entry to make space for the new container to be added.\n            while (diff--) {\n                this.removeContainer(this.last);\n            }\n        }\n        containerObj = this.addContainer(keyStr);\n    }\n\n    return containerObj;\n};\n\nContainerManager.prototype.addContainer = function (keyStr) {\n    var node, container;\n\n    this.containers[keyStr] = container = {\n        next: null,\n        prev: null,\n        node: null,\n        ellipsesWidth: 0,\n        lineHeight: 0,\n        dotWidth: 0,\n        avgCharWidth: 4,\n        keyStr: keyStr,\n        charCache: {}\n    };\n\n    // Since the container objects are arranged from most recent to least recent order, we need to add the new\n    // object at the beginning of the list.\n    container.next = this.first;\n    container.next && (container.next.prev = container);\n    this.first = container;\n    if (!this.last) {\n        this.last = container;\n    }\n    this.length += 1;\n\n    node = container.node = doc.createElement('div');\n    this.rootNode.appendChild(node);\n\n    if (documentSupport.isIE && !documentSupport.hasSVG) {\n        node.style.setAttribute('cssText', keyStr);\n    } else {\n        node.setAttribute('style', keyStr);\n    }\n\n    node.setAttribute('aria-hidden', 'true');\n    node.setAttribute('role', 'presentation');\n    node.style.display = 'inline-block';\n\n    node.innerHTML = slLib.testStrAvg; // A test string.\n    container.lineHeight = node.offsetHeight;\n    container.avgCharWidth = node.offsetWidth / 3;\n\n    if (documentSupport.isBrowserLess) {\n        node = container.svgText = doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n        node.setAttribute('style', keyStr);\n        this.svgRoot.appendChild(node);\n\n        node.textContent = slLib.testStrAvg; // A test string.\n        container.lineHeight = node.getBBox().height;\n        container.avgCharWidth = (node.getBBox().width - SVG_BBOX_CORRECTION) / 3;\n\n        node.textContent = '...';\n        container.ellipsesWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n        node.textContent = '.';\n        container.dotWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n    } else {\n        node.innerHTML = '...';\n        container.ellipsesWidth = node.offsetWidth;\n        node.innerHTML = '.';\n        container.dotWidth = node.offsetWidth;\n        node.innerHTML = '';\n    }\n\n    return container;\n};\n\nContainerManager.prototype.removeContainer = function (cObj) {\n    var keyStr = cObj.keyStr;\n\n    if (!keyStr || !this.length || !cObj) {\n        return;\n    }\n    this.length -= 1;\n\n    cObj.prev && (cObj.prev.next = cObj.next);\n    cObj.next && (cObj.next.prev = cObj.prev);\n    this.first === cObj && (this.first = cObj.next);\n    this.last === cObj && (this.last = cObj.prev);\n\n    cObj.node.parentNode.removeChild(cObj.node);\n\n    delete this.containers[keyStr];\n};\n\nContainerManager.prototype.dispose = function () {\n    var key,\n        containers = this.containers;\n\n    this.maxContainers = null;\n    for (key in containers) {\n        this.removeContainer(containers[key]);\n    }\n\n    this.rootNode.parentNode.removeChild(this.rootNode);\n\n    this.rootNode = null;\n    this.first = null;\n    this.last = null;\n};\n\nmodule.exports = ContainerManager;","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  scale.invertExtent = function(r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1, a, b, t,\n        hiIndex;\n    values.push(values[n] + this.step());\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo));\n    hiIndex = getClosestIndexOf(values, hi);\n    b = lo===hi ? a : Math.max(a, hiIndex - 1);\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    if (reverse) t = a, a = n - b, b = n - t; // map + swap\n    return (a > b) ? undefined : domain().slice(a, b+1);\n  };\n\n  scale.invert = function (r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1,\n        a,\n        t;\n\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo, 'left'));\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    return domain()[reverse ? n - a : a];\n  }\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n\nfunction getClosestIndexOf (arr, value, side) {\n  var low = 0,\n      arrLen = arr.length,\n      high = arrLen - 1,\n      highVal,\n      mid,\n      d1,\n      d2;\n\n  while (low < high) {\n      mid = Math.floor((low + high) / 2);\n      d1 = Math.abs(arr[mid] - value);\n      d2 = Math.abs(arr[mid + 1] - value);\n\n      if (d2 <= d1) {\n          low = mid + 1;\n      }\n      else {\n          high = mid;\n      }\n  }\n\n  if (!side) {\n      return high;\n  }\n\n  highVal = arr[high];\n  if (highVal === value) {\n      return high;\n  } else if (highVal > value) {\n      if (high === 0) { return high; }\n      return side === 'left'? high - 1 : high;\n  } else {\n      if (high === arr.length - 1) { return high; }\n      return side === 'left'? high : high + 1;\n  }\n}","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) return hcl2lab(o);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\nfunction hcl2lab(o) {\n  if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n  var h = o.h * deg2rad;\n  return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return hcl2lab(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(date - date.getMilliseconds());\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationSecond} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration\";\n\nvar hour = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","export default function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n}\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"./colors\";\n\nexport default colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n","import colors from \"./colors\";\n\nexport default colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}\n","import colors from \"./colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export const UNIT_GLOBAL_NAMESPACE = 'app.units';\nexport const UNIT_LOCAL_NAMESPACE = 'local.units';\nexport const LAYER_LOCAL_NAMESPACE = 'local.layers';\nexport const LAYER_GLOBAL_NAMESPACE = 'app.layers';\nexport const GROUP_GLOBAL_NAMESPACE = 'app.group';\nexport const GROUP_LOCAL_NAMESPACE = 'local.group';\nexport const CANVAS_LOCAL_NAMESPACE = 'local.canvas';\nexport const CANVAS_GLOBAL_NAMESPACE = 'app.canvas';\n\n","const ReservedFields = {\n    ROW_ID: '__id__'\n};\n\nexport default ReservedFields;\n","const CommonProps = {\n    ACTION_INF: 'actionInf',\n    ON_LAYER_DRAW: 'onLayerDraw',\n    MATRIX_CREATED: 'matrixCreated'\n};\n\nexport default CommonProps;\n","export const COORD_TYPES = {\n    POLAR: 'polar',\n    CARTESIAN: 'cartesian'\n};\nexport const DATA_TYPE = {\n    FUNCTION: 'function',\n    STRING: 'string',\n    NUMBER: 'number',\n    BOOLEAN: 'Boolean'\n};\nexport const SORT_ORDER_ASCENDING = 'asc';\nexport const SORT_ORDER_DESCENDING = 'desc';\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickTransform = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"))\n        .style('transform', tickTransform);\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.tickTransform = function(_) {\n    return arguments.length ? (tickTransform = _, axis) : tickTransform;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {\n          var ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","export var slice = Array.prototype.slice;\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","import { defaultValue } from '../common-utils';\n\nconst sortSelection = (dataObjects, updateData, sortFn) =>\n    (a, b) => {\n        const kA = a[0];\n        const kB = b[0];\n        return sortFn([a[0], dataObjects.get(kA), updateData.get(kA)], [kB, dataObjects.get(kB), updateData.get(kB)]);\n    };\n\n/**\n * This class represents a selection applied on a data array.\n *\n * @class Selection\n */\nclass Selection {\n    /**\n     * Creates an instance of Selection.\n     * @param {Array<DataObject>} data Array of DataObjects.\n     * @memberof Selection\n     */\n    constructor (idGetter) {\n        this._dataObjects = new Map();\n        this._updateData = new Map();\n        this._enterData = new Map();\n        this._exitData = new Map();\n        this._idGetter = idGetter;\n    }\n\n    /**\n     * This method is used to supply seed data to a selection.\n     *\n     * @param {Array} newData Seed data to create the enter selection.\n     * @param {Functon | undefined } idGetter This function is used to uniqely identify a data entry.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    data (newData) {\n        const entryData = new Map();\n        const exitdata = new Map();\n        const tempMap = new Map();\n        const duplicateData = new Map();\n        const updatedData = this._updateData;\n        const idGetter = this._idGetter;\n\n        newData.forEach((...params) => {\n            const key = idGetter ? idGetter(...params) : params[1];\n            if (!tempMap.has(key)) {\n                tempMap.set(key, params[0]);\n            } else {\n                duplicateData.push(key, params[0]);\n            }\n        });\n\n        let val;\n        // prepare enter data\n        let entries = tempMap.entries();\n        while (val = entries.next().value) {\n            if (!updatedData.has(val[0])) {\n                entryData.set(val[0], val[1]);\n            } else {\n                updatedData.set(val[0], val[1]);\n            }\n        }\n        // prepare exit data\n        entries = updatedData.entries();\n        while (val = entries.next().value) {\n            if (!tempMap.has(val[0])) {\n                exitdata.set(val[0], val[1]);\n            }\n        }\n\n        // put duplicate data to exit list\n        entries = duplicateData.entries();\n        while (val = entries.next().value) {\n            exitdata.set(val[0], val[1]);\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updateData = updatedData;\n        newSelection._dataObjects = this._dataObjects;\n        newSelection._enterData = entryData;\n        newSelection._exitData = exitdata;\n\n        return newSelection;\n    }\n\n    /**\n     * Applies the supplied callback to each data element\n     * and returns a new selection.\n     *\n     * @param {Function} callback Callback to execute on each item.\n     * @return {Selection} New selection with data created using callback.\n     * @memberof Selection\n     */\n    append (callback) {\n        let val;\n        const dataObjects = new Map();\n        const data = new Map();\n        const mode = defaultValue(this._mode, 'update');\n        const currentData = this[`_${mode}Data`];\n        const entries = currentData.entries();\n\n        while (val = entries.next().value) {\n            dataObjects.set(val[0], callback(val[1]));\n            data.set(val[0], val[1]);\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updateData = data;\n        newSelection._dataObjects = dataObjects;\n\n        return newSelection;\n    }\n\n     /**\n     * This method returns an enter selection that\n     * allows or update operations.\n     *\n     * @return {Selection} Instance of enter selection.\n     * @memberof Selection\n     */\n    enter () {\n        this._mode = 'enter';\n        return this;\n    }\n\n    /**\n     * Returns a selection with exit data.\n     *\n     * @return {Selection} Instance of selection.\n     * @memberof Selection\n     */\n    exit () {\n        this._mode = 'exit';\n        return this;\n    }\n\n     /**\n     * This method merges the data of one selection with another.\n     *\n     * @param {Selection} selection Instance of selection.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    merge (target) {\n        const mergedObjects = new Map();\n        const mergedData = new Map();\n        let val;\n        let entries;\n\n        // merge Object and data present in this selection\n        entries = this._updateData.entries();\n        while (val = entries.next().value) {\n            if (!this._exitData.has(val[0])) {\n                mergedData.set(val[0], val[1]);\n                mergedObjects.set(val[0], this._dataObjects.get(val[0]));\n            }\n        }\n\n        // merge object from target selection\n        entries = target._updateData.entries();\n        while (val = entries.next().value) {\n            if (!(mergedData.has(val[0]) || target._exitData.has(val[0]))) {\n                mergedData.set(val[0], val[1]);\n                mergedObjects.set(val[0], target._dataObjects.get(val[0]));\n            }\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updateData = mergedData;\n        newSelection._dataObjects = mergedObjects;\n\n        return newSelection;\n    }\n\n    each (fn) {\n        let val;\n        const entries = this._dataObjects.entries();\n\n        while (val = entries.next().value) {\n            fn(val[1], this._updateData.get(val[0]), val[0]);\n        }\n    }\n\n    map (fn) {\n        const newdata = new Map();\n        let val;\n        const entries = this._dataObjects.entries();\n\n        while (val = entries.next().value) {\n            newdata.set(val[0], fn(val[1], this._updateData.get(val[0]), val[0]));\n        }\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updateData = this._updateData;\n        newSelection._dataObjects = newdata;\n\n        return newSelection;\n    }\n\n    remove () {\n        const mode = defaultValue(this._mode, 'update');\n        const currentData = this[`_${mode}Data`];\n\n        currentData.clear();\n\n        return this;\n    }\n\n    sort (sortFn) {\n        const updateData = this._updateData;\n        const dataObjects = this._dataObjects;\n        const sortSel = sortSelection(dataObjects, updateData, sortFn);\n\n        this._updateData = new Map([...updateData.entries()].sort(sortSel));\n        this._dataObjects = new Map([...dataObjects.entries()].sort(sortSel));\n        return this;\n    }\n\n    /**\n     *  Gets the object bound to a class\n     *\n     * @return {Object} current data set bound to the class\n     * @memberof Selection\n     */\n    getObjects () {\n        let val;\n        const objects = [];\n        const dataObjects = this._dataObjects;\n        // select the data to create object\n        const mode = defaultValue(this._mode, 'update');\n        const currentData = this[`_${mode}Data`];\n        const entries = currentData.entries();\n\n        while (val = entries.next().value) {\n            if (dataObjects.has(val[0])) {\n                objects.push(dataObjects.get(val[0]));\n            }\n        }\n\n        return objects;\n    }\n}\n\nexport default Selection;\n","import Selection from './selection';\n/**\n * This function applies a selection operation on a data array.\n *\n * @export\n * @param {Array} [data=[]] The data array to be observed.\n * @return {Selection} Instance of a selection.\n */\nexport default function dataSelect (idFn) {\n    return new Selection(idFn);\n}\n\n","export const ORDER_ASCENDING = 'ascending';\nexport const ORDER_DESCENDING = 'descending';\nexport const ORDER_NONE = 'none';\nexport const OFFSET_DIVERGING = 'diverging';\nexport const OFFSET_NONE = 'none';\nexport const OFFSET_EXPAND = 'expand';\nexport const OFFSET_WIGGLE = 'wiggle';\n","/* global window, requestAnimationFrame, cancelAnimationFrame */\nimport { FieldType, DimensionSubtype, DateTimeFormatter, DM_DERIVATIVES, default as DataModel } from 'datamodel';\nimport {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom\n} from 'd3-axis';\nimport {\n    symbolCircle,\n    symbolCross,\n    symbolDiamond,\n    symbolSquare,\n    symbolStar,\n    symbolWye,\n    symbolTriangle,\n    symbol,\n    stack as d3Stack,\n    stackOffsetDiverging,\n    stackOrderNone,\n    stackOrderAscending,\n    stackOrderDescending,\n    stackOffsetNone,\n    stackOffsetExpand,\n    stackOffsetWiggle,\n    pie,\n    arc,\n    line,\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    area\n} from 'd3-shape';\nimport { scaleBand } from 'd3-scale';\nimport { nest } from 'd3-collection';\nimport {\n    interpolate,\n    interpolateRgb,\n    piecewise,\n    interpolateNumber,\n    interpolateHslLong\n} from 'd3-interpolate';\nimport {\n    easeCubic,\n    easeBounce,\n    easePoly,\n    easeBack,\n    easeCircle,\n    easeLinear,\n    easeElastic\n} from 'd3-ease';\nimport {\n   color,\n   rgb,\n   hsl\n} from 'd3-color';\nimport { voronoi } from 'd3-voronoi';\nimport { dataSelect } from './DataSystem';\nimport { DATA_TYPE, SORT_ORDER_ASCENDING, SORT_ORDER_DESCENDING } from './enums';\nimport * as STACK_CONFIG from './enums/stack-config';\n\nconst { CATEGORICAL, TEMPORAL } = DimensionSubtype;\nconst { STRING, FUNCTION } = DATA_TYPE;\nconst { InvalidAwareTypes } = DataModel;\nconst HTMLElement = window.HTMLElement;\n\nconst isSimpleObject = (obj) => {\n    let token;\n    if (typeof obj === 'object') {\n        if (obj === null) { return false; }\n        token = Object.prototype.toString.call(obj);\n        if (token === '[object Object]') {\n            return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n        }\n    }\n    return false;\n};\n\n/**\n * Returns unique id\n * @return {string} Unique id string\n */\nconst\n    getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Deep copies an object and returns a new object.\n * @param {Object} o Object to clone\n * @return {Object} New Object.\n */\nconst clone = (o) => {\n    const output = {};\n    let v;\n    for (const key in o) {\n        if ({}.hasOwnProperty.call(o, key)) {\n            v = o[key];\n            output[key] = isSimpleObject(v) ? clone(v) : v;\n        }\n    }\n    return output;\n};\n\n/**\n* Checks the existence of keys in an object\n* @param {Array} keys Set of keys which are to be checked\n* @param {Object} obj whose keys are checked from the set of keys provided\n* @return {Object} Error if the keys are absent, or the object itself\n*/\nconst checkExistence = (keys, obj) => {\n    const nonExistentKeys = [];\n    keys.forEach((key) => {\n        if (key in obj) {\n            return;\n        }\n        nonExistentKeys.push(key);\n    });\n    return nonExistentKeys;\n};\n\nconst sanitizeIP = {\n    typeObj: (keys, obj) => {\n        if (typeof obj !== 'object') {\n            return Error('Argument type object expected');\n        }\n\n        const nonExistentKeys = checkExistence(keys, obj);\n        if (nonExistentKeys.length) {\n            return Error(`Missing keys from parameter ${nonExistentKeys.join(', ')}`);\n        }\n        return obj;\n    },\n\n    /* istanbul ignore next */ htmlElem: (elem) => {\n        if (!(elem instanceof HTMLElement)) {\n            return Error('HTMLElement required');\n        }\n        return elem;\n    }\n};\n\n/**\n * Gets the maximum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Maximum value\n */\nconst getMax = (data, field) => Math.max(...data.map(d => d[field]));\n\n/**\n * Gets the minimum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Minimum value\n */\nconst getMin = (data, field) => Math.min(...data.map(d => d[field]));\n\n/**\n * Gets the domain from the data based on the field name and type of field\n * @param  {Array.<Object> | Array.<Array>} data       Data Array\n * @param  {Array.<string>} fields    Array of fields from where the domain will be calculated\n * @param {string} fieldType Type of field - nominal, quantitiative, temporal.\n * @return {Array} Usually contains a min and max value if field is quantitative or\n * an array of values if field type is nominal or ordinal\n */\nconst getDomainFromData = (data, fields, fieldType) => {\n    let domain;\n    const domArr = [];\n    data = data[0] instanceof Array ? data : [data];\n\n    switch (fieldType) {\n    case CATEGORICAL:\n        domain = [].concat(...data.map(arr => arr.map(d => d[fields[0]]).filter(d => d !== undefined)));\n        break;\n    default:\n        for (let i = 0, len = data.length; i < len; i++) {\n            const arr = data[i];\n            const [field0, field1] = fields;\n            const arr0 = arr.filter(d => !isNaN(d[field0]));\n            const arr1 = arr.filter(d => !isNaN(d[field1]));\n            if (arr0.length || arr1.length) {\n                const firstMin = getMin(arr0, field0);\n                const secondMin = getMin(arr1, field1);\n                const firstMax = getMax(arr0, field0);\n                const secondMax = getMax(arr1, field1);\n                domArr.push([Math.min(firstMin, secondMin), Math.max(firstMax, secondMax)]);\n            }\n        }\n        domain = domArr.length ? [Math.min(...domArr.map(d => d[0])), Math.max(...domArr.map(d => d[1]))] : [];\n        break;\n    }\n    return domain;\n};\n\nconst sanitizeDomainWhenEqual = (domain) => {\n    if (domain[0] === domain[1]) {\n        domain[0] = domain[0] > 0 ? 0 : domain[0];\n        domain[1] = domain[1] > 0 ? domain[1] : 0;\n    }\n    return domain;\n};\n\n/**\n * Union Domain values\n * @param {Array.<Array>} domains Array of domain values\n * @param {string} fieldType type of field - dimension,measure or datetime.\n * @return {Array} Unioned domain of all domain values.\n */\nconst unionDomain = (domains, fieldType) => {\n    let domain = [];\n    domains = domains.filter(dom => dom && dom.length);\n    if (domains.length) {\n        if (fieldType === CATEGORICAL) {\n            domain = [].concat(...domains);\n        } else {\n            domain = [Math.min(...domains.map(d => d[0])), Math.max(...domains.map(d => d[1]))];\n        }\n    }\n\n    return domain;\n};\n\nconst symbolFns = {\n    circle: symbolCircle,\n    cross: symbolCross,\n    diamond: symbolDiamond,\n    square: symbolSquare,\n    star: symbolStar,\n    wye: symbolWye,\n    triangle: symbolTriangle\n};\n\nconst easeFns = {\n    cubic: easeCubic,\n    bounce: easeBounce,\n    linear: easeLinear,\n    elastic: easeElastic,\n    back: easeBack,\n    poly: easePoly,\n    circle: easeCircle\n};\n\n/**\n * Returns the maximum or minimum points of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @param {string} minOrMax minimum or maximum.\n * @return {Object} Minimum or maximum point.\n */\nconst getExtremePoint = (points, compareValue, minOrMax) => {\n    let extremePoint;\n    let point;\n    const len = points.length;\n    let minOrMaxVal = minOrMax === 'max' ? -Infinity : Infinity;\n    let val;\n\n    for (let i = 0; i < len; i++) {\n        point = points[i];\n        val = point[compareValue];\n        if (minOrMax === 'min' ? val < minOrMaxVal : val > minOrMaxVal) {\n            minOrMaxVal = val;\n            extremePoint = point;\n        }\n    }\n\n    return extremePoint;\n};\n\n/**\n * Returns the minimum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Minimum point.\n */\nconst getMinPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'min');\n\n/**\n * Returns the maximum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Maximum point.\n */\nconst getMaxPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'max');\n\n/**\n * Gets the index of the closest value of the given value from the array.\n * @param {Array} arr Array of values\n * @param {number} value Value from which the nearest value will be calculated.\n * @param {string} side side property.\n * @return {number} index of the closest value\n */\n/* istanbul ignore next */const getClosestIndexOf = (arr, value, side) => {\n    let low = 0;\n    const arrLen = arr.length;\n    let high = arrLen - 1;\n\n    let mid;\n    let d1;\n    let d2;\n\n    while (low < high) {\n        mid = Math.floor((low + high) / 2);\n        d1 = Math.abs(arr[mid] - value);\n        d2 = Math.abs(arr[mid + 1] - value);\n\n        if (d2 <= d1) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n\n    if (!side) {\n        return high;\n    }\n\n    const highVal = arr[high];\n    if (highVal === value) {\n        return high;\n    } else if (highVal > value) {\n        if (high === 0) { return high; }\n        return side === 'left' ? high - 1 : high;\n    }\n    if (high === arr.length - 1) { return high; }\n    return side === 'left' ? high : high + 1;\n};\n\nconst getNearestValue = (data, key) => {\n    const filterData = data.filter(d => typeof d === 'number');\n    return filterData[getClosestIndexOf(filterData, key)];\n};\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst getWindow = () => window;\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst reqAnimFrame = (() => requestAnimationFrame)();\n\nconst cancelAnimFrame = (() => cancelAnimationFrame)();\n\n/**\n * Capitalizes the first letter of the word\n * @param {string} text word\n * @return {string} Capitalized word\n */\nconst capitalizeFirst = (text) => {\n    text = text.toLowerCase();\n\n    return text.replace(/\\w\\S*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1));\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst unique = arr => ([...new Set(arr)]);\n\n/**\n * Gets the minimum difference between two consecutive numbers  in an array.\n * @param {Array} arr Array of numbers\n * @param {number} index index of the value\n * @return {number} minimum difference between values\n */\n/* istanbul ignore next */ const getMinDiff = (arr, index) => {\n    let diff;\n    let uniqueVals;\n    if (index !== undefined) {\n        uniqueVals = unique(arr.map(d => d[index]));\n    } else {\n        uniqueVals = unique(arr);\n    }\n    if (uniqueVals.length > 1) {\n        diff = Math.abs(uniqueVals[1] - uniqueVals[0]);\n        for (let i = 2, len = uniqueVals.length; i < len; i++) {\n            diff = Math.min(diff, Math.abs(uniqueVals[i] - uniqueVals[i - 1]));\n        }\n    } else {\n        diff = uniqueVals[0];\n    }\n\n    return diff;\n};\n\n/**\n * Returns the class name appended with a given id.\n * @param {string} cls class name\n * @param {string} id unique identifier\n * @param {string} prefix string needed to add before the classname\n * @return {string} qualified class name\n */\n/* istanbul ignore next */const getQualifiedClassName = (cls, id, prefix) => {\n    cls = cls.replace(/^\\.*/, '');\n    return [`${prefix}-${cls}`, `${prefix}-${cls}-${id}`];\n};\n\n/**\n * This method is used to set the default value for variables\n * without sullying the code with conditional statements.\n *\n * @export\n * @param {any} param The parameter to test.\n * @param {any} value The default value to assign.\n * @return {any} The value.\n */\n/* istanbul ignore next */ const defaultValue = (param, value) => {\n    if (typeof param === 'undefined' || (typeof param === 'object' && !param)) {\n        return value;\n    }\n    return param;\n};\n\n/**\n * DESCRIPTION TODO\n *\n * @export\n * @param {Object} graph graph whose dependency order has to be generated\n * @return {Object}\n */\nconst getDependencyOrder = (graph) => {\n    const dependencyOrder = [];\n    const visited = {};\n    const keys = Object.keys(graph);\n    /**\n     * DESCRIPTION TODO\n     *\n     * @export\n     * @param {Object} name\n     * @return {Object}\n     */\n    const visit = (name) => {\n        if (dependencyOrder.length === keys.length) {\n            return true;\n        }\n        visited[name] = true;\n        const edges = graph[name];\n        for (let e = 0; e < edges.length; e++) {\n            const dep = edges[e];\n            if (!visited[dep]) {\n                visit(dep);\n            }\n        }\n\n        dependencyOrder.push(name);\n        return false;\n    };\n\n    for (let i = 0; i < keys.length; i++) {\n        if (visit(keys[i], i)) break;\n    }\n\n    return dependencyOrder;\n};\n\n/**\n * Iterates over the properties of an object and applies the function\n *\n * @param {any} obj object to be iterated upon\n * @param {any} fn  function to be applied on it\n */\nconst objectIterator = (obj, fn) => {\n    for (const key in obj) {\n        if (Object.hasOwnProperty.call(obj, key)) {\n            fn(key, obj);\n        }\n    }\n};\n\n/**\n * This class creates a d3 voronoi for retrieving the nearest neighbour of any point from a set of two\n * dimensional points\n * @class Voronoi\n */\n/* istanbul ignore next */ class Voronoi {\n    /**\n     * Initialize the voronoi with the data given.\n     * @param {Array.<Object>} data Array of points.\n     */\n    constructor (data = []) {\n        this._voronoi = voronoi().x(d => d.x).y(d => d.y);\n        this.data(data);\n    }\n\n    /**\n     * Sets the data to voronoi\n     * @param {Array.<Object>} data Array of objects.\n     * @return {Voronoi} Instance of voronoi.\n     */\n    data (data) {\n        if (data) {\n            this._voronoiFn = this._voronoi(data);\n        }\n        return this;\n    }\n\n    /**\n     * Finds the closest point to the x and y position given.\n     * @param {number} x x value\n     * @param {number} y y value\n     * @param {number} radius search radius.\n     * @return {Object} Details of the nearest point.\n     */\n    find (x, y, radius) {\n        return this._voronoiFn.find(x, y, radius);\n    }\n}\n\nconst getObjProp = (obj, ...fields) => {\n    if (obj === undefined || obj === null) {\n        return obj;\n    }\n    let retObj = obj;\n    for (let i = 0, len = fields.length; i < len; i++) {\n        retObj = retObj[fields[i]];\n        if (retObj === undefined || retObj === null) {\n            break;\n        }\n    }\n    return retObj;\n};\n\n/**\n * Sanitize an input number / string mixed number. Currently dot in the no is not supported.\n *\n * @param {number | string} val pure number or string mixed number\n * @return {number | null}  Number if it can be extracted. Otherwise null\n */\nconst intSanitizer = (val) => {\n    const arr = val.toString().match(/(\\d+)(px)*/g);\n    if (!arr) {\n        // If only characters are passed\n        return null;\n    }\n\n    return parseInt(arr[0], 10);\n};\n\nconst generateGetterSetters = (context, props) => {\n    Object.entries(props).forEach((propInfo) => {\n        const prop = propInfo[0];\n        const { sanitization, preset, onset, typeChecker, defaultValue: defVal } = propInfo[1];\n        const prototype = context.constructor.prototype;\n        if (!(Object.hasOwnProperty.call(prototype, prop))) {\n            if (defVal) {\n                context[`_${prop}`] = defVal;\n            }\n            context[prop] = (...params) => {\n                if (params.length) {\n                    let value = params[0];\n                    if (sanitization) {\n                        value = sanitization(context, params[0], context[`_${prop}`]);\n                    }\n                    if (preset) {\n                        preset(context, value);\n                    }\n                    if (typeChecker && !typeChecker(value)) {\n                        return context[`_${prop}`];\n                    }\n                    context[`_${prop}`] = value;\n                    if (onset) {\n                        onset(context, value);\n                    }\n                    return context;\n                } return context[`_${prop}`];\n            };\n        }\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} prop\n */\nconst getArraySum = (arr, prop) => arr.reduce((total, elem) => {\n    total += prop ? elem[prop] : elem;\n    return total;\n}, 0);\n\n/**\n *\n *\n * @param {*} arr1\n * @param {*} arr2\n *\n */\nconst arraysEqual = (arr1, arr2) => {\n    if (arr1.length !== arr2.length) { return false; }\n    for (let i = arr1.length; i >= 0; i--) {\n        if (arr1[i] !== arr2[i]) { return false; }\n    }\n\n    return true;\n};\n\n/* eslint valid-typeof:0 */\n/**\n * Returns a validation function which can be used to validate variables against a type and value\n *\n * @param {any} type type of value that the object should have\n * @return {Object} validation function\n */\nconst isEqual = type => (oldVal, newVal) => {\n    if (type === 'Array') {\n        if (!oldVal) {\n            return false;\n        }\n        return arraysEqual(oldVal, newVal);\n    } else if (type === 'Object') {\n        return Object.is(oldVal, newVal);\n    } return oldVal === newVal;\n};\n\n/**\n * Description @todo\n *\n * @param {any} transactionModel @todo\n * @param {any} transactionEndpoint @todo\n * @param {any} transactionItems @todo\n * @return {any} @todo\n */\nconst enableChainedTransaction = (transactionModel, transactionEndpoint, transactionItems) =>\n    transactionItems.forEach(item => transactionModel\n        .registerImmediateListener(item, ([, newVal]) => transactionEndpoint[item](newVal)));\n\n/**\n * Chceks if the element is istanceof HTMLElement\n *\n * @param {Object} elem any JS Object\n */\nconst isHTMLElem = elem => elem instanceof HTMLElement;\n\nconst ERROR_MSG = {\n    INTERFACE_IMPL: 'Method not implemented'\n};\n\n/**\n * Merges the sink object in the source by recursively iterating through the object properties\n * @param {Object} source Source Object\n * @param {Object} sink Sink Object\n * @return {Object} Merged object\n */\nconst mergeRecursive = (source, sink) => {\n    for (const prop in sink) {\n        if (isSimpleObject(source[prop]) && isSimpleObject(sink[prop])) {\n            mergeRecursive(source[prop], sink[prop]);\n        } else if (sink[prop] instanceof Object && sink[prop].constructor === Object) {\n            source[prop] = {};\n            mergeRecursive(source[prop], sink[prop]);\n        } else {\n            source[prop] = sink[prop];\n        }\n    }\n    return source;\n};\n\n/**\n * Creates a selection set from a data set with corresponding attributes\n *\n * @export\n * @param {Selection} sel contains previous selection\n * @param {Object} appendObj Object to be appended\n * @param {Array} data Data based on which the selection is entered/updated/removed\n * @param {Object} [attrs={}] Attributes to be set on the data\n * @return {Selection} Merged selection\n */\nconst createSelection = (sel, appendObj, data, idFn) => {\n    let selection = sel || dataSelect(idFn);\n\n    selection = selection.data(data);\n\n    const enter = selection.enter().append(appendObj);\n    const mergedSelection = enter.merge(selection);\n\n    const exitSelection = selection.exit();\n    exitSelection.getObjects().forEach(inst => inst.remove());\n    exitSelection.remove();\n    return mergedSelection;\n};\n\nconst interpolateArray = (data, fitCount) => {\n    const linearInterpolate = function (before, after, atPoint) {\n        return before + (after - before) * atPoint;\n    };\n    const newData = [];\n    const springFactor = ((data.length - 1) / (fitCount - 1));\n    newData[0] = data[0]; // for new allocation\n    for (let i = 1; i < fitCount - 1; i++) {\n        const tmp = i * springFactor;\n        const before = (Math.floor(tmp)).toFixed();\n        const after = (Math.ceil(tmp)).toFixed();\n        const atPoint = tmp - before;\n        newData[i] = linearInterpolate(data[before], data[after], atPoint);\n    }\n    newData[fitCount - 1] = data[data.length - 1]; // for new allocation\n    return newData;\n};\n\n/**\n *\n *\n * @param {*} fn\n */\nconst nextFrame = (fn) => {\n    setTimeout(() => {\n        fn();\n    }, 0);\n};\n\n/**\n *\n *\n * @param {*} angle\n */\nconst angleToRadian = angle => angle * Math.PI / 180;\n\n/**\n *\n *\n * @param {*} newName\n * @param {*} oldName\n */\nconst replaceCSSPrefix = () => {\n    // @todo\n};\n\n/**\n * Gets the  interpolator function from d3 color\n *\n */\nconst interpolator = () => interpolate;\n\n/**\n * Gets the number interpolator from d3 color\n *\n */\nconst numberInterpolator = () => interpolateNumber;\n\n/**\n * Gets the rgb interpolator from d3 color\n *\n */\nconst colorInterpolator = () => interpolateRgb;\n\n/**\n * Gets the hsl interpolator from d3 color\n *\n */\nconst hslInterpolator = () => interpolateHslLong;\n\nconst transformColors = () => ({\n    color,\n    rgb,\n    hsl\n});\n\n/**\n * Gets the piecewise interpolator from d3 color\n *\n */\nconst piecewiseInterpolator = () => piecewise;\n\nfunction hue2rgb (p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n\n  /**\n   * Converts an HSL color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n   * Assumes h, s, and l are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  l       The lightness\n   * @return  Array           The RGB representation\n   */\nconst hslToRgb = (h, s, l, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    if (s === 0) {\n        r = g = b = l; // achromatic\n    } else {\n        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const p = 2 * l - q;\n\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\n  /**\n   * Converts an RGB color value to HSV. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes r, g, and b are contained in the set [0, 255] and\n   * returns h, s, and v in the set [0, 1].\n   *\n   * @param   Number  r       The red color value\n   * @param   Number  g       The green color value\n   * @param   Number  b       The blue color value\n   * @return  Array           The HSV representation\n   */\nconst rgbToHsv = (r, g, b, a = 1) => {\n    r = +r; g = +g; b = +b; a = +a;\n    r /= 255; g /= 255; b /= 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let h;\n    let s;\n    const l = (max + min) / 2;\n\n    if (max === min) {\n        h = s = 0; // achromatic\n    } else {\n        const d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n        case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n        case g: h = (b - r) / d + 2; break;\n        case b: h = (r - g) / d + 4; break;\n        default: break;\n        }\n        h /= 6;\n    }\n    return [h, s, l, a];\n};\n\n  /**\n   * Converts an HSV color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes h, s, and v are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  v       The value\n   * @return  Array           The RGB representation\n   */\nconst hsvToRgb = (h, s, v, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    const i = Math.floor(h * 6);\n    const f = h * 6 - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n    case 0: r = v; g = t; b = p; break;\n    case 1: r = q; g = v; b = p; break;\n    case 2: r = p; g = v; b = t; break;\n    case 3: r = p; g = q; b = v; break;\n    case 4: r = t; g = p; b = v; break;\n    case 5: r = v; g = p; b = q; break;\n    default: break;\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\nconst hexToHsv = (hex) => {\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    hex = hex.replace(shorthandRegex, (m, r, g, b) => r + r + g + g + b + b);\n\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? rgbToHsv(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) : '';\n};\n\nconst RGBAtoRGB = (r, g, b, a, r2 = 255, g2 = 255, b2 = 255) => {\n    const r3 = Math.round(((1 - a) * r2) + (a * r));\n    const g3 = Math.round(((1 - a) * g2) + (a * g));\n    const b3 = Math.round(((1 - a) * b2) + (a * b));\n    return `rgb(${r3},${g3},${b3})`;\n};\n\nconst hslaToRgb = (h, s, l, a) => {\n    const [r, g, b, a1] = hslToRgb(h, s, l, a);\n    return RGBAtoRGB(r, g, b, a1);\n};\n\nconst detectColor = (col) => {\n    const matchRgb = /rgb\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})\\)/;\n    const matchHsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g;\n\n    // Source :  https://gist.github.com/sethlopezme/d072b945969a3cc2cc11\n     // eslint-disable-next-line\n    const matchRgba = /rgba?\\(((25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,\\s*?){2}(25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,?\\s*([01]\\.?\\d*?)?\\)/;\n     // eslint-disable-next-line\n    const matchHsla = /^hsla\\(([\\d.]+),\\s*([\\d.]+)%,\\s*([\\d.]+)%,\\s*(\\d*(?:\\.\\d+)?)\\)$/;\n    const matchHex = /^#([0-9a-f]{3}){1,2}$/i;\n\n    if (matchRgb.test(col) || matchRgba.test(col)) {\n        return 'rgb';\n    } else if (matchHsl.test(col) || matchHsla.test(col)) {\n        return 'hsl';\n    } else if (matchHex.test(col)) {\n        return 'hex';\n    } return col;\n};\n\nconst assembleModelFromIdentifiers = (model, identifiers) => {\n    let schema = [];\n    let data;\n    const fieldMap = model.getFieldsConfig();\n    if (identifiers.length) {\n        const fields = identifiers[0];\n        const len = fields.length;\n        for (let i = 0; i < len; i++) {\n            const field = fields[i];\n            const fieldObj = fieldMap[field] && Object.assign({}, fieldMap[field].def);\n            if (fieldObj) {\n                schema.push(Object.assign(fieldObj));\n            }\n        }\n\n        data = [];\n        const header = identifiers[0];\n        for (let i = 1; i < identifiers.length; i += 1) {\n            const vals = identifiers[i];\n            const temp = {};\n            vals.forEach((fieldVal, cIdx) => {\n                temp[header[cIdx]] = fieldVal;\n            });\n            data.push(temp);\n        }\n    } else {\n        data = [];\n        schema = [];\n    }\n\n    return new model.constructor(data, schema);\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} criteria\n *\n */\nconst getDataModelFromRange = (dataModel, criteria, mode, hasBarLayer) => {\n    if (criteria === null) return null;\n\n    const selFields = Object.keys(criteria);\n    const selFn = fields => selFields.every((field) => {\n        let fieldValue = fields[field].internalValue;\n        const range = criteria[field][0] instanceof Array ? criteria[field][0] : criteria[field];\n\n        if (typeof range[0] === STRING) {\n            return range.find(d => d === fieldValue) !== undefined;\n        }\n\n        if (range) {\n            // Check if the selected bar value lies inside the selection box\n            let isFieldSelected = fieldValue >= range[0] && fieldValue <= range[1];\n            if (hasBarLayer && !isFieldSelected) {\n                // Check if the selection box overlaps the bar, if overlap bar is selected\n                fieldValue = [0, fieldValue];\n                isFieldSelected = fieldValue[0] <= range[1] && range[0] <= fieldValue[1];\n            }\n            return isFieldSelected;\n        }\n        return true;\n    });\n\n    return dataModel.select(selFn, {\n        saveChild: false,\n        mode\n    });\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} identifiers\n *\n */\nconst getDataModelFromIdentifiers = (dataModel, identifiers, mode, hasBarLayer) => {\n    let filteredDataModel;\n    if (identifiers instanceof Array) {\n        const fieldsConfig = dataModel.getFieldsConfig();\n\n        const dataArr = identifiers.slice(1, identifiers.length);\n        if (identifiers instanceof Function) {\n            filteredDataModel = identifiers(dataModel, {}, false);\n        } else if (identifiers instanceof Array && identifiers[0].length) {\n            const filteredSchema = identifiers[0].filter(d => d in fieldsConfig);\n            filteredDataModel = dataModel.select((fields) => {\n                let include = true;\n                filteredSchema.forEach((propField, idx) => {\n                    const value = fields[propField].internalValue;\n                    const index = dataArr.findIndex(d => d[idx] === value);\n                    include = include && index !== -1;\n                });\n                return include;\n            }, {\n                saveChild: false,\n                mode\n            });\n        } else {\n            filteredDataModel = dataModel.select(() => false, {\n                saveChild: false,\n                mode\n            });\n        }\n    } else {\n        filteredDataModel = getDataModelFromRange(dataModel, identifiers, mode, hasBarLayer);\n    }\n    return filteredDataModel;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} listenerMap\n */\nconst registerListeners = (context, listenerMap, ...params) => {\n    const propListenerMap = listenerMap(context, ...params);\n    for (const key in propListenerMap) {\n        if ({}.hasOwnProperty.call(propListenerMap, key)) {\n            const { namespace } = params[1];\n            let ns = null;\n            if (namespace) {\n                ns = namespace;\n            }\n            const mapObj = propListenerMap[key];\n            const propType = mapObj.type;\n            const props = mapObj.props;\n            const listenerFn = mapObj.listener;\n            context.store()[propType](props, listenerFn, false, {\n                namespace: ns\n            });\n        }\n    }\n};\n\nconst isValidValue = value => !isNaN(value) && value !== -Infinity && value !== Infinity;\n/**\n *\n *\n * @param {*} str\n *\n */\nconst escapeHTML = (str) => {\n    const htmlEscapes = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#x27;',\n        '/': '&#x2F;'\n    };\n    const htmlEscaper = /[&<>\"'/]/g;\n    return (`${str}`).replace(htmlEscaper, match => htmlEscapes[match]);\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst transposeArray = arr => arr[0].map((col, i) => arr.map(row => row[i]));\nconst toArray = arr => (arr instanceof Array ? arr : [arr]);\nconst extendsClass = (cls, extendsFrom, found) => {\n    if (!cls) {\n        return false;\n    }\n    const prototype = cls.prototype;\n    if (prototype instanceof extendsFrom) {\n        found = true;\n    } else {\n        found = extendsClass(prototype, extendsFrom, found);\n    }\n    return found;\n};\n\n/**\n *\n * @param {*} dm1\n * @param {*} dm2\n */\nconst concatModels = (dm1, dm2) => {\n    const dataObj1 = dm1.getData();\n    const dataObj2 = dm2.getData();\n    const data1 = dataObj1.data;\n    const data2 = dataObj2.data;\n    const schema1 = dataObj1.schema;\n    const schema2 = dataObj2.schema;\n    const tuples1 = {};\n    const tuples2 = {};\n    const commonTuples = {};\n    for (let i = 0; i < data1.length; i++) {\n        for (let ii = 0; ii < data2.length; ii++) {\n            const row1 = data1[i];\n            const row2 = data2[ii];\n            const dim1Values = row1.filter((d, idx) => schema1[idx].type === FieldType.DIMENSION);\n            const dim2Values = row2.filter((d, idx) => schema2[idx].type === FieldType.DIMENSION);\n            const allDimSame = dim1Values.every(value => dim2Values.indexOf(value) !== -1);\n            if (allDimSame) {\n                const key = dim1Values.join();\n                !commonTuples[key] && (commonTuples[key] = {});\n                row1.forEach((value, idx) => {\n                    commonTuples[key][schema1[idx].name] = value;\n                });\n                row2.forEach((value, idx) => {\n                    commonTuples[key][schema2[idx].name] = value;\n                });\n            } else {\n                const dm1Key = dim1Values.join();\n                const dm2Key = dim2Values.join();\n                if (!commonTuples[dm1Key] && !commonTuples[dm2Key]) {\n                    !tuples1[dm1Key] && (tuples1[dm1Key] = {});\n                    !tuples2[dm2Key] && (tuples2[dm2Key] = {});\n                    row1.forEach((value, idx) => {\n                        tuples1[dm1Key][schema1[idx].name] = value;\n                    });\n                    row2.forEach((value, idx) => {\n                        tuples2[dm2Key][schema2[idx].name] = value;\n                    });\n                }\n            }\n        }\n    }\n\n    const commonSchema = [...schema1, ...schema2.filter(s2 => schema1.findIndex(s1 => s1.name === s2.name) === -1)];\n    const data = [...Object.values(tuples1), ...Object.values(tuples2), ...Object.values(commonTuples)];\n    return [data, commonSchema];\n};\n\nconst getSymbol = type => symbol().type(symbolFns[type]);\n\nconst stackOrders = {\n    [STACK_CONFIG.ORDER_NONE]: stackOrderNone,\n    [STACK_CONFIG.ORDER_ASCENDING]: stackOrderAscending,\n    [STACK_CONFIG.ORDER_DESCENDING]: stackOrderDescending\n};\nconst stackOffsets = {\n    [STACK_CONFIG.OFFSET_DIVERGING]: stackOffsetDiverging,\n    [STACK_CONFIG.OFFSET_NONE]: stackOffsetNone,\n    [STACK_CONFIG.OFFSET_EXPAND]: stackOffsetExpand,\n    [STACK_CONFIG.OFFSET_WIGGLE]: stackOffsetWiggle\n};\n\n// eslint-disable-next-line require-jsdoc\nconst stack = params => d3Stack().keys(params.keys).offset(stackOffsets[params.offset])\n                .order(stackOrders[params.order])(params.data);\n\n/**\n * Groups the data into a hierarchical tree structure based on one or more fields.\n * @param { Object } params Configuration properties for nesting data\n * @param { Array.<Array> } params.data Data which needs to be grouped\n * @param { Array.<number> } params.keys Field indices by which the data will be grouped\n * @return { Array.<Object> } Grouped data array\n */\nconst nestCollection = (params) => {\n    const nestFn = nest();\n    params.keys.forEach(key => nestFn.key(d => d[key]));\n    return nestFn.entries(params.data);\n};\n\n/**\n * Returns array difference, elements in array A, not in Array B\n * @param { Array.<number> } arr Data which needs to be grouped\n * @param { Array.<number> } arr1 Field indices by which the data will be grouped\n * @return { Array.<number> } Returns the array difference (A - B)\n */\nconst getArrayDiff = (arr, arr1) => arr.filter(el => arr1.indexOf(el) < 0);\n\nconst pathInterpolators = {\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    stepAfter: curveStepAfter,\n    catmullRom: curveCatmullRom,\n    step: curveStep,\n    stepBefore: curveStepBefore,\n    linear: curveLinear\n};\n\nconst Symbols = {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom,\n    line,\n    area,\n    pie,\n    arc,\n    nest\n};\n\nconst Scales = {\n    band: scaleBand\n};\n\nconst getSmallestDiff = (points) => {\n    points = points.sort((a, b) => a - b);\n    let minDiff = points[1] - points[0];\n    for (let i = 2; i < points.length; i++) {\n        minDiff = Math.min(minDiff, points[i] - points[i - 1]);\n    }\n\n    return minDiff;\n};\n\nconst timeFormats = {\n    millisecond: '%A, %b %e, %H:%M:%S.%L',\n    second: '%A, %b %e, %H:%M:%S',\n    minute: '%A, %b %e, %H:%M',\n    hour: '%A, %b %e, %H:%M',\n    day: '%A, %b %e, %Y',\n    month: '%B %Y',\n    year: '%Y'\n};\n\nconst timeDurations = [\n    ['millisecond', 'second', 'minute', 'hour', 'day', 'month', 'year'],\n    [1, 1000, 60000, 3600000, 86400000, 2592000000, 31536000000]\n];\n\nconst getNearestInterval = (interval) => {\n    const index = getClosestIndexOf(timeDurations[1], interval);\n    return timeDurations[0][index];\n};\n\nconst formatTemporal = (value, interval) => {\n    const nearestInterval = getNearestInterval(interval);\n    return DateTimeFormatter.formatAs(value, timeFormats[nearestInterval]);\n};\n\nconst temporalFields = (dataModel) => {\n    const filteredFields = {};\n    Object.entries(dataModel.getFieldspace().getDimension()).forEach(([fieldName, fieldObj]) => {\n        if (fieldObj.subtype() === TEMPORAL) {\n            filteredFields[fieldName] = fieldObj;\n        }\n    });\n    return filteredFields;\n};\n\nconst require = (lookupWhat, lookupDetails) => ({\n    resolvable: (store) => {\n        const lookupTarget = store[lookupWhat];\n        const depArr = lookupDetails.slice(0, lookupDetails.length - 1);\n        const fn = lookupDetails[lookupDetails.length - 1]; // fn\n\n        const deps = depArr.map(str => lookupTarget[str]);\n        return {\n            fn: fn(...deps),\n            depArr\n        };\n    }\n});\n\nconst nextAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||\n    function (callback) {\n        setTimeout(callback, 16);\n    };\n\nconst getValueParser = config => (val) => {\n    if (val instanceof InvalidAwareTypes) {\n        return val in config ? config[val] : `${val}`;\n    }\n    return val;\n};\n\nconst retrieveNearestGroupByReducers = (dataModel, ...measureFieldNames) => {\n    const filteredReducers = {};\n    if (dataModel instanceof DataModel) {\n        const derivations = [...dataModel.getDerivations().reverse(), ...dataModel.getAncestorDerivations().reverse()];\n        const nearestReducers = defaultValue(\n            getObjProp(derivations.find(derv => derv.op === DM_DERIVATIVES.GROUPBY), 'criteria'), {});\n\n        const measures = dataModel.getFieldspace().getMeasure();\n        measureFieldNames = measureFieldNames.length ? measureFieldNames : Object.keys(measures);\n        measureFieldNames.forEach((measureName) => {\n            if (nearestReducers[measureName]) {\n                filteredReducers[measureName] = nearestReducers[measureName];\n            } else {\n                const measureField = measures[measureName];\n                if (measureField) {\n                    filteredReducers[measureName] = measureField.defAggFn();\n                }\n            }\n        });\n    }\n    return filteredReducers;\n};\n\nconst retrieveFieldDisplayName = (dm, fieldName) => dm.getFieldspace().fieldsObj()[fieldName].displayName();\n/**\n * Fetches the nearest sort operation details by traversing the chain of parent DataModels\n * @param {Object} dataModel Instance of DataModel\n *\n * @return {Array|null} sort criteria, null if no sort operation found\n */\nconst nearestSortingDetails = (dataModel) => {\n    const allDerivations = [...dataModel.getAncestorDerivations(), ...dataModel.getDerivations()];\n    const nearestSortDerivation = allDerivations.reverse().find(derivation => derivation.op === DM_DERIVATIVES.SORT);\n\n    return nearestSortDerivation ? nearestSortDerivation.criteria : null;\n};\n\n/**\n * Map containing key, value sortingOrder pairs\n */\nconst sortOrderMap = {\n    [SORT_ORDER_ASCENDING]: (firstVal, secondVal) => firstVal.localeCompare(secondVal),\n    [SORT_ORDER_DESCENDING]: (firstVal, secondVal) => secondVal.localeCompare(firstVal)\n};\n\n/**\n * Sort categorical field based on it's sorting order\n * @param {string} sortOrder Order by which field is to be sorted (asc or desc or func)\n * @param {string} firstVal First sort parameter\n * @param {string} secondVal Second sort parameter\n * @return {number} position|null if sort order is invalid\n*/\nconst sortCategoricalField = (sortOrder, firstVal, secondVal) => {\n    const sortOrderType = typeof sortOrder;\n\n    if (sortOrderType === FUNCTION) {\n        return sortOrder(firstVal, secondVal);\n    } else if (sortOrderType === STRING) {\n        if (!sortOrderMap[sortOrder]) return null;\n        return sortOrderMap[sortOrder](firstVal, secondVal);\n    }\n    return null;\n};\n\nconst intersect = (arr1, arr2, accessors = [v => v, v => v]) => {\n    const [fn1, fn2] = accessors;\n    const set = new Set(arr2.map(v => fn2(v)));\n    return arr1.filter(value => set.has(fn1(value)));\n};\n\nconst partition = (array, filterFn) => array.reduce((acc, v, i) => {\n    const pass = filterFn(v, i, array);\n\n    pass ? acc[0].push(v) : acc[1].push(v);\n    return acc;\n}, [[], []]);\n\nconst mix = superclass => ({\n    with: (...mixins) => mixins.reduce((cls, mixin) => mixin(cls), superclass)\n});\n\nconst componentRegistry = (comps) => {\n    const reg = Object.assign({}, comps);\n    const regObj = {\n        register: (def, customKey) => {\n            const key = customKey || def.formalName();\n\n            reg[key] = def;\n            return regObj;\n        },\n        get: () => reg\n    };\n\n    return regObj;\n};\n\nexport {\n    arraysEqual,\n    componentRegistry,\n    mix,\n    partition,\n    getValueParser,\n    require,\n    intersect,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    stack,\n    nestCollection,\n    getArrayDiff,\n    getSymbol,\n    transformColors,\n    detectColor,\n    hexToHsv,\n    hslToRgb,\n    rgbToHsv,\n    hsvToRgb,\n    hslaToRgb,\n    concatModels,\n    toArray,\n    angleToRadian,\n    escapeHTML,\n    generateGetterSetters,\n    getArraySum,\n    interpolator,\n    piecewiseInterpolator,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    colorInterpolator,\n    numberInterpolator,\n    ERROR_MSG,\n    reqAnimFrame,\n    nextAnimFrame,\n    transposeArray,\n    cancelAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    symbolFns,\n    easeFns,\n    clone,\n    isEqual,\n    interpolateArray,\n    getMinPoint,\n    defaultValue,\n    getMaxPoint,\n    getClosestIndexOf,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    enableChainedTransaction,\n    isHTMLElem,\n    isSimpleObject,\n    nextFrame,\n    registerListeners,\n    replaceCSSPrefix,\n    getObjProp,\n    extendsClass,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    hslInterpolator,\n    getSmallestDiff,\n    getNearestValue,\n    retrieveNearestGroupByReducers,\n    nearestSortingDetails,\n    createSelection,\n    formatTemporal,\n    temporalFields,\n    retrieveFieldDisplayName,\n    sanitizeDomainWhenEqual,\n    sortCategoricalField\n};\n","export function linear(t) {\n  return +t;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","export default function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n}\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_join from \"./join\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  join: selection_join,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","export default function(onenter, onupdate, onexit) {\n  var enter = this.enter(), update = this, exit = this.exit();\n  enter = typeof onenter === \"function\" ? onenter(enter) : enter.append(onenter + \"\");\n  if (onupdate != null) update = onupdate(update);\n  if (onexit == null) exit.remove(); else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"cancel\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTED) throw new Error(\"too late; already running\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions.\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(node, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {set} from \"./schedule\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleNull(name, interpolate) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        string1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, string10 = string1);\n  };\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = style(this, name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        value1 = value(this),\n        string1 = value1 + \"\";\n    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction styleMaybeRemove(id, name) {\n  var on0, on1, listener0, key = \"style.\" + name, event = \"end.\" + key, remove;\n  return function() {\n    var schedule = set(this, id),\n        on = schedule.on,\n        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n      .styleTween(name, styleNull(name, i))\n      .on(\"end.style.\" + name, styleRemove(name))\n    : typeof value === \"function\" ? this\n      .styleTween(name, styleFunction(name, i, tweenValue(this, \"style.\" + name, value)))\n      .each(styleMaybeRemove(this._id, name))\n    : this\n      .styleTween(name, styleConstant(name, i, value), priority)\n      .on(\"end.style.\" + name, null);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\nimport transition_end from \"./end\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease,\n  end: transition_end\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttribute(name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttributeNS(fullname.space, fullname.local);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttribute(name);\n    string0 = this.getAttribute(name);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    string0 = this.getAttributeNS(fullname.space, fullname.local);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrInterpolate(name, i) {\n  return function(t) {\n    this.setAttribute(name, i(t));\n  };\n}\n\nfunction attrInterpolateNS(fullname, i) {\n  return function(t) {\n    this.setAttributeNS(fullname.space, fullname.local, i(t));\n  };\n}\n\nfunction attrTweenNS(fullname, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","function styleInterpolate(name, i, priority) {\n  return function(t) {\n    this.style.setProperty(name, i(t), priority);\n  };\n}\n\nfunction styleTween(name, value, priority) {\n  var t, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\n    return t;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {set} from \"./schedule\";\n\nexport default function() {\n  var on0, on1, that = this, id = that._id, size = that.size();\n  return new Promise(function(resolve, reject) {\n    var cancel = {value: reject},\n        end = {value: function() { if (--size === 0) resolve(); }};\n\n    that.each(function() {\n      var schedule = set(this, id),\n          on = schedule.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) {\n        on1 = (on0 = on).copy();\n        on1._.cancel.push(cancel);\n        on1._.interrupt.push(cancel);\n        on1._.end.push(end);\n      }\n\n      schedule.on = on1;\n    });\n  });\n}\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    schedule.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import { select, event as d3event, selection, clientPoint } from 'd3-selection';\nimport { drag as d3drag } from 'd3-drag';\nimport 'd3-transition';\nimport { mergeRecursive } from './common-utils';\n/**\n * This function takes a raw DOM element or\n * a string and returns a d3 selection of that element.\n *\n * @param {HTMLElement | string} element The element to wrap in d3 selection.\n * @return {Selection} Instance of d3 selection.\n */\nconst selectElement = element => select(element);\n\n/**\n * It creates a new d3 element on the parent element\n * @param  {Selection} parent Element to which the element is to be appended\n * @param  {Object} elemType Type of the new element\n * @param  {Array} data Data for the new element\n * @param  {Object} selector classname/id/tagname for the element\n * @return {HTMLElement} Newly Created Element\n */\nconst makeElement = (parent, elemType, data, selector, callbacks = {}, keyFn) => {\n    if ((parent instanceof HTMLElement || parent instanceof SVGElement)) {\n        parent = selectElement(parent);\n    }\n\n    const selectorVal = selector ? selector[0] : null;\n    let selectorType = null;\n    let actualSelector = null;\n    let element = null;\n    let enterSel = null;\n    let mergeSel = null;\n    let filter;\n    if (selectorVal) {\n        if (selectorVal === '#') {\n            selectorType = 'id';\n            actualSelector = selector;\n        } else {\n            selectorType = 'class';\n            actualSelector = selector[0] === '.' ? selector : `.${selector}`;\n        }\n    } else {\n        actualSelector = elemType;\n        filter = true;\n    }\n    element = parent.selectAll(actualSelector);\n\n    filter && (element = element.filter(function () {\n        return this.parentNode === parent.node();\n    }));\n    element = element.data(data, keyFn);\n\n    enterSel = element.enter()\n                            .append(elemType || 'div');\n    callbacks.enter && enterSel.each(function (...params) {\n        callbacks.enter(selectElement(this), ...params);\n    });\n\n    mergeSel = enterSel.merge(element);\n    callbacks.update && mergeSel.each(function (...params) {\n        callbacks.update(selectElement(this), ...params);\n    });\n    if (selectorType === 'class') {\n        mergeSel.classed(selectorVal === '.' ? selector.substring(1, selector.length) : selector, true);\n    } else if (selectorType === 'id') {\n        mergeSel.attr('id', selector.substring(1, selector.length));\n    }\n    const exitSel = element.exit();\n\n    if (callbacks.exit) {\n        exitSel.each(function (...params) {\n            callbacks.exit(selectElement(this), ...params);\n        });\n    } else {\n        exitSel.remove();\n    }\n    return mergeSel;\n};\n\n/**\n * This function applies styles to an element\n *  @param  {Object} elem Element Selection\n * @param  {Object} styleObj Style Object to be applied\n * @return {Element} Newly Created Element\n*/\nconst applyStyle = (elem, styleObj) => {\n    Object.entries(styleObj).forEach((d) => {\n        elem.style(d[0], d[1]);\n    }, this);\n    return elem;\n};\n\n/**\n * This function appends a dom element in another element.\n * @param {HTMLElement | SVGElement} element1 The element in which to append the second element\n * @param {HTMLElement | SVGElement} element2 The element which will be appended.\n */\nconst appendElement = (element1, element2) => {\n    element1.appendChild(element2);\n};\n\n/**\n * Sets the attributes to the element.\n * @param {HTMLElement | SVGElement} element Element on which attributes will be applied\n * @param {Object} attrs Attributes which need to be applied\n */\nconst setElementAttrs = (element, attrs) => {\n    for (const key in attrs) {\n        if ({}.hasOwnProperty.call(attrs, key)) {\n            element.attr(key, attrs[key]);\n        }\n    }\n};\n\n/**\n * Sets attributes in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which attrs will be applied\n * @param {Array.<Object>} attrs Array of attributes\n * @param {string} className className of elements to select.\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setAttrs = (element, attrs, className) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    className !== undefined ? element.selectAll(`.${className}`).each(function () {\n        setElementAttrs(select(this), attrs);\n    }) : setElementAttrs(element, attrs);\n    return element;\n};\n\n/**\n * Adds a css class to elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst addClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, true) :\n                elem.classed(className, true);\n    });\n};\n\n/**\n * Removes the css class from elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst removeClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, false) :\n                elem.classed(className, false);\n    });\n};\n\n/**\n * Sets styles in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which styles will be applied\n * @param {Array.<Object>} styles Array of style attributes\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setStyles = (element, styles) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            element.style(key, styles[key]);\n        }\n    }\n    return element;\n};\n\n/**\n * Creates svg or html elements by binding data to the selection.Removes extra elements\n * on exit.\n * @param {Object} params Parameter object\n * @param {SVGElement | HTMLElement} params.container Container element where all elements will be appended\n * @param {string} params.selector Selector by which elements will be selected from dom\n * @param {string} params.append Append tag\n * @param {Function} params.each Function which will be executed for each data point and element.\n */\nconst createElements = (params) => {\n    const container = select(params.container);\n    let data;\n\n    data = params.data;\n    if (typeof data === 'number') {\n        data = Array(data).fill().map((d, i) => i);\n    }\n    const sel = container.selectAll(params.selector).filter(function () {\n        return this.parentNode === container.node();\n    }).data(data);\n\n    const selectionMerge = sel.enter().append(params.append).merge(sel).each(function (d, i) {\n        params.each(d, select(this), i);\n    });\n\n    selectionMerge.attr('class', params.className || '');\n    sel.exit().remove();\n};\n\n/**\n * Clips an element with given measurement. Basically it is used to hide overflowing portions\n * of any element.\n * @param {SVGElement} container svg element which needs to be clipped.\n * @param {Object} measurement Dimensions of the clipped rectangle.\n * @param {string} id Unique id of the clip element\n */\nconst clipElement = (container, measurement, id) => {\n    const clipPathElement = makeElement(select(container), 'clipPath', [1], `#${id}`);\n    const clipPathRect = makeElement(clipPathElement, 'rect', [1]);\n    clipPathRect.attr('x', measurement.x)\n                    .attr('y', measurement.x)\n                    .attr('width', measurement.width)\n                    .attr('height', measurement.height);\n    clipPathElement.attr('clip-path', `url(#${id})`);\n};\n\n/**\n * Returns the element of the corresponding classname.\n * @param {HTMLElement | SVGElement} node html or svg node element.\n * @param {string} className css class to be applied.\n * @return {HTMLElement | SVGElement} html or svg element.\n */\nconst getElementsByClassName = (node, className) => select(node).selectAll(className).nodes();\n\n/**\n * Gets the mouse position relative to an svg type of element\n * @param {SVGElement} element Any svg element like rect, circle, etc.\n * @param {Event} event Event object.\n * @return {Object} x and y position relative to the container element passed.\n */\nconst getMousePos = (element, event) => {\n    const boundingClientRect = element.getBoundingClientRect();\n    return {\n        x: event.x - boundingClientRect.x,\n        y: event.y - boundingClientRect.y\n    };\n};\n\nconst getClientPoint = (...params) => {\n    const pos = clientPoint(...params);\n    return {\n        x: pos[0],\n        y: pos[1]\n    };\n};\n\n/** This function appends a dom element in another element.\n * @param {Object} tag The tag name of the element to append\n * @param {Object} mount Mount point fo the element\n * @return {Object} selection of the appended element\n */\nconst createElement = (tag, mount) => select(mount).append(tag).node();\n\n/**\n * Gets the d3 event function\n * @return {Object} d3 event\n */\nconst getEvent = () => d3event;\n\n/**\n * Gets the d3 drag function\n * @return {Object} d3 drag\n */\nconst getD3Drag = () => d3drag;\n\nconst getSmartComputedStyle = (group, css) => {\n    let textEl;\n    const testText = 'W';\n    const mandatoryStyle = {\n        'fill-opacity': 0\n    };\n    const className = typeof css === 'string' ? css : (css instanceof Array ? css.join(' ') : undefined);\n\n    if (group.node() instanceof HTMLElement) {\n        textEl = group.append('div').html(testText);\n    } else {\n        textEl = group.append('text').text(testText);\n    }\n\n    if (className) {\n        textEl.attr('class', className);\n    } else if (typeof css === 'object') {\n        delete css['fill-opacity'];\n        mergeRecursive(mandatoryStyle, css);\n    }\n\n    textEl.style(mandatoryStyle);\n    const computedStyle = window.getComputedStyle(textEl.node());\n    const styleForSmartLabel = {\n        fontSize: computedStyle.fontSize,\n        fontFamily: computedStyle.fontFamily,\n        fontWeight: computedStyle.fontWeight,\n        fontStyle: computedStyle.fontStyle\n    };\n\n    textEl.remove();\n\n    return styleForSmartLabel;\n};\n\nconst hasTouch = () => 'ontouchstart' in document.documentElement;\n\nexport {\n    hasTouch,\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint\n};\n","import Model from 'hyperdis';\nimport { defaultValue, getObjProp, toArray } from './common-utils';\n\nconst initProp = (obj, props, val = () => ({})) => {\n    props.forEach((prop) => {\n        if (!obj[prop]) {\n            obj[prop] = val();\n        }\n        obj = obj[prop];\n    });\n    return obj;\n};\n\nconst fetchPropValues = (propNames, params, deps) => params.map((param, i) => {\n    const prop = propNames[i];\n\n    return param.map(val => (val === undefined || val === null ? val : val[deps[prop]]));\n});\n\nconst addListenerToNamespace = (namespaceInf, fn, context) => {\n    let key = namespaceInf.key;\n    const namespace = namespaceInf.id;\n    const listeners = context._listeners;\n\n    if (namespace) {\n        !listeners.get(namespace) && (listeners.set(namespace, new Map()));\n        const namespaceListeners = listeners.get(namespace);\n\n        if (!key) {\n            key = namespaceListeners.size;\n        }\n        namespaceListeners.set(key, fn);\n    } else {\n        key = key || listeners.size;\n        listeners.set(key, fn);\n    }\n};\n\nconst setContexts = (contexts, propObj, contextMap) => {\n    for (const key of propObj.keys()) {\n        contexts[key] = {\n            context: contextMap[key],\n            deps: propObj.get(key).depProps\n        };\n    }\n    return contexts;\n};\n\nconst registerPropInMaps = (store, props, namespaceInf, type) => {\n    const {\n        _registeredListeners: registeredListeners,\n        _propListenerMap: propListenerMap\n    } = store;\n    const {\n        subNamespace,\n        namespace: ns\n    } = namespaceInf;\n\n    initProp(registeredListeners, [ns]);\n    props.forEach((prop) => {\n        const subNamespaces = defaultValue(getObjProp(registeredListeners, ns, prop, 'subNamespace'), []);\n        let fns = defaultValue(getObjProp(propListenerMap, prop, type, 'fns'), 0);\n\n        fns++;\n        subNamespace && subNamespaces.push(subNamespace);\n        registeredListeners[ns][prop] = {\n            subNamespace: subNamespaces,\n            allProps: props,\n            subNamespaces: {}\n        };\n        initProp(propListenerMap, [prop, type]);\n        propListenerMap[prop][type] = {\n            fns,\n            _fnCount: fns\n        };\n    });\n};\n\nconst registerListener = (context, type, ...options) => {\n    const [propList, callBack, instantCall, namespaceInf = {}] = options;\n    let props = propList;\n\n    if (!Array.isArray(propList)) {\n        props = [propList];\n    }\n\n    const { namespace: ns } = namespaceInf;\n    const callbackFn = ((propNames, namespaceVal) => (...params) => {\n        const { _savedCommits: commits, _propListenerMap: propListenerMap } = context;\n\n        if (!propNames.some(prop => getObjProp(propListenerMap, prop, 'disabled'))) {\n            if (namespaceVal) {\n                const listenersObj = context._registeredListeners[namespaceVal];\n                const contextMap = context._contextMap[namespaceVal];\n                const contextsObj = {};\n\n                propNames.forEach((prop) => {\n                    const commitsObj = defaultValue(getObjProp(commits, prop, type), {});\n                    const listeners = listenersObj[prop].subNamespaces;\n                    const propDeps = propListenerMap[prop][type];\n\n                    for (const nm in commitsObj) {\n                        const fnInf = defaultValue(propDeps[nm], { fns: 0 });\n                        let { fns } = fnInf;\n\n                        if (fns > 0) {\n                            setContexts(contextsObj, listeners[nm], contextMap);\n                            fns--;\n                        }\n\n                        if (fns <= 0) {\n                            delete commitsObj[nm];\n                        }\n                        fnInf.fns = fns;\n                    }\n                });\n                for (const key in contextsObj) {\n                    const obj = contextsObj[key];\n\n                    callBack(obj.context, ...fetchPropValues(propNames, params, obj.deps));\n                }\n            } else {\n                callBack(...params);\n            }\n        }\n    })(props, ns, type);\n\n    const fn = context.model[type](props, callbackFn, instantCall);\n\n    if (ns) {\n        registerPropInMaps(context, props, namespaceInf, type);\n    }\n    addListenerToNamespace(namespaceInf, fn, context);\n};\n\nconst retrieveNamespaces = (names, key) => {\n    if (names instanceof Object) {\n        return [names[key]];\n    } else if (names instanceof Array) {\n        return names;\n    }\n    return [names];\n};\n\nconst createMap = () => new Map();\n\nconst listenerTypes = ['next', 'on'];\n\nconst removePropValue = (context, map, propInf) => {\n    const { subNamespace: sns, prop, propListenerMap } = propInf;\n    const propObj = propListenerMap[prop];\n\n    listenerTypes.forEach((type) => {\n        if (type in propObj) {\n            delete propObj[type][sns];\n        }\n    });\n    if (map.has(sns)) {\n        const value = context.get(prop);\n\n        if (value instanceof Object && sns in value) {\n            delete value[sns];\n        }\n        map.delete(sns);\n    }\n};\n\n/**\n * Methods to handle changes to table configuration and reactivity are handled by this\n * class.\n */\n/**\n *  Common store class\n *\n * @class Store\n */\nexport class Store {\n    /**\n     * Creates an instance of Store.\n     * @param {Object} config The object to create the state store with.\n     * @memberof Store\n     */\n    constructor (config) {\n        // create reactive model\n        this.model = Model.create(config);\n        this._listeners = new Map();\n        this._registeredListeners = {};\n        this._contextMap = {};\n        this._commits = {};\n        this._savedCommits = {};\n        this._queuedProps = {};\n        this._propListenerMap = {};\n        this._locked = false;\n    }\n\n    lockModel () {\n        this.model.lock();\n        this._locked = true;\n        return this;\n    }\n\n    unlockModel () {\n        this._locked = false;\n        this.model.unlock();\n        return this;\n    }\n\n    /**\n     * This method returns a plain JSON object\n     * with all the fields in the state store.\n     *\n     * @return {Object} Serialized representation of state store.\n     * @memberof Store\n     */\n    serialize () {\n        return this.model.serialize();\n    }\n\n    lockCommits (props) {\n        props.forEach((prop) => {\n            this._commits[prop] = {\n                locked: true,\n                queue: []\n            };\n        });\n        return this;\n    }\n\n    unlockCommits (props) {\n        const commitsObj = this._commits;\n\n        this.lockModel();\n        props.forEach((prop) => {\n            commitsObj[prop].locked = false;\n            const queuedProps = {};\n            const { queue } = commitsObj[prop];\n\n            queue.forEach((params) => {\n                const [propName, value, namespace] = params;\n\n                if (namespace) {\n                    const propObj = initProp(queuedProps, [propName, namespace]);\n\n                    Object.assign(propObj, value);\n                }\n            });\n            queue.forEach((params) => {\n                const [propName, value, namespace] = params;\n\n                this.commit(propName, propName in queuedProps ? queuedProps[propName][namespace] : value,\n                    namespace);\n            });\n            delete commitsObj[prop];\n        });\n        this.unlockModel();\n        return this;\n    }\n\n    addSubNamespace (sns, namespace, context) {\n        // Get all the listeners registered by the component\n        const listeners = this._registeredListeners[namespace];\n        const propListenerMap = this._propListenerMap;\n\n        initProp(this._contextMap, [namespace]);\n        this._contextMap[namespace][sns] = context;\n        for (const key in listeners) {\n            const obj = listeners[key];\n            const propObj = propListenerMap[key];\n            const propFns = listenerTypes.reduce((acc, type) => {\n                const val = defaultValue(getObjProp(propObj, type, 'fns'), 0);\n                val && (acc[type] = val);\n                return acc;\n            }, {});\n            const { allProps, subNamespaces, subNamespace } = obj;\n            const snsArr = subNamespace.length ? subNamespace : [sns];\n\n            snsArr.forEach((ns) => {\n                const nsObj = ns instanceof Function ? ns(context) : ns;\n                const names = retrieveNamespaces(nsObj, key);\n                const depProps = allProps.reduce((acc, prop) => {\n                    acc[prop] = ns instanceof Function ? nsObj[prop] : ns;\n                    return acc;\n                }, {});\n\n                names.forEach((nm) => {\n                    initProp(subNamespaces, [nm], createMap).set(sns, {\n                        depProps\n                    });\n\n                    for (const type in propFns) {\n                        initProp(propObj, [type, nm]);\n                        const fns = propFns[type];\n\n                        propObj[type][nm] = {\n                            fns,\n                            _fnCount: fns\n                        };\n                    }\n                });\n            });\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to update the value of a property in the state store.\n     *\n     * @param {string} propName The name of the property.\n     * @param {number} value The new value of the property.\n     * @memberof Store\n     */\n    commit (propName, value, namespace, disableListener = false) {\n        let sanitizedVal = value;\n        const commits = this._commits;\n        const savedCommits = this._savedCommits;\n        const locked = getObjProp(commits, propName, 'locked');\n        const propListenerMap = this._propListenerMap[propName] || {};\n\n        propListenerMap.disabled = disableListener;\n\n        if (locked) {\n            commits[propName].queue.push([propName, value, namespace]);\n            return this;\n        }\n\n        if (namespace) {\n            if (this._locked) {\n                const queuedProps = initProp(this._queuedProps, [propName]);\n                queuedProps[namespace] = value;\n                sanitizedVal = queuedProps;\n            } else {\n                sanitizedVal = defaultValue(this.get(propName), {});\n                sanitizedVal[namespace] = value;\n            }\n\n            listenerTypes.forEach((type) => {\n                initProp(savedCommits, [propName, type]);\n                savedCommits[propName][type][namespace] = true;\n                if (getObjProp(propListenerMap, type, namespace)) {\n                    propListenerMap[type][namespace].fns = propListenerMap[type][namespace]._fnCount;\n                }\n            });\n        }\n\n        this.model.prop(propName, sanitizedVal);\n        return this;\n    }\n\n    /**\n     * This method is used to register a callback that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */registerChangeListener (...params) {\n        registerListener(this, 'next', ...params);\n        return this;\n    }\n\n    /**\n     * This method is used to register a callback that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */ registerImmediateListener (...params) {\n        registerListener(this, 'on', ...params);\n    }\n\n    /**\n     * This method is used to get the name of the property\n     * from the state store.\n     *\n     * @param {string} propName The name of the field in state store.\n     * @return {any} The value of the field.\n     * @memberof Store\n     */\n    get (propName, subNamespace) {\n        const value = this.model.prop(propName);\n        return subNamespace ? value && value[subNamespace] : value;\n    }\n\n    /**\n     * This method is used to register a computed property that is computed every time\n     * the store value changes.\n     *\n     * @param {string} propName The name of the property to create.\n     * @param {Function} callBack The function to execute when depemdent props change.\n     * @memberof Store\n     */\n    computed (propName, callBack) {\n        return this.model.calculatedProp(propName, callBack);\n    }\n\n    append (...params) {\n        this.model.append(...params);\n        return this;\n    }\n\n    unsubscribeAll () {\n        Object.values(this._listeners).forEach(fn => fn());\n        return this;\n    }\n\n    unsubscribe (namespaceInf = {}) {\n        const { id, key } = namespaceInf;\n        const listenersMap = this._listeners;\n        const listeners = listenersMap.get(id);\n\n        if (key) {\n            const fn = listenersMap.get(key);\n\n            fn && fn();\n        } else {\n            for (const fn of listeners.values()) {\n                fn();\n            }\n            listenersMap.set(id, []);\n        }\n        return this;\n    }\n\n    removeSubNamespace (subNamespace, namespace) {\n        const {\n            _registeredListeners: listenerMap,\n            _contextMap: contextMap,\n            _propListenerMap: propListenerMap\n        } = this;\n        const listenersObj = listenerMap[namespace];\n\n        for (const prop in listenersObj) {\n            const { subNamespaces } = listenersObj[prop];\n            const propInf = {\n                subNamespace,\n                prop,\n                propListenerMap\n            };\n\n            if (subNamespaces[subNamespace]) {\n                removePropValue(this, subNamespaces[subNamespace], propInf);\n                delete subNamespaces[subNamespace];\n            } else {\n                for (const ns in subNamespaces) {\n                    const snsMap = subNamespaces[ns];\n\n                    removePropValue(this, snsMap, propInf);\n                    if (!snsMap.size) {\n                        delete subNamespaces[ns];\n                    }\n                }\n            }\n        }\n        delete contextMap[namespace][subNamespace];\n        return this;\n    }\n}\n\n/**\n * Setter getter creator from config\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args. (Optional)\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitization: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @param {Object} holder an empty object on which the getters and setters will be mounted\n * @param {Object} options options config based on which the getters and setters are determined.\n * @param {Hyperdis} model optional model to attach the property. If not sent new moel is created.\n * @return {Array}\n */\nexport const transactor = (holder, options, model, namespaceInf = {}) => {\n    let conf;\n    const store = model instanceof Store ? model : new Store({});\n    const stateProps = {};\n    const { namespace, subNamespace } = namespaceInf;\n\n    for (const prop in options) {\n        if ({}.hasOwnProperty.call(options, prop)) {\n            conf = options[prop];\n            const nameSpaceProp = namespace ? `${namespace}.${prop}` : prop;\n\n            if (subNamespace) {\n                const value = defaultValue(store.get(nameSpaceProp), {});\n                value[subNamespace] = conf.value;\n                stateProps[nameSpaceProp] = value;\n            } else {\n                stateProps[prop] = conf.value;\n            }\n\n            holder[prop] = ((context, meta, nsProp) => (...params) => {\n                const paramsLen = params.length;\n                if (paramsLen) {\n                    const { takesMultipleParams = false } = meta || {};\n                    // If parameters are passed then it's a setter\n                    let val = takesMultipleParams ? params : params[0];\n\n                    if (meta) {\n                        let values;\n                        const prevVal = context.get(nsProp, subNamespace);\n                        const { sanitization, typeCheck, typeExpected } = meta;\n                        if (typeof sanitization === 'function') {\n                            // Sanitize if required\n                            val = sanitization(val, prevVal, holder);\n                        }\n\n                        // Checking if a setter is valid\n                        if (typeof typeCheck === 'function') {\n                            const typeCheckResult = typeCheck(val);\n\n                            if (typeCheckResult) {\n                                values = val;\n                            }\n                        } else if (typeof typeCheck === 'string' && typeCheck === 'constructor') {\n                            if (val && val.constructor.name === typeExpected) {\n                                values = val;\n                            }\n                        } else {\n                            values = val;\n                        }\n\n                        const preset = meta.preset;\n                        const oldValues = toArray(context.get(nsProp, subNamespace));\n                        preset && preset(values, holder);\n                        if (takesMultipleParams) {\n                            oldValues.forEach((value, i) => {\n                                if (values[i] === undefined) {\n                                    values[i] = value;\n                                }\n                            });\n                        }\n                        values && context.commit(nsProp, values, subNamespace);\n                    } else {\n                        context.commit(nsProp, val, subNamespace);\n                    }\n                    return holder;\n                }\n                // No parameters are passed hence its a getter\n                return context.get(nsProp, subNamespace);\n            })(store, conf.meta, nameSpaceProp, Array.isArray(conf.value));\n        }\n    }\n\n    if (subNamespace) {\n        for (const key in stateProps) {\n            store.commit(key, stateProps[key][subNamespace], subNamespace);\n        }\n    } else if (namespace === undefined) {\n        store.append(stateProps);\n    } else {\n        store.append(namespace, stateProps);\n    }\n\n    return [holder, store];\n};\n","const events = [\n    'initialized',\n    'beforeupdate',\n    'updated',\n    'beforedraw',\n    'drawn',\n    'beforeremove',\n    'removed',\n    'animationend'\n];\n\nconst compositions = [\n    'canvas',\n    'unit',\n    'layer',\n    'axis',\n    'facet-headers',\n    'legend',\n    'caption'\n];\n\nconst EVENT_LIST = [];\n\ncompositions.forEach((composition) => {\n    events.forEach((event) => {\n        EVENT_LIST.push(`${composition}.${event}`);\n    });\n});\n\nexport default EVENT_LIST;\n","import EVENT_LIST from './event-list';\nimport { createPromise } from './helper';\n\n/**\n * At first call it accepts one function\n * calling it second time accepts notification object.\n * notification object then called with first accepted function\n *\n * @param {Function} resolveFn a promise's resolve function\n * @return {Function} a function to accept notification object\n */\nconst resolver = resolveFn => notification => resolveFn(notification);\n\n/**\n * Checks if the property string is present in the source object\n *\n * @param {Object} source source object whom you want to check the property\n * @param {string} property key name that need to be checked\n * @return {boolean} returns true if the property found in the source object\n */\nconst hasOwn = (source, property) => Object.prototype.hasOwnProperty.call(source, property);\n\n/**\n * LifeCycleManager which goes as a dependendecy to a muze\n * it accepts notification from the entire library throughout\n * the exeecution life\n *\n * @export\n * @class LifeCycleManager\n */\nexport default class LifeCycleManager {\n\n    /**\n     * Creates an instance of LifeCycleManager.\n     * @memberof LifeCycleManager\n     */\n    constructor () {\n        this._eventList = EVENT_LIST;\n        this._promises = new Map();\n        this._notifiers = {};\n        this._lifeCycles = {};\n        this._unreleasedLifeCycles = {};\n        this._boot();\n    }\n\n    /**\n     * Fills all the notifiers with resolver callback\n     *\n     * @memberof LifeCycleManager\n     */\n    _boot () {\n        this._notifiers = this._eventList.reduce((acc, name) => {\n            acc[name] = resolver;\n            return acc;\n        }, {});\n        this._preparePromises();\n    }\n\n    /**\n     * Public method which gives the promise corresponding\n     * to the event name\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    retrieve (eventName) {\n        return this._promises.get(eventName);\n    }\n\n    /**\n     * Creates a promise that will be passed to user's callback\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} a pending promise waiting for resolve to be called\n     * @memberof LifeCycleManager\n     */\n    _makeNotifierPromise (eventName) {\n        return new Promise((resolve) => {\n            this._notifiers[eventName] = resolver(resolve);\n        });\n    }\n\n    /**\n     * Prepares the promise map with pending promises\n     * all the promises are in a pending state where their's\n     * resolve function waiting to be called with notification object\n     * @memberof LifeCycleManager\n     */\n    _preparePromises () {\n        this._eventList.forEach((eventName) => {\n            const promise = this._makeNotifierPromise(eventName);\n            this._promises.set(eventName, promise);\n            createPromise(promise, eventName, this);\n        });\n    }\n\n    /**\n     * Resolves the promise with notification object\n     *\n     * @param {string} eventName name of the event in the system\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     *\n     * @memberof LifeCycleManager\n     */\n    _resolvePromise (eventName, notification) {\n        this._notifiers[eventName](notification);\n    }\n\n    /**\n     * Public method which is being called by different\n     * subcompoents of the system at different execution atages\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    notify (notification) {\n        // get the composition name from notification\n        // or from static formalName() method\n        const composition = notification.formalName || notification.client.constructor.formalName();\n        notification.formalName = composition;\n        this._releasePromisesFromCache();\n        this._notify(composition, notification);\n    }\n\n    /**\n     * Notify user the with promsie in a callback\n     * if callback not found then cache it\n     *\n     * @param {string} composition\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    _notify (composition, notification) {\n        const stage = notification.action;\n        const eventName = `${composition}.${stage}`;\n\n        // resolves promise with the notification object\n        this._resolvePromise(eventName, notification);\n\n        // get the promise from the promise map\n        const promise = this.retrieve(eventName);\n\n        if (this._lifeCycles[composition]) {\n            if (this._lifeCycles[composition][stage]) {\n                // if user given call back exists, then call with promise\n                this._callLifeCycleCallback(composition, stage, promise);\n            } else {\n                // otherwise cache the promise\n                this._cachePromise(composition, stage, promise);\n            }\n        } else {\n            this._cachePromise(composition, stage, promise);\n        }\n    }\n\n    /**\n     * Calls the user's callback with callback\n     *\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _callLifeCycleCallback (composition, stage, promise) {\n        const eventName = `${composition}.${stage}`;\n        this._lifeCycles[composition][stage](promise);\n        this._resetTargetPromise(eventName);\n    }\n\n    /**\n     * Try to clear the cached promsies once we have\n     * macthed callbacks from the user\n     *\n     * @memberof LifeCycleManager\n     */\n    _releasePromisesFromCache () {\n        const compositions = Object.keys(this._unreleasedLifeCycles);\n        compositions.forEach((composition) => {\n            const stages = Object.keys(this._unreleasedLifeCycles[composition]);\n            stages.forEach((stage) => {\n                if (this._lifeCycles[composition]) {\n                    if (this._lifeCycles[composition][stage]) {\n                        // take the promise from unreleased lifeCycles\n                        const promise = this._unreleasedLifeCycles[composition][stage];\n                        // call the user given callback with that promise\n                        this._callLifeCycleCallback(composition, stage, promise);\n                        // delete promise from unreleased lifeCycles\n                        delete this._unreleasedLifeCycles[composition][stage];\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * Cache the promise in the map. This cache\n     * then get consumed if we get user callbacks\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _cachePromise (composition, stage, promise) {\n        if (!hasOwn(this._unreleasedLifeCycles, composition)) {\n            this._unreleasedLifeCycles[composition] = {};\n        }\n\n        if (!hasOwn(this._unreleasedLifeCycles[composition], stage)) {\n            this._unreleasedLifeCycles[composition][stage] = {};\n        }\n        this._unreleasedLifeCycles[composition][stage] = promise;\n    }\n\n    /**\n     * It register's the callbacks gievn the user\n     *\n     * @param {Object} [lifeCycles={}] a object with list of callbacks\n     * @memberof LifeCycleManager\n     */\n    register (lifeCycles = {}) {\n        this._lifeCycles = lifeCycles;\n        // as we get all the callbacks, try to call them\n        // from unreleased promise map\n        this._releasePromisesFromCache();\n    }\n\n    /**\n     * Reset the promise into pending state\n     *\n     * @param {string} eventName name of the event happening\n     * @memberof LifeCycleManager\n     */\n    _resetTargetPromise (eventName) {\n        setTimeout(() => {\n            this._notifiers[eventName] = resolver;\n            this._promises.set(eventName, this._makeNotifierPromise(eventName));\n        }, 0);\n    }\n}\n","import LifeCycleManager from './lifecycle-manager';\n\nexport default LifeCycleManager;\n","/**\n * Creates a new promise when the given promise is resolved. This needs to be done so that after the lifecycle event\n * is completed, then again when the event gets completed, then a new promise gets resolved.\n *\n * @param {Promise} promise Instance of promise\n * @param {string} eventName name of event\n * @param {LifeCycleManager} context Instance of lifecyclemanager\n */\nexport const createPromise = (promise, eventName, context) => {\n    promise.then(() => {\n        const prm = context._makeNotifierPromise(eventName);\n        context._promises.set(eventName, prm);\n        createPromise(prm, eventName, context);\n    });\n};\n","import { default as DataModel } from 'datamodel';\nimport * as scales from './scales';\nimport * as colorSchemes from './color-schemes';\nimport * as STATE_NAMESPACES from './enums/namespace';\n\nconst InvalidAwareTypes = DataModel.InvalidAwareTypes;\n\nexport {\n    InvalidAwareTypes,\n    DataModel\n};\n\nexport {\n    ReservedFields,\n    CommonProps,\n    COORD_TYPES\n} from './enums';\n\nexport { STATE_NAMESPACES };\n\nexport {\n    scales,\n    colorSchemes\n};\n\nexport {\n    getNearestValue,\n    getValueParser,\n    transformColors,\n    detectColor,\n    hslToRgb,\n    rgbToHsv,\n    hexToHsv,\n    hsvToRgb,\n    hslaToRgb,\n    escapeHTML,\n    angleToRadian,\n    generateGetterSetters,\n    getArraySum,\n    ERROR_MSG,\n    interpolator,\n    colorInterpolator,\n    numberInterpolator,\n    piecewiseInterpolator,\n    reqAnimFrame,\n    cancelAnimFrame,\n    nextAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    replaceCSSPrefix,\n    symbolFns,\n    defaultValue,\n    easeFns,\n    clone,\n    interpolateArray,\n    getMinPoint,\n    getMaxPoint,\n    getClosestIndexOf,\n    registerListeners,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    enableChainedTransaction,\n    isHTMLElem,\n    isEqual,\n    isSimpleObject,\n    nextFrame,\n    getObjProp,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    transposeArray,\n    toArray,\n    extendsClass,\n    concatModels,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    nestCollection,\n    stack,\n    getSymbol,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    hslInterpolator,\n    getSmallestDiff,\n    require,\n    formatTemporal,\n    nearestSortingDetails,\n    createSelection,\n    temporalFields,\n    retrieveNearestGroupByReducers,\n    retrieveFieldDisplayName,\n    sanitizeDomainWhenEqual,\n    sortCategoricalField,\n    intersect,\n    partition,\n    mix,\n    componentRegistry,\n    getArrayDiff,\n    arraysEqual\n} from './common-utils';\n\nexport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint,\n    hasTouch\n} from './renderer-utils';\n\nexport {\n    Store,\n    transactor\n} from './store';\n\nexport {\n    timeMillisecond,\n    timeSecond,\n    timeMinute,\n    timeHour,\n    timeDay,\n    timeWeek,\n    timeMonth,\n    timeYear\n} from 'd3-time';\n\nexport { default as Smartlabel } from 'fusioncharts-smartlabel';\nexport { dataSelect } from './DataSystem';\n\nexport { default as LifeCycleManager } from './lifecycle-manager';\n\nexport {\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    DateTimeFormatter,\n    DM_DERIVATIVES,\n    GROUP_BY_FUNCTIONS\n} from 'datamodel';\n\n","export const CLASSPREFIX = 'muze';\nexport const STACK = 'stack';\nexport const GROUP = 'group';\nexport const IDENTITY = 'identity';\nexport const ANGLE = 'angle';\nexport const RADIUS = 'radius';\nexport const SIZE = 'size';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const TEXT = 'text';\nexport const OUTER_RADIUS_VALUE = 'outerRadiusValue';\nexport const TEXT_ANCHOR_MIDDLE = 'middle';\nexport const ENCODING = {\n    X: 'x',\n    Y: 'y',\n    X0: 'x0',\n    Y0: 'y0',\n    RADIUS: 'radius',\n    RADIUS0: 'radius0',\n    ANGLE: 'angle',\n    ANGLE0: 'angle0',\n    COLOR: 'color',\n    SHAPE: 'shape',\n    SIZE: 'size',\n    TEXT: 'text'\n};\n\nexport const STROKE_DASHARRAY = 'stroke-dasharray';\n\nexport const ASCENDING = 'asc';\n\nexport const AGG_FN_SUM = 'sum';\n\nexport const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * This is an interface class which any new layer class has to extend.\n *\n * @example\n * class BarLayer extends BaseLayer {\n *   update (params) {\n *       // super.update(params);\n *       // Update the bar layer\n *   }\n * }\n * @class\n */\nexport default class SimpleLayer {\n\n    formalName () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets or gets the dependencies.\n     * @param {Object} dependencies Dependencies needed by layer\n     * @return {BaseLayer} Instance of base layer.\n     */\n    dependencies () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the config of the layer\n     *\n     * @param {Object} config Configuration of layer\n     * @return {Object} configuration of layer\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Acts as a getter or setter function\n     * When setter\n     * Returns the datamodel of the layer\n     * @param { DataModel } dataModel instance of DataModel\n     * @return { DataModel } DataModel instance of the layer\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized schema of the layer\n     * @return {Object} Serialized schema\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the unique identifier of this layer\n     * @return {string} id of the layer\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n    /*\n     * This method resolves the x, y, x0 and y0 values from the transformed data.\n     * It also checks the type of transformed data for example, if it is a stacked data\n     * then it fetches the y and y0 values from the stacked data.\n     * @param {Array.<Array>} transformedData transformed data\n     * @param {Object} fieldMap field definitions\n     * @param {string} transformType type of transformed data - stack, group or identity.\n     * @return {Array.<Object>} Normalized data\n     * @private\n     */\n    normalizeTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of dataModel\n     * @param {Object} config configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     * @private\n     */\n    getTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a nominal field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @return {Array} Domain values array.\n     */\n    _calculateDomainFromData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, color, etc.\n     * @return {Object} Axis domains\n     */\n    getDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for getting nearest point\n     * @return {BaseLayer} Instance of base layer\n     */\n    getNearestPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for highlighting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    highlightPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for deselecting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    dehighlightPoint () {\n        return this;\n    }\n\n    linkLayerStore () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets the container element for the layer to be renderered.\n     * @param {SVGElement} mountPoint SVG element or group element.\n     */\n    mount () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n","export const DATA = 'data';\nexport const CONFIG = 'config';\nexport const MEASUREMENT = 'measurement';\nexport const DOMAIN = 'domain';\nexport const MOUNT = 'mount';\n","import { COORD_TYPES, mergeRecursive } from 'muze-utils';\nimport * as PROPS from '../enums/props';\n\nconst { CARTESIAN } = COORD_TYPES;\nexport const props = {\n    axes: {},\n    mount: {},\n    measurement: {},\n    metaInf: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    coord: {\n        defaultValue: CARTESIAN\n    },\n    [PROPS.CONFIG]: {\n        value: null,\n        sanitization: (context, config) => {\n            context._customConfig = config;\n            const constructor = context.constructor;\n            const newConf = mergeRecursive({}, constructor.defaultConfig());\n\n            return constructor.defaultPolicy(newConf, config);\n        }\n    },\n    encodingTransform: {},\n    encodingFieldsInf: {},\n    dependencies: {},\n    dataProps: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { Symbols } from 'muze-utils';\nimport * as AxisOrientation from '../enums/axis-orientation';\n\n/**\n * @module Axis\n * This file exports constants that are used to reference axis orientations\n * in a consistent manner.\n */\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\n\n/**\n  * This object is used to associate the axis orientation with the d3 class\n  * used to represent that axis.\n  */\nexport const axisOrientationMap = {\n    [AxisOrientation.LEFT]: Symbols.axisLeft,\n    [AxisOrientation.BOTTOM]: Symbols.axisBottom,\n    [AxisOrientation.RIGHT]: Symbols.axisRight,\n    [AxisOrientation.TOP]: Symbols.axisTop\n};\n","/**\n * @module axis\n * This file exports constants used to reference scale type\n * consistently throughout the project.\n */\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const TIME = 'temporal';\nexport const COLOR = 'color';\nexport const ORDINAL = 'ordinal';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\nexport const LOG = 'log';\nexport const POW = 'pow';\nexport const IDENTITY = 'identity';\nexport const SEQUENTIAL = 'sequential';\nexport const THRESHOLD = 'threshold';\n","export const CLASSPREFIX = 'muze';\n\nexport const CONTINOUS = 'continous';\nexport const DISCRETE = 'discrete';\nexport const SEQUENTIAL = 'sequential';\nexport const ORDINAL = 'ordinal';\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const THRESHOLD = 'threshold';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\n\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\n\nexport const DOMAIN = 'domain';\nexport const HIDDEN = 'hidden';\nexport const NUMBER = 'number';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\n\nexport const RGB = 'rgb';\nexport const HEX = 'hex';\nexport const HSLA = 'hsla';\nexport const HSL = 'hsl';\n\nexport const DEFAULT_ANGLE_DOMAIN = [1];\nexport const MIN_NO_OF_TICKS = 2;\nexport const DEFAULT_NO_OF_TICKS = 10;\n\n","import { scales, colorSchemes } from 'muze-utils';\n\nimport {\n    SEQUENTIAL,\n    ORDINAL,\n    LINEAR,\n    CONTINOUS,\n    THRESHOLD,\n    QUANTIZE\n} from './enums/constants';\n\nimport * as ScaleType from './enums/scale-type';\n\nconst {\n    scaleLinear,\n    scaleThreshold,\n    scaleLog,\n    scalePow,\n    scaleIdentity,\n    scaleOrdinal,\n    scaleSequential,\n    scaleQuantize,\n    scaleQuantile,\n    schemeCategory10,\n    schemeCategory20,\n    schemeCategory20b,\n    scaleBand,\n    scaleTime\n} = scales;\nexport const scaleMap = {\n    [ScaleType.LINEAR]: scaleLinear,\n    [ScaleType.BAND]: scaleBand,\n    [ScaleType.QUANTIZE]: scaleQuantize,\n    [ScaleType.QUANTILE]: scaleQuantile,\n    [ScaleType.THRESHOLD]: scaleThreshold,\n    [ScaleType.SEQUENTIAL]: scaleSequential,\n    [ScaleType.LOG]: scaleLog,\n    [ScaleType.POW]: scalePow,\n    [ScaleType.IDENTITY]: scaleIdentity,\n    [ScaleType.TIME]: scaleTime,\n    [ScaleType.COLOR]: scaleLinear,\n    [ScaleType.ORDINAL]: scaleOrdinal\n};\nexport const SCHEMES = {\n    SCHEME1: schemeCategory10,\n    SCHEME2: schemeCategory20,\n    SCHEME3: schemeCategory20b\n};\n\n/**\n * Accepts a scheme in a string format and returns the scale from d3-scale-chromatic\n *\n * @export\n * @param {string} scheme a string representing the kind of scheme for the color axis\n * @return {Object} The corresponding scale from a scheme type from d3 chromatic scale\n */\nexport function getScheme (scheme) {\n    if (scheme[0] === 'i') {\n        return scaleSequential(colorSchemes[scheme]);\n    }\n    return scaleOrdinal(colorSchemes[scheme]);\n}\n\n/**\n *\n *\n * @export\n * @param {*} scheme\n *\n */\nexport function getSchemeType (scheme) {\n    let schemeType = '';\n    if (scheme && typeof (scheme) === 'string') {\n        schemeType = scheme[0] === 'i' ? SEQUENTIAL : ORDINAL;\n    } else {\n        schemeType = ORDINAL;\n    }\n    return schemeType;\n}\n\n/**\n * This function is used to create a scale that is assigned to\n * an instance of axis.\n *\n * @export\n * @param {Object} params the input parameters to create a Scale object\n * @param {string} params.type the type of scale\n * @param {Array} params.range the range of scale\n * @return {Object} instance of scale\n */\nexport function createScale (params) {\n    if (!params.type || !scaleMap[params.type]) {\n        throw new Error(`${params.type} is not a valid scale type`);\n    }\n    if (!Array.isArray(params.range)) {\n        throw new Error('range parameter must be an array');\n    }\n    let scaleFactory = null;\n    const range = params.range;\n    // @todo: do it using scale decorator\n    if (params.type === LINEAR && params.interpolator) {\n        scaleFactory = scaleMap[params.interpolator];\n        if (params.interpolator === ScaleType.POW) {\n            return scaleFactory().range(range).exponent(params.exponent);\n        } else if (params.interpolator === ScaleType.LOG) {\n            return scaleFactory().range(range).base([params.base]);\n        }\n    } else {\n        scaleFactory = scaleMap[params.type];\n    }\n\n    if (params.type === QUANTIZE) {\n        scaleFactory().nice();\n    }\n    return scaleFactory().range(range);\n}\n\n/**\n * This method is used to update the range of a scale\n * so that the core module can remain agnostic of the d3\n * scale api.\n *\n * @export\n * @param {Scale} scale Instance of d3 Scale.\n * @param {Array} range new range of the scale.\n * @return {Scale} Updated scale.\n */\nexport function updateScaleRange (scale, range) {\n    return scale.range(range);\n}\n\n/**\n *\n *\n * @export\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} steps\n *\n */\nexport function getScaleType (domainType, rangeType, steps) {\n    if (rangeType === CONTINOUS) {\n        return LINEAR;\n    }\n    if (domainType === CONTINOUS) {\n        if (steps instanceof Array) {\n            return THRESHOLD;\n        }\n        return QUANTIZE;\n    }\n    return ORDINAL;\n}\n","import { getUniqueId } from 'muze-utils';\nimport { CLASSPREFIX } from '../enums/constants';\n\n/**\n *\n *\n */\nexport const defaultConfig = {\n    id: getUniqueId(),\n    adjustRange: false,\n    axisName: {\n        defClassName: 'axis-name'\n    },\n    axisNamePadding: 7,\n    base: 10,\n    classPrefix: CLASSPREFIX,\n    className: `${CLASSPREFIX}-axis`,\n    exponent: 1,\n    interpolator: 'linear',\n    fixedBaseline: true,\n    labels: {\n        rotation: null,\n        smartTicks: null\n    },\n    orientation: 'left',\n    numberFormat: val => val,\n    padding: 0.3,\n    nice: true,\n    numberOfTicks: null,\n    rotate: false,\n    show: true,\n    showAxisName: true,\n    showInnerTicks: true,\n    showOuterTicks: true,\n    style: {},\n    type: 'linear',\n    tickFormat: null,\n    tickValues: null,\n    xOffset: 0,\n    yOffset: 0\n};\n\n","/**\n * This file exports functionality that is used to render axis.\n */\nimport { selectElement, makeElement, angleToRadian } from 'muze-utils';\nimport * as AxisOrientation from './enums/axis-orientation';\nimport { LINEAR, HIDDEN, BOTTOM, TOP } from './enums/constants';\n\n/**\n *\n *\n * @param {*} instance\n * @param {*} container\n * @param {*} labelManager\n * @param {*} config\n */\nconst rotateAxis = (instance, tickText, labelManager) => {\n    let rotation;\n    const axis = instance.axis();\n    const config = instance.config();\n    const renderConfig = instance.renderConfig();\n    const smartTicks = instance.smartTicks();\n    const scale = axis.scale();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n    const ticks = labelFunc();\n    const {\n        orientation,\n        fixedBaseline,\n        type\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n\n    rotation = labels.rotation;\n\n    const tickSize = instance.getTickSize();\n    tickText.each(function (d, index) {\n        let yShift;\n        let xShift;\n        let datum = smartTicks[index] ? smartTicks[index].text : d;\n\n        datum = datum.toString();\n\n        const tickLabelDim = labelManager.getOriSize(datum);\n\n        const width = tickLabelDim.width * 0.5;\n        const height = tickLabelDim.height * 0.5;\n\n        if (rotation < 0) {\n            rotation = 360 + rotation;\n        }\n\n        const quadrant = 4 - Math.floor(rotation / 90);\n        const rotationNormalizer = ((quadrant % 2 === 0) ? rotation : 180 * Math.ceil(rotation / 180) - rotation) % 180;\n\n        yShift = Math.sqrt(height ** 2 + width ** 2) * Math.sin(angleToRadian(rotationNormalizer));\n\n        if ((quadrant === 3 || quadrant === 2) && !(rotationNormalizer > 67.5 && rotationNormalizer <= 90)) {\n            yShift += height * 2;\n        }\n        xShift = width;\n\n        if (rotation === 90) {\n            xShift = height;\n        } else if (rotation === 270) {\n            xShift = -height;\n        } else {\n            xShift = 0;\n        }\n\n        if (orientation === AxisOrientation.TOP) {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift + xShift / 2 : xShift;\n            selectElement(this)\n                            .attr('transform', `translate(${-xShift + tickSize}\n                                ${-yShift - tickSize}) rotate(${rotation})`);\n        } else {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift - xShift / 2 : xShift;\n\n            selectElement(this)\n                            .attr('transform', `translate(${xShift - tickSize}\n                                ${yShift + tickSize}) rotate(${rotation})`);\n        }\n        selectElement(this).transition()\n                        .duration(1000).text(datum);\n    });\n    return tickText;\n};\n\n/**\n *\n *\n * @param {*} tickText\n * @param {*} axisInstance\n */\nconst changeTickOrientation = (selectContainer, axisInstance, tickSize) => {\n    const {\n        _smartTicks\n    } = axisInstance;\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const {\n        orientation,\n        classPrefix\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n    const {\n        rotation,\n        smartTicks: isSmartTicks\n    } = labels;\n\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.selectAll('tspan').remove();\n\n    // rotate labels if not enough space is available\n    if (rotation && (orientation === TOP || orientation === BOTTOM)) {\n        rotateAxis(axisInstance, tickText, labelManager);\n    } else if (!rotation && !isSmartTicks) {\n        tickText.attr('transform', '');\n    } else {\n        tickText.text('');\n        if (orientation === TOP || orientation === BOTTOM) {\n            tickText.attr('y', 0)\n                            .attr('x', 0)\n                            .attr('transform', '')\n                            .text('');\n            const tspan = makeElement(tickText, 'tspan', (d, i) => {\n                if (_smartTicks[i]) {\n                    return _smartTicks[i].lines;\n                } return [];\n            }, `${classPrefix}-smart-text`);\n\n            tspan.attr('dy', '0')\n                            .style('opacity', '0')\n\n                            .transition()\n                            .duration(1000)\n                            .on('end', axisInstance.registerAnimationDoneHook())\n                            .attr('dy', (d, i) => {\n                                if (orientation === BOTTOM || i !== 0) {\n                                    return _smartTicks[0].oriTextHeight;\n                                }\n                                return -_smartTicks[0].oriTextHeight * (_smartTicks[0].lines.length - 1) - tickSize;\n                            })\n                            .style('opacity', 1)\n                            .text(e => e)\n                            .attr('x', 0);\n        } else {\n            const tspan = makeElement(tickText, 'tspan', (d, i) => _smartTicks[i].lines, `${classPrefix}-smart-text`);\n            tspan.text(e => e);\n        }\n    }\n\n    return tickText;\n};\n\nconst setFixedBaseline = (axisInstance) => {\n    const {\n        fixedBaseline\n    } = axisInstance.config();\n    const {\n        showInnerTicks\n    } = axisInstance.renderConfig();\n    const domain = axisInstance.domain();\n    if (fixedBaseline && domain.length && showInnerTicks) {\n        axisInstance.setFixedBaseline();\n    }\n};\n\n/**\n *\n *\n * @param {*} textNode\n * @param {*} orientation\n * @param {*} measures\n */\nconst setAxisNamePos = (textNode, orientation, measures) => {\n    const {\n        axisNameHeight,\n        availableSpace\n    } = measures;\n\n    switch (orientation) {\n    case AxisOrientation.LEFT:\n        textNode.attr('transform',\n            `translate(${-(availableSpace.width - axisNameHeight)},${availableSpace.height / 2})rotate(-90)`);\n        break;\n    case AxisOrientation.RIGHT:\n        textNode.attr('transform',\n             `translate(${(availableSpace.width - axisNameHeight)},${availableSpace.height / 2})rotate(90)`);\n        break;\n    case AxisOrientation.TOP:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${-availableSpace.height + axisNameHeight})`);\n        break;\n    case AxisOrientation.BOTTOM:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${availableSpace.height - axisNameHeight / 2})`);\n        break;\n    default:\n    }\n    return textNode;\n};\n\n/**\n * This method is used to render the axis inside an\n * svg container.\n *\n * @export\n * @param {Object} axisInstance the nput object required to render axis\n * @param {string} axisInstance.orientation the orientation of axis\n * @param {Object} axisInstance.scale instance of d3 scale\n * @param {SVGElement} axisInstance.container the container in which to render\n */\nexport function renderAxis (axisInstance) {\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const mount = axisInstance.mount();\n    const range = axisInstance.range();\n    const axis = axisInstance.axis();\n    const scale = axisInstance.scale();\n    const {\n        _tickLabelStyle: tickLabelStyle,\n        _tickFormatter: axisTickFormatter\n     } = axisInstance;\n    const {\n        orientation,\n        axisNamePadding,\n        className,\n        id,\n        classPrefix\n     } = config;\n    const {\n        show,\n        xOffset,\n        yOffset,\n        showAxisName,\n        labels,\n        smartAxisName\n    } = renderConfig;\n\n    if (!show) {\n        return;\n    }\n\n    const tickSize = axisInstance.getTickSize();\n\n    const selectContainer = makeElement(selectElement(mount), 'g', [axisInstance], `${className}`, {},\n        key => key.config().id);\n\n    // Set style for tick labels\n    labelManager.setStyle(tickLabelStyle);\n\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    const ticks = axis.tickValues() || labelFunc();\n\n    axis.tickFormat(axisTickFormatter(ticks));\n\n    // Get range(length of range)\n    const availableSpace = Math.abs(range[0] - range[1]);\n\n    // Get width and height taken by axis labels\n    const labelProps = axisInstance.axisComponentDimensions().largestTickDimensions;\n\n    // Draw axis ticks\n    selectContainer.attr('transform', `translate(${xOffset},${yOffset})`);\n    setFixedBaseline(axisInstance);\n    if (labels.smartTicks === false || tickSize === 0) {\n        selectContainer.transition()\n                        .duration(1000)\n                        .on('end', axisInstance.registerAnimationDoneHook())\n                        .call(axis);\n    } else {\n        selectContainer.call(axis);\n    }\n    selectContainer.selectAll('.tick').classed(`${classPrefix}-ticks`, true);\n    selectContainer.selectAll('.tick line').classed(`${classPrefix}-tick-lines`, true);\n\n    // Set classes for ticks\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.classed(`${classPrefix}-ticks`, true)\n                    .classed(`${classPrefix}-ticks-${id}`, true);\n\n    changeTickOrientation(selectContainer, axisInstance, tickSize);\n\n    // Create axis name\n    const textNode = makeElement(selectContainer, 'text', [smartAxisName], `${classPrefix}-axis-name`)\n                    .attr('text-anchor', 'middle')\n                    .classed(`${classPrefix}-axis-name-${id}`, true)\n                    .text(d => d.text);\n\n    // Hide axis name if show is off\n    textNode.classed(HIDDEN, !showAxisName);\n\n    // render labels based on orientation of axis\n    const labelOffset = availableSpace / 2;\n\n    const measures = {\n        labelProps,\n        tickSize,\n        axisNamePadding,\n        axisNameHeight: smartAxisName.height,\n        yOffset,\n        xOffset,\n        labelOffset,\n        availableSpace: axisInstance.availableSpace()\n    };\n    // Set position for axis name\n    setAxisNamePos(textNode, orientation, measures);\n}\n","import {\n    timeMillisecond,\n    timeSecond,\n    timeMinute,\n    timeHour,\n    timeDay,\n    timeWeek,\n    timeMonth,\n    timeYear\n} from 'muze-utils';\n\nconst durationSecond = 1000;\nconst durationMinute = durationSecond * 60;\nconst durationHour = durationMinute * 60;\nconst durationDay = durationHour * 24;\nconst durationWeek = durationDay * 7;\nconst durationMonth = durationDay * 30;\nconst durationYear = durationDay * 365;\n\n// Longest Word for each level based on which tick skipping is decided\nconst longestWord = {\n    month: 'September',\n    quarter: 'October',\n    halfYearly: 'July',\n    year: 9999,\n    day: 'September',\n    hour: '24 AM',\n    mintues: '60:60',\n    seconds: ':60',\n    week: 'Wed 31'\n};\n\n// These are the various levels of ticks that can be shown by Muze.\n// Each level is described as how frequently the ticks appear\n// The format is as follows:\n// [Frequency, Milliseconds, Name of Seconds, Tick Generator, Level Type]\nconst tickIntervals = [\n    [1, 1, 'milliseconds', timeMillisecond.every(1), 'seconds'],\n    [1, durationSecond, 'seconds', timeSecond.every(1), 'seconds'],\n    [5, 5 * durationSecond, 'five seconds', timeSecond.every(5), 'seconds'],\n    [10, 10 * durationSecond, 'ten seconds', timeSecond.every(10), 'seconds'],\n    [15, 15 * durationSecond, 'fifteen seconds', timeSecond.every(15), 'seconds'],\n    [30, 30 * durationSecond, 'thirty seconds', timeSecond.every(30), 'seconds'],\n    [1, durationMinute, 'minute', timeMinute.every(1), 'minutes'],\n    [5, 5 * durationMinute, 'five minutes', timeMinute.every(5), 'minutes'],\n    [10, 10 * durationMinute, 'ten minutes', timeMinute.every(10), 'minutes'],\n    [15, 15 * durationMinute, 'fifteen minutes', timeMinute.every(15), 'minutes'],\n    [30, 30 * durationMinute, 'thirty minutes', timeMinute.every(30), 'minutes'],\n    [1, durationHour, 'hour', timeHour.every(1), 'hour'],\n    [3, 3 * durationHour, 'three hours', timeHour.every(3), 'hour'],\n    [6, 6 * durationHour, 'six hours', timeHour.every(6), 'hour'],\n    [12, 12 * durationHour, 'twelve hours', timeHour.every(12), 'hour'],\n    [1, durationDay, 'daily', timeDay.every(1), 'day'],\n    [1, durationWeek, 'weekly', timeWeek.every(1), 'week'],\n    [1, durationMonth, 'monthly', timeMonth.every(1), 'week'],\n    [3, 3 * durationMonth, 'quaterly', timeMonth.every(3), 'quarter'],\n    [6, 6 * durationMonth, 'half yearly', timeMonth.every(6), 'halfYearly'],\n    [1, durationYear, 'yearly', timeYear.every(1), 'year'],\n    [2, 2 * durationYear, '2 year', timeYear.every(2), 'year'],\n    [3, 3 * durationYear, '3 year', timeYear.every(3), 'year'],\n    [5, 5 * durationYear, '5 year', timeYear.every(5), 'year'],\n    [10, 10 * durationYear, 'decade', timeYear.every(10), 'year'],\n    [100, 100 * durationYear, 'century', timeYear.every(100), 'year'],\n    [1000, 1000 * durationYear, 'millenium', timeYear.every(1000), 'year']\n];\n/**\n * Get the actual tick interval based on the available width, number of ticks\n * and the distance between two ticks\n *\n * @param {Object} context Axis Context\n * @param {number} noOfTicks Number of Ticks based on which interval is calculated\n * @return {number} The width for the tick interval\n */\nconst getActualTickInterval = (context, noOfTicks) => {\n    const minTickDistance = context._minTickDistance;\n    const minWidthBetweenTicks = minTickDistance.width;\n\n    const { width } = context.availableSpace();\n    const actualTickInterval = Math.floor(((width - (noOfTicks - 1) * (minWidthBetweenTicks)) / noOfTicks));\n\n    return actualTickInterval;\n};\n\n/**\n * Get the tick interval based on the current level of ticks. Levels are decided on\n * the number of ticks that are possible to show\n *\n * @param {Object} context Axis Context\n * @param {string} type Type of level (yearly, monthly, etc)\n * @return {number} The width for the tick interval\n */\nconst getTickIntervalBasedOnCurrentLevel = (context, type) => {\n    const labelManager = context._dependencies.labelManager;\n    const longestWordType = longestWord[type];\n    const measure = labelManager.getOriSize(longestWordType);\n\n    return measure.width;\n};\n\nconst getTickIntervalFnBasedOnNumberOfTicks = (interval, count, context) => {\n    let possibleTickLevelIndex = tickIntervals.length - 1;\n    let maxPossibleTicks = 1;\n    let tickIntervalLevelInfo = null;\n\n    // Decide possible tick level based on min tick width (with ellipses)\n    for (let i = tickIntervals.length - 1; i >= 0; i--) {\n        const tickIntervalInfo = tickIntervals[i];\n        const numOfPossibleTicks = Math.floor(interval / tickIntervalInfo[1]);\n        if (numOfPossibleTicks <= count) {\n            possibleTickLevelIndex = i;\n            maxPossibleTicks = numOfPossibleTicks;\n        }\n    }\n\n    tickIntervalLevelInfo = tickIntervals[possibleTickLevelIndex];\n\n    // Get actual tick interval based on the level of ticks generated\n    const actualTickInterval = getActualTickInterval(context, maxPossibleTicks);\n\n    // Maximum Possible tick Interval for a particular level based on a pre decided set of values\n    const maxTickInterval = getTickIntervalBasedOnCurrentLevel(context, tickIntervalLevelInfo[4]);\n\n    // Display the next level involving tick skipping if current level does not meet the requirement\n    // for displaying max tick\n    if (actualTickInterval < maxTickInterval && possibleTickLevelIndex < tickIntervals.length - 1) {\n        tickIntervalLevelInfo = tickIntervals[possibleTickLevelIndex + 1];\n    }\n    return tickIntervalLevelInfo[3];\n};\n\nexport const getSkippedTicks = (context, maxPossibleTicks) => {\n    let actualNumberOfTicks = maxPossibleTicks;\n    const domain = context.domain();\n    const minDiff = context._minDiff;\n    // Get the interval in ms from the domain\n    const millisecondInterval = domain[1] - domain[0];\n    // Get number of ticks based on the minimum difference in the data\n    const numOfTicksAccordingToMinDiff = Math.floor(millisecondInterval / minDiff);\n\n    // Show ticks according to min diff if possible\n    if (maxPossibleTicks >= numOfTicksAccordingToMinDiff) {\n        actualNumberOfTicks = numOfTicksAccordingToMinDiff;\n    }\n\n    return getTickIntervalFnBasedOnNumberOfTicks(millisecondInterval, actualNumberOfTicks, context);\n};\n","import { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { getSkippedTicks } from './skip-ticks';\nimport { TIME, LINEAR, BAND } from '../enums/scale-type';\n\nexport const applyTickSkipping = (context) => {\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minWidthBetweenTicks = minTickDistance.width;\n    const minTickWidth = minTickSpace.width;\n\n    const { width } = context.availableSpace();\n\n    const maxTicks = Math.floor((width + minWidthBetweenTicks) / (minTickWidth + minWidthBetweenTicks));\n\n    const ticks = context.scale().ticks(getSkippedTicks(context, maxTicks));\n\n    context.renderConfig({\n        tickValues: ticks\n    });\n};\n\nconst adjustHorizontalRange = (range, diff) => {\n    range[0] += diff;\n    range[1] -= diff;\n    return range;\n};\n\nconst adjustVerticalRange = (range, diff) => {\n    range[0] -= diff;\n    range[1] += diff;\n    return range;\n};\n\nconst rangeAdjustmentMap = {\n    [TOP]: adjustHorizontalRange,\n    [BOTTOM]: adjustHorizontalRange,\n    [LEFT]: adjustVerticalRange,\n    [RIGHT]: adjustVerticalRange\n};\n\nexport const setAxisRange = (context, type, rangeBounds, offset) => {\n    context.range(rangeBounds);\n    offset && context.renderConfig({ [`${type}Offset`]: offset });\n};\n\nconst getAxisOffset = (timeDiff, range, domain) => {\n    const avWidth = Math.abs(range[1] - range[0]);\n    const pvr = avWidth / (domain[1] - domain[0]);\n    const width = (pvr * timeDiff);\n    const bars = avWidth / width;\n    const barWidth = avWidth / (bars + 1);\n    const diff = avWidth - barWidth * bars;\n\n    return diff / 2;\n};\n\nexport const getAdjustedRange = (minDiff, range, domain, config) => {\n    const {\n        orientation,\n        adjustRange\n    } = config;\n    const diff = getAxisOffset(minDiff, range, domain);\n\n    if (adjustRange) {\n        return rangeAdjustmentMap[orientation](range, diff);\n    }\n    return range;\n};\n\nexport const spaceSetter = (context, spaceConfig) => {\n    let tickInterval;\n    let heightForTicks;\n    const config = context.config();\n    const {\n        width: availWidth,\n        height: availHeight,\n        padding\n    } = context.availableSpace();\n    const {\n        top,\n        left,\n        bottom,\n        right\n    } = padding;\n    const {\n        isOffset\n    } = spaceConfig;\n    const {\n        showAxisName,\n        labels\n    } = context.renderConfig();\n    const {\n        rotation\n    } = labels;\n    const {\n        fixedBaseline,\n        axisNamePadding,\n        tickValues\n    } = config;\n    const {\n        tickDimensions,\n        allTickDimensions,\n        axisNameDimensions,\n        tickSize\n    } = context.getAxisDimensions();\n    const {\n        height: tickDimHeight,\n        width: tickDimWidth\n    } = tickDimensions;\n\n    const namePadding = showAxisName ? axisNamePadding : 0;\n    const labelConfig = { smartTicks: true, rotation: labels.rotation };\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minDiff = context._minDiff;\n    const domain = context.domain();\n    const axisNameHeight = axisNameDimensions.height;\n    const minWidthBetweenTicks = minTickDistance.width;\n    const minTickWidth = Math.min(minTickSpace.width, tickDimWidth);\n    const minTickHeight = Math.min(minTickSpace.height, tickDimHeight);\n\n    return {\n        [TIME]: {\n            x: () => {\n                !tickValues && context.applyTickSkipping();\n                const noOfTicks = context.getTickValues().length;\n\n                // Get the Tick Interval\n                tickInterval = ((availWidth - (noOfTicks - 1) * (minWidthBetweenTicks)) / noOfTicks);\n\n                // Get height for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickWidth && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = rotation;\n                    // Remove ticks if not enough height\n                    if (tickInterval < minTickHeight) {\n                        heightForTicks = availHeight;\n                        tickInterval = minTickHeight;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n\n                const tickShifter = Math.min(tickInterval, tickDimWidth);\n                // set range for axis\n                setAxisRange(context, 'y', getAdjustedRange(minDiff, [tickShifter / 2,\n                    availWidth - left - right - tickShifter / 2], domain, config),\n                        isOffset ? availHeight : null);\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n\n                return labelConfig;\n            },\n            y: () => {\n                let widthForTicks = availWidth;\n                const tickShifter = tickDimHeight / 2;\n\n                setAxisRange(context, 'x', getAdjustedRange(minDiff,\n                    [availHeight - top - bottom - tickShifter, tickShifter], domain, config),\n                        isOffset ? availWidth : null);\n\n                if ((availWidth - axisNameHeight - namePadding) <= minWidthBetweenTicks) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        [BAND]: {\n            x: () => {\n                setAxisRange(context, 'y', [0, availWidth - left - right], isOffset ? availHeight : null);\n                const range = context.range();\n\n                // Get Tick Interval\n                tickInterval = ((range[1] - range[0]) / (tickValues || domain).length) - minWidthBetweenTicks;\n\n                // Get height available for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickWidth && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = rotation === null ? -90 : rotation;\n                    labelConfig.smartTicks = false;\n\n                    tickInterval = Math.max(heightForTicks, minTickWidth);\n\n                    if (heightForTicks < minTickWidth) {\n                        context.renderConfig({ showAxisName: false });\n                    }\n                } else if (tickValues) {\n                    const interval = (availWidth / domain.length) - minWidthBetweenTicks;\n                    if (interval < minTickWidth) {\n                        context.range([minTickHeight / 2, availWidth - minTickHeight / 2]);\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n                return labelConfig;\n            },\n            y: () => {\n                setAxisRange(context, 'x', [availHeight - bottom, top], isOffset ? availWidth : null);\n\n                let widthForTicks = availWidth - axisNameHeight - tickSize - namePadding;\n                if (widthForTicks <= minWidthBetweenTicks) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        [LINEAR]: {\n            x: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimWidth / 2;\n\n                const baseline = fixedBaseline ? 0 : tickShifter;\n\n                setAxisRange(context, 'y', [baseline + left, availWidth - right - tickShifter],\n                    isOffset ? availHeight : null);\n\n                const range = context.range();\n\n                // Get Tick widths and available space\n                const totalTickWidth = allTickDimensions.length * (tickDimWidth + minWidthBetweenTicks);\n                const availableWidth = range[1] - range[0];\n\n                 // Rotate labels if not enough width\n                if (availableWidth < totalTickWidth && labels.rotation !== null) {\n                    if (availHeight - tickDimWidth - namePadding - tickSize > axisNameHeight) {\n                        labelConfig.rotation = null;\n                        context.renderConfig({\n                            showInnerTicks: true,\n                            showAxisName: true\n                        });\n                    } else {\n                        labelConfig.rotation = -90;\n                        context.renderConfig({\n                            showInnerTicks: true,\n                            showAxisName: false\n\n                        });\n                    }\n                }\n\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            },\n            y: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimensions.height / 2;\n                const baseline = fixedBaseline ? 1 : tickShifter;\n\n                setAxisRange(context, 'x', [availHeight - bottom - baseline, tickShifter + top],\n                    isOffset ? availWidth : null);\n\n                // Remove display of ticks if no space is left\n                if (availWidth < tickDimWidth + axisNameHeight + namePadding) {\n                    context.renderConfig({ showInnerTicks: false });\n                    if (availWidth < axisNameHeight) {\n                        context.renderConfig({ show: false });\n                    }\n                }\n                return labelConfig;\n            }\n        }\n    };\n};\n","import { defaultValue } from 'muze-utils';\nimport { TOP, LEFT, BOTTOM } from '../enums/axis-orientation';\nimport { MIN_NO_OF_TICKS, DEFAULT_NO_OF_TICKS } from '../enums/constants';\nimport { setAxisRange, getAdjustedRange } from './space-setter';\n\nexport const getRotatedSpaces = (rotation = 0, width, height) => {\n    let rotatedHeight = height;\n    let rotatedWidth = width;\n    if (rotation) {\n        const angle = ((rotation || 0) * Math.PI) / 180;\n        rotatedWidth = Math.abs(height * Math.sin(angle)) + Math.abs(width * Math.cos(angle));\n        rotatedHeight = Math.abs(width * Math.sin(angle)) + Math.abs(height * Math.cos(angle));\n    }\n    return { width: rotatedWidth, height: rotatedHeight };\n};\n\nexport const setOffset = (context) => {\n    let x = 0;\n    let y = 0;\n    const logicalSpace = context.logicalSpace();\n    const config = context.config();\n    const {\n        orientation,\n        xOffset,\n        yOffset\n    } = config;\n    if (orientation === LEFT) {\n        x = xOffset === undefined ? logicalSpace.width : xOffset;\n    }\n    if (orientation === TOP) {\n        y = yOffset === undefined ? logicalSpace.height : yOffset;\n    }\n    context.renderConfig({ xOffset: x, yOffset: y });\n};\n\nexport const getNumberOfTicks = (availableSpace, labelDim, axis, axisInstance) => {\n    let numberOfValues = 0;\n    let tickValues = [];\n    let { numberOfTicks } = axisInstance.config();\n    const ticks = axis.scale().ticks();\n    const tickLength = ticks.length;\n    const minTickDistance = axisInstance._minTickDistance.width;\n\n    numberOfValues = tickLength;\n\n    if (tickLength * (labelDim + minTickDistance) > availableSpace) {\n        numberOfValues = Math.floor(availableSpace / (labelDim + minTickDistance));\n    }\n\n    numberOfTicks = numberOfTicks || numberOfValues;\n    numberOfValues = Math.min(numberOfTicks, Math.max(MIN_NO_OF_TICKS, numberOfValues));\n\n    tickValues = axis.scale().ticks(numberOfValues);\n\n    if (tickValues.length > numberOfValues) {\n        tickValues = tickValues.filter((e, i) => i % 2 === 0);\n    }\n\n    if (numberOfValues === MIN_NO_OF_TICKS) {\n        tickValues = axis.scale().ticks(DEFAULT_NO_OF_TICKS);\n        tickValues = [tickValues[0], tickValues[tickValues.length - 1]];\n    }\n    return tickValues;\n};\n\nexport const getAxisComponentDimensions = (context) => {\n    let largestTick = '';\n    let largestTickDimensions = { width: 0, height: 0 };\n    let smartTick = {};\n    let axisTicks;\n    const allTickDimensions = [];\n    const scale = context.scale();\n    const { tickValues, showAxisName } = context.renderConfig();\n    const { name } = context.config();\n    const { labelManager } = context.dependencies();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    // set the style on the shared label manager instance\n    labelManager.setStyle(context._tickLabelStyle);\n\n    // get the values along the domain\n    axisTicks = tickValues || labelFunc();\n\n    // Get the tick labels\n    axisTicks = axisTicks.map((originalLabel, i) => {\n        const label = context.getFormattedText(originalLabel, i, axisTicks);\n\n    // convert to string for quant values\n        const tickDimensions = labelManager.getOriSize(label);\n\n    // Get spaces for all labels\n        allTickDimensions.push(tickDimensions);\n\n    // Getting largest label\n        if (tickDimensions.width > largestTickDimensions.width) {\n            largestTick = label;\n            smartTick = context.smartTicks() ? context.smartTicks()[i] : {};\n\n            largestTickDimensions = tickDimensions;\n            smartTick = smartTick || tickDimensions;\n        }\n        return label;\n    });\n\n    labelManager.setStyle(context._axisNameStyle);\n    const axisNameDimensions = showAxisName ? labelManager.getOriSize(name) : { width: 0, height: 0 };\n\n    return {\n        axisNameDimensions,\n        largestTick,\n        largestTickDimensions,\n        allTickDimensions,\n        axisTicks,\n        smartTick,\n        tickSize: context.getTickSize()\n    };\n};\n\nexport const computeAxisDimensions = (context) => {\n    let tickDimensions = {};\n    const { labels } = context.renderConfig();\n    const { smartTicks, rotation } = labels;\n    const {\n        largestTickDimensions,\n        axisTicks,\n        smartTick,\n        axisNameDimensions,\n        allTickDimensions,\n        tickSize\n    } = getAxisComponentDimensions(context);\n    const { height: labelHeight, width: labelWidth } = largestTickDimensions;\n\n    // get the domain of axis\n    const domain = context.domain();\n    // const angle = ((rotation || 0) * Math.PI) / 180;\n\n    if (domain.length === 0) {\n        return null;\n    }\n\n    if (smartTicks) {\n        tickDimensions = smartTick;\n    } else {\n        tickDimensions = { width: labelWidth, height: labelHeight };\n    }\n    tickDimensions = getRotatedSpaces(rotation, tickDimensions.width, tickDimensions.height);\n\n    if (tickSize === 0) {\n        tickDimensions = { width: 0, height: 0 };\n    }\n    return {\n        allTickDimensions,\n        tickSize,\n        tickDimensions,\n        axisNameDimensions,\n        largestTickDimensions,\n        axisTicks\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getHorizontalAxisSpace = (context, axisDimensions, range) => {\n    let width;\n    let height;\n    const domain = context.domain();\n    const minTickDistance = context._minTickDistance.width;\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    width = range && range.length ? range[1] - range[0] : ((tickDimWidth + minTickDistance) * 3);\n\n    height = 0;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        width = ((max - min) / Math.abs(minTickDiff)) * (tickDimWidth + context._minTickDistance.width);\n    }\n    if (!range || !range.length) {\n        height = Math.max(tickDimWidth, tickDimHeight);\n    } else {\n        height = tickDimHeight;\n    }\n\n    height += (showAxisName ? axisDimHeight + axisNamePadding : 0) + tickSize;\n\n    return {\n        width,\n        height\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getVerticalAxisSpace = (context, axisDimensions) => {\n    let height;\n    let width;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    height = 0;\n    width = tickDimWidth;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        height = ((max - min) / Math.abs(minTickDiff)) * tickDimHeight;\n    }\n    width += (showAxisName ? axisDimHeight : 0) + tickSize + axisNamePadding;\n\n    return {\n        height,\n        width\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateBandSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n\n    const { orientation } = context.config();\n    const { show } = context.renderConfig();\n    const { largestTickDimensions, axisTicks, allTickDimensions } = axisDimensions;\n    const { height: largestDimHeight } = largestTickDimensions;\n    const minTickWidth = context._minTickDistance.width;\n    if (orientation === TOP || orientation === BOTTOM) {\n        let {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n\n        if (!range || !range.length) {\n            width = allTickDimensions.reduce((t, n) =>\n                t + Math.min(n.width, n.height) + minTickWidth, 0);\n        }\n\n        if (show === false) {\n            height = 0;\n            width = 0;\n        }\n        return {\n            width,\n            height\n        };\n    }\n\n    let {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    if (!height || height === 0) {\n        height = axisTicks.length * (largestDimHeight + context._minTickDistance.height);\n    }\n    if (show === false) {\n        width = 0;\n    }\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateContinousSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n    const { orientation } = context.config();\n    const { show, showAxisName } = context.renderConfig();\n    const { axisNameDimensions } = axisDimensions;\n\n    if (show === false) {\n        return {\n            width: 0,\n            height: 0\n        };\n    }\n\n    const { width: axisNameWidth } = axisNameDimensions;\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        const {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n        const axisWidth = Math.max(width, axisNameWidth);\n\n        return {\n            width: axisWidth,\n            height\n        };\n    }\n    const {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    const effHeight = Math.max(height, showAxisName ? axisNameWidth : 0);\n\n    return {\n        width,\n        height: effHeight\n    };\n};\n\n/**\n * Overwrites domain with user defined domain (if present)\n * @param {Object} context reference to current axes\n * @param {Array} domain default domain\n *\n * @return {Array} domain\n */\nexport const getValidDomain = (context, domain) => {\n    const { domain: userDom } = context.config();\n\n    if (userDom) {\n        domain = userDom;\n    }\n\n    return defaultValue(domain, []);\n};\n\nexport const setContinousAxisDomain = (context, domain) => {\n    const { nice } = context.config();\n    const scale = context.scale.bind(context);\n\n    scale().domain(domain);\n    nice && scale().nice();\n    context._domain = scale().domain();\n};\n\n/**\n * Checks if any of the properties have changed between two objects\n * @param {Object} obj first object\n * @param {Object} obj1 second object\n * @param {Array} properties properties to be compared between two objects\n *\n * @return {Boolean} boolean value\n */\nexport const hasAxesConfigChanged = (obj = {}, obj1 = {}, properties) => {\n    if (!Object.keys(obj).length || !Object.keys(obj1).length) {\n        return false;\n    }\n    return properties.some(key => obj[key] !== obj1[key]);\n};\n\nexport const resetTickInterval = (context, domain) => {\n    const {\n        orientation,\n        isOffset\n    } = context.config();\n\n    const minDiff = context._minDiff;\n     // Set available space on interaction\n    if (context.range().length && (orientation === TOP || orientation === BOTTOM)) {\n        context.applyTickSkipping();\n        const {\n            largestTickDimensions\n        } = context.getAxisDimensions();\n\n        const noOfTicks = context.getTickValues().length;\n\n        const { width, height, padding } = context.availableSpace();\n        const {\n            left,\n            right\n        } = padding;\n        // Get the Tick Interval\n        const tickInterval = Math.min(largestTickDimensions.width,\n            ((width - (noOfTicks - 1) * (context._minTickDistance.width)) / noOfTicks));\n\n        context.maxTickSpaces({\n            width: tickInterval\n        });\n\n        const adjustedRange = getAdjustedRange(minDiff, [tickInterval / 2,\n            width - left - right - tickInterval / 2], domain, context.config());\n\n         // set range for axis\n        setAxisRange(context, 'y', adjustedRange, isOffset ? height : null);\n\n        context.setTickConfig();\n    }\n};\n\nexport const getSmartAxisName = (name, width, labelManager) => {\n    const oriSize = labelManager.getOriSize(name);\n\n    labelManager.useEllipsesOnOverflow(true);\n\n    return labelManager.getSmartText(name, width, oriSize.height, true);\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { hasAxesConfigChanged } from './helper';\n\nexport const PROPS = {\n    availableSpace: {},\n    axisDimensions: {},\n    axisComponentDimensions: {},\n    config: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._config || {});\n            const mockedOldConfig = mergeRecursive({}, oldConfig);\n            value = mergeRecursive(mockedOldConfig, value);\n\n            value.axisNamePadding = Math.max(value.axisNamePadding, 0);\n            const shouldAxesScaleUpdate = hasAxesConfigChanged(\n                value, oldConfig, ['interpolator', 'exponent', 'base', 'orientation']\n            );\n            const tickFormatter = context.sanitizeTickFormatter(value);\n\n            if (shouldAxesScaleUpdate) {\n                context._scale = context.createScale(value);\n                context._axis = context.createAxis(value);\n            }\n\n            context._tickFormatter = ticks => tickFormatter(ticks);\n\n            context.resetRenderConfig(value);\n            return value;\n        }\n    },\n    renderConfig: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._renderConfig || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    logicalSpace: {},\n    mount: {\n    },\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.logicalSpace(null);\n            return value;\n        }\n    },\n\n    smartTicks: {},\n    tickSize: {},\n    maxTickSpaces: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._maxTickSpaces || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import {\n    mergeRecursive,\n    getSmartComputedStyle,\n    selectElement,\n    generateGetterSetters,\n    getUniqueId\n} from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { defaultConfig } from './default-config';\nimport { renderAxis } from '../axis-renderer';\nimport { spaceSetter } from './space-setter';\nimport {\n    getAxisComponentDimensions,\n    computeAxisDimensions,\n    calculateContinousSpace,\n    setOffset,\n    getValidDomain,\n    getSmartAxisName\n} from './helper';\nimport { PROPS } from './props';\n\nexport default class SimpleAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @memberof SimpleAxis\n     */\n    constructor (config, dependencies) {\n        this._id = getUniqueId();\n\n        this._dependencies = dependencies;\n        this._mount = null;\n        this._range = [];\n        this._domain = [];\n        this._domainLock = false;\n        this._axisDimensions = {};\n        this._smartTicks = [];\n\n        const defCon = mergeRecursive({}, this.constructor.defaultConfig());\n        const simpleConfig = mergeRecursive(defCon, config);\n\n        const bodyElem = selectElement('body');\n        const classPrefix = simpleConfig.classPrefix;\n        this._tickLabelStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-ticks`);\n        this._axisNameStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-axis-name`);\n\n        dependencies.labelManager.setStyle(this._tickLabelStyle);\n        const dist = dependencies.labelManager.getOriSize('w');\n\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n        this._minTickSpace = dependencies.labelManager.getOriSize('www...');\n\n        generateGetterSetters(this, PROPS);\n        this.config(simpleConfig);\n\n        this._scale = this.createScale(this._config);\n        this._axis = this.createAxis(this._config);\n        this._animationDonePromises = [];\n    }\n\n    /**\n     * Returns the default configuration of simple axis\n     *  @return {Object} default configurations\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    scale (...params) {\n        if (params.length) {\n            this._scale = params[0];\n            return this;\n        }\n        return this._scale;\n    }\n\n    resetDomain () {\n        this._domain = [];\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    axis (...params) {\n        if (params.length) {\n            this._axis = params[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            this.scale().domain(domainValue);\n            this._domain = this.scale().domain();\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    setAxisComponentDimensions () {\n        this.axisComponentDimensions(getAxisComponentDimensions(this));\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const scale = createScale({\n            padding,\n            interpolator,\n            exponent,\n            base,\n            range,\n            type: this.constructor.type()\n        });\n\n        return scale;\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat, numberFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(numberFormat(val), val, i, ticks);\n        }\n\n        return () => val => numberFormat(val);\n    }\n\n    resetRenderConfig (config) {\n        const {\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName,\n            xOffset,\n            yOffset,\n            tickValues,\n            smartAxisName\n        } = config;\n        this.renderConfig({\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName,\n            xOffset,\n            yOffset,\n            tickValues,\n            smartAxisName\n        });\n        return this;\n    }\n\n    resetLogicalSpace () {\n        this.logicalSpace(null);\n        this.range([]);\n\n        this.resetRenderConfig(this.config());\n    }\n\n    getFormattedText (text, index, axisTicks) {\n        const formatter = this._tickFormatter;\n\n        return formatter(axisTicks)(text, index);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const { orientation } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            const axis = axisClass(this.scale());\n            return axis;\n        }\n        return null;\n    }\n\n    setTickValues (tickValues) {\n        const renderConfig = this.renderConfig();\n        this.config({ ...renderConfig, tickValues });\n        this.tickValues = tickValues;\n        this.axis().tickValues(tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n        const type = this.constructor.type();\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset })[type].x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset })[type].y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.setSmartAxisName();\n        return this;\n    }\n\n    setSmartAxisName () {\n        const { orientation, name } = this.config();\n        const dimType = (orientation === TOP || orientation === BOTTOM) ? 'width' : 'height';\n        const widthDim = this.availableSpace()[dimType];\n        const labelManager = this.dependencies().labelManager;\n        labelManager.setStyle(this._axisNameStyle);\n        this.renderConfig({\n            smartAxisName: getSmartAxisName(name, widthDim, labelManager)\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        return this;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this.scale()(domainVal);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        return this.axis().tickSize();\n    }\n\n    /**\n     * Gets the space occupied by the parts of an axis\n     *\n     * @return {Object} object with details about sizes of the axis.\n     * @memberof SimpleAxis\n     */\n    getAxisDimensions (...params) {\n        this.axisDimensions(computeAxisDimensions(this, ...params));\n        return this.axisDimensions();\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateContinousSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    /**\n     * Returns the value from the domain when given a value from the range.\n     * @param {number} value Value from the range.\n     * @return {number} Value\n     */\n    invert (value) {\n        return this.scale().invert(value);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     *\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        return [v1, v2];\n    }\n\n    invertExtent (v1, v2) {\n        return [this.invert(v1), this.invert(v2)];\n    }\n\n    getMinTickDifference () {\n        return this.domain();\n    }\n\n    getFormattedTickValues (tickValues) {\n        return tickValues;\n    }\n\n    /**\n     * This method returns the width in pixels for one\n     * unit along the axis. It is only applicable to band scale\n     * and returns undefined for other scale type.\n     *\n     * @return {number} the width of one band along band scale axis\n     * @memberof SimpleAxis\n     */\n    getUnitWidth () {\n        return 0;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof SimpleAxis\n     */\n    serialize () {\n        return {\n            name: this.name,\n            type: this.type,\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to render the axis inside\n     * the supplied svg container.\n     *\n     * @param {SVGElement} svg the svg element in which to render the path\n     * @memberof SimpleAxis\n     */\n    /* istanbul ignore next */render () {\n        if (this.mount()) {\n            this.setTickConfig();\n            renderAxis(this);\n        }\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    remove () {\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    unsubscribe () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    isReverse () {\n        const range = this.range();\n        return range[0] > range[1];\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getPixelToValueRatio () {\n        const scale = this.scale();\n        const range = scale.range();\n        const domain = scale.domain();\n\n        return Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    }\n\n     /**\n     * Notifies when all animations/transitions of the axis are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n}\n\n","import { sanitizeDomainWhenEqual } from 'muze-utils';\nimport { scaleMap } from '../../scale-creator';\n\nexport default class LinearInterpolator {\n\n    createScale (config) {\n        const {\n            range\n        } = config;\n        const scaleFactory = scaleMap.linear;\n        this._scale = scaleFactory().range(range);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain.length) {\n            domain = sanitizeDomainWhenEqual(domain);\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LogInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            base\n        } = config;\n        const scaleFactory = scaleMap.log;\n        this._scale = scaleFactory().range(range).base(base);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        const scale = this._scale;\n        if (domainVal <= 0) {\n            return scale(scale.domain()[0]);\n        }\n\n        return scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain[0] <= 0) {\n            domain[0] = Math.max(1, domain[0]);\n        }\n        if (domain[1] <= 0) {\n            domain[1] = Math.max(1, domain[1]);\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class PowInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            exponent\n        } = config;\n        const scaleFactory = scaleMap.pow;\n        this._scale = scaleFactory().range(range).exponent(exponent);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        return domain;\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { LINEAR, LOG, POW } from '../enums/scale-type';\nimport { LogInterpolator, PowInterpolator, LinearInterpolator } from './interpolators';\nimport {\n    getNumberOfTicks,\n    getValidDomain,\n    setContinousAxisDomain\n} from './helper';\n\nexport const interpolatorMap = {\n    [LOG]: LogInterpolator,\n    [POW]: PowInterpolator,\n    [LINEAR]: LinearInterpolator\n};\n\nexport default class ContinousAxis extends SimpleAxis {\n    constructor (config, dependencies) {\n        config.tickFormat = config.tickFormat || (val => val);\n        super(config, dependencies);\n    }\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const InterpolatorCls = interpolatorMap[interpolator];\n\n        this._interpolator = new InterpolatorCls();\n        let scale = this._interpolator.createScale({\n            padding,\n            exponent,\n            base,\n            range\n        });\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ContinousAxis\n     */\n    static type () {\n        return LINEAR;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this._interpolator.getScaleValue(domainVal);\n    }\n /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n\n        return axis.tickSize();\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainVal = this._interpolator.sanitizeDomain(getValidDomain(this, domain[0]));\n            setContinousAxisDomain(this, domainVal);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (...params) {\n        super.setAvailableSpace(...params);\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} tickValues\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        const {\n            tickValues,\n            showInnerTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        if (!showInnerTicks) {\n            axis.tickValues([]);\n            return this;\n        }\n\n        if (tickValues) {\n            tickValues instanceof Array && this.axis().tickValues(tickValues);\n        }\n        const newTickValues = this.getTickValues();\n\n        axis.tickValues(newTickValues);\n        const smartLabel = this.dependencies().labelManager;\n        smartLabel.setStyle(this._tickLabelStyle);\n        const formatter = this._tickFormatter(newTickValues);\n        const smartTicks = newTickValues.map((val, i) => {\n            const text = formatter(val, i);\n            const tickSpace = smartLabel.getOriSize(text);\n\n            tickSpace.text = text;\n            return tickSpace;\n        });\n\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickValues () {\n        let labelDim = 0;\n        const {\n            orientation\n\n        } = this.config();\n        const {\n            tickValues\n        } = this.renderConfig();\n        const range = this.range();\n        const axis = this.axis();\n\n        const availableSpace = Math.abs(range[0] - range[1]);\n\n        const labelProps = this.axisComponentDimensions().largestTickDimensions;\n\n        if (tickValues) {\n            return tickValues;\n        }\n        labelDim = labelProps[orientation === BOTTOM || orientation === TOP ? 'width' : 'height'];\n\n        return getNumberOfTicks(availableSpace, labelDim, axis, this);\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.renderConfig().tickValues);\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline (tickText) {\n        const {\n            orientation\n        } = this.config();\n        const {\n            labels\n        } = this.renderConfig();\n\n        const {\n            rotation\n        } = labels;\n        const axis = this.axis();\n        const ticks = axis.tickValues();\n        const smartTicks = this.smartTicks();\n\n        if (smartTicks && smartTicks.length) {\n            const { width, height } = this.smartTicks()[0];\n\n            axis.tickTransform((d) => {\n                if (d === ticks[0]) {\n                    if ((orientation === LEFT || orientation === RIGHT)) {\n                        return `translate(0, -${(height) / 3}px)`;\n                    }\n\n                    if ((orientation === TOP || orientation === BOTTOM) && !rotation) {\n                        return `translate(${width / 2}px,  ${0}px)`;\n                    }\n                } return '';\n            });\n        }\n        return tickText;\n    }\n\n}\n","import SimpleAxis from './simple-axis';\nimport { BAND } from '../enums/scale-type';\nimport { calculateBandSpace, setOffset, getRotatedSpaces } from './helper';\n\nexport default class BandAxis extends SimpleAxis {\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BandAxis\n     */\n    static type () {\n        return BAND;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks = '';\n        let smartlabel;\n        const domain = this.domain();\n        const { labelManager } = this._dependencies;\n        const { padding } = this.config();\n        const { labels, tickValues } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        tickValues && this.axis().tickValues(tickValues);\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        // Update padding between plots\n        if (typeof padding === 'number') {\n            const paddingNormalized = Math.min(1, Math.max(0, padding));\n            this.scale().padding(paddingNormalized);\n        }\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    /**\n     *\n     *\n     * @memberof BandAxis\n     */\n    getTickValues () {\n        return this.axis().scale().domain();\n    }\n\n    formatTickValue (val) {\n        return this.valueParser()(val);\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(this.formatTickValue(val), val, i, ticks);\n        }\n        return () => val => this.formatTickValue(val);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    getUnitWidth () {\n        return this.scale().bandwidth();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        axis.tickSizeInner(showInnerTicks ? 6 : 0);\n        axis.tickSizeOuter(showOuterTicks ? 6 : 0);\n        return axis.tickSize();\n    }\n\n    invertExtent (v1, v2) {\n        return this.scale().invertExtent(v1, v2);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        const scale = this.scale();\n        const range = scale.range();\n        const reverse = range[0] > range[1];\n\n        const extent = this.invertExtent(v1, v2);\n        const p1 = scale(reverse ? extent[extent.length - 1] : extent[0]);\n        const p2 = scale(reverse ? extent[0] : extent[extent.length - 1]) + scale.bandwidth();\n        return [p1, p2];\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { TIME } from '../enums/scale-type';\nimport { calculateBandSpace, getRotatedSpaces, getValidDomain, setContinousAxisDomain, setOffset,\n    resetTickInterval } from './helper';\nimport { applyTickSkipping } from './space-setter';\n\n/**\n *\n *\n * @export\n * @class TimeAxis\n * @extends {SimpleAxis}\n */\nexport default class TimeAxis extends SimpleAxis {\n\n    constructor (...params) {\n        super(...params);\n        this._minDiff = Infinity;\n    }\n\n    /**\n     *\n     *\n     * @param {*} range\n     *\n     * @memberof TimeAxis\n     */\n    createScale (range) {\n        let scale = super.createScale(range);\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TimeAxis\n     */\n    static type () {\n        return TIME;\n    }\n\n    formatTickValue (val) {\n        return this.scale().tickFormat()(val);\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return (ticks) => {\n                const rawTicks = ticks.map(t => t.getTime());\n                return (val, i) => tickFormat(this.formatTickValue(val), val.getTime(), i, rawTicks);\n            };\n        }\n        return () => val => this.formatTickValue(val);\n    }\n\n     /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n        return super.getTickSize();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TimeAxis\n     */\n    getTickValues () {\n        return this.renderConfig().tickValues || this.scale().ticks();\n    }\n\n    /**\n     *\n     *\n     * @param {*} diff\n     *\n     * @memberof TimeAxis\n     */\n    minDiff (diff) {\n        this._minDiff = Math.min(this._minDiff, diff);\n        return this;\n    }\n\n    applyTickSkipping () {\n        applyTickSkipping(this);\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            setContinousAxisDomain(this, domainValue);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n\n            resetTickInterval(this, domainValue);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (...params) {\n        super.setAvailableSpace(...params);\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks;\n        let smartlabel;\n\n        const { labels, tickValues } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { labelManager } = this._dependencies;\n        const domain = this.getTickValues();\n\n        tickValues && this.axis().tickValues(tickValues);\n\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n\n        this.smartTicks(smartTicks);\n        return this;\n    }\n}\n","export const x11Colors = {\n    Pink: { hex: 'ffc0cb', rgb: '255,192,203' },\n    LightPink: { hex: 'ffb6c1', rgb: '255,182,193' },\n    HotPink: { hex: 'ff69b4', rgb: '255,105,180' },\n    DeepPink: { hex: 'ff1493', rgb: '255,20,147' },\n    PaleVioletRed: { hex: 'db7093', rgb: '219,112,147' },\n    MediumVioletRed: { hex: 'c71585', rgb: '199,21,133' },\n    LightSalmon: { hex: 'ffa07a', rgb: '255,160,122' },\n    Salmon: { hex: 'fa8072', rgb: '250,128,114' },\n    DarkSalmon: { hex: 'e9967a', rgb: '233,150,122' },\n    LightCoral: { hex: 'f08080', rgb: '240,128,128' },\n    IndianRed: { hex: 'cd5c5c', rgb: '205,92,92' },\n    Crimson: { hex: 'dc143c', rgb: '220,20,60' },\n    FireBrick: { hex: 'b22222', rgb: '178,34,34' },\n    DarkRed: { hex: '8b0000', rgb: '139,0,0' },\n    Red: { hex: 'ff0000', rgb: '255,0,0' },\n    OrangeRed: { hex: 'ff4500', rgb: '255,69,0' },\n    Tomato: { hex: 'ff6347', rgb: '255,99,71' },\n    Coral: { hex: 'ff7f50', rgb: '255,127,80' },\n    DarkOrange: { hex: 'ff8c00', rgb: '255,140,0' },\n    Orange: { hex: 'ffa500', rgb: '255,165,0' },\n    Gold: { hex: 'ffd700', rgb: '255,215,0' },\n    Yellow: { hex: 'ffff00', rgb: '255,255,0' },\n    LightYellow: { hex: 'ffffe0', rgb: '255,255,224' },\n    LemonChiffon: { hex: 'fffacd', rgb: '255,250,205' },\n    LightGoldenrodYellow: { hex: 'fafad2', rgb: '250,250,210' },\n    PapayaWhip: { hex: 'ffefd5', rgb: '255,239,213' },\n    Moccasin: { hex: 'ffe4b5', rgb: '255,228,181' },\n    PeachPuff: { hex: 'ffdab9', rgb: '255,218,185' },\n    PaleGoldenrod: { hex: 'eee8aa', rgb: '238,232,170' },\n    Khaki: { hex: 'f0e68c', rgb: '240,230,140' },\n    DarkKhaki: { hex: 'bdb76b', rgb: '189,183,107' },\n    Cornsilk: { hex: 'fff8dc', rgb: '255,248,220' },\n    BlanchedAlmond: { hex: 'ffebcd', rgb: '255,235,205' },\n    Bisque: { hex: 'ffe4c4', rgb: '255,228,196' },\n    NavajoWhite: { hex: 'ffdead', rgb: '255,222,173' },\n    Wheat: { hex: 'f5deb3', rgb: '245,222,179' },\n    BurlyWood: { hex: 'deb887', rgb: '222,184,135' },\n    Tan: { hex: 'd2b48c', rgb: '210,180,140' },\n    RosyBrown: { hex: 'bc8f8f', rgb: '188,143,143' },\n    SandyBrown: { hex: 'f4a460', rgb: '244,164,96' },\n    Goldenrod: { hex: 'daa520', rgb: '218,165,32' },\n    DarkGoldenrod: { hex: 'b8860b', rgb: '184,134,11' },\n    Peru: { hex: 'cd853f', rgb: '205,133,63' },\n    Chocolate: { hex: 'd2691e', rgb: '210,105,30' },\n    SaddleBrown: { hex: '8b4513', rgb: '139,69,19' },\n    Sienna: { hex: 'a0522d', rgb: '160,82,45' },\n    Brown: { hex: 'a52a2a', rgb: '165,42,42' },\n    Maroon: { hex: '800000', rgb: '128,0,0' },\n    DarkOliveGreen: { hex: '556b2f', rgb: '85,107,47' },\n    Olive: { hex: '808000', rgb: '128,128,0' },\n    OliveDrab: { hex: '6b8e23', rgb: '107,142,35' },\n    YellowGreen: { hex: '9acd32', rgb: '154,205,50' },\n    LimeGreen: { hex: '32cd32', rgb: '50,205,50' },\n    Lime: { hex: '00ff00', rgb: '0,255,0' },\n    LawnGreen: { hex: '7cfc00', rgb: '124,252,0' },\n    Chartreuse: { hex: '7fff00', rgb: '127,255,0' },\n    GreenYellow: { hex: 'adff2f', rgb: '173,255,47' },\n    SpringGreen: { hex: '00ff7f', rgb: '0,255,127' },\n    MediumSpringGreen: { hex: '00fa9a', rgb: '0,250,154' },\n    LightGreen: { hex: '90ee90', rgb: '144,238,144' },\n    PaleGreen: { hex: '98fb98', rgb: '152,251,152' },\n    DarkSeaGreen: { hex: '8fbc8f', rgb: '143,188,143' },\n    MediumSeaGreen: { hex: '3cb371', rgb: '60,179,113' },\n    SeaGreen: { hex: '2e8b57', rgb: '46,139,87' },\n    ForestGreen: { hex: '228b22', rgb: '34,139,34' },\n    Green: { hex: '008000', rgb: '0,128,0' },\n    DarkGreen: { hex: '006400', rgb: '0,100,0' },\n    MediumAquamarine: { hex: '66cdaa', rgb: '102,205,170' },\n    Aqua: { hex: '00ffff', rgb: '0,255,255' },\n    Cyan: { hex: '00ffff', rgb: '0,255,255' },\n    LightCyan: { hex: 'e0ffff', rgb: '224,255,255' },\n    PaleTurquoise: { hex: 'afeeee', rgb: '175,238,238' },\n    Aquamarine: { hex: '7fffd4', rgb: '127,255,212' },\n    Turquoise: { hex: '40e0d0', rgb: '64,224,208' },\n    MediumTurquoise: { hex: '48d1cc', rgb: '72,209,204' },\n    DarkTurquoise: { hex: '00ced1', rgb: '0,206,209' },\n    LightSeaGreen: { hex: '20b2aa', rgb: '32,178,170' },\n    CadetBlue: { hex: '5f9ea0', rgb: '95,158,160' },\n    DarkCyan: { hex: '008b8b', rgb: '0,139,139' },\n    Teal: { hex: '008080', rgb: '0,128,128' },\n    LightSteelBlue: { hex: 'b0c4de', rgb: '176,196,222' },\n    PowderBlue: { hex: 'b0e0e6', rgb: '176,224,230' },\n    LightBlue: { hex: 'add8e6', rgb: '173,216,230' },\n    SkyBlue: { hex: '87ceeb', rgb: '135,206,235' },\n    LightSkyBlue: { hex: '87cefa', rgb: '135,206,250' },\n    DeepSkyBlue: { hex: '00bfff', rgb: '0,191,255' },\n    DodgerBlue: { hex: '1e90ff', rgb: '30,144,255' },\n    CornflowerBlue: { hex: '6495ed', rgb: '100,149,237' },\n    SteelBlue: { hex: '4682b4', rgb: '70,130,180' },\n    RoyalBlue: { hex: '4169e1', rgb: '65,105,225' },\n    Blue: { hex: '0000ff', rgb: '0,0,255' },\n    MediumBlue: { hex: '0000cd', rgb: '0,0,205' },\n    DarkBlue: { hex: '00008b', rgb: '0,0,139' },\n    Navy: { hex: '000080', rgb: '0,0,128' },\n    MidnightBlue: { hex: '191970', rgb: '25,25,112' },\n    Lavender: { hex: 'e6e6fa', rgb: '230,230,250' },\n    Thistle: { hex: 'd8bfd8', rgb: '216,191,216' },\n    Plum: { hex: 'dda0dd', rgb: '221,160,221' },\n    Violet: { hex: 'ee82ee', rgb: '238,130,238' },\n    Orchid: { hex: 'da70d6', rgb: '218,112,214' },\n    Fuchsia: { hex: 'ff00ff', rgb: '255,0,255' },\n    Magenta: { hex: 'ff00ff', rgb: '255,0,255' },\n    MediumOrchid: { hex: 'ba55d3', rgb: '186,85,211' },\n    MediumPurple: { hex: '9370db', rgb: '147,112,219' },\n    BlueViolet: { hex: '8a2be2', rgb: '138,43,226' },\n    DarkViolet: { hex: '9400d3', rgb: '148,0,211' },\n    DarkOrchid: { hex: '9932cc', rgb: '153,50,204' },\n    DarkMagenta: { hex: '8b008b', rgb: '139,0,139' },\n    Purple: { hex: '800080', rgb: '128,0,128' },\n    Indigo: { hex: '4b0082', rgb: '75,0,130' },\n    DarkSlateBlue: { hex: '483d8b', rgb: '72,61,139' },\n    SlateBlue: { hex: '6a5acd', rgb: '106,90,205' },\n    MediumSlateBlue: { hex: '7b68ee', rgb: '123,104,238' },\n    White: { hex: 'ffffff', rgb: '255,255,255' },\n    Snow: { hex: 'fffafa', rgb: '255,250,250' },\n    Honeydew: { hex: 'f0fff0', rgb: '240,255,240' },\n    MintCream: { hex: 'f5fffa', rgb: '245,255,250' },\n    Azure: { hex: 'f0ffff', rgb: '240,255,255' },\n    AliceBlue: { hex: 'f0f8ff', rgb: '240,248,255' },\n    GhostWhite: { hex: 'f8f8ff', rgb: '248,248,255' },\n    WhiteSmoke: { hex: 'f5f5f5', rgb: '245,245,245' },\n    Seashell: { hex: 'fff5ee', rgb: '255,245,238' },\n    Beige: { hex: 'f5f5dc', rgb: '245,245,220' },\n    OldLace: { hex: 'fdf5e6', rgb: '253,245,230' },\n    FloralWhite: { hex: 'fffaf0', rgb: '255,250,240' },\n    Ivory: { hex: 'fffff0', rgb: '255,255,240' },\n    AntiqueWhite: { hex: 'faebd7', rgb: '250,235,215' },\n    Linen: { hex: 'faf0e6', rgb: '250,240,230' },\n    LavenderBlush: { hex: 'fff0f5', rgb: '255,240,245' },\n    MistyRose: { hex: 'ffe4e1', rgb: '255,228,225' },\n    Gainsboro: { hex: 'dcdcdc', rgb: '220,220,220' },\n    LightGray: { hex: 'd3d3d3', rgb: '211,211,211' },\n    Silver: { hex: 'c0c0c0', rgb: '192,192,192' },\n    DarkGrey: { hex: 'a9a9a9', rgb: '169,169,169' },\n    Grey: { hex: '808080', rgb: '128,128,128' },\n    DimGrey: { hex: '696969', rgb: '105,105,105' },\n    LightSlateGrey: { hex: '778899', rgb: '119,136,153' },\n    SlateGrey: { hex: '708090', rgb: '112,128,144' },\n    DarkSlateGrey: { hex: '2f4f4f', rgb: '47,79,79' },\n    Black: { hex: '000000', rgb: '0,0,0' }\n};\n","import {\n    LINEAR\n} from '../enums/constants';\n/**\n * Set of default colors\n */\nexport const palette = [\n    '#1f77b4',\n    '#ff7f0e',\n    '#2ca02c',\n    '#d62728',\n    '#9467bd',\n    '#8c564b',\n    '#e377c2',\n    '#7f7f7f',\n    '#bcbd22',\n    '#17becf'\n];\n\nexport const DEFAULT_GRADIENT_COLOR = '#eaeaea';\n\nexport const DEFAULT_CONFIG = {\n    range: palette,\n    value: palette[0],\n    step: false,\n    stops: 5,\n    type: LINEAR\n};\n","import { mergeRecursive, detectColor, hexToHsv, rgbToHsv, defaultValue } from 'muze-utils';\nimport { x11Colors } from './color-maps';\nimport { palette, DEFAULT_GRADIENT_COLOR } from './defaults';\nimport { LINEAR, RGB, HEX, HSL, HSLA } from '../enums/constants';\n\nexport const getHslString = hslArr => `hsla(${hslArr[0] * 360},${hslArr[1] * 100}%,${hslArr[2] * 100}%,\\\n${hslArr[3] || 1})`;\n\nexport const convertToXllString = baseString => (baseString.split(' ') || [])\n                .reduce((x, e) => `${x}${e.charAt(0).toUpperCase()}${e.slice(1)}`, '');\n\nexport const getActualHslColor = (e, paletteColor) => {\n    let color = '';\n    if (typeof e === 'string') {\n        e = e.replace(/ /g, '');\n        e = e.toLowerCase();\n        if (detectColor(e) === HSL || detectColor(e) === HSLA) {\n            color = e.match(/(\\d+(\\.\\d+)?)/g);\n            color = [color[0] / 360, color[1] / 100, color[2] / 100, defaultValue(Number(color[3]), 1)];\n        } else if (detectColor(e) === HEX) {\n            color = hexToHsv(e);\n        } else if (detectColor(e) === RGB) {\n            const col = e.substring(e.indexOf('(') + 1, e.lastIndexOf(')')).split(/,\\s*/);\n            color = rgbToHsv(...col);\n        } else if (x11Colors[convertToXllString(e)]) {\n            color = rgbToHsv(...x11Colors[convertToXllString(e)].rgb.split(','));\n        }\n    } else if (!(e instanceof Array)) {\n        color = rgbToHsv(paletteColor);\n    } else {\n        color = e;\n    }\n    return color;\n};\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => {\n            const defCon = mergeRecursive({}, context.constructor.defaultConfig());\n            if (config.type === LINEAR) {\n                config.range = config.range || [defCon.range[0]];\n                config.range = config.range.length > 1 ? config.range : [DEFAULT_GRADIENT_COLOR, ...config.range];\n            }\n            const oldConfig = mergeRecursive(defCon, context.config());\n            const newConfig = mergeRecursive(oldConfig, config);\n\n            if (newConfig.range instanceof Array) {\n                newConfig.range = newConfig.range.map((e, i) => getActualHslColor(e, palette[i]));\n                newConfig.stops = config.stops || newConfig.range.length;\n            }\n            newConfig.value = getActualHslColor(newConfig.value, newConfig.value);\n            return newConfig;\n        }\n    },\n    domain: {},\n    scale: {},\n    uniqueValues: {}\n};\n","import { InvalidAwareTypes, getObjProp } from 'muze-utils';\n\nexport const treatNullMeasures = (domainVal, scaledVal, minDomainScaledVal) => {\n    if (domainVal instanceof InvalidAwareTypes) {\n        return minDomainScaledVal;\n    }\n    return scaledVal;\n};\n\nexport const resolveAxisConfig = (propVal, defaultVal, context) => {\n    const constructor = getObjProp(propVal, 'constructor');\n    switch (constructor) {\n    case Function:\n        return propVal(defaultVal, context);\n    case Array:\n        return propVal;\n    default:\n        return defaultVal;\n    }\n};\n\nexport const sanitiseConfigIntervals = (intervals) => {\n    if (intervals) {\n        return intervals;\n    }\n    return 5;\n};\n","import { numberInterpolator, piecewiseInterpolator, hslInterpolator, sanitizeDomainWhenEqual } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, SEQUENTIAL, ORDINAL, QUANTILE } from '../enums/scale-type';\nimport { getHslString } from './props';\nimport { treatNullMeasures } from '../helper';\n\nconst getStops = (domain, stops) => {\n    let newStops = [];\n\n    if (stops instanceof Array) {\n        newStops = stops.slice().sort();\n        newStops = [...new Set([domain[0], ...stops, domain[1]])].sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i <= stops; i++) {\n            newStops[i] = interpolator(i / stops);\n        }\n    }\n\n    if (newStops[0] < domain[0]) {\n        newStops.shift();\n    }\n    return { domain, newStops };\n};\n\nconst rangeStops = (newStopsLength, range) => {\n    let newRange = [];\n    const maxRangeLength = Math.min(range.length, 18);\n\n    if (newStopsLength > maxRangeLength) {\n        const interpolator = piecewiseInterpolator()(hslInterpolator(), range.map(e => getHslString(e)));\n        for (let i = 0; i < newStopsLength; i++) {\n            newRange[i] = interpolator(i / (newStopsLength - 1));\n        }\n    } else {\n        newRange = range.slice(0, newStopsLength);\n    }\n    return { newRange };\n};\n\n/**\n*\n*\n* @param {*} domain\n*\n*/\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomainMeasure = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { domain, uniqueVals, scaleDomain: [0, 1], range };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain, nice: true, range };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} stops\n *\n */\nconst steppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, stops);\n    const { newRange } = rangeStops(newStops.length - 1, range);\n\n    return { uniqueVals, domain: newStops, nice: true, range: newRange };\n};\n\nconst continousSteppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(sanitizeDomainWhenEqual(domain), range.length - 1);\n    const hslRange = range.map(e => getHslString(e));\n    return { uniqueVals, domain: newStops, nice: true, range: hslRange };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst uniqueRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    return scale(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst indexedRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n\n    return treatNullMeasures(domainValue, scale(numVal), scale(0));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) => treatNullMeasures(domainValue, scale(domainValue),\n    scale(domain[0]));\n\n/**\n *\n *\n * @param {*} stops\n */\nconst strategies = () => ({\n    [`${CONTINOUS}-${CONTINOUS}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomain,\n        value: () => uniqueRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${ORDINAL}`]: {\n        scale: ORDINAL,\n        domainRange: () => normalDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}-${ORDINAL}`]: {\n        scale: LINEAR,\n        domainRange: () => continousSteppedDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${ORDINAL}`]: {\n        scale: QUANTILE,\n        domainRange: () => steppedDomain,\n        value: () => normalRange\n\n    }\n});\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} stops\n */\nexport const strategyGetter = (domainType, rangeType, schemeType) =>\n    strategies()[`${domainType}-${rangeType}-${schemeType || ''}`];\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters, rgbToHsv, defaultValue } from 'muze-utils';\nimport { createScale, getScheme, getSchemeType } from '../scale-creator';\nimport { CONTINOUS, DISCRETE, COLOR } from '../enums/constants';\nimport { strategyGetter } from './color-strategy';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { PROPS, getHslString, getActualHslColor } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ColorAxis {\n\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} config input parameters.\n    * @param {Object | undefined} params.range Type of color range.\n    * @param {string} params.name the label to show on axis.\n    * @param {string} params.type The type of scale to handle.\n    * @memberof ColorAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n        this.config(config);\n\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = (this._config.type === 'linear' && !this._config.step) ? CONTINOUS : DISCRETE;\n\n        this._schemeType = getSchemeType(this._config.range);\n\n        this._colorStrategy = this.setColorStrategy(this._domainType, this._rangeType, this._schemeType);\n        this._scale = this.createScale(this._colorStrategy);\n\n        this._id = getUniqueId();\n\n        this.updateDomain(config.domain);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return COLOR;\n    }\n\n    /**\n     *\n     *\n     * @param {*} colorStrategy\n     *\n     * @memberof ColorAxis\n     */\n    createScale (colorStrategy) {\n        const { range } = this.config();\n        if (range && typeof (range) === 'string') {\n            return getScheme(range);\n        }\n        return createScale({\n            type: colorStrategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setColorStrategy (domainType, rangeType, schemeType) {\n        return strategyGetter(domainType, rangeType, schemeType);\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getHslString (hslColorArray) {\n        return getHslString(hslColorArray);\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getColor (domainVal) {\n        return this.getHslString(this.getRawColor(domainVal));\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getRawColor (domainVal) {\n        if (this.domain() && domainVal !== undefined) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const color = this._colorStrategy.value(range)(domainVal, scale, this.domain(), this.uniqueValues());\n            if (color) {\n                if (typeof color === 'string') {\n                    const col = color.substring(color.indexOf('(') + 1, color.lastIndexOf(')')).split(/,\\s*/);\n                    return rgbToHsv(...col);\n                }\n                return [...color];\n            }\n        }\n        return [...this.config().value];\n    }\n\n    /**\n     *\n     *\n     * @param {*} [domain=[]]\n     *\n     * @memberof ColorAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const domainRangeFn = this._colorStrategy.domainRange();\n            const scaleInfo = domainRangeFn(domain, this.config().stops, range);\n\n            this.domain(scaleInfo.domain);\n            scaleInfo.range && this.scale().range(scaleInfo.range);\n            this.uniqueValues(scaleInfo.uniqueVals);\n            this.scale().domain(scaleInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            config: this.config()\n        };\n    }\n\n    transformColor (color, transformationArr) {\n        const h = color[0] * 360;\n        const s = color[1] * 100;\n        const l = color[2] * 100;\n        const a = Math.min(defaultValue(color[3], 0), 1);\n        const newH = h + transformationArr[0];\n        const newS = s + transformationArr[1];\n        const newL = l + transformationArr[2];\n        const newA = Math.min(a + transformationArr[3] || 0, 1);\n\n        return { color: `hsla(${newH},${newS}%,${newL}%,${newA})`, hsla: [newH / 360, newS / 100, newL / 100, newA] };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n\n    getHslArray (color) {\n        return getActualHslColor(color);\n    }\n\n}\n","export const DEFAULT_CONFIG = {\n    value: 51,\n    range: [51, 1000]\n};\n","import { numberInterpolator, piecewiseInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, THRESHOLD } from '../enums/scale-type';\nimport { treatNullMeasures } from '../helper';\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} intervals\n *\n */\nconst steppedDomain = (domain, intervals) => {\n    let newIntervals = [];\n    if (intervals instanceof Array) {\n        newIntervals = intervals.slice().sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i < intervals; i++) {\n            newIntervals[i] = interpolator(i / (intervals - 1));\n        }\n    }\n    if (newIntervals[0] < domain[0]) {\n        newIntervals.shift();\n    }\n    const retDomain = newIntervals;\n    return { uniqueVals: newIntervals, domain: retDomain, nice: true };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst discreteRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n    const interpolator = numberInterpolator()(...scale.range());\n    return treatNullMeasures(domainValue, interpolator(numVal), interpolator(domain[0]));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst pieceWiseRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    const fn = piecewiseInterpolator()(numberInterpolator(), [...scale.range()]);\n    return fn(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) =>\n    treatNullMeasures(domainValue, scale(domainValue), scale(domain[0]));\n\n/**\n *\n *\n * @param {*} intervals\n */\nconst strategies = {\n    [`${DISCRETE}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: indexedDomain,\n        range: pieceWiseRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: normalDomain,\n        range: normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}`]: {\n        scale: THRESHOLD,\n        domain: steppedDomain,\n        range: discreteRange\n    }\n};\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} intervals\n */\nexport const strategyGetter = (domainType, rangeType) =>\n     strategies[`${domainType}-${rangeType}`];\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => {\n            context._userRange = value.range;\n            return mergeRecursive(context._config || {}, value);\n        }\n    },\n    domain: {\n        sanitization: (context, value) => {\n            context.scale().domain(value);\n            return value;\n        }\n    },\n    range: {},\n    scale: {},\n    uniqueValues: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SIZE, CONTINOUS, DISCRETE } from '../enums/constants';\nimport { strategyGetter } from './size-strategy';\nimport { PROPS } from './props';\nimport { sanitiseConfigIntervals } from '../helper';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class SizeAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @param {Object} config input parameters.\n     * @memberof SizeAxis\n     */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this.config(this.constructor.defaultConfig());\n        this.config(config);\n        // @todo: Will use configuration override using scale decorator\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n\n        this._config.range = this._userRange ? this._userRange : this._config.range;\n\n        this._config.stops = sanitiseConfigIntervals(this._config.stops);\n        this._rangeType = this._config.type === 'linear' && !!this._config.stops ? DISCRETE : CONTINOUS;\n\n        this._sizeStrategy = this.setStrategy(this._domainType, this._rangeType);\n        this._scale = this.createScale(this._sizeStrategy);\n        this._range = this._config.range;\n\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setStrategy (domainType, rangeType) {\n        return strategyGetter(domainType, rangeType);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SizeAxis\n     */\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SIZE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof SizeAxis\n     */\n    getSize (domainVal = 0) {\n        let sizeVal = 1;\n        const {\n            value\n        } = this.config();\n        const scale = this.scale();\n        const domain = this.domain() || [1, 1];\n\n        if (!scale || domain[0] === domain[1]) {\n            sizeVal = value;\n        } else {\n            return this._sizeStrategy.range(domainVal, scale, this.domain(), this.uniqueValues());\n        }\n        return sizeVal;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof SizeAxis\n     */\n    updateDomain (domain) {\n        if (domain) {\n            const domainFn = this._sizeStrategy.domain;\n\n            const domainInfo = domainFn(domain, this.config().stops);\n\n            this.domain(domainInfo.domain);\n            this.uniqueValues(domainInfo.uniqueVals);\n\n            this.scale().domain(domainInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","export const DEFAULT_CONFIG = {\n    generator: null,\n    value: 'circle',\n    range: ['circle', 'diamond', 'star', 'cross', 'square', 'wye', 'triangle']\n};\n","export const PROPS = {\n    config: {},\n    domain: {},\n    scale: {},\n    uniqueValues: {},\n    generator: {}\n};\n\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, getSymbol, generateGetterSetters, mergeRecursive, InvalidAwareTypes } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SHAPE } from '../enums/constants';\nimport { shapeGenerator } from './helper';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ShapeAxis {\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} params input parameters.\n    * @param {Object | undefined} params.range Type of color scheme.\n    * @memberof ShapeAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(this._config, config);\n\n        this._scale = createScale({\n            type: 'ordinal',\n            range: this._config.range\n        });\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SHAPE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} value\n     *\n     * @memberof ShapeAxis\n     */\n    getShape (value) {\n        if (!this.scale() || !this.domain() || !value || value instanceof InvalidAwareTypes) {\n            return this.config().value;\n        }\n\n        if (this._generatedShapes) {\n            return this._generatedShapes[value];\n        }\n\n        const shapeType = this.scale()(value);\n        if (shapeType === 'string') {\n            return getSymbol(shapeType);\n        }\n\n        return shapeType;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof ShapeAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            this.uniqueValues(domain);\n            this.domain(domain);\n            this.scale().domain(domain);\n\n            if (this.config().generator) {\n                this._generatedShapes = shapeGenerator(domain, this.config().generator);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.config().range,\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","/**\n *\n *\n * @param {*} domain\n * @param {*} generatorFn\n *\n */\nexport const shapeGenerator = (domain, generatorFn) => {\n    const generatedShapes = {};\n    domain.forEach((value) => {\n        generatedShapes[value] = generatorFn(value);\n    });\n    return generatedShapes;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => mergeRecursive(context.config(), config),\n        preset: (context, config) => {\n            const { range, domain } = config;\n            range && context.range(range);\n            domain && context.domain(domain);\n        }\n    },\n    domain: {},\n    range: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, Symbols, mergeRecursive, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_ANGLE_DOMAIN } from '../enums/constants';\nimport { PROPS } from './props';\nimport { resolveAxisConfig } from '../helper';\n\nconst { pie } = Symbols;\n\nconst createAngleValues = (context) => {\n    const angleData = context._angleFn(context._domain);\n    angleData.forEach((v) => {\n        v.startAngle -= Math.PI / 2;\n        v.endAngle -= Math.PI / 2;\n    });\n    context._angleValues = angleData.reduce((values, d) => {\n        const key = d.data;\n        !values[key] && (values[key] = []);\n        values[key].push(d);\n        return values;\n    }, {});\n};\n\n/**\n* This class is used to instantiate a AngleAxis.\n* @class AngleAxis\n*/\nexport default class AngleAxis {\n\n    /**\n     * Creates an instance of AngleAxis.\n     * @param {Object} config input parameters.\n     * @memberof AngleAxis\n     */\n    constructor (config = {}) {\n        this._id = getUniqueId();\n        generateGetterSetters(this, PROPS);\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n        this.config(config);\n        this._range = [0, 360];\n        this._angleFn = pie()\n                .value(d => (typeof d === 'string' ? 1 : d))\n                .sortValues(null);\n        this._angleValues = {};\n    }\n\n    static defaultConfig () {\n        return {};\n    }\n\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    getScaleValue (domainVal) {\n        return this._angleValues[domainVal];\n    }\n\n    padAngle (angle) {\n        this._angleFn = this._angleFn.padAngle(angle);\n    }\n\n    domain (...domainVal) {\n        if (domainVal.length) {\n            const { domain: customDomain } = this.config();\n            const domain = domainVal[0].length ? domainVal[0] : DEFAULT_ANGLE_DOMAIN;\n            this._domain = resolveAxisConfig(customDomain, domain, this);\n            createAngleValues(this);\n            return this;\n        }\n        return this._domain;\n    }\n\n    range (...range) {\n        if (range.length) {\n            const { range: customRange } = this.config();\n            this._range = resolveAxisConfig(customRange, range[0], this);\n            const domain = this.domain();\n            const [startAngle, endAngle] = this._range;\n            this._angleFn\n                    .startAngle((startAngle / 180) * Math.PI)\n                    .endAngle(Math.PI * endAngle / 180);\n            if (domain && domain.length) {\n                createAngleValues(this);\n            }\n            return this;\n        }\n        return this._range;\n    }\n}\n","/**\n * This file exports constants that are used as enums in the\n *  crosstab group implementation.\n */\n/**\n * Width of the crosstab.\n */\nexport const X = 'x';\n/**\n * Width of the crosstab.\n */\nexport const Y = 'y';\n/**\n * Width of the crosstab.\n */\nexport const WIDTH = 'width';\n\n/**\n * Height of the crosstab.\n */\nexport const HEIGHT = 'height';\n\n/**\n * Field referring to object storing measurement configuration.\n */\nexport const MEASUREMENT = 'measurement';\n\n/**\n * Field referring to object storing configuration properties.\n */\nexport const CONFIG = 'config';\n\n/**\n * Width of visual unit in crosstab.\n */\nexport const MIN_UNIT_WIDTH = 'minUnitWidth';\n\n/**\n * Height of visual unit.\n */\nexport const MIN_UNIT_HEIGHT = 'minUnitHeight';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSIONS = 'dimensions';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURES = 'measures';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSION = 'dimension';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURE = 'measure';\n\n/**\n * Flag to specify if model should be pivoted.\n */\nexport const PIVOT = 'pivot';\n\n/**\n * Flag to specify format\n */\nexport const FORMAT = 'format';\n\n/**\n * Mount point where the variable will be hosted\n */\nexport const MOUNT = 'mount';\n\n/**\n * Data update flag\n */\nexport const HAS_DATA_UPDATED = 'hasDataUpdated';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROWS = 'rows';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMNS = 'columns';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COL = 'col';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROW = 'row';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMN = 'column';\n\n/**\n * Field referring to object storing color field\n */\nexport const COLOR = 'color';\n\n/**\n * Field referring to object storing shape field\n */\nexport const SHAPE = 'shape';\n\n/**\n * Field referring to object storing size field\n */\nexport const SIZE = 'size';\n\n/**\n * Field referring to object storing detail field\n */\nexport const DETAIL = 'detail';\n\n/**\n * Field referring to object storing set of layers\n */\nexport const LAYERS = 'layers';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const TRANSFORM = 'transform';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const ORDINAL = 'ordinal';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const LINEAR = 'linear';\n/**\n * Field referring to object storing the transforms\n */\nexport const LEFT = 'left';\n/**\n * Field referring to object storing the transforms\n */\nexport const RIGHT = 'right';\n/**\n * Field referring to object storing the transforms\n */\nexport const TOP = 'top';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTTOM = 'bottom';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const RETINAL = 'retinal';\n/**\n * Field referring to object storing the transforms\n */\nexport const CELL = 'cell';\n/**\n * Field referring to object storing the transforms\n */\nexport const X_AXES = 'xAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const Y_AXES = 'yAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const ENTRY_CELLS = 'entryCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const INITIALIZED = 'initialized';\n/**\n * Field referring to object storing the transforms\n */\nexport const EXIT_CELLS = 'exitCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const AXIS = 'axis';\n/**\n * Field referring to object storing the transforms\n */\nexport const UNIT = 'unit';\n/**\n * Field referring to object storing the transforms\n */\nexport const UPDATED = 'updated';\n/**\n * Field referring to object storing the transforms\n */\nexport const BEFORE_UPDATE = 'beforeupdate';\n/**\n * Field referring to object storing the transforms\n */\nexport const VALUE_MATRIX = 'valueMatrix';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET_HEADERS = 'facet-headers';\n/**\n * Field referring to object storing the transforms\n */\nexport const RADIUS = 'radius';\n/**\n * Field referring to object storing the transforms\n */\nexport const ANGLE = 'angle';\n\nexport const ANGLE0 = 'angle0';\n/**\n * Field referring to object storing the transforms\n */\nexport const ARC = 'arc';\n/**\n * Field referring to object storing the transforms\n */\nexport const CATEGORICAL = 'categorical';\n/**\n * Field referring to object storing the transforms\n */\nexport const TEMPORAL = 'temporal';\n/**\n * Field referring to object storing the transforms\n */\nexport const BAR = 'bar';\n/**\n * Field referring to object storing the transforms\n */\nexport const LINE = 'line';\n/**\n * Field referring to object storing the transforms\n */\nexport const POINT = 'point';\n/**\n * Field referring to object storing the transforms\n */\nexport const PRIMARY = 'Primary';\n/**\n * Field referring to object storing the transforms\n */\nexport const SECONDARY = 'Secondary';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTH = 'both';\n/**\n * Field referring to object storing the transforms\n */\nexport const INTERACTION = 'interaction';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_LINES = 'gridLines';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_BANDS = 'gridBands';\n/**\n * Field referring to object storing the transforms\n */\nexport const HEADER = 'header';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET = 'facet';\n/**\n * Ordering type\n */\nexport const ASCENDING = 'asc';\n/**\n * Ordering type\n */\nexport const DESCENDING = 'desc';\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, mergeRecursive, generateGetterSetters, sanitizeDomainWhenEqual } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { LINEAR } from '../../../visual-group/src/enums/constants';\nimport { PROPS } from './props';\nimport { resolveAxisConfig } from '../helper';\n\nconst adjustDomain = (context) => {\n    const minOuterRadius = context.config().minOuterRadius;\n    const domain = context._domain;\n    if (context._range.length) {\n        const scale = context._scale;\n        const value = scale.invert(minOuterRadius) - scale.invert(0);\n        context._domain = [domain[0] - value, domain[1]];\n        scale.domain(context._domain);\n    }\n};\n\n/**\n* This class is used to instantiate a RadiusAxis.\n* @class RadiusAxis\n*/\nexport default class RadiusAxis {\n\n    /**\n     * Creates an instance of RadiusAxis.\n     * @param {Object} config input parameters.\n     * @memberof RadiusAxis\n     */\n    constructor (config = {}) {\n        this._id = getUniqueId();\n        generateGetterSetters(this, PROPS);\n        this._range = [];\n        this._radiusFactor = 1;\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n        this.config(config);\n        this._scale = this.createScale({\n            scale: LINEAR\n        });\n    }\n\n    static defaultConfig () {\n        return {\n            padding: [0, 1],\n            minOuterRadius: 10\n        };\n    }\n\n    config (...params) {\n        if (params.length) {\n            const config = mergeRecursive(this.config(), params[0]);\n            this._config = config;\n            return this;\n        }\n        return this._config;\n    }\n\n    createScale (strategy) {\n        return createScale({\n            type: strategy.scale,\n            range: this.range()\n        });\n    }\n\n    domain (...domainVal) {\n        if (domainVal.length) {\n            const { domain: customDomain } = this.config();\n            let domain = resolveAxisConfig(customDomain, domainVal[0], this);\n            domain = sanitizeDomainWhenEqual(domain);\n            this._scale.domain(domain);\n            this._domain = domain;\n            adjustDomain(this);\n        }\n        return this._domain;\n    }\n\n    getInnerRadius (domainVal) {\n        if (domainVal === undefined) {\n            return this.range()[0];\n        }\n        return this._scale(domainVal);\n    }\n\n    getOuterRadius (domainVal) {\n        if (domainVal === undefined) {\n            return this.range()[1];\n        }\n        const radius = this._scale(domainVal) * this._radiusFactor;\n        return radius;\n    }\n\n    range (...range) {\n        if (range.length) {\n            const { padding, range: customRange } = this.config();\n            const sanitizedRange = range[0].map((v, i) => v + (i ? -padding[i] : padding[i]));\n            const rangeVal = resolveAxisConfig(customRange, sanitizedRange, this);\n            this._range = rangeVal;\n            this._scale.range(rangeVal);\n            adjustDomain(this);\n        }\n        return this._range;\n    }\n\n    setRadiusFactor (val) {\n        this._radiusFactor = val;\n        return this;\n    }\n}\n","import * as ScaleType from './enums/scale-type';\n\nconst DATA_TYPES = {\n    DIMENSION: 'dimension',\n    CATEGORICAL: 'categorical',\n    MEASURE: 'measure',\n    TEMPORAL: 'temporal'\n};\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    [DATA_TYPES.DIMENSION]: ScaleType.BAND,\n    [DATA_TYPES.MEASURE]: ScaleType.LINEAR,\n    [DATA_TYPES.TEMPORAL]: ScaleType.TIME\n};\n\n","import { nestCollection, InvalidAwareTypes } from 'muze-utils';\n\n/**\n * Create multiple datasets from a single dataset by grouping the data using\n * a dimensional field.\n * @param {Array} schema Name and type of fields are stored in schema\n * @param {Array} data Data array\n * @param {Object} config Configuration object\n * @return {Array} Grouped data array\n */\nexport default (schema, data, config) => {\n    const groupBy = config.groupBy instanceof Array ? config.groupBy : [config.groupBy];\n    const groupByIndices = groupBy.map(fieldName => schema.findIndex(d => d.name === fieldName));\n\n    if (groupByIndices.find(d => d === -1) !== undefined) {\n        throw new Error(`Groupby field ${groupBy} not found in schema`);\n    }\n\n    const groupedData = nestCollection({\n        keys: groupByIndices,\n        data\n    });\n\n    groupedData.forEach((d) => {\n        const key = d.key;\n        if (InvalidAwareTypes.isInvalid(key)) {\n            d.key = InvalidAwareTypes.getInvalidType(key);\n        }\n    });\n    return groupedData;\n};\n","/**\n * @module Transform\n * This file exports a function that is used to implement\n * the identity transform\n */\n /* eslint no-unused-vars: 0 */\n /**\n  * This function accepts data and returns the data unchanged.\n  * @param {Object} schema The schema.\n  * @param {Array} data The data array.\n  * @param {Object} config The config object.\n  * @return {Array} The unchanged data.\n  */\n function identityTransform (schema, data, config) {\n     return data;\n }\n\n export default identityTransform;\n","/**\n * @module Transform\n * This file exports the transform factory.\n */\nimport * as TransformType from '../enums/transform-type';\nimport identity from '../identity-transform';\nimport group from '../group-transform';\nimport stack from '../stack-transform';\n\n/* istanbul ignore next */\nconst transformMap = {\n    [TransformType.IDENTITY]: identity,\n    [TransformType.GROUP]: group,\n    [TransformType.STACK]: stack\n};\n\n/**\n * This function is used to retirn a transform associated\n * with the given type.\n *\n * @param {string} type The type of the transform.\n * @return {Function} The transform function.\n */\nfunction transformFactory (type) {\n    const transform = transformMap[type];\n    if (typeof transform !== 'function') {\n        throw new Error('Invalid transform type supplied.');\n    }\n    return transform;\n}\n\nexport default transformFactory;\n","/**\n * @module Transform\n * This module exports constants that are used to reference transforms in\n * a consistent manner throughout the project.\n */\n/* eslint one-var: 0 */\n export const IDENTITY = 'identity';\n export const GROUP = 'group';\n export const STACK = 'stack';\n export const FRACTURE = 'fracture';\n","import { stack } from 'muze-utils';\n\nimport group from '../group-transform';\n/*\n    Normalize the data to a form which can be given to d3 stack for stacking the data\n    ['Product', 'Sales', 'Region'],\n    0 ['A', 2000, 'North'],\n    1 ['A', 3000, 'South'],\n    2 ['B', 3000, 'South'],\n    3 ['B', 2000, 'North'],\n    4 ['C', 3000, 'South'],\n    5 ['C', 2000, 'North']\n            |\n            |\n    ['Product', 'North', 'South'],\n    ['A', 2000, 3000],\n    ['B', 2000, 3000],\n    ['C', 2000, 3000]\n*/\n// eslint-disable-next-line require-jsdoc\nconst normalizeData = (data, schema, valueField, uniqueField, groupBy) => {\n    const groupedData = group(schema, data, {\n        groupBy: uniqueField\n    });\n    const uniqueFieldIndex = schema.findIndex(d => d.name === uniqueField);\n    const valueFieldIndex = schema.findIndex(d => d.name === valueField);\n    const seriesKeyIndex = schema.findIndex(d => d.name === groupBy);\n    const seriesKeys = data.map(d => d[seriesKeyIndex]).filter((item, pos, arr) => arr.indexOf(item) === pos).sort();\n    const fieldNames = schema.reduce((acc, obj, i) => {\n        acc[i] = obj.name;\n        return acc;\n    }, {});\n    const dataArr = groupedData.map((arr) => {\n        const tuples = {};\n        const rowObj = arr.values.reduce((acc, row) => {\n            acc = row.reduce((obj, value, i) => {\n                if (i === seriesKeyIndex) {\n                    obj[value] = row[valueFieldIndex];\n                    tuples[value] = row;\n                } else if (i !== valueFieldIndex) {\n                    obj[fieldNames[i]] = value;\n                }\n                return obj;\n            }, acc);\n            return acc;\n        }, {});\n        rowObj._tuple = tuples;\n            // Set missing values field to zero value\n        seriesKeys.forEach((seriesKey) => {\n            if (rowObj[seriesKey] === undefined) {\n                rowObj[seriesKey] = 0;\n                const newArr = new Array(arr.values[0].length);\n                newArr[uniqueFieldIndex] = arr.key;\n                newArr[seriesKeyIndex] = seriesKey;\n                rowObj._tuple[seriesKey] = newArr;\n            }\n        });\n        return rowObj;\n    });\n\n    return {\n        data: dataArr,\n        keys: seriesKeys\n    };\n};\n/**\n * Generate a stacked representation of data\n * @param {Array} schema schema Array\n * @param {Array} data data array\n * @param {Object} config Configuration object\n * @return {Array} stacked data\n */\nexport default (schema, data, config) => {\n    const uniqueField = config.uniqueField;\n    const valueField = config.value;\n    const groupBy = config.groupBy;\n    const sort = config.sort || 'descending';\n    const normalizedData = normalizeData(data, schema, valueField, uniqueField, groupBy);\n    const keys = normalizedData.keys;\n    const map = {};\n    const orderBy = config.orderBy;\n    const orderIndex = schema.findIndex(d => d.name === orderBy);\n    const groupByIndex = schema.findIndex(d => d.name === groupBy);\n    if (orderIndex !== -1) {\n        keys.forEach((key) => {\n            const name = data.find(d => d[groupByIndex] === key);\n            map[key] = name[orderIndex];\n        });\n        normalizedData.keys.sort((a, b) => map[a].localeCompare(map[b]));\n    }\n\n    const stackData = stack({\n        keys: normalizedData.keys,\n        offset: config.offset || 'diverging',\n        order: sort,\n        data: normalizedData.data\n    });\n    stackData.forEach((seriesData) => {\n        seriesData.forEach((dataObj) => {\n            dataObj.data = dataObj.data._tuple[seriesData.key];\n        });\n    });\n    return stackData;\n};\n\n","import {\n    FieldType,\n    getDomainFromData,\n    setStyles,\n    easeFns,\n    selectElement,\n    DimensionSubtype,\n    retrieveNearestGroupByReducers,\n    getObjProp,\n    COORD_TYPES,\n    CommonProps,\n    defaultValue,\n    hslaToRgb\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { transformFactory } from '@chartshq/transform';\nimport { IDENTITY, STACK, GROUP, COLOR, SHAPE, SIZE, ENCODING, AGG_FN_SUM, ASCENDING, TEXT } from '../enums/constants';\n\nconst BAND = ScaleType.BAND;\nconst { POLAR, CARTESIAN } = COORD_TYPES;\n\nexport const transformColor = (colorAxis, datum, styleType, intensity) => {\n    const meta = datum.meta;\n    const stateColor = defaultValue(meta.stateColor[styleType], meta.originalColor[styleType]);\n    const colorInfo = colorAxis.transformColor(stateColor, intensity);\n\n    meta.stateColor[styleType] = colorInfo.hsla;\n    return colorInfo;\n};\n\nexport const applyInteractionStyle = (context, selectionSet, interactionStyles, config) => {\n    const elements = context.getPlotElementsFromSet(selectionSet);\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const apply = config.apply;\n    const interactionType = config.interactionType;\n\n    interactionStyles.forEach((style) => {\n        const styleType = style.type;\n        elements.forEach((elem) => {\n            const pathMountPoint = selectElement(context.mount()).select('.muze-overlay-paths').node();\n\n            const isSpecificInteraction = context.applySpecificStyle(styleType, {\n                elem,\n                apply,\n                interactionType,\n                style,\n                mountPoint: pathMountPoint,\n                colorAxis\n            });\n\n            if (!isSpecificInteraction) {\n                // Common style for all the layers\n                elem.style(styleType, ((d, i) => {\n                    // d = d.data[i] || d;\n                    d = Array.isArray(d.data) ? d.data[i] : d;\n\n                    const { colorTransform, stateColor, originalColor } = d.meta;\n                    colorTransform[interactionType] = colorTransform[interactionType] || {};\n                    let h;\n                    let s;\n                    let l;\n                    let a;\n\n                    if (apply && !colorTransform[interactionType][styleType]) {\n                        // fade selections\n                        colorTransform[interactionType][styleType] = style.intensity;\n                        [h, s, l, a] = transformColor(colorAxis, d, styleType, style.intensity).hsla;\n                    } else if (!apply && colorTransform[interactionType][styleType]) {\n                        // unfade selections\n                        colorTransform[interactionType][styleType] = null;\n                        [h, s, l, a] = transformColor(colorAxis, d, styleType, style.intensity.map(e => -e)).hsla;\n                    } else {\n                        [h, s, l, a] = stateColor[styleType] ? stateColor[styleType] : originalColor[styleType];\n                    }\n                    return hslaToRgb(h, s, l, a);\n                }));\n            }\n        });\n    });\n};\n\nexport const retrieveEncodingInf = (encoding, fieldsConfig, encodingNames) => {\n    const encodingInf = {};\n\n    encodingNames\n        .forEach((e) => {\n            const field = getObjProp(encoding, e, 'field');\n            encodingInf[`${e}Field`] = field;\n            encodingInf[`${e}FieldIndex`] = getObjProp(fieldsConfig, field, 'index');\n            encodingInf[`${e}FieldType`] = getObjProp(fieldsConfig, field, 'def', 'type');\n            encodingInf[`${e}FieldSubType`] = getObjProp(fieldsConfig, field, 'def', 'subtype');\n        });\n    return encodingInf;\n};\n\nexport const encodingFieldInfRetriever = {\n    [POLAR]: (encoding, fieldsConfig) => {\n        const fields = [ENCODING.RADIUS, ENCODING.RADIUS0, ENCODING.ANGLE, ENCODING.ANGLE0, COLOR, SHAPE, SIZE, TEXT];\n        return retrieveEncodingInf(encoding, fieldsConfig, fields);\n    },\n    [CARTESIAN]: (encoding, fieldsConfig) => {\n        const fields = [ENCODING.X, ENCODING.Y, ENCODING.X0, ENCODING.Y0, COLOR, SHAPE, SIZE, TEXT];\n        return retrieveEncodingInf(encoding, fieldsConfig, fields);\n    }\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} config\n * @param {*} transformType\n *\n */\nexport const transformData = (dataModel, config, transformType, encodingFieldInf) => {\n    const data = dataModel.getData({ withUid: true });\n    const schema = data.schema;\n    const transform = config.transform;\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = encodingFieldInf;\n    const uniqueField = xFieldType === FieldType.MEASURE ? yField : xField;\n\n    return transformFactory(transformType)(schema, data.data, {\n        groupBy: transform.groupBy,\n        uniqueField,\n        sort: transform.sort || 'none',\n        offset: transform.offset,\n        orderBy: transform.orderBy,\n        value: yFieldType === FieldType.MEASURE ? yField : xField\n    }, data.uids);\n};\n\nexport const getIndividualClassName = (d, i, data, context) => {\n    const className = context.config().individualClassName;\n    let classNameStr = '';\n    if (className instanceof Function) {\n        classNameStr = className(d, i, data, context);\n    }\n    return classNameStr;\n};\n\nexport const dataNormalizers = {\n    [POLAR]: (transformedData, encodingFieldInf, fieldsConfig) => {\n        const {\n            radiusFieldIndex,\n            angleFieldIndex,\n            radius0FieldIndex,\n            angle0FieldIndex\n        } = encodingFieldInf;\n        const fieldsLen = Object.keys(fieldsConfig).length;\n\n        /**\n         * Returns normalized data from transformed data. It recursively traverses through\n         * the transformed data if there it is nested.\n         */\n        return transformedData.map(data => data.map((d) => {\n            const pointObj = {\n                radius: d[radiusFieldIndex],\n                angle: angleFieldIndex !== undefined ? d[angleFieldIndex] : 1,\n                radius0: d[radius0FieldIndex],\n                angle0: d[angle0FieldIndex]\n            };\n            [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                pointObj[enc] = d[encodingFieldInf[`${enc}FieldIndex`]];\n            });\n            pointObj.source = d;\n            pointObj.rowId = d[fieldsLen];\n            return pointObj;\n        })).filter(d => d.length);\n    },\n    [CARTESIAN]: (transformedData, encodingFieldInf, fieldsConfig, transformType) => {\n        const {\n            xFieldType,\n            xFieldIndex,\n            yFieldIndex,\n            x0FieldIndex,\n            y0FieldIndex\n        } = encodingFieldInf;\n        const fieldsLen = Object.keys(fieldsConfig).length;\n        /**\n         * Returns normalized data from transformed data. It recursively traverses through\n         * the transformed data if there it is nested.\n         */\n        return transformedData.map((data) => {\n            const values = transformType === GROUP ? data.values : data;\n            return values.map((d) => {\n                let pointObj = {};\n                let tuple;\n                if (transformType === STACK) {\n                    tuple = d.data || [];\n                    let y;\n                    let y0;\n                    let x;\n                    let x0;\n                    if (d[1] >= d[0]) {\n                        y = x0 = d[1];\n                        x = y0 = d[0];\n                    } else {\n                        y = x0 = d[0];\n                        x = y0 = d[1];\n                    }\n\n                    pointObj = xFieldType === FieldType.MEASURE ? {\n                        x,\n                        x0,\n                        y: tuple[yFieldIndex],\n                        y0: tuple[yFieldIndex]\n                    } : {\n                        x: tuple[xFieldIndex],\n                        x0: tuple[xFieldIndex],\n                        y,\n                        y0\n                    };\n                    pointObj.source = tuple;\n                    pointObj.rowId = tuple[fieldsLen];\n                    [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                        pointObj[enc] = tuple[encodingFieldInf[`${enc}FieldIndex`]];\n                    });\n                } else {\n                    pointObj = {\n                        x: d[xFieldIndex],\n                        y: d[yFieldIndex],\n                        x0: d[x0FieldIndex],\n                        y0: d[y0FieldIndex]\n                    };\n                    pointObj.source = d;\n                    pointObj.rowId = d[fieldsLen];\n                    [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                        pointObj[enc] = d[encodingFieldInf[`${enc}FieldIndex`]];\n                    });\n                }\n                return pointObj;\n            });\n        }).filter(d => d.length);\n    }\n};\n/*\n * This method resolves the x, y, x0 and y0 values from the transformed data.\n * It also checks the type of transformed data for example, if it is a stacked data\n * then it fetches the y and y0 values from the stacked data.\n * @param {Array.<Array>} transformedData transformed data\n * @param {Object} fieldsConfig field definitions\n * @param {string} transformType type of transformed data - stack, group or identity.\n * @return {Array.<Object>} Normalized data\n*/\nexport const getNormalizedData = (transformedData, context) => {\n    const transformType = context.transformType();\n    const transformedDataArr = transformType === IDENTITY ? [transformedData] : transformedData;\n    const encodingFieldInf = context.encodingFieldsInf();\n    const fieldsConfig = context.data().getFieldsConfig();\n    return dataNormalizers[context.coord()](transformedDataArr, encodingFieldInf, fieldsConfig, transformType);\n};\n\nexport const domainCalculator = {\n    [POLAR]: (data, layerInst) => {\n        const config = layerInst.config();\n        const { sort } = config;\n        let angleValues = data[0];\n        const radius0Field = getObjProp(config.encoding.radius0, 'field');\n        if (sort) {\n            angleValues = angleValues.sort((a, b) => (sort === ASCENDING ? a.radius - b.radius : b.radius - a.radius));\n        }\n        const radiusDomain = getDomainFromData(data, [ENCODING.RADIUS, radius0Field ?\n            ENCODING.RADIUS0 : ENCODING.RADIUS]);\n        return {\n            radius: radiusDomain,\n            angle: angleValues.map(d => d.angle),\n            angle0: angleValues.map(d => d.angle0)\n        };\n    },\n    [CARTESIAN]: (data, layerInst) => {\n        const transformType = layerInst.transformType();\n        const encodingFieldInf = layerInst.encodingFieldsInf();\n        const {\n            xFieldSubType,\n            yFieldSubType,\n            xField,\n            yField,\n            x0Field,\n            y0Field\n        } = encodingFieldInf;\n        const domains = {};\n        const yEnc = ENCODING.Y;\n        const xEnc = ENCODING.X;\n        if (xField) {\n            domains.x = getDomainFromData(data, x0Field || transformType === STACK ? [xEnc, ENCODING.X0] : [xEnc, xEnc],\n                xFieldSubType);\n        }\n        if (yField) {\n            domains.y = getDomainFromData(data, y0Field || transformType === STACK ? [ENCODING.Y0, ENCODING.Y] :\n                [yEnc, yEnc], yFieldSubType);\n        }\n\n        return domains;\n    }\n};\n\nexport const attachDataToVoronoi = (voronoi, points) => {\n    voronoi.data([].concat(...points).filter(d => d.rowId !== undefined).map((d) => {\n        const point = d.update;\n        return {\n            x: point.x,\n            y: point.y,\n            data: d\n        };\n    }));\n};\n\n/**\n *\n *\n * @param {*} target\n * @param {*} styles\n * @param {*} remove\n */\nexport const updateStyle = (target, styles, remove) => {\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            target.style(key, remove ? null : styles[key]);\n        }\n    }\n};\n\n/**\n *\n *\n * @param {*} mount\n * @param {*} context\n */\nexport const animateGroup = (mount, context) => {\n    let groupTransition;\n    let update;\n    const { transition, groupAnimateStyle } = context;\n    const { duration, effect, disabled } = transition;\n    if (groupAnimateStyle) {\n        setStyles(mount.node(), groupAnimateStyle.enter);\n        update = groupAnimateStyle.update;\n        if (!disabled) {\n            groupTransition = mount.transition()\n                .ease(easeFns[effect])\n                .duration(duration)\n                .on('end', function () {\n                    updateStyle(selectElement(this), update, true);\n                });\n        } else {\n            groupTransition = mount;\n        }\n        updateStyle(groupTransition, update);\n    }\n};\n\nexport const positionPoints = (context, points) => {\n    const positioner = context.encodingTransform();\n    if (positioner) {\n        return positioner(points, context, { smartLabel: context._dependencies.smartLabel });\n    }\n    return points;\n};\n\n/**\n  * Gets the width of each group. It gets the width from axis if it is available for\n  * example when the scale is nominal else it calculates the width from the\n  * range of the axis and number of data points.\n  *\n  * @param {SimpleAxis} axis instance of axis\n  * @param {number} minDiff Minimum difference between data points\n  * @return {number} width of each bar\n  * @private\n*/\nexport const getGroupSpan = (axis, minDiff) => {\n    let groupSpan;\n    const width = axis.getUnitWidth();\n    const scale = axis.scale();\n    const range = scale.range();\n    const domain = scale.domain();\n    !width ? groupSpan = (Math.abs(range[1] - range[0]) / Math.abs(domain[1] - domain[0])) * minDiff :\n        (groupSpan = width);\n\n    return groupSpan;\n};\n\nexport const getPlotMeasurement = (context, dimensionalValues) => {\n    const fieldInfo = context.encodingFieldsInf();\n    const axes = context.axes();\n    const transformType = context.transformType();\n    const config = context.config();\n    const bandScale = context._bandScale;\n\n    return ['x', 'y'].map((type) => {\n        let span = 0;\n        let groupSpan = 0;\n        let padding = 0;\n        let offsetValues = [];\n        if (fieldInfo[`${type}FieldType`] === FieldType.DIMENSION) {\n            let actualGroupWidth;\n            const isTemporal = fieldInfo[`${type}FieldSubType`] === DimensionSubtype.TEMPORAL;\n            const timeDiff = isTemporal ? context.dataProps().timeDiffs[type] : 0;\n            const axis = axes[type];\n            const pad = config[`pad${type.toUpperCase()}`];\n            const innerPadding = config.innerPadding;\n            const keys = dimensionalValues;\n            const scale = axis.scale();\n            groupSpan = getGroupSpan(axis, timeDiff);\n            const isAxisBandScale = axis.constructor.type() === BAND;\n            const axisPadding = axis.config().padding;\n            // If it is a grouped bar then the width of each bar in a grouping is retrieved from\n            // a band scale. The band scale will have range equal to width of one group of bars and\n            // the domain is set to series keys.\n            if (transformType === 'group') {\n                const groupPadding = isAxisBandScale ? 0 : axisPadding * groupSpan / 2;\n                bandScale.range([groupPadding, groupSpan - groupPadding]).domain(keys).paddingInner(innerPadding);\n                span = bandScale.bandwidth();\n                actualGroupWidth = groupSpan - (isAxisBandScale ? 0 : axisPadding * groupSpan);\n                offsetValues = keys.map(key => bandScale(key) - (isAxisBandScale ? 0 : (groupSpan / 2)));\n            } else if (pad !== undefined) {\n                let offset;\n                if (isAxisBandScale) {\n                    const step = scale.step();\n                    offset = scale.padding() * step;\n                    span = scale.bandwidth() + offset;\n                } else {\n                    span = groupSpan;\n                }\n                offsetValues = keys.map(() => (isAxisBandScale ? -(offset / 2) : -(span / 2)));\n            } else {\n                padding = isAxisBandScale ? 0 : axisPadding * groupSpan;\n                span = groupSpan - padding;\n                actualGroupWidth = span;\n                offsetValues = keys.map(() => (isAxisBandScale ? 0 : -(span / 2)));\n            }\n\n            groupSpan = actualGroupWidth;\n            padding = isAxisBandScale ? axisPadding * axis.scale().step() : axisPadding * groupSpan;\n        }\n\n        return {\n            span,\n            offsetValues,\n            groupSpan,\n            padding\n        };\n    });\n};\n\nexport const renderLayer = (context) => {\n    const mount = context.mount();\n    if (mount) {\n        context.render(mount);\n        context.dependencies().throwback.commit(CommonProps.ON_LAYER_DRAW, true, context.metaInf().parentNamespace);\n    }\n};\n\nconst transformResolverPredicates = (encodingFieldInf, context, groupByField) => {\n    const fieldsConfig = context.data().getFieldsConfig();\n    const { xField, yField, xFieldType, yFieldType } = encodingFieldInf;\n    const dimensionField = ['xField', 'yField'].find(type =>\n        encodingFieldInf[`${type}Type`] === FieldType.DIMENSION);\n\n    return [\n        !xField,\n        !yField,\n        !groupByField,\n        getObjProp(fieldsConfig[groupByField], 'def', 'type') === FieldType.MEASURE,\n        xFieldType === FieldType.DIMENSION && yFieldType === FieldType.DIMENSION,\n        dimensionField && encodingFieldInf[dimensionField] === groupByField\n    ];\n};\n\nexport const resolveInvalidTransformType = (context) => {\n    const encodingFieldInf = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n\n    if (transformResolverPredicates(encodingFieldInf, context, groupByField).some(value => value)) {\n        return IDENTITY;\n    }\n    return null;\n};\n\nexport const getValidTransform = context => resolveInvalidTransformType(context) || context.config().transform.type;\n\nexport const getValidTransformForAggFn = (context) => {\n    const resolvedInvalidTransformType = resolveInvalidTransformType(context);\n    if (resolvedInvalidTransformType) {\n        return resolvedInvalidTransformType;\n    }\n\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n    const isCustomTransformTypeProvided = !!getObjProp(context._customConfig, 'transform', 'type');\n    let transformType = context.config().transform.type;\n\n    if (!isCustomTransformTypeProvided && groupByField && xFieldType !== yFieldType) {\n        const measureField = xFieldType === FieldType.MEASURE ? xField : yField;\n        const { [measureField]: aggFn } = retrieveNearestGroupByReducers(context.data(), measureField);\n        transformType = aggFn === AGG_FN_SUM ? STACK : GROUP;\n    }\n\n    return transformType;\n};\n\nexport const getMarkId = (source, schema) => source.filter((val, i) => schema[i] &&\n    schema[i].type === FieldType.DIMENSION).join();\n\nexport const resolveEncodingValues = (data, i, dataArr, layerInst) => {\n    const transformedValues = {};\n    const values = data.values;\n    const encoding = layerInst.config().encoding;\n    for (const key in values) {\n        const value = getObjProp(encoding[key], 'value');\n        if (value instanceof Function) {\n            transformedValues[key] = value(values, i, dataArr, layerInst);\n        } else {\n            transformedValues[key] = values[key];\n        }\n    }\n    return transformedValues;\n};\n\nexport const getColorMetaInf = (colorInf, colorAxis, auxStyles = {}) => ({\n    originalColor: Object.keys(colorInf).reduce((acc, key) => {\n        if (colorInf[key]) {\n            acc[key] = colorAxis.getHslArray(colorInf[key]);\n        }\n        return acc;\n    }, {}),\n    originalStrokeOnSelect: {\n        stroke: (auxStyles.select || {}).stroke,\n        'stroke-width': (auxStyles.select || {}).strokeWidth\n    },\n    originalStrokeOnHighlight: {\n        stroke: (auxStyles.highlight || {}).stroke,\n        'stroke-width': (auxStyles.highlight || {}).strokeWidth\n    },\n    stateStrokeOnSelect: {},\n    stateStrokeOnHighlight: {},\n    stateColor: {},\n    colorTransform: {}\n});\n\nconst getCoordValue = (radius, trig, angle, offset) => radius * Math[trig](angle) + offset;\n\nconst coordValueGetter = (radius, angle, xOffset, yOffset) => ({\n    x: getCoordValue(radius, 'cos', angle, xOffset),\n    y: getCoordValue(radius, 'sin', angle, yOffset)\n});\n\nexport const toCartesianCoordinates = (points, measurement, rangePlot = false) => {\n    const xOffset = measurement.width / 2;\n    const yOffset = measurement.height / 2;\n    for (let i = 0, len = points.length; i < len; i++) {\n        const point = points[i];\n        const { angle, radius, radius0, angle0 } = point.update;\n        point.update = coordValueGetter(radius, angle, xOffset, yOffset);\n        if (rangePlot) {\n            const update = point.update = coordValueGetter(radius0, angle0, xOffset, yOffset);\n            const { x: x0, y: y0 } = coordValueGetter(radius, angle, xOffset, yOffset);\n            update.x0 = x0;\n            update.y0 = y0;\n        }\n    }\n    return points;\n};\n\nexport const sortData = (data, axes) => {\n    const { x: xAxis, y: yAxis } = axes;\n    const axisArr = [xAxis, yAxis];\n    for (let i = 0, len = axisArr.length; i < len; i++) {\n        const axis = axisArr[i];\n        if (axis.constructor.type() === BAND) {\n            const key = i ? 'y' : 'x';\n            const dom = axis.domain();\n            const indices = dom.reduce((acc, v, idx) => {\n                acc[v] = idx;\n                return acc;\n            }, {});\n            data.sort((a, b) => indices[a[key]] - indices[b[key]]);\n            break;\n        }\n    }\n    return data;\n};\n","import * as PROPS from '../enums/props';\n\nexport const localOptions = {\n    [PROPS.DATA]: {\n        value: null\n    }\n};\n","import { STATE_NAMESPACES } from 'muze-utils';\nimport * as PROPS from '../enums/props';\n\nexport const listenerMap = [\n    {\n        props: [`${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${PROPS.DATA}`],\n        type: 'registerImmediateListener',\n        listener: (context, [prevData, data]) => {\n            context.dataDidSet([prevData, data]);\n        },\n        namespace: context => context.metaInf().namespace\n    }\n];\n","import {\n    getUniqueId,\n    mergeRecursive,\n    FieldType,\n    selectElement,\n    ReservedFields,\n    DataModel,\n    clone,\n    generateGetterSetters,\n    STATE_NAMESPACES,\n    transactor,\n    defaultValue,\n    getObjProp\n} from 'muze-utils';\nimport * as PROPS from '../enums/props';\nimport { props } from './props';\nimport {\n    transformData,\n    getNormalizedData,\n    applyInteractionStyle,\n    getValidTransform,\n    domainCalculator,\n    renderLayer,\n    encodingFieldInfRetriever\n} from '../helpers';\nimport { localOptions } from './local-options';\nimport { listenerMap } from './listener-map';\nimport { BASE_LAYER } from '../enums/constants';\n\nconst layerNs = [STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE, STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE];\nconst groupNs = STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE;\n\nexport const BaseLayerMixin = superclass => class extends superclass {\n    /**\n     * Creates a layer using a configuration and data.\n     *\n     * @public\n     * @constructor\n     * @param {DataModel} data Instance of DataModel to be used. This DataModel instance serves as the data for a\n     * layer.\n     * @param {Object} axes Axes instances to be used for rendering the layer. Axes are used for mapping data from\n     *      value to px.\n     * @param {SimpleAxis} axes.x X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {SimpleAxis} axes.y X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {ColorAxis} axes.color Axis for coloring a layer using color interpolators\n     * @param {ShapeAxis} axes.shape Axis for providing a shape\n     * @param {SizeAxis} axes.size Axis for determining size of a mark using size interpolator\n     * @param {LayerConfig} config Configuration of the layer\n     * @param {Object} dependencies Dependencies of the layer\n     * @param {SmartLabel} dependencies.smartLabel Smartlabel singleton instance\n     */\n    constructor () {\n        super();\n\n        generateGetterSetters(this, this.constructor.getterSetters());\n        this.axes({});\n        this.alias(this.constructor.formalName() + getUniqueId());\n        this._points = [];\n        this._cachedData = [];\n        this._id = getUniqueId();\n        this._measurement = {};\n        this._animationDonePromises = [];\n        this._graphicElems = {};\n        this._customConfig = null;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: null\n            },\n            Object.keys(this.localOptions()).reduce((acc, v) => {\n                acc[v] = localOptions[v].value;\n                return acc;\n            }, {})\n        ];\n    }\n\n    static getListeners () {\n        return {\n            store: [...listenerMap, {\n                type: 'registerChangeListener',\n                props: this.getRenderProps(),\n                listener: (context) => {\n                    renderLayer(context);\n                },\n                subNamespace: (context) => {\n                    const { unitRowIndex, unitColIndex, namespace } = context.metaInf();\n                    return {\n                        [`${layerNs[1]}.${PROPS.DATA}`]: namespace,\n                        [`${groupNs}.domain.x`]: `${unitColIndex}0`,\n                        [`${groupNs}.domain.y`]: `${unitRowIndex}0`,\n                        [`${groupNs}.domain.radius`]: `${unitRowIndex}-${unitColIndex}`\n                    };\n                }\n            }],\n            throwback: []\n        };\n    }\n\n    static getQualifiedStateProps () {\n        const layerState = this.getState();\n        return layerState.map((state, i) => Object.keys(state).map(prop => `${layerNs[i]}.${prop}`));\n    }\n\n    store (...params) {\n        if (params.length) {\n            const store = this._store = params[0];\n            const { namespace } = this.metaInf();\n            store.addSubNamespace(namespace, BASE_LAYER, this);\n\n            transactor(this, this.constructor.localOptions(), store, {\n                subNamespace: namespace,\n                namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}`\n            });\n            return this;\n        }\n        return this._store;\n    }\n\n    domain (...dom) {\n        const prop = `${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}`;\n        const store = this.store();\n        if (dom.length) {\n            const { parentNamespace, namespace } = this.metaInf();\n            const domain = defaultValue(store.get(prop, parentNamespace), {});\n            domain[namespace] = dom[0];\n            this.store().commit(prop, domain, parentNamespace);\n            return this;\n        }\n        return this.store().get(prop, this.metaInf().namespace);\n    }\n\n    /**\n     * Creates a layer instance\n     * @return {BaseLayer} Instance of a layer\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Default configuration of the layer. This configuration gets merged to the user passed configuration using a\n     * plolicy. Base layer only returns part of configuraion, any layer overridding base layer should return its own\n     * configuration.\n     *\n     * @public\n     * @static\n     *\n     * @return {Object} Default configuration\n     */\n    static defaultConfig () {\n        return {\n            transform: {\n                type: 'identity'\n            }\n        };\n    }\n\n    static getterSetters () {\n        return props;\n    }\n\n    static localOptions () {\n        return localOptions;\n    }\n    /**\n     * Policy defines how user config gets merged to default config. The default policy here does a deep copy\n     * operation.\n     * Any policy which does more than deep copying should define the policy as a static member.\n     *\n     * @static\n     * @public\n     *\n     * @param {LayerConfig} conf Configuration with which the user config will be merged\n     * @param {LayerConfig} userConf Configuration given by the user\n     *\n     * @return {LayerConfig} Merged layer configuration\n     */\n    static defaultPolicy (conf, userConf) {\n        return mergeRecursive(conf, userConf);\n    }\n\n    /**\n     * Provides a alias for a layer. Like it's possible to have same layer (like bar) multiple times, but among\n     * multiple layers of same type if one layer has to be referred, alias is used. If no alias is given then\n     * `formalName` is set as the alias name.\n     *\n     *\n     * If used as setter\n     * @param  {string} alias Name of the alias\n     * @return {BaseLayer} Instance of current base layer\n     *\n     * If used as getter\n     * @return {string} Alias of the current layer\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            this._alias = params[0];\n            return this;\n        }\n        return this._alias || this.constructor.formalName();\n    }\n\n    enableCaching () {\n        this._cacheEnabled = true;\n        return this;\n    }\n\n    clearCaching () {\n        this._cacheEnabled = false;\n        return this.data(this._cachedData[0]);\n    }\n\n    /**\n     * Serialize the schema. Merge config is used for serialization.\n     *\n     * @public\n     *\n     * @return {LayerConfig} Serialized schema\n     */\n    serialize () {\n        return this.config();\n    }\n\n    /**\n     * Returns the unique identifier of this layer. Id is auto generated during the creation proceess of a schema.\n     *\n     * @public\n     *\n     * @return {string} id of the layer\n     */\n    id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the transformed data based on given transform type.\n     * It first gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of DataModel\n     * @param {Object} config Configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     */\n    getTransformedData (dataModel, config, transformType, encodingFieldsInf) {\n        return transformData(dataModel, config, transformType, encodingFieldsInf);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a categorical field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @param {Object} fieldsConfig Configuration of fields\n     * @return {Array} Domain values array.\n     */\n    calculateDomainFromData (data) {\n        let domains = {};\n        const isEmpty = this.data().isEmpty();\n\n        if (!isEmpty) {\n            domains = domainCalculator[this.coord()](data, this);\n        }\n        return domains;\n    }\n\n    static shouldDrawAnchors () {\n        return false;\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getDataDomain (encodingType) {\n        const { parentNamespace, namespace } = this.metaInf();\n        const domains = getObjProp(this.store()\n            .get(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}`, parentNamespace), namespace);\n        return encodingType !== undefined ? domains[encodingType] || [] : domains;\n    }\n\n    getUidsFromPayload ({ model, uids }, targetData) {\n        if (!targetData) {\n            return { model: null, uids: [], length: 0 };\n        }\n\n        const targetFields = targetData[0];\n        const targetVals = targetData.slice(1, targetData.length);\n        const payloadMap = targetVals.reduce((acc, v) => {\n            acc[v] = v;\n            return acc;\n        }, {});\n\n        const dm = model.select((fields) => {\n            const row = `${targetFields.map(d => fields[d].internalValue)}`;\n            return row in payloadMap;\n        });\n        // select uids corresponding to the whole set\n        const currentSetIds = dm.getUids().map(uid => uids[uid]);\n\n        return {\n            model: dm,\n            uids: currentSetIds,\n            length: currentSetIds.length\n        };\n    }\n\n    /**\n     * Normalizes the transformed data and returns it.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getNormalizedData (transformedData) {\n        return getNormalizedData(transformedData, this);\n    }\n\n    /**\n     * Gets the nearest point closest to the given x and y coordinate. If no nearest point is found, then it returns\n     * null.\n     *\n     * @public\n     *\n     * @param {number} x X Coordinate.\n     * @param {number} y Y Coordinate.\n     *\n     * @return {Object} Information of the nearest point.\n     * ```\n     *      {\n     *          // id property contains the field names and their corresponding values in a 2d array. This is the\n     *          data // associated with the nearest point.\n     *          id: // Example data: [['Origin'], ['USA']],\n     *          dimensions: // Physical dimensions of the point.\n     *          layerId: // Id of the layer instance.\n     *      }\n     * ```\n     */\n    getNearestPoint () {\n        return null;\n    }\n\n    applyInteractionStyle (interactionType, selectionSet, apply, styles) {\n        const interactionConfig = this.config().interaction || {};\n\n        let interactionStyles = interactionConfig[interactionType];\n        interactionStyles = styles || interactionStyles;\n        if (interactionStyles) {\n            applyInteractionStyle(this, selectionSet, interactionStyles, {\n                apply,\n                interactionType\n            });\n        }\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransform(this);\n    }\n\n    transformType () {\n        return this._transformType;\n    }\n\n    /**\n     * Renders the layer\n     * @return {BaseLayer} Instance of the layer.\n     */\n    render () {\n        return this;\n    }\n\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Disposes the entire layer.\n     *\n     * @return {BaseLayer} Instance of layer.\n     */\n    remove () {\n        const { namespace, parentNamespace } = this.metaInf();\n        const store = this.store();\n        store.removeSubNamespace(namespace, BASE_LAYER);\n        const layersDomain = store.get(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.domain`);\n        const unitDom = layersDomain[parentNamespace];\n        unitDom && (delete unitDom[namespace]);\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     * Stores point in an object with key as the categorical value or temporal value\n     *\n     * @param {string} key categorical value or temporal value\n     * @param {Object} data Information of the data point\n     * @return {BarLayer} Instance of bar layer\n     */\n    cachePoint (key, data) {\n        if (key === null) {\n            return this;\n        }\n        const pointMap = this._pointMap;\n        !pointMap[key] && (pointMap[key] = []);\n        pointMap[key].push(data);\n        return this;\n    }\n\n    // If a layer does not has specific styles, do nothing and return falsy value\n    getInteractionStyles () {\n        return null;\n    }\n\n    applySpecificStyle (styleType, { elem, apply, interactionType, style, mountPoint }) {\n        const interactionFn = this.getInteractionStyles(interactionType, styleType);\n        if (!interactionFn) return false;\n        return interactionFn(this, elem, apply, interactionType, style, mountPoint);\n    }\n\n    getIdentifiersFromData (data) {\n        const schema = this.data().getSchema();\n        const fieldsConfig = this.data().getFieldsConfig();\n        const identifiers = [[], []];\n        const {\n                xFieldType,\n                yFieldType,\n                xField,\n                yField\n            } = this.encodingFieldsInf();\n\n        const [xMeasure, yMeasure] = [xFieldType, yFieldType].map(type => type === FieldType.MEASURE);\n        schema.forEach((d, i) => {\n            const name = d.name;\n            if (fieldsConfig[name].def.type === FieldType.DIMENSION) {\n                identifiers[0].push(name);\n                identifiers[1].push(data[i]);\n            }\n        });\n\n        if (xMeasure && yMeasure) {\n            const xMeasureIndex = fieldsConfig[xField].index;\n            const yMeasureIndex = fieldsConfig[yField].index;\n            identifiers[0].push(...[xField, yField]);\n            identifiers[1].push(...[data[xMeasureIndex], data[yMeasureIndex]]);\n        }\n        return identifiers;\n    }\n\n    hasPlotSpan () {\n        return false;\n    }\n\n    getPlotSpan () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    getPlotPadding () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    /**\n     * Returns the information of the marks corresponding to the supplied identifiers.\n     * Identifiers are a set of field names and their corresponding values in an array.\n     * It can also be an instance of datamodel.\n     *\n     * For example,\n     * ```\n     *  const identifiers = [\n     *      ['Origin', 'Cylinders'],\n     *      ['USA', '8']\n     *  ];\n     *  const points = barLayer.getPointsFromIdentifiers(identifiers);\n     * ```\n     * @public\n     * @param {Array|DataModel} identifiers Identifiers of the marks.\n     * @param {Object} config Optional configuration which describes how to get the information.\n     * @param {boolean} config.getAllAttrs If true, then returns all the information of the points, else returns only\n     * the positions of the points.\n     * @param {boolean} config.getBBox If true, then returns the bounding box of all the marks.\n     *\n     * @return {Array} Array of points contains\n     */\n    getPointsFromIdentifiers (identifiers, config = {}) {\n        const getAllAttrs = config.getAllAttrs;\n        const getBBox = config.getBBox;\n        if (!this.data()) {\n            return [];\n        }\n        let fieldNames;\n        let values;\n        if (identifiers instanceof DataModel) {\n            const dataObj = identifiers.getData();\n            fieldNames = dataObj.schema.map(d => d.name);\n            values = dataObj.data;\n        } else {\n            fieldNames = identifiers[0];\n            values = identifiers.slice(1, identifiers.length);\n        }\n\n        const points = this._points;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPoints = [].concat(...points).filter((point) => {\n            const { source, rowId } = point;\n\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === source[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === rowId) !== -1;\n                } return true;\n            });\n        });\n        return getAllAttrs ? filteredPoints : filteredPoints.map((d) => {\n            const obj = clone(d);\n            if (getBBox) {\n                const update = obj.update || obj;\n                if (obj.size !== undefined) {\n                    const sizeVal = Math.sqrt(obj.size / Math.PI) * 2;\n                    update.width = sizeVal;\n                    update.height = sizeVal;\n                    update.x -= sizeVal / 2;\n                    update.y -= sizeVal / 2;\n                } else {\n                    if (update.width === undefined) {\n                        update.width = 2;\n                    }\n                    if (update.height === undefined) {\n                        update.height = 2;\n                    }\n                }\n            }\n\n            return obj.update || obj;\n        }).sort((a, b) => a.y - b.y);\n    }\n\n    getTransformedDataFromIdentifiers (identifiers) {\n        const { data: identifierData, schema: identifierSchema } = identifiers.getData();\n        const normalizedData = this._normalizedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            yField,\n            xField,\n            yFieldType,\n            xFieldType\n        } = this.encodingFieldsInf();\n        let measureIndex;\n        let enc;\n        if (xFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[xField].index;\n            enc = 'x';\n        } else if (yFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[yField].index;\n            enc = 'y';\n        }\n\n        const transformedData = [];\n        normalizedData.forEach((dataArr) => {\n            dataArr.forEach((dataObj) => {\n                const tupleArr = dataObj.source;\n                const exist = identifierSchema.every((obj, i) =>\n                    identifierData.findIndex(d => tupleArr[fieldsConfig[obj.name].index] === d[i]) !== -1);\n                if (exist) {\n                    const transformedVal = dataObj[enc];\n                    const row = dataObj.source;\n                    const tuple = {};\n                    for (const key in fieldsConfig) {\n                        const index = fieldsConfig[key].index;\n                        tuple[key] = row[index];\n                        if (index === measureIndex) {\n                            tuple[key] = transformedVal;\n                        }\n                    }\n                    transformedData.push(tuple);\n                }\n            });\n        });\n\n        return [transformedData, this.data().getSchema()];\n    }\n\n    /**\n     * Returns the dom elements associated with the supplied set of row ids.\n     * Each element in the layer is mapped with a row of the datamodel. When given an array of row ids,\n     * it returns all the elements which is mapped with those row ids.\n     *\n     * @public\n     * @param {Array} set Array of row ids\n     *\n     * @return {Selection} D3 Selection of dom elements.\n     */\n    getPlotElementsFromSet (set) {\n        const graphicElems = this._graphicElems;\n        const elems = [];\n        for (let i = 0, len = set.length; i < len; i++) {\n            const elem = graphicElems[set[i]];\n            if (elem) {\n                elems.push(elem);\n            }\n        }\n        return elems;\n    }\n\n    /**\n     * Notifies when all animations/transitions of the layer are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n\n    /**\n     * Called when the layer datamodel is set.\n     *\n     * @param {Array} arr Old and new datamodel instance.\n     * @param {DataModel} arr[0] Previous datamodel instance.\n     * @param {DataModel} arr[1] Current datamodel instance.\n     *\n     * @return {BaseLayer} Instance of layer.\n     */\n    dataDidSet ([, data]) {\n        const config = this.config();\n\n        if (data && config) {\n            if (this._cacheEnabled) {\n                this._cachedData.push(data);\n            } else {\n                this._cachedData = [data];\n            }\n            const encodingValue = config.encoding;\n            if (encodingValue) {\n                const fieldsConfig = data.getFieldsConfig();\n                const encodingFieldsInf = this.retrieveEncodingFields(encodingValue, this.coord(), data);\n                this.encodingFieldsInf(encodingFieldsInf);\n                this.resolveTransformType();\n                this._transformedData = this.getTransformedData(data, config,\n                    this.transformType(), encodingFieldsInf);\n                this._normalizedData = this.getNormalizedData(this._transformedData, fieldsConfig);\n                if (config.calculateDomain !== false) {\n                    const domain = this.calculateDomainFromData(this._normalizedData,\n                        this.encodingFieldsInf(), this.data().getFieldsConfig());\n                    this.domain(domain);\n                }\n            }\n        }\n        return this;\n    }\n\n    retrieveEncodingFields (encoding, coord, data) {\n        const fieldsConfig = data.getFieldsConfig();\n\n        return encodingFieldInfRetriever[coord](encoding, fieldsConfig);\n    }\n\n    static getRenderProps () {\n        return [`${layerNs[1]}.${PROPS.DATA}`, ...['x', 'y', 'radius'].map(type =>\n            `${groupNs}.domain.${type}`)];\n    }\n};\n\n","import {\n    mix\n} from 'muze-utils';\nimport { SimpleLayer } from '../simple-layer';\nimport { BaseLayerMixin } from './base-mixin';\nimport { BASE_LAYER } from '../enums/constants';\n\n/**\n * An abstract class which gives definition of common layer functionality like\n * - transforming data for various modes. Supported modes: identity, group and stack.\n * - calculating data domain\n * - linking dependent layers\n * - merging policy of configuration\n * - interaction sideffect helpers\n * - retrieving dom elements from data using id\n * - retrieving the physical dimensions of marks\n * - disposing layer\n *\n * Every layer has to extend base layer and give concrete definition.\n * This layer does not have any default visual. A new layer has to define the logic of `render` for rendering the\n * visuals\n *\n * @public\n * @class\n * @module BaseLayer\n */\nexport default class BaseLayer extends mix(SimpleLayer).with(BaseLayerMixin) {\n    /**\n     * Determines a name for a layer. This name of the layer is used in the input data to refer to this layer.\n     * ```\n     *  .layers([\n     *      mark: 'bar',\n     *      encoding: { ... }\n     *  ])\n     * ```\n     *\n     * @static\n     * @public\n     *\n     * @return {string} name of layer\n     */\n    static formalName () {\n        return BASE_LAYER;\n    }\n}\n","import {\n    selectElement,\n    makeElement,\n    pathInterpolators,\n    Symbols,\n    setStyles\n} from 'muze-utils';\nimport { updateStyle } from '../../helpers';\n\nconst line = Symbols.line;\n\nconst filterFn = (d) => {\n    const { update } = d;\n    return update.y !== null && update.x !== null;\n};\n\nconst containsNull = (elem) => {\n    const { x, y } = elem ? elem.update : {};\n    if (x === null || y === null) {\n        return true;\n    }\n    return false;\n};\n\nconst settIndexPrevOrNext = (arr, index, indexesObj) => {\n    const prevContainsNull = containsNull(arr[index - 1], index - 1);\n    const nextContainsNull = containsNull(arr[index + 1], index + 1);\n\n    !prevContainsNull && indexesObj.prevOfNull.push(index - 1);\n    !nextContainsNull && indexesObj.nextOfNull.push(index + 1);\n};\n\nconst getborderIndexes = (arr) => {\n    const indexes = {\n        prevOfNull: [],\n        nextOfNull: []\n    };\n    arr.forEach((value, index) => {\n        const { update } = value;\n        if (update.y === null || update.x === null) {\n            settIndexPrevOrNext(arr, index, indexes);\n        }\n    });\n    return indexes;\n};\n\nconst makeStartEndPair = (arr, borderIndexes) => {\n    const pairArray = [];\n    const { prevOfNull, nextOfNull } = borderIndexes;\n    const length = prevOfNull.length;\n    if (!length) {\n        return pairArray;\n    }\n\n    for (let i = 0; i < length; i++) {\n        const pair = [];\n        const prevValue = arr[prevOfNull[i]];\n        const nextValue = arr[nextOfNull[i]];\n        if (prevValue) {\n            pair.push(prevValue);\n        }\n        if (nextValue) {\n            pair.push(nextValue);\n        }\n        pairArray.push(pair);\n    }\n    return pairArray;\n};\n\nconst sanitizeNullConfig = (arr) => {\n    const borderIndexes = getborderIndexes(arr);\n    return makeStartEndPair(arr, borderIndexes);\n};\n\nconst getELementsForLine = (params) => {\n    const { mount, data, className, layer, strokeStyle, linepath, transition, updateFns } = params;\n    let element = makeElement(mount, 'path', data.length ? [data] : [], className, updateFns);\n    element.attr('class', (d, i) => d[i].className);\n    setStyles(element, strokeStyle);\n    if (!transition.disabled) {\n        element = element.transition()\n        .duration(transition.duration)\n        .on('end', layer.registerAnimationDoneHook());\n    }\n    element.attr('d', linepath(data))\n                    .style('fill-opacity', 0);\n    return element;\n};\n\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nexport const drawLine = (context) => {\n    const { layer, container, points, interpolate, connectNullData, className, style, transition } = context;\n    const containerSelection = selectElement(container);\n    const strokeStyle = layer.config().nullDataLineStyle;\n    const nullDataLineClass = layer.config().nullDataLineClass;\n    const mount = containerSelection.attr('class', className);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const linepath = line()\n        .curve(curveInterpolatorFn)\n        .x(d => d.update.x)\n        .y(d => d.update.y)\n        .defined(filterFn);\n\n    const graphicElems = layer._graphicElems;\n    const updateFns = {\n        update: (group, d) => {\n            d.forEach((dd) => {\n                graphicElems[dd.rowId] = containerSelection;\n            });\n        }\n    };\n\n    updateStyle(mount, style);\n\n    const elementWithNullData = getELementsForLine({\n        mount,\n        data: points,\n        strokeStyle: undefined,\n        layer,\n        linepath,\n        transition,\n        updateFns\n    });\n    const sanitizedPoints = sanitizeNullConfig(points);\n\n    sanitizedPoints.map((d) => {\n        if (connectNullData && d.length > 1) {\n            getELementsForLine({\n                mount,\n                data: d,\n                strokeStyle,\n                className: `.${className}-${nullDataLineClass}`,\n                layer,\n                linepath,\n                transition,\n                updateFns\n            });\n        }\n        return null;\n    });\n    return elementWithNullData;\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-line',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: 'group'\n    },\n    interaction: {\n        // fade: [{\n        //     type: 'stroke',\n        //     intensity: [0, 0, 0, -0.5]\n        // }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, 0, -0.5]\n        }],\n        focusStroke: [\n            {\n                type: 'stroke',\n                props: {\n                    value: 'black'\n                }\n            }, {\n                type: 'stroke-width',\n                props: {\n                    value: 2,\n                    position: 'inside'\n                }\n            }\n        ]\n    },\n    crossline: true,\n    nearestPointThreshold: 20,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false,\n    nullDataLineStyle: {},\n    nullDataLineClass: 'null'\n};\n","export const interactionStyleMap = {\n    focusStroke: {\n        stroke: () => true,\n        'stroke-width': () => true\n    }\n};\n","import {\n    Voronoi,\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    FieldType,\n    InvalidAwareTypes,\n    getObjProp\n} from 'muze-utils';\nimport { drawLine } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    animateGroup,\n    positionPoints,\n    getIndividualClassName,\n    getColorMetaInf,\n    resolveEncodingValues,\n    sortData\n} from '../../helpers';\nimport { interactionStyleMap } from './helper';\nimport './styles.scss';\n\n/**\n * This layer is used to render straight or smoothed line paths. The mark type of this layer is ```line```.\n *\n * @public\n *\n * @class\n * @module LineLayer\n * @extends BaseLayer\n */\nexport const LineLayerMixin = superclass => class extends superclass {\n    /**\n     * Creates an instance of LineLayer.\n     *\n     * @param {*} args\n     * @memberof LineLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n    }\n\n    static formalName () {\n        return 'line';\n    }\n\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Default configuration of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = super.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField && !transform.groupBy) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     * Returns the draw method for line\n     * @return {Function} Draw method of line layer\n     */\n    getDrawFn () {\n        return drawLine;\n    }\n\n    static shouldDrawAnchors () {\n        return true;\n    }\n\n    getInteractionStyles (interactionType, styleType) {\n        return (interactionStyleMap[interactionType] || {})[styleType];\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @param {number} seriesIndex index of series\n     * @return {Array} Array of points\n     */\n    translatePoints (data) {\n        let points = [];\n        const axes = this.axes();\n        const xAxis = axes.x;\n        const yAxis = axes.y;\n        const colorAxis = axes.color;\n        const { xFieldType, yFieldType } = this.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        sortData(data, axes);\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y) + yAxis.getUnitWidth() / 2;\n            const color = colorAxis.getColor(d.color);\n\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    color\n                },\n                data: d\n            }, i, data, this);\n\n            const style = {\n                stroke: resolvedEncodings.color,\n                'fill-opacity': 0\n            };\n\n            const point = {\n                enter: {},\n                update: {\n                    x: d.x instanceof InvalidAwareTypes ? null : resolvedEncodings.x,\n                    y: d.y instanceof InvalidAwareTypes ? null : resolvedEncodings.y\n                },\n                style,\n                rowId: d.rowId,\n                source: d.source,\n                meta: getColorMetaInf(style, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n\n        points = points.filter((point) => {\n            const { update } = point;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n\n    getTranslatedData (normalizedData, colorValFn, colorFieldIndex, axes) {\n        return normalizedData.map((data, i) => {\n            let color;\n            const colorVal = data.find(d => d.source[colorFieldIndex] !== null &&\n                    d.source[colorFieldIndex] !== undefined);\n\n            if (colorValFn) {\n                color = colorValFn(data, i, normalizedData);\n            } else {\n                color = axes.color.getColor(colorVal && colorVal.source[colorFieldIndex]);\n            }\n\n            return {\n                data: this.translatePoints(data),\n                style: this.getPathStyle(color)\n            };\n        });\n    }\n\n    /**\n     * Renders the line plot\n     * @param {SVGElement} container svg element\n     * @return {LineLayer} instance of line layer\n     */\n    render (container) {\n        const config = this.config();\n        const {\n            encoding,\n            interpolate,\n            className,\n            defClassName,\n            transition\n        } = config;\n        const normalizedData = this._normalizedData;\n        const transformedData = this._transformedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const keys = transformedData.map(d => d.key);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n        const colorField = encoding.color.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n        this._points = [];\n        this._pointMap = {};\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n\n        const colorValFn = encoding.color.value;\n        const translatedPoints = this.getTranslatedData(normalizedData, colorValFn, colorFieldIndex, axes);\n\n        makeElement(container, 'g', translatedPoints, null, {\n            enter: (group) => {\n                animateGroup(group, {\n                    transition,\n                    groupAnimateStyle: {\n                        enter: {\n                            'stroke-opacity': 0,\n                            'fill-opacity': this.getPathStyle()['fill-opacity']\n                        },\n                        update: {\n                            'stroke-opacity': encoding.strokeOpacity.value\n                        }\n                    }\n                });\n            },\n            update: (group, dataArr, i) => {\n                const points = dataArr.data;\n                const seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n                const style = dataArr.style;\n\n                this._points.push(points);\n                this.getDrawFn()({\n                    layer: this,\n                    container: group.node(),\n                    interpolate,\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: style || {},\n                    connectNullData: config.connectNullData\n                });\n            }\n        }, d => d.data[0].source[colorFieldIndex] || d.data[0].rowId);\n\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            stroke: color,\n            'fill-opacity': '0'\n        };\n    }\n\n    /**\n     * Gets the nearest point closest to the given position\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point information\n     */\n    getNearestPoint (x, y, config) {\n        let searchRadius = config.searchRadius;\n        const data = this.data();\n\n        if (!data || (data && data.isEmpty())) {\n            return null;\n        }\n\n        searchRadius = searchRadius !== undefined ? searchRadius : this.config().nearestPointThreshold;\n        const point = this._voronoi.find(x, y, searchRadius);\n        const dimensions = getObjProp(point, 'data', 'data', 'update');\n\n        if (point) {\n            const { source, rowId } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(source, rowId);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: 2,\n                    height: 2\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n};\n","import { CLASSPREFIX, STACK } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-area',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: STACK\n    },\n    interaction: {\n\n    },\n    crossline: true,\n    nearestPointThreshold: 10,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        y0: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n","import {\n    easeFns,\n    selectElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\n\nconst area = Symbols.area;\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nconst /* istanbul ignore next */ drawArea = (params) => {\n    let filteredPoints;\n    const { layer, container, points, style, transition, className, connectNullData, interpolate } = params;\n\n    const { effect: easeEffect, duration } = transition;\n    const mount = selectElement(container);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const selection = mount.selectAll('path').data(points.length ? [points[0].className] : []);\n    const [enterAreaPath, updateAreaPath] = ['enter', 'update'].map(e => area().curve(curveInterpolatorFn)\n                    .x(d => d[e].x)\n                    .y1(d => d[e].y)\n                    .y0(d => d[e].y0)\n                    .defined(d => d[e].y !== null\n            ));\n\n    filteredPoints = points;\n    mount.attr('class', className);\n    if (connectNullData) {\n        filteredPoints = points.filter(d => d.update.y !== null);\n    }\n    const selectionEnter = selection.enter().append('path').attr('d', enterAreaPath(filteredPoints));\n    selection.merge(selectionEnter).transition().ease(easeFns[easeEffect])\n                    .duration(duration)\n                    .on('end', layer.registerAnimationDoneHook())\n                    .attr('d', updateAreaPath(filteredPoints))\n                    .each(function (d) {\n                        const element = selectElement(this);\n                        element.attr('class', d);\n                        Object.keys(style).forEach(key => element.style(key, style[key]));\n                    });\n};\n\nexport default drawArea;\n","import { FieldType, InvalidAwareTypes, getObjProp } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport drawArea from './renderer';\nimport './styles.scss';\nimport { STACK, ENCODING } from '../../enums/constants';\nimport {\n    positionPoints,\n    getIndividualClassName,\n    getValidTransformForAggFn,\n    getColorMetaInf,\n    resolveEncodingValues,\n    sortData\n} from '../../helpers';\n\n/**\n * Area layer renders a closed path. The mark type of this layer is ```area```. This layer can be used\n * to create stacked or multi-series areas and vertical range area plots by using the encoding properties.\n *\n * To create this layer using layer configuration from canvas,\n * ```\n *      canvas.layers([{\n *          mark: 'area',\n *          transform: {\n *              type: 'stack' // Produces a stacked area.\n *          }\n *      }]);\n * ```\n *\n * @public\n *\n * @class\n * @module AreaLayer\n * @extends LineLayer\n */\nexport const AreaLayerMixin = superclass => class extends superclass {\n\n    /** Default configuration of area layer\n     *\n     * @return {Object} Default configuration of layer\n    */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     * Calculates the domain from data. It calls its parent class's method which is line layer\n     * to get the domain and overwrites the domain according to its need.\n     * @return {Array} Domain values\n     */\n    calculateDomainFromData (data, encodingFieldsInf, fieldsConfig) {\n        const domains = super.calculateDomainFromData(data, fieldsConfig);\n        [ENCODING.X, ENCODING.Y].forEach((type) => {\n            const { [`${type}FieldType`]: fieldType } = encodingFieldsInf;\n            if (fieldType === FieldType.MEASURE && getObjProp(domains[type], 'length')) {\n                domains[type][0] = Math.min(domains[type][0], 0);\n                domains[type][1] = Math.max(0, domains[type][1]);\n            }\n        });\n        return domains;\n    }\n\n    /**\n     * Returns the drawing method of this layer\n     * @return {Function} Draw method\n     */\n    getDrawFn () {\n        return drawArea;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @return {Array} Array of points\n     */\n    translatePoints (data) {\n        let points = [];\n        const transformType = this.transformType();\n        const axes = this.axes();\n        const colorAxis = axes.color;\n        const config = this.config();\n        const fieldsConfig = this.data().getFieldsConfig();\n        const { xField, yField, y0Field } = this.encodingFieldsInf();\n        const { x: xAxis, y: yAxis } = axes;\n        const classNameFn = config.individualClassName;\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n        const minYVal = yAxis.domain()[0];\n        const basePos = minYVal < 0 ? yAxis.getScaleValue(0) : yAxis.getScaleValue(minYVal);\n        sortData(data, axes);\n        points = data.map((d, i) => {\n            let color;\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y);\n            const y0Px = (y0Field || transformType === STACK) ? yAxis.getScaleValue(d.y0) : basePos;\n            color = colorAxis.getColor(d.color);\n            const invalidY = d.y instanceof InvalidAwareTypes;\n            const invalidY0 = d.y0 instanceof InvalidAwareTypes;\n            const resolvedValues = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    y0: y0Px,\n                    color\n                },\n                data: d\n            }, i, data, this);\n            color = resolvedValues.color;\n            const style = {\n                fill: color\n            };\n\n            const point = {\n                enter: {\n                    x: xPx,\n                    y: invalidY ? null : basePos,\n                    y0: invalidY0 ? null : basePos\n                },\n                update: {\n                    x: xPx,\n                    y: invalidY ? null : resolvedValues.y,\n                    y0: invalidY0 ? null : resolvedValues.y0\n                },\n                source: d.source,\n                rowId: d.rowId,\n                className: classNameFn ? classNameFn(d, i, data, this) : '',\n                style,\n                meta: getColorMetaInf(style, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        points = points.filter((point) => {\n            const update = point.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            fill: color\n        };\n    }\n};\n\n","import { mix } from 'muze-utils';\nimport { AREA_LAYER } from '../../enums/constants';\nimport { BaseLayer, BaseLayerMixin } from '../../base-layer';\nimport { LineLayerMixin } from '../line/line-mixin';\nimport { AreaLayerMixin } from './area-mixin';\n\n/**\n * Area layer renders a closed path. The mark type of this layer is ```area```. This layer can be used\n * to create stacked or multi-series areas and vertical range area plots by using the encoding properties.\n *\n * To create this layer using layer configuration from canvas,\n * ```\n *      canvas.layers([{\n *          mark: 'area',\n *          transform: {\n *              type: 'stack' // Produces a stacked area.\n *          }\n *      }]);\n * ```\n *\n * @public\n *\n * @class\n * @module AreaLayer\n * @extends LineLayer\n */\nexport default class AreaLayer extends mix(BaseLayer).with(BaseLayerMixin, LineLayerMixin, AreaLayerMixin) {\n    static formalName () {\n        return AREA_LAYER;\n    }\n}\n\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-arc',\n    padding: { top: 1, bottom: 1, left: 1, right: 1 },\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    height: 100,\n    width: 100,\n    sort: '',\n    colors: ['#F44336', 'blue', 'green', 'yellow', 'orange', 'purple'],\n    transform: {\n        type: 'identity'\n    },\n    encoding: {\n        'stroke-width': {\n            value: '2px'\n        },\n        'stroke-linejoin': {\n            value: 'round'\n        },\n        angle: {\n            value: '1'\n        },\n        radius: {\n            value: '1'\n        },\n        opacity: {\n            value: '1'\n        },\n        color: {\n            value: '1'\n        },\n        shape: {\n            value: '1'\n        },\n        size: {\n            value: '1'\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 500\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-arc-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-arc-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-arc-selected`\n        }\n    }\n};\n\n","import {\n    makeElement,\n    selectElement,\n    getQualifiedClassName,\n    isSimpleObject,\n    Symbols,\n    FieldType,\n    ReservedFields\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { getIndividualClassName, resolveEncodingValues, getColorMetaInf } from '../../helpers';\nimport { tweenPie, tweenExitPie, getPreviousPoint } from './arc-helper';\nimport './styles.scss';\n\nconst arc = Symbols.arc;\n\nexport const ArcLayerMixin = superclass => class extends superclass {\n    constructor (data, axes, config, dependencies) {\n        super(data, axes, config, dependencies);\n        this._prevPieData = {};\n    }\n\n    /**\n    * returns the default configuration of the layer\n    *\n    * @static\n    * @return {Object} Default configuration for arc layer\n    * @memberof ArcLayer\n    */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'arc';\n    }\n\n    elemType () {\n        return 'path';\n    }\n\n    getNearestPoint (x, y, config = {}) {\n        return this.getDataFromEvent(config.event);\n    }\n\n    getDataFromEvent (event) {\n        const dataPoint = selectElement(event.target).data()[0];\n        if (isSimpleObject(dataPoint)) {\n            const { source, rowId } = dataPoint;\n            return {\n                id: this.getIdentifiersFromData(source, rowId),\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n\n    translatePoints (data) {\n        const { angle, color: colorAxis, radius: radiusAxis } = this.axes();\n        const pieIndex = {};\n        const prevData = this._points[0] || [];\n        const points = [];\n        const angleV = {};\n\n        this._prevPieData = {};\n        prevData.forEach((e, index) => {\n            this._prevPieData[e.rowId] = [e, index];\n            pieIndex[e.index] = e;\n        });\n        data.forEach((d, i) => {\n            const angles = angle.getScaleValue(d.angle);\n            if (angles) {\n                !angleV[d.angle] && (angleV[d.angle] = 0);\n                const { startAngle, endAngle } = angles[angleV[d.angle]++];\n                const uid = d.rowId;\n                const resolvedEncodings = resolveEncodingValues({\n                    values: {\n                        radius: radiusAxis.getOuterRadius(d.radius),\n                        radius0: radiusAxis.getInnerRadius(d.radius0),\n                        color: colorAxis.getColor(d.color),\n                        angle0: startAngle,\n                        angle: endAngle,\n                        startAngle,\n                        endAngle,\n                        startAngle0: startAngle,\n                        endAngle0: endAngle\n                    },\n                    data: d\n                }, i, data, this);\n                const color = resolvedEncodings.color;\n                points.push({\n                    source: d.source,\n                    index: i,\n                    enter: {},\n                    update: {\n                        angle0: resolvedEncodings.angle0,\n                        angle: resolvedEncodings.angle,\n                        radius0: resolvedEncodings.radius0,\n                        radius: resolvedEncodings.radius\n                    },\n                    color,\n                    meta: getColorMetaInf({\n                        fill: color\n                    }, colorAxis),\n                    rowId: uid,\n                    _previousInfo: this._prevPieData[uid] ? this._prevPieData[uid][0] :\n                        getPreviousPoint(pieIndex, i, this)\n                });\n            }\n        });\n        return points;\n    }\n\n    render (container) {\n        const measurement = this.measurement();\n        const {\n            classPrefix,\n            defClassName,\n            cornerRadius,\n            padAngle,\n            padRadius,\n            transition\n        } = this.config();\n        const qualClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        // This returns a function that generates the arc path based on the datum provided\n        const path = this._arcFn = arc()\n                .cornerRadius(cornerRadius)\n                .startAngle(d => d.update.angle0 + Math.PI / 2)\n                .endAngle(d => d.update.angle + Math.PI / 2)\n                .padAngle(padAngle)\n                .padRadius(padRadius)\n                .outerRadius(d => d.update.radius)\n                .innerRadius(d => d.update.radius0);\n\n        this._points = this._normalizedData.map(arr => this.translatePoints(arr));\n        const graphicElems = this._graphicElems = {};\n        // Creating the group that holds all the arcs\n        const g = makeElement(selectElement(container), 'g', this._points, `${qualClassName[0]}-group`)\n                .classed(`${qualClassName[1]}-group`, true)\n                .attr('transform', `translate(${measurement.width / 2},\n                    ${measurement.height / 2})`);\n        const tween = (elem) => {\n            makeElement(elem, 'path', d => [d], `${qualClassName[0]}-path`)\n                .style('fill', d => d.color)\n                .each(function (d) {\n                    graphicElems[d.rowId] = selectElement(this);\n                })\n                .transition()\n                .duration(transition.duration)\n                .on('end', this.registerAnimationDoneHook())\n                .attrTween('d', (...params) => tweenPie(path, params))\n                .attr('class', (d, i) => {\n                    const individualClass = getIndividualClassName(d, i, this._points, this);\n                    return `${qualClassName[0]}-path ${qualClassName[1]}-path-${d.index}\n                        ${individualClass}`;\n                });\n        };\n        const consecutiveExits = [];\n        let exitCounter = 0;\n        const tweenExit = (elem, d) => {\n            let exitArr = consecutiveExits[exitCounter];\n            const oldExitCounter = exitCounter;\n            if (!exitArr) {\n                exitArr = [{ elem, datum: d }];\n            } else if (exitArr[exitArr.length - 1].datum.index === d.index - 1) {\n                exitArr.push({ elem, datum: d });\n            } else {\n                exitCounter++;\n            }\n            consecutiveExits[oldExitCounter] = exitArr;\n        };\n        // Creating groups for all the arcs present individually\n        makeElement(g, 'g', d => d, `${qualClassName[0]}`,\n            {\n                update: tween,\n                exit: tweenExit\n            })\n                        .attr('class', (d, i) => `${qualClassName[0]} ${qualClassName[1]}-${i}`);\n        tweenExitPie(consecutiveExits, transition, path);\n        return this;\n    }\n\n    getPointsFromIdentifiers (identifiers) {\n        if (!this.data()) {\n            return [];\n        }\n        const fieldNames = identifiers[0];\n        const values = identifiers.slice(1, identifiers.length);\n        const pieSlices = selectElement(this.mount()).selectAll('path').data();\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPies = pieSlices.filter((tData) => {\n            const { source, rowId } = tData;\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === source[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === rowId) !== -1;\n                } return true;\n            });\n        });\n\n        const pieSliceInf = filteredPies[0];\n        if (pieSliceInf) {\n            const measurement = this.measurement();\n            const centroid = this._arcFn.centroid(pieSliceInf);\n            return [{\n                x: centroid[0] + measurement.width / 2,\n                y: centroid[1] + measurement.height / 2,\n                width: 2,\n                height: 2\n            }];\n        }\n        return [];\n    }\n};\n\n","import { getObjProp, interpolator, FieldType, selectElement } from 'muze-utils';\nimport { ANGLE, RADIUS, SIZE, COLOR } from '../../enums/constants';\n\nexport const getPreviousPoint = (prevData, currIndex, context) => {\n    const prevArc = prevData[currIndex - 1];\n    const nextArc = prevData[currIndex];\n    const [startAngle, endAngle] = context.axes().angle.range();\n    if (prevArc && nextArc) {\n        return {\n            update: {\n                angle0: getObjProp(prevArc, 'update', 'angle'),\n                angle: getObjProp(nextArc, 'update', 'angle0')\n            }\n        };\n    } else if (!nextArc) {\n        return {\n            update: {\n                angle0: (endAngle - 90) * Math.PI * 2 / 360,\n                angle: (endAngle - 90) * Math.PI * 2 / 360\n            }\n        };\n    }\n    return {\n        update: {\n            angle0: (startAngle - 90) * Math.PI * 2 / 360,\n            angle: (startAngle - 90) * Math.PI * 2 / 360\n        }\n    };\n};\n\nexport const tweenPie = (path, b) => {\n    const datum = b[0];\n    return function (t) {\n        return path(interpolator()(datum._previousInfo, datum)(t));\n    };\n};\n\nexport const tweenExitPie = (consecutiveExits, transition, path) => {\n    if (consecutiveExits.length > 0) {\n        consecutiveExits.forEach((consecutiveExitArr) => {\n            const startAngle = consecutiveExitArr[0].datum.update.angle0;\n            const endAngle = consecutiveExitArr[consecutiveExitArr.length - 1].datum.update.angle;\n            const mid = (Math.PI * 2 * startAngle) / ((Math.PI * 2) + startAngle - endAngle);\n\n            consecutiveExitArr.forEach((e) => {\n                const { elem, datum } = e;\n\n                elem.each(function () {\n                    const gElem = selectElement(this);\n                    gElem.selectAll('path')\n                                    .transition()\n                                    .duration(transition.duration)\n                                    .attrTween('d', () => function (t) {\n                                        return path(interpolator()(datum, {\n                                            update: {\n                                                angle0: mid,\n                                                angle: mid,\n                                                radius: datum.radius,\n                                                radius0: datum.radius0\n                                            }\n                                        })(t));\n                                    })\n                                    .remove();\n                    gElem.remove();\n                });\n            });\n        });\n    }\n};\n\nexport const getFieldIndices = (encoding, fieldsConfig) => {\n    const [angleField, radiusField, colorField, sizeField] = [ANGLE, RADIUS, COLOR, SIZE]\n            .map(e => encoding[e].field);\n    const [angleIndex, sizeIndex, radiusIndex] = [angleField, sizeField, radiusField]\n        .map((e) => {\n            const conf = fieldsConfig[e];\n            if (conf && conf.def.type === FieldType.MEASURE) {\n                return conf.index;\n            }\n            return null;\n        });\n    const colorIndex = getObjProp(fieldsConfig, colorField, 'index');\n    return {\n        angleIndex,\n        sizeIndex,\n        radiusIndex,\n        colorIndex\n    };\n};\n","import {\n    mix\n} from 'muze-utils';\nimport { BaseLayerMixin, BaseLayer } from '../../base-layer';\nimport { ArcLayerMixin } from './arc-mixin';\n\n/**\n * Arc Layer creates a plot with polar coordinates.\n *\n * @public\n *\n * @class\n * @module ArcLayer\n * @extends BaseLayer\n */\nexport default class ArcLayer extends mix(BaseLayer).with(BaseLayerMixin, ArcLayerMixin) {\n    static formalName () {\n        return 'arc';\n    }\n}\n","import {\n    mix\n} from 'muze-utils';\nimport { BaseLayer, BaseLayerMixin } from '../../base-layer';\nimport { LineLayerMixin } from './line-mixin';\nimport { LINE_LAYER } from '../../enums/constants';\n\n/**\n * This layer is used to render straight or smoothed line paths. The mark type of this layer is ```line```.\n *\n * @public\n *\n * @class\n * @module LineLayer\n * @extends BaseLayer\n */\nexport default class LineLayer extends mix(BaseLayer).with(BaseLayerMixin, LineLayerMixin) {\n    static formalName () {\n        return LINE_LAYER;\n    }\n}\n","import {\n    setAttrs,\n    setStyles,\n    selectElement,\n    makeElement,\n    getSmartComputedStyle\n} from 'muze-utils';\n\n/**\n * Draws svg text in the specified container.\n * @param {SVGElement} container Container where labels will be appended.\n * @param {Array.<Object>} data Data of the elements.\n * @return {Selection} d3 selection of the elements.\n */\nconst drawText = (container, data, config, layerInst) => {\n    const selection = selectElement(container).selectAll('g').data(data);\n    const { smartLabel } = layerInst._dependencies;\n    const graphicElems = layerInst._graphicElems;\n\n    const selectionMerge = selection.enter().append('g')\n        .each(function (dataObj) {\n            setAttrs(this, dataObj.enter);\n        })\n        .merge(selection);\n    const style = getSmartComputedStyle(selectElement(container), config.className);\n    const fontSize = parseInt(style.fontSize, 10);\n\n    smartLabel.setStyle(style);\n    selectionMerge.each(function (dataObj) {\n        const element = selectElement(this);\n        graphicElems[dataObj.rowId] = element;\n        const { update, text, color, textanchor, style: textStyle } = dataObj;\n        const background = dataObj.background;\n        let backgroundVal;\n        if (backgroundVal = background.value) {\n            const backgroundPadding = background.padding;\n            let diff;\n            const { width, height } = smartLabel.getOriSize(dataObj.text);\n            const backgroundEl = makeElement(element, 'rect', [1]);\n\n            if (textanchor === 'end') {\n                diff = width;\n            } else if (textanchor === 'start') {\n                diff = 0;\n            } else {\n                diff = width / 2;\n            }\n\n            setAttrs(backgroundEl.node(), {\n                x: update.x - diff - backgroundPadding / 2,\n                y: update.y - fontSize - backgroundPadding / 2,\n                width: width + backgroundPadding,\n                height: height + backgroundPadding\n            });\n            background && setStyles(backgroundEl, {\n                background: backgroundVal\n            });\n        }\n        const textEl = makeElement(element, 'text', d => [d]).text(text);\n        const textNode = textEl.node();\n        textStyle && setStyles(textNode, textStyle);\n        color && setStyles(textNode, {\n            fill: color\n        });\n        dataObj.className && textEl.classed(dataObj.className, true);\n        setAttrs(textNode, update);\n        textEl.attr('text-anchor', textanchor);\n        textEl.attr('alignment-baseline', dataObj['alignment-baseline']);\n        textEl.attr('transform', `rotate(${dataObj.rotation} ${update.x} ${update.y})`);\n    });\n    selection.exit().remove();\n    return selection;\n};\n\nexport default drawText;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-text',\n    classPrefix: CLASSPREFIX,\n    className: '',\n    transform: {\n        type: 'identity'\n    },\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    crossline: true,\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: {},\n        size: {},\n        radius: {},\n        angle: {},\n        text: {\n            value: '',\n            formatter: (val, i, data, context) => {\n                const valueParser = context.valueParser();\n                return valueParser(val);\n            },\n            background: {\n                padding: 10\n            }\n        },\n        rotation: {\n            value: 0\n        },\n        'alignment-baseline': {\n            value: 'middle'\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-text-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-text-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-text-selected`\n        }\n    }\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    setStyles,\n    createElements\n} from 'muze-utils';\nimport drawText from './renderer';\nimport { defaultConfig } from './default-config';\nimport { positionPoints, getIndividualClassName, resolveEncodingValues, getColorMetaInf, toCartesianCoordinates }\n    from '../../helpers';\nimport { TEXT_ANCHOR_MIDDLE, ENCODING } from '../../enums/constants';\n\nimport './styles.scss';\n\nconst defaultEncoding = defaultConfig.encoding;\nconst alignmentBaseLine = defaultEncoding['alignment-baseline'].value;\nconst defRotation = defaultEncoding.rotation.value;\n\nconst pointTranslators = {\n    polar: (data, config, layerInst) => {\n        let points = [];\n        const axes = layerInst.axes();\n        const encoding = layerInst.config().encoding;\n        const textEncoding = encoding.text;\n        const { radius: radiusAxis, color: colorAxis, angle: angleAxis } = axes;\n        const { formatter: textFormatter } = textEncoding;\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const angleV = {};\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const source = d.source;\n            const text = d.text;\n\n            const color = colorAxis.getColor(d.color);\n            const radius = radiusAxis.getOuterRadius(d.radius);\n            const angles = angleAxis.getScaleValue(d.angle);\n            !angleV[d.angle] && (angleV[d.angle] = 0);\n            const { startAngle, endAngle } = angles[angleV[d.angle]++];\n\n            const angle = (startAngle + endAngle) / 2;\n            const resolvedVal = resolveEncodingValues({\n                values: {\n                    angle,\n                    radius,\n                    color,\n                    text,\n                    startAngle,\n                    endAngle,\n                    rotation: defRotation,\n                    'alignment-baseline': alignmentBaseLine\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    angle: resolvedVal.angle,\n                    radius: resolvedVal.radius\n                },\n                text: textFormatter ? textFormatter(text, i, data, layerInst) : resolvedVal.text,\n                color: resolvedVal.color,\n                rotation: resolvedVal.rotation,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, layerInst) : null,\n                    padding: backgroundPadding\n                },\n                'alignment-baseline': resolvedVal['alignment-baseline'],\n                meta: getColorMetaInf({\n                    fill: resolvedVal.color\n                }, colorAxis),\n                style: {},\n                source,\n                rowId: d.rowId\n            };\n\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n\n        points = toCartesianCoordinates(positionPoints(layerInst, points), layerInst.measurement());\n\n        points = points.filter((d) => {\n            const update = d.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    },\n    cartesian: (data, config, layerInst) => {\n        let points = [];\n        const axes = layerInst.axes();\n        const colorAxis = axes.color;\n        const encoding = layerInst.config().encoding;\n        const textEncoding = encoding.text;\n        const { field: textField, value, formatter: textFormatter } = textEncoding;\n        const fieldsConfig = layerInst.data().getFieldsConfig();\n\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const textFieldIndex = textField ? fieldsConfig[textField] && fieldsConfig[textField].index : -1;\n        const xEnc = ENCODING.X;\n        const yEnc = ENCODING.Y;\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d.source;\n            const textValue = textField ? row[textFieldIndex] : value;\n\n            const [xPx, yPx] = [xEnc, yEnc].map(type => (axes[type] ? axes[type].getScaleValue(d[type]) +\n                    axes[type].getUnitWidth() / 2 : 0));\n\n            const color = colorAxis.getColor(d.color, colorAxis);\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    text: textValue,\n                    color,\n                    rotation: defRotation,\n                    'alignment-baseline': alignmentBaseLine\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    x: resolvedEncodings.x,\n                    y: resolvedEncodings.y\n                },\n                text: textFormatter(resolvedEncodings.text, i, data, layerInst),\n                color: resolvedEncodings.color,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, layerInst) : null,\n                    padding: backgroundPadding\n                },\n                'alignment-baseline': resolvedEncodings['alignment-baseline'],\n                rotation: resolvedEncodings.rotation,\n                meta: getColorMetaInf({\n                    fill: resolvedEncodings.color\n                }, colorAxis),\n                style: {},\n                source: d.source,\n                rowId: d.rowId\n            };\n\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n\n        points = positionPoints(layerInst, points);\n        points = points.filter((d) => {\n            const update = d.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n};\n\n/**\n * This layer is used to create labels for each data point. It has an encoding property ```text```\n * which determines from which field's data the value of the label will be taken. The text encoding\n * property is necessary for the layer to render the text.The mark type of this layer is ```text```.\n *\n * @public\n *\n * @class\n * @module TextLayer\n * @extends BaseLayer\n */\nexport const TextLayerMixin = superclass => class extends superclass {\n    /**\n    * Returns the default configuration of the text layer\n    * @return {Object} Default configuration of the text layer\n    */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'text';\n    }\n\n    elemType () {\n        return 'text';\n    }\n\n    getPointTranslator (val) {\n        return pointTranslators[val];\n    }\n\n    /**\n    * Generates an array of objects containing x, y, width and height of the points from the data\n    * @param  {Array.<Array>} data Data Array\n    * @param  {Object} encoding  Config\n    * @param  {Object} axes     Axes object\n    * @return {Array.<Object>}  Array of points\n    */\n    translatePoints (data, config = {}) {\n        return pointTranslators[this.coord()](data, config, this);\n    }\n\n    /**\n    * Renders the plot in the given container\n    * @param  {SVGElement} container SVGElement which will hold the plot\n    * @return {textLayer} Instance of text layer\n    */\n    render (container) {\n        const config = this.config();\n        const normalizedData = this._normalizedData;\n        const className = config.className;\n        const qualifiedClassName = getQualifiedClassName(config.defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n\n        containerSelection.classed(`${qualifiedClassName.join(' ')} ${className}`, true);\n        this._graphicElems = {};\n\n        createElements({\n            data: normalizedData,\n            append: 'g',\n            selector: 'g',\n            container,\n            each: (dataArr, group) => {\n                const node = group.node();\n                const points = this.translatePoints(dataArr, {}, this);\n                setStyles(node, {\n                    'text-anchor': TEXT_ANCHOR_MIDDLE\n                });\n                drawText(node, points, {\n                    className: qualifiedClassName[0]\n                }, this);\n            }\n        });\n        return this;\n    }\n};\n\n","import {\n    mix\n} from 'muze-utils';\nimport { BaseLayer, BaseLayerMixin } from '../../base-layer';\nimport { TextLayerMixin } from './text-mixin';\n\n/**\n * This layer is used to create labels for each data point. It has an encoding property ```text```\n * which determines from which field's data the value of the label will be taken. The text encoding\n * property is necessary for the layer to render the text.The mark type of this layer is ```text```.\n *\n * @public\n *\n * @class\n * @module TextLayer\n * @extends BaseLayer\n */\nexport default class TextLayer extends mix(BaseLayer).with(BaseLayerMixin, TextLayerMixin) {\n    static formalName () {\n        return 'text';\n    }\n}\n","/* global Element, document  */\nimport {\n    makeElement,\n    selectElement,\n    easeFns,\n    objectIterator,\n    getSymbol\n} from 'muze-utils';\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, groupElement) {\n    const { shape, size, update } = d;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            createShape(d, groupElement);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        if (newShape.nodeName === 'path' || newShape.nodeName === 'image') {\n            shapeElement.attr('transform', `scale(${size / 100})`);\n        } else {\n            shapeElement.attr('height', size);\n            shapeElement.attr('width', size);\n        }\n        shapeElement.attr('x', -size / 2);\n        shapeElement.attr('y', -size / 2);\n        makeElement(groupElement, () => newShape, [1]);\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = getSymbol(shape).size(size)(update);\n        }\n        makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    } else {\n        d.shape = 'circle';\n        createShape(d, groupElement);\n    }\n};\n\n/**\n * Draws symbols using d3 symbol api\n * @param {Object} params Contains the svg container, points and other symbol related attributes.\n */\n/* istanbul ignore next */ const drawSymbols = (params) => {\n    const { layer, container, points, transition, className } = params;\n    const { duration, effect, disabled } = transition;\n    const mount = selectElement(container);\n    const graphicElems = layer._graphicElems;\n    mount.attr('class', className);\n    return makeElement(mount, 'g', points, null, {\n        enter: (group, d) => {\n            const { enter } = d;\n            group.attr('transform', `translate(${enter.x},${enter.y})`);\n        },\n        update: (group, d) => {\n            createShape(d, group);\n            graphicElems[d.rowId] = group;\n            const { update, style } = d;\n            objectIterator(style, key => group.style(key, style[key]));\n            group.attr('class', className);\n            group.classed(d.className, true);\n            if (!disabled) {\n                group = group.transition()\n                    .duration(transition.duration)\n                    .on('end', layer.registerAnimationDoneHook());\n            }\n            group.attr('transform', `translate(${update.x},${update.y})`);\n        },\n        exit: (exitGroup) => {\n            if (!disabled) {\n                exitGroup.transition().ease(easeFns[effect])\n                .duration(duration)\n                .on('end', () => exitGroup.remove())\n                .style('fill-opacity', 0)\n                .style('stroke-opacity', 0);\n            } else {\n                exitGroup.remove();\n            }\n        }\n    }, params.keyFn);\n};\n\nexport default drawSymbols;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-point',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    defColorStyle: 'stroke',\n    interaction: {\n        highlight: [\n            {\n                type: 'stroke',\n                props: {\n                    value: 'black'\n                }\n            }, {\n                type: 'stroke-width',\n                props: {\n                    value: 1,\n                    position: 'center'\n                }\n            }\n        ],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }],\n        focusStroke: [\n            {\n                type: 'stroke',\n                props: {\n                    value: 'black'\n                }\n            }, {\n                type: 'stroke-width',\n                props: {\n                    value: 2,\n                    position: 'outside'\n                }\n            }\n        ]\n    },\n    innerPadding: 0.1,\n    nearestPointThreshold: 10,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        size: {\n            value: 30\n        },\n        color: {},\n        stroke: {\n            value: 'hsla(0,0%,0%,0)'\n        },\n        fill: {},\n        shape: {\n            value: 'circle'\n        },\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        },\n        interaction: {\n            anchors: 'highlight',\n            'persistent-anchors': 'focusStroke'\n        }\n    },\n    shapes: ['circle', 'cross', 'diamond', 'square', 'star', 'wye', 'triangle'],\n    sizes: [20, 30, 40, 50, 60, 70]\n};\n","import {\n    FieldType,\n    COORD_TYPES\n} from 'muze-utils';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    getIndividualClassName,\n    resolveEncodingValues,\n    getColorMetaInf,\n    positionPoints\n} from '../../helpers';\n\nexport const prepareDrawingInf = ({ data, datum, i, layerInst, xPx, yPx }) => {\n    const axes = layerInst.axes();\n    const { shape: shapeAxis, color: colorAxis, size: sizeAxis } = axes;\n    let shape = shapeAxis.getShape(datum.shape);\n    let size = sizeAxis.getSize(datum.size);\n    let color = colorAxis.getColor(datum.color);\n    const resolvedEncodings = resolveEncodingValues({\n        values: {\n            x: xPx,\n            y: yPx,\n            color,\n            size,\n            shape,\n            data: datum\n        },\n        data: datum\n    }, i, data, layerInst);\n    const layerEncoding = layerInst.config().encoding;\n    const { rowId, source } = datum;\n    ({ shape, size, color } = resolvedEncodings);\n    const style = {\n        fill: color,\n        stroke: layerEncoding.stroke.value\n    };\n    const { x, y } = resolvedEncodings;\n    const pos = { x, y };\n    return {\n        enter: pos,\n        update: pos,\n        shape,\n        source,\n        rowId,\n        style,\n        meta: getColorMetaInf(style, colorAxis),\n        size\n    };\n};\n\nexport const pointTranslators = {\n    [COORD_TYPES.CARTESIAN]: (data, config, layerInst) => {\n        let points = [];\n        const encoding = layerInst.config().encoding;\n        const axes = layerInst.axes();\n        const { x, y } = encoding;\n        const xField = x.field;\n        const yField = y.field;\n        const fieldsConfig = layerInst.data().getFieldsConfig();\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const measurement = layerInst.measurement();\n        const { x: offsetX, y: offsetY } = config.offset;\n\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n\n            let [xPx, yPx] = [ENCODING.X, ENCODING.Y].map((type) => {\n                const value = d[type] === null ? undefined : d[type];\n                const measure = type === ENCODING.X ? measurement.width : measurement.height;\n                return !encoding[type].field ? measure / 2 : axes[type].getScaleValue(value);\n            });\n\n            xPx += offsetX;\n            yPx += offsetY;\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = prepareDrawingInf({\n                    data,\n                    datum: d,\n                    i,\n                    layerInst,\n                    xPx,\n                    yPx\n                });\n                point.className = getIndividualClassName(d, i, data, layerInst);\n                points.push(point);\n                layerInst.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(layerInst, points);\n        return points;\n    }\n};\n\nexport const getStrokeWidthByPosition = (position, radius) => {\n    const strokeWidthWithOffsetMap = {\n        center: -radius,\n        inside: -(radius * Math.PI),\n        outside: +(radius * Math.PI)\n    };\n    return strokeWidthWithOffsetMap[position];\n};\n\n// This is invoked only on point selection for applying a path around the point\nconst strokeInteractionStyle = (context, elem, apply, interactionType, style) => {\n    const datum = elem.data()[0];\n    const styleType = style.type;\n    const { originalStrokeOnSelect, stateStrokeOnSelect } = datum.meta;\n    stateStrokeOnSelect[interactionType] = stateStrokeOnSelect[interactionType] || {};\n\n    if (apply && !stateStrokeOnSelect[interactionType][styleType]) {\n        // apply\n        stateStrokeOnSelect[interactionType][styleType] = style.props.value;\n        context.addOverlayPath(elem.node().parentElement, elem.node(), datum, style);\n    }\n    if (!apply && stateStrokeOnSelect[interactionType][styleType]) {\n        // remove\n        stateStrokeOnSelect[interactionType][styleType] = originalStrokeOnSelect[styleType];\n        context.removeOverlayPath(datum, originalStrokeOnSelect);\n    }\n    return true;\n};\n\nconst highlightStrokeOnInteraction = (context, elem, apply, interactionType, style) => {\n    const datum = elem.data()[0];\n    const styleType = style.type;\n    const { originalStrokeOnHighlight, stateStrokeOnHighlight } = datum.meta;\n    stateStrokeOnHighlight[interactionType] = stateStrokeOnHighlight[interactionType] || {};\n\n    if (apply && !stateStrokeOnHighlight[interactionType][styleType]) {\n        // apply\n        stateStrokeOnHighlight[interactionType][styleType] = style.props.value;\n        context.addOverlayPath(elem.node().parentElement, elem.node(), datum, style);\n    }\n    if (!apply && stateStrokeOnHighlight[interactionType][styleType]) {\n        // remove\n        stateStrokeOnHighlight[interactionType][styleType] = originalStrokeOnHighlight[styleType];\n        context.removeOverlayPath(datum, originalStrokeOnHighlight);\n    }\n    return true;\n};\n\nexport const interactionStyleMap = {\n    focusStroke: {\n        stroke: (...params) => strokeInteractionStyle(...params),\n        'stroke-width': (...params) => strokeInteractionStyle(...params)\n    },\n    highlight: {\n        stroke: (...params) => highlightStrokeOnInteraction(...params),\n        'stroke-width': (...params) => highlightStrokeOnInteraction(...params)\n    }\n};\n","import {\n    Voronoi,\n    Scales,\n    makeElement,\n    getQualifiedClassName,\n    selectElement,\n    appendElement,\n    getSymbol\n} from 'muze-utils';\nimport drawSymbols from './renderer';\nimport { defaultConfig } from './default-config';\nimport {\n    attachDataToVoronoi,\n    getPlotMeasurement,\n    getMarkId\n} from '../../helpers';\nimport './styles.scss';\nimport { pointTranslators, interactionStyleMap, getStrokeWidthByPosition } from './helper';\n\nexport const PointLayerMixin = superclass => class extends superclass {\n    /**\n     * Creates an instance of PointLayer.\n     * @param {*} args\n     * @memberof PointLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n        this._bandScale = Scales.band();\n        this._overlayPath = {};\n        this.formattedUids = [];\n    }\n\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Returns the default configuration of the point layer\n     * @return {Object} Default configuration of the point layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = super.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    static drawFn () {\n        return drawSymbols;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config = {}) {\n        return pointTranslators[this.coord()](data, config, this);\n    }\n\n    /**\n     * Renders the plot in the given container.\n     *\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {BarLayer} Instance of bar layer\n     */\n    render (container) {\n        let maxSize = 0;\n        let seriesClassName;\n        const config = this.config();\n        const keys = this._transformedData.map(d => d.key);\n        const { transition, className, defClassName, classPrefix } = config;\n        const normalizedData = this._normalizedData;\n        const containerSelection = selectElement(container);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        this._points = [];\n        this._pointMap = {};\n\n        containerSelection.classed(qualifiedClassName.join(' '), true).classed(className, true);\n\n        this._points = this.generateDataPoints(normalizedData, keys);\n        this._graphicElems = {};\n\n        const schema = this.data().getSchema();\n        makeElement(container, 'g', this._points, null, {\n            update: (group, points) => {\n                maxSize = Math.max(maxSize, ...points.map(d => d.size));\n                seriesClassName = `${qualifiedClassName[0]}`;\n                this.constructor.drawFn()({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    interpolate: config.interpolate,\n                    className: seriesClassName,\n                    transition,\n                    keyFn: v => getMarkId(v.source, schema)\n                });\n            }\n        }, data => data[0].rowId);\n        this._maxSize = Math.sqrt(maxSize / Math.PI) * 2;\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    generateDataPoints (normalizedData, keys) {\n        const [widthMetrics, heightMetrics] = getPlotMeasurement(this, keys);\n        const offsetXValues = widthMetrics.offsetValues || [];\n        const offsetYValues = heightMetrics.offsetValues || [];\n        return normalizedData.map((dataArr, i) => {\n            const measurementConf = this.getMeasurementConfig(offsetXValues[i], offsetYValues[i], widthMetrics.span,\n                    heightMetrics.span);\n            return this.translatePoints(dataArr, measurementConf);\n        }).filter(d => d.length);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0) + widthSpan / 2,\n                y: (offsetY || 0) + heightSpan / 2\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n\n    /**\n     * Gets the nearest point from a position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Point details\n     */\n    getNearestPoint (x, y) {\n        const distanceLimit = Math.max(this._maxSize, this.config().nearestPointThreshold);\n\n        if (!this.data()) {\n            return null;\n        }\n\n        const point = this._voronoi.find(x, y, distanceLimit);\n        const dimensions = point && point.data.data.update;\n        const radius = point ? Math.sqrt(point.data.data.size / Math.PI) : 0;\n\n        if (point) {\n            const { source, rowId } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(source, rowId);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: radius,\n                    height: radius\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n\n    getInteractionStyles (interactionType, styleType) {\n        return (interactionStyleMap[interactionType] || {})[styleType];\n    }\n\n    addOverlayPath (container, refElement, data, style) {\n        let pathElement;\n\n        if (this._overlayPath[data.rowId]) {\n            pathElement = this._overlayPath[data.rowId];\n        } else {\n            pathElement = makeElement(container, 'path', [data.update], null, {}, d => `${d.x} ${data.rowId}`);\n            pathElement.style('fill', 'none');\n            pathElement.attr('id', data.rowId);\n            this._overlayPath[data.rowId] = pathElement;\n        }\n\n        if (style.type === 'stroke-width') {\n            const { position } = style.props;\n            // get radius as per stroke position\n            let radius = Math.sqrt(data.size / Math.PI);\n            radius = getStrokeWidthByPosition(position, radius);\n\n            const size = data.size + radius;\n            if (typeof data.shape === 'string') {\n                const path = getSymbol(data.shape).size(size);\n                pathElement.attr('d', path);\n            }\n        }\n\n        pathElement.style(style.type, style.props.value);\n        appendElement(refElement, pathElement.node());\n    }\n\n    removeOverlayPath (data, style) {\n        const currentPath = this._overlayPath[data.rowId];\n        Object.keys(style).forEach(s => currentPath.style(s, style[s]));\n    }\n};\n","import {\n    mix\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { POINT_LAYER } from '../../enums/constants';\nimport { PointLayerMixin } from './point-mixin';\n\n/**\n * This layer is used to create various symbols for each data point. This is commonly used in\n * scatterplot visualizations. The mark type of this layer is ```point```.\n *\n * @public\n *\n * @class\n * @module PointLayer\n * @extends BaseLayer\n */\nexport default class PointLayer extends mix(BaseLayer).with(PointLayerMixin) {\n    static formalName () {\n        return POINT_LAYER;\n    }\n}\n","import { makeElement, easeFns } from 'muze-utils';\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} datum\n * @param {*} index\n * @param {*} context\n */\nconst transitionBars = (layer, elem, datum, index, context) => {\n    const { transition } = context;\n    const { duration, disabled, effect } = transition;\n    const selection = elem;\n\n    const selTransition = disabled ? selection :\n        selection.transition()\n        .duration(duration)\n        .ease(easeFns[effect])\n        .on('end', layer.registerAnimationDoneHook());\n    const update = datum.update || datum;\n    const updateStyle = datum.style || {};\n    datum.className && selection.classed(datum.className, true);\n    Object.entries(update).forEach(attr => (!isNaN(attr[1]) && selTransition.attr(attr[0], attr[1])));\n    Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n};\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} d\n */\nconst barEnterFn = (elem, d) => {\n    const selection = elem;\n    const enter = d.enter || {};\n    Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n};\n\n/**\n * Draws rectangles by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Bar Selection\n */\n/* istanbul ignore next */ export const drawRects = (params) => {\n    const { layer, points, container, keyFn, className } = params;\n    const graphicElems = layer._graphicElems;\n    const updateFns = {\n        enter (elem, d) {\n            barEnterFn(elem, d);\n        },\n        update (elem, d, i) {\n            graphicElems[d.rowId] = elem;\n            transitionBars(layer, elem, d, i, params);\n        }\n    };\n\n    return makeElement(container, 'g', points, null, {\n        update: (group, d) => {\n            makeElement(group.node(), 'rect', data => [data], null, updateFns, keyFn);\n            group.attr('class', `${className}-${d.rowId}`);\n            group.classed(d.className, true);\n        }\n    }, keyFn);\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-bar',\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            props: {\n                value: 'black'\n            }\n        }, {\n            type: 'stroke-width',\n            props: {\n                value: 1,\n                position: 'outside'\n            }\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, 0, -0.5]\n        }],\n        focusStroke: [\n            {\n                type: 'stroke',\n                props: {\n                    value: 'black'\n                }\n            }, {\n                type: 'stroke-width',\n                props: {\n                    value: 2,\n                    position: 'outside'\n                }\n            }\n        ]\n    },\n    transform: {\n        type: 'stack'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    innerPadding: 0.1,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        x0: {},\n        y0: {}\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-bar-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-bar-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-bar-selected`\n        }\n    }\n};\n","import { MeasureSubtype, DimensionSubtype } from 'muze-utils';\nimport { STACK } from '../../enums/constants';\nimport {\n    positionPoints,\n    getIndividualClassName,\n    getColorMetaInf,\n    resolveEncodingValues\n} from '../../helpers';\n\nconst positionRetriever = {\n    x: (xPx, isNegativeVal, barBasePos) => (isNegativeVal ? [xPx, barBasePos] : [barBasePos, xPx]),\n    y: (yPx, isNegativeVal, barBasePos) => (isNegativeVal ? [barBasePos, yPx] : [yPx, barBasePos])\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fieldInfo\n * @param {*} config\n * @param {*} data\n *\n */\nconst resolveDimByField = (type, axesInfo, config, data) => {\n    const spaceType = type === 'x' ? 'width' : 'height';\n    const [fieldType, axis] = [config[`${type}FieldType`], axesInfo[`${type}Axis`]];\n    const {\n        transformType,\n        sizeEncoding,\n        sizeConfig,\n        measurement\n    } = config;\n\n    const sizeValue = sizeEncoding.value;\n    let enter = 0;\n    let pos;\n    let space = 0;\n    let enterSpace = 0;\n    if (fieldType !== undefined) {\n        if (config[`${type}0Field`]) {\n            const minVal = data[type];\n            const maxVal = data[`${type}0`];\n            let min;\n            let max;\n            if (minVal === null || maxVal === null) {\n                return {\n                    enterSpace: undefined,\n                    enter: undefined,\n                    pos: undefined,\n                    space: undefined\n                };\n            } else if (fieldType === MeasureSubtype.CONTINUOUS || fieldType === DimensionSubtype.TEMPORAL) {\n                min = Math.min(minVal, maxVal);\n                max = Math.max(minVal, maxVal);\n            } else {\n                min = minVal;\n                max = maxVal;\n            }\n            const scales = type === 'x' ? [min, max] : [max, min];\n            pos = axis.getScaleValue(scales[0]) + axis.getUnitWidth() / 2;\n            space = Math.abs(axis.getScaleValue(scales[1]) - pos) + axis.getUnitWidth() / 2;\n\n            enter = pos;\n            enterSpace = 0;\n        } else if (fieldType === DimensionSubtype.CATEGORICAL || fieldType === DimensionSubtype.TEMPORAL) {\n            pos = axis.getScaleValue(data[type]) +\n                (sizeConfig[type === 'x' ? 'barWidthOffset' : 'barHeightOffset'] || 0);\n\n            space = sizeConfig[type === 'x' ? 'barWidth' : 'barHeight'];\n            if (sizeValue !== undefined) {\n                const diffPx = sizeValue * space;\n                space -= diffPx;\n                pos += diffPx / 2;\n            }\n            enter = pos;\n            enterSpace = space;\n        } else {\n            const minDomVal = axis.domain()[0];\n            const barBasePos = minDomVal < 0 ? axis.getScaleValue(0) : axis.getScaleValue(minDomVal);\n            pos = axis.getScaleValue(data[type]);\n            let endPos = axis.getScaleValue(data[`${type}0`]);\n\n            enterSpace = 0;\n            const isNegativeVal = data[type] < 0;\n            if (transformType !== STACK) {\n                [pos, endPos] = positionRetriever[type](pos, isNegativeVal, barBasePos);\n            }\n            space = Math.abs(pos - endPos);\n            enter = barBasePos;\n        }\n    } else {\n        pos = 0;\n        space = measurement[spaceType];\n    }\n\n    return {\n        enterSpace,\n        enter,\n        pos,\n        space\n    };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} config\n * @param {*} axes\n *\n */\nconst resolveDimensions = (data, config, axes) => {\n    const axesInfo = {\n        xAxis: axes.x,\n        yAxis: axes.y\n    };\n    const {\n        enterSpace: enterWidth,\n        enter: enterX,\n        pos: xPos,\n        space: width\n    } = resolveDimByField('x', axesInfo, config, data);\n\n    const {\n        enterSpace: enterHeight,\n        enter: enterY,\n        pos: yPos,\n        space: height\n    } = resolveDimByField('y', axesInfo, config, data);\n    return {\n        enter: {\n            x: enterX,\n            y: enterY,\n            width: enterWidth,\n            height: enterHeight\n        },\n        update: {\n            x: xPos,\n            y: yPos,\n            width,\n            height\n        }\n    };\n};\n\nexport const strokeWidthPositionMap = ({ width, position }) => {\n    const offset = width / 2;\n    const strokeWidthWithOffsetMap = {\n        center: {\n            M: { x: 0, y: 0 },\n            L1: { x: 0, y: 0 },\n            L2: { x: 0, y: 0 },\n            L3: { x: 0, y: 0 }\n        },\n        inside: {\n            M: { x: +offset, y: +offset },\n            L1: { x: -offset, y: +offset },\n            L2: { x: -offset, y: -offset },\n            L3: { x: +offset, y: -offset }\n        },\n        outside: {\n            M: { x: -offset, y: -offset },\n            L1: { x: +offset, y: -offset },\n            L2: { x: +offset, y: +offset },\n            L3: { x: -offset, y: +offset }\n        }\n    };\n    return strokeWidthWithOffsetMap[position];\n};\n\n/**\n * Generates an array of objects containing x, y, width and height of the bars from the data\n * @param  {Array.<Array>} data Data Array\n * @param  {Object} encoding  Config\n * @param  {Object} axes     Axes object\n * @param {Object} conf config object for point generation\n * @return {Array.<Object>}  Array of points\n */\nexport const getTranslatedPoints = (context, data, sizeConfig) => {\n    let points = [];\n    const encoding = context.config().encoding;\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const sizeEncoding = encoding.size || {};\n    const {\n            x0Field,\n            y0Field,\n            xFieldSubType,\n            yFieldSubType\n        } = context.encodingFieldsInf();\n    const measurement = context.measurement();\n    const isXDim = xFieldSubType === DimensionSubtype.CATEGORICAL || xFieldSubType === DimensionSubtype.TEMPORAL;\n    const isYDim = yFieldSubType === DimensionSubtype.CATEGORICAL || yFieldSubType === DimensionSubtype.TEMPORAL;\n    const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n    const transformType = context.transformType();\n\n    for (let i = 0, len = data.length; i < len; i++) {\n        const d = data[i];\n        const dimensions = resolveDimensions(d, {\n            xFieldType: xFieldSubType,\n            yFieldType: yFieldSubType,\n            x0Field,\n            y0Field,\n            transformType,\n            measurement,\n            sizeConfig,\n            sizeEncoding\n        }, axes);\n\n        let color = colorAxis.getColor(d.color);\n\n        const update = dimensions.update;\n        const resolvedEncodings = resolveEncodingValues({\n            values: {\n                x: update.x,\n                y: update.y,\n                width: update.width,\n                height: update.height,\n                color\n            },\n            data: d\n        }, i, data, context);\n        color = resolvedEncodings.color;\n        const { x, y, width, height } = resolvedEncodings;\n        const style = {\n            fill: color\n        };\n\n        if (!isNaN(x) && !isNaN(y) && d.rowId !== undefined) {\n            let point = null;\n            point = {\n                enter: dimensions.enter,\n                update: {\n                    x,\n                    y,\n                    width,\n                    height\n                },\n                source: d.source,\n                rowId: d.rowId,\n                style,\n                meta: getColorMetaInf(style, colorAxis, encoding.interactions)\n            };\n            point.className = getIndividualClassName(d, i, data, context);\n            points.push(point);\n            // Store each point in a hashmap with key as the dimensional or temporal field value\n            context.cachePoint(d[key], point);\n        }\n    }\n\n    points = positionPoints(context, points);\n    return points;\n};\n\n// This is invoked only on bar selection for creation of path around the bar\nconst selectStrokeOnInteraction = (context, elem, apply, interactionType, style, mountPoint) => {\n    const datum = elem.data()[0];\n    const styleType = style.type;\n    const { originalStrokeOnSelect, stateStrokeOnSelect } = datum.meta;\n    stateStrokeOnSelect[interactionType] = stateStrokeOnSelect[interactionType] || {};\n\n    if (apply && !stateStrokeOnSelect[interactionType][styleType]) {\n        // apply\n        stateStrokeOnSelect[interactionType][styleType] = style.props.value;\n        context.addOverlayPath(mountPoint, elem.node(), datum, style);\n    }\n    if (!apply && stateStrokeOnSelect[interactionType][styleType]) {\n        // remove\n        stateStrokeOnSelect[interactionType][styleType] = originalStrokeOnSelect[styleType];\n        context.removeOverlayPath(datum, originalStrokeOnSelect);\n    }\n    return true;\n};\n\nconst highlightStrokeOnInteraction = (context, elem, apply, interactionType, style, mountPoint) => {\n    const datum = elem.data()[0];\n    const styleType = style.type;\n    const { originalStrokeOnHighlight, stateStrokeOnHighlight } = datum.meta;\n    stateStrokeOnHighlight[interactionType] = stateStrokeOnHighlight[interactionType] || {};\n\n    if (apply && !stateStrokeOnHighlight[interactionType][styleType]) {\n        // apply\n        stateStrokeOnHighlight[interactionType][styleType] = style.props.value;\n        context.addOverlayPath(mountPoint, elem.node(), datum, style);\n    }\n    if (!apply && stateStrokeOnHighlight[interactionType][styleType]) {\n        // remove\n        stateStrokeOnHighlight[interactionType][styleType] = originalStrokeOnHighlight[styleType];\n        context.removeOverlayPath(datum, originalStrokeOnHighlight);\n    }\n    return true;\n};\n\nexport const interactionStyleMap = {\n    focusStroke: {\n        stroke: (...params) => selectStrokeOnInteraction(...params),\n        'stroke-width': (...params) => selectStrokeOnInteraction(...params)\n    },\n    highlight: {\n        stroke: (...params) => highlightStrokeOnInteraction(...params),\n        'stroke-width': (...params) => highlightStrokeOnInteraction(...params)\n    }\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    createElements,\n    clipElement,\n    FieldType,\n    Scales,\n    getObjProp,\n    isSimpleObject,\n    makeElement,\n    appendElement\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawRects } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getPlotMeasurement, getValidTransformForAggFn } from '../../helpers';\nimport './styles.scss';\nimport { getTranslatedPoints, strokeWidthPositionMap, interactionStyleMap } from './bar-helper';\n\nconst { MEASURE } = FieldType;\n\nexport const BarLayerMixin = superclass => class extends superclass {\n    /**\n     * Creates an instance of bar layer\n     */\n    constructor (...params) {\n        super(...params);\n        this._bandScale = Scales.band();\n        this._plotPadding = {\n            x: 0,\n            y: 0\n        };\n        this._plotSpan = {\n            x: 0,\n            y: 0\n        };\n        this._pointMap = {};\n        this._overlayPath = {};\n    }\n\n    elemType () {\n        return 'rect';\n    }\n\n    /**\n     * Returns the default configuration of the bar layer\n     * @return {Object} Default configuration of the bar layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const colorField = encoding.color.field;\n        const transform = config.transform;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    calculateDomainFromData (data, encodingFieldInf, fieldsConfig) {\n        const domain = super.calculateDomainFromData(data, encodingFieldInf, fieldsConfig);\n        ['x', 'y'].forEach((d) => {\n            if (encodingFieldInf[`${d}FieldType`] === MEASURE && getObjProp(domain[d], 'length')) {\n                if (encodingFieldInf[`${d}0Field`]) {\n                    domain[d] = domain[d].sort((a, b) => a - b);\n                } else {\n                    domain[d][0] = Math.min(domain[d][0], 0);\n                    domain[d][1] = Math.max(0, domain[d][1]);\n                }\n            }\n        });\n        return domain;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the bars from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @param {Object} conf config object for point generation\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, sizeConfig) {\n        return getTranslatedPoints(this, data, sizeConfig);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGGroup} container SVGGroup where plot will be rendered.\n     * @return {BarLayer} Instance of bar layer.\n     */\n    render (container) {\n        const config = this.config();\n        const transition = config.transition;\n        const normalizedDataArr = this._normalizedData;\n        const transformedData = this._transformedData;\n        const keys = transformedData.map(d => d.key);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const height = axes.y && axes.y.scale().range()[0];\n        const width = axes.x && axes.x.scale().range()[1];\n        const defClassName = config.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const className = config.className;\n        const containerSelection = selectElement(container);\n        const dimensions = Object.values(fieldsConfig).filter(e => e.def.type === FieldType.DIMENSION)\n            .map(e => e.index);\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        clipElement(container, {\n            x: 0,\n            y: 0,\n            width,\n            height\n        }, `id-${this.id()}`);\n\n        this._points = this.generateDataPoints(normalizedDataArr, keys);\n        this._graphicElems = {};\n        const paths = Object.keys(this._overlayPath);\n        paths.forEach(path => this._overlayPath[path].remove());\n        this._overlayPath = {};\n\n        const barContainer = makeElement(containerSelection, 'g', [1], 'muze-layer-bars', {}, null);\n        makeElement(containerSelection, 'g', [1], 'muze-overlay-paths', {}, null);\n        createElements({\n            data: this._points,\n            container: barContainer.node(),\n            selector: 'g',\n            append: 'g',\n            each: (points, group, i) => {\n                const seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n                group.style('display', 'block');\n                drawRects({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: {},\n                    keyFn: d => dimensions.map(key => d.source[key]).join('-')\n                });\n            }\n        });\n\n        return this;\n    }\n\n    generateDataPoints (normalizedData, keys) {\n        const [barWidthMetrics, barHeightMetrics] = getPlotMeasurement(this, keys);\n        const barWidthOffsets = barWidthMetrics.offsetValues || [];\n        const barHeightOffsets = barHeightMetrics.offsetValues || [];\n        this._plotSpan = {\n            x: barWidthMetrics.groupSpan || 0,\n            y: barHeightMetrics.groupSpan || 0\n        };\n        this._plotPadding = {\n            x: barWidthMetrics.padding || 0,\n            y: barHeightMetrics.padding || 0\n        };\n\n        this._pointMap = {};\n        return normalizedData.map((data, i) => this.translatePoints(data,\n            {\n                barWidth: barWidthMetrics.span,\n                barWidthOffset: barWidthOffsets[i] || 0,\n                barHeight: barHeightMetrics.span,\n                barHeightOffset: barHeightOffsets[i] || 0\n            }));\n    }\n\n    getPlotPadding () {\n        return this._plotPadding;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Gets the nearest point of the position passed.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point.\n     */\n    getNearestPoint (x, y, { event }) {\n        if (!this.data()) {\n            return null;\n        }\n        return this.getDataFromEvent(event);\n    }\n\n    getDataFromEvent (event) {\n        const dataPoint = selectElement(event.target).data()[0];\n        if (isSimpleObject(dataPoint)) {\n            const values = dataPoint && dataPoint.source;\n            let identifiers = null;\n            if (values) {\n                identifiers = this.getIdentifiersFromData(values, dataPoint.rowId);\n            }\n            return {\n                dimensions: [dataPoint.update],\n                id: identifiers,\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n\n    getPlotSpan () {\n        return this._plotSpan;\n    }\n\n    hasPlotSpan () {\n        return true;\n    }\n\n    getInteractionStyles (interactionType, styleType) {\n        return (interactionStyleMap[interactionType] || {})[styleType];\n    }\n\n    addOverlayPath (container, refElement, data, style) {\n        let pathElement;\n\n        if (this._overlayPath[data.rowId]) {\n            pathElement = this._overlayPath[data.rowId];\n        } else {\n            const pathGroup = makeElement(container, 'g', [1], null, {}, d => `${d.x} ${data.rowId}`);\n            pathElement = makeElement(pathGroup, 'path', [data.update], null, {}, d => `${d.x} ${data.rowId}`);\n\n            pathElement.style('fill', 'none');\n            pathElement.attr('id', data.rowId);\n            this._overlayPath[data.rowId] = pathElement;\n        }\n\n        if (style.type === 'stroke-width') {\n            const { L1, L2, L3, M } = strokeWidthPositionMap({\n                width: style.props.value,\n                position: style.props.position\n            });\n\n            pathElement.attr('d', d => `M ${d.x + M.x} ${d.y + M.y}\n            L ${d.x + d.width + L1.x} ${d.y + L1.y}\n            L ${d.x + d.width + L2.x} ${d.y + d.height + L2.y}\n            L${d.x + L3.x} ${d.y + d.height + L3.y} Z`);\n        }\n\n        pathElement.style(style.type, style.props.value);\n        appendElement(container, pathElement.node());\n    }\n\n    removeOverlayPath (data, style) {\n        const currentPath = this._overlayPath[data.rowId];\n        Object.keys(style).forEach(s => currentPath.style(s, style[s]));\n    }\n};\n\n","import { mix } from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { BAR_LAYER } from '../../enums/constants';\nimport { BarLayerMixin } from './bar-mixin';\nimport { BaseLayerMixin } from '../../base-layer/base-mixin';\nimport './styles.scss';\n\n/**\n * Bar layer creates rectangle marks. The mark type of this layer is ```bar```. This layer can be used\n * to create stacked or grouped bars, range bars, heatmap plots and also reference bands by using\n * the encoding properties.\n *\n * @public\n *\n * @class\n * @module BarLayer\n * @extends BaseLayer\n */\nexport default class BarLayer extends mix(BaseLayer).with(BaseLayerMixin, BarLayerMixin) {\n    static formalName () {\n        return BAR_LAYER;\n    }\n}\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-tick',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    interaction: {\n        highlight: [\n            {\n                type: 'stroke',\n                props: {\n                    value: 'black'\n                }\n            }, {\n                type: 'stroke-width',\n                props: {\n                    value: 1,\n                    position: 'center'\n                }\n            }\n        ],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }]\n    },\n    innerPadding: 0.1,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    interpolate: 'linear',\n    encoding: {\n        color: { },\n        x: {},\n        y: {},\n        x0: {},\n        y0: {},\n        radius: {},\n        radius0: {},\n        angle: {},\n        angle0: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-tick-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-tick-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-tick-selected`\n        }\n    }\n};\n\n","import { selectElement, Symbols, pathInterpolators } from 'muze-utils';\n\nconst line = Symbols.line;\n\n/**\n * Draws ticks by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Ticks Selection\n */\nexport default /* istanbul ignore next */ (params) => {\n    const { points, container, keyFn, className, interpolate, layer } = params;\n    const mount = selectElement(container);\n    const ticks = mount.selectAll('path').data(points, keyFn);\n    const ticksEnter = ticks.enter().append('path');\n    const graphicElems = layer._graphicElems;\n    mount.attr('class', className || '');\n    ticksEnter.each(function (d) {\n        const selection = selectElement(this);\n        const enter = d.enter || {};\n        Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n    });\n\n    ticks.exit().remove();\n    return ticks.merge(ticksEnter)\n                    .each(function (d) {\n                        const selection = selectElement(this);\n                        graphicElems[d.rowId] = selection;\n                        const update = d.update;\n                        const updateStyle = d.style || {};\n                        const x0 = update.x0 !== undefined ? update.x0 : update.x;\n                        const y0 = update.y0 !== undefined ? update.y0 : update.y;\n                        const curveInterpolatorFn = pathInterpolators[interpolate];\n                        const linepath = line()\n                            .curve(curveInterpolatorFn)\n                            .x(e => e[0])\n                            .y(e => e[1]);\n                        d.className && selection.classed(d.className, true);\n                        selection.attr('d', linepath([[update.x, update.y], [x0, y0]]));\n                        Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n                    });\n};\n\n","export const getStrokeWidthByPosition = (position, radius) => {\n    const strokeWidthWithOffsetMap = {\n        center: -radius,\n        inside: -(radius * Math.PI),\n        outside: +(radius * Math.PI)\n    };\n    return strokeWidthWithOffsetMap[position];\n};\n\nexport const interactionStyleMap = {\n    // focusStroke: {\n    //     stroke: (...params) => strokeInteractionStyle(...params),\n    //     'stroke-width': (...params) => strokeInteractionStyle(...params)\n    // },\n    highlight: {\n        stroke: () => true,\n        'stroke-width': () => true\n    },\n    focusStroke: {\n        stroke: () => true,\n        'stroke-width': () => true\n    }\n};\n","import { FieldType } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport drawTicks from './renderer';\nimport './styles.scss';\nimport { positionPoints, getIndividualClassName,\n    getColorMetaInf, resolveEncodingValues, toCartesianCoordinates } from '../../helpers';\nimport { interactionStyleMap } from './helper';\n\nconst pointTranslators = {\n    polar: (data, config = {}, layerInst) => {\n        const axes = layerInst.axes();\n        let points = [];\n        const { radius: radiusAxis, angle: angleAxis, angle0: angle0Axis } = axes;\n        const measurement = layerInst.measurement();\n\n        const colorAxis = axes.color;\n        const angleV = {};\n        const angle0V = {};\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const color = colorAxis.getColor(d.color);\n            const angles = angleAxis.getScaleValue(d.angle);\n            !angleV[d.angle] && (angleV[d.angle] = 0);\n            const { startAngle, endAngle } = angles[angleV[d.angle]++];\n            const angles0 = angle0Axis.getScaleValue(d.angle0);\n            !angle0V[d.angle0] && (angle0V[d.angle0] = 0);\n            const { startAngle: startAngle0, endAngle: endAngle0 } = angles0[angle0V[d.angle0]++];\n            const radius = radiusAxis.getOuterRadius(d.radius);\n            const angle = (startAngle + endAngle) / 2;\n            const angle0 = (startAngle0 + endAngle0) / 2;\n            const resolvedVal = resolveEncodingValues({\n                values: {\n                    radius,\n                    radius0: radiusAxis.getInnerRadius(d.radius0),\n                    color,\n                    angle,\n                    angle0,\n                    startAngle,\n                    endAngle,\n                    startAngle0,\n                    endAngle0\n                },\n                data: d\n            }, i, data, layerInst);\n            const style = {\n                stroke: resolvedVal.color\n            };\n\n            const point = {\n                enter: {},\n                update: {\n                    radius: resolvedVal.radius,\n                    radius0: resolvedVal.radius0,\n                    angle: resolvedVal.angle,\n                    angle0: resolvedVal.angle0\n                },\n                style,\n                source: d.source,\n                rowId: d.rowId,\n                meta: getColorMetaInf(style, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n        points = toCartesianCoordinates(positionPoints(layerInst, points), measurement, true);\n        return points;\n    },\n    cartesian: (data, config = {}, layerInst) => {\n        const axes = layerInst.axes();\n        let points = [];\n        const { x: xAxis, y: yAxis } = axes;\n        const {\n                xField,\n                yField,\n                x0Field,\n                y0Field,\n                xFieldType,\n                yFieldType\n            } = layerInst.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const measurement = layerInst.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n        const { x: xSpan, y: ySpan } = config.span;\n        for (let i = 0, len = data.length; i < len; i++) {\n            let xPx;\n            let x0Px;\n            let y0Px;\n            let yPx;\n            const d = data[i];\n            const row = d.source;\n            if (xField) {\n                xPx = xAxis.getScaleValue(d.x) + offsetX;\n                x0Px = xPx + xSpan;\n            }\n\n            if (yField) {\n                yPx = yAxis.getScaleValue(d.y) + offsetY;\n                y0Px = yPx !== null ? yPx + ySpan : null;\n            }\n\n            if (!xField) {\n                xPx = 0;\n                x0Px = measurement.width;\n                if (!isNaN(yPx)) {\n                    yPx += ySpan / 2;\n                    y0Px = yPx;\n                }\n            }\n\n            if (!yField) {\n                yPx = 0;\n                y0Px = measurement.height;\n                x0Px = xPx += xSpan / 2;\n            }\n\n            if (x0Field) {\n                x0Px = xAxis.getScaleValue(d.x0) + xSpan;\n                yPx += ySpan / 2;\n                y0Px -= ySpan / 2;\n            }\n\n            if (y0Field) {\n                y0Px = yAxis.getScaleValue(d.y0) + ySpan;\n                xPx += xSpan / 2;\n                x0Px -= xSpan / 2;\n            }\n            const color = colorAxis.getColor(d.color);\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    x0: x0Px,\n                    y0: y0Px,\n                    color\n                },\n                data: d\n            }, i, data, layerInst);\n            const style = {\n                stroke: resolvedEncodings.color\n            };\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {},\n                    update: {\n                        x: resolvedEncodings.x,\n                        y: resolvedEncodings.y,\n                        x0: resolvedEncodings.x0,\n                        y0: resolvedEncodings.y0\n                    },\n                    style,\n                    source: row,\n                    rowId: d.rowId,\n                    meta: getColorMetaInf(style, colorAxis)\n                };\n                point.className = getIndividualClassName(d, i, data, layerInst);\n                points.push(point);\n                layerInst.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(layerInst, points);\n        return points;\n    }\n};\n\n/**\n * This layer is used to create small lines. The orientation of the line is determined by the positional\n * encoding properties x0 and y0. The mark type of the layer is ```tick```.\n *\n * @public\n *\n * @class\n * @module TickLayer\n * @extends BaseLayer\n */\nexport const TickLayerMixin = superclass => class extends superclass {\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'tick';\n    }\n\n    static drawFn () {\n        return drawTicks;\n    }\n\n    elemType () {\n        return 'path';\n    }\n\n    getInteractionStyles (interactionType, styleType) {\n        return (interactionStyleMap[interactionType] || {})[styleType];\n    }\n\n    /**\n    * Generates an array of objects containing x, y, width and height of the points from the data\n    * @param  {Array.<Array>} data Data Array\n    * @param  {Object} encoding  Config\n    * @param  {Object} axes     Axes object\n    * @return {Array.<Object>}  Array of points\n    */\n    translatePoints (data, config) {\n        return pointTranslators[this.coord()](data, config, this);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0),\n                y: (offsetY || 0)\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n};\n","import { mix } from 'muze-utils';\nimport { PointLayerMixin } from '../point';\nimport { BaseLayerMixin, BaseLayer } from '../../base-layer';\nimport { TickLayerMixin } from './tick-mixin';\n\n/**\n * This layer is used to create small lines. The orientation of the line is determined by the positional\n * encoding properties x0 and y0. The mark type of the layer is ```tick```.\n *\n * @public\n *\n * @class\n * @module TickLayer\n * @extends BaseLayer\n */\nexport default class TickLayer extends mix(BaseLayer).with(BaseLayerMixin, PointLayerMixin, TickLayerMixin) {\n    static formalName () {\n        return 'tick';\n    }\n}\n","export const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { isSimpleObject, mergeRecursive, getObjProp } from 'muze-utils';\n\nconst parseLayerDefinition = (sink, definition, layerDef, layerType) => {\n    for (const key in definition) {\n        if (Object.hasOwnProperty.call(definition, key)) {\n            let strs;\n            let propValue;\n            const def = definition[key];\n            if (isSimpleObject(def)) {\n                sink[key] = {};\n                parseLayerDefinition(sink[key], def, layerDef, layerType);\n            } else if (typeof def === 'string' && (strs = def.split('.')) && strs[0] === layerType) {\n                propValue = getObjProp(layerDef, ...strs.slice(1, strs.length));\n                if (propValue !== undefined) {\n                    sink[key] = propValue;\n                }\n            } else {\n                sink[key] = def;\n            }\n        }\n    }\n};\n\nconst sanitizeEncoding = (encoding) => {\n    // Create object for each encoding value if encoding value is a string\n    for (const key in encoding) {\n        if (typeof encoding[key] === 'string') {\n            encoding[key] = {\n                field: encoding[key]\n            };\n        }\n    }\n};\n\n/**\n * Layer Factory creates layers based on the layer type. All types of layers needs to register in\n * the layer factory. For getting a layer instance, getLayer method needs to invoked with the\n * layerType and other arguments. It also registers the definition of composite layers.\n *\n * @public\n *\n * @module LayerFactory\n */\nconst layerFactory = (() => {\n    const compositeLayers = {};\n    const factoryObj = {\n        setLayerRegistry: (reg) => {\n            factoryObj._layerRegistry = reg;\n        },\n        getSerializedConf: (mark, layerDef) => {\n            let serializedDefs;\n            const defs = compositeLayers[mark];\n            const newConf = mergeRecursive({}, layerDef);\n\n                // If it is a composite layer then resolve all the definitions of each unit layer\n            if (defs) {\n                serializedDefs = defs.map((unitLayerDef) => {\n                    const sDef = {};\n                    parseLayerDefinition(sDef, unitLayerDef, newConf, mark);\n                    sanitizeEncoding(sDef.encoding);\n                    return sDef;\n                });\n            } else {\n                const encoding = newConf.encoding;\n                // Create object for each encoding value if encoding value is a string\n                sanitizeEncoding(encoding);\n                serializedDefs = newConf;\n            }\n\n            return serializedDefs;\n        },\n        getLayerInstance: (layerDef, ...params) => {\n            const layerRegistry = factoryObj._layerRegistry;\n            layerDef = !(layerDef instanceof Array) ? [layerDef] : layerDef;\n            const instances = layerDef.map((layerObj) => {\n                const layerConstructor = layerRegistry[layerObj.mark];\n                return layerConstructor.create(...params);\n            });\n            return instances.length === 1 ? instances[0] : instances;\n        },\n        getLayerClass: mark => factoryObj._layerRegistry[mark],\n        /**\n         * Registers a new composite layer definition in the layer factory.\n         *\n         * @public\n         *\n         * @param {string} layerType Mark type of the new composite layer.\n         * @param {Array} layerDefs Layer definitions of the composite layer.\n         */\n        composeLayers: (layerType, layerDefs) => {\n            compositeLayers[layerType] = layerDefs;\n        },\n        sanitizeLayerConfig: (layerDef) => {\n            const newConf = mergeRecursive({}, layerDef);\n            sanitizeEncoding(newConf.encoding);\n            return newConf;\n        }\n    };\n    return factoryObj;\n})();\n\nexport default layerFactory;\n","import layerFactory from './layer-factory';\n\nexport default layerFactory;\n","import { AreaLayer } from './layers/area';\nimport { ArcLayer } from './layers/arc';\nimport { LineLayer } from './layers/line';\nimport { TextLayer } from './layers/text';\nimport { PointLayer } from './layers/point';\nimport { BarLayer } from './layers/bar';\nimport { BaseLayer } from './base-layer';\nimport * as LAYER_TYPES from './enums/layer-types';\nimport { TickLayer } from './layers/tick';\n\nexport const DEFAULT_LAYERS = {\n    [LAYER_TYPES.AREA_LAYER]: AreaLayer,\n    [LAYER_TYPES.ARC_LAYER]: ArcLayer,\n    [LAYER_TYPES.LINE_LAYER]: LineLayer,\n    [LAYER_TYPES.TEXT_LAYER]: TextLayer,\n    [LAYER_TYPES.POINT_LAYER]: PointLayer,\n    [LAYER_TYPES.TICK_LAYER]: TickLayer,\n    [LAYER_TYPES.BAR_LAYER]: BarLayer,\n    [LAYER_TYPES.BASE_LAYER]: BaseLayer\n};\n","import { DEFAULT_LAYERS } from './defaults';\n\nexport default (layers = DEFAULT_LAYERS) => {\n    const reg = Object.assign({}, layers);\n    const regObj = {\n        register: (def) => {\n            const key = def.formalName();\n\n            reg[key] = def;\n            return regObj;\n        },\n        get: () => reg\n    };\n    return regObj;\n};\n","import { AreaLayer, AreaLayerMixin } from './layers/area';\nimport { ArcLayer, ArcLayerMixin } from './layers/arc';\nimport { LineLayer, LineLayerMixin } from './layers/line';\nimport { TextLayer, TextLayerMixin } from './layers/text';\nimport { PointLayer, PointLayerMixin } from './layers/point';\nimport { BarLayer, BarLayerMixin } from './layers/bar';\nimport { TickLayer, TickLayerMixin } from './layers/tick';\nimport { SimpleLayer } from './simple-layer';\nimport { BaseLayer, BaseLayerMixin } from './base-layer';\nimport * as LAYER_TYPES from './enums/layer-types';\nimport layerFactory from './layer-factory';\nimport layerRegistry from './layer-registry';\nimport { ENCODING } from './enums/constants';\nimport * as pointLayerHelpers from './layers/point/helper';\nimport * as commonHelpers from './helpers';\nimport * as enums from './enums';\n\nconst helpers = Object.assign(commonHelpers, {\n    pointLayerHelpers\n});\n\nconst layerMixins = {\n    BarLayerMixin,\n    BaseLayerMixin,\n    LineLayerMixin,\n    AreaLayerMixin,\n    PointLayerMixin,\n    TextLayerMixin,\n    TickLayerMixin,\n    ArcLayerMixin\n};\n\nexport {\n    BaseLayer,\n    BarLayer,\n    LineLayer,\n    AreaLayer,\n    PointLayer,\n    ArcLayer,\n    TextLayer,\n    TickLayer,\n    layerFactory,\n    SimpleLayer,\n    layerRegistry,\n    LAYER_TYPES,\n    ENCODING,\n    helpers,\n    enums,\n    layerMixins\n};\n","import {\n    FieldType,\n    getDependencyOrder,\n    getObjProp,\n    defaultValue,\n    objectIterator,\n    unionDomain,\n    makeElement,\n    DimensionSubtype,\n    toArray,\n    MeasureSubtype,\n    getNearestValue\n} from 'muze-utils';\nimport { layerFactory, ENCODING } from '@chartshq/visual-layer';\n\nexport const getDimensionMeasureMap = (layers, fieldsConfig) => {\n    const retinalEncodingsAndMeasures = {};\n\n    layers.forEach((layer) => {\n        const {\n            colorField,\n            sizeField,\n            shapeField,\n            xField,\n            yField\n        } = layer.encodingFieldsInf();\n        const measures = [xField, yField].filter(field => fieldsConfig[field] && fieldsConfig[field].def.type ===\n            FieldType.MEASURE);\n        [colorField, sizeField, shapeField].forEach((field) => {\n            if (getObjProp(fieldsConfig, field, 'def', 'type') === FieldType.DIMENSION && measures.length) {\n                !retinalEncodingsAndMeasures[field] && (retinalEncodingsAndMeasures[field] = []);\n                retinalEncodingsAndMeasures[field].push(...measures);\n            }\n        });\n    });\n\n    for (const key in retinalEncodingsAndMeasures) {\n        if ({}.hasOwnProperty.call(retinalEncodingsAndMeasures, key)) {\n            retinalEncodingsAndMeasures[key] = [...new Set(retinalEncodingsAndMeasures[key])];\n        }\n    }\n    return retinalEncodingsAndMeasures;\n};\n\nexport const transformDataModels = (transform, dataModel) => {\n    const dataModels = {};\n    for (const key in transform) {\n        if ({}.hasOwnProperty.call(transform, key)) {\n            const transformVal = transform[key];\n            dataModels[key] = transformVal(dataModel);\n        }\n    }\n\n    return dataModels;\n};\n\nexport const getLayerFromDef = (context, definition, existingLayer, namespaces) => {\n    let instances = existingLayer;\n    const dependencies = context._dependencies;\n    const metaInf = context.metaInf();\n    if (!existingLayer) {\n        instances = layerFactory.getLayerInstance(definition);\n        toArray(instances).forEach((inst, i) => {\n            inst.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: namespaces[i],\n                parentNamespace: metaInf.namespace\n            })\n                .dependencies(dependencies)\n                .store(context.store());\n        });\n    }\n    const layers = {};\n    const instanceArr = toArray(instances);\n    definition = toArray(definition);\n    definition.reduce((acc, def, idx) => {\n        const instance = instanceArr[idx];\n        instance.coord(context.coord());\n        instance.config(def);\n        instance.valueParser(context.valueParser());\n        instance.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        if (def.name) {\n            instance.alias(def.name);\n        }\n        layers[instance.alias()] = instance;\n        return acc;\n    }, {});\n    return layers;\n};\n\nexport const resolveEncodingTransform = (layerInst, store) => {\n    const encodingTransform = layerInst.config().encodingTransform || {};\n    const resolvable = encodingTransform.resolvable;\n    let depArr = [];\n    if (resolvable) {\n        const resolved = resolvable(store);\n        depArr = resolved.depArr;\n        layerInst.encodingTransform(resolved.fn);\n    } else if (encodingTransform instanceof Function) {\n        layerInst.encodingTransform(encodingTransform);\n    }\n    return depArr;\n};\n\nexport const sanitizeLayerDef = (layerDefs) => {\n    const sanitizedDefs = [];\n    layerDefs.forEach((layerDef, i) => {\n        const def = layerDef.def;\n        const mark = layerDef.mark;\n        if (!def) {\n            const sConf = layerFactory.getSerializedConf(layerDef.mark, layerDef);\n            if (!sConf.name) {\n                sConf.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push({\n                mark: layerDef.mark,\n                def: sConf\n            });\n        } else {\n            if (!def.name) {\n                def.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push(layerDef);\n        }\n    });\n    return sanitizedDefs;\n};\n\nexport const attachDataToLayers = (layers, dm, transformedDataModels) => {\n    layers.forEach((layer) => {\n        const dataSource = layer.config().source;\n        const dataModel = dataSource instanceof Function ? dataSource(dm) :\n            (transformedDataModels[dataSource] || dm);\n        layer.data(dataModel);\n    });\n};\n\nexport const attachAxisToLayers = (axes, layers, layerAxisIndex) => {\n    layers.forEach((layer) => {\n        const layerId = layer.id();\n        const axesObj = {};\n\n        objectIterator(axes, (key) => {\n            const axisInf = layerAxisIndex[layerId];\n            if (axisInf) {\n                const axisArr = axes[key] || [];\n                const axisIndex = axisInf[key] >= 0 ? axisInf[key] : axisArr.length - 1;\n                axes[key] && (axesObj[key] = defaultValue(axes[key][axisIndex]));\n            }\n        });\n        Object.keys(axesObj).length && layer.axes(axesObj);\n    });\n};\n\nconst { X, Y, RADIUS, ANGLE, ANGLE0, RADIUS0 } = ENCODING;\n\nexport const getLayerAxisIndex = (layers, fields) => {\n    const layerAxisIndex = {};\n    layers.forEach((layer) => {\n        const { axis, encoding } = layer.config();\n        const id = layer.id();\n        [X, Y, ANGLE, ANGLE0, RADIUS].forEach((type) => {\n            let index;\n            const specificField = getObjProp(encoding, type, 'field');\n            const encodingField = type === RADIUS ? defaultValue(specificField, getObjProp(encoding, RADIUS0, 'field'))\n                : getObjProp(encoding, type, 'field');\n            const field = defaultValue(getObjProp(axis, type), encodingField);\n            if (fields[type] && fields[type].length) {\n                index = fields[type].findIndex(fieldInst => fieldInst.getMembers().indexOf(field) !== -1);\n            } else {\n                index = 0;\n            }\n            !layerAxisIndex[id] && (layerAxisIndex[id] = {});\n            layerAxisIndex[id][type] = index;\n        });\n    });\n    return layerAxisIndex;\n};\n\nconst getValidDomain = (domain, domain1, encodingType, fieldType) => {\n    if (encodingType === ANGLE || encodingType === ANGLE0) {\n        return domain.concat(domain1.filter(d => domain.indexOf(d) === -1));\n    }\n    return unionDomain([domain, domain1], fieldType);\n};\n\nexport const unionDomainFromLayers = (layers, axisFields, layerAxisIndex, fieldsConfig) => {\n    let domains = {};\n    layers = layers.filter(layer => layer.getDataDomain() !== null);\n    layers.forEach((layer) => {\n        let domainValues = {};\n        const config = layer.config();\n        // const encoding = config.encoding;\n        const layerDomain = layer.getDataDomain();\n        const layerId = layer.id();\n\n        if (layerDomain !== null && config.calculateDomain !== false) {\n            domainValues = Object.entries(layerDomain);\n            domains = domainValues.reduce((fieldDomain, domain) => {\n                const encodingType = domain[0];\n                const axisIndex = layerAxisIndex[layerId][encodingType];\n                const field = getObjProp(axisFields, encodingType, axisIndex);\n                !fieldDomain[encodingType] && (fieldDomain[encodingType] = {});\n                const encodingDomain = fieldDomain[encodingType];\n                if (field) {\n                    const fieldStr = `${field}`;\n                    encodingDomain[fieldStr] = encodingDomain[fieldStr] || [];\n                    encodingDomain[fieldStr] = getValidDomain(encodingDomain[fieldStr],\n                        domain[1], encodingType, fieldsConfig[field.getMembers()[0]].def.subtype);\n                }\n                return fieldDomain;\n            }, domains);\n        }\n    });\n    return domains;\n};\n\nexport const renderLayers = (context, container, layers, measurement) => {\n    context._lifeCycleManager.notify({ client: layers, action: 'beforedraw', formalName: 'layer' });\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const orderedLayers = layers.sort((a, b) => a.config().order - b.config().order);\n    const layerParentGroup = makeElement(container, 'g', [1], `${classPrefix}-layer-group`);\n    const layerDepOrder = getDependencyOrder(context._layerDepOrder);\n    const groups = {};\n    makeElement(layerParentGroup, 'g', orderedLayers, null, {\n        update: (group, layer) => {\n            groups[layer.alias()] = {\n                group,\n                layer\n            };\n        }\n    });\n\n    const layerSeq = layerDepOrder.map(name => groups[name]).filter(d => d !== undefined);\n    layerSeq.forEach((o) => {\n        const layer = o.layer;\n        const group = o.group;\n        layer.measurement(measurement);\n        layer.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        layer.config().render !== false && layer.mount(group.node());\n    });\n    return this;\n};\n\nexport const getNearestDimensionalValue = (context, position) => {\n    const fields = context.fields();\n    if (!fields.x.length || !fields.y.length) {\n        return null;\n    }\n    const data = context.data();\n    const axes = context.axes();\n    const fieldsConfig = data.getFieldsConfig();\n    const xField = getObjProp(fields, 'x', 0).getMembers()[0];\n    const yField = getObjProp(fields, 'y', 0).getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n\n    const entryVal = [['x', xFieldType, xField], ['y', yFieldType, yField]].find(entry =>\n        entry[1] === DimensionSubtype.CATEGORICAL || entry[1] === DimensionSubtype.TEMPORAL);\n\n    if (!entryVal || (xFieldType !== MeasureSubtype.CONTINUOUS && yFieldType !== MeasureSubtype.CONTINUOUS)) {\n        return null;\n    }\n    const field = entryVal[2];\n    const index = fieldsConfig[field].index;\n    let key = axes[entryVal[0]][0].invert(position[entryVal[0]]);\n    if (entryVal[1] === DimensionSubtype.TEMPORAL) {\n        const filterData = [...new Set(data.getData().data.map(d => d[index]))];\n        key = getNearestValue(filterData, key);\n    }\n\n    return key !== undefined ? [[field], [key]] : null;\n};\n\nexport const getLayersBy = (layers, searchBy, value) => layers.filter((layer) => {\n    const name = searchBy === 'type' ? layer.constructor.formalName() : layer.alias();\n    return name === value;\n});\n\nexport const removeLayersBy = (layers, searchBy, value) => {\n    layers.filter((inst) => {\n        const name = searchBy === 'type' ? inst.config().mark : inst.alias();\n        if (name === value) {\n            inst.remove();\n            return false;\n        }\n        return true;\n    });\n};\n\nexport const createSideEffectGroup = (container, className) => makeElement(container, 'g', [1], className).node();\n\nexport const createRenderPromise = (unit) => {\n    const renderedPromise = unit._renderedPromise;\n    renderedPromise.then(() => {\n        unit._renderedPromise = new Promise((resolve) => {\n            unit._renderedResolve = resolve;\n        });\n        createRenderPromise(unit);\n    });\n};\n\nexport const getRadiusRange = (width, height, config = {}) => {\n    const {\n        innerRadius,\n        outerRadius\n    } = config;\n\n    return [innerRadius || 0, outerRadius || Math.min(height,\n        width) / 2];\n};\n\nexport const setAxisRange = (context) => {\n    const axes = context.axes();\n    const { radius: radiusAxes } = axes;\n    if (radiusAxes) {\n        radiusAxes.forEach((axis) => {\n            axis.range(getRadiusRange(context.width(), context.height()));\n        });\n    }\n};\n\nexport const isXandYMeasures = (context) => {\n    const { x: xFields, y: yFields } = context.fields();\n    const [xMeasures, yMeasures] = [xFields, yFields].map(fields => fields\n        .every(field => field.type() === FieldType.MEASURE));\n    return xMeasures && yMeasures;\n};\n\nconst getKey = (arr, row) => {\n    let key = row[arr[0]];\n    for (let i = 1, len = arr.length; i < len; i++) {\n        key = `${key},${row[arr[i]]}`;\n    }\n    return key;\n};\n\nexport const getValuesMap = (model, context) => {\n    const idValuesMap = {};\n    const valuesIdMap = {};\n    const { data: dataArr, schema, uids } = model.getData();\n    const fieldsConfig = model.getFieldsConfig();\n    const fieldIndices = isXandYMeasures(context) ? schema.map((d, i) => i) :\n                            Object.keys(model.getFieldspace().getDimension()).map(d => fieldsConfig[d].index);\n    dataArr.forEach((row, i) => {\n        const key = getKey(fieldIndices, row);\n        valuesIdMap[key] = uids[i];\n        idValuesMap[uids[i]] = row;\n    });\n    return { valuesIdMap, idValuesMap, fieldsConfig };\n};\n\nexport const getSelectionRejectionModel = (model, propModel, measures, propValuesMap) => {\n    let rejectionModel;\n    const { data, schema } = propModel.getData();\n    const entryRowIds = [];\n    const exitRowIds = [];\n\n    if (schema.length) {\n        const fieldMap = model.getFieldsConfig();\n        const { valuesIdMap } = propValuesMap;\n\n        const rowIdsObj = {};\n        const filteredSchema = measures ? schema.map((d, idx) => idx) :\n            Object.keys(model.getFieldspace().getDimension()).map(d => fieldMap[d].index);\n        data.forEach((row) => {\n            const key = getKey(filteredSchema, row);\n            const id = valuesIdMap[key];\n            if (key in valuesIdMap) {\n                entryRowIds.push(id);\n                rowIdsObj[id] = 1;\n            }\n        });\n        rejectionModel = model.select((fields, i) => {\n            if (!rowIdsObj[i]) {\n                exitRowIds.push(i);\n                return true;\n            }\n            return false;\n        }, {\n            saveChild: false\n        });\n    } else {\n        rejectionModel = propModel;\n    }\n\n    return {\n        model: [propModel, rejectionModel],\n        entryRowIds,\n        exitRowIds\n    };\n};\n","export const CONFIG = 'config';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const MOUNT = 'mount';\nexport const TRANSFORM = 'transform';\nexport const TRANSFORMEDDATA = 'transformedData';\nexport const DATADOMAIN = 'dataDomain';\nexport const FIELDS = 'fields';\nexport const LAYERAXISINDEX = 'layerAxisIndex';\nexport const LAYERS = 'layers';\nexport const DOMAIN = 'domain';\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const GRID_LINE_PARENT_GROUP_CLASS = 'grid-lines';\nexport const GRID_BAND_PARENT_GROUP_CLASS = 'grid-bands';\nexport const GRID_PARENT_GROUP = 'grid-parent-group';\nexport const BAND = 'band';\nexport const TICK = 'tick';\nexport const GRID_BAND = 'gridBands';\nexport const GRID_LINE = 'gridLines';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const RETINAL_FIELDS = 'retinalFields';\nexport const PARENT_ALIAS = 'parentAlias';\nexport const LAYERS = 'layers';\nexport const CACHED_DATA = 'cachedData';\nexport const STORE = 'store';\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\nexport const LONGTOUCH = 'longtouch';\nexport const TOUCHDRAG = 'touchdrag';\nexport const ALL_ACTIONS = '*';\n","const SELECTION_NEW_ENTRY = 1;\nconst SELECTION_NEW_EXIT = -1;\nconst SELECTION_NULL = 0;\nconst SELECTION_OLD_ENTRY = 2;\nconst SELECTION_OLD_EXIT = -2;\n\nexport {\n    SELECTION_NEW_ENTRY,\n    SELECTION_NEW_EXIT,\n    SELECTION_NULL,\n    SELECTION_OLD_ENTRY,\n    SELECTION_OLD_EXIT\n};\n","import SelectionSet from './selection-set';\n\nexport default SelectionSet;\n","import {\n    SELECTION_NEW_ENTRY, SELECTION_NEW_EXIT, SELECTION_NULL, SELECTION_OLD_ENTRY, SELECTION_OLD_EXIT\n} from '../enums/selection';\n/* eslint-disable guard-for-in */\n\n/**\n * This component is used to keep track of the row tuples of the data which gets added and removed. This keeps\n * information of which rows are in previous and new entry set and previous and new exit set. This is initialized by\n * {@link Firebolt}.\n *\n * @public\n *\n * @class SelectionSet\n */\nclass SelectionSet {\n    /**\n     * Creates an instance of selection set\n     *\n     * @param {Array.<string>} completeSet Set of unique ids.\n     */\n    constructor (completeSet, _volatile) {\n        this.completeSet = completeSet;\n        this._set = completeSet.reduce((obj, key) => {\n            obj[key] = SELECTION_NULL;\n            return obj;\n        }, {});\n        this._volatile = _volatile;\n        this._completeSetCount = completeSet.length;\n        this._lockedSelection = {};\n        this._resetted = true;\n    }\n\n    /**\n     * Adds a set of ids to the selection set. This also moves the other rows to exit set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    add (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_ENTRY;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_ENTRY && set[key] !== SELECTION_OLD_ENTRY) {\n                set[key] = set[key] < 0 ? SELECTION_OLD_EXIT : SELECTION_NEW_EXIT;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Adds an array of ids to the old entry set.\n     *\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    update (ids) {\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_OLD_ENTRY;\n        });\n\n        return this;\n    }\n\n    /**\n     * Moves all ids which in new entry set  to old entry set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateEntry () {\n        const set = this._set;\n\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_ENTRY ? SELECTION_OLD_ENTRY : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Moves an array of ids which are in new exit set to old exit set.\n     *\n     * @public\n     *\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateExit () {\n        const set = this._set;\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_EXIT ? SELECTION_OLD_EXIT : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Removes an array of ids from the selection set. It also moves the remaining row ids to entry set.\n     *\n     * @public\n     * @param {Array.<string>} ids Array of unique ids\n     *\n     * @return {SelectionSet}  Instance of selection set\n     */\n    remove (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_EXIT;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_EXIT && set[key] !== SELECTION_OLD_EXIT) {\n                set[key] = set[key] === 0 ? SELECTION_NEW_ENTRY : SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n\n    getSets () {\n        const set = this._set;\n        const retObj = {\n            entrySet: [[], []],\n            exitSet: [[], []],\n            completeSet: []\n        };\n\n        for (const key in set) {\n            if (set[key] > 0) {\n                set[key] === SELECTION_OLD_ENTRY && retObj.entrySet[0].push(key);\n                set[key] === SELECTION_NEW_ENTRY && retObj.entrySet[1].push(key);\n            } else if (set[key] < 0) {\n                set[key] === SELECTION_OLD_EXIT && retObj.exitSet[0].push(key);\n                set[key] === SELECTION_NEW_EXIT && retObj.exitSet[1].push(key);\n            }\n            retObj.completeSet.push(key);\n        }\n\n        ['entrySet', 'exitSet'].forEach((type) => {\n            retObj[type] = retObj[type].map(e => e.map(Number));\n        });\n        retObj.completeSet = retObj.completeSet.map(Number);\n\n        return retObj;\n    }\n\n    /**\n     * Resets an array of ids in the selection set to initial state. It sets the value of every unique id value to\n     * null in the selection set which means they are neither in entry set nor in exit set. If no ids are passed,\n     * then it resets all the ids to null.\n     *\n     * @public\n     *\n     * @param {Array} ids Array of unique ids.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    reset (ids) {\n        const set = this._set;\n        if (ids) {\n            ids.forEach((i) => {\n                set[i] = SELECTION_NULL;\n            });\n        } else {\n            const lockedSel = this._lockedSelection;\n            for (const key in set) {\n                if (!(key in lockedSel)) {\n                    set[key] = SELECTION_NULL;\n                }\n            }\n        }\n        this._resetted = true;\n        return this;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     *\n     * @public\n     *\n     * @return {Array.<string>} Array of unique ids\n     */\n    getEntrySet () {\n        const set = this._set;\n        const addSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_ENTRY && addSet.push(key);\n        }\n\n        return addSet;\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in entry set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old entry set or new entry set\n     */\n    getExistingEntrySet (addSet) {\n        const set = this._set;\n        return addSet.filter(d => set[d] === SELECTION_NEW_ENTRY || set[d] === SELECTION_OLD_ENTRY);\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old exit set or new exit set\n     */\n    getExistingExitSet (removeSet) {\n        const set = this._set;\n        return removeSet.filter(d => set[d] === SELECTION_NEW_EXIT || set[d] === SELECTION_OLD_EXIT);\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldEntry () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_ENTRY && updateSet.push(key);\n        }\n        return updateSet;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldExit () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_EXIT && updateSet.push(key);\n        }\n\n        return updateSet;\n    }\n\n    /**\n     * Gets the array of ids which are in the exit set.\n     *\n     * @public\n     * @return {Array.<string>} Array of unique ids\n     */\n    getExitSet () {\n        const set = this._set;\n        const removeSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_EXIT && removeSet.push(key);\n        }\n        return removeSet;\n    }\n\n    /**\n     * Gets all the ids which are either in exit or entry set.\n     *\n     * @public\n     * @return {Array} Array of unique ids\n     */\n    getCompleteSet () {\n        const set = this._set;\n        const completeSet = [];\n\n        for (const key in set) {\n            completeSet.push(key);\n        }\n\n        return completeSet;\n    }\n\n    getCompleteSetCount () {\n        return this._completeSetCount;\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Swaps the add set and remove set in the selection set.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    toggle () {\n        const set = this._set;\n\n        for (const key in set) {\n            if (set[key] === SELECTION_NEW_ENTRY) {\n                set[key] = SELECTION_NEW_EXIT;\n            } else if (set[key] === SELECTION_NEW_EXIT) {\n                set[key] = SELECTION_NEW_ENTRY;\n            } else if (set[key] === SELECTION_OLD_ENTRY) {\n                set[key] = SELECTION_OLD_EXIT;\n            } else {\n                set[key] = SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n\n    getMergedEntrySet () {\n        const set = this._set;\n        const mergedEnter = [];\n\n        for (const key in set) {\n            if (set[key] === SELECTION_NEW_ENTRY || set[key] === SELECTION_OLD_ENTRY) {\n                mergedEnter.push(key);\n            }\n        }\n        return mergedEnter;\n    }\n\n    getMergedExitSet () {\n        const set = this._set;\n        const mergedExit = [];\n\n        for (const key in set) {\n            if (set[key] === SELECTION_NEW_EXIT || set[key] === SELECTION_OLD_EXIT) {\n                mergedExit.push(key);\n            }\n        }\n        return mergedExit;\n    }\n}\n\nexport default SelectionSet;\n","import { clone, retrieveNearestGroupByReducers } from 'muze-utils';\n\nexport const initializeSideEffects = (context, sideEffects) => {\n    const sideEffectsMap = context._sideEffects;\n    sideEffects = sideEffects instanceof Array ? sideEffects : Object.values(sideEffects);\n    sideEffects.forEach((SideEffect) => {\n        const formalName = SideEffect.formalName();\n        const sideEffectInstance = sideEffectsMap[formalName];\n        sideEffectsMap[formalName] = sideEffectInstance || new SideEffect(context);\n    });\n    return sideEffectsMap;\n};\n\nexport const setSideEffectConfig = (sideEffects, config) => {\n    for (const key in sideEffects) {\n        const sideEffect = sideEffects[key];\n        const formalName = sideEffect.constructor.formalName();\n        const sideEffectConf = config[formalName];\n\n        sideEffectConf && sideEffect.config(sideEffectConf);\n    }\n};\n\nexport const initializeBehaviouralActions = (context, actions) => {\n    const dispatchableBehaviours = {};\n\n    actions = actions instanceof Array ? actions : Object.values(actions);\n    actions.forEach((Action) => {\n        dispatchableBehaviours[Action.formalName()] = new Action(context);\n    });\n    return dispatchableBehaviours;\n};\n\nexport const initializePhysicalActions = (context, actions) => {\n    const physicalActions = {};\n\n    for (const name in actions) {\n        if (!({}).hasOwnProperty.call(name, actions)) {\n            physicalActions[name] = actions[name](context);\n        }\n    }\n    return physicalActions;\n};\n\nexport const changeSideEffectAvailability = (context, fn, toEnable) => {\n    const sideEffects = context.sideEffects();\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            let change = true;\n            if (fn && fn(key) === false) {\n                change = false;\n            }\n            if (change) {\n                toEnable ? sideEffects[key].enable() : sideEffects[key].disable();\n            }\n        }\n    }\n};\n\nexport const getMergedSet = set => [...new Set([...set[0], ...set[1]])];\n\nexport const getSourceFields = (propagationInf, criteria = {}) => {\n    const sourceIdentifiers = propagationInf.sourceIdentifiers;\n    let sourceFields;\n    if (sourceIdentifiers) {\n        sourceFields = sourceIdentifiers.fields.map(d => d.name);\n    } else if (criteria instanceof Array) {\n        sourceFields = criteria[0];\n    } else {\n        sourceFields = Object.keys(criteria || {});\n    }\n    return sourceFields;\n};\n\nexport const getSideEffects = (behaviour, behaviourEffectMap) => {\n    const sideEffects = [];\n    for (const key in behaviourEffectMap) {\n        const behaviours = key.split(',');\n        const found = behaviours.some(d => d === behaviour);\n        if (found) {\n            sideEffects.push({\n                effects: behaviourEffectMap[key],\n                behaviours\n            });\n        }\n    }\n    return sideEffects;\n};\n\nexport const unionSets = (firebolt, behaviours) => {\n    let combinedSet = {};\n    const models = {\n        mergedEnter: null,\n        mergedExit: null\n    };\n    const uidSet = {\n        mergedEnter: [],\n        mergedExit: []\n    };\n\n    const { context } = firebolt;\n    behaviours.forEach((behaviour) => {\n        const entryExitSet = firebolt._entryExitSet[behaviour];\n        if (entryExitSet) {\n            combinedSet = Object.assign(combinedSet, clone(entryExitSet));\n            ['mergedEnter', 'mergedExit'].forEach((type) => {\n                const { model, uids } = entryExitSet[type];\n                let existingModel = models[type];\n\n                if (!existingModel) {\n                    existingModel = models[type] = model;\n                    uidSet[type] = uids;\n                } else if (`${model.getSchema().map(d => d.name).sort()}` ===\n                    `${existingModel.getSchema().map(d => d.name).sort()}`) {\n                    uidSet[type] = [...uidSet[type], ...uids];\n                } else {\n                    existingModel = model;\n                    uidSet[type] = uids;\n                }\n                combinedSet[type].uids = [...new Set(uidSet[type])];\n            });\n        }\n    });\n\n    ['mergedEnter', 'mergedExit'].forEach((type) => {\n        if (behaviours.length > 1) {\n            const uids = combinedSet[type].uids.reduce((acc, v) => {\n                acc[v] = true;\n                return acc;\n            }, {});\n            combinedSet[type].model = context.data().select((f, i) => uids[i], { saveChild: false });\n        }\n        combinedSet[type].aggFns = retrieveNearestGroupByReducers(combinedSet[type].model);\n    });\n    return combinedSet;\n};\n","import {\n    mergeRecursive,\n    hasTouch,\n    selectElement,\n    isSimpleObject\n} from 'muze-utils';\nimport { ALL_ACTIONS } from './enums/actions';\nimport SelectionSet from './selection-set';\nimport {\n    initializeBehaviouralActions,\n    initializeSideEffects,\n    changeSideEffectAvailability,\n    initializePhysicalActions,\n    unionSets,\n    getSideEffects,\n    setSideEffectConfig\n} from './helper';\n\n/**\n * This class is responsible for dispatching behavioural actions and side effects. It also keeps the information of\n * registered physical actions, behavioural actions and side effects. Also, it keeps the map of physical and behavioural\n * actions and behavioural actions and side effects. Whenever any behavioural action is dispatched, it also propagates\n * the rows which got affected to the other datamodels. This class is initialized by {@link VisualUnit} and legend to\n * manage it's interaction.\n *\n * @public\n * @class Firebolt\n * @module Firebolt\n */\nexport default class Firebolt {\n    constructor (context, actions, sideEffects, behaviourEffectMap) {\n        this.context = context;\n        this._sideEffectDefinitions = {};\n        this._sideEffects = {};\n        this._propagationInf = {};\n        this._actions = {\n            behavioural: {},\n            physical: {}\n        };\n        this._selectionSet = {};\n        this._volatileSelectionSet = {};\n        this._propagationFields = {};\n        this._sourceSideEffects = {};\n        this._propagationBehaviourMap = {};\n        this._sourceBehaviours = {};\n        this._actionBehaviourMap = {};\n        this._config = {};\n        this._behaviourEffectMap = {};\n        this._entryExitSet = {};\n        this._actionHistory = {};\n        this._queuedSideEffects = {};\n\n        this.mapSideEffects(behaviourEffectMap);\n        this.registerBehaviouralActions(actions.behavioural);\n        this.registerSideEffects(sideEffects);\n        this.registerPhysicalBehaviouralMap(actions.physicalBehaviouralMap);\n        this.registerPhysicalActions(actions.physical);\n    }\n\n    config (...config) {\n        if (config.length) {\n            this._config = mergeRecursive(this._config, config[0]);\n            setSideEffectConfig(this.sideEffects(), this._config);\n            return this;\n        }\n        return this._config;\n    }\n\n    mapSideEffects (behEffectMap) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        for (const key in behEffectMap) {\n            if ({}.hasOwnProperty.call(behEffectMap, key)) {\n                const sideEffects = behEffectMap[key] || [];\n                let preventDefaultActions = false;\n                let effectNames;\n                if (isSimpleObject(sideEffects)) {\n                    effectNames = sideEffects.effects;\n                    preventDefaultActions = sideEffects.preventDefaultActions;\n                } else {\n                    effectNames = sideEffects;\n                }\n                !behaviourEffectMap[key] && (behaviourEffectMap[key] = []);\n                this._behaviourEffectMap[key] = [...new Set(preventDefaultActions ? effectNames :\n                    [...behaviourEffectMap[key], ...effectNames])];\n            }\n        }\n        return this;\n    }\n\n    registerBehaviouralActions (actions) {\n        const behaviours = initializeBehaviouralActions(this, actions);\n        this.prepareSelectionSets(behaviours);\n        Object.assign(this._actions.behavioural, behaviours);\n        return this;\n    }\n\n    prepareSelectionSets () {\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        this.initializeSideEffects();\n        return this;\n    }\n\n    applySideEffects (sideEffects, selectionSet, payload) {\n        const sideEffectStore = this.sideEffects();\n        const actionHistory = this._actionHistory;\n        const queuedSideEffects = this._queuedSideEffects;\n        sideEffects.forEach((sideEffect) => {\n            let options;\n            let name;\n            const effects = sideEffect.effects;\n            const behaviours = sideEffect.behaviours;\n            const combinedSet = this.mergeSelectionSets(behaviours);\n            effects.forEach((effect) => {\n                if (typeof effect === 'object') {\n                    name = effect.name;\n                    options = effect.options;\n                } else {\n                    name = effect;\n                }\n\n                const sideEffectInstance = sideEffectStore[name];\n                if (sideEffectInstance.isEnabled()) {\n                    if (!sideEffectInstance.constructor.mutates() &&\n                        Object.values(actionHistory).some(d => d.isMutableAction)) {\n                        queuedSideEffects[`${name}-${behaviours.join()}`] = {\n                            name,\n                            params: [combinedSet, payload, options]\n                        };\n                    } else {\n                        this.dispatchSideEffect(name, combinedSet, payload, options);\n                    }\n                }\n            });\n        });\n        return this;\n    }\n\n    dispatchSideEffect (name, selectionSet, payload, options = {}) {\n        const sideEffectStore = this.sideEffects();\n        const sideEffect = sideEffectStore[name];\n        let disable = false;\n        if (options.filter && options.filter(sideEffect)) {\n            disable = true;\n        }\n        !disable && sideEffectStore[name].apply(selectionSet, payload, options);\n    }\n\n    registerPropagationBehaviourMap (map) {\n        this._propagationBehaviourMap = Object.assign(this._propagationBehaviourMap, map || {});\n        return this;\n    }\n\n    dispatchBehaviour (behaviour, payload, propagationInfo = {}) {\n        const propagate = propagationInfo.propagate !== undefined ? propagationInfo.propagate : true;\n        const behaviouralActions = this._actions.behavioural;\n        const action = behaviouralActions[behaviour];\n        const behaviourEffectMap = this._behaviourEffectMap;\n        const sideEffects = getSideEffects(behaviour, behaviourEffectMap);\n        this._propagationInf = propagationInfo;\n\n        if (action) {\n            action.dispatch(payload);\n            this._entryExitSet[behaviour] = action.entryExitSet();\n            const shouldApplySideEffects = this.shouldApplySideEffects(propagate);\n\n            if (propagate) {\n                this.propagate(behaviour, payload, action.propagationIdentifiers(), sideEffects);\n            }\n\n            if (shouldApplySideEffects) {\n                const applicableSideEffects = this.getApplicableSideEffects(sideEffects, payload, propagationInfo);\n                this.applySideEffects(applicableSideEffects, this.getEntryExitSet(behaviour), payload);\n            }\n        }\n\n        return this;\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet.find(d => !d.sourceSelectionSet);\n    }\n\n    shouldApplySideEffects () {\n        return true;\n    }\n\n    changeBehaviourStateOnPropagation (behaviour, value, key = 'default') {\n        const behaviourConditions = this._sourceBehaviours[behaviour] || (this._sourceBehaviours[behaviour] = {});\n        if (value instanceof Function) {\n            behaviourConditions[key] = value;\n        } else {\n            behaviourConditions[key] = () => value;\n        }\n        return this;\n    }\n\n    changeSideEffectStateOnPropagation (sideEffect, value, key = 'default') {\n        const sideEffectConditions = this._sourceSideEffects[sideEffect] || (this._sourceSideEffects[sideEffect] = {});\n        if (value instanceof Function) {\n            sideEffectConditions[key] = value;\n        } else {\n            sideEffectConditions[key] = () => value;\n        }\n    }\n\n    removeSideEffectPolicy (sideEffect, key) {\n        delete this._sourceSideEffects[sideEffect][key];\n        return this;\n    }\n\n    removeBehaviourPolicy (behaviour, key) {\n        delete this._sourceBehaviours[behaviour][key];\n        return this;\n    }\n\n    propagate () {\n        return this;\n    }\n\n    sideEffects (...sideEffects) {\n        if (sideEffects.length) {\n            this._sideEffects = sideEffects[0];\n            return this;\n        }\n        return this._sideEffects;\n    }\n\n    enableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, true);\n        return this;\n    }\n\n    disableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, false);\n        return this;\n    }\n\n    dissociateBehaviour (behaviour, physicalAction) {\n        const actionBehaviourMap = this._actionBehaviourMap;\n        for (const key in actionBehaviourMap) {\n            if (key === physicalAction) {\n                const behaviourMap = actionBehaviourMap[key];\n                behaviourMap.behaviours = behaviourMap.behaviours.filter(d => d !== behaviour);\n                this.mapActionsAndBehaviour(key);\n            }\n        }\n\n        return this;\n    }\n\n    dissociateSideEffect (sideEffect, behaviour) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        behaviourEffectMap[behaviour] = behaviourEffectMap[behaviour].filter(d => (d.name || d) !== sideEffect);\n        return this;\n    }\n\n    getApplicableSideEffects (sideEffects) {\n        return sideEffects;\n    }\n\n    attachPropagationListener (dataModel) {\n        dataModel.unsubscribe('propagation');\n        dataModel.on('propagation', this.onDataModelPropagation());\n        return this;\n    }\n\n    onDataModelPropagation () {\n        return (propValue) => {\n            const payload = propValue.payload;\n            const action = payload.action;\n\n            this.dispatchBehaviour(action, payload, {\n                propagate: false\n            });\n        };\n    }\n\n    createSelectionSet (uniqueIds, behaviouralActions) {\n        const behaviours = behaviouralActions || this._actions.behavioural;\n        const selectionSet = this._selectionSet;\n        const volatileSelectionSet = this._volatileSelectionSet;\n\n        for (const key in behaviours) {\n            if ({}.hasOwnProperty.call(behaviours, key)) {\n                selectionSet[key] = new SelectionSet(uniqueIds);\n                volatileSelectionSet[key] = new SelectionSet(uniqueIds, true);\n                this._entryExitSet[key] = null;\n            }\n        }\n        this._volatileSelectionSet = volatileSelectionSet;\n        this.selectionSet(selectionSet);\n        return this;\n    }\n\n    selectionSet (...selectionSet) {\n        if (selectionSet.length) {\n            this._selectionSet = selectionSet[0];\n            return this;\n        }\n        return this._selectionSet;\n    }\n\n    initializeSideEffects () {\n        const sideEffectDefinitions = this._sideEffectDefinitions;\n        this.sideEffects(initializeSideEffects(this, sideEffectDefinitions));\n        return this;\n    }\n\n    registerPhysicalActions (actions) {\n        const initedActions = initializePhysicalActions(this, actions);\n        Object.assign(this._actions.physical, initedActions);\n        return this;\n    }\n\n    /**\n     * Allows to propagate the datamodel with only the supplied fields. When propagation is done, then the fields\n     * which are supplied for the specified behavioural action is propagated.\n     *\n     * @public\n     *\n     * @param {string} action Name of behavioural action. If '*' is specified, then for all behavioural actions it is\n     * applied.\n     * @param {Array} fields Array of field names which will be propagated.\n     * @param {boolean} append If true, then it is appended to the existing propagation data model fields else only\n     * those fields are projected from propagation data model and propagated.\n     *\n     * @return {Firebolt} Instance of firebolt\n     */\n    propagateWith (action, fields, append = false) {\n        const behaviouralActions = this._actions.behavioural;\n        if (action === ALL_ACTIONS) {\n            for (const key in behaviouralActions) {\n                this._propagationFields[key] = {\n                    fields,\n                    append\n                };\n            }\n        } else {\n            this._propagationFields[action] = {\n                fields,\n                append\n            };\n        }\n        return this;\n    }\n\n    /**\n     * Map actions and behaviours\n     * @return {Firebolt} Firebolt instance\n     */\n    mapActionsAndBehaviour (phyAction) {\n        const initedPhysicalActions = this._actions.physical;\n        const map = this._actionBehaviourMap;\n\n        for (const action in map) {\n            if (!({}).hasOwnProperty.call(action, map) && action === (phyAction || action)) {\n                let target;\n                const mapObj = map[action];\n                target = mapObj.target;\n                const touch = mapObj.touch;\n                if (!target) {\n                    target = this.context.getDefaultTargetContainer();\n                }\n                const bind = hasTouch() ? touch === true || touch === undefined : !touch;\n                bind && this.bindActionWithBehaviour(initedPhysicalActions[action],\n                    target, mapObj.behaviours);\n            }\n        }\n        return this;\n    }\n\n    registerPhysicalBehaviouralMap (map) {\n        this._actionBehaviourMap = mergeRecursive(this._actionBehaviourMap, map);\n        return this;\n    }\n\n    /**\n     * Binds a target element with an action.\n     *\n     * @param {Function} action Action method\n     * @param {string} target Class name of element\n     * @param {Array} behaviourList Array of behaviours\n     * @return {FireBolt} Instance of firebolt\n     */\n    bindActionWithBehaviour (action, targets, behaviourList) {\n        if (typeof (targets) === 'string') {\n            targets = [targets];\n        }\n        targets.forEach((target) => {\n            const mount = this.context.mount();\n            const nodes = target.node instanceof Function ? target : selectElement(mount).selectAll(target);\n            if (!nodes.empty()) {\n                if (nodes instanceof Array) {\n                    nodes.forEach((node) => {\n                        action(selectElement(node), behaviourList);\n                    });\n                } else {\n                    action(nodes, behaviourList);\n                }\n            }\n        });\n        return this;\n    }\n\n    getPropagationInf () {\n        return this._propagationInf;\n    }\n\n    getAddSetFromCriteria (criteria, propagationInf = {}) {\n        const context = this.context;\n        const filteredDataModel = propagationInf.data ? propagationInf.data :\n            context.getDataModelFromIdentifiers(criteria, 'all');\n\n        return {\n            model: filteredDataModel,\n            uids: criteria ? (propagationInf.data ? propagationInf.entryRowIds :\n                filteredDataModel[0].getUids()) : null\n        };\n    }\n\n    getSelectionSets (action) {\n        const sourceId = this.context.id();\n        const propagationInf = this._propagationInf || {};\n        const propagationSource = propagationInf.sourceId;\n        let applicableSelectionSets = [];\n        if (propagationSource !== sourceId) {\n            applicableSelectionSets = [this._volatileSelectionSet[action]];\n        }\n\n        if (propagationSource) {\n            applicableSelectionSets.push(this.selectionSet()[action]);\n        }\n        return applicableSelectionSets;\n    }\n\n    getFullData () {\n        return this.context.data();\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Returns the entry and exit set information of the specified behavioural action.\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of behavioural action.\n     *\n     * @return {Object} Entry exit set information.\n     */\n    getEntryExitSet (behaviour) {\n        return this._entryExitSet[behaviour];\n    }\n\n    mergeSelectionSets (behaviours) {\n        return unionSets(this, behaviours);\n    }\n\n    data () {\n        return this.context.data();\n    }\n}\n","import { isSimpleObject, DimensionSubtype, partition, FieldType } from 'muze-utils';\nimport { getMergedSet, getSourceFields } from '../../helper';\n\nexport const getIdentifiersFromSet = (set, context, { fieldsConfig, fields }) => {\n    const data = [fields];\n\n    set.forEach(id => data.push(context.getValueFromId(id, fields, fieldsConfig)));\n    return data;\n};\n\n/**\n * This is the base class has all the common functionalities needed for all behavioural actions. Any other behavioural\n * action needs to extend this class.\n *\n * @public\n * @class GenericBehaviour\n * @module GenericBehaviour\n */\nexport default class GenericBehaviour {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n    }\n\n    /**\n     * Returns entry and exit set information. This method is called by firebolt when ```dispatchBehaviour``` is called\n     * dynamically or when any physical action is triggered on the chart.\n     *\n     * @param {Object} payload Payload information.\n     * @param {Object|Array} payload.criteria Identifiers of data interacted with.\n     *\n     * @return {Array} Entry and exit set information.\n     */\n    dispatch (payload) {\n        const criteria = payload.criteria;\n        const firebolt = this.firebolt;\n        const formalName = this.constructor.formalName();\n        const selectionSets = firebolt.getSelectionSets(formalName);\n        const {\n            model: filteredDataModel,\n            uids\n        } = this.getAddSetFromCriteria(criteria, this.firebolt.getPropagationInf());\n\n        selectionSets.forEach((selectionSet) => {\n            this.setSelectionSet(uids, selectionSet, {\n                filteredDataModel,\n                payload\n            });\n\n            selectionSet._volatile && this.propagationIdentifiers(selectionSet, payload);\n            this.entryExitSet(selectionSet, filteredDataModel, payload);\n        });\n    }\n\n    getAddSetFromCriteria (...params) {\n        return this.firebolt.getAddSetFromCriteria(...params);\n    }\n\n    /**\n     * Updates the selection set by adding uids to the instance of {@link SelectionSet} or removing them.\n     * {@link SelectionSet} keeps the information of which rows are in the entry set and exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of row ids which got affected during interaction.\n     * @param {SelectionSet} selectionSet Instance of selection set.\n     *\n     * @return {GenericBehaviour} Instance of behaviour.\n     */\n    setSelectionSet () {\n        return this;\n    }\n\n    entryExitSet (...params) {\n        if (params.length) {\n            const [selectionSet, filteredDataModel, payload] = params;\n            const {\n                entrySet,\n                exitSet,\n                completeSet\n            } = selectionSet.getSets();\n            const propagationInf = this.firebolt.getPropagationInf();\n\n            this._entryExitSet = {\n                entrySet: [this.getSetInfo('oldEntry', entrySet[0], filteredDataModel),\n                    this.getSetInfo('newEntry', entrySet[1], filteredDataModel)],\n                exitSet: [this.getSetInfo('oldEntry', exitSet[0], filteredDataModel),\n                    this.getSetInfo('newExit', exitSet[1], filteredDataModel)],\n                mergedEnter: this.getSetInfo('mergedEnter', getMergedSet(entrySet), filteredDataModel),\n                mergedExit: this.getSetInfo('mergedExit', getMergedSet(exitSet), filteredDataModel),\n                completeSet: this.getSetInfo('complete', completeSet, filteredDataModel),\n                fields: getSourceFields(propagationInf, payload.criteria)\n            };\n\n            return this;\n        }\n        return this._entryExitSet;\n    }\n\n    getSetInfo (type, set, filteredDataModel) {\n        let model = null;\n\n        if (type === 'mergedEnter') {\n            model = filteredDataModel ? filteredDataModel[0] : null;\n        } else if (type === 'mergedExit') {\n            model = filteredDataModel ? filteredDataModel[1] : null;\n        }\n\n        return {\n            uids: set,\n            length: set.length,\n            model\n        };\n    }\n\n    propagationIdentifiers (...params) {\n        if (params.length) {\n            let propData = null;\n            const [selectionSet, payload] = params;\n            const { context } = this.firebolt;\n            const fieldsConfig = this.firebolt.data().getFieldsConfig();\n            const { criteria } = payload;\n\n            if (selectionSet.resetted() || criteria === null) {\n                propData = null;\n            } else if (isSimpleObject(criteria)) {\n                const fields = isSimpleObject(criteria) ? Object.keys(criteria) : criteria[0];\n                // const fields = Object.keys(criteria);\n                const [dims, otherFields] =\n                    partition(fields, (d => fieldsConfig[d].def.subtype === DimensionSubtype.CATEGORICAL));\n\n                propData = {\n                    fields: fields.map(d => fieldsConfig[d].def),\n                    range: context.getRangeFromIdentifiers({\n                        criteria,\n                        entrySet: selectionSet.getMergedEntrySet(),\n                        fields: otherFields\n                    }),\n                    identifiers: getIdentifiersFromSet(selectionSet.getMergedEntrySet(), context, {\n                        fields: dims,\n                        fieldsConfig\n                    })\n                };\n            } else {\n                const data = getIdentifiersFromSet(selectionSet.getMergedEntrySet(), context, {\n                    fields: criteria[0].filter(field => fieldsConfig[field].def.type === FieldType.DIMENSION),\n                    fieldsConfig\n                });\n                propData = {\n                    fields: data[0].map(d => fieldsConfig[d].def),\n                    identifiers: data\n                };\n            }\n            this._propagationIdentifiers = propData;\n            return this;\n        }\n        return this._propagationIdentifiers;\n    }\n\n    static mutates () {\n        return false;\n    }\n\n    enable () {\n        this._enabled = true;\n    }\n\n    disable () {\n        this._enabled = false;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n}\n\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class VolatileBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n                // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                    || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            selectionSet.updateExit();\n            const { entrySet } = selectionSet.getSets();\n            selectionSet.reset(getMergedSet(entrySet));\n            selectionSet.add(addSet);\n            selectionSet.update(existingAddSet);\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n    }\n}\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n","import VolatileBehaviour from './volatile';\nimport { HIGHLIGHT } from '../../enums/behaviours';\n\nexport default class HighlightBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return HIGHLIGHT;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport * as BEHAVIOURNAMES from '../../enums/behaviours';\n\n/**\n * This is the behaviour for brushing a region on the chart. It accepts a payload\n * which contains the x and y range of the data and other configuration. It will then\n * create a selection box from the range and select the points which fall within the range.\n */\nexport default class BrushBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return BEHAVIOURNAMES.BRUSH;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport { FILTER } from '../../enums/behaviours';\n\nexport default class FilterBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return FILTER;\n    }\n\n    static mutates () {\n        return true;\n    }\n}\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class PersistentBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            const propagationInf = this.firebolt.getPropagationInf();\n            // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            if (propagationInf.propagate === false) {\n                selectionSet.updateExit();\n                const { entrySet } = selectionSet.getSets();\n                selectionSet.reset(getMergedSet(entrySet));\n                selectionSet.add(addSet);\n                selectionSet.update(existingAddSet);\n            } else {\n                // existing add set\n                if (existingAddSet.length) {\n                    selectionSet.updateExit();\n                    selectionSet.remove(existingAddSet);\n                } else {\n                    selectionSet.updateEntry();\n                    selectionSet.add(addSet);\n                }\n                const { exitSet } = selectionSet.getSets();\n                const mergedExitSet = getMergedSet(exitSet);\n                const completeSetCount = selectionSet.getCompleteSet().length;\n                if (mergedExitSet.length === completeSetCount) {\n                    selectionSet.reset();\n                }\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n\n        return this;\n    }\n}\n","import PersistentBehaviour from './persistent';\nimport { SELECT } from '../../enums/behaviours';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return SELECT;\n    }\n}\n\n","import { DimensionSubtype, COORD_TYPES } from 'muze-utils';\n\nconst dragCriteriaRetriever = {\n    [COORD_TYPES.CARTESIAN]: (context, sourceInfo, { startPos, endPos }) => {\n        const fieldsConfig = context.data().getFieldsConfig();\n        const axes = sourceInfo.axes;\n        const xAxis = axes.x[0];\n        const yAxis = axes.y[0];\n        const axisFields = sourceInfo.fields;\n        const xField = axisFields.x[0].getMembers()[0];\n        const yField = axisFields.y[0].getMembers()[0];\n        const xFieldType = fieldsConfig[xField].def.subtype;\n        const yFieldType = fieldsConfig[yField].def.subtype;\n        const dimensions = {};\n\n        const isXDimension = xFieldType === DimensionSubtype.CATEGORICAL;\n        const isYDimension = yFieldType === DimensionSubtype.CATEGORICAL;\n        const xRange = xAxis.invertExtent(startPos.x, endPos.x);\n        const yRange = yAxis.invertExtent(startPos.y, endPos.y);\n        const selectedDomains = {\n            x: isXDimension ? xRange : xRange.sort((a, b) => a - b),\n            y: isYDimension ? yRange : yRange.sort((a, b) => a - b)\n        };\n        const rangeObj = {};\n\n        if (selectedDomains.x) rangeObj[xField] = selectedDomains.x;\n        if (selectedDomains.y) rangeObj[yField] = selectedDomains.y;\n\n        if (xField === yField) {\n            const xdom = selectedDomains.x;\n            const ydom = selectedDomains.y;\n            const min = xdom[0] > ydom[0] ? ydom : xdom;\n            const max = min === ydom ? xdom : ydom;\n            if (min[1] < max[0]) {\n                rangeObj[xField] = [];\n            } else {\n                rangeObj[xField] = [max[0], min[1] < max[1] ? min[1] : max[1]];\n            }\n        }\n\n        dimensions.x = [startPos.x, endPos.x];\n        dimensions.y = [startPos.y, endPos.y];\n\n        return {\n            criteria: rangeObj,\n            dimensions\n        };\n    },\n    [COORD_TYPES.POLAR]: () => ({\n        criteria: null\n    })\n};\n\n/**\n * Gets the drag action configuration\n * @param {VisualUnit} instance instance of visual unit\n * @param {Object} config x y positions\n * @return {Object} Payload of behaviour\n*/\n/* istanbul ignore next */ const getDragActionConfig = (context, config) => {\n    const sourceInfo = context.getSourceInfo();\n    const { startPos, endPos } = config;\n    const coordType = context.coord();\n\n    if (startPos.x === endPos.x && startPos.y === endPos.y) {\n        return {\n            criteria: null\n        };\n    }\n\n    return dragCriteriaRetriever[coordType](context, sourceInfo, config);\n};\n\nexport default getDragActionConfig;\n","import {\n    getEvent,\n    getD3Drag\n} from 'muze-utils';\nimport getDragActionConfig from './drag-action-config';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const attachDragEvent = (targetEl, behaviours, firebolt, touch) => {\n    let startPos = {};\n    let endPos = {};\n    let drawingInf;\n\n    const d3Drag = getD3Drag();\n    let touchStart;\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n        drawingInf = firebolt.context.getDrawingContext();\n        touchStart = new Date().getTime();\n    }).on('drag', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        if (touch && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context, {\n            startPos,\n            endPos\n        });\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }).on('end', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        const duration = new Date().getTime() - touchStart;\n\n        if (touch && duration > 100 && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context, {\n            startPos,\n            endPos\n        });\n        payload.dragEnd = true;\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }));\n};\n\n","import { getClientPoint, getEvent } from 'muze-utils';\nimport { CONSOLIDATED, FRAGMENTED } from '../../enums/constants';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} instance instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const context = firebolt.context;\n        const tooltipConf = context.config().interaction.tooltip;\n        const mode = tooltipConf.mode;\n        const pos = getClientPoint(context.getDrawingContext().svgContainer, event);\n        const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n            getAllPoints: mode === CONSOLIDATED || mode === FRAGMENTED,\n            data: args,\n            event\n        });\n        const payload = {\n            criteria: nearestPoint ? nearestPoint.id : null,\n            showInPosition: nearestPoint.showInPosition,\n            target: nearestPoint.target,\n            position: pos,\n            mode\n        };\n\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                            criteria: null\n                        }));\n                    });\n};\n\nexport default hover;\n","export const CLASSPREFIX = 'muze';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\n","import { getClientPoint } from 'muze-utils';\n\nexport const generatePayloadFromEvent = function (args, event, firebolt) {\n    const context = firebolt.context;\n    const pos = getClientPoint(context.getDrawingContext().svgContainer, event.touches ? event.touches[0] : event);\n    const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n        data: args,\n        event\n    });\n    return {\n        criteria: nearestPoint ? nearestPoint.id : null,\n        showInPosition: nearestPoint.showInPosition,\n        target: nearestPoint.target,\n        position: pos\n    };\n};\n","import { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport { longtouch } from './longtouch';\nimport { touchdrag } from './touch-drag';\nimport * as ACTIONNAMES from '../../enums/actions';\nimport click from './click';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click,\n    [ACTIONNAMES.LONGTOUCH]: longtouch,\n    [ACTIONNAMES.TOUCHDRAG]: touchdrag\n};\n\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt);\n};\n\nexport default drag;\n","/* global setTimeout */\nimport { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nexport const longtouch = firebolt => (targetEl, behaviours) => {\n    let event;\n    let touchEnd;\n    const dispatchBehaviour = function (args) {\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    touchEnd = false;\n    event = getEvent();\n    targetEl.on('touchstart', (args) => {\n        event = getEvent();\n        touchEnd = false;\n        setTimeout(() => {\n            if (!touchEnd) {\n                dispatchBehaviour(args);\n            } else {\n                behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                    criteria: null\n                }));\n            }\n        }, 100);\n    }).on('touchend', () => {\n        touchEnd = true;\n    });\n};\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const touchdrag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt, true);\n};\n\n","const ANCHORS = 'anchors';\nconst TOOLTIP = 'tooltip';\nconst BRUSH_ANCHORS = 'brush-anchors';\nconst PERSISTENT_ANCHORS = 'persistent-anchors';\nconst FILTER = 'filter';\nconst HIGHLIGHTER = 'highlighter';\nconst CROSSLINE = 'crossline';\n\nexport {\n    ANCHORS,\n    BRUSH_ANCHORS,\n    PERSISTENT_ANCHORS,\n    FILTER,\n    HIGHLIGHTER,\n    CROSSLINE,\n    TOOLTIP\n};\n","export const PROPS = {\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import GenericSideEffect from './generic-sideeffect';\n\nexport default GenericSideEffect;\n","import { mergeRecursive, getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { PROPS } from './props';\n\n/**\n * This is the base class of all side effects. It contains all common methods like setting configuration, disabling,\n * enabling side effect, etc. Every new side effect has to inherit this class or {@link SpawnableSideEffect} or\n * {@link SurrogateSideEffect} class. All side effects are initialized by firebolt. The instance of firebolt is\n * passed on initialization. The firebolt instance contains ```context``` which is the instance of visual unit with\n * which the firebolt is attached.\n *\n * @public\n * @class\n * @module GenericSideEffect\n */\nexport default class GenericSideEffect {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n        this._strategy = 'default';\n        this._config = {};\n        this._id = getUniqueId();\n        this._strategies = {};\n        generateGetterSetters(this, PROPS);\n        this.config(this.constructor.defaultConfig());\n    }\n\n    /**\n     * Returns the default configuration of the side effect.\n     *\n     * @public\n     * @return {Object} Default configuration of side effect.\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the formal name of a side effect. This method must be implemented by all side effects which changes\n     * or adds any element in the visualization.\n     *\n     * @return {string} Formal name of side effect.\n     */\n    static formalName () {\n        return 'generic';\n    }\n\n    static target () {\n        return 'all';\n    }\n\n    /**\n     * Returns true if the side effects mutates the data of chart.\n     *\n     * @public\n     *\n     * @return {boolean} If the side effect mutates the data of chart.\n     */\n    static mutates () {\n        return false;\n    }\n\n    /**\n     * Sets or gets the configuration of side effect.\n     *\n     * When setter,\n     * @param {Object} config Configuration of side effect.\n     * @return {GenericSideEffect} Side effect instance.\n     *\n     * When getter,\n     * @return {Object} Side effect configuration.\n     */\n    config (...params) {\n        if (params.length) {\n            this._config = mergeRecursive(this._config, params[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    disable () {\n        this._enabled = false;\n        return this;\n    }\n\n    enable () {\n        this._enabled = true;\n        return this;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n\n    /**\n     * Applies the interaction effect on the chart. This is where the implemntation of the side effect is defined.\n     *\n     * @param {Object} selectionSet Contains the entry and exit set of data which got affected during interaction.\n     * @param {Object} selectionSet.mergedEnter Combined previous entry and new entry set.\n     * @param {DataModel} selectionSet.mergedEnter.model Instance of data model containing all rows which got\n     * affected during interaction.\n     * @param {Array} selectionSet.mergedEnter.uids Ids of all rows which were affected during interaction.\n     * @param {Object} selectionSet.mergedExit Combined previous exit and new exit set.\n     * @param {DataModel} selectionSet.mergedExit.model Instance of data model containing rows which were not affected\n     * during interaction.\n     * @param {Array} selectionSet.mergedExit.uids Ids of all rows which were not affected during interaction.\n     * @param {Object} selectionSet.entrySet Entry set information.\n     * @param {Array} selectionSet.entrySet[0].uids All row ids which got affected during previous interaction.\n     * @param {Array} selectionSet.entrySet[1].uids All row ids which got affected during current interaction.\n     * @param {Array} selectionSet.exitSet[0].uids All row ids which were not affected during previous interaction.\n     * @param {Array} selectionSet.exitSet[1].uids All row ids which were not affected during current interaction.\n     * @param {Object} payload Payload information of the behavioural action on trigger of which this side effect\n     * is applied.\n     * @param {Object} options Optional information for side effect like strategy, etc.\n     */\n    apply () {\n        return this;\n    }\n\n    /**\n     * Adds a new strategy method for this side effect. The strategy method is implemented by side effect class.\n     *\n     * @param {string} name Name of the strategy.\n     * @param {Function} fn Strategy method.\n     *\n     * @return {GenericSideEffect} Instance of side effect.\n     */\n    setStrategy (name, fn) {\n        if (fn) {\n            this._strategies[name] = fn;\n        }\n        return this;\n    }\n}\n","import GenericSideEffect from './generic';\n\n/**\n * This class is inherited by all side effects which changes the look of any existing elements in the visualization.\n * For example, if a side effect wants to change the color of bar plots, then it is a surrogate side effect.\n *\n * To use this,\n * ```\n *      const SurrogateSideEffect = muze.SideEffects.standards.SurrogateSideEffect;\n *\n *      class BarColorChanger extends SurrogateSideEffect {\n *          static formalName () {\n *              return 'colorChanger';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n *\n * @module SurrogateSideEffect\n * @class\n * @extends GenericSideEffect\n */\nexport default class SurrogateSideEffect extends GenericSideEffect {\n    /**\n     * Applies or removes interaction styles from plot elements. An array of row ids needs to be passed\n     * which identifies the plot elements and applies styles to them.\n     *\n     * To apply the interaction style,\n     * ```\n     *      const entryRowIds = entrySet[0].uids;\n     *      const interactionStyle = [{\n     *          type: 'fill',\n     *          intensity: [0, 0, 15, 0] // hsla configuration\n     *      }];\n     *\n     *      this.applyInteractionStyle(entryRowIds, interactionStyle, 'brighten', true);\n     * ```\n     * @public\n     * @param {Array} set Array of row ids.\n     * @param {Array} config Style configuration.\n     * @param {Object} config[0] fill or stroke configuration.\n     * @param {string} config[0].type Type of style - fill or stroke.\n     * @param {Array} config[0].intensity hsla configuration.\n     * @param {string} interactionType Type of interaction. This is needed for storing the styles for\n     * each type of interaction in the plot elements.\n     * @param {boolean} apply Whether to apply or remove the interaction style.\n     *\n     * @return {SurrogateSideEffect} Instance of surrogate side effect.\n     */\n    applyInteractionStyle (set, config = {}, interactionType, apply, payload) {\n        const layers = this.firebolt.context.layers();\n        layers.forEach(layer => layer.config().interactive !== false &&\n            layer.applyInteractionStyle(interactionType, set.uids, apply, null, payload));\n        return this;\n    }\n}\n","import { makeElement } from 'muze-utils';\n\nimport GenericSideEffect from './generic';\n\n/**\n * Any side effect which will add any new element to the chart like drawing a rectangular box or any annotation over\n * the chart needs to inherit this class. This class has methods which returns the container where the dom elements\n * needs to be created.\n *\n * To use this,\n * ```\n *      const SpawnableSideEffect = muze.SideEffects.standards.SpawnableSideEffect;\n *\n *      class SelectionBox extends SpawnableSideEffect {\n *          static formalName () {\n *              return 'selectionBox';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n * @class\n * @extends GenericSideEffect\n * @module SpawnableSideEffect\n */\nexport default class SpawnableSideEffect extends GenericSideEffect {\n    /**\n     * Creates a html or svg element in the container.\n     *\n     * @public\n     * @param {SVGElement|HTMLElement} container Container where the dom element will be rendered.\n     * @param {string} elemType Type of dom element.\n     * @param {Array} data Array of objects with which the dom elements will be binded.\n     * @param {string} className class name of the element.\n     *\n     * @return {Selection} D3 Selection of the element.\n     */\n    createElement (container, elemType, data, className, callbacks) {\n        return makeElement(container, elemType, data, className, callbacks);\n    }\n\n    /**\n     * Returns the drawing information for side effect like svg container, dimensions of the visual unit.\n     *\n     * @public\n     * @return {Object} Drawing information for side effect.\n     * ```\n     *      sideEffectGroup: // svg container where the side effect needs to be appended.\n     *      svgContainer: // svg container of the {@link VisualUnit}.\n     *      htmlContainer: // html div container of the {@link VisualUnit}.\n     *      width: // Width of the {@link VisualUnit}\n     *      height: // Height of the {@link VisualUnit}\n     * ```\n     */\n    drawingContext (...drawingContext) {\n        if (drawingContext.length) {\n            this._drawingContext = drawingContext[0];\n            return this;\n        }\n        return this._drawingContext();\n    }\n\n    show () {\n        return this;\n    }\n\n    hide () {\n        return this;\n    }\n}\n","import { selectElement } from 'muze-utils';\n\nexport const getBoxDimensionsFromPayload = (payload, axes, axisFields) => {\n    let x1;\n    let x2;\n    let y1;\n    let y2;\n    let xRange;\n    let yRange;\n    const criteria = payload.criteria;\n    const dimensions = payload.dimensions || {};\n    const { x: xDim, y: yDim } = dimensions;\n\n    if (!criteria) return null;\n\n    if (axes.x && axes.y) {\n        const xAxis = axes.x[0];\n        const yAxis = axes.y[0];\n        const xLinear = xAxis.constructor.type() === 'linear';\n        const yLinear = yAxis.constructor.type() === 'linear';\n        const xField = `${axisFields.x[0]}`;\n        const yField = `${axisFields.y[0]}`;\n        const xCriteria = criteria[xField];\n        const yCriteria = criteria[yField];\n\n        if (xCriteria && xCriteria[0] instanceof Array) {\n            xRange = xCriteria[0];\n            yRange = xCriteria[1];\n        } else {\n            xRange = xCriteria || [];\n            yRange = yCriteria || [];\n        }\n\n        if (xRange && xRange.length) {\n            const domain = xAxis.domain();\n            const bandScale = xAxis.constructor.type() === 'band';\n            let x1Val = xRange[0];\n            let x2Val = xRange[xRange.length - 1];\n\n            if (bandScale) {\n                let x1DomainIndex = domain.indexOf(xRange[0]);\n                let x2DomainIndex = domain.indexOf(xRange[xRange.length - 1]);\n                [x1DomainIndex, x2DomainIndex] = [x1DomainIndex, x2DomainIndex].sort((a, b) => a - b);\n                x1Val = domain[x1DomainIndex];\n                x2Val = domain[x2DomainIndex];\n            }\n\n            x1 = xAxis.getScaleValue(x1Val);\n            x2 = xAxis.getScaleValue(x2Val);\n            x2 += bandScale ? xAxis.getUnitWidth() : 0;\n        }\n\n        if (yRange && yRange.length) {\n            const domain = yAxis.domain();\n            const bandScale = yAxis.constructor.type() === 'band';\n            let y1Val = yRange[0];\n            let y2Val = yRange[yRange.length - 1];\n\n            if (bandScale) {\n                let y1DomainIndex = domain.indexOf(yRange[0]);\n                let y2DomainIndex = domain.indexOf(yRange[yRange.length - 1]);\n                [y1DomainIndex, y2DomainIndex] = [y1DomainIndex, y2DomainIndex].sort(((a, b) => b - a));\n                y1Val = domain[y1DomainIndex];\n                y2Val = domain[y2DomainIndex];\n            }\n\n            y1 = yAxis.getScaleValue(y1Val);\n            y2 = yAxis.getScaleValue(y2Val);\n            y2 += yAxis.constructor.type() === 'band' ? yAxis.getUnitWidth() : 0;\n        }\n\n        if ((yLinear && xLinear) || !payload.dragEnd) {\n            if (xDim) {\n                [x1, x2] = xDim;\n            }\n            if (yDim) {\n                [y1, y2] = yDim;\n            }\n        }\n    }\n\n    return {\n        dimension: {\n            x1,\n            x2,\n            y1,\n            y2\n        },\n        direction: 'both'\n    };\n};\n\nexport const changeVisibility = (context, sideEffectGroup, visible) => {\n    const config = context.config();\n    const className = config.defClassName;\n    const classPrefix = config.classPrefix;\n    selectElement(sideEffectGroup).selectAll(`.${classPrefix}-${className}`)\n                    .style('display', visible ? 'block' : 'none');\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    isValidValue\n} from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport './styles.scss';\nimport SpawnableSideEffect from '../spawnable';\nimport { selectionBoxDrag } from '../../actions/physical/selection-box-drag';\nimport { getBoxDimensionsFromPayload, changeVisibility } from './helper';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\nclass SelectionBox extends SpawnableSideEffect {\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            defClassName: 'selection-box-group',\n            className: '',\n            classPrefix: CLASSPREFIX,\n            box: {\n                defClassName: 'selection-box',\n                className: ''\n            },\n            transition: {\n                duration: 200\n            }\n        };\n    }\n\n    static formalName () {\n        return 'selectionBox';\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     * @param {Object} dimension Dimensions of the selection box.\n     * @param {number} dimension.x1 Starting x position\n     * @param {number} dimension.x2 Ending x position\n     * @param {number} dimension.y1 Starting y position\n     * @param {number} dimension.y2 Ending y position\n     * @param {Object} conf Configuration needed to draw the selection box\n     * @param {number} unitWidth Width of the visual unit.\n     * @param {number} unitHeight Height of the visual unit.\n     */\n    apply (selectionSet, payload) {\n        let x = 0;\n        let y = 0;\n        let width;\n        let height;\n        const config = this._config;\n        const boxConf = config.box;\n        const firebolt = this.firebolt;\n        const drawingInf = this.drawingContext();\n        const mountPoint = drawingInf.sideEffectGroup;\n        const unitWidth = drawingInf.width;\n        const unitHeight = drawingInf.height;\n        const classPrefix = config.classPrefix;\n        const selectionGroupClassName = config.defClassName;\n\n        width = unitWidth;\n        height = unitHeight;\n\n        // Hide selection-box on dragEnd or when criteria is empty\n        if (!payload.criteria || payload.dragEnd) {\n            this.hide(drawingInf);\n            return this;\n        }\n\n        const sourceInf = firebolt.context.getSourceInfo();\n        const { dimension, direction } =\n            getBoxDimensionsFromPayload(payload, sourceInf.axes, sourceInf.fields);\n        const transition = payload.dragEnd && config.transition;\n\n        if (direction === 'both') {\n            x = Math.min(dimension.x1, dimension.x2);\n            y = Math.min(dimension.y1, dimension.y2);\n            width = Math.abs(dimension.x2 - dimension.x1);\n            height = Math.abs(dimension.y2 - dimension.y1);\n        }\n\n        this.show(drawingInf);\n        // Create the data array for drawing the rectangle\n        const points = [\n            {\n                x,\n                y,\n                width,\n                height\n            }\n        ];\n        // Create the container group for selection box.\n        const selectionGroup = makeElement(selectElement(mountPoint), 'g', [1],\n            `.${classPrefix}-${selectionGroupClassName}`);\n        const sideEffect = this;\n        const selection = selectionGroup.selectAll('rect').data(points);\n        const selectionBox = selection.enter().append('rect')\n                        .each(function () {\n                            selectionBoxDrag(firebolt)(selectElement(this), ['brush'], sideEffect);\n                        })\n                        .merge(selection)\n                        .each(function (attrs) {\n                            let element = selectElement(this);\n                            transition && (element = element.transition().duration(transition.duration));\n                            for (const key in attrs) {\n                                if ({}.hasOwnProperty.call(attrs, key)) {\n                                    isValidValue(attrs[key]) && element.attr(key, attrs[key]);\n                                }\n                            }\n                        });\n        // Get the qualified class name for selection box rectangle\n        const boxClassName = getQualifiedClassName(boxConf.defClassName, this._id, classPrefix);\n        selectionBox.classed(boxClassName.join(' '), true);\n        selectionBox.classed(boxConf.className, true);\n\n        return this;\n    }\n\n    hide (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, false);\n    }\n\n    show (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, true);\n    }\n}\n\nexport default SelectionBox;\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './helpers/drag-action-config';\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let subject;\n    let drawingInf;\n    const context = firebolt.context;\n    const onDrag = (payload) => {\n        behaviours.forEach(action => firebolt.dispatchBehaviour(action, payload));\n    };\n    const d3Drag = getD3Drag();\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        drawingInf = context.getDrawingContext();\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        subject.x += event.dx;\n        subject.y += event.dy;\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context, {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                }\n            });\n            onDrag(payload);\n        }\n    }).on('end', () => {\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context, {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                }\n            });\n            payload.dragEnd = true;\n            onDrag(payload);\n        }\n    }));\n};\n","export const CLASSPREFIX = 'muze';\nexport const ARROW_RIGHT = 'right';\nexport const ARROW_TOP = 'top';\nexport const ARROW_BOTTOM = 'bottom';\nexport const ARROW_LEFT = 'left';\nexport const TOOLTIP_LEFT = 'left';\nexport const TOOLTIP_RIGHT = 'right';\nexport const TOOLTIP_BOTTOM = 'bottom';\nexport const TOOLTIP_TOP = 'top';\nexport const INITIAL_STYLE = {\n    position: 'absolute',\n    width: 0,\n    height: 0\n};\nexport const TABLE_FORMAT = 'table';\n","import { CLASSPREFIX } from './constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'tooltip-box',\n    connectorClassName: 'tooltip-connectors',\n    className: '',\n    row: {\n        margin: 0\n    },\n    content: {\n        spacing: 5,\n        iconContainerSize: 10,\n        iconScale: 1,\n        iconShape: 'circle',\n        iconColor: '#ff0000',\n        rowMargin: '4px 0 4px 0',\n        margin: 10,\n        separator: ':',\n        className: 'tooltip-content-container',\n        parentClassName: 'tooltip-content-parent-container'\n    },\n    arrow: {\n        size: 10,\n        disabled: false,\n        defClassName: 'tooltip-arrow',\n        className: '',\n        color: 'rgba(195,195,195,0.85)'\n    }\n};\n","import { getQualifiedClassName } from 'muze-utils';\nimport { TOOLTIP_LEFT, TOOLTIP_RIGHT, ARROW_RIGHT, ARROW_LEFT, TOOLTIP_BOTTOM } from './constants';\n\nexport const getArrowPos = (orient, dim, measurement, config) => {\n    let arrowPos;\n    const { x, y, boxHeight, boxWidth } = measurement;\n    const arrowDisabled = config.arrow.disabled;\n    const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n\n    if (orient === ARROW_LEFT || orient === ARROW_RIGHT) {\n        let start = 0;\n        let diff = boxHeight / 2;\n        const plotBottom = dim.y + dim.height;\n        const boxBottom = y + boxHeight;\n\n        if (dim.y > y) {\n            start = dim.y - y;\n            diff = (plotBottom >= boxBottom ? (boxBottom - dim.y) : dim.height) / 2;\n        } else if (boxBottom > plotBottom) {\n            diff = Math.abs(y - (dim.y + dim.height)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    } else {\n        let start = 0;\n        let diff = boxWidth / 2;\n        const plotRight = dim.x + dim.width;\n        const boxRight = x + boxWidth;\n\n        if (dim.x > x) {\n            start = dim.x - x;\n            diff = (plotRight >= boxRight ? (boxRight - dim.x) : dim.width) / 2;\n        } else if (boxRight > plotRight) {\n            diff = Math.abs(x - (dim.x + dim.width)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    }\n    return arrowPos;\n};\n\n/**\n * Places the arrow in the specified arrow position. It also applies appropriate arrow\n * class name to the arrow element.\n * @param {string} position Left, bottom or right position of the arrow;\n * @param {number} arrowPos position of arrow in pixels\n * @return {Tooltip} Instance of tooltip.\n */\nexport const placeArrow = (context, position, arrowPos) => {\n    const tooltipArrow = context._tooltipArrow;\n    const tooltipBackground = context._tooltipBackground;\n    const config = context._config;\n    const classPrefix = config.classPrefix;\n    const arrowConf = config.arrow;\n    const className = getQualifiedClassName(arrowConf.defClassName, context._id, config.classPrefix);\n\n    tooltipArrow.style('display', 'block');\n    tooltipArrow.attr('class', `${className.join(' ')}`);\n    if (position === TOOLTIP_LEFT || position === TOOLTIP_RIGHT) {\n        tooltipArrow.style('top', `${arrowPos}px`);\n        tooltipArrow.style('left', '');\n        tooltipBackground.style('top', `${arrowPos}px`);\n        tooltipBackground.style('left', '');\n    } else {\n        position === TOOLTIP_BOTTOM ? tooltipArrow.style('top', '100%') : tooltipArrow.style('top',\n            `-${arrowConf.size}px`);\n        tooltipArrow.style('left', `${arrowPos}px`);\n        position === TOOLTIP_BOTTOM ? tooltipBackground.style('top', '100%') : tooltipBackground.style('top',\n            `-${arrowConf.size + 3}px`);\n        tooltipBackground.style('left', `${arrowPos}px`);\n    }\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow`, true);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${context._arrowOrientation}`, false);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${position}`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${context._arrowOrientation}`, false);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${position}`, true);\n    return this;\n};\n\nexport const reorderContainers = (parentContainer, className) => {\n    parentContainer.selectAll(className).sort((a, b) => a - b);\n};\n","import {\n    selectElement,\n    mergeRecursive,\n    makeElement,\n    setAttrs,\n    setStyles,\n    getSymbol,\n    isSimpleObject\n} from 'muze-utils';\nimport { TABLE_FORMAT } from './constants';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class is used to manage the content of tooltip.\n */\nexport default class Content {\n    /**\n     * Creates an instance of content.\n     */\n    constructor () {\n        this._model = null;\n        this._formatter = null;\n        this._config = this.constructor.defaultConfig();\n    }\n   /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        const config = defaultConfig.content;\n        config.classPrefix = defaultConfig.classPrefix;\n        return config;\n    }\n\n    config (...c) {\n        if (c.length > 0) {\n            this._config = mergeRecursive(this._config, c[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Update model. The format contains presentation strategy which determines how to show the content.\n     * If no strategy is mentioned then default is to show key value pair\n    */\n    update (item) {\n        this._model = item.model;\n        this._formatter = item.formatter;\n        return this;\n    }\n\n    context (ctx) {\n        this._context = ctx;\n        return this;\n    }\n\n    render (mount) {\n        let data;\n        const config = this._config;\n        const iconContainerSize = config.iconContainerSize;\n        const formatter = this._formatter;\n        const rowMargin = config.rowMargin;\n        const model = this._model;\n        const { classPrefix } = config;\n\n        this._mount = mount;\n        if (model instanceof Array) {\n            data = model;\n        } else {\n            data = formatter(this._model, this.config(), this._context);\n        }\n\n        if (data instanceof Function) {\n            const mountHtmlTooltip = makeElement(mount, 'div', [1], `${classPrefix}-tooltip-html-container`);\n            mountHtmlTooltip.html(data());\n        } else {\n            let content = data;\n            let displayFormat = 'default';\n\n            if (isSimpleObject(data)) {\n                content = data.content;\n                displayFormat = data.displayFormat;\n            }\n\n            const body = makeElement(mount, 'div', [displayFormat], `${classPrefix}-tooltip-content`, {},\n                d => d);\n\n            if (displayFormat === TABLE_FORMAT) {\n                const table = makeElement(body, 'table', [1], `${classPrefix}-tooltip-table`);\n                const tbody = makeElement(table, 'tbody', [1], `${classPrefix}-tooltip-table-tbody`);\n                const rows = makeElement(tbody, 'tr', content, `${classPrefix}-tooltip-table-row`);\n                rows.each(function (d, i) {\n                    selectElement(this).classed(`${classPrefix}-tooltip-table-row-${i}`, true);\n                });\n                const cells = makeElement(rows, 'td', d => d, `${classPrefix}-tooltip-table-cell`);\n                cells.each(function (d) {\n                    selectElement(this).html(d);\n                });\n            } else {\n                const rows = makeElement(body, 'div', content, '', {\n                    update: (elem, elemData) => elem.attr('class', elemData.className)\n                });\n                const cells = makeElement(rows, 'span', d => d.data, `${classPrefix}-tooltip-content`);\n                cells.attr('class', `${classPrefix}-tooltip-content`);\n                setStyles(rows, {\n                    margin: rowMargin\n                });\n                setStyles(cells, {\n                    display: 'inline-block' // 'margin-right': `${config.spacing}px`\n                });\n\n                cells.each(function (d) {\n                    const el = selectElement(this);\n                    el.html('');\n                    if (d instanceof Object) {\n                        if (d.type === 'icon') {\n                            const svg = makeElement(el, 'svg', [1]);\n                            const path = makeElement(svg, 'path', [1]);\n                            const shape = d.shape instanceof Function ? d.shape : getSymbol(d.shape);\n\n                            setAttrs(svg, {\n                                x: 0,\n                                y: 0,\n                                width: iconContainerSize,\n                                height: iconContainerSize\n                            });\n                            setAttrs(path, {\n                                d: shape.size(d.size)(),\n                                transform: `translate(${iconContainerSize / 2}, ${iconContainerSize / 2})`\n                            });\n                            setStyles(path, {\n                                fill: d.color\n                            });\n                            setStyles(svg, {\n                                width: `${iconContainerSize}px`,\n                                height: `${iconContainerSize}px`\n                            });\n                        } else {\n                            el.html(d.value);\n                            d.className && el.classed(d.className, true);\n                            setStyles(el, d.style);\n                        }\n                    } else {\n                        el.html(d);\n                    }\n                });\n            }\n        }\n        return this;\n    }\n\n    clear () {\n        this._model = null;\n        return this;\n    }\n}\n","import {\n    mergeRecursive,\n    getQualifiedClassName,\n    getUniqueId,\n    selectElement,\n    setStyles,\n    makeElement\n} from 'muze-utils';\nimport { ARROW_BOTTOM, ARROW_LEFT, ARROW_RIGHT, TOOLTIP_LEFT, TOOLTIP_RIGHT, TOOLTIP_BOTTOM, TOOLTIP_TOP,\n    INITIAL_STYLE } from './constants';\nimport { defaultConfig } from './default-config';\nimport { getArrowPos, placeArrow, reorderContainers } from './helper';\nimport './styles.scss';\nimport Content from './content';\n\n/**\n * This component is responsible for creating a tooltip element. It appends the tooltip\n * in the body element.\n * @class Tooltip\n */\nexport default class Tooltip {\n    /**\n     * Initializes the tooltip with the container element and configuration\n     * @param {HTMLElement} container container where the tooltip will be mounted.\n     * @param {string} className Class name of the tooltip.\n     */\n    constructor (htmlContainer, svgContainer) {\n        let connectorContainer = svgContainer;\n        this._id = getUniqueId();\n        this._config = {};\n        this.config({});\n        const tooltipConf = this._config;\n        const classPrefix = tooltipConf.classPrefix;\n        const contentClass = tooltipConf.content.parentClassName;\n        const container = makeElement(htmlContainer, 'div', [1], `${classPrefix}-tooltip-container`);\n        this._container = container;\n        this._tooltipContainer = container.append('div').style('position', 'absolute');\n        this._contentContainer = this._tooltipContainer.append('div').attr('class', `${classPrefix}-${contentClass}`);\n        this._tooltipBackground = this._tooltipContainer.append('div').style('position', 'relative');\n        this._tooltipArrow = this._tooltipContainer.append('div');\n\n        if (!svgContainer) {\n            connectorContainer = htmlContainer.append('svg').style('pointer-events', 'none');\n        }\n        this._contents = {};\n        this._tooltipConnectorContainer = selectElement(connectorContainer)\n            .append('g')\n            .attr('class', `${tooltipConf.classPrefix}-${tooltipConf.connectorClassName}`);\n        const id = this._id;\n        const defClassName = tooltipConf.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, id, tooltipConf.classPrefix);\n\n        setStyles(this._tooltipArrow, INITIAL_STYLE);\n        setStyles(this._tooltipBackground, INITIAL_STYLE);\n        this.addClass(qualifiedClassName.join(' '));\n        this.addClass(tooltipConf.className);\n        this.hide();\n    }\n\n    /**\n     * Sets the configuration of tooltip.\n     * @param {Object} config Configuration of tooltip\n     * @return {Tooltip} Instance of tooltip\n     */\n    config (...config) {\n        if (config.length > 0) {\n            const defConf = mergeRecursive({}, this.constructor.defaultConfig());\n            this._config = mergeRecursive(defConf, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n    /**\n     * Sets the class name of tooltip\n     * @param {string} className tooltip class name\n     * @return {Tooltip} Instance of tooltip.\n     */\n    addClass (className) {\n        this._tooltipContainer.classed(className, true);\n        return this;\n    }\n\n    context (...ctx) {\n        if (ctx.length) {\n            this._context = ctx[0];\n            return this;\n        }\n        return this._context;\n    }\n\n    content (name, data, contentConfig = {}) {\n        const config = this.config();\n        const { classPrefix } = config;\n        const contentClass = config.content.className;\n        const formatter = config.formatter;\n        const className = contentConfig.className || `${classPrefix}-${contentClass}-${name}`;\n        const content = this._contents[name] = this._contents[name] || new Content();\n        const container = makeElement(this._contentContainer, 'div', [contentConfig.order], className);\n        container.attr('class', `${classPrefix}-${contentClass} ${className}`);\n        reorderContainers(this._contentContainer, `.${classPrefix}-${contentClass}`);\n        const contentConf = config.content;\n        contentConfig.classPrefix = this._config.classPrefix;\n        content.config(contentConf);\n\n        if (data === null) {\n            content.clear();\n            container.remove();\n            delete this._contents[name];\n        } else {\n            content.update({\n                model: data,\n                formatter: contentConfig.formatter || formatter\n            });\n            content.context(this._context);\n            content.render(container);\n        }\n\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n        }\n        return this;\n    }\n\n    getContents () {\n        return Object.values(this._contents);\n    }\n\n    /**\n     * Positions the tooltip at the given x and y position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Tooltip} Instance of tooltip.\n     */\n    position (x, y, conf = {}) {\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n            return this;\n        }\n        this.show();\n        const target = this._target;\n        const repositionArrow = conf.repositionArrow;\n\n        if (target && repositionArrow) {\n            const node = this._tooltipContainer.node();\n            const config = this._config;\n            const arrowDisabled = config.arrow.disabled;\n            const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n            const arrowOrient = this._arrowOrientation;\n            const outsidePlot = arrowOrient === ARROW_LEFT || arrowOrient === ARROW_RIGHT ?\n                (y + node.offsetHeight - arrowWidth) < target.y || y > (target.y + target.height) :\n                (x + node.offsetWidth - arrowWidth) < target.x || x > (target.x + target.width);\n\n            if (!arrowDisabled) {\n                if (outsidePlot) {\n                    let path;\n                    this._tooltipArrow.style('display', 'none');\n                    this._tooltipBackground.style('display', 'none');\n                    this._tooltipConnectorContainer.style('display', 'block');\n                    const connector = this._tooltipConnectorContainer.selectAll('path').data([1]);\n                    const enter = connector.enter().append('path');\n                    if (arrowOrient === ARROW_LEFT) {\n                        path = `M ${x} ${y + node.offsetHeight / 2} L ${target.x + target.width}`\n                            + ` ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_RIGHT) {\n                        path = `M ${x + node.offsetWidth} ${y + node.offsetHeight / 2}`\n                                + ` L ${target.x} ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_BOTTOM) {\n                        path = `M ${x + node.offsetWidth / 2} ${y + node.offsetHeight}`\n                            + ` L ${target.x + target.width / 2} ${target.y}`;\n                    }\n                    enter.merge(connector).attr('d', path).style('display', 'block');\n                } else {\n                    const arrowPos = getArrowPos(arrowOrient, target, {\n                        x,\n                        y,\n                        boxHeight: node.offsetHeight,\n                        boxWidth: node.offsetWidth\n                    }, this._config);\n\n                    placeArrow(this, this._arrowOrientation, arrowPos);\n                    this._tooltipConnectorContainer.style('display', 'none');\n                }\n            }\n        }\n\n        const offset = this._offset || {\n            x: 0,\n            y: 0\n        };\n        this._tooltipContainer.style('left', `${offset.x + x}px`).style('top',\n            `${offset.y + y}px`);\n\n        return this;\n    }\n\n    /**\n     * Positions the tooltip relative to a rectangular box. It takes care of tooltip overflowing the\n     * boundaries.\n     * @param {Object} dim Dimensions of the plot.\n     */\n    positionRelativeTo (dim, tooltipConf = {}) {\n        let obj;\n        let orientation = tooltipConf.orientation;\n        this.show();\n        if (!dim) {\n            this.hide();\n            return this;\n        }\n\n        const extent = this._extent;\n        const node = this._tooltipContainer.node();\n\n        this._tooltipContainer.style('top', '0px')\n                        .style('left', '0px');\n        const offsetWidth = node.offsetWidth + 2;\n        const offsetHeight = node.offsetHeight + 2;\n        const config = this._config;\n        const offset = this._offset;\n        const arrowDisabled = config.arrow.disabled;\n        const arrowSize = arrowDisabled ? 0 : config.arrow.size;\n        const draw = tooltipConf.draw !== undefined ? tooltipConf.draw : true;\n        const topSpace = dim.y;\n        // When there is no space in right\n        const dimX = dim.x + dim.width + offset.x;\n        const rightSpace = extent.width - dimX;\n        const leftSpace = dim.x + offset.x - extent.x;\n        const positionTop = topSpace > (offsetHeight + arrowSize);\n        const positionRight = rightSpace >= offsetWidth + arrowSize;\n        const positionLeft = leftSpace >= offsetWidth + arrowSize;\n\n        const positionHorizontal = () => {\n            let position;\n            let x = dim.x + dim.width;\n            let y = dim.y;\n\n            if (positionRight) {\n                position = TOOLTIP_LEFT;\n                x += arrowSize;\n            } else if (positionLeft) {\n                x = dim.x - offsetWidth;\n                position = TOOLTIP_RIGHT;\n                x -= arrowSize;\n            } else {\n                position = 'left';\n                x += arrowSize;\n            }\n            if (dim.height < offsetHeight) {\n                y = Math.max(0, dim.y + dim.height / 2 - offsetHeight / 2);\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        const positionVertical = () => {\n            let position;\n            let y;\n            // Position tooltip at the center of plot\n            let x = dim.x - offsetWidth / 2 + dim.width / 2;\n\n            // Overflows to the right\n            if ((extent.width - (dim.x + offset.x)) < offsetWidth) {\n                x = extent.width - offsetWidth - offset.x;\n            } else if ((x + offset.x) < extent.x) { // Overflows to the left\n                x = extent.x;\n            }\n\n            if (positionTop) {\n                y = dim.y - offsetHeight - arrowSize;\n                position = TOOLTIP_BOTTOM;\n            } else {\n                y = dim.y + dim.height + arrowSize;\n                position = TOOLTIP_TOP;\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        this._target = dim;\n        if (!orientation) {\n            if (positionTop) {\n                orientation = 'vertical';\n            } else if (positionRight || positionLeft) {\n                orientation = 'horizontal';\n            } else {\n                orientation = 'vertical';\n            }\n        }\n\n        if (orientation === 'horizontal') {\n            obj = positionHorizontal();\n        } else if (orientation === 'vertical') {\n            obj = positionVertical();\n        }\n\n        this._position = {\n            x: obj.x,\n            y: obj.y\n        };\n\n        this._arrowPos = obj.arrowPos;\n        if (!arrowDisabled) {\n            placeArrow(this, obj.position, obj.arrowPos);\n        } else {\n            this._tooltipArrow.style('display', 'none');\n            this._tooltipBackground.style('display', 'none');\n        }\n        this._arrowOrientation = obj.position;\n        draw && this.position(obj.x, obj.y);\n        return this;\n    }\n\n    /**\n     * Hides the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    hide () {\n        this._tooltipContainer.style('display', 'none');\n        this._tooltipConnectorContainer.style('display', 'none');\n        return this;\n    }\n\n    /**\n     * Shows the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    show () {\n        this._tooltipContainer.style('display', 'block');\n        return this;\n    }\n\n    extent (extent) {\n        this._extent = extent;\n        return this;\n    }\n\n    offset (offset) {\n        this._offset = offset;\n        return this;\n    }\n\n    remove () {\n        this._tooltipContainer.remove();\n        this._tooltipBackground.remove();\n        this._tooltipConnectorContainer.remove();\n        return this;\n    }\n}\n","export const SELECTION_SUMMARY = 'selectionSummary';\nexport const HIGHLIGHT_SUMMARY = 'highlightSummary';\n","import {\n    FieldType,\n    GROUP_BY_FUNCTIONS,\n    formatTemporal,\n    DimensionSubtype,\n    MeasureSubtype,\n    DataModel,\n    defaultValue,\n    retrieveFieldDisplayName,\n    nestCollection,\n    getObjProp,\n    intersect\n} from 'muze-utils';\nimport { TABLE_FORMAT } from '@chartshq/muze-tooltip';\nimport { SELECTION_SUMMARY, HIGHLIGHT_SUMMARY } from '../../enums/tooltip-strategies';\n\nconst { SUM, COUNT } = GROUP_BY_FUNCTIONS;\nconst { InvalidAwareTypes } = DataModel;\nconst FIRST_VALUE_MARGIN = '10px';\nconst STACK = 'stack';\nconst SINGLE_DATA_MARGIN = 10;\n\nconst formatters = (formatter, interval, valueParser) => ({\n    [DimensionSubtype.TEMPORAL]: value => (value instanceof InvalidAwareTypes ? valueParser(value) :\n        formatTemporal(Number(value), interval)),\n    [MeasureSubtype.CONTINUOUS]: value => (value instanceof InvalidAwareTypes ? valueParser(value) :\n        formatter(value.toFixed(2))),\n    [DimensionSubtype.CATEGORICAL]: value => valueParser(value)\n});\n\nconst getTabularData = (dataObj, fieldInf) => {\n    const rows = [];\n    const { data, schema } = dataObj;\n    rows.push(schema.map(d => fieldInf[d.name].displayName));\n\n    data.forEach((d) => {\n        const row = [];\n        schema.forEach((fieldObj, i) => {\n            const value = fieldInf[fieldObj.name].fn(d[i]);\n            row.push(value);\n        });\n        rows.push(row);\n    });\n    return rows;\n};\n\nconst isSingleValue = (dataLen, stackedSum) => dataLen === 1 && !stackedSum;\n\nconst getStackedKeyValue = (params) => {\n    const { field, value, classPrefix } = params;\n    return ({\n        className: `${classPrefix}-tooltip-stacked-row`,\n        data: [{\n            value: field,\n            className: `${classPrefix}-tooltip-stacked-row-key`\n        }, {\n            value: `${value}`,\n            className: `${classPrefix}-tooltip-stacked-row-value`\n        }]\n    });\n};\n\nconst getKeyValue = (params) => {\n    const { field, value, classPrefix, margin, isSelected, removeKey, stackedSum, stackedValue } = params;\n\n    if (!removeKey) {\n        const keyObj = {\n            value: field,\n            className: `${classPrefix}-tooltip-key`\n        };\n        const valueObj = {\n            value,\n            className: `${classPrefix}-tooltip-value`\n        };\n        const stackedValueObj = {\n            value: stackedSum ? `(${(stackedValue * 100 / stackedSum).toFixed(2)} %)` : undefined,\n            className: `${classPrefix}-tooltip-stacked-percentage`\n        };\n\n        if (margin !== undefined) {\n            keyObj.style = {\n                'margin-left': `${margin}px`\n            };\n            valueObj.style = {\n                'margin-left': `${margin}px`\n            };\n            stackedValueObj.style = {\n                'margin-left': `${margin}px`\n            };\n        }\n\n        return ({\n            className: isSelected ? `${classPrefix}-tooltip-row ${classPrefix}-tooltip-selected-row`\n                : `${classPrefix}-tooltip-row`,\n            data: stackedSum ? [keyObj, stackedValueObj, valueObj] : [keyObj, valueObj]\n        });\n    }\n    return ({\n        data: [{\n            className: '',\n            value,\n            style: {\n                'margin-left': FIRST_VALUE_MARGIN\n            }\n        }],\n        className: `${classPrefix}-tooltip-first`\n    });\n};\n\nconst getEncodingValues = ({ field, axes, fn, val }) => {\n    const configField = axes.config().field;\n    const values = configField && configField !== field ? null : axes[fn](val);\n    return values;\n};\n\nexport const getStackedSum = (values, index) => values.reduce((a, b) => a + b[index], 0);\n\nexport const isStackedBar = layers => layers.some(d => d.transformType() === STACK);\n\nconst generateRetinalFieldsValues = (valueArr, retinalFields, content, context) => {\n    const { fieldsConfig, dimensionMeasureMap, axes, config, fieldInf, dataLen, target, stackedSum } = context;\n    const { classPrefix, margin, separator } = config;\n    const colorAxis = axes.color[0];\n    const shapeAxis = axes.shape[0];\n    const sizeAxis = axes.size[0];\n    const REF_VALUES_INDEX = 1;\n    const REF_KEYS_INDEX = 0;\n\n    for (const retField in retinalFields) {\n        const retIndex = fieldsConfig[retField].index;\n        const retinalFieldValue = valueArr[retIndex];\n        const measuresArr = dimensionMeasureMap[retField];\n        const icon = {\n            type: 'icon',\n            color: getEncodingValues({\n                field: retField, axes: colorAxis, fn: 'getColor', val: retinalFieldValue\n            }),\n            shape: getEncodingValues({\n                field: retField, axes: shapeAxis, fn: 'getShape', val: retinalFieldValue\n            }),\n            size: getEncodingValues({\n                field: retField, axes: sizeAxis, fn: 'getSize', val: retinalFieldValue\n            })\n        };\n        const { displayName, fn } = fieldInf[retField];\n        const formattedRetinalValue = fn(retinalFieldValue);\n\n        if (isSingleValue(dataLen, stackedSum)) {\n            content.push(getKeyValue({\n                field: displayName,\n                value: formattedRetinalValue,\n                classPrefix,\n                margin: SINGLE_DATA_MARGIN\n            }));\n        } else {\n            const hasMultipleMeasures = measuresArr.length > 1;\n            hasMultipleMeasures && (content.push({ data: [icon, formattedRetinalValue] }));\n            const selectedContext = target[REF_VALUES_INDEX][target[REF_KEYS_INDEX].indexOf(retField)];\n            const isSelected = selectedContext === retinalFieldValue;\n            measuresArr.forEach((measure) => {\n                const measureIndex = fieldsConfig[measure].index;\n                const { displayName: dName, fn: formatterFn } = fieldInf[measure];\n                const value = formatterFn(valueArr[measureIndex]);\n                const keyValue = getKeyValue({\n                    field: hasMultipleMeasures ? `${dName}${separator}` : formattedRetinalValue,\n                    value,\n                    classPrefix,\n                    margin: hasMultipleMeasures ? margin : undefined,\n                    isSelected,\n                    stackedSum,\n                    stackedValue: valueArr[measureIndex].toFixed(2)\n                });\n                if (!hasMultipleMeasures) {\n                    keyValue.data = [icon, ...keyValue.data];\n                }\n                content.push(keyValue);\n            });\n        }\n    }\n};\n\nconst getFieldInf = (schema, dataModel, context) => {\n    const { valueParser, timeDiffs } = context;\n    const fieldsObj = dataModel.getFieldspace().fieldsObj();\n    const defFormatter = formatters(null, null, valueParser)[DimensionSubtype.CATEGORICAL];\n\n    return schema.reduce((inf, field) => {\n        const { subtype, name, type } = field;\n        const interval = subtype === DimensionSubtype.TEMPORAL ? timeDiffs[name] : 0;\n        const nf = type === FieldType.MEASURE ? fieldsObj[name].numberFormat() : val => val;\n        inf[name] = {\n            fn: defaultValue(formatters(nf, interval, valueParser)[subtype], defFormatter),\n            displayName: `${retrieveFieldDisplayName(dataModel, name)}`\n        };\n        return inf;\n    }, {});\n};\n\nexport const buildTooltipData = (dataModel, config = {}, context) => {\n    let nestedDataObj;\n    let fieldValues = [];\n    const { data, schema } = dataModel.getData();\n    const fieldspace = dataModel.getFieldspace();\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const { color, shape, size } = context.firebolt.context.retinalFields();\n    const detailFields = context.detailFields || [];\n    const dimensions = schema.filter(d => d.type === FieldType.DIMENSION);\n    const measures = schema.filter(d => d.type === FieldType.MEASURE);\n    const containsDetailField = !!intersect(schema, detailFields).length;\n    const dataLen = data.length;\n    const {\n        dimensionMeasureMap,\n        axes\n    } = context;\n    const fieldInf = getFieldInf(schema, dataModel, context);\n\n    let displayFormat;\n    if (dataLen > 1 && containsDetailField) {\n        fieldValues = getTabularData({\n            data,\n            schema,\n            fieldspace\n        }, fieldInf);\n        displayFormat = TABLE_FORMAT;\n    } else {\n        const retinalFields = [color.field, shape.field, size.field].reduce((acc, field) => {\n            field && fieldsConfig[field].def.type === FieldType.DIMENSION && (acc[field] = 1);\n            return acc;\n        }, {});\n        const filteredDimensions = dimensions.filter(field => !retinalFields[field.name]);\n        const indices = filteredDimensions.map(dim => fieldsConfig[dim.name].index);\n        const allMeasures = [...new Set(...Object.values(dimensionMeasureMap))];\n        const isStacked = isStackedBar(context.firebolt.context.layers());\n        const filteredMeasures = !isSingleValue(dataLen, isStacked)\n            ? measures.filter(d => allMeasures.indexOf(d.name) === -1)\n            : measures;\n\n        nestedDataObj = nestCollection({\n            data,\n            keys: indices\n        });\n        nestedDataObj = !getObjProp(nestedDataObj[0], 'key') ? [{\n            values: nestedDataObj\n        }] : nestedDataObj;\n\n        const generateTooltipContent = (nestedData, index = 0, content = []) => {\n            const { classPrefix, separator } = config;\n            for (let i = 0, len = nestedData.length; i < len; i++) {\n                const { values, key } = nestedData[i];\n                const field = getObjProp(schema, indices[index], 'name');\n                const margin = dataLen === 1 || Object.keys(retinalFields).length === 0\n                ? SINGLE_DATA_MARGIN : undefined;\n                if (field) {\n                    const { displayName, fn } = fieldInf[field];\n                    const formattedValue = fn(key);\n                    const removeKey = !isSingleValue(dataLen, isStacked);\n                    content.push(getKeyValue({\n                        field: `${displayName}${separator}`,\n                        value: formattedValue,\n                        classPrefix,\n                        margin,\n                        isSelected: undefined,\n                        removeKey\n                    }));\n                }\n\n                if (values[0] && values[0].key) {\n                    generateTooltipContent(values, index + 1, content);\n                } else {\n                    let stackedSum = 0;\n                    if (isStacked) {\n                        stackedSum = getStackedSum(\n                            values,\n                            fieldsConfig[measures[0].name].index\n                        );\n                        const nf = measures[0].numberFormat;\n                        content.push(getStackedKeyValue({\n                            field: `${'Total'}${separator}`,\n                            value: nf ? nf(stackedSum.toFixed(2)) : stackedSum.toFixed(2),\n                            classPrefix\n                        }));\n                    }\n                    for (let j = 0, len2 = values.length; j < len2; j++) {\n                        const valueArr = values[j];\n                        generateRetinalFieldsValues(valueArr, retinalFields, content, {\n                            fieldInf,\n                            axes,\n                            config,\n                            fieldsConfig,\n                            dimensionMeasureMap,\n                            dataLen,\n                            target: context.payload.target,\n                            stackedSum\n                        });\n                        filteredMeasures.forEach((measure) => {\n                            const { name } = measure;\n                            const { displayName, fn } = fieldInf[name];\n                            content.push(getKeyValue({\n                                field: `${displayName}${separator}`,\n                                value: fn(valueArr[fieldsConfig[name].index]),\n                                classPrefix,\n                                margin: SINGLE_DATA_MARGIN\n                            }));\n                        });\n                    }\n                }\n            }\n        };\n        generateTooltipContent(nestedDataObj, 0, fieldValues);\n    }\n\n    return {\n        content: fieldValues,\n        displayFormat\n    };\n};\n\nexport const strategies = {\n    [SELECTION_SUMMARY]: (dm, config, context) => {\n        const { selectionSet } = context;\n        const aggFns = selectionSet.mergedEnter.aggFns;\n        const dataObj = dm.getData();\n        const measures = dataObj.schema.filter(d => d.type === FieldType.MEASURE);\n        const aggregatedModel = dm.groupBy([''], measures.reduce((acc, v) => {\n            acc[v.name] = aggFns[v.name] === COUNT ? SUM : aggFns[v.name];\n            return acc;\n        }, {\n            saveChild: false\n        }));\n        const fieldsConf = aggregatedModel.getFieldsConfig();\n        let values = [[{\n            value: `${dataObj.data.length}`,\n            style: {\n                'font-weight': 'bold'\n            }\n        }, 'Items Selected']];\n        const measureNames = measures.map(d => d.name);\n        const data = aggregatedModel.getData().data;\n        measureNames.forEach((measure) => {\n            const { numberFormat } = fieldsConf[measure].def;\n            const value = data[0][fieldsConf[measure].index].toFixed(2);\n\n            value instanceof InvalidAwareTypes ? values.push([]) : values.push([`(${aggFns[measure].toUpperCase()})`,\n                `${retrieveFieldDisplayName(dm, measure)}`,\n                {\n                    value: numberFormat ? numberFormat(value) : value,\n                    style: {\n                        'font-weight': 'bold'\n                    }\n                }]);\n        });\n        if (measureNames.length === 1) {\n            values = [[...values[0], ...values[1]]];\n        }\n        return ([{\n            data: values[0]\n        }]);\n    },\n    [HIGHLIGHT_SUMMARY]: (data, config, context) => buildTooltipData(data, config, context)\n};\n","import { Tooltip as TooltipRenderer } from '@chartshq/muze-tooltip';\nimport { FieldType, mergeRecursive, defaultValue } from 'muze-utils';\nimport { spaceOutBoxes } from '../helper';\nimport { strategies } from './strategies';\nimport { FRAGMENTED } from '../../enums/constants';\nimport { TOOLTIP } from '../../enums/side-effects';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\nimport { HIGHLIGHT_SUMMARY } from '../../enums/tooltip-strategies';\n\nconst configResolvers = {\n    [HIGHLIGHT_SUMMARY]: (specificConf, config) => defaultValue(specificConf, config),\n    default: specificConf => defaultValue(specificConf, {})\n};\n\nconst sanitizeConfig = (config, context) => {\n    const strategyObj = context._strategies;\n    const sanitizedConf = Object.assign({}, config);\n    for (const key in strategyObj) {\n        sanitizedConf[key] = defaultValue(configResolvers[key], configResolvers.default)(config[key], config);\n    }\n    return sanitizedConf;\n};\n\nexport default class Tooltip extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._tooltips = {};\n        this._strategies = mergeRecursive({}, strategies);\n        this._strategy = HIGHLIGHT_SUMMARY;\n    }\n\n    static defaultConfig () {\n        return {\n            padding: 5,\n            offset: {\n                x: 0,\n                y: 0\n            },\n            highlightSummary: {\n                dataTransform: (dt, fields) => (fields ? dt.project(fields, { saveChild: false }) : dt\n                )\n            },\n            selectionSummary: {\n                dataTransform: (dt, fields) => {\n                    const fieldspace = dt.getFieldspace();\n                    const dimensions = Object.keys(fieldspace.getDimension());\n                    const measures = Object.keys(fieldspace.getMeasure());\n                    const projectedFields = defaultValue(fields, measures.length ? [measures[0]] : []);\n                    return dt.project([...dimensions, ...projectedFields], {\n                        saveChild: false\n                    });\n                }\n            }\n        };\n    }\n\n    static formalName () {\n        return TOOLTIP;\n    }\n\n    config (...params) {\n        if (params.length) {\n            const config = this._config = mergeRecursive(this._config, sanitizeConfig(params[0], this));\n            const strategyObj = this._strategies;\n            for (const key in strategyObj) {\n                const formatter = config[key].formatter;\n                this.setStrategy(key, formatter);\n            }\n            return this;\n        }\n        return this._config;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        let totalHeight = 0;\n        let totalWidth = 0;\n        const dataModel = selectionSet.mergedEnter.model;\n        const context = this.firebolt.context;\n        const drawingInf = this.drawingContext();\n        if ((dataModel.isEmpty() || payload.criteria === null)) {\n            this.hide(options, null);\n            return this;\n        }\n\n        const tooltips = this._tooltips;\n        const config = this.config();\n        const boundBox = {\n            width: drawingInf.width,\n            height: drawingInf.height\n        };\n        const showInPosition = payload.showInPosition;\n        const pad = config.padding;\n        const dataModels = [];\n        const fragmented = config.mode === FRAGMENTED;\n        const sourceInf = context.getSourceInfo();\n        const fields = sourceInf.fields;\n        const xFieldDim = fields.x[0] ? fields.x[0].type() === FieldType.DIMENSION : false;\n        const showVertically = !!xFieldDim;\n        const tooltipPos = payload.position;\n        const boxes = [];\n        const enter = {};\n        const uids = dataModel.getData().uids;\n        if (fragmented) {\n            dataModels.push(...uids.map(d => dataModel.select((fieldsArr, i) => i === d, {\n                saveChild: false\n            })));\n        } else {\n            dataModels.push(dataModel);\n        }\n\n        let target = payload.target;\n        let targetFields = [];\n        if (target) {\n            targetFields = target[0] || [];\n            const sourceFields = payload.sourceFields;\n            const indices = [];\n            for (let i = 0, len = targetFields.length; i < len; i++) {\n                if (sourceFields.indexOf(targetFields[i]) !== -1) {\n                    indices.push(i);\n                }\n            }\n            target = target.map(d => d.filter((v, i) => indices.indexOf(i) !== -1));\n        }\n\n        const plotDimensions = context.getPlotPointsFromIdentifiers(target || payload.criteria, {\n            getBBox: true\n        });\n\n        const strategy = defaultValue(options.strategy, this._strategy);\n        const strategyConf = config[strategy];\n        const { dataTransform, fields: projectFields } = strategyConf;\n        const strategyObj = this._strategies;\n        // Show tooltip for each datamodel\n        for (let i = 0; i < dataModels.length; i++) {\n            let plotDim = plotDimensions[i];\n            if (fragmented) {\n                const dimensions = dataModels[i].getData().schema.filter(d => d.type === FieldType.DIMENSION)\n                    .map(d => d.name);\n                plotDim = context.getPlotPointsFromIdentifiers(dataModels[i].project(dimensions), { getBBox: true });\n                plotDim = plotDim && plotDim[0];\n            }\n\n            const dt = dataTransform(dataModels[i], projectFields, this);\n\n            enter[i] = true;\n            const { parentContainer: layoutContainer, parentContainerDimensions } = drawingInf;\n            const layoutBoundBox = layoutContainer.getBoundingClientRect();\n            const unitBoundBox = drawingInf.htmlContainer.getBoundingClientRect();\n\n            const offsetLeft = unitBoundBox.left - layoutBoundBox.left;\n            const offsetTop = unitBoundBox.top - layoutBoundBox.top;\n            const tooltipInst = tooltips[i] = tooltips[i] || new TooltipRenderer(layoutContainer,\n                    drawingInf.svgContainer);\n\n            sourceInf.payload = payload;\n            sourceInf.firebolt = this.firebolt;\n            sourceInf.detailFields = context.detailFields();\n            sourceInf.timeDiffs = context.timeDiffsByField();\n            sourceInf.valueParser = context.valueParser();\n            sourceInf.selectionSet = selectionSet;\n            tooltipInst.context(sourceInf);\n            const strategyFn = strategyObj[strategy];\n            tooltipInst.content(strategy, dt, {\n                formatter: strategyFn,\n                order: options.order\n            })\n                            .config(this.config())\n                            .extent({\n                                x: 0,\n                                y: 0,\n                                width: parentContainerDimensions.width,\n                                height: parentContainerDimensions.height\n                            })\n                            .offset({\n                                x: offsetLeft + (config.offset.x || 0),\n                                y: offsetTop + (config.offset.y || 0)\n                            });\n\n            if (showInPosition) {\n                tooltipInst.position(tooltipPos.x + pad, tooltipPos.y + pad);\n            } else if (plotDim) {\n                tooltipInst.positionRelativeTo({\n                    x: plotDim.x,\n                    y: plotDim.y,\n                    width: plotDim.width || 0,\n                    height: plotDim.height || 0\n                }, {\n                    orientation: fragmented ?\n                        (showVertically ? 'horizontal' : 'vertical') : undefined\n                });\n            } else {\n                tooltipInst.hide();\n                break;\n            }\n\n            if (fragmented) {\n                const position = tooltipInst._position;\n                const tooltipBoundBox = tooltipInst._tooltipContainer.node().getBoundingClientRect();\n\n                totalHeight += tooltipBoundBox.height + pad;\n                totalWidth += tooltipBoundBox.width + pad;\n                if (showVertically ? totalHeight > drawingInf.height : totalWidth > drawingInf.width) {\n                    break;\n                }\n                boxes.push({\n                    x: position.x,\n                    y: position.y,\n                    width: tooltipBoundBox.width,\n                    height: tooltipBoundBox.height,\n                    tooltip: tooltipInst\n                });\n            }\n        }\n\n        for (const key in tooltips) {\n            if (!enter[key]) {\n                const tooltip = tooltips[key];\n                tooltip.content(payload.action, null);\n                if (!tooltip.getContents().length) {\n                    tooltip.remove();\n                    delete tooltips[key];\n                }\n            }\n        }\n        if (fragmented) {\n            spaceOutBoxes(boxes, boundBox, showVertically);\n            boxes.forEach(box => box.tooltip.position(box.x, box.y, {\n                repositionArrow: true\n            }));\n        }\n        return this;\n    }\n\n    hide (options) {\n        const tooltips = this._tooltips;\n        for (const key in tooltips) {\n            if ({}.hasOwnProperty.call(tooltips, key)) {\n                const strategy = options.strategy || this._strategy;\n                tooltips[key].content(strategy, null);\n                tooltips[key].hide();\n            }\n        }\n    }\n}\n","export const spaceOutBoxes = (boxes, extent, showVertically) => {\n    let y;\n    let height;\n    let x;\n    let width;\n    let i;\n    const pad = 5;\n    const len = boxes.length;\n    const spaceOutIfOverlap = (firstBox, secondBox, opposite) => {\n        x = firstBox.x;\n        width = firstBox.width;\n        y = firstBox.y;\n        height = firstBox.height;\n        const bottom = y + height;\n        const right = x + width;\n\n        if (showVertically) {\n            if (opposite ? y < (secondBox.y + secondBox.height) : bottom > secondBox.y) {\n                secondBox.y = opposite ? firstBox.y - secondBox.height - pad :\n                        bottom + pad;\n            }\n        } else if (opposite ? x < (secondBox.x + secondBox.width) : right > secondBox.x) {\n            secondBox.x = opposite ? firstBox.x - secondBox.width - pad :\n                    right + pad;\n        }\n    };\n\n    boxes.sort((a, b) => (showVertically ? a.y - b.y : a.x - b.x));\n    i = 0;\n\n    for (i = 0; i < len - 1; i++) {\n        spaceOutIfOverlap(boxes[i], boxes[i + 1]);\n    }\n\n    if ((boxes[i].y + boxes[i].height) > extent.height ||\n            (boxes[i].x + boxes[i].width) > extent.width) {\n        if (showVertically) {\n            boxes[i].y -= (boxes[i].height + boxes[i].y) - extent.height;\n        } else {\n            boxes[i].x -= (boxes[i].width + boxes[i].x) - extent.width;\n        }\n        for (i = len - 1; i > 0; i--) {\n            spaceOutIfOverlap(boxes[i], boxes[i - 1], true);\n        }\n    }\n    return boxes;\n};\n","import { selectElement, FieldType } from 'muze-utils';\n\nimport './styles.scss';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport { CROSSLINE } from '../../enums/side-effects';\nimport SpawnableSideEffect from '../spawnable';\n\nexport default class Crossline extends SpawnableSideEffect {\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-crossline-group`,\n            bandClass: `${CLASSPREFIX}-crossband`,\n            lineClass: `${CLASSPREFIX}-crossline`\n        };\n    }\n\n    static formalName () {\n        return CROSSLINE;\n    }\n\n    apply (selectionSet, payload) {\n        let height;\n        let bandWidth;\n        let px;\n        let width;\n        const {\n            className,\n            bandClass,\n            lineClass\n        } = this.config();\n        const dataModel = selectionSet.mergedEnter.model;\n        const drawingInf = this.drawingContext();\n        if (payload.criteria && dataModel && dataModel.isEmpty()) {\n            return this;\n        }\n        if (payload.criteria === null || !dataModel) {\n            this.hide();\n            return this;\n        }\n\n        const dataObj = dataModel.getData();\n        const sourceInf = this.firebolt.context.getSourceInfo();\n        const axes = sourceInf.axes;\n        const axisFields = sourceInf.fields;\n        const fields = selectionSet.fields;\n        const data = dataObj.data;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const svgContainer = drawingInf.sideEffectGroup;\n\n        const elemData = [];\n        fields.forEach((field) => {\n            const fieldIndex = fieldsConfig[field] && fieldsConfig[field].index;\n            const dataArr = data.map(d => d[fieldIndex]);\n            const axisIndex = [['x', 0], ['x', 1], ['y', 0], ['y', 1]].find((arr) => {\n                const fieldInst = axisFields[arr[0]][arr[1]];\n                return fieldInst && fieldInst.type() === FieldType.DIMENSION &&\n                    fieldInst.getMembers().indexOf(field) !== -1;\n            });\n            if (axisIndex !== undefined && data.length) {\n                const type = axisIndex[0];\n                const axis = axes[type][axisIndex[1]];\n                const value = dataArr[0];\n                bandWidth = axis.getUnitWidth() || 0;\n                px = axis.getScaleValue(value) + bandWidth / 2 + drawingInf.xOffset;\n\n                let layers = this.firebolt.context.layers();\n                layers = layers.filter(layer => !!layer.config().crossline);\n\n                if (layers.length) {\n                    const plotWidth = Math.max(...layers.map(layer => layer.getPlotSpan()[type]));\n                    const pad = Math.max(...layers.map(layer => layer.getPlotPadding()[type]));\n                    height = drawingInf.height;\n                    width = drawingInf.width;\n                    const startPx = px - plotWidth / 2 - pad / 2;\n                    const endPx = px + plotWidth / 2 + pad / 2;\n                    const dataPoint = {};\n                    if (type === 'y') {\n                        dataPoint.d = `M 0 ${startPx} L 0 ${endPx} L ${width} ${endPx} L ${width} ${startPx} Z`;\n                    } else {\n                        dataPoint.d = `M ${startPx} 0 L ${endPx} 0 L ${endPx} ${height} L ${startPx} ${height} Z`;\n                    }\n                    dataPoint.className = plotWidth ? bandClass : lineClass;\n                    !isNaN(px) && elemData.push(dataPoint);\n                }\n            }\n        });\n        if (elemData.length) {\n            const parentGroup = this.createElement(svgContainer, 'g', [1], className);\n            const elem = this.createElement(parentGroup, 'path', elemData);\n            elem.attr('d', d => d.d).style('pointer-events', 'none')\n                            .attr('class', d => d.className);\n        }\n        return this;\n    }\n\n    hide () {\n        const className = this.config().className;\n        const drawingInf = this.drawingContext();\n        selectElement(drawingInf.sideEffectGroup).selectAll(`.${className}`).remove();\n    }\n}\n","import { getArrayDiff } from 'muze-utils';\n\n/**\n * @private\n * @param {Object} set Points set\n * @param {Array.<number>} selectedPointsId array of id of selected points\n * @return {Object} Returns the set with the selected points removed\n */\nexport const getFormattedSet = (set, selectedPointsId) => {\n    const formattedSet = getArrayDiff(set.uids, selectedPointsId);\n    return {\n        ...set,\n        ...{\n            uids: formattedSet,\n            length: formattedSet.length\n        }\n    };\n};\n","import { getFormattedSet } from './helper';\n\nconst fadeFn = (set, context) => {\n    const {\n        mergedEnter,\n        mergedExit,\n        exitSet,\n        completeSet\n    } = set;\n\n    if (!mergedEnter.length && !mergedExit.length) {\n        context.applyInteractionStyle(completeSet, {}, 'fade', false);\n    } else {\n        context.applyInteractionStyle(exitSet, {}, 'fade', true);\n        context.applyInteractionStyle(mergedEnter, {}, 'fade', false);\n    }\n};\n\nexport const strategies = {\n    fade: fadeFn,\n    focus: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'focus', false);\n            context.applyInteractionStyle(completeSet, {}, 'focusStroke', false);\n        } else {\n            context.applyInteractionStyle(mergedExit, {}, 'focus', true);\n            context.applyInteractionStyle(mergedEnter, {}, 'focus', false);\n\n            context.applyInteractionStyle(mergedExit, {}, 'focusStroke', false);\n            context.applyInteractionStyle(mergedEnter, {}, 'focusStroke', true);\n        }\n    },\n    highlight: (set, context, payload, excludeSetIds) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            exitSet,\n            completeSet\n        } = set;\n\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'highlight', false);\n        } else {\n            const layers = context.firebolt.context.layers();\n\n            layers.forEach((layer) => {\n                // get uids of only the currently highlighted point\n                const formattedSet = layer.getUidsFromPayload(mergedEnter, payload.target);\n                // get uids of only the currently highlighted point excluding the excludeSet ids\n                const currentHighlightedSet = getFormattedSet(formattedSet, excludeSetIds);\n\n                context.applyInteractionStyle(currentHighlightedSet, {}, 'highlight', true, payload);\n                context.applyInteractionStyle(exitSet, {}, 'highlight', false);\n            });\n        }\n    }\n};\n","import SurrogateSideEffect from '../surrogate';\nimport { strategies } from './strategy';\nimport { HIGHLIGHTER } from '../../enums/side-effects';\nimport { getFormattedSet } from './helper';\n\nexport default class PlotHighlighter extends SurrogateSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategy = 'highlight';\n        this._strategies = strategies;\n    }\n\n    static formalName () {\n        return HIGHLIGHTER;\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    getExcludeSetIds (excludeSet = []) {\n        // Get excludeSetIds if excludeSet is a function\n        if (excludeSet instanceof Function) {\n            return excludeSet(this.firebolt.getEntryExitSet);\n        }\n        // Get excludeSetIds if excludeSet is not a function\n        return excludeSet.reduce((acc, behaviour) => {\n            const selectedPoints = this.firebolt.getEntryExitSet(behaviour) || {};\n            const selectedPointsIds = (selectedPoints.mergedEnter || {}).uids;\n            if (selectedPointsIds) acc.push(...selectedPointsIds);\n            return acc;\n        }, []);\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const currentStrategy = this._strategies[options.strategy || this._strategy];\n        const excludeSetIds = this.getExcludeSetIds(options.excludeSet);\n\n        // Get all sets except the excludeSet points\n        const formattedSet = {\n            ...selectionSet,\n            completeSet: getFormattedSet(selectionSet.completeSet, excludeSetIds),\n            entrySet: getFormattedSet(selectionSet.entrySet[1], excludeSetIds),\n            exitSet: getFormattedSet(selectionSet.exitSet[1], excludeSetIds)\n        };\n\n        currentStrategy(formattedSet, this, payload, excludeSetIds);\n\n        return this;\n    }\n}\n","import SurrogateSideEffect from '../surrogate';\n\nexport default class FilterEffect extends SurrogateSideEffect {\n    static formalName () {\n        return 'filter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static mutates () {\n        return true;\n    }\n\n    apply (selectionSet, payload) {\n        const context = this.firebolt.context;\n        const entryModel = selectionSet.mergedEnter.model;\n        if (payload.criteria === null) {\n            context.clearCaching().resetData();\n        } else {\n            context.enableCaching().data(entryModel);\n        }\n        return this;\n    }\n}\n","import { DataModel, getObjProp, mergeRecursive } from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport { ANCHORS } from '../../enums/side-effects';\nimport SpawnableSideEffect from '../spawnable';\nimport './styles.scss';\n\nconst addLayer = (layerRegistry, context, sideEffect) => {\n    context.addLayer((layerDefs) => {\n        const layers = [];\n\n        if (layerDefs) {\n            layerDefs.forEach((layerDef) => {\n                const mark = layerDef.mark;\n                const layerCls = layerRegistry[mark];\n\n                if (layerCls && layerCls.shouldDrawAnchors()) {\n                    const depLayerEncoding = layerDef.def.encoding;\n                    const encoding = {\n                        x: getObjProp(depLayerEncoding, 'x', 'field'),\n                        y: getObjProp(depLayerEncoding, 'y', 'field'),\n                        color: getObjProp(depLayerEncoding, 'color', 'field'),\n                        size: {\n                            field: getObjProp(depLayerEncoding, 'size', 'field'),\n                            value: () => sideEffect.defaultSizeValue()\n                        }\n                    };\n                    const commonName = sideEffect.constructor.formalName();\n                    const name = `${layerDef.def.name}-${commonName}`;\n\n                    layers.push({\n                        name,\n                        mark: 'point',\n                        groupId: commonName,\n                        className: sideEffect.constructor.defaultConfig().className,\n                        encoding,\n                        transform: {\n                            type: 'identity'\n                        },\n                        calculateDomain: false,\n                        transition: sideEffect.getTransitionConfig(),\n                        source: dm => dm.select(() => false, {\n                            saveChild: false\n                        }),\n                        interactive: false,\n                        owner: layerDef.def.name\n                    });\n                }\n            });\n        }\n        return layers;\n    });\n};\n\nexport default class AnchorEffect extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._layersMap = {};\n        this.addAnchorLayers();\n    }\n\n    setAnchorLayerStyle (layers, payload) {\n        const anchorLayer = layers.filter(l => l.config().groupId === 'anchors')[0];\n        if (anchorLayer) {\n            // Execute focusStroke interaction of anchor point layer\n            const data = anchorLayer.data();\n            const ids = data.getUids();\n            const layerName = this.constructor.formalName();\n            const defaultInteractionLayerEncoding = anchorLayer.config().encoding.interaction;\n            const currentInteraction = defaultInteractionLayerEncoding[layerName];\n            const formattedUids = anchorLayer.getUidsFromPayload({\n                model: data,\n                uids: ids\n            }, payload.target).uids;\n\n            if (!formattedUids.length) {\n                anchorLayer.applyInteractionStyle(currentInteraction, ids, false);\n            } else {\n                anchorLayer.applyInteractionStyle(currentInteraction, formattedUids, true);\n            }\n        }\n        return true;\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-anchors-group`\n        };\n    }\n\n    static formalName () {\n        return ANCHORS;\n    }\n\n    addAnchorLayers () {\n        const context = this.firebolt.context;\n        const layerRegistry = context.registry().layerRegistry;\n\n        addLayer(layerRegistry, context, this);\n        return this;\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n\n    /**\n     * Returns the default area value of the anchor point.\n     * @return { number } Default area value of anchor.\n     */\n    defaultSizeValue () {\n        return 100;\n    }\n\n    // Default offset by which anchor size is changed\n    getAnchorSizeonInteraction () {\n        return 0;\n    }\n\n    apply (selectionSet, payload) {\n        const dataModel = selectionSet.mergedEnter.model;\n        const formalName = this.constructor.formalName();\n        const context = this.firebolt.context;\n        const layers = context.layers().filter(layer => layer.config().groupId === formalName);\n\n        layers.forEach((layer) => {\n            const linkedLayer = context.getLayerByName(layer.config().owner);\n            const [transformedData, schema] = linkedLayer.getTransformedDataFromIdentifiers(dataModel);\n            const transformedDataModel = new DataModel(transformedData, schema);\n            const anchorSizeConfig = {\n                encoding: {\n                    size: {\n                        value: () => this.defaultSizeValue() + this.getAnchorSizeonInteraction()\n                    }\n                }\n            };\n            const newConfig = mergeRecursive(layer.config(), anchorSizeConfig);\n\n            layer\n                .data(transformedDataModel)\n                .config(newConfig);\n\n            this.firebolt.context._dependencies.throwback.registerChangeListener('onLayerDraw', () => {\n                const currentLayers = this.firebolt.context.layers();\n                this.setAnchorLayerStyle(currentLayers, payload);\n            });\n\n            return this;\n        });\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\nimport { PERSISTENT_ANCHORS } from '../enums/side-effects';\n\nexport default class PersistentAnchors extends AnchorEffect {\n    static formalName () {\n        return PERSISTENT_ANCHORS;\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-persistent-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n\n    setAnchorLayerStyle (layers) {\n        const anchorLayer = layers.filter(l => l.config().groupId === PERSISTENT_ANCHORS)[0];\n        if (anchorLayer) {\n            // Execute focusStroke interaction of anchor point layer\n            const ids = anchorLayer.data().getUids();\n            const layerName = this.constructor.formalName();\n            const defaultInteractionLayerEncoding = anchorLayer.config().encoding.interaction;\n            anchorLayer.applyInteractionStyle(defaultInteractionLayerEncoding[layerName], ids, true);\n        }\n    }\n\n    // offset value by which anchor size is changed\n    // Applied only on select interaction\n    getAnchorSizeonInteraction () {\n        return 50;\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\nimport { BRUSH_ANCHORS } from '../enums/side-effects';\n\nexport default class BrushAnchors extends AnchorEffect {\n    static formalName () {\n        return BRUSH_ANCHORS;\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-brush-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import * as BEHAVIOURS from './enums/behaviours';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: ['selectionBox', {\n        name: 'highlighter',\n        options: {\n            strategy: 'fade'\n        }\n    }, 'brush-anchors'],\n    [`${BEHAVIOURS.BRUSH},${BEHAVIOURS.SELECT}`]: [{\n        name: 'tooltip',\n        options: {\n            strategy: 'selectionSummary',\n            order: 0,\n            filter: context => context.config().mode === 'fragmented'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'highlight',\n            // behaviours for which the current strategy won't apply\n            // accepts an array or fn\n            excludeSet: [BEHAVIOURS.SELECT]\n        }\n    }, 'crossline', {\n        name: 'tooltip',\n        options: {\n            order: 9999\n        }\n    }, 'anchors'],\n    [BEHAVIOURS.FILTER]: ['filter'],\n    [BEHAVIOURS.SELECT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'focus'\n        }\n    }, 'persistent-anchors']\n};\n","import { componentRegistry } from 'muze-utils';\nimport * as behaviours from './actions/behavioural';\nimport { physicalActions } from './actions/physical';\nimport * as sideEffects from './side-effects';\n\nconst convertToObj = (comps) => {\n    const obj = {};\n\n    for (const key in comps) {\n        const val = comps[key];\n\n        obj[val.formalName()] = val;\n    }\n    return obj;\n};\n\nexport const registry = {\n    behaviours: componentRegistry(convertToObj(behaviours)),\n    physicalActions: componentRegistry(physicalActions),\n    sideEffects: componentRegistry(convertToObj(sideEffects))\n};\n","import { DimensionSubtype } from 'muze-utils';\n\nconst getRangeFromData = (instance, selectionDataModel, propConfig) => {\n    let criteria;\n    const dataObj = selectionDataModel[0].getData();\n    const propCriteria = propConfig.payload.criteria;\n    const sourceIdentifiers = propConfig.sourceIdentifiers;\n    const schema = dataObj.schema;\n    const fieldMap = instance.data().getFieldsConfig();\n    const data = dataObj.data;\n    const isActionSourceSame = instance.id() === propConfig.sourceId;\n\n    if (isActionSourceSame) {\n        criteria = propCriteria;\n    } else {\n        criteria = (sourceIdentifiers !== null) ? schema.reduce((acc, obj, index) => {\n            let range;\n            const field = obj.name;\n            const fieldObj = fieldMap[field];\n            const type = fieldObj && (fieldObj.def.subtype ? fieldObj.def.subtype : fieldObj.def.type);\n            const isDimension = type === DimensionSubtype.CATEGORICAL;\n\n            if (!fieldObj) {\n                return acc;\n            }\n\n            if (!isDimension) {\n                range = [Math.min(...data.map(d => d[index])), Math.max(...data.map(d => d[index]))];\n            } else {\n                range = data.map(d => d[index]);\n            }\n            acc[field] = range;\n            return acc;\n        }, {}) : null;\n    }\n    return criteria;\n};\n\nexport const payloadGenerator = {\n    brush: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const criteria = getRangeFromData(instance, selectionDataModel, propConfig);\n        const payload = Object.assign({}, propPayload);\n        payload.criteria = criteria;\n        return payload;\n    },\n\n    __default: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const sourceIdentifiers = propConfig.sourceIdentifiers;\n        const dataObj = selectionDataModel[0].getData();\n        let schema = dataObj.schema;\n        const payload = Object.assign({}, propPayload);\n        schema = dataObj.schema;\n        const data = dataObj.data;\n        const sourceFields = schema.map(d => d.name);\n        payload.criteria = !sourceIdentifiers && selectionDataModel[0].isEmpty() ? null :\n            [sourceFields, ...data];\n        payload.sourceFields = sourceIdentifiers ? sourceIdentifiers.fields.map(d => d.name) : [];\n        return payload;\n    }\n};\n\n","import { FieldType, ReservedFields } from 'muze-utils';\n\nconst addFacetData = ({ identifiers: data, fields }, facetData, propFields) => {\n    const fieldsWithFacets = [...fields, ...facetData[0].map(d => d.getSchemaDef())];\n    const fieldIndexMap = fieldsWithFacets.reduce((acc, v, i) => {\n        acc[v.name] = i;\n        return acc;\n    }, {});\n\n    const dataWithFacets = [\n        propFields\n    ];\n\n    for (let i = 1, len = data.length; i < len; i++) {\n        const row = [...data[i], ...facetData[1]];\n        const newRow = [];\n        propFields.forEach((field) => {\n            const idx = fieldIndexMap[field];\n            newRow.push(row[idx]);\n        });\n        dataWithFacets.push(newRow);\n    }\n    return dataWithFacets;\n};\n\nexport const propagateValues = (instance, action, config = {}) => {\n    let propagateInterpolatedValues = false;\n    let propFields = [];\n    const { payload, identifiers, propagationFields } = config;\n    const { fields: propagationFieldNames = [], append } = propagationFields[action] || {};\n    const context = instance.context;\n    const dataModel = context.cachedData()[0];\n    const sourceId = context.id();\n    const sideEfffects = instance.sideEffects();\n    const behaviourEffectMap = instance._behaviourEffectMap;\n    const propagationBehaviourMap = instance._propagationBehaviourMap;\n    const propagationBehaviour = propagationBehaviourMap[action] || action;\n    const facetByFields = context.facetByFields();\n\n    payload.sourceUnit = sourceId;\n    payload.action = action;\n    payload.sourceCanvas = context.parentAlias();\n\n    if (identifiers !== null) {\n        propFields = identifiers.fields;\n\n        if (propagationFieldNames.length) {\n            const fields = identifiers.fields;\n            propFields = append ? [...fields.map(d => d.name), ...propagationFieldNames] : propagationFieldNames;\n            Object.assign(identifiers, {\n                identifiers: addFacetData(identifiers, facetByFields, propFields)\n            });\n        }\n\n        if (propFields.length && propFields.every(field => field.type === FieldType.MEASURE) ||\n            propFields.some(field => field === ReservedFields.ROW_ID)) {\n            propagateInterpolatedValues = true;\n        }\n    }\n\n    const groupId = context.parentAlias();\n\n    const filterFn = (entry, propagationConf) => {\n        const effects = behaviourEffectMap[entry.config.action];\n        const mutates = entry.config.groupId ?\n            (effects ? effects.some(d => sideEfffects[d.name || d].constructor.mutates()) : false) : true;\n        return entry.config.groupId !== propagationConf.groupId && mutates;\n    };\n\n    const sourceBehaviour = instance._actions.behavioural[action];\n    let isMutableAction = sourceBehaviour ? sourceBehaviour.constructor.mutates() : false;\n    const propConfig = {\n        payload,\n        action,\n        criteria: identifiers,\n        isMutableAction,\n        propagateInterpolatedValues,\n        groupId,\n        sourceId: isMutableAction ? groupId : sourceId,\n        filterFn,\n        enabled: (propConf, firebolt) => (action !== propagationBehaviour ?\n            propConf.payload.sourceCanvas === firebolt.context.parentAlias() : true)\n    };\n\n    dataModel.propagate(identifiers, propConfig, true);\n\n    if (action !== propagationBehaviour) {\n        const behaviourInstance = instance._actions.behavioural[propagationBehaviour];\n        isMutableAction = behaviourInstance ? behaviourInstance.constructor.mutates() : false;\n\n        dataModel.propagate(identifiers, Object.assign({}, propConfig, {\n            isMutableAction,\n            applyOnSource: false,\n            action: propagationBehaviour,\n            sourceId: isMutableAction ? groupId : sourceId,\n            enabled: (propConf, firebolt) => propConf.payload.sourceCanvas !== firebolt.context.parentAlias()\n        }), true, {\n            filterImmutableAction: (actionInf, propInf) => actionInf.groupId !== propInf.groupId\n        });\n    }\n};\n","import { FieldType, intersect } from 'muze-utils';\nimport { Firebolt, SIDE_EFFECTS } from '@chartshq/muze-firebolt';\nimport { isXandYMeasures, getSelectionRejectionModel } from '../helper';\nimport { payloadGenerator } from './payload-generator';\nimport { propagateValues } from './data-propagator';\n\nconst sideEffectPolicy = (propPayload, context, propagationInf) => {\n    const { sourceIdentifiers, propagationData } = propagationInf;\n    const fields = sourceIdentifiers.fields;\n    const sourceIdentifierFields = Object.keys(fields).filter(field =>\n        field.type !== FieldType.MEASURE);\n    const propFields = Object.keys(propagationData[0].getFieldsConfig());\n    const hasCommonCanvas = propPayload.sourceCanvas === context.parentAlias();\n    return intersect(sourceIdentifierFields, propFields).length || hasCommonCanvas;\n};\n\n/**\n * This class manages the interactions of visual unit. It associates physical actions with\n * behavioural actions. It also propagates the behavioural actions to other datamodels.\n */\nexport default class UnitFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        const {\n            TOOLTIP,\n            HIGHLIGHTER,\n            ANCHORS,\n            BRUSH_ANCHORS,\n            PERSISTENT_ANCHORS\n        } = SIDE_EFFECTS;\n\n        const disabledSideEffects = [TOOLTIP, HIGHLIGHTER, ANCHORS, BRUSH_ANCHORS, PERSISTENT_ANCHORS];\n        disabledSideEffects.forEach((sideEffect) => {\n            this.changeSideEffectStateOnPropagation(sideEffect, sideEffectPolicy, 'sourceTargetPolicy');\n        });\n    }\n\n    propagate (behaviour, payload, identifiers, sideEffects) {\n        propagateValues(this, behaviour, {\n            payload,\n            identifiers,\n            sideEffects,\n            propagationFields: this._propagationFields\n        });\n    }\n\n    getApplicableSideEffects (sideEffects, payload, propagationInf) {\n        const context = this.context;\n        const unitId = context.id();\n        const aliasName = context.parentAlias();\n        const propagationSourceCanvas = propagationInf.propPayload && propagationInf.propPayload.sourceCanvas;\n        const sourceUnitId = propagationInf.propPayload && propagationInf.propPayload.sourceUnit;\n        const sourceSideEffects = this._sourceSideEffects;\n        const sideEffectInstances = this.sideEffects();\n        const actionOnSource = sourceUnitId ? sourceUnitId === unitId : true;\n\n        const applicableSideEffects = payload.sideEffects ? [{\n            effects: payload.sideEffects,\n            behaviours: [payload.action]\n        }] : sideEffects;\n        applicableSideEffects.forEach((d) => {\n            let mappedEffects = d.effects;\n            mappedEffects = mappedEffects.filter((se) => {\n                const mutates = sideEffectInstances[se.name || se].constructor.mutates();\n                if (mutates && propagationInf.isMutableAction === false) {\n                    return false;\n                }\n                if (!actionOnSource && payload.criteria !== null) {\n                    const sideEffectCheckers = Object.values(sourceSideEffects[se.name || se] || {});\n                    const { sourceIdentifiers, data: propagationData } = propagationInf;\n                    return sideEffectCheckers.length ? sideEffectCheckers.every(checker =>\n                        checker(propagationInf.propPayload, context, {\n                            sourceIdentifiers,\n                            propagationData\n                        })) : true;\n                }\n                if (propagationSourceCanvas === aliasName || actionOnSource) {\n                    return se.applyOnSource !== false;\n                }\n\n                return true;\n            });\n            d.effects = mappedEffects;\n        });\n        return applicableSideEffects;\n    }\n\n    shouldApplySideEffects (propagate) {\n        return propagate === false;\n    }\n\n    onDataModelPropagation () {\n        return (data, config) => {\n            let isMutableAction = false;\n            const context = this.context;\n            if (!context.mount()) {\n                return;\n            }\n            const {\n                model: propagationData,\n                entryRowIds,\n                exitRowIds\n            } = getSelectionRejectionModel(context.data(), data, isXandYMeasures(context), context._cachedValuesMap());\n            const {\n                enabled: enabledFn,\n                sourceIdentifiers,\n                action,\n                payload: propPayload\n            } = config;\n\n            const payloadFn = payloadGenerator[action] || payloadGenerator.__default;\n            const payload = payloadFn(context, propagationData, config);\n            const sourceBehaviours = this._sourceBehaviours;\n            const filterFns = Object.values(sourceBehaviours[action] || sourceBehaviours['*'] || {});\n            let enabled = filterFns.every(fn => fn(propPayload || {}, context, {\n                sourceIdentifiers,\n                propagationData\n            }));\n\n            if (enabledFn) {\n                enabled = enabledFn(config, this) && enabled !== false;\n            }\n\n            if (enabled) {\n                const effects = this._behaviourEffectMap[action];\n                const sideEffectInstances = this.sideEffects();\n                isMutableAction = config.groupId ?\n                    effects.some(d => sideEffectInstances[d.name || d].constructor.mutates()) : config.isMutableAction;\n\n                const propagationInf = {\n                    propagate: false,\n                    data: propagationData,\n                    entryRowIds,\n                    exitRowIds,\n                    propPayload,\n                    sourceIdentifiers,\n                    persistent: false,\n                    sourceId: config.propagationSourceId,\n                    isMutableAction: config.isMutableAction\n                };\n\n                this._actionHistory[action] = {\n                    payload,\n                    propagationInf,\n                    isMutableAction\n                };\n                this.dispatchBehaviour(action, payload, propagationInf);\n            }\n        };\n    }\n\n    prepareSelectionSets (behaviours) {\n        const data = this.context.data();\n        if (data) {\n            this.createSelectionSet(data.getData().uids, behaviours);\n        }\n        return this;\n    }\n\n    remove () {\n        this.context.cachedData()[0].unsubscribe('propagation');\n        return this;\n    }\n}\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: false\n    },\n    [ACTIONS.HOVER]: {\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.LONGTOUCH]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: true\n    },\n    [ACTIONS.TOUCHDRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: true\n    },\n    [ACTIONS.CLICK]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: false\n    }\n};\n","import { VolatileBehaviour } from '@chartshq/muze-firebolt';\nimport { LAYER_TYPES } from '@chartshq/visual-layer';\nimport { BRUSH } from '../../enums/behaviours';\n/**\n * This is the behaviour for brushing a region on the chart. It accepts a payload\n * which contains the x and y range of the data and other configuration. It will then\n * create a selection box from the range and select the points which fall within the range.\n */\nexport default class UnitBrushBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return BRUSH;\n    }\n\n    getAddSetFromCriteria (criteria, propagationInf = {}) {\n        const context = this.firebolt.context;\n        const hasBarLayer = !!context.layers().find(layer => layer.config().mark === LAYER_TYPES.BAR_LAYER);\n        const filteredDataModel = propagationInf.data ? propagationInf.data :\n            context.getDataModelFromIdentifiers(criteria, 'all', undefined, hasBarLayer);\n\n        return {\n            model: filteredDataModel,\n            uids: criteria ? (propagationInf.data ? propagationInf.entryRowIds :\n                filteredDataModel[0].getUids()) : null\n        };\n    }\n}\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\n\n","import { getObjProp, defaultValue, makeElement, DimensionSubtype, DataModel, createSelection } from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { layerFactory, LAYER_TYPES } from '@chartshq/visual-layer';\nimport {\n    GRID_BAND,\n    GRID_LINE,\n    GRID_BAND_PARENT_GROUP_CLASS,\n    GRID_LINE_PARENT_GROUP_CLASS,\n    GRID_PARENT_GROUP\n} from '../enums/constants';\n\nconst { BAR_LAYER, TICK_LAYER } = LAYER_TYPES;\n\nconst LINEAR = ScaleType.LINEAR;\n\nconst getLayerDefinition = (context, axes, type, orientation) => {\n    let encoding;\n    const config = context.config();\n    const { classPrefix, gridLines, gridBands } = config;\n    const gridLineColor = gridLines.color;\n    const zeroLineColor = gridLines.zeroLineColor;\n    const defClassName = type === GRID_BAND ? gridBands.defClassName : gridLines.defClassName;\n    const gridBandColor = gridBands[orientation].color;\n    const axis = axes[orientation][0];\n    const isLinearScale = axis.constructor.type() === LINEAR;\n\n    if (type === GRID_BAND && isLinearScale) {\n        encoding = {\n            [orientation]: `${orientation}value`,\n            [`${orientation}0`]: `${orientation}value0`\n        };\n    } else {\n        encoding = {\n            [orientation]: isLinearScale ? `${orientation}value` : `${orientation}dim`\n        };\n    }\n    encoding.color = {\n        value: (data, i) => {\n            const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n            if (type === GRID_BAND) {\n                return gridBandColor[i % 2];\n            }\n            return isNegativeDomain && data[orientation] === 0 ? zeroLineColor : gridLineColor;\n        }\n    };\n    const { color, shape, size } = context.axes();\n    return {\n        definition: {\n            defClassName: `${defClassName}-${orientation}`,\n            className: config.className,\n            name: orientation,\n            calculateDomain: false,\n            individualClassName: (data, i) => {\n                let className;\n                const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n                if (isNegativeDomain && data.y === 0 && type !== GRID_BAND) {\n                    className = `${classPrefix}-axis-zero-line`;\n                } else {\n                    className = `${classPrefix}-grid-${type}-${orientation}-${i % 2}`;\n                }\n                return className;\n            },\n            [`pad${orientation.toUpperCase()}`]: type === GRID_BAND ? 0 : undefined,\n            encoding\n        },\n        axes: {\n            [orientation]: axis,\n            color: color[0],\n            shape: shape[0],\n            size: size[0]\n        },\n        interactive: false\n    };\n};\n\nconst getDefaultVisibilty = (show, axis) => {\n    if (axis.constructor.type() === LINEAR) {\n        return show;\n    }\n    return false;\n};\n\nexport const getGridLayerDefinitions = (context, config, type) => ['x', 'y'].map((axisType) => {\n    const axes = context.axes();\n    if (!axes[axisType]) {\n        return null;\n    }\n    const show = defaultValue(config[axisType] && config[axisType].show,\n        getDefaultVisibilty(config.show, axes[axisType][0]));\n\n    return show ? getLayerDefinition(context, axes, type, axisType) : null;\n}).filter(d => d !== null);\n\nconst dimensionSubTypes = Object.values(DimensionSubtype).reduce((acc, v) => {\n    acc[v] = 1;\n    return acc;\n}, {});\nconst getValidSubtype = subtype => (!dimensionSubTypes[subtype] ? DimensionSubtype.CATEGORICAL : subtype);\n\nexport const getGridLayerData = (axes, fields, fieldsConfig) => {\n    const gridData = {};\n\n    ['x', 'y'].forEach((type) => {\n        let ticks = axes[type][0].getTickValues();\n        const subtype = getObjProp(fieldsConfig, getObjProp(fields, type, 0).getMembers()[0], 'def', 'subtype');\n        const jsonData = [];\n        const schema = [\n            {\n                name: 'yvalue',\n                type: 'measure'\n            }, {\n                name: 'xvalue',\n                type: 'measure'\n            },\n            {\n                name: 'yvalue0',\n                type: 'measure'\n            }, {\n                name: 'xvalue0',\n                type: 'measure'\n            }, {\n                name: 'xdim',\n                type: 'dimension',\n                subtype: getValidSubtype(subtype)\n            }, {\n                name: 'ydim',\n                type: 'dimension',\n                subtype: getValidSubtype(subtype)\n            }\n        ];\n        const len = Math.max(ticks.length);\n        ticks = subtype === DimensionSubtype.TEMPORAL ? ticks.map(d => d.getTime()) : ticks;\n        for (let i = 0; i < len; i += 1) {\n            jsonData.push({\n                [`${type}value`]: ticks[i],\n                [`${type}value0`]: ticks[i + 1],\n                [`${type}dim`]: ticks[i],\n                [`${type}dim`]: ticks[i]\n            });\n        }\n        gridData[type] = new DataModel(jsonData, schema);\n    });\n    return gridData;\n};\n\nexport const createGridLineLayer = (context) => {\n    const vuConf = context.config();\n    const metaInf = context.metaInf();\n    const store = context.store();\n    const timeDiffs = context._timeDiffs;\n    [GRID_BAND, GRID_LINE].forEach((type) => {\n        let mark;\n        let config;\n        if (type === GRID_BAND) {\n            mark = BAR_LAYER;\n            config = vuConf.gridBands;\n        } else {\n            mark = TICK_LAYER;\n            config = vuConf.gridLines;\n        }\n        const definitions = getGridLayerDefinitions(context, config, type);\n\n        const sel = `_${type}Selection`;\n        context[sel] = createSelection(context[sel], (atomicDef) => {\n            const inst = layerFactory.getLayerInstance({ mark });\n            inst.dependencies(context._dependencies);\n            const name = atomicDef.definition.name;\n            inst.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: `${metaInf.namespace}${type}${name}`,\n                parentNamespace: metaInf.namespace\n            })\n                .store(store);\n            return inst;\n        }, definitions, atomicDef => atomicDef.definition.name);\n        context[sel].each((layer, atomicDef) => {\n            const definition = atomicDef.definition;\n            const sConf = layerFactory.getSerializedConf(mark, definition);\n            const axesObj = atomicDef.axes;\n            layer.config(sConf)\n                .dataProps({\n                    timeDiffs\n                })\n                .axes(axesObj);\n        });\n        context[`_${type}`] = context[sel].getObjects();\n    });\n};\n\nexport const attachDataToGridLineLayers = (context) => {\n    const axes = context.axes();\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n    if (gridLines.length || gridBands.length) {\n        const gridLayerData = getGridLayerData(axes, context.fields(), context.data().getFieldsConfig());\n        [].concat(...gridBands, ...gridLines).forEach((inst) => {\n            inst.data(inst.axes().x ? gridLayerData.x : gridLayerData.y);\n        });\n    }\n};\n\nexport const renderGridLineLayers = (context, container) => {\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n    const measurement = {\n        width: context.width(),\n        height: context.height()\n    };\n    const gridLineParentGroup = makeElement(container, 'g', [1], `${classPrefix}-${GRID_PARENT_GROUP}`);\n\n    [[gridLines, `${classPrefix}-${GRID_LINE_PARENT_GROUP_CLASS}`],\n            [gridBands, `${classPrefix}-${GRID_BAND_PARENT_GROUP_CLASS}`]].forEach((entry) => {\n                const [instances, parentGroupClass] = entry;\n                const mountPoint = makeElement(gridLineParentGroup, 'g', [1], `.${parentGroupClass}`);\n                const className = `${parentGroupClass}-group`;\n                makeElement(mountPoint, 'g', instances, `.${className}`, {\n                    update: (group, instance) => {\n                        instance.dataProps({ timeDiffs: context._timeDiffs })\n                            .measurement(measurement)\n                            .mount(group.node());\n                    }\n                });\n            });\n};\n","import { STATE_NAMESPACES, temporalFields, getObjProp, defaultValue } from 'muze-utils';\nimport * as PROPS from './enums/reactive-props';\nimport {\n    transformDataModels,\n    getDimensionMeasureMap,\n    attachDataToLayers,\n    attachAxisToLayers\n} from './helper';\n\nimport { createGridLineLayer } from './helper/grid-lines';\n\nconst removeExitLayers = (layerDefs, context) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    layerDefs.forEach((layerDef, i) => {\n        const id = defaultValue(layerDef.name, `${layerDef.mark}-${i}`);\n        markSet[id] = true;\n    });\n\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n};\n\nexport const listenerMap = [\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.LAYERDEFS],\n        listener: (context, [, layerDefs]) => {\n            const fieldsVal = context.fields();\n            if (layerDefs && fieldsVal) {\n                removeExitLayers(layerDefs, context);\n                const queuedLayerDefs = context._queuedLayerDefs;\n                let layerDefArr = layerDefs;\n                queuedLayerDefs.forEach((defFn) => {\n                    layerDefArr = [...layerDefArr, ...defFn(layerDefs)];\n                });\n                context.addLayer(layerDefArr);\n                const adjustRange = context.layers().some(inst => inst.hasPlotSpan());\n                ['x', 'y'].forEach((type) => {\n                    const axisArr = defaultValue(getObjProp(context.axes(), type), []);\n                    axisArr.forEach((axis) => {\n                        axis.config({\n                            adjustRange\n                        });\n                    });\n                });\n                context._lifeCycleManager.notify({\n                    client: context.layers(),\n                    action: 'initialized',\n                    formalName: 'layer'\n                });\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.DATA],\n        listener: (context, [, dataModel]) => {\n            if (dataModel) {\n                const axesObj = context.axes();\n                const timeDiffs = {};\n                const timeDiffsByField = {};\n\n                Object.entries(temporalFields(dataModel)).forEach(([fieldName, fieldObj]) => {\n                    timeDiffsByField[fieldName] = fieldObj.minimumConsecutiveDifference();\n                });\n\n                Object.entries(context.fields()).forEach(([type, [field]]) => {\n                    if (field) {\n                        const timeDiff = timeDiffsByField[`${field}`];\n                        if (timeDiff) {\n                            timeDiffs[type] = timeDiff;\n                            axesObj[type].forEach(axis => axis.minDiff(timeDiff));\n                        }\n                    }\n                });\n\n                context._timeDiffsByField = timeDiffsByField;\n                context._timeDiffs = timeDiffs;\n                const firebolt = context.firebolt();\n                const originalData = context.cachedData()[0];\n                firebolt.createSelectionSet(context.data().getUids());\n                firebolt.attachPropagationListener(originalData);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.CONFIG],\n        listener: (context, [, config]) => {\n            if (config) {\n                context.firebolt().config(config.interaction);\n                createGridLineLayer(context);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.DATA, PROPS.TRANSFORM],\n        listener: (context, [, dataModel], [, transform]) => {\n            if (dataModel) {\n                const dataModels = transformDataModels(transform, dataModel);\n                const metaInf = context.metaInf();\n                context.store().commit(`${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${PROPS.TRANSFORMEDDATA}`,\n                    dataModels, metaInf.namespace);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.TRANSFORMEDDATA, PROPS.LAYERS],\n        listener: (context, [, transformedData], [, layers]) => {\n            const layerAxisIndexVal = context._layerAxisIndex;\n            const axesVal = context.axes();\n            const dataModel = context.data();\n            if (transformedData && layers && axesVal && layerAxisIndexVal) {\n                context._lifeCycleManager.notify({ client: layers, action: 'beforeupdate', formalName: 'layer' });\n                attachDataToLayers(layers, dataModel, transformedData);\n                context._dimensionMeasureMap = getDimensionMeasureMap(layers,\n                    dataModel.getFieldsConfig(), context.retinalFields());\n                attachAxisToLayers(axesVal, layers, layerAxisIndexVal);\n                context._lifeCycleManager.notify({ client: layers, action: 'updated', formalName: 'layer' });\n            }\n        }\n    }\n];\n","import { mergeRecursive } from 'muze-utils';\nimport { FACET_BY_FIELDS, RETINAL_FIELDS, PARENT_ALIAS, CACHED_DATA } from './enums/constants';\n\nexport const PROPS = {\n    [FACET_BY_FIELDS]: {},\n    [RETINAL_FIELDS]: {},\n    [PARENT_ALIAS]: {},\n    [CACHED_DATA]: {},\n    detailFields: {},\n    axes: {\n        defaultValue: {\n            x: [],\n            y: []\n        }\n    },\n    fields: {\n        defaultValue: {\n            x: [],\n            y: []\n        },\n        sanitization: (context, value) => mergeRecursive({\n            x: [],\n            y: []\n        }, value)\n    },\n    metaInf: {},\n    registry: {},\n    parentContainerInf: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    coord: {}\n};\n","import { SpawnableSideEffect } from '@chartshq/muze-firebolt';\n\nexport const initSideEffects = (sideEffects, firebolt) => {\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            sideEffects[key] instanceof SpawnableSideEffect && sideEffects[key].drawingContext(() => {\n                const context = firebolt.context;\n                return context.getDrawingContext();\n            });\n            sideEffects[key].valueParser(firebolt.context.valueParser());\n        }\n    }\n};\n\nexport const clearActionHistory = (context) => {\n    const actionHistory = context._actionHistory;\n    for (const key in actionHistory) {\n        if (actionHistory[key].isMutableAction) {\n            delete context._actionHistory[key];\n        }\n    }\n};\n\nexport const dispatchQueuedSideEffects = (context) => {\n    const queuedSideEffects = context._queuedSideEffects;\n    Object.entries(queuedSideEffects).forEach((entry) => {\n        const sideEffect = entry[1];\n        context.dispatchSideEffect(sideEffect.name, ...sideEffect.params);\n    });\n    context._queuedSideEffects = {};\n};\n","import { CLASSPREFIX, CONSOLIDATED } from './enums/constants';\n\n/**\n * Returns the default configuration of the visual unit\n * @return {Object} Default configuration of visual unit\n */\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'visual-unit',\n    className: '',\n    trackerClassName: 'visual-unit-tracker',\n    minOuterRadius: 10,\n    gridLines: {\n        defClassName: 'axis-grid-lines',\n        className: '',\n        show: true,\n        color: '#efefef',\n        zeroLineColor: '#b6b6b6'\n    },\n    gridBands: {\n        defClassName: 'axis-grid-bands',\n        className: '',\n        show: false,\n        y: {\n            color: ['#fff', '#fbfbfb']\n        },\n        x: {\n            color: ['#fff', '#f9f9f9']\n        }\n    },\n    arcLayerClassName: 'layer-arc',\n    interaction: {\n        tooltip: {\n            mode: CONSOLIDATED\n        }\n    },\n    sideEffectClassName: 'side-effect-container'\n};\n","import { mergeRecursive, DataModel } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { CONFIG, LAYERDEFS, TRANSFORM, DATA, LAYERS, TRANSFORMEDDATA } from './enums/reactive-props';\nimport { sanitizeLayerDef, getValuesMap } from './helper';\n\nexport default {\n    [CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig) => (\n                mergeRecursive(oldConfig || mergeRecursive({}, defaultConfig), config)\n            )\n        }\n    },\n    [LAYERDEFS]: {\n        value: null,\n        meta: {\n            preset: layerDef => sanitizeLayerDef(layerDef)\n        }\n    },\n    [TRANSFORM]: {\n        value: null\n    },\n    [LAYERS]: {\n        value: null\n    },\n    [DATA]: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel,\n            preset: (data, context) => {\n                context._cachedValuesMap = ((model) => {\n                    let valuesMap = null;\n                    return () => {\n                        if (valuesMap) {\n                            return valuesMap;\n                        }\n                        valuesMap = getValuesMap(model, context);\n                        return valuesMap;\n                    };\n                })(data);\n                if (context._cache) {\n                    const cachedData = context.cachedData();\n                    context.cachedData([...cachedData, data]);\n                } else {\n                    const oldData = context.cachedData()[0];\n                    oldData && oldData.unsubscribe('propagation');\n                    context.cachedData([data]);\n                }\n            }\n        }\n    },\n    [TRANSFORMEDDATA]: {\n        value: null\n    },\n    width: {\n        value: null\n    },\n    height: {\n        value: null\n    }\n};\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    setAttrs,\n    getUniqueId,\n    getQualifiedClassName,\n    selectElement,\n    transactor,\n    makeElement,\n    generateGetterSetters,\n    getDataModelFromIdentifiers,\n    isSimpleObject,\n    transposeArray,\n    CommonProps,\n    toArray,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { actionBehaviourMap } from './firebolt/action-behaviour-map';\nimport UnitBrushBehaviour from './firebolt/behaviours/brush';\nimport {\n    renderLayers,\n    getNearestDimensionalValue,\n    removeLayersBy,\n    getLayersBy,\n    getLayerFromDef,\n    getLayerAxisIndex,\n    sanitizeLayerDef,\n    createSideEffectGroup,\n    resolveEncodingTransform,\n    createRenderPromise,\n    setAxisRange,\n    unionDomainFromLayers\n} from './helper';\nimport { renderGridLineLayers, attachDataToGridLineLayers } from './helper/grid-lines';\nimport { listenerMap } from './listener-map';\nimport { PROPS } from './props';\nimport UnitFireBolt from './firebolt';\nimport { initSideEffects, dispatchQueuedSideEffects, clearActionHistory } from './firebolt/helper';\nimport './styles.scss';\nimport localOptions from './local-options';\nimport { WIDTH, HEIGHT } from './enums/reactive-props';\nimport { REACTIVE_PROPS } from './enums';\n\nconst FORMAL_NAME = 'VisualUnit';\nconst unitNs = [STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE, STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE];\nconst groupNs = STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE;\n\n/**\n * Visual Unit is hierarchical component created by {@link VisualGroup}. This component accepts layer definitions\n * and creates concrete layer instances from them, binds data and attaches axis to them. It also retreives the domain\n * from the layers and unions them and sets them on corresponding axis instances. This also creates the parent svg\n * groups for all the layers and delegates the rendering to all the layers.\n *\n * @public\n * @module VisualUnit\n * @class\n */\nexport default class VisualUnit {\n\n    /**\n     * Creates instance of visualization unit.\n     *\n     * @param {Object} registry  Component registry\n     * @param {Object} dependencies  Dependencies required by visual unit.\n     */\n    constructor (registry, dependencies) {\n        this._id = getUniqueId();\n        this._dependencies = dependencies;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        createRenderPromise(this);\n        this._lifeCycleManager = dependencies.lifeCycleManager;\n        this._layersMap = {};\n        this._gridLinesSelection = null;\n        this._gridBandsSelection = null;\n        this._gridLines = [];\n        this._gridBands = [];\n        this._layerAxisIndex = {};\n        this._queuedLayerDefs = [];\n        layerFactory.setLayerRegistry(registry.layerRegistry);\n        generateGetterSetters(this, this.constructor.getterSetters());\n        this.registry(registry);\n        this.cachedData([]);\n    }\n\n    static formalName () {\n        return FORMAL_NAME;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: null\n            },\n            Object.keys((this.localOptions())).reduce((acc, v) => {\n                acc[v] = localOptions[v].value;\n                return acc;\n            }, {})\n        ];\n    }\n\n    static getterSetters () {\n        return PROPS;\n    }\n\n    static localOptions () {\n        return localOptions;\n    }\n\n    static getQualifiedStateProps () {\n        const unitState = VisualUnit.getState();\n        return unitState.map((state, i) => Object.keys(state).map(prop => `${unitNs[i]}.${prop}`));\n    }\n\n    static getListeners () {\n        return {\n            store: [...listenerMap.map((d) => {\n                const o = Object.assign({}, d);\n                const localNs = unitNs[1];\n                o.props = o.props.map(prop => `${localNs}.${prop}`);\n                return o;\n            }), {\n                type: 'registerImmediateListener',\n                props: [`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.domain`],\n                listener: (context) => {\n                    const domain = context.calculateDomainFromData();\n                    context.dataDomain(domain);\n                }\n            }, {\n                type: 'registerImmediateListener',\n                props: [`${unitNs[1]}.${WIDTH}`,\n                    `${unitNs[1]}.${HEIGHT}`,\n                    ...['x', 'y'].map(type => `${groupNs}.domain.${type}`)],\n                listener: (context, [, width], [, height]) => {\n                    if (width && height) {\n                        attachDataToGridLineLayers(context);\n                    }\n                },\n                subNamespace: (context) => {\n                    const { rowIndex, colIndex, namespace } = context.metaInf();\n                    return {\n                        [`${unitNs[1]}.${WIDTH}`]: namespace,\n                        [`${unitNs[1]}.${HEIGHT}`]: namespace,\n                        [`${groupNs}.domain.x`]: `${colIndex}0`,\n                        [`${groupNs}.domain.y`]: `${rowIndex}0`\n                    };\n                }\n            }],\n            throwback: [\n                {\n                    type: 'registerChangeListener',\n                    props: [CommonProps.ON_LAYER_DRAW],\n                    listener: (context, [, drawn]) => {\n                        if (drawn) {\n                            const firebolt = context.firebolt();\n                            dispatchQueuedSideEffects(firebolt);\n                            clearActionHistory(firebolt);\n                        }\n                        context._renderedResolve();\n                        context._lifeCycleManager.notify({\n                            client: context.layers(),\n                            action: 'drawn',\n                            formalName: 'layer'\n                        });\n                    }\n                }\n            ]\n        };\n    }\n\n    store (...params) {\n        if (params.length) {\n            const store = this._store = params[0];\n            const { throwback } = this._dependencies;\n            const { namespace } = this.metaInf();\n\n            store.addSubNamespace(namespace, FORMAL_NAME, this);\n            throwback.addSubNamespace(namespace, FORMAL_NAME, this);\n            transactor(this, this.constructor.localOptions(), store, {\n                subNamespace: namespace,\n                namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}`\n            });\n            this.createFireboltInstance();\n\n            return this;\n        }\n        return this._store;\n    }\n\n    createFireboltInstance () {\n        const { interactions } = this.registry();\n        const { fireboltDeps } = this._dependencies;\n        const Cls = this.getFireboltCls();\n\n        this.firebolt(new Cls(this, {\n            physical: Object.assign({}, interactions.physicalActions.get(), fireboltDeps.physicalActions),\n            behavioural: Object.assign({}, interactions.behaviours.get(), {\n                [UnitBrushBehaviour.formalName()]: UnitBrushBehaviour\n            }, fireboltDeps.behaviouralActions),\n            physicalBehaviouralMap: this.getActionBehaviourMap()\n        }, Object.assign({}, interactions.sideEffects.get(), fireboltDeps.sideEffects), this.getBehaviourEffectMap()));\n\n        return this;\n    }\n\n    getFireboltCls () {\n        return UnitFireBolt;\n    }\n\n    getBehaviourEffectMap () {\n        return behaviourEffectMap;\n    }\n\n    getActionBehaviourMap () {\n        return actionBehaviourMap;\n    }\n\n    /**\n     * Static helper for creates a unit instance\n     *\n     * @param {Object} [id] optional unique identifier for a unit; , id is calculated internally\n     * @param {DataModel} data instance of datamodel\n     * @param {Array.<Layer>} layers layer configuration\n     * @param {Object} config configurtion for the visual unit\n     * @return {VisualUnit} Instance of a unit\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this visual unit. Firebolt dispatches the behavioural actions\n     * when any physical action happens on the elements of visual unit.\n     *\n     * @public\n     *\n     * @return {Firebolt} Instance of firebolt.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Returns the unique id of this visual unit.\n     *\n     * @public\n     * @return {string} Unique identifier.\n     */\n    id () {\n        return this._id;\n    }\n\n    lockModel () {\n        this.store().lockModel();\n        return this;\n    }\n\n    unlockModel () {\n        this.store().unlockModel();\n        return this;\n    }\n\n    timeDiffsByField (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._timeDiffsByField;\n    }\n\n    /**\n     * Renders the visual unit. It creates the layout and renders the axes and layers.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    render (container) {\n        this.createRootContainers(container);\n\n        setAxisRange(this);\n        this.renderLayers();\n        const node = this._rootSvg.node();\n        const { sideEffectClassName, classPrefix } = this.config();\n        this._sideEffectGroup = createSideEffectGroup(node, `${classPrefix}-${sideEffectClassName}`);\n        const firebolt = this.firebolt();\n        initSideEffects(firebolt.sideEffects(), firebolt);\n        return this;\n    }\n\n    createRootContainers (container) {\n        const config = this.config();\n        const { className, defClassName } = config;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const width = this.width();\n        const height = this.height();\n        const containerSelection = selectElement(container).style('position', 'relative');\n        this._rootSvg = makeElement(containerSelection, 'svg', [null], className)\n                        .style('width', `${width}px`).style('height', `${height}px`);\n\n        const node = this._rootSvg.node();\n\n        setAttrs(node, {\n            width,\n            height,\n            class: qualifiedClassName.join(' ')\n        });\n        return this;\n    }\n\n    renderLayers () {\n        const width = this.width();\n        const height = this.height();\n        const node = this._rootSvg.node();\n\n        renderGridLineLayers(this, node);\n        renderLayers(this, node, this.layers(), {\n            width,\n            height\n        });\n        return this;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Caches all the datamodels in an array from the next `data()` call on visual unit until `clearCaching()` or\n     * `resetData()` is called on it.\n     *\n     * @public\n     * @return {VisualUnit} Instance of visual unit.\n     */\n\n    enableCaching () {\n        this._cache = true;\n        return this;\n    }\n\n    /**\n     * Clears all the previous cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    clearCaching () {\n        this._cache = false;\n        this.cachedData([this.cachedData()[0]]);\n        return this;\n    }\n\n    /**\n     * Returns the drawing information from visual unit.Drawing context contains the dimensions of unit and the svg\n     * container of the visual unit.\n     *\n     * @public\n     *\n     * @return {Object} Drawing information.\n     *      ```\n     *          {\n     *              htmlContainer: // Html container of svg container of the visual unit\n     *              svgContainer: // Root svg container\n     *              width: // Width of the visual unit\n     *              height: // Height of the visual unit\n     *              sideEffectGroup: // Svg group for drawing side effect elements.\n     *              parentContainer: // Parent html container of the visual unit.\n     *              xOffset: // x offset space from the starting x position of the container,\n     *              yOffset: // y offset space from the starting y position of the container\n     *          }\n     *      ```\n     */\n    getDrawingContext () {\n        const rootSvg = this._rootSvg && this._rootSvg.node();\n        const width = this.width();\n        const height = this.height();\n        const { el, dimensions } = this.parentContainerInf();\n        return {\n            htmlContainer: this.mount(),\n            svgContainer: rootSvg,\n            width,\n            height,\n            sideEffectGroup: this._sideEffectGroup,\n            parentContainer: el,\n            parentContainerDimensions: dimensions,\n            xOffset: 0,\n            yOffset: 0\n        };\n    }\n\n    /**\n     * Returns the serialized configuration of visual unit.\n     *\n     * @return {Object} serialized configuration\n     */\n    serialize () {\n        return {\n            layers: this.layers().map(layer => layer.serialize()),\n            config: this.config(),\n            axes: this.axes().map(axis => axis.serialize())\n        };\n    }\n\n    mount (...mount) {\n        if (mount.length) {\n            this._mount = mount[0];\n            this.render(mount[0]);\n            this.firebolt().mapActionsAndBehaviour();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     * Adds a new layer to the visual unit. It takes a layer definition and creates layer instances from them. It does\n     * not render the layers. It returns the layer instances in an array. If the layer definition is a composite layer,\n     * then multiple layer instances will be returned in the array.\n     *\n     * To add a layer in the unit,\n     * ```\n     *      unit.addLayer({\n     *          name: 'bullet',\n     *          mark: 'bar',\n     *          encoding: {\n     *              x: 'Year',\n     *              y: 'Acceleration',\n     *              color: 'Origin'\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} layerDef Definition of new layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    addLayer (layerDefinition) {\n        if (layerDefinition instanceof Function) {\n            this._queuedLayerDefs.push(layerDefinition);\n            return this;\n        }\n        const layerDefinitions = sanitizeLayerDef(toArray(layerDefinition));\n\n        const layersMap = this._layersMap;\n        const markSet = {};\n        const store = {\n            layers: {},\n            components: {\n                unit: this\n            }\n        };\n        let layerIndex = 0;\n        const metaInf = this.metaInf();\n        const layers = layerDefinitions.sort((a, b) => a.order - b.order).reduce((layersArr, layerDef) => {\n            const definition = layerDef.def;\n            const markId = definition.name;\n            const defArr = toArray(definition);\n            const namespaces = [];\n            defArr.forEach((def) => {\n                def.order = layerDef.order + layerIndex;\n                const namespace = `${metaInf.namespace}-${def.mark}-${getUniqueId()}`;\n                namespaces.push(namespace);\n            });\n            layerIndex += defArr.length;\n            const instances = getLayerFromDef(this, definition, layersMap[markId], namespaces);\n            store.layers = Object.assign(store.layers, instances);\n            const instanceValues = Object.values(instances);\n            layersArr = layersArr.concat(...instanceValues);\n            layersMap[markId] = instanceValues;\n            markSet[markId] = markId;\n            return layersArr;\n        }, []);\n\n        store.unit = this;\n        const layerdeps = {};\n        const layersArr = [].concat(...Object.values(this._layersMap));\n        layersArr.forEach((layer) => {\n            const alias = layer.alias();\n            store.layers[alias] = layer;\n            layerdeps[alias] = [];\n        });\n        layers.forEach((layer) => {\n            const depArr = resolveEncodingTransform(layer, store);\n            layerdeps[layer.alias()] = depArr;\n        });\n\n        this._layerDepOrder = layerdeps;\n        this._layerAxisIndex = Object.assign(this._layerAxisIndex, getLayerAxisIndex(layers, this.fields()));\n        this.layers(layersArr);\n        return layers;\n    }\n\n    remove () {\n        const formalName = this.constructor.formalName();\n        const { lifeCycleManager, throwback } = this._dependencies;\n        const { namespace } = this.metaInf();\n        lifeCycleManager.notify({ client: this, action: 'beforeremove', formalName: 'unit' });\n        const layers = this.layers();\n        this.store().removeSubNamespace(namespace, formalName);\n        throwback.removeSubNamespace(namespace, FORMAL_NAME);\n        selectElement(this.mount()).remove();\n        this.firebolt().remove();\n        // Remove layers\n        lifeCycleManager.notify({ client: layers, action: 'beforeremove', formalName: 'layer' });\n        [...layers, ...this._gridLines, ...this._gridBands].forEach(layer => layer.remove());\n        lifeCycleManager.notify({ client: layers, action: 'removed', formalName: 'layer' });\n        lifeCycleManager.notify({ client: this, action: 'removed', formalName: 'unit' });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     *\n     * @memberof VisualUnit\n     */\n    getDataModelFromIdentifiers (identifiers, mode, parentModel, hasBarLayer) {\n        if (!identifiers) return null;\n        const dataModel = parentModel || this.data();\n        return getDataModelFromIdentifiers(dataModel, identifiers, mode, hasBarLayer);\n    }\n\n    /**\n     * Resets the data of visual unit to original data model. It also clears the cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    resetData () {\n        this.data(this.cachedData()[0]);\n        return this;\n    }\n\n    getSourceInfo () {\n        return {\n            dimensionMeasureMap: this._dimensionMeasureMap,\n            fields: this.fields(),\n            data: this.data(),\n            axes: this.axes()\n        };\n    }\n\n    dataDomain (...params) {\n        const { namespace } = this.metaInf();\n        const store = this.store();\n        const prop = `${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${REACTIVE_PROPS.DOMAIN}`;\n        if (params.length) {\n            const domain = params[0];\n            store.commit(prop, domain, namespace);\n        }\n        return store.get(prop, namespace);\n    }\n\n    getDefaultTargetContainer () {\n        const { classPrefix, defClassName } = this.config();\n        return [`.${classPrefix}-${defClassName}`];\n    }\n\n    /**\n     * Returns an array of layer instances which matches the supplied mark type.\n     *\n     * @public\n     *\n     * @param {string} type Mark type of layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    getLayersByType (type) {\n        const layers = getLayersBy(this.layers(), 'type', type);\n        return layers;\n    }\n\n    /**\n     * Returns the layer instance which matches the supplied layer name. If no layer is found, then it returns\n     * undefined.\n     *\n     * @public\n     * @param {string} name Name of layer.\n     *\n     * @return {VisualUnit} Layer instance.\n     */\n    getLayerByName (name) {\n        const layers = getLayersBy(this.layers(), 'name', name);\n        return layers[0];\n    }\n\n    /**\n     * Returns the point located nearest to the supplied x and y position. It returns the unique identifiers of the\n     * point. This function also accepts an additional configuration `getAllPoints` inside `config` object in the third\n     * argument which if set to true, then it returns the identifiers of all the points which falls on the nearest\n     * x value or y value if any one of the field is a dimension. Additionally, a target property is also returned\n     * which contains the identifier of the nearest point. If no nearest point is found, then it returns identifier\n     * as null.\n     *\n     * @public\n     *\n     * @param {number} x X Position of the point from where nearest point is to be found.\n     * @param {number} y Y Position of the point from where nearest point is to be found.\n     * @param {Object} config Additional configuration options.\n     * @param {boolean} config.getAllPoints If true, then returns all the points nearest to the x value or y value if\n     * it is dimension.\n     * @param {Object} config.data Data associated with the nearest point.\n     * @return {Object} Nearest point information\n     * ```\n     *      {\n     *          id: [['Origin'], ['USA'], ['Japan']], // Identifiers of all the points closest to the x value.\n     *          target: [['Origin'], ['Japan']] // Identifier of the nearest point.\n     *      }\n     * ```\n     */\n    getNearestPoint (x, y, config) {\n        let pointObj = {\n            id: null\n        };\n        const dimValue = getNearestDimensionalValue(this, {\n            x,\n            y\n        });\n\n        if (dimValue !== null && config.getAllPoints) {\n            pointObj.id = dimValue;\n            const pointInf = this.getMarkInfFromLayers(x, y, config);\n            pointObj.target = pointInf && pointInf.id ? pointInf.id : pointObj.id;\n            return pointObj;\n        }\n\n        const markInf = this.getMarkInfFromLayers(x, y, config) || { id: null };\n        pointObj = Object.assign({}, markInf);\n\n        pointObj.target = markInf.id;\n        return pointObj;\n    }\n\n    getMarkInfFromLayers (x, y, args) {\n        const layers = this.layers();\n        const len = layers.length;\n        let point = null;\n        // Iterate through the layers array and fetch the nearest point from each layer. If a valid\n        // nearest point is found from any layer, then return that point.\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            const config = layer.config();\n            if (config.interactive !== false) {\n                point = layer.getNearestPoint(x, y, args);\n            }\n            if (point) {\n                return point;\n            }\n        }\n        return point;\n    }\n\n    /**\n     * Get the information of all the marks such as x, y position and size from supplied identifiers. It\n     * returns an array of points whose data matches the given identifiers.\n     *\n     * @public\n     *\n     * @param {Array|Object} identifiers Field names and their corresponding values.\n     * ```\n     * identifiers can be given in an array of array,\n     *      ['Origin', 'Name'], // Names of the fields supplied in first array\n     *      ['USA', 'ford'], // Data values of each field supplied in rest of the arrays.\n     *      ['Japan', 'ford']\n     * or in an object,\n     *      {\n     *          Origin: ['USA']\n     *      }\n     * ```\n     * @param {Object} config Optional configurations which decides which information of the mark will\n     * be retrieved.\n     * @param {boolean} [config.getAllAttrs = false] If true, then returns all the information of each mark.\n     * @param {boolean} [config.getBBox = false] If true, then returns the bounding box of each mark.\n     *\n     * @return {Array} Array of objects containing the information of each point.\n     * ```\n     * By default, the method returns the array of points in this structure,\n     *      [\n     *          {\n     *              x: 20,\n     *              y: 100,\n     *              width: 200,\n     *              height: 100\n     *          }\n     *      ]\n     * If 'config.getAllAttrs' is true, then it returns all the information of each mark,\n     *      [\n     *      // Positions of mark on initial state of transition.\n     *          enter: {\n     *              x: 0,\n     *              y: 0\n     *          },\n     *          // Final positions of the mark\n     *          update: {\n     *              x: 20,\n     *              y: 10\n     *          },\n     *          style: // css styles of each mark\n     *          source: [200, 'USA'] // Row information of each mark\n     *          id: 20 // Row id of each mark\n     *      ]\n     * ```\n     */\n    getPlotPointsFromIdentifiers (identifiers, config = {}) {\n        let points = [];\n        let parsedIdentifiers = identifiers;\n        if (identifiers === null) {\n            return [];\n        }\n        const layers = this.layers();\n        const len = layers.length;\n        if (isSimpleObject(identifiers)) {\n            parsedIdentifiers = [Object.keys(identifiers)];\n            parsedIdentifiers = [...parsedIdentifiers, ...transposeArray(Object.values(identifiers))];\n        }\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            if (layer.config().interactive !== false) {\n                points = [...points, ...layer.getPointsFromIdentifiers(parsedIdentifiers, config)];\n            }\n        }\n        return points;\n    }\n\n    /**\n     * Removes the layer instance which matches the supplied layer name.\n     *\n     * @public\n     * @param {string} name Name of layer\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayerByName (name) {\n        removeLayersBy('name', name);\n        return this;\n    }\n\n    /**\n     * Removes all the layer instances which matches the supplied mark type.\n     *\n     * @public\n     * @param {string} type Mark type of layer.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayersByType (type) {\n        removeLayersBy('type', type);\n        return this;\n    }\n\n    calculateDomainFromData () {\n        const domain = unionDomainFromLayers(this.layers(), this.fields(), this._layerAxisIndex,\n            this.data().getFieldsConfig());\n        return domain;\n    }\n\n    getValueFromId (id, fields, fieldsConfig) {\n        const { idValuesMap } = this._cachedValuesMap();\n        const row = idValuesMap[id];\n        const filteredRow = fields.map(d => row[fieldsConfig[d].index]);\n\n        return filteredRow;\n    }\n\n    getRangeFromIdentifiers ({ criteria, fields }) {\n        return fields.reduce((acc, v) => {\n            acc[v] = criteria[v];\n            return acc;\n        }, {});\n    }\n}\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n *\n *\n * @export\n * @class Variable\n */\nexport default class Variable {\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    type () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    toString () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n","import Variable from './variable';\n\n/**\n * This is a wrapper on top of multiple variables which are of same type but they are shown in the same axis.This is\n * required in case of range plots or ohlc plots where one plot is mapped to multiple measure fields. At that time,\n * we need to create a composed variable from multiple variables. This class just wraps them into one variable instance\n * and provides methods to get the type and other common functionalities which can be performed on a simple variable\n * instance.\n *\n * @public\n * @class ComposeVars\n */\nclass ComposedVars extends Variable {\n\n    /**\n     * Creates an instance of ComposeVars.\n     *\n     * @param {Array} vars Array of SimpleVars.\n     */\n    constructor (...vars) {\n        super();\n        this.vars(vars);\n    }\n\n    vars (...params) {\n        if (params.length) {\n            this._vars = params[0];\n            return this;\n        }\n        return this._vars;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this.vars().forEach(d => d.data(dm[0]));\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    /**\n     * Get all the field names from composed variable instance.\n     *\n     * @public\n     * @return {Array} Array of field names.\n     */\n    getMembers () {\n        const vars = this.vars();\n        return vars.map(member => member.getMembers()[0]);\n    }\n\n    /**\n     * Type of field associated with this composed variable.\n     *\n     * @return {string} Type of variable (Measure/Dimension).\n     */\n    type () {\n        return this.vars()[0].type();\n    }\n\n    toString () {\n        return this.vars().map(d => d.toString()).join(',');\n    }\n\n    /**\n     * Returns the number formatter function of the variable.\n     *\n     * @return {Function} Number formatter function of the variable.\n     */\n    numberFormat () {\n        return this.vars()[0].numberFormat();\n    }\n\n    format (values) {\n        return this.vars()[0].format(values);\n    }\n\n    getSchemaDef () {\n        return this.data().getFieldsConfig()[this.vars()[0]].def;\n    }\n\n    /**\n     * Returns the subtype of the fields associated with this variable instance.\n     *\n     * @public\n     * @return {string} Subtype of the variable.\n     */\n    subtype () {\n        return this.vars()[0].subtype();\n    }\n\n    /**\n     * Returns the consecutive minimum difference of the field values.\n     *\n     * @public\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        return this.vars()[0].getMinDiff();\n    }\n\n    /**\n     * Returns the display name of the fields.\n     *\n     * @return {string} returns the display name.\n     */\n    displayName () {\n        return this.vars().map(d => d.displayName()).join(',');\n    }\n}\n\nexport default ComposedVars;\n","import { DateTimeFormatter, retrieveFieldDisplayName, DimensionSubtype } from 'muze-utils';\nimport Variable from './variable';\n\n/**\n * This is a wrapper on top of fields passed in rows or columns in canvas. This is used to get the type of field or\n * get min difference from the field values.\n *\n * @public\n * @class SimpleVariable\n */\nexport default class SimpleVariable extends Variable {\n\n    /**\n     * Creates an instance of simple variable instance.\n     *\n     * @param {string} name Field name.\n     */\n    constructor (name) {\n        super();\n        this.oneVar(name);\n    }\n\n    /**\n     * Gets the field name associated with this variable instance.\n     *\n     * @public\n     * @return {string} Name of the field.\n     */\n    oneVar (...oneV) {\n        if (oneV.length) {\n            this._oneVar = oneV[0];\n            return this;\n        }\n        return this._oneVar;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    toString () {\n        return this.oneVar();\n    }\n\n    /**\n     * Gets the number formatter function of this variable.\n     *\n     * @public\n     * @return {Function} Number formatter function.\n     */\n    numberFormat () {\n        if (this.type() === 'measure') {\n            const formatter = this.data().getFieldspace().getMeasure()[this.oneVar()];\n            return formatter.numberFormat();\n        } return val => val;\n    }\n\n    format (values) {\n        if (values && this.subtype() === 'temporal') {\n            const formatter = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            const dtFormat = new DateTimeFormatter(formatter);\n            values = values.map(e => dtFormat.getNativeDate(e));\n        }\n        return values;\n    }\n\n    /**\n     * Returns a formatter function which transforms the input value to its original form.\n     *\n     * @public\n     * @return {Function} Returns raw formatter function.\n     */\n    rawFormat () {\n        if (this.subtype() === DimensionSubtype.TEMPORAL) {\n            const dateFormat = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            return val => DateTimeFormatter.formatAs(val, dateFormat);\n        }\n        return val => val;\n    }\n\n    /**\n     * Return the field names associated with this variable instance.\n     *\n     * @public\n     * @return {Array} Array of fields.\n     */\n    getMembers () {\n        return [this.oneVar()];\n    }\n\n    /**\n     * Returns the type of the variable. Whether it is measure or dimension.\n     *\n     * @public\n     * @return {string} Type of variable.\n     */\n    type () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.type;\n    }\n\n    /**\n     * Returns the subtype of the variable. Subtype can be categorical or temporal. If no subtype is found, then it\n     * returns the type of the variable.\n     *\n     * @public\n     * @return {string} Subtype of variable.\n     */\n    subtype () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.subtype || fieldDef.type;\n    }\n\n    /**\n     * Returns the minimum consecutive difference between the data values of this variable.\n     *\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        const fieldSpace = this.data().getFieldspace();\n        return fieldSpace.fieldsObj()[this.oneVar()].minimumConsecutiveDifference();\n    }\n\n    /**\n     * Returns true if two variable instances are same.If both variable has the same field names, they are equal.\n     *\n     * @return {Boolean} Whether two variable instances are same.\n     */\n    equals (varInst) {\n        return this.oneVar() === varInst.oneVar();\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @return {string} returns the display name.\n     */\n    displayName () {\n        return retrieveFieldDisplayName(this.data(), this.oneVar());\n    }\n\n    /**\n     * Returns the schema defination of the field.\n     *\n     * @return {Object} schema def\n     */\n    getSchemaDef () {\n        return this.data().getFieldsConfig()[this.oneVar()].def;\n    }\n}\n","import { ComposedVars, SimpleVariable } from '../variable';\nimport { DIMENSION, COLUMNS, ROWS, TEMPORAL } from '../enums/constants';\n\n/**\n * Gets the list of fields in a sorted order by measurement and dimension\n *\n * @param {Array} fieldList List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields sorted by measurement and dimensions\n */\nconst orderFields = (fieldArray, type) => {\n    const dimensionArr = [[], []];\n    const measureArr = [[], []];\n    const temporalArr = [[], []];\n    const categoricalArr = [[], []];\n\n    fieldArray.forEach((fieldList, index) => {\n        fieldList.forEach((field) => {\n            if (field.type() === DIMENSION) {\n                dimensionArr[index].push(field);\n                field.subtype() === TEMPORAL ? temporalArr[index].push(field) : categoricalArr[index].push(field);\n            } else {\n                measureArr[index].push(field);\n            }\n        });\n    });\n\n    const numOfMeasures = measureArr[0].length + (measureArr[1] ? measureArr[1].length : 0);\n\n    // Single array of fields\n    if (!fieldArray[1]) {\n        // Push measures to bottom\n        measureArr[1] = type === COLUMNS ? measureArr[0] : [];\n        // Push measures to left\n        measureArr[0] = type !== COLUMNS ? measureArr[0] : [];\n        // Bottom and right dimensions empty\n        dimensionArr[1] = [];\n        // Left and top filled with dimensions\n        dimensionArr[0] = dimensionArr[0];\n        if (numOfMeasures === 0) {\n            const allDimensions = [...dimensionArr[0], ...dimensionArr[1]];\n            if (type === COLUMNS) {\n                dimensionArr[1] = allDimensions[allDimensions.length - 1] ? [allDimensions[allDimensions.length - 1]]\n                        : [];\n                allDimensions.splice(-1, 1);\n            } else {\n                dimensionArr[1] = [];\n            }\n            dimensionArr[0] = [...allDimensions];\n        }\n    }\n\n    if (dimensionArr[0].length && dimensionArr[1].length && numOfMeasures > 0) {\n        dimensionArr[0] = [...dimensionArr[0], ...dimensionArr[1]];\n        dimensionArr[1] = [];\n    }\n    return {\n        fields: dimensionArr.map((list, i) => (i === 1 ?\n            measureArr[i].concat(dimensionArr[i]) : dimensionArr[i].concat(measureArr[i]))),\n        dimensions: [...dimensionArr[0], ...dimensionArr[1]],\n        measures: [...measureArr[0], ...measureArr[1]],\n        temporal: [...temporalArr[0], ...temporalArr[1]],\n        categorical: [...categoricalArr[0], ...categoricalArr[1]]\n    };\n};\n\n/**\n * Gets the list of normalized fields\n *\n * @param {Array} fields List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields normalized by measurement and dimensions\n */\nconst normalizeFields = (config, type) => {\n    const fieldsArr = [];\n    const fields = config[type];\n\n    if (!(fields[0] instanceof Array)) {\n        fieldsArr[0] = fields;\n    } else {\n        fieldsArr[0] = fields[0] || [];\n        fieldsArr[1] = fields[1] || [];\n    }\n    return fieldsArr;\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} datamodel\n *\n */\nconst convertToVar = (datamodel, fields) => {\n    const vars = [];\n\n    fields && fields.forEach((field) => {\n        if (field instanceof ComposedVars) {\n            vars.push(field);\n            field.data(datamodel);\n        } else {\n            vars.push(new SimpleVariable(field).data(datamodel));\n        }\n    });\n    return vars;\n};\n\n/**\n *\n *\n * @param {*} rows\n * @param {*} columns\n * @param {*} datamodel\n *\n */\nexport const transformFields = (datamodel, config) => {\n    const [rowsInfo, columnsInfo] = [ROWS, COLUMNS].map((fields) => {\n        const normalizedFields = normalizeFields(config, fields);\n        const norFields = [convertToVar(datamodel, normalizedFields[0])];\n\n        if (normalizedFields[1]) {\n            norFields[1] = convertToVar(datamodel, normalizedFields[1]);\n        }\n        return orderFields(norFields, fields);\n    });\n    const {\n        fields: rows,\n        dimensions: rowDimensions,\n        measures: rowMeasures,\n        temporal: rowTemporalFields,\n        categorical: rowCategoricalFields\n    } = rowsInfo;\n    const {\n        fields: columns,\n        dimensions: columnDimensions,\n        measures: columnMeasures,\n        temporal: columnTemporalFields,\n        categorical: columnCategoricalFields\n    } = columnsInfo;\n    return {\n        rows,\n        rowDimensions,\n        rowMeasures,\n        rowTemporalFields,\n        rowCategoricalFields,\n        columns,\n        columnTemporalFields,\n        columnCategoricalFields,\n        columnDimensions,\n        columnMeasures\n    };\n};\n","import { Store, COORD_TYPES, getObjProp, DataModel } from 'muze-utils';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { BaseLayer } from '@chartshq/visual-layer';\nimport { DATA_UPDATE_COUNTER } from '../enums/defaults';\nimport { Variable } from '../variable';\nimport { PolarEncoder, CartesianEncoder } from '../encoder';\nimport {\n    DIMENSION,\n    MEASURE,\n    ORDINAL,\n    LINEAR,\n    ROW,\n    COLUMN,\n    COL,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    COLOR,\n    SIZE,\n    TEMPORAL,\n    SHAPE,\n    INTERACTION,\n    GRID_LINES,\n    GRID_BANDS,\n    HEADER,\n    FACET,\n    X,\n    Y,\n    ARC,\n    RADIUS,\n    ANGLE\n} from '../enums/constants';\n\nconst POLAR = COORD_TYPES.POLAR;\n\n/**\n * Creates an instance of a store which contains the arguments to make the class reactive\n *\n * @return {Object} instance of store\n * @memberof VisualGroup\n */\nexport const initStore = () => new Store({\n    [DATA_UPDATE_COUNTER]: DATA_UPDATE_COUNTER\n});\n\n/**\n *\n *\n * @param {*} arr\n */\nexport const isDistributionEqual = arr => [...arr[0], ...arr[1]].reduce((isEqual, row) => {\n    const rowType = row.type();\n\n    if (rowType === MEASURE || rowType === TEMPORAL) {\n        isEqual = true;\n    }\n    return isEqual;\n}, false);\n\n/**\n *\n *\n */\nexport const initializeCacheMaps = () => ({\n    cellMap: new Map(),\n    xAxesMap: new Map(),\n    yAxesMap: new Map(),\n    entryCellMap: new Map(),\n    exitCellMap: new Map()\n});\n\n/**\n *\n *\n * @param {*} axisName\n * @param {*} id\n */\nexport const getAxisKey = (axisName, ...params) => `${axisName}-axis-${params.join('-')}`;\n\n/**\n *\n *\n * @param {*} rowId\n * @param {*} columnId\n */\nexport const getCellKey = (rowId, columnId) => `cell-${rowId}-${columnId}`;\n\n/**\n *\n *\n * @param {*} config\n *\n */\nexport const extractUnitConfig = (config) => {\n    const unitConfig = {};\n    const attrNames = [INTERACTION, GRID_LINES, GRID_BANDS];\n\n    attrNames.forEach((attr) => {\n        if (config[attr] !== undefined) {\n            unitConfig[attr] = config[attr];\n        }\n    });\n    return unitConfig;\n};\n\n/**\n *\n *\n * @param {*} headers\n * @param {*} index\n * @param {*} rowLength\n *\n * @memberof MatrixResolver\n */\nexport const getHeaderText = (headers, index, rowLength) => {\n    let header = '';\n\n    if (index === rowLength - 1 && headers.length > rowLength) {\n        for (let i = index; i < headers.length - 1; i++) {\n            header += `${headers[i].toString()} / `;\n        }\n        header += headers[headers.length - 1].toString();\n        return header;\n    } else if (headers[index]) {\n        return headers[index].toString();\n    }\n    return '';\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} fieldHeaders\n * @param {*} TextCell\n * @param {*} labelManager\n *\n */\nexport const headerCreator = (fields, fieldHeaders, TextCell, { classPrefix, labelManager }) => {\n    const headers = fields.length > 0 ? fields[0].map((cell, i) => new TextCell({\n        type: HEADER,\n        className: `${classPrefix}-grid-headers`\n    }, {\n        labelManager\n    }).source(getHeaderText(fieldHeaders, i, fields[0].length))\n                    .config({ show: cell.config().show })) : [];\n    return headers;\n};\n\n/**\n *\n *\n * @param {*} variable\n * @param {*} allFields\n *\n */\nexport const findInGroup = (variable, allFields) => {\n    let channel = null;\n\n    [COLOR, SIZE, SHAPE].forEach((e) => {\n        if (this.store.get(e) && variable === this.store.get(e)[0]) {\n            channel = e;\n        }\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    [ROW, COL].forEach((facetType) => {\n        allFields[`${facetType}Facets`].forEach((e) => {\n            if (e.toString() === variable) {\n                channel = { channel: FACET, type: facetType === COL ? COLUMN : ROW };\n            }\n        });\n    });\n\n    if (channel) {\n        return channel;\n    }\n\n    [ROW, COL].forEach((projType) => {\n        allFields[`${projType}Projections`].forEach((e) => {\n            e.forEach((m) => {\n                if (m.toString() === variable) {\n                    channel = projType === COL ? X : Y;\n                }\n            });\n        });\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    return null;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} field\n */\nexport const getAxisType = (fieldsConfig, field) => {\n    let fieldType = ORDINAL;\n\n    if (field && fieldsConfig[field].def.type !== DIMENSION) {\n        fieldType = LINEAR;\n    }\n    return fieldType;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} fieldName\n *\n */\nexport const retriveDomainFromData = (datamodel, fieldName) => {\n    const field = datamodel.getFieldspace().fields.find(d => d.name() === fieldName.toString());\n    return field.domain();\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    let xAxes = null;\n    let yAxes = null;\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n\n    xAxisSet && xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes = xAxes || [];\n        xAxes.push(xAxis);\n    });\n\n    yAxisSet && yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes = yAxes || [];\n        yAxes.push(yAxis);\n    });\n\n    return {\n        xAxes, yAxes\n    };\n};\n\nconst hasPolarEncodings = layerConf => layerConf.mark === ARC || [RADIUS, ANGLE].some(field =>\n        getObjProp(layerConf.encoding, field));\n\n/**\n *\n *\n * @param {*} layers\n *\n */\nexport const getEncoder = (layers) => {\n    let encoder = new CartesianEncoder();\n\n    if (layers.length) {\n        // Figuring out the kind of layers the group will have\n        encoder = layers.some(layerConf => hasPolarEncodings(layerConf)) ? new PolarEncoder() : encoder;\n    }\n    return encoder;\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} userAxisFromConfig\n *\n */\nexport const getHeaderAxisFrom = (type, fields, userAxisFromConfig) => {\n    let axisFrom = userAxisFromConfig[type];\n    let headerFrom = '';\n    const options = type === ROW ? [LEFT, RIGHT] : [BOTTOM, TOP];\n    const [firstField, secondField] = fields;\n    const firstFieldType = i => (firstField.length ? firstField[i].type() : null);\n    const secondFieldType = i => (secondField.length ? secondField[i].type() : null);\n\n    if (firstFieldType(firstField.length - 1) === DIMENSION && secondFieldType(0) === DIMENSION) {\n        headerFrom = axisFrom ? options[1 - options.indexOf(axisFrom)] : options[1];\n\n        if (type === COLUMN && (firstField[firstField.length - 1].toString() === secondField[0].toString())) {\n            axisFrom = TOP;\n        } else {\n            axisFrom = axisFrom || options[0];\n        }\n    } else if (secondFieldType(secondField.length - 1) === DIMENSION) {\n        headerFrom = type === ROW ? RIGHT : BOTTOM;\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else {\n        headerFrom = type === ROW ? LEFT : TOP;\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    if (firstFieldType(firstField.length - 1) === MEASURE && secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    } else if (secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else if (firstFieldType(firstField.length - 1) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    return [headerFrom, axisFrom];\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} layers\n *\n * @memberof MatrixResolver\n */\nexport const setFacetsAndProjections = (context, fieldInfo, encoder) => {\n    const {\n        fields,\n        type\n    } = fieldInfo;\n    const { facets, projections } = encoder.simpleEncoder.getFacetsAndProjections(fields, type);\n\n    context.facets({ [`${type}Facets`]: facets });\n    context.projections({ [`${type}Projections`]: projections });\n\n    return { facets, projections, fields };\n};\n\nconst getRowBorders = (left, right) => {\n    const borders = {};\n    borders.top = false;\n    borders.bottom = false;\n    if (left.length > 1 || right.length > 1) {\n        borders.top = true;\n        borders.bottom = true;\n    }\n    return borders;\n};\n\nconst getColumnsBorders = (top, bottom) => {\n    const borders = {};\n    borders.left = false;\n    borders.right = false;\n    if (top.length || bottom.length) {\n        if ((top[0] && top[0].length > 1) || (bottom[0] && bottom[0].length > 1)) {\n            borders.left = true;\n            borders.right = true;\n        }\n    }\n    return borders;\n};\n\nconst getValueBorders = (rows, columns) => {\n    const borders = { top: true, left: true, bottom: true, right: true };\n    const borderTypeRow = [LEFT, RIGHT];\n    const borderTypeCol = [TOP, BOTTOM];\n    rows.forEach((e, i) => {\n        if (e[0] && e[0].length) {\n            borders[borderTypeRow[i]] = true;\n        } else {\n            borders[borderTypeRow[i]] = false;\n        }\n    });\n    columns.forEach((e, i) => {\n        if (e.length) {\n            borders[borderTypeCol[i]] = true;\n        } else {\n            borders[borderTypeCol[i]] = false;\n        }\n    });\n\n    return borders;\n};\n\nexport const getBorders = (matrices, encoder) => {\n    let showRowBorders = { top: false, bottom: false };\n    let showColBorders = { left: false, right: false };\n    let showValueBorders = { top: false, bottom: false, left: false, right: false };\n    const {\n        rows,\n        columns,\n        values: valueMatrix\n    } = matrices;\n    const [leftRows, rightRows] = rows;\n    const [topColumns, bottomColumns] = columns;\n    const {\n        rowDimensions,\n        columnDimensions,\n        rowTemporalFields,\n        columnTemporalFields,\n        columnMeasures,\n        rowMeasures\n    } = encoder.fieldInfo();\n    const allDimensionLength = rowDimensions.length + columnDimensions.length;\n    const allMeasuresLength = rowMeasures.length + columnMeasures.length;\n    const allTemporalFieldsLength = rowTemporalFields.length + columnTemporalFields.length;\n\n    if (encoder.constructor.type() === POLAR) {\n        if (!allDimensionLength) {\n            return { showRowBorders, showColBorders, showValueBorders };\n        }\n    } else if (!allMeasuresLength && !allTemporalFieldsLength && allDimensionLength <= 2) {\n        return { showRowBorders, showColBorders, showValueBorders };\n    }\n\n    showRowBorders = getRowBorders(leftRows, rightRows);\n    showColBorders = getColumnsBorders(topColumns, bottomColumns);\n    showValueBorders = getValueBorders([leftRows, rightRows], [topColumns, bottomColumns]);\n\n    if (valueMatrix.length > 1) {\n        showValueBorders.top = true;\n        showValueBorders.bottom = true;\n    }\n    if (valueMatrix.length && valueMatrix[0].length > 1) {\n        showValueBorders.left = true;\n        showValueBorders.right = true;\n    }\n    return { showRowBorders, showColBorders, showValueBorders };\n};\n\nexport const getFieldsFromSuppliedLayers = (suppliedLayerConfig) => {\n    const encodingArr = suppliedLayerConfig.map(conf => (conf.encoding || {}));\n    const fields = [].concat(...encodingArr.map(enc => Object.values(enc).map(d => (typeof d === 'object' ?\n        d.field : d))));\n    return [...new Set(fields.filter(d => d))];\n};\n\nexport const extractFields = (facetsAndProjections, layerFields) => {\n    const fields = Object.values(facetsAndProjections).map((arr) => {\n        const flattenArray = [].concat(...arr);\n        return [].concat(...flattenArray.map((field) => {\n            if (field instanceof Variable) {\n                return field.getMembers();\n            }\n            return field;\n        }));\n    });\n    return [].concat(...fields, ...layerFields);\n};\n\n/**\n * This method sorts the facets fields inplace if field is of categorical type\n * @param {Object} facets Array of facets\n * @param {Array} keys Array of the facet field values\n * @param {Object} config configuration object\n * @return {Array} Returns sorted facets\n */\nexport const sortFacetFields = (facets, keys, config) => {\n    /**\n     * Check if the facet sorted by the user is plotted\n     * If an incorrect field is sorted, return the keys as is\n     */\n    const schema = [];\n    const facetNames = [];\n    const sortInfo = [];\n    const sortConfig = config.sort;\n\n    facets.forEach((facet) => {\n        const name = `${facet}`;\n        facetNames.push(name);\n\n        const facetSortConfig = sortConfig[name];\n\n        if (facetSortConfig) {\n            sortInfo.push([name, facetSortConfig]);\n        } else {\n            sortInfo.push([name, null]);\n        }\n        schema.push(facet.getSchemaDef());\n    });\n\n    return new DataModel([facetNames, ...keys], schema).getData({ sort: sortInfo }).data;\n};\n\nexport const removeExitCells = (resolver) => {\n    const exitCells = resolver.cacheMaps().exitCellMap;\n    const store = resolver.store();\n    const qualifiedStateProps = [].concat(...VisualUnit.getQualifiedStateProps(),\n        ...BaseLayer.getQualifiedStateProps());\n    store.lockCommits(qualifiedStateProps);\n    exitCells.forEach((placeholder) => {\n        placeholder.remove();\n    });\n    store.unlockCommits(qualifiedStateProps);\n};\n","/**\n * This file exports variables that are used as defaults for the crosstab group.\n */\nexport const DATA_UPDATE_COUNTER = 0;\n\nexport const DEFAULT_LAYER_TYPE = 'cartesian';\n\n","export const PROPS = {\n    layers: {},\n    data: {},\n    globalConfig: {}\n};\n","import { ERROR_MSG, mergeRecursive, generateGetterSetters } from 'muze-utils';\nimport { transformFields } from './field-sanitizer';\nimport { getHeaderAxisFrom, getFieldsFromSuppliedLayers } from '../group-helper/group-utils';\nimport { ROW, COLUMN } from '../enums/constants';\nimport { PROPS } from './props';\n\n/**\n *\n *\n * @export\n * @class VisualEncoder\n */\nexport default class VisualEncoder {\n\n    constructor () {\n        generateGetterSetters(this, PROPS);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    createAxis () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    setCommonDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    getLayerConfig () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    fieldInfo (...info) {\n        if (info.length) {\n            this._fieldInfo = mergeRecursive(this._fieldInfo || {}, info[0]);\n            return this;\n        }\n        return this._fieldInfo;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof VisualEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        this.fieldInfo(transformFields(datamodel, config));\n        return this.fieldInfo();\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    axisFrom (...params) {\n        if (params.length) {\n            this._axisFrom = params[0];\n            return this;\n        }\n        return this._axisFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    headerFrom (...params) {\n        if (params.length) {\n            this._headerFrom = params[0];\n            return this;\n        }\n        return this.__headerFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axisFrom\n     *\n     * @memberof CartesianEncoder\n     */\n    setAxisAndHeaders (axisFrom = {}, fields) {\n        const [rowHeader, rowAxis] = getHeaderAxisFrom(ROW, fields.rows, axisFrom);\n        const [colHeader, colAxis] = getHeaderAxisFrom(COLUMN, fields.columns, axisFrom);\n\n        this.axisFrom({\n            row: rowAxis,\n            column: colAxis\n        });\n        this.headerFrom({\n            row: rowHeader,\n            column: colHeader\n        });\n        return this;\n    }\n\n    getProjectionFields (layers) {\n        return getFieldsFromSuppliedLayers(layers);\n    }\n}\n","import { ContinousAxis, BandAxis, TimeAxis, ColorAxis, SizeAxis, ShapeAxis } from '@chartshq/muze-axis';\n\nexport const scaleMaps = {\n    linear: ContinousAxis,\n    band: BandAxis,\n    temporal: TimeAxis,\n    size: SizeAxis,\n    color: ColorAxis,\n    shape: ShapeAxis\n};\n","import { DataModel } from 'muze-utils';\nimport { sortFacetFields } from './group-utils';\n\n/**\n* Gets name of fields form the variables\n*\n* @param {*} fields1\n* @param {*} [fields2=[]]\n*\n*/\nconst getFieldNames = fieldVar => fieldVar.reduce((acc, d) => {\n    acc = [...acc, ...d.getMembers()];\n    return acc;\n}, []);\n\n/**\n*\n*\n* @param {*} fieldInfo\n* @returns\n*/\nconst prepareProjectionInfo = (fieldInfo) => {\n    const {\n        colProjections,\n        rowProjections\n    } = fieldInfo;\n    const uniqueFields = [];\n    let indices = [];\n    let projections = [];\n\n    rowProjections.forEach((rowProj, rIndex) => {\n        const newRIndex = rIndex;\n        colProjections.forEach((colProj, cIndex) => {\n            const newCIndex = cIndex;\n            const newRowProj = getFieldNames(rowProj);\n            const newColProj = getFieldNames(colProj);\n\n            uniqueFields.push([...newRowProj, ...newColProj]);\n            indices.push({ rowIndex: newRIndex, colIndex: newCIndex });\n            projections.push({ rowFields: rowProj, columnFields: colProj });\n        });\n    });\n    indices = indices.length ? indices : [{ rowIndex: 0, colIndex: 0 }];\n    projections = projections.length ? projections : [{ rowFields: [], columnFields: [] }];\n    return { uniqueFields, indices, projections };\n};\n\n/**\n*\n*\n* @param {*} fieldInfo\n* @returns\n*/\nconst prepareFacetInfo = (fieldInfo) => {\n    const {\n        rowFacets,\n        colFacets\n    } = fieldInfo;\n\n    const rowFacetNames = getFieldNames(rowFacets);\n    const colFacetNames = getFieldNames(colFacets);\n    const allFacets = [...rowFacetNames, ...colFacetNames];\n\n    return { rowFacetNames, colFacetNames, allFacets, rowFacets, colFacets };\n};\n\n/**\n*\n*\n* @param {*} context\n* @param {*} facetNames\n* @param {*} hashMap\n* @param {*} keys\n* @param {*} index\n* @returns\n*/\nconst prepareHashMaps = (context, facetNames, hashMap, keys, index) => {\n    const rowKey = [];\n    facetNames.forEach((name) => {\n        const key = context._derivation[context._derivation.length - 1].meta.keys[name];\n\n        rowKey.push(key);\n    });\n\n    const joinedRowKey = rowKey.join(',');\n\n    if (hashMap[joinedRowKey] === undefined) {\n        hashMap[joinedRowKey] = index++;\n        keys.push(rowKey);\n    }\n    return rowKey;\n};\n\nconst createJoinedKeys = keys => keys.map(e => ({\n    keyArr: e,\n    joinedKey: e.join(',')\n}));\n\n/**\n*\n*\n* @param {*} splitModels\n* @param {*} facetInfo\n* @returns\n*/\nconst getSplitModelHashMap = (splitModels, facetInfo, config) => {\n    const {\n        rowFacetNames,\n        colFacetNames,\n        rowFacets,\n        colFacets\n    } = facetInfo;\n\n    const rowKeyHashMap = {};\n    const colKeyHashMap = {};\n\n    const rowKeys = [];\n    const colKeys = [];\n    const rowIndex = 0;\n\n    const splitModelsHashMap = {};\n\n    splitModels.forEach((splitContext) => {\n        const rowKey = prepareHashMaps(splitContext, rowFacetNames, rowKeyHashMap, rowKeys, rowIndex);\n        const colKey = prepareHashMaps(splitContext, colFacetNames, colKeyHashMap, colKeys, 1);\n\n        splitModelsHashMap[`${rowKey}-${colKey}`] = splitContext;\n    });\n\n    return {\n        splitModelsHashMap,\n        rowKeys: createJoinedKeys(sortFacetFields(rowFacets, rowKeys, config)),\n        colKeys: createJoinedKeys(sortFacetFields(colFacets, colKeys, config))\n    };\n};\n\n/**\n * Formats row or columns keys with the provided formatter.\n *\n * @param {Array} keys - The collection of row or column keys.\n * @param {Array} formatterList - The list of corresponding formatter.\n */\nconst formatKeys = (keys, formatterList) => {\n    const formattedKeys = [];\n    keys.forEach((rKeys, rIdx) => {\n        formattedKeys[rIdx] = [];\n        rKeys.forEach((key, idx) => {\n            formattedKeys[rIdx][idx] = formatterList[idx](key);\n        });\n    });\n    return formattedKeys;\n};\n\n/**\n*\n*\n* @param {Object} context\n* @param {Object} fieldInfo\n* @returns\n*/\nconst splitByColumn = (context, optionalProjections) => {\n    const {\n        matrix,\n        dataModel,\n        rowIndex,\n        colIndex,\n        facetInfo,\n        projectionInfo,\n        geomCellCreator\n    } = context;\n    const {\n        indices,\n        uniqueFields,\n        projections\n    } = projectionInfo;\n\n    const commonFields = optionalProjections;\n\n    dataModel.splitByColumn(uniqueFields, commonFields).forEach((model, i) => {\n        let { rowIndex: row, colIndex: col } = indices[i];\n        row += rowIndex;\n        col += colIndex;\n\n        matrix[row] = matrix[row] || [];\n\n        const projectionIndexObject = {\n            indices: {\n                rowIndex: row,\n                columnIndex: col\n            },\n            projections: projections[i]\n        };\n\n        matrix[row][col] = geomCellCreator(model, projectionIndexObject, facetInfo);\n    });\n    const lastIndex = indices[indices.length - 1];\n\n    return {\n        rowIndex: lastIndex.rowIndex + rowIndex,\n        colIndex: lastIndex.colIndex + colIndex\n    };\n};\n\nconst createColumnDataModels = (colContext, fieldInfo, sourceDM) => {\n    let context = {};\n    const {\n        rowFacets,\n        colFacets\n    } = fieldInfo;\n    const {\n        rowKeyArr,\n        rowKey,\n        colKeyObj,\n        newRowIndex,\n        splitModelsHashMap,\n        currentColumnIndex\n    } = colContext;\n\n    const { keyArr: colKeyArr, joinedKey: colKey } = colKeyObj;\n    const hashMapKey = splitModelsHashMap[`${rowKey}-${colKey}`];\n\n    if (hashMapKey) {\n        context = { dataModel: hashMapKey };\n    } else {\n        const emptyDm = new DataModel([], sourceDM.getData().schema);\n        context = { dataModel: emptyDm };\n    }\n\n    context = {\n        ...context,\n        ...colContext,\n        facetInfo: {\n            rowFacets: [rowFacets, rowKeyArr],\n            colFacets: [colFacets, colKeyArr]\n        },\n        rowIndex: newRowIndex,\n        colIndex: currentColumnIndex\n    };\n    const dataModels = splitByColumn(context, fieldInfo.optionalProjections);\n\n    return {\n        columnIndex: dataModels.colIndex + 1,\n        rowIndex: dataModels.rowIndex\n    };\n};\n\nconst createRowDataModels = (rowContext, fieldInfo, sourceDM) => {\n    let currentColumnIndex = 0;\n    let rowIndexForCurrentKey = 0;\n    const {\n        colKeys,\n        rowKeyObj,\n        currentRowIndex\n    } = rowContext;\n    const newRowIndex = currentRowIndex;\n    const { keyArr: rowKeyArr, joinedKey: rowKey } = rowKeyObj;\n    const colContext = {\n        ...rowContext,\n        rowKeyArr,\n        rowKey,\n        newRowIndex\n    };\n    rowIndexForCurrentKey = currentRowIndex;\n    if (colKeys.length) {\n        colKeys.forEach((colKeyObj) => {\n            colContext.colKeyObj = colKeyObj;\n            colContext.currentColumnIndex = currentColumnIndex;\n            const { columnIndex, rowIndex } = createColumnDataModels(colContext, fieldInfo, sourceDM);\n\n            currentColumnIndex = columnIndex;\n            rowIndexForCurrentKey = rowIndex;\n        });\n    } else {\n        colContext.colKeyObj = { keyArr: [], joinedKey: '' };\n        colContext.currentColumnIndex = currentColumnIndex;\n\n        const { columnIndex, rowIndex } = createColumnDataModels(colContext, fieldInfo, sourceDM);\n\n        currentColumnIndex = columnIndex;\n        rowIndexForCurrentKey = rowIndex;\n    }\n    return {\n        rowIndex: ++rowIndexForCurrentKey\n    };\n};\n\n/**\n* Gets Matrixes for corresponding datamodel, facets and projections\n*\n* @param {Object} dataModel input datamodel\n* @param {Object} fieldInfo Information about the fields\n* @param {Function} geomCellCreator Callback executed after datamodels are prepared after sel/proj\n* @return {Object} set of matrices with the corresponding row and column keys\n*/\nexport const getMatrixModel = (dataModel, fieldInfo, geomCellCreator, globalConfig) => {\n    let currentRowIndex = 0;\n    const matrix = [];\n    const {\n        rowFacets,\n        colFacets\n    } = fieldInfo;\n\n    const projectionInfo = prepareProjectionInfo(fieldInfo);\n    const facetInfo = prepareFacetInfo(fieldInfo);\n    const allSplitModels = dataModel.splitByRow(facetInfo.allFacets);\n\n    const {\n        splitModelsHashMap,\n        rowKeys,\n        colKeys\n    } = getSplitModelHashMap(allSplitModels, facetInfo, globalConfig);\n\n    const generalContext = {\n        matrix,\n        geomCellCreator,\n        projectionInfo,\n        splitModelsHashMap,\n        colKeys\n    };\n    if (rowKeys.length) {\n        rowKeys.forEach((rowKeyObj) => {\n            const rowContext = {\n                ...generalContext,\n                rowKeyObj,\n                currentRowIndex\n            };\n            const { rowIndex } = createRowDataModels(rowContext, fieldInfo, dataModel);\n\n            currentRowIndex = rowIndex;\n        });\n    } else if (colKeys.length) {\n        let currentColumnIndex = 0;\n        const newRowIndex = currentRowIndex;\n\n        colKeys.forEach((colKeyObj) => {\n            const colContext = {\n                ...generalContext,\n                rowKeyArr: [],\n                rowKey: '',\n                colKeyObj,\n                newRowIndex,\n                currentColumnIndex\n            };\n            const { columnIndex, rowIndex } = createColumnDataModels(colContext, fieldInfo, dataModel);\n            currentRowIndex = rowIndex;\n            currentColumnIndex = columnIndex;\n        });\n    } else {\n        let currentColumnIndex = 0;\n        const newRowIndex = currentRowIndex;\n        const colContext = {\n            ...generalContext,\n            rowKeyArr: [],\n            rowKey: '',\n            colKeyObj: { keyArr: [], joinedKey: '' },\n            newRowIndex,\n            currentColumnIndex\n        };\n        const { columnIndex, rowIndex } = createColumnDataModels(colContext, fieldInfo, dataModel);\n        currentRowIndex = rowIndex;\n        currentColumnIndex = columnIndex;\n    }\n\n    const formattedColKeys = formatKeys(colKeys.map(e => e.keyArr),\n        colFacets.map(facetField => facetField.rawFormat()));\n    const formattedRowKeys = formatKeys(rowKeys.map(e => e.keyArr),\n        rowFacets.map(facetField => facetField.rawFormat()));\n\n     // Getting column keys\n    const transposedColKeys = formattedColKeys.length > 0 ? formattedColKeys[0].map((col, i) =>\n     formattedColKeys.map(row => row[i])) : formattedColKeys;\n\n    return { matrix, rowKeys: formattedRowKeys, columnKeys: transposedColKeys };\n};\n","import { AxisOrientation } from '@chartshq/muze-axis';\nimport {\n    getObjProp,\n    FieldType,\n    retrieveNearestGroupByReducers,\n    mergeRecursive,\n    createSelection,\n    DataModel\n} from 'muze-utils';\nimport { getMatrixModel } from './matrix-model';\nimport {\n    getCellKey,\n    isDistributionEqual,\n    mutateAxesFromMap,\n    getFieldsFromSuppliedLayers,\n    extractFields,\n    removeExitCells\n} from './group-utils';\nimport { ROW, ROWS, COLUMNS, COL, LEFT, RIGHT, TOP,\n    BOTTOM, PRIMARY, SECONDARY, X, Y, TEMPORAL } from '../enums/constants';\nimport { SimpleVariable } from '../variable';\n\n/**\n * Updates row and column cells with the geom cell corresponding to the facet keys\n *\n * @param {*} resolver\n * @param {*} facets\n */\nconst updateCells = (resolver, facets, geomCell) => {\n    [ROW, COL].forEach((field) => {\n        const cells = resolver[`${field}Cells`]();\n        const facetKey = facets[`${field}Facets`][1].join();\n\n        !cells[facetKey] && (cells[facetKey] = []);\n        cells[facetKey].push(geomCell);\n        resolver[`${field}Cells`](cells);\n    });\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} datamodel\n * @param {*} fieldInfo\n * @param {*} facets\n *\n */\nexport const createValueCells = (context, datamodel, fieldInfo, facets) => {\n    const {\n        projections,\n        indices\n    } = fieldInfo;\n    const {\n        rowFields,\n        columnFields\n    } = projections;\n    const {\n         rowIndex,\n         columnIndex\n    } = indices;\n    const {\n        suppliedLayers,\n        cell: GeomCell,\n        resolver,\n        config,\n        encoder,\n        detailFields\n    } = context;\n    const axes = resolver.axes();\n    const cacheMaps = resolver.cacheMaps();\n    const matrixLayers = resolver.matrixLayers();\n    const labelManager = resolver.dependencies().smartlabel;\n    const horizontalAxis = resolver.horizontalAxis();\n    const verticalAxis = resolver.verticalAxis();\n    const datamodelTransform = resolver.datamodelTransform();\n    const sortedFields = config.sort;\n    const {\n        entryCellMap,\n        exitCellMap\n    } = cacheMaps;\n    const layerConfigArr = encoder.getLayerConfig({ columnFields, rowFields }, suppliedLayers || [],\n        context.retinalConfig);\n    const axesCreators = { config, labelManager, axes, cacheMaps };\n\n    fieldInfo.normalizedColumns = verticalAxis.fields;\n    fieldInfo.normalizedRows = horizontalAxis.fields;\n\n    const allFacets = [\n        [...facets.rowFacets[0], ...facets.colFacets[0]],\n        [...facets.rowFacets[1], ...facets.colFacets[1]]\n    ];\n    const facetFields = allFacets.slice();\n    facetFields[0] = facetFields[0].map(facetField => facetField.oneVar());\n\n    matrixLayers[rowIndex] = matrixLayers[rowIndex] ? matrixLayers[rowIndex] : [];\n    matrixLayers[rowIndex][columnIndex] = layerConfigArr;\n\n    // return from map if already there otherwise create and put in map\n    const geomCellKey = getCellKey(rowIndex, columnIndex);\n    const fields = {\n        y: rowFields,\n        x: columnFields\n    };\n\n    const geomCell = !exitCellMap.has(geomCellKey) ? new GeomCell() : exitCellMap.get(geomCellKey);\n\n    // Sort datamodel if user has sorted a field\n    const sortConfig = Object.keys(sortedFields).map(field => [field, sortedFields[field]]);\n    if (sortConfig.length) {\n        datamodel = datamodel.sort(sortConfig, { saveChild: true });\n    }\n\n    geomCell.data(datamodel)\n                    .fields(fields)\n                    .transform(datamodelTransform)\n                    .detailFields(detailFields)\n                    .facetByFields(allFacets);\n\n    encoder.createAxis(axesCreators, fieldInfo, Object.assign({}, context, { geomCell, facetFields }));\n    entryCellMap.set(geomCellKey, geomCell);\n    exitCellMap.delete(geomCellKey);\n\n    updateCells(resolver, facets, geomCell);\n\n    return entryCellMap.get(geomCellKey);\n};\n\nconst extractAxisIndex = id => getObjProp(id.match(/^[0-9]*?(?=-)/g), 0);\n\n/**\n * Creates axis cells based on the set of axes\n *\n * @param {Selection} selection Contains a selection of the axis units\n * @param {Array} axes Actual axis units\n * @param {number} axisIndex 0-> primary axis, 1-> secondary axis(when dual axis is made)\n * @param {Object} cells Contains a collection of the cells\n * @return {Object} return either set of axis/blank cells depending on the config\n */\nconst createAxisCells = (selection, axes, axisIndex, cells) =>\n    createSelection(selection, axis => axis, axes, (item, i) => i + item.reduce((e, n) => {\n        const id = n.id + axisIndex;\n        return `${e}-${id}`;\n    }, '')).map((currObj, axis) => {\n        if (axis && axis[axisIndex]) {\n            const axisInst = axis[axisIndex];\n            const { orientation, show } = axisInst.config();\n\n            return new cells.AxisCell().source(axisInst).config({\n                isOffset: orientation === AxisOrientation.LEFT || orientation === AxisOrientation.TOP,\n                show\n            });\n        }\n        return new cells.BlankCell().config({ show: false });\n    }).sort((a, b) => extractAxisIndex(a[0]) - extractAxisIndex(b[0]));\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @retur\n */\nconst axisPlaceholderGn = (context, selObj, cells) => {\n    const {\n        matrices\n    } = context;\n    const {\n        axesMatrix\n    } = matrices;\n\n    return (type, axisFrom) => {\n        const axes = axesMatrix[`${type}`];\n\n        if (axes && axes.length) {\n            if (type === X || type === Y) {\n                const fieldNames = type === Y ? ROWS : COLUMNS;\n\n                [PRIMARY, SECONDARY].forEach((fieldType, index) => {\n                    const selObjProp = `${fieldNames}${fieldType}`;\n                    let axisIndex = index;\n                    let axesForDraw = axes;\n                    if (axisFrom === RIGHT || axisFrom === BOTTOM) {\n                        axisIndex = 1 - axisIndex;\n                    }\n                    if (!getObjProp(axes, 0, axisIndex)) {\n                        axesForDraw = [];\n                    }\n                    selObj[selObjProp] = createAxisCells(selObj[selObjProp], axesForDraw, axisIndex, cells);\n                });\n            } else {\n                selObj.rowsPrimary = createAxisCells(selObj.rowPrime, axes.map(() => []), 0, cells);\n                selObj.rowsSecondary = createAxisCells(selObj.rowSec, axes.map(() => []), 0, cells);\n                selObj.columnsPrimary = createAxisCells(selObj.colPrime, axes[0], 0, cells);\n                selObj.columnsSecondary = createAxisCells(selObj.colSec, axes[0], 0, cells);\n            }\n        }\n        return selObj;\n    };\n};\n\n/**\n * Creates header cells based on the set of headers\n *\n * @param {Object} selection Contains a selection of the header units\n * @param {string} headers Contains a list of the headers\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} return either set of header cells depending on the config\n */\nconst createTextCells = (selection, headers, cells, labelManager) => createSelection(selection,\n        (label) => {\n            const textCell = new cells.TextCell({}, { labelManager });\n            textCell.source(label);\n            return textCell;\n        }, headers, (key, i) => key + i);\n\nconst extractFacetIndex = id => id.split('-').pop();\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @param {*} labelManager\n *\n */\nconst headerPlaceholderGn = (context, selectionObj, cells, labelManager) => {\n    const {\n        axis,\n        keys,\n        type,\n        facet\n    } = context;\n    const counter = axis.length / keys.length;\n    const selectionKeys = keys.length ? axis.map((d, i) => keys[Math.floor(i / counter)]) : [];\n\n    const selObjUpdater = createSelection(selectionObj[`${type}Headers`], keySet => keySet, selectionKeys,\n    (keySet, i) => `${keySet.join(',')}-${i}`)\n        .sort((a, b) => extractFacetIndex(a[0]) - extractFacetIndex(b[0]));\n\n    return selObjUpdater.map((keySet, data) => {\n        let textCells = createTextCells(null, data, cells, labelManager);\n        textCells = textCells.map((cell, k) => cell.source(k).config(facet));\n        return textCells;\n    });\n};\n\n/**\n * Creates a set of placeholders as a part of selection object\n *\n * @param {Array} normalizedOptions contains normalized rows and columns\n * @param {Array} matrices contains axis and value matrices\n * @param {aArrayny} projections contains set of row and column projections\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} Creates a set of placeholders as a part of selections\n */\nconst generatePlaceholders = (context, cells, labelManager) => {\n    let selectionObj;\n    const {\n        matrices,\n        fields,\n        facetsAndProjections,\n        selection,\n        facet,\n        encoders,\n        resolver\n    } = context;\n    const {\n        rows,\n        columns\n    } = fields;\n    const {\n        valuesMatrix\n    } = matrices;\n    const {\n        rowProjections,\n        colProjections\n    } = facetsAndProjections;\n    const {\n        rowKeys,\n        columnKeys\n    } = valuesMatrix;\n    const takeAxisFrom = encoders.simpleEncoder._axisFrom;\n    const takeHeaderFrom = encoders.simpleEncoder._headerFrom;\n\n    selectionObj = selection || {};\n\n    ['pie', X, Y].forEach((axis) => {\n        const axisFrom = axis === X ? takeAxisFrom.column : takeAxisFrom.row;\n        selectionObj = axisPlaceholderGn(context, selectionObj, cells)(axis, axisFrom);\n    });\n\n    const {\n        rowsPrimary,\n        rowsSecondary,\n        columnsPrimary,\n        columnsSecondary\n    } = selectionObj;\n\n    const rowAxis = rowsPrimary && rowsPrimary.getObjects().length ? rowsPrimary.getObjects() :\n        (rowsSecondary && rowsSecondary.getObjects().length ? rowsSecondary.getObjects() : []);\n    const colAxis = columnsPrimary && columnsPrimary.getObjects().length ? columnsPrimary.getObjects() :\n        (columnsSecondary && columnsSecondary.getObjects().length ? columnsSecondary.getObjects() : []);\n\n    const headerConfig = [\n        { type: LEFT, section: rows[0], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: RIGHT, section: rows[1], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: TOP, section: columns[0], axis: colAxis, headerFrom: takeHeaderFrom.column },\n        { type: BOTTOM, section: columns[1], axis: colAxis, headerFrom: takeHeaderFrom.column }\n    ];\n\n    headerConfig.forEach((config, index) => {\n        let keys;\n        let length;\n        const {\n            type,\n            section,\n            axis,\n            headerFrom\n        } = config;\n\n        if (index < 2) {\n            keys = rowKeys;\n            length = rowProjections.length > 0 ? rowProjections.length : 1;\n        } else {\n            keys = columnKeys;\n            length = colProjections.length > 0 ? colProjections.length : 1;\n        }\n        keys = keys.map(arr => arr.map(val => resolver.valueParser()(val)));\n        if (section.length && headerFrom === type && axis && keys.length) {\n            const hContext = { axis, length, type };\n            let headers = [];\n            if (index < 2) {\n                hContext.keys = keys;\n                hContext.facet = facet.rows;\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            } else {\n                hContext.facet = facet.columns;\n                hContext.keys = keys[0].map((key, i) => keys.map(e => e[i]));\n\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            }\n            selectionObj[`${type}Headers`] = headers;\n        } else {\n            selectionObj[`${type}Headers`] = null;\n        }\n    });\n    return selectionObj;\n};\n\n/**\n * Generates matrices\n *\n * @param {Object} config Configuration to generate matrices\n * @param {Array} matrices Matrices containing the set of visual units and axes units\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} contains a collection of matrices\n */\nexport const generateMatrices = (context, matrices, cells, labelManager) => {\n    const {\n        unitHeight,\n        unitWidth,\n        facetsAndProjections,\n        normalizedRows,\n        normalizedColumns,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n     } = context;\n    const placeholderContext = {\n        fields: {\n            rows: normalizedRows,\n            columns: normalizedColumns\n        },\n        matrices,\n        facetsAndProjections,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n    };\n    // Generate placeholders for all matrices\n    const selectionObj = generatePlaceholders(placeholderContext, cells, labelManager);\n    const {\n        columnsPrimary,\n        columnsSecondary,\n        rowsPrimary,\n        rowsSecondary,\n        leftHeaders,\n        topHeaders,\n        bottomHeaders,\n        rightHeaders\n    } = selectionObj;\n    const [rowPrime, rowSec, colPrime, colSec] = [rowsPrimary, rowsSecondary, columnsPrimary, columnsSecondary]\n        .map(d => (d ? d.getObjects() : []));\n    const [leftFacets, rightFacets] = [leftHeaders, rightHeaders]\n        .map(e => (e ? e.getObjects()\n                        .map(f => f.getObjects()) : []));\n    let rowPriority = rowSec.length ? 1 : -1;\n    rowPrime.length && rowPriority++;\n    let colPriority = colSec.length ? 1 : -1;\n    colPrime.length && colPriority++;\n\n    // Compute left matrix using left headers and the axes on the rows\n    let leftMatrix = leftFacets.length ? leftFacets.map((d, i) => {\n        rowPrime[i] = rowPrime[i] ? [rowPrime[i]] : [];\n        return [...d, ...rowPrime[i]];\n    }) : (rowPrime ? rowPrime.map(d => [d]) : []);\n\n    // Compute right matrix using right headers and the axes on the rows\n    const rightMatrix = rowSec.length ? rowSec.map((d, i) => [d, ...(rightFacets[i] || [])]) : (rightFacets.length ?\n        rightFacets.map(d => [...d]) : []);\n\n    const topMatrix = [];\n    if (topHeaders) {\n        const headers = topHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                topMatrix[i] = topMatrix[i] || [];\n                topMatrix[i].push(x);\n            });\n        });\n    }\n    // Compute top matrix using the top headers and axes on the columns\n    if (colPrime.length) {\n        topMatrix.push(colPrime);\n    }\n\n    // Bottom and right matrices are prepared using the user config.\n    let bottomMatrix = [];\n    if (colSec.length) {\n        bottomMatrix.push(colSec);\n    }\n    const currentBottomLength = bottomMatrix.length;\n    if (bottomHeaders) {\n        const headers = bottomHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                bottomMatrix[i + currentBottomLength] = bottomMatrix[i + currentBottomLength] || [];\n                bottomMatrix[i + currentBottomLength].push(x);\n            });\n        });\n    }\n\n    if (!leftMatrix.length && !rightMatrix.length) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        leftMatrix = [[cell]];\n    }\n\n    if (!topMatrix.length && (!bottomMatrix.length || !bottomMatrix[0].length)) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        bottomMatrix = [[cell]];\n    }\n\n    return {\n        rows: [leftMatrix, rightMatrix],\n        columns: [topMatrix, bottomMatrix],\n        selectionObj,\n        colPriority,\n        rowPriority\n    };\n};\n\nconst getAxisFields = (projections, fieldHolder = []) =>\n                            projections.reduce((acc, item) =>\n                                [...acc, ...item.reduce((ac, field) =>\n                                   (field instanceof SimpleVariable ? [...ac, field.oneVar()] : ac), [])], fieldHolder);\n\nconst sortDmTemporalFields = (resolver, datamodel) => {\n    let axisFields = [];\n    const projections = resolver.projections();\n    axisFields = getAxisFields(projections.rowProjections, getAxisFields(projections.colProjections));\n\n    const fieldConfig = datamodel.getFieldsConfig();\n    const temporalFields = axisFields.reduce((acc, field) =>\n        ((fieldConfig[field].def.subtype === TEMPORAL) ? [...acc, [field]] : acc), []);\n    return temporalFields.length ? datamodel.sort(temporalFields, { saveChild: true }) : datamodel;\n};\n\nconst transformDataModel = (dataModel, config, resolver) => {\n    let groupedModel;\n\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const resolvedData = resolver.data();\n    const { groupBy, suppliedLayers, facetsAndProjections } = config;\n\n    if (resolvedData instanceof DataModel) {\n        resolvedData.dispose();\n    }\n\n    groupedModel = dataModel.project(dataModel.getSchema().map(d => d.name));\n    resolver.data(groupedModel);\n    if (!groupBy.disabled) {\n        const newFieldsConfig = groupedModel.getFieldsConfig();\n        const fields = getFieldsFromSuppliedLayers(suppliedLayers).filter(field =>\n            getObjProp(newFieldsConfig, field, 'def', 'type') === FieldType.DIMENSION);\n        const allFields = extractFields(facetsAndProjections, fields);\n        const dimensions = allFields.filter(field =>\n            getObjProp(fieldsConfig, field, 'def', 'type') === FieldType.DIMENSION);\n        const aggregationFns = groupBy.measures;\n        const measureNames = Object.keys(groupedModel.getFieldspace().getMeasure());\n        const nearestAggFns = retrieveNearestGroupByReducers(groupedModel, ...measureNames);\n        const resolvedAggFns = mergeRecursive(nearestAggFns, aggregationFns);\n\n        groupedModel = groupedModel.groupBy(dimensions.length ? dimensions : [''], resolvedAggFns)\n                                            .project(allFields);\n    }\n    // sort temporal fields if any in the given rows and columns\n    groupedModel = sortDmTemporalFields(resolver, groupedModel);\n    resolver.transformedData(groupedModel);\n    return groupedModel;\n};\n\n/**\n * Computes matrices for a group\n *\n * @param {Object} datamodel on which the matrices are to be computed\n * @param {Object} config configuration of the matrices\n * @param {Object} layerRegistry contains the registered layers\n * @return {Object} conputed matrices\n * @memberof MatrixResolver\n */\nexport const computeMatrices = (context, config) => {\n    const {\n        resolver,\n        datamodel,\n        componentRegistry,\n        encoders\n    } = context;\n    const {\n            globalConfig,\n            selection,\n            transform\n        } = config;\n    const groupBy = globalConfig.autoGroupBy;\n    const { smartlabel: labelManager } = resolver.dependencies();\n    const fieldMap = datamodel.getFieldsConfig();\n    const layerConfig = resolver.layerConfig();\n    const registry = resolver.registry();\n    const { fields: normalizedRows } = resolver.horizontalAxis();\n    const { fields: normalizedColumns } = resolver.verticalAxis();\n    const otherEncodings = resolver.optionalProjections(config, layerConfig, datamodel.getSchema());\n    const facetsAndProjections = resolver.getAllFields();\n    const matrixGnContext = {\n        // Configuration to be passed to generate the  different matrices.\n        // A common config is used for both value matrices and other matrices\n        normalizedColumns,\n        normalizedRows,\n        facetsAndProjections,\n        layers: layerConfig,\n        fieldMap,\n        otherEncodings,\n        encoders,\n        facet: globalConfig.facet || {},\n        axisFrom: globalConfig.axisFrom || {},\n        selection,\n        resolver\n    };\n    const cells = {\n        GeomCell: resolver.getCellDef(registry.cells.GeomCell),\n        AxisCell: resolver.getCellDef(registry.cells.AxisCell),\n        BlankCell: resolver.getCellDef(registry.cells.BlankCell),\n        TextCell: resolver.getCellDef(registry.cells.TextCell)\n    };\n    const isRowSizeEqual = isDistributionEqual(normalizedRows);\n    const isColumnSizeEqual = isDistributionEqual(normalizedColumns);\n\n    resolver.colCells({});\n    resolver.rowCells({});\n    resolver.datamodelTransform(transform || {});\n\n    // Cell creation begins here\n    resolver.resetSimpleAxes();\n\n    const {\n        entryCellMap\n    } = resolver.cacheMaps();\n    const newCacheMap = {\n        exitCellMap: entryCellMap,\n        entryCellMap: new Map()\n    };\n\n    resolver.cacheMaps(newCacheMap);\n    const { simpleEncoder } = encoders;\n    const valueCellContext = {\n        config: globalConfig,\n        suppliedLayers: simpleEncoder.serializeLayerConfig(resolver.layerConfig()),\n        resolver,\n        cell: cells.GeomCell,\n        encoder: simpleEncoder,\n        newCacheMap,\n        detailFields: config.detail,\n        retinalConfig: {\n            color: config.color,\n            size: config.size,\n            shape: config.shape\n        }\n    };\n\n    const groupedModel = transformDataModel(datamodel, {\n        facetsAndProjections,\n        suppliedLayers: valueCellContext.suppliedLayers,\n        groupBy\n    }, resolver);\n    simpleEncoder.data(groupedModel);\n    // return a callback function to create the cells from the matrix\n    const cellCreator = resolver.valueCellsCreator(valueCellContext);\n    // Creates value matrices from the datamodel and configs\n    const valueMatrixInfo = getMatrixModel(groupedModel, facetsAndProjections, cellCreator, globalConfig);\n\n    removeExitCells(resolver);\n    resolver.cacheMaps().exitCellMap.clear();\n    resolver.valueMatrix(valueMatrixInfo.matrix);\n\n    const { xAxes, yAxes } = mutateAxesFromMap(resolver.cacheMaps(), resolver.axes());\n\n    resolver.axes({\n        x: xAxes,\n        y: yAxes\n    });\n\n    resolver.createUnits(componentRegistry, config);\n\n    const matrices = {\n        valuesMatrix: valueMatrixInfo,\n        axesMatrix: resolver.axes()\n    };\n    // Create all matrices\n    const {\n        rows,\n        columns,\n        selectionObj,\n        rowPriority,\n        colPriority\n    } = generateMatrices(matrixGnContext, matrices, cells, labelManager);\n\n    resolver.rowMatrix(rows);\n    resolver.columnMatrix(columns);\n\n    return {\n        rows: resolver.rowMatrix(),\n        columns: resolver.columnMatrix(),\n        values: resolver.valueMatrix(),\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority: {\n            row: rowPriority,\n            col: colPriority\n        },\n        selection: selectionObj,\n        dataModels: {\n            groupedModel,\n            parentModel: datamodel\n        }\n    };\n};\n","export const RESOLVER_PROPS = {\n    dependencies: {},\n    units: {},\n    datamodelTransform: {},\n    layerConfig: {},\n    matrixLayers: {},\n    colCells: {},\n    rowCells: {},\n    rowMatrix: {},\n    columnMatrix: {},\n    valueMatrix: {},\n    encoder: {},\n    valueParser: {},\n    data: {},\n    transformedData: {},\n    store: {}\n};\n","import { generateGetterSetters, STATE_NAMESPACES, getUniqueId } from 'muze-utils';\nimport {\n     initializeCacheMaps,\n     headerCreator,\n     extractUnitConfig,\n     setFacetsAndProjections\n} from './group-utils';\nimport {\n     ROW, COL, LEFT, RIGHT, COLOR, SIZE, SHAPE, DETAIL, CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS, INITIALIZED,\n     AXIS, UNIT, BEFORE_UPDATE, UPDATED, VALUE_MATRIX, FACET_HEADERS\n} from '../enums/constants';\nimport { createValueCells, computeMatrices } from './cell-creator';\nimport { RESOLVER_PROPS } from './resolver-props';\n\n/**\n * Resolves the matrices from configuration provided\n *\n * @export\n * @class MatrixResolver\n */\nexport default class MatrixResolver {\n\n    /**\n     * Creates an instance of MatrixResolver.\n     * @param {Object} dependencies needed to run the resolver\n     * @memberof MatrixResolver\n     */\n    constructor (dependencies) {\n        this._registry = {};\n        this._layerConfig = [];\n        this._matrixLayers = [];\n        this._dependencies = dependencies;\n        this._rowMatrix = [];\n        this._columnMatrix = [];\n        this._valueMatrix = [];\n        this._facets = { rowFacets: [], colFacets: [] };\n        this._projections = { rowProjections: [], colProjections: [] };\n        this._datamodelTransform = {};\n        this._units = [];\n        this._cacheMaps = {};\n        this._fireboltDeps = {};\n        this._axes = {\n            x: {},\n            y: {},\n            color: [],\n            size: [],\n            shape: [],\n            radius: [],\n            angle: [],\n            angle0: []\n        };\n        this._placeholderInfo = {};\n        generateGetterSetters(this, this.constructor.getterSetters());\n\n        this.cacheMaps(initializeCacheMaps());\n    }\n\n    static getterSetters () {\n        return RESOLVER_PROPS;\n    }\n    /**\n     * Set:  Registers placeholders, Get: return {Object} those placeholders\n     *\n     * @param {Object} placeholders cells that will construct the group\n     * @return {Object} Either current instance or the set of placeholders\n     * @memberof MatrixResolver\n     */\n    registry (...placeholders) {\n        if (placeholders.length) {\n            Object.entries(placeholders[0]).forEach((val) => {\n                this._registry[val[0]] = val[1];\n            });\n            return this;\n        }\n        return this._registry;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    cacheMaps (...maps) {\n        if (maps.length) {\n            [CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS].forEach((e) => {\n                this._cacheMaps[`${e}Map`] = maps[0][`${e}Map`] || this._cacheMaps[`${e}Map`];\n            });\n            return this;\n        }\n        return this._cacheMaps;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    axes (...axes) {\n        if (axes.length) {\n            this._axes = Object.assign({}, this._axes, axes[0]);\n            return this;\n        }\n        return this._axes;\n    }\n\n    facets (...facets) {\n        if (facets.length) {\n            Object.entries(facets[0]).forEach((e) => {\n                this._facets[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._facets;\n    }\n\n    projections (...projections) {\n        if (projections.length) {\n            Object.entries(projections[0]).forEach((e) => {\n                this._projections[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._projections;\n    }\n\n    optionalProjections (config, layerConfig, schema) {\n        const otherEncodings = {};\n        const optionalProjections = [];\n        const otherEncodingTypes = [SIZE, COLOR, SHAPE];\n\n        otherEncodingTypes.forEach((type) => {\n            if (config[type] && config[type].field) {\n                const enc = config[type];\n                otherEncodings[type] = enc.field;\n                optionalProjections.push(enc.field);\n            }\n        });\n\n        if (config[DETAIL]) {\n            optionalProjections.push(...config.detail);\n        }\n\n        const encoder = this.encoder();\n        optionalProjections.push(...encoder.getProjectionFields(layerConfig, schema));\n        this.projections({ optionalProjections });\n        return otherEncodings;\n    }\n\n    /**\n     * return the normalized set of rows and facets and projections\n     *\n     * @param {Object} rows parameters needed to set horizontal axis consisiting of rows\n     * @return {Object} facets, projections and normalized rows\n     * @memberof MatrixResolver\n     */\n    horizontalAxis (rows, encoder) {\n        if (rows) {\n            this._horizontalAxis = setFacetsAndProjections(this, { type: ROW, fields: rows }, encoder);\n            return this;\n        }\n        return this._horizontalAxis;\n    }\n\n    /**\n     * return the normalized set of columns and facets and projections\n     *\n     * @param {Object} columns parameters needed to set vertical axis consisiting of columns\n     * @return {Object} facets, projections and normalized columns\n     * @memberof MatrixResolver\n     */\n    verticalAxis (columns, encoder) {\n        if (columns) {\n            this._verticalAxis = setFacetsAndProjections(this, { type: COL, fields: columns }, encoder);\n            return this;\n        }\n        return this._verticalAxis;\n    }\n\n    /**\n     * Gets the class definition of a particular cell type(if the particular type has been extended, that particular\n     * definition is returned)\n     *\n     * @param {Object} cell cell whose class definition is to be retrieved\n     * @return {Object} cell definition\n     * @memberof MatrixResolver\n     */\n    getCellDef (cell) {\n        const registry = this.registry().cells;\n\n        Object.values(registry).forEach((e) => {\n            if (e.prototype instanceof cell) {\n                cell = e;\n            }\n        });\n        return cell;\n    }\n\n    /**\n     * return a visual cell creator along with its axis information to be injected to the datamodel creation\n     * function\n     *\n     * @param {Object} GeomCell Type of cell to be created\n     * @return {Object} Created cell\n     * @memberof MatrixResolver\n     */\n    valueCellsCreator (context) {\n        // reset matrix layers\n        this.matrixLayers([]);\n\n        return (datamodel, fieldInfo, facets) => createValueCells(context, datamodel, fieldInfo, facets);\n    }\n\n    /**\n     * Callback to be applied on each cell of a matrix of a particular type\n     *\n     * @param {string} matrixType type of matrix on which callback is to be applied\n     * @param {Function} callback function to be applied to each cell\n     * @memberof MatrixResolver\n     */\n    forEach (matrixType, callback) {\n        this[matrixType]().forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                callback(rIndex, cIndex, col);\n            });\n        });\n    }\n\n    getAllFields () {\n        const retObj = this.projections();\n\n        Object.entries(this.facets()).forEach((e) => {\n            retObj[e[0]] = e[1];\n        });\n        return retObj;\n    }\n\n    resetSimpleAxes () {\n        return this.axes({\n            x: new Set(),\n            y: new Set(),\n            radius: [],\n            angle: [],\n            angle0: [],\n            pie: []\n        });\n    }\n\n    setFireboltDependencies (prop, deps) {\n        Object.assign(this._fireboltDeps, {\n            [prop]: deps\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} componentRegistry\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createUnits (componentRegistry, config) {\n        const {\n            globalConfig,\n            alias,\n            coord\n        } = config;\n        const {\n            layerRegistry,\n            interactions\n        } = componentRegistry;\n        const {\n            smartlabel: smartLabel,\n            lifeCycleManager,\n            throwback\n        } = this.dependencies();\n        const fireboltDeps = this._fireboltDeps;\n\n        // Provide the source for the matrix\n        const units = [[]];\n        // Setting unit configuration\n        const unitConfig = extractUnitConfig(globalConfig || {});\n        const store = this.store();\n        store.lockModel();\n        const { VisualUnit } = this.registry();\n\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            let unit = el.source();\n            if (!unit) {\n                const namespace = `unit${i}-${j}-${getUniqueId()}`;\n\n                unit = VisualUnit.create({\n                    layerRegistry,\n                    interactions\n                }, {\n                    smartLabel,\n                    lifeCycleManager,\n                    throwback,\n                    fireboltDeps\n                });\n                unit.metaInf({\n                    rowIndex: i,\n                    colIndex: j,\n                    namespace\n                });\n                unit.store(store);\n                unit.coord(coord);\n                el.source(unit);\n            }\n            !units[i] && (units[i] = []);\n            units[i][j] = unit;\n            unit.parentAlias(alias)\n                .valueParser(this.valueParser())\n                .coord(coord);\n            el.config(unitConfig);\n        });\n        store.unlockModel();\n        lifeCycleManager.notify({ client: units, action: INITIALIZED, formalName: UNIT });\n        return this.units(units);\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    setRetinalAxisDomain (config, datamodel, encoders) {\n        const {\n            color,\n            shape,\n            size,\n            globalConfig\n        } = config;\n        const groupBy = globalConfig.autoGroupBy;\n        const {\n            rowFacets,\n            colFacets\n        } = this.getAllFields();\n        const encoding = {\n            color,\n            shape,\n            size\n        };\n        const facetFields = [...rowFacets.map(e => e.toString()), ...colFacets.map(e => e.toString())];\n        const retContext = {\n            domains: encoders.simpleEncoder.getRetinalFieldsDomain(datamodel, encoding, facetFields, groupBy),\n            axes: this.getRetinalAxes(),\n            encoding\n        };\n        encoders.retinalEncoder.setCommonDomain(retContext);\n        return this;\n    }\n\n    resetFacetsAndProjections () {\n        this._facets = {};\n        this._projections = {};\n        return this;\n    }\n\n    getRetinalAxes () {\n        const {\n            color,\n            shape,\n            size\n        } = this.axes();\n\n        return {\n            color: [...color],\n            shape: [...shape],\n            size: [...size]\n        };\n    }\n\n    getSimpleAxes (type) {\n        return this.axes()[`${type}`];\n    }\n\n    createRetinalAxes (fieldsConfig, config, encoders) {\n        const retinalAxes = encoders.retinalEncoder.createAxis({\n            fieldsConfig,\n            config,\n            axes: this.axes()\n        });\n\n        this.axes(retinalAxes);\n\n        this.updateVisualUnit(config);\n\n        return this;\n    }\n\n    createHeaders (placeholders, fieldNames, config) {\n        let bottomLeft = [];\n        let bottomRight = [];\n        const {\n            rows,\n            columns\n        } = placeholders;\n        const {\n            smartlabel: labelManager,\n            lifeCycleManager\n        } = this.dependencies();\n        const {\n            showHeaders,\n            classPrefix\n        } = config;\n        const { TextCell, BlankCell } = this.registry().cells;\n        const [leftRows, rightRows] = rows;\n        const [topCols, bottomCols] = columns;\n        const rowHeaders = fieldNames.rows;\n        const blankCellCreator = cell => new BlankCell().config({ show: cell.config().show });\n\n        // Headers and footers are created based on the rows. Thereafter, using the column information\n        // they are tabularized into the current structure\n        const headers = {\n            left: headerCreator(leftRows, rowHeaders[0], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager }),\n            right: headerCreator(rightRows, rowHeaders[1], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager })\n        };\n        const footers = {\n            left: leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : [],\n            right: rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []\n        };\n        const [topLeft, topRight] = [LEFT, RIGHT].map(type => topCols.map((col, i) => {\n            if (i === topCols.length - 1) {\n                return headers[type];\n            }\n            return footers[type];\n        }));\n\n        // Creating only bottom matrices if there is no information on the top\n        if (topCols.length === 0) {\n            [bottomLeft, bottomRight] = [LEFT, RIGHT].map(type => bottomCols.map((col, i) => {\n                if (i === 0) {\n                    return headers[type];\n                }\n                return footers[type];\n            }));\n        } else {\n            bottomLeft = bottomCols.map(() => (leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : []));\n            bottomRight = bottomCols.map(() => (rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []));\n        }\n\n        lifeCycleManager.notify({\n            client: [topLeft, topRight, bottomLeft, bottomRight],\n            action: INITIALIZED,\n            formalName: FACET_HEADERS\n        });\n\n        return { topLeft, topRight, bottomLeft, bottomRight };\n    }\n\n    updateVisualUnit (retinalConfig) {\n        const retinalAxes = this.getRetinalAxes();\n\n        const { lifeCycleManager } = this.dependencies();\n        lifeCycleManager.notify({ client: this.axes(), action: INITIALIZED, formalName: AXIS });\n        lifeCycleManager.notify({ client: this.units(), action: BEFORE_UPDATE, formalName: UNIT });\n\n        const units = [];\n        const matrixLayers = this.matrixLayers();\n\n        const props = [`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.domain`,\n            `${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`];\n        const store = this.store();\n        store.lockCommits(props);\n        store.lockModel();\n\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            el.axes(Object.assign(el.axes(), retinalAxes));\n            el.source() && el.source().retinalFields(retinalConfig);\n            el.layerDef(matrixLayers[i][j]);\n            el.updateModel();\n\n            units.push(el.source());\n        });\n\n        store.unlockModel()\n            .unlockCommits([props[0]])\n            .unlockCommits([props[1]]);\n        lifeCycleManager.notify({ client: units, action: UPDATED, formalName: UNIT });\n        return this;\n    }\n\n    getMatrices (datamodel, config, componentRegistry, encoders) {\n        const context = {\n            datamodel,\n            componentRegistry,\n            encoders,\n            resolver: this\n        };\n\n        this._placeholderInfo = computeMatrices(context, config);\n\n        return this._placeholderInfo;\n    }\n\n    clear () {\n        const cacheMaps = this._cacheMaps;\n\n        for (const key in cacheMaps) {\n            cacheMaps[key].clear();\n        }\n    }\n\n}\n","import { MeasureSubtype, DimensionSubtype, FieldType } from 'muze-utils';\n\nimport { ScaleType } from '@chartshq/muze-axis';\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    [FieldType.DIMENSION]: ScaleType.BAND,\n    [DimensionSubtype.CATEGORICAL]: ScaleType.BAND,\n    [DimensionSubtype.TEMPORAL]: ScaleType.TIME,\n    [FieldType.MEASURE]: ScaleType.LINEAR,\n    [MeasureSubtype.CONTINUOUS]: ScaleType.LINEAR,\n    [DimensionSubtype.BINNED]: ScaleType.BAND\n};\n","import { mergeRecursive, getObjProp } from 'muze-utils';\nimport { AxisOrientation } from '@chartshq/muze-axis';\nimport { ENCODING } from '@chartshq/visual-layer';\nimport { scaleMaps } from '../enums/scale-maps';\nimport { getAxisType, getAxisKey } from '../group-helper';\nimport { dataTypeScaleMap } from '../data-type-scale-map';\nimport { CATEGORICAL, TEMPORAL, BAR, LINE, POINT, BOTH, Y, COLOR, SHAPE, SIZE, ANGLE0 } from '../enums/constants';\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst getAxisConfig = (axisInfo, field, axesCreators, indices, facetFields) => {\n    let axisOrientation;\n    const { index, axisIndex, axisType } = axisInfo;\n    const { config, position } = axesCreators;\n    const { rowIndex, columnIndex } = indices;\n    const rawUserAxisConfig = config.axes ? (config.axes[axisType] || {}) : {};\n\n    // Change config object to a function if not already one\n    const userAxisConfigFn = typeof rawUserAxisConfig !== 'function' ?\n    () => rawUserAxisConfig : rawUserAxisConfig;\n    const userAxisConfig = userAxisConfigFn(rowIndex, columnIndex, {\n        axisFields: field.getMembers(),\n        facetFields\n    });\n\n    // If current config does not specifes config for an axis, retain old config\n    if (!userAxisConfig) {\n        return {};\n    }\n\n    const {\n        LEFT,\n        RIGHT,\n        TOP,\n        BOTTOM\n    } = AxisOrientation;\n    const allOrientations = axisType === Y ? [LEFT, RIGHT] : [TOP, BOTTOM];\n\n    if (position === BOTH) {\n        axisOrientation = allOrientations[axisIndex];\n    } else {\n        axisOrientation = position;\n    }\n    const axisConfig = {\n        id: `${axisType}-${index}-${axisIndex}`,\n        name: field.displayName(),\n        field: field.toString(),\n        numberFormat: field.numberFormat(),\n        orientation: axisOrientation,\n        showAxisName: true,\n        show: true,\n        type: dataTypeScaleMap[field.subtype()]\n    };\n    userAxisConfig.tickValues = field.format(userAxisConfig.tickValues);\n    userAxisConfig.domain = field.format(userAxisConfig.domain);\n\n    return mergeRecursive(axisConfig, userAxisConfig);\n};\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst createSimpleAxis = (axisConfig, field, axesCreators) => {\n    const { labelManager } = axesCreators;\n    const Cls = scaleMaps[dataTypeScaleMap[field.subtype()]];\n    const simpleAxis = new Cls(axisConfig, { labelManager });\n    return simpleAxis;\n};\n\nexport const getAdjustedDomain = (max, min) => {\n    const y1ratio = max[0] / (max[0] - min[0]);\n    const y2ratio = max[1] / (max[1] - min[1]);\n\n    // adjust min/max values for positive negative values zero line etc\n    let allSameSign = false;\n\n    // if all numbers are positive set floor to zero\n    if (min[0] > 0 && min[1] > 0 && min[1] > 0 && max[1] > 0) {\n        allSameSign = true;\n        min[0] = 0;\n        min[1] = 0;\n    }\n\n    // if all numbers are negative set ceiling to zero\n    if (min[0] < 0 && min[1] < 0 && min[1] < 0 && max[1] < 0) {\n        allSameSign = true;\n        max[0] = 0;\n        max[1] = 0;\n    }\n\n    // align zero line if necessary\n    if (!allSameSign && y1ratio !== y2ratio) {\n        if (y1ratio < y2ratio) {\n                    // adjust min[1]\n            min[1] = min[0] / max[0] * max[1];\n        } else {\n                    // adjust min[0]\n            min[0] = min[1] / max[1] * max[0];\n        }\n    }\n    return [\n        [min[0], max[0]],\n        [min[1], max[1]]\n    ];\n};\n\n/**\n *\n *\n * @param {*} axisType\n * @param {*} fieldInfo\n * @param {*} axesCreators\n * @param {*} groupAxes\n *\n */\nexport const generateAxisFromMap = (axisType, fieldInfo, axesCreators, axesInfo, indices, facetFields) => {\n    let axisKey;\n    const { groupAxes, valueParser } = axesInfo;\n    const currentAxes = [];\n    const { fields, index } = fieldInfo;\n    const { cacheMaps } = axesCreators;\n    const map = cacheMaps[`${axisType}AxesMap`];\n\n    const commonAxisKey = getAxisKey(axisType, index);\n    fields.forEach((field, axisIndex) => {\n        axisKey = getAxisKey(axisType, index, axisIndex, dataTypeScaleMap[field.subtype()]);\n        const axisConfig = getAxisConfig({ index, axisIndex, axisType }, field, axesCreators, indices, facetFields);\n\n        let axis;\n        if (!map.has(axisKey)) {\n            axis = createSimpleAxis(axisConfig, field, axesCreators);\n        } else {\n            axis = map.get(axisKey);\n            axis._rotationLock = false;\n            axis.config(axisConfig);\n        }\n        axis.valueParser(valueParser);\n        currentAxes.push(axis);\n        map.set(axisKey, axis);\n    });\n\n    if (currentAxes.length) {\n        map.set(commonAxisKey, currentAxes);\n        groupAxes.add(commonAxisKey);\n    }\n\n    return currentAxes;\n};\n\nexport const sanitizeIndividualLayerConfig = (encodingConfigs, def) => {\n    [COLOR, SHAPE, SIZE].forEach((axis) => {\n        if (encodingConfigs[axis] && encodingConfigs[axis].field) {\n            def.forEach((conf) => {\n                conf.encoding = conf.encoding || {};\n                !conf.encoding[axis] && (conf.encoding[axis] = {});\n                conf.encoding[axis].field = encodingConfigs[axis].field;\n            });\n        }\n    });\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n    const xAxes = [];\n    const yAxes = [];\n\n    xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes.push(xAxis);\n    });\n    yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes.push(yAxis);\n    });\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n * return a default mark based on predefined set of rules of type and subtype of the fields\n *\n * @param {string} colFieldType dimension/measure - temporal/ordinal/nominal\n * @param {string} rowFieldType dimension/measure - temporal/ordinal/nominal\n * @return {Object} return mark type\n */\nexport const getDefaultMark = (colFieldType, rowFieldType) => {\n    let mark;\n\n    if (colFieldType === CATEGORICAL || rowFieldType === CATEGORICAL) {\n        mark = BAR;\n    } else if (colFieldType === TEMPORAL || rowFieldType === TEMPORAL) {\n        mark = LINE;\n    } else {\n        mark = POINT;\n    }\n\n    return mark;\n};\n\n/**\n *\n *\n * @param {*} axesCreators\n * @param {*} [fieldInfo=[]]\n *\n */\nexport const createRetinalAxis = (axesCreators, fieldProps = {}) => {\n    const { axisType, fieldsConfig } = axesCreators;\n    const field = fieldProps.field;\n    const axis = [];\n    const Cls = scaleMaps[axisType];\n\n    fieldProps.type = fieldProps.type ? fieldProps.type : getAxisType(fieldsConfig, field || null);\n    axis.push(new Cls(fieldProps));\n    return axis;\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} val\n *\n */\nexport const getIndex = (arr, val) => {\n    let i = 0;\n    let arrIndex = -1;\n\n    while (arrIndex === -1 && i < arr.length) {\n        if (arr[i].toString() === val.toString()) {\n            arrIndex = i;\n        }\n        i++;\n    }\n    return arrIndex;\n};\n\n/**\n *\n *\n * @param {*} colFields\n * @param {*} rowFields\n * @param {*} userLayerConfig\n *\n * @memberof CartesianEncoder\n */\nexport const getLayerConfFromFields = (colFields, rowFields, userLayerConfig) => userLayerConfig.filter((conf) => {\n    const userConf = conf instanceof Array ? conf : [conf];\n    const encodingArr = [].concat(...userConf.map(d => d.encoding).filter(d => d !== undefined));\n\n    if (!encodingArr.length) {\n        return true;\n    }\n\n    const xFields = [].concat(...encodingArr.map(d => [d.x && d.x.field, d.x0 && d.x0.field]))\n                .filter(d => d !== undefined && d !== null);\n    const yFields = [].concat(...encodingArr.map(d => [d.y && d.y.field, d.y0 && d.y0.field]))\n                .filter(d => d !== undefined && d !== null);\n\n    if (!xFields.length && !yFields.length) {\n        return true;\n    }\n\n    const colFieldExist = xFields.length ? xFields.every(d => colFields.indexOf(d) !== -1) : false;\n    const rowFieldExist = yFields.length ? yFields.every(d => rowFields.indexOf(d) !== -1) : false;\n    if (xFields.length && yFields.length) {\n        return colFieldExist && rowFieldExist;\n    }\n    return colFieldExist || rowFieldExist;\n});\n\nexport const resolveAxisConfig = (context, fieldInf, axisInfo) => {\n    const { rowIndex, columnIndex, axesObj } = axisInfo;\n    const { config, facetFields, resolver } = context;\n    const resolverAxes = resolver.axes();\n    const { RADIUS, ANGLE } = ENCODING;\n    [RADIUS, ANGLE, ANGLE0].forEach((enc) => {\n        const axesArr = resolverAxes[enc];\n        if (!axesArr[rowIndex]) {\n            axesArr[rowIndex] = [];\n        }\n        axesArr[rowIndex][columnIndex] = axesObj[enc];\n        const axisConfig = getObjProp(config.axes, enc) || {};\n\n        axesObj[enc].forEach((axis, i) => {\n            let userConfig = axisConfig;\n            if (axisConfig instanceof Function) {\n                userConfig = axisConfig(rowIndex, columnIndex, {\n                    axisFields: [fieldInf[enc][i]],\n                    facetFields\n                });\n            }\n            axis.config(userConfig);\n        });\n    });\n};\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    mergeRecursive,\n    STATE_NAMESPACES,\n    unionDomain,\n    COORD_TYPES,\n    toArray,\n    sortCategoricalField\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport {\n    generateAxisFromMap,\n    getDefaultMark,\n    getIndex,\n    getLayerConfFromFields,\n    getAdjustedDomain,\n    sanitizeIndividualLayerConfig\n} from './encoder-helper';\nimport { retriveDomainFromData } from '../group-helper';\n\nimport { ROW, COLUMN, COL, LEFT, TOP, MEASURE, BOTH, X, Y } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\nconst CARTESIAN = COORD_TYPES.CARTESIAN;\n\n/**\n *\n *\n * @export\n * @class CartesianEncoder\n * @extends {VisualEncoder}\n */\nexport default class CartesianEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     *\n     * @memberof CartesianEncoder\n     */\n    static type () {\n        return CARTESIAN;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof CartesianEncoder\n     */\n    createAxis (axesCreators, fieldInfo, context) {\n        const geomCellAxes = {};\n        const {\n            axes\n        } = axesCreators;\n        const {\n            projections,\n            indices\n        } = fieldInfo;\n        const {\n            rowFields,\n            columnFields\n        } = projections;\n        const {\n             rowIndex,\n             columnIndex\n        } = indices;\n        const axisFields = [{\n            fields: rowFields,\n            index: rowIndex\n        }, {\n            fields: columnFields,\n            index: columnIndex\n        }];\n        const { resolver, facetFields, geomCell } = context;\n        const xAxes = axes.x || [];\n        const yAxes = axes.y || [];\n\n        [rowFields, columnFields].forEach((fields, i) => {\n            const type = i === 0 ? ROW : COLUMN;\n            const axis = i === 0 ? Y : X;\n\n            if (fields.length > 1) {\n                axesCreators.position = BOTH;\n            } else {\n                axesCreators.position = this.axisFrom()[type];\n            }\n            geomCellAxes[axis] = generateAxisFromMap(axis, axisFields[i], axesCreators, {\n                groupAxes: axis === X ? xAxes : yAxes,\n                valueParser: resolver.valueParser()\n            }, indices, facetFields);\n        });\n        geomCell.axes(geomCellAxes);\n        return geomCellAxes;\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const resolver = context.resolver();\n        const units = resolver.units();\n        const domains = {\n            0: {},\n            1: {}\n        };\n        const config = context.config();\n        const fieldsObj = {\n            0: {},\n            1: {}\n        };\n\n        for (let rIdx = 0, len = units.length; rIdx < len; rIdx++) {\n            const unitsArr = units[rIdx];\n            for (let cIdx = 0, len2 = unitsArr.length; cIdx < len2; cIdx++) {\n                const unit = unitsArr[cIdx];\n                const axisFields = unit.fields();\n                const encodingDomains = unit.dataDomain();\n                ['x', 'y'].forEach((axisType, axisTypeIndex) => {\n                    const fieldArr = axisFields[axisType];\n                    fieldArr.forEach((field, axisIndex) => {\n                        const key = !axisTypeIndex ? `0${cIdx}${axisIndex}` : `${rIdx}0${axisIndex}`;\n                        const dom = encodingDomains[axisType];\n                        const typeOfField = field.subtype();\n                        fieldsObj[axisTypeIndex][key] = field;\n\n                        if (dom && Object.keys(dom).length !== 0) {\n                            domains[axisTypeIndex][key] = unionDomain([(domains[axisTypeIndex] &&\n                                domains[axisTypeIndex][key]) || [], dom[`${field}`]], typeOfField);\n                        }\n                    });\n                });\n            }\n        }\n\n        const { x: xAxes, y: yAxes } = resolver.axes();\n        store.lockModel();\n        [xAxes, yAxes].forEach((axesArr, axisType) => {\n            axesArr.forEach((axes, idx) => {\n                let key;\n                let domain = [];\n                let adjustedDomain = [];\n                const min = [];\n                const max = [];\n                const typeOfAxis = axes[0].constructor.type();\n\n                if (axes.length > 1 && typeOfAxis === ScaleType.LINEAR && axes[0].config().alignZeroLine) {\n                    axes.forEach((axis, i) => {\n                        key = !axisType ? `0${idx}${i}` : `${idx}0${i}`;\n                        domain = domains[axisType][key];\n                        min[i] = domain[0];\n                        max[i] = domain[1];\n                    });\n                    adjustedDomain = getAdjustedDomain(max, min);\n                } else if (typeOfAxis === ScaleType.BAND) {\n                    /* Sort categorical fields to ensure consistency across all rows\n                    only if sorted by user */\n                    key = !axisType ? `0${idx}0` : `${idx}00`;\n                    const currentFieldName = fieldsObj[axisType][key].oneVar();\n                    const sortingOrder = config.sort && config.sort[currentFieldName];\n\n                    if (sortingOrder) {\n                        domains[axisType][key].sort((a, b) => sortCategoricalField(sortingOrder, a, b));\n                    }\n                }\n\n                axes.forEach((axis, index) => {\n                    key = !axisType ? `0${idx}${index}` : `${idx}0${index}`;\n                    domain = adjustedDomain[index] || domains[axisType][key];\n\n                    domain && axis.domain(domain);\n                    const type = !axisType ? 'x' : 'y';\n                    store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type}`, domain, `${idx}${index}`);\n                });\n            });\n        });\n        store.unlockModel();\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields, type) {\n        let facets = [];\n        let projections = [];\n        let counter = 0;\n        const primaryFacets = [];\n        const secondaryFacets = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n        const axisFrom = this.axisFrom();\n\n        for (let i = 0; i < primaryLen; i++) {\n            let projArr = [primaryFields[i]];\n            const primaryField = primaryFields[i];\n\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter];\n                if (secondaryField && secondaryField.type() === MEASURE) {\n                    counter++;\n                    projArr = [primaryField, secondaryField];\n                }\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n                primaryFacets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                    secondaryFacets.push(secondaryField);\n                }\n            }\n        }\n        if ((primaryFacets.length || secondaryFacets.length) && !projections.length) {\n            type = type === COL ? COLUMN : type;\n            if ((axisFrom[type] === LEFT || axisFrom[type] === TOP) && primaryFacets.length) {\n                const axisFromIndex = primaryFacets.length - 1;\n                const facet = primaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(secondaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    secondaryFacets.splice(existIndex, 1);\n                }\n                primaryFacets.splice(axisFromIndex, 1);\n            } else {\n                const axisFromIndex = 0;\n                const facet = secondaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(primaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    primaryFacets.splice(existIndex, 1);\n                }\n                secondaryFacets.splice(axisFromIndex, 1);\n            }\n        }\n\n        facets = [...primaryFacets, ...secondaryFacets];\n        facets = facets.filter((el, index, self) => index === self.findIndex(t => (t.toString() === el.toString())));\n        return {\n            facets,\n            projections\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof CartesianEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        return super.fieldSanitizer(datamodel, config);\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     *\n     * @memberof CartesianEncoder\n     */\n    getRetinalFieldsDomain (dataModels, encoding) {\n        const groupedModel = dataModels.groupedModel;\n        const domains = {};\n        for (const key in encoding) {\n            if ({}.hasOwnProperty.call(encoding, key)) {\n                const encodingObj = encoding[key];\n                const field = encodingObj.field;\n                if (!encodingObj.domain && field) {\n                    const domain = retriveDomainFromData(groupedModel, field);\n                    domains[field] = domain;\n                }\n            }\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     * @memberof CartesianEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n        // let currentLayerIndex = 0;\n        layerArray.length && layerArray.forEach((layer, i) => {\n            const def = layerFactory.sanitizeLayerConfig(layer);\n            def.order = i;\n            serializedLayers.push(def);\n        });\n        return serializedLayers;\n    }\n\n    sanitizeLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n        userLayerConfig.forEach((config) => {\n            const def = toArray(config.def);\n            sanitizeIndividualLayerConfig(encodingConfigs, def);\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof CartesianEncoder\n     */\n    getLayerConfig (fields, userLayerConfig, retinalConfig) {\n        const layerConfig = [];\n        const {\n            columnFields,\n            rowFields\n        } = fields;\n\n        // let currentLayerIndex = 0;\n        columnFields.forEach((colField) => {\n            const colFieldName = colField.toString();\n            rowFields.forEach((rowField) => {\n                let configs = [];\n                const rowFieldName = rowField.toString();\n                const encoding = {\n                    x: {\n                        field: colFieldName\n                    },\n                    y: {\n                        field: rowFieldName\n                    }\n                };\n                const rowFieldType = rowField.subtype();\n                const colFieldType = colField.subtype();\n                const mark = getDefaultMark(colFieldType, rowFieldType);\n\n                const defConfigs = [{\n                    mark,\n                    def: {\n                        mark,\n                        encoding\n                    }\n                }];\n\n                const layerConfigs = getLayerConfFromFields(colField.getMembers(),\n                    rowField.getMembers(), userLayerConfig || []);\n                if (layerConfigs.length) {\n                    configs = layerConfigs.map((layerConf) => {\n                        const mergedLayerConf = mergeRecursive(mergeRecursive({}, defConfigs[0].def), layerConf);\n                        const serializedLayerConfig = layerFactory.getSerializedConf(mergedLayerConf.mark,\n                            mergedLayerConf);\n                        return {\n                            mark: mergedLayerConf.mark,\n                            order: mergedLayerConf.order,\n                            def: serializedLayerConfig\n                        };\n                    });\n                } else {\n                    configs = defConfigs;\n                }\n\n                layerConfig.push(...configs);\n            });\n        });\n        return this.sanitizeLayerConfig(retinalConfig, layerConfig);\n    }\n}\n","import { AngleAxis, RadiusAxis } from '@chartshq/muze-axis';\nimport { layerFactory, ENCODING } from '@chartshq/visual-layer';\nimport {\n    mergeRecursive,\n    STATE_NAMESPACES,\n    GROUP_BY_FUNCTIONS,\n    COORD_TYPES,\n    toArray,\n    getObjProp,\n    defaultValue\n} from 'muze-utils';\nimport VisualEncoder from './visual-encoder';\nimport { SIZE, MEASURE, ARC, COLOR } from '../enums/constants';\nimport { sanitizeIndividualLayerConfig, resolveAxisConfig } from './encoder-helper';\nimport { SimpleVariable } from '../variable';\n\nconst POLAR = COORD_TYPES.POLAR;\nconst { RADIUS, ANGLE, ANGLE0 } = ENCODING;\n\nconst axesCls = {\n    [RADIUS]: RadiusAxis,\n    [ANGLE]: AngleAxis,\n    [ANGLE0]: AngleAxis\n};\n\nconst getSizeMultiplier = (sizeVal, sizeAxis) => {\n    const sizeAxisDomain = sizeAxis.domain();\n    const sizeMultiplier = sizeAxis.getSize(sizeVal) / (sizeAxisDomain ? sizeAxis.range()[1] : sizeAxis.config().value);\n    return sizeMultiplier;\n};\n\nconst setRadiusFactor = (context) => {\n    const data = context.data();\n    const sizeField = context.retinalFields().size.field;\n    const { radius, size } = context.axes();\n\n    if (sizeField && radius && radius.length) {\n        const sizeFieldIndex = data.getFieldsConfig()[sizeField].index;\n        const sizeVal = data.getData().data.reduce((acc, val) => acc + val[sizeFieldIndex], 1);\n        const sizeMultiplier = getSizeMultiplier(sizeVal, size[0]);\n        radius.forEach(axis => axis.setRadiusFactor(sizeMultiplier));\n    }\n};\n\n/**\n *\n *\n * @export\n * @class PolarEncoder\n * @extends {VisualEncoder}\n */\nexport default class PolarEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof PolarEncoder\n     */\n    createAxis (axesCreators, fieldInfo, context) {\n        const {\n            axes\n        } = axesCreators;\n        const geomCellAxes = axes;\n        const {\n            indices\n        } = fieldInfo;\n        const {\n            rowIndex,\n            columnIndex\n        } = indices;\n        // Dummy axes for polar, to create blank cells\n        const pieAxes = geomCellAxes.pie || [];\n\n        pieAxes[rowIndex] = pieAxes[rowIndex] || [];\n        pieAxes[rowIndex][columnIndex] = [];\n\n        const axesObj = {};\n        const { geomCell, resolver } = context;\n        const layers = resolver.matrixLayers();\n        const resolverAxes = resolver.axes();\n        const cellLayers = layers[rowIndex][columnIndex];\n        const fields = {\n            radius: {},\n            angle: {},\n            angle0: {}\n        };\n\n        cellLayers.forEach((layerConf) => {\n            const def = layerConf.def;\n            [ANGLE, ANGLE0, RADIUS].forEach((enc) => {\n                const field = getObjProp(def.encoding, enc, 'field');\n                field && (fields[enc][field] = 0);\n            });\n        });\n        const fieldInf = {};\n        const varInstances = {};\n\n        for (const encType in fields) {\n            fieldInf[encType] = Object.keys(fields[encType]);\n            axesObj[encType] = [];\n            varInstances[encType] = [];\n            fieldInf[encType].forEach((field, i) => {\n                varInstances[encType][i] = new SimpleVariable(field);\n                axesObj[encType][i] = new axesCls[encType]();\n            });\n            axesObj[encType][axesObj[encType].length] = new axesCls[encType]();\n        }\n        resolveAxisConfig(context, fieldInf, {\n            axesObj,\n            rowIndex,\n            columnIndex\n        });\n        geomCell.axes(axesObj)\n            .fields(Object.assign({}, varInstances, geomCell.fields()));\n        resolverAxes.pie = pieAxes;\n        return geomCellAxes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields) {\n        let counter = 0;\n        const facets = [];\n        const projections = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n\n        for (let i = 0; i < primaryLen; i++) {\n            const primaryField = primaryFields[i];\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter++];\n                const projArr = secondaryField ? [primaryField, secondaryField] : [primaryField];\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                }\n            }\n        }\n        return {\n            facets,\n            projections\n        };\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        store.lockModel();\n        const domainProps = {\n            radius: [],\n            angle: [],\n            angle0: []\n        };\n        const axes = context.resolver().axes();\n        context.matrixInstance().value.each((cell, rIdx, cIdx) => {\n            const unit = cell.valueOf();\n            const unitDomains = unit.dataDomain();\n            const fields = unit.fields();\n            setRadiusFactor(unit);\n            [RADIUS, ANGLE, ANGLE0].forEach((encType) => {\n                const encodingFields = fields[encType];\n                const domains = unitDomains[encType] || {};\n                encodingFields.forEach((field, i) => {\n                    !domainProps[encType][rIdx] && (domainProps[encType][rIdx] = []);\n                    !domainProps[encType][rIdx][cIdx] && (domainProps[encType][rIdx][cIdx] = []);\n                    domainProps[encType][rIdx][cIdx][i] = domains[`${field}`] || [];\n                });\n            });\n        });\n\n        for (const key in domainProps) {\n            const specificAxes = axes[key];\n            specificAxes.forEach((axesArr, rIdx) => {\n                axesArr.forEach((axisArr, cIdx) => {\n                    axisArr.forEach((axis, i) => {\n                        axis.domain(defaultValue(getObjProp(domainProps[key], rIdx, cIdx, i), []));\n\n                        store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${key}`, domainProps[key],\n                            `${rIdx}-${cIdx}`);\n                    });\n                });\n            });\n        }\n        store.unlockModel();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    setCommonDomain () {\n        // No domain to be set\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    static type () {\n        return POLAR;\n    }\n\n    layers (...layers) {\n        if (layers.length) {\n            this._layers = layers[0];\n            return this;\n        }\n        return this._layers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof PolarEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        let sanitizedRows = [[], []];\n        let sanitizedColumns = [[], []];\n        const fields = super.fieldSanitizer(datamodel, config);\n        const {\n            layers\n        } = config;\n        const {\n            rows,\n            columns\n        } = fields;\n        const layer = layers[0];\n        const encoding = layer.encoding;\n        const radius = encoding && encoding.radius ? encoding.radius.field : null;\n        const angle = encoding && encoding.angle ? encoding.angle.field : null;\n        const sanitizedFields = [sanitizedRows, sanitizedColumns];\n\n        [rows, columns].forEach((fieldType, typeIndex) => {\n            fieldType.forEach((fieldSet, i) => fieldSet.forEach((field) => {\n                if (field.toString() !== radius && field.toString() !== angle && field.type() !== MEASURE) {\n                    sanitizedFields[typeIndex][i].push(field);\n                }\n            }));\n        });\n        sanitizedColumns = [...new Set(sanitizedColumns)];\n        sanitizedRows = [...new Set(sanitizedRows)];\n        this.fieldInfo({ rows: sanitizedRows, columns: sanitizedColumns });\n        return this.fieldInfo();\n    }\n\n    getRetinalFieldsDomain (dataModels, encoding, facetFields, groupBy) {\n        let sizeField;\n        let colorField;\n        const fields = [];\n        const layers = this.layers();\n        const dataModel = dataModels.groupedModel;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const domains = {};\n        if (layers && layers[0]) {\n            const layer = layers[0];\n            const layerEncoding = layer.def.encoding || {};\n\n            [RADIUS, ANGLE, SIZE, COLOR].forEach((encType) => {\n                const field = layerEncoding[encType] ? layerEncoding[encType].field : '';\n                const measureField = fieldsConfig[field] && fieldsConfig[field].def.type === MEASURE;\n                if (encType === SIZE && measureField) {\n                    sizeField = field;\n                }\n                if (encType === COLOR) {\n                    colorField = field;\n                }\n                fieldsConfig[field] && !measureField && fields.push(field);\n            });\n        }\n\n        if (sizeField) {\n            domains[sizeField] = dataModel.groupBy(facetFields, {\n                [sizeField]: GROUP_BY_FUNCTIONS.SUM\n            }).getFieldspace().fieldsObj()[sizeField].domain();\n        }\n\n        if (colorField) {\n            const dm = dataModel.groupBy([...facetFields, ...fields], groupBy.measures);\n            domains[colorField] = dm.getFieldspace().fieldsObj()[colorField].domain();\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof PolarEncoder\n     */\n    getLayerConfig (fields, userLayerConfig, retinalConfig) {\n        let layerConfig = [];\n        const {\n                columnFields,\n                rowFields\n            } = fields;\n        const allFields = [...columnFields, ...rowFields];\n\n        allFields.forEach(() => {\n            const encoding = {};\n            let config = {\n                mark: ARC,\n                def: {\n                    encoding\n                }\n            };\n            if (userLayerConfig && userLayerConfig.length > 0) {\n                config = mergeRecursive(config, userLayerConfig[0]);\n            }\n            layerConfig.push(config);\n        });\n        if (layerConfig.length === 0) {\n            layerConfig = userLayerConfig;\n        }\n        const sanitizedConfig = this.sanitizeLayerConfig(retinalConfig, layerConfig);\n        this.layers(sanitizedConfig);\n        return sanitizedConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     *\n     * @memberof PolarEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n\n        layerArray.length && layerArray.forEach((layer) => {\n            const def = layerFactory.getSerializedConf(layer.mark, layer);\n            serializedLayers.push({\n                mark: layer.mark,\n                def\n            });\n        });\n        return serializedLayers;\n    }\n\n    sanitizeLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n\n        userLayerConfig.forEach((config) => {\n            const def = toArray(config.def);\n            sanitizeIndividualLayerConfig(encodingConfigs, def);\n            def.forEach((conf) => {\n                const encoding = conf.encoding || (conf.encoding = {});\n                !encoding.angle && (encoding.angle = {});\n                const angleField = getObjProp(encoding.angle, 'field');\n                const angle0Field = getObjProp(encoding.angle0, 'field');\n\n                if (!angleField) {\n                    Object.assign(encoding.angle, {\n                        field: encodingConfigs.color && encodingConfigs.color.field\n                    });\n                }\n                if (!angle0Field) {\n                    !encoding.angle0 && (encoding.angle0 = {});\n                    Object.assign(encoding.angle0, {\n                        field: encoding.angle.field\n                    });\n                }\n            });\n\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n}\n","import { createRetinalAxis } from './encoder-helper';\nimport { COLOR, SHAPE, SIZE } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class RetinalEncoder\n * @extends {VisualEncoder}\n */\nexport default class RetinalEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     *\n     * @memberof RetinalEncoder\n     */\n    createAxis (axesCreators) {\n        const { fieldsConfig, config } = axesCreators;\n        const newAxes = {};\n\n        [COLOR, SHAPE, SIZE].forEach((axisType) => {\n            newAxes[`${axisType}`] = createRetinalAxis({ axisType, fieldsConfig }, config[axisType]);\n        });\n        return newAxes;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof RetinalEncoder\n     */\n    static type () {\n        return 'retinal';\n    }\n\n    /**\n     *\n     *\n     * @param {*} context\n     *\n     * @memberof RetinalEncoder\n     */\n    setCommonDomain (context) {\n        const { domains, axes, encoding } = context;\n\n        Object.entries(encoding).forEach((enc) => {\n            if (enc[1] && enc[1].field) {\n                const encType = enc[0];\n                const field = enc[1].field;\n\n                if (field) {\n                    axes[encType].forEach((axis) => {\n                        const domain = domains[field];\n                        !enc[1].domain && axis.updateDomain(domain);\n                    });\n                }\n            }\n        });\n        return axes;\n    }\n}\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Artboard.\n * Artboard merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module\n */\n\nexport default {\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * Interfaces for VisualGroup. Any new VisualGroup has to implement this class.\n * @class  SimpleGroup\n */\nclass SimpleGroup {\n\n    /**\n     * This method is used to set or get the DataModel instance.\n     *\n     * @param {DataModel | undefined} dataModel Instance of datamodel.\n\n     * @memberof  SimpleGroup\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to set or get the group specific configuration\n     * properties\n     *\n     * @param {Object | undefined} configObj The input configuration.\n     *                                or instance of visual group.\n     * @memberof  SimpleGroup\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to return a serialized representation of the\n     * instance's properties.\n     *\n     * @memberof  SimpleGroup\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to get or set the measurement object which houses\n     * layout properties like width and height.\n     *\n     * @param {Object  | undefined} mObj The measurement properties.\n     * @memberof  SimpleGroup\n     */\n    measurement () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n\nexport default SimpleGroup;\n","/**\n * This is a wrapper class over the matrix of cells which gets created in visual group. Visual Group creates left,\n * right, bottom and top and center matrices and wraps them using this class.\n *\n * @public\n * @class ValueMatrix\n */\nclass ValueMatrix {\n\n    /**\n     * Creates an instance of ValueMatrix.\n     *\n     * @param {Array} matrixArr Matrix array.\n     */\n    constructor (matrixArr) {\n        const instancesById = {};\n\n        this.matrix(matrixArr || []);\n        this.filter(() => true);\n\n        this.each((el, rIdx, cIdx) => {\n            const cellValue = el.valueOf();\n            if (cellValue && cellValue.id) {\n                const id = cellValue.id();\n                instancesById[id] = {\n                    instance: cellValue,\n                    rowIndex: rIdx,\n                    colIndex: cIdx\n                };\n            }\n        });\n\n        this.instancesById(instancesById);\n    }\n\n    instancesById (...id) {\n        if (id.length) {\n            this._instancesById = id[0];\n            return this;\n        }\n        return this._instancesById;\n    }\n\n    /**\n     * Returns the array of matrices contained in this instance.\n     *\n     * @public\n     * @return {Array} Array of matrices.\n     */\n    matrix (...matrix) {\n        if (matrix.length) {\n            this._matrix = matrix[0];\n            return this;\n        }\n        return this._matrix;\n    }\n\n    /**\n     * Sets a filter criteria. This filter criteria gets applied when each function is called.\n     *\n     * @public\n     * @param {Function} fn Filter function.\n     *\n     * @return {ValueMatrix} Instance of value matrix.\n     */\n    filter (...fn) {\n        if (fn.length) {\n            this._filterFn = fn[0];\n            return this;\n        }\n        return this._filterFn;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    width () {\n        let rowWidth = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowWidth = 0;\n            row.forEach((cell) => {\n                currentRowWidth += cell.getLogicalSpace().width;\n            });\n            rowWidth = Math.max(rowWidth, currentRowWidth);\n        });\n        return rowWidth;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    height () {\n        let rowHeight = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowHeight = 0;\n            row.forEach((cell) => {\n                currentRowHeight = Math.max(currentRowHeight, cell.getLogicalSpace().height);\n            });\n            rowHeight += currentRowHeight;\n        });\n        return rowHeight;\n    }\n\n    /**\n     * Iterates through the two dimensional matrix array and calls the given callback function with the cell instance,\n     * row index, column index and the matrix array.\n     *\n     * @param {Function} fn Callback function which will get called for every cell.\n     * @return {ValueMatrix} Instance of the value matrix.\n     */\n    each (fn) {\n        const matrix = this.matrix();\n        const filterFn = this.filter();\n\n        matrix.forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                if (filterFn(col)) {\n                    fn(col, rIndex, cIndex, matrix);\n                }\n            });\n        });\n        return this;\n    }\n\n    findPlaceHolderById (id) {\n        return this.instancesById()[id];\n    }\n\n    clear () {\n        this.each(cell => cell.remove());\n        this.matrix([]);\n    }\n}\n\nexport default ValueMatrix;\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { BaseLayer } from '@chartshq/visual-layer';\nimport { getBorders } from '../group-helper';\nimport { RetinalEncoder } from '../encoder';\nimport { registerDomainChangeListener, unsubscribeChangeListeners } from './change-listener';\nimport ValueMatrix from './value-matrix';\n\nexport const createUnitState = (context) => {\n    const [globalState, localState] = VisualUnit.getState();\n    const store = context.store();\n    store.append(STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE, globalState)\n        .append(STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE, localState);\n};\n\nexport const initializeGlobalState = (context) => {\n    const globalState = context.constructor.getState()[0];\n    const store = context.store();\n    store.append(STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const createLayerState = (context) => {\n    const [globalState, localState] = BaseLayer.getState();\n    context.store().append(STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE, globalState)\n        .append(STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE, localState);\n};\n\nconst sanitizeRetinalConfig = (retinalConf) => {\n    const conf = {};\n    for (const key in retinalConf) {\n        const confValue = retinalConf[key];\n        if (typeof confValue === 'string' || !confValue) {\n            conf[key] = {\n                field: retinalConf[key]\n            };\n        } else {\n            conf[key] = confValue;\n        }\n    }\n    return conf;\n};\n\nexport const setMatrixInstances = (context, placeholder) => {\n    let {\n        values,\n        rows,\n        columns\n    } = placeholder;\n    values = values || [];\n    rows = rows || [];\n    columns = columns || [];\n    context._composition.matrices = {\n        value: new ValueMatrix(values),\n        left: new ValueMatrix(rows[0]),\n        right: new ValueMatrix(rows[1]),\n        top: new ValueMatrix(columns[0]),\n        bottom: new ValueMatrix(columns[1])\n    };\n\n    context._dependencies.throwback.commit(CommonProps.MATRIX_CREATED, true);\n    return context;\n};\n\nexport const createMatrices = (context) => {\n    const rows = context.rows();\n    const columns = context.columns();\n    const color = context.color();\n    const datamodel = context.data();\n    const size = context.size();\n    const detail = context.detail();\n    const layers = context.layers();\n    const transform = context.transform();\n    const config = context.config();\n    const shape = context.shape();\n\n    // Get the resolver for the matrices\n    const resolver = context.resolver();\n    resolver.store(context.store());\n    resolver.valueParser(context.valueParser());\n    // Prepare configuration for matrix preparation\n    let matrixConfig = {\n        selection: context.selection(),\n        alias: context.alias(),\n        globalConfig: config || {},\n        rows,\n        columns,\n        detail,\n        layers,\n        transform\n    };\n\n    unsubscribeChangeListeners(context);\n\n    const retinalConfig = sanitizeRetinalConfig({\n        color,\n        shape,\n        size\n    });\n\n    matrixConfig = Object.assign(matrixConfig, retinalConfig);\n    // Create the encoders for the group\n    const encoders = {};\n    encoders.retinalEncoder = new RetinalEncoder();\n    encoders.simpleEncoder = context.createEncoderInstance();\n    matrixConfig.coord = encoders.simpleEncoder.constructor.type();\n    resolver.encoder(encoders.simpleEncoder);\n\n    // Set the group type\n    context.groupType(encoders.simpleEncoder.constructor.type());\n\n    // Get sanitized fields as instances of the Vars Class\n    const fields = encoders.simpleEncoder.fieldSanitizer(datamodel, matrixConfig);\n    encoders.simpleEncoder.setAxisAndHeaders(config ? config.axisFrom : {}, fields);\n    // Setting layers for the code\n    layers && resolver.layerConfig(layers);\n    // Set the row and column axes\n    resolver.horizontalAxis(fields.rows, encoders).verticalAxis(fields.columns, encoders);\n    // Getting the placeholders\n    const placeholderInfo = resolver.getMatrices(datamodel, matrixConfig, context.registry(), encoders);\n    context._groupedDataModel = placeholderInfo.dataModels.groupedModel;\n    // Set the selection object\n    context.selection(placeholderInfo.selection);\n\n    // Create retinal axes\n    resolver.createRetinalAxes(placeholderInfo.dataModels.parentModel.getFieldsConfig(), retinalConfig,\n            encoders);\n\n    // Domains are evaluated for each of the axes for commonality\n    resolver.setRetinalAxisDomain(matrixConfig, placeholderInfo.dataModels, encoders);\n\n    // Create matrix instances\n    setMatrixInstances(context, placeholderInfo);\n\n    // Prepare corner matrices\n    context.cornerMatrices(resolver.createHeaders(placeholderInfo, fields, config));\n\n    // Set placeholder information\n    context.placeholderInfo(placeholderInfo);\n\n    context._composition.axes = resolver.axes();\n    context.metaData({\n        border: getBorders(placeholderInfo, encoders.simpleEncoder)\n    });\n\n    resolver.encoder().unionUnitDomains(context);\n\n    registerDomainChangeListener(context);\n    return context;\n};\n","import { STATE_NAMESPACES } from 'muze-utils';\n\nexport const setupChangeListeners = (context) => {\n    const store = context.store();\n    const stores = {\n        throwback: context._dependencies.throwback,\n        store\n    };\n\n    ['x', 'y'].forEach((axisType) => {\n        store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${axisType}`], () => {\n            const groupAxes = context.resolver().axes();\n            groupAxes[axisType].forEach(axes => axes.forEach((axis) => {\n                axis.render();\n            }));\n        });\n    });\n    const { VisualUnit, layerRegistry } = context.registry();\n    const { base: BaseLayer } = layerRegistry;\n    [VisualUnit, BaseLayer].forEach((comp) => {\n        const formalName = comp.formalName();\n        ['store', 'throwback'].forEach((type) => {\n            const listeners = comp.getListeners()[type];\n            const storeInst = stores[type];\n            listeners.forEach((listenerInf) => {\n                storeInst[listenerInf.type](listenerInf.props, listenerInf.listener, false, {\n                    namespace: formalName,\n                    subNamespace: listenerInf.subNamespace\n                });\n            });\n        });\n    });\n};\n\nexport const registerDomainChangeListener = (context) => {\n    const store = context.store();\n    store.registerChangeListener([`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`], () => {\n        context.resolver().encoder().unionUnitDomains(context);\n    }, false, {\n        key: 'unionDomain'\n    });\n};\n\nexport const unsubscribeChangeListeners = (context) => {\n    context.store().unsubscribe({\n        key: 'unionDomain'\n    });\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\nexport const PROPS = {\n    alias: {},\n    data: {},\n    cornerMatrices: {\n        defaultValue: {\n            topLeft: [],\n            topRight: [],\n            bottomLeft: [],\n            bottomRight: []\n        }\n    },\n    groupType: {},\n\n    metaData: {\n        defaultValue: {\n            border: {}\n        }\n    },\n    placeholderInfo: {\n        defaultValue: {}\n    },\n    resolver: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    registry: {\n        sanitization: (context, value) => {\n            if (context.resolver) {\n                context.resolver().registry({\n                    cells: value.cellRegistry,\n                    VisualUnit: value.VisualUnit\n                });\n            }\n            return value;\n        }\n    },\n    selection: {},\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { generateGetterSetters } from 'muze-utils';\nimport localOptions from './local-options';\nimport { SimpleGroup } from '../simple-group';\nimport {\n    MatrixResolver,\n    findInGroup,\n    getEncoder\n} from '../group-helper';\nimport { createUnitState, initializeGlobalState, setMatrixInstances, createMatrices, createLayerState } from './helper';\nimport { setupChangeListeners } from './change-listener';\nimport { PROPS } from './props';\nimport {\n    CONFIG,\n    MOUNT,\n    RETINAL,\n    Y\n} from '../enums/constants';\n\n/**\n * VisualGroup is instantiated by canvas for creating {@link VisualUnit} and axes instances.It creates the\n * the matrix of visual units and axes. It also creates the layout instance which manages the allocation\n * of space of matrices.\n *\n * To get instance of visual group,\n * ```\n *      const visualGroup = canvas.composition().visualGroup;\n * ```\n * @public\n *\n * @class VisualGroup\n */\nclass VisualGroup extends SimpleGroup {\n\n    /**\n     * Creates an instance of VisualGroup. Requires dependencies and other registry options for placeholders\n     * and layers that create individual units.\n     *\n     * @param {Object} registry Key value pair of compostions for the group\n     * @param {Object} dependencies Dependencies needed to run the group\n     * @memberof VisualGroup\n     */\n    constructor (registry, dependencies) {\n        super();\n\n        const {\n            components,\n            componentSubRegistry,\n            interactions\n        } = registry;\n\n        this._dependencies = dependencies;\n        // Generate getter/setter methods for all properties of the class\n        // One can get each property by calling the method and can set it\n        // by passing paramaters for the same. Thus, one can chain setter\n        // getter methods.\n        generateGetterSetters(this, this.constructor.getterSetters());\n        generateGetterSetters(this, this.constructor.localOptions());\n        // Populate the store with default values\n        // initialize group compositions\n        this._composition = {};\n        // store reference to data\n        this._data = [];\n        // store reference to mountpoint\n        this._mount = null;\n        // selection object that takes care of updating of components\n        this._selection = {};\n        // Create instance of matrix resolver\n        this.createMatrixResolver();\n        // matrix instance store each of the matrices\n        setMatrixInstances(this, {});\n         // Getting indiviual registered items\n        this.registry({\n            layerRegistry: componentSubRegistry.layers.get(),\n            cellRegistry: componentSubRegistry.cells.get(),\n            VisualUnit: components.VisualUnit,\n            interactions\n        });\n    }\n\n    static getState () {\n        return [{\n            domain: {\n                x: null,\n                y: null,\n                radius: null,\n                angle: null,\n                angle0: null\n            }\n        }, {}];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            initializeGlobalState(this);\n            createUnitState(this);\n            createLayerState(this);\n            // Register listeners\n            setupChangeListeners(this);\n            return this;\n        }\n        return this._store;\n    }\n\n    static formalName () {\n        return 'VisualGroup';\n    }\n\n    static localOptions () {\n        return localOptions;\n    }\n    static getterSetters () {\n        return PROPS;\n    }\n\n    /**\n     * Return the instances of matrices created by the visual group.\n     *\n     * @return {Object} Instance of matrices.\n     */\n    matrixInstance (...matrices) {\n        if (matrices.length) {\n            return this;\n        }\n        return this.composition().matrices;\n    }\n\n    /**\n     * Returns the composition of visual group.\n     *\n     * @public\n     *\n     * @return {Object} Composition of visual group. It contains instance of matrices {@link ValueMatrix}\n     * and instances of axis.\n     * ```\n     *          {\n     *              matrices: {\n     *                  value: // Instance of center value matrix.\n     *                  left: // Instance of left value matrix\n     *                  right: // Instance of right value matrix\n     *                  bottom: // Instance of bottom value matrix\n     *                  top: // Instance of top value matrix.\n     *              },\n     *              axes: {\n     *                  x: // Array of x axis.\n     *                  y: // Array of y axis\n     *                  color: // Array of color axis\n     *                  shape: // Array of shape axis\n     *                  size: // Array of size axis.\n     *              }\n     *          }\n     * ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    /**\n     * Locks the model to prevent change listeners to be triggered until unlocked\n     *\n     * @return {Object} Instance of class VisualGroup\n     * @memberof VisualGroup\n     */\n    lockModel () {\n        this.store().model.lock();\n        return this;\n    }\n\n    /**\n     * Unlocks the model so that all change listeners can be triggered\n     *\n     * @return {Object} Instance of class VisualGroup\n     */\n    unlockModel () {\n        this.store().model.unlock();\n        return this;\n    }\n\n    /**\n     * Returns the channel name of the variable. Channels are rows, columns, color, shape and size.\n     *\n     * @public\n     * @param {string} variable Name of the variable.\n     *\n     * @return {string} Name of the channel.\n     */\n    where (variable) {\n        return findInGroup(variable, this.resolver().getAllFields());\n    }\n\n    /**\n     * Gets the axis instances of the visual group based on the given axis type.\n     *\n     * @public\n     * @param {string} type Type of axis. X,Y or retinal axes.\n     *\n     * @return {Array} Array of axis instances.\n     */\n    getAxes (type) {\n        if (type === RETINAL) {\n            return this.resolver().getRetinalAxes();\n        }\n        return this.resolver().getSimpleAxes(type);\n    }\n\n    /**\n     * Returns the instances of cells based on the given type. Type can be given as `row' or `col`.\n     *\n     * @public\n     * @return {Array} Two dimensional array of cells.\n     */\n    getCells (type) {\n        return this.resolver()[`${type}Cells`]();\n    }\n\n    getFieldsFromChannel (channel) {\n        const {\n            rowProjections,\n            colProjections\n        } = this.resolver().getAllFields();\n        return channel === Y ? rowProjections : colProjections;\n    }\n\n    getCellsByFacetKey (facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey] || [];\n        return cells;\n    }\n\n    getAxesByFacetKey (axisType, facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey];\n        const axes = cells[0].valueOf().axes()[axisType] || [];\n\n        return axes;\n    }\n\n    /**\n     * This method is used to return a serialized representation of the instance's properties.\n     *\n     * @return {Object} Object with config proprties.\n     * @memberof VisualGroup\n     */\n    serialize () {\n        const store = this.store();\n\n        return {\n            [CONFIG]: store.get(CONFIG),\n            [MOUNT]: store.get(MOUNT)\n        };\n    }\n\n    /**\n     * Returns the grouped datamodel prepared by visual group. If there is no group by performed, then it returns the\n     * original data model passed to visual group.\n     *\n     * @return {DataModel} Grouped data model.\n     */\n    getGroupByData () {\n        return this._groupedDataModel;\n    }\n\n    createMatrices () {\n        createMatrices(this);\n    }\n\n    remove () {\n        this.matrixInstance().value.clear();\n        this.resolver().clear();\n        const info = this.placeholderInfo();\n        info.rows = null;\n        info.columns = null;\n        info.values = null;\n    }\n\n    createEncoderInstance () {\n        const layers = this.layers();\n\n        return getEncoder(layers);\n    }\n\n    createMatrixResolver () {\n        this.resolver(new MatrixResolver(this._dependencies));\n\n        return this;\n    }\n}\n\nexport default VisualGroup;\n","import { PersistentBehaviour, SELECTION } from '@chartshq/muze-firebolt';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return 'select';\n    }\n\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            // new add set\n            const existingRemoveSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_OLD_EXIT\n                || selectionSet._set[d] === SELECTION.SELECTION_NEW_EXIT);\n                // existing add set\n            if (existingRemoveSet.length) {\n                selectionSet.updateEntry();\n                selectionSet.add(existingRemoveSet);\n            } else {\n                selectionSet.updateExit();\n                selectionSet.remove(addSet);\n            }\n            const { exitSet } = selectionSet.getSets();\n            const mergedExitSet = [...new Set(exitSet[1]), ...new Set(exitSet[0])];\n            const completeSetCount = selectionSet.getCompleteSet().length;\n            if (exitSet[1].length !== completeSetCount && mergedExitSet.length === completeSetCount) {\n                selectionSet.reset();\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n        return this;\n    }\n}\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nconst CLASSPREFIX = 'muze';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        target: `.${CLASSPREFIX}-gradient-rect`,\n        behaviours: [BEHAVIOURS.BRUSH]\n    },\n    [ACTIONS.HOVER]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.CLICK]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.SELECT]\n    }\n};\n\nexport const propagationBehaviourMap = {\n    [BEHAVIOURS.SELECT]: BEHAVIOURS.FILTER,\n    [BEHAVIOURS.BRUSH]: BEHAVIOURS.HIGHLIGHT\n};\n","import * as BEHAVIOURS from '../enums/behaviours';\nimport * as sideEffects from '../enums/side-effects';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: [sideEffects.SELECTIONBOX, {\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.SELECT]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }]\n};\n\nexport const propagationSideEffects = {\n    [BEHAVIOURS.BRUSH]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.SELECT]: ['filter']\n};\n\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n\n","export const SELECTIONBOX = 'selectionBox';\nexport const Highlighter = 'highlighter';\nexport const Marker = 'marker';\n\n","import { FieldType } from 'muze-utils';\nimport { propagationBehaviourMap } from './action-behaviour-map';\nimport { propagationSideEffects } from './behaviour-effect-map';\n\nexport const propagate = (firebolt, action, identifiers) => {\n    const context = firebolt.context;\n    const data = context.metaData();\n\n    const propPayload = {};\n    const sourceId = context._id;\n    propPayload.action = propagationBehaviourMap[action] || action;\n    propPayload.sideEffects = propagationSideEffects[action];\n    propPayload.sourceCanvas = context.canvasAlias();\n    const isMutableAction = firebolt._actions.behavioural[propPayload.action].constructor.mutates();\n\n    let propagateInterpolatedValues = false;\n\n    if (identifiers) {\n        const schema = identifiers.fields;\n        propagateInterpolatedValues = schema.every(d => d.type === FieldType.MEASURE);\n    }\n\n    const propConfig = {\n        sourceId: `legend-${sourceId}`,\n        payload: propPayload,\n        criteria: propPayload.criteria === null ? null : identifiers,\n        isMutableAction,\n        propagateInterpolatedValues,\n        action: propPayload.action\n    };\n\n    data.propagate(identifiers, propConfig, true);\n};\n\nexport const payloadGenerator = (selectionDataModel, propConfig) => {\n    const propPayload = propConfig.payload;\n    const sourceIdentifiers = propConfig.sourceIdentifiers;\n    const dataObj = selectionDataModel.getData();\n    let schema = dataObj.schema;\n    const payload = Object.assign({}, propPayload);\n    schema = dataObj.schema;\n    const data = dataObj.data;\n    const sourceFields = schema.map(d => d.name);\n    payload.criteria = !sourceIdentifiers && selectionDataModel.isEmpty() ? null :\n            [sourceFields, ...data];\n    payload.sourceFields = sourceIdentifiers ? sourceIdentifiers.fields.map(d => d.name) : [];\n    return payload;\n};\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const CONFIG = 'config';\nexport const DATAMODEL = 'dataModel';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const MAXWIDTH = 'max-width';\nexport const HEIGHT = 'height';\nexport const MOUNTPOINT = 'mountPoint';\nexport const GRIDLINEPARENTGROUPCLASS = 'grid-lines';\nexport const TRANSFORM = 'transform';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const DEFAULTCOLOR = '#F44336';\nexport const DEFAULTSIZE = 50;\nexport const VERTICAL_BUFFER = 10;\nexport const HORIZONTAL_BUFFER = 2;\nexport const DEFAULTICONSIZE = { // approximately the (size needed) * Math.PI value\n    circle: 64,\n    square: 45.8,\n    default: 42.8\n};\nexport const DEFAULTSHAPE = 'circle';\nexport const STEP = 'step';\nexport const GRADIENT = 'gradient';\nexport const ORDINAL = 'ordinal';\nexport const SCALE_FUNCTIONS = {\n    size: 'getSize',\n    shape: 'getShape',\n    color: 'getColor'\n};\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const HORIZONTAL = 'horizontal';\nexport const VERTICAL = 'vertical';\nexport const CENTER = 'center';\nexport const VALUE = 'value';\nexport const PATH = 'path';\nexport const SHAPE = 'shape';\nexport const ICON = 'icon';\nexport const RECT = 'rect';\nexport const START = 'start';\nexport const UPPER = 'upper';\nexport const LOWER = 'lower';\nexport const END = 'end';\nexport const SIZE = 'size';\nexport const DISCRETE = 'discrete';\nexport const MEASURE = 'measure';\nexport const DEFAULT = 'default';\n\n","import { Firebolt } from '@chartshq/muze-firebolt';\nimport { propagate, payloadGenerator } from './helper';\nimport { STEP, GRADIENT } from '../enums/constants';\n/**\n * This class manages the interactions of legend.\n * @export\n * @class LegendFireBolt\n * @extends {Firebolt}\n */\nexport class LegendFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this.initializeSideEffects();\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet[0];\n    }\n\n    propagate (behaviourName, payload, selectionSet) {\n        propagate(this, behaviourName, selectionSet, {\n            payload\n        });\n    }\n\n    getAddSetFromCriteria (criteria) {\n        let values;\n        let uniqueIds;\n        const type = this.context.constructor.type();\n\n        if (criteria === null) {\n            uniqueIds = null;\n        } else if (type === STEP) {\n            values = Object.values(criteria);\n            uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n        } else if (type === GRADIENT) {\n            uniqueIds = [];\n        } else {\n            values = criteria[1];\n            if (values) {\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.rawVal) !== -1).map(d => d.id);\n            } else {\n                values = Object.values(criteria);\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n            }\n        }\n        return {\n            uids: uniqueIds,\n            model: null\n        };\n    }\n\n    getFullData () {\n        return null;\n    }\n\n    onDataModelPropagation () {\n        return (data, config) => {\n            const context = this.context;\n            if (!context.mount()) {\n                return;\n            }\n            const payload = payloadGenerator(data, config);\n            const propagationInf = {\n                propagate: false,\n                data,\n                sourceId: config.propagationSourceId\n            };\n            this.dispatchBehaviour(config.action, payload, propagationInf);\n        };\n    }\n\n    data () {\n        return this.context.metaData();\n    }\n}\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\n/**\n * Adds dragging action to the target element.\n * @param {firebolt} firebolt firebolt\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let endPos = {};\n    let payload;\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const boundingBox = context.measurement().gradientDimensions;\n    const axisType = context.config().align === 'horizontal' ? 'x' : 'y';\n    const axisScale = context.axis().source().scale();\n    const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n    }).on('drag', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                    axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n            }\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }).on('end', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n        if (startPos[axisType] === endPos[axisType]) {\n            payload = {\n                criteria: null\n            };\n        } else {\n            payload = {\n                criteria: {\n                    [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                        axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n                }\n            };\n        }\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }));\n};\n\nexport default drag;\n","import { getEvent } from 'muze-utils';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} Firebolt instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        const event = getEvent();\n                        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, {\n                            criteria: null\n                        }));\n                        event.stopPropagation();\n                    });\n};\n\nexport default hover;\n","/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nconst click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\n\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport click from './click';\nimport * as ACTIONNAMES from '../../enums/actions';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click\n};\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\n","import {\n    getMousePos,\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\nimport { HEIGHT, WIDTH, HORIZONTAL } from '../../enums/constants';\n\nconst getSelectionCriteria = (subject, axis, measures) => {\n    let criteria = [];\n    const {\n        axisScale,\n        axisType\n    } = axis;\n    const {\n        startPos,\n        endPos,\n        selectionBoxMeasure,\n        drawingInfMeasure,\n        offset\n    } = measures;\n    const subjectStartPoint = subject[axisType];\n\n    if (startPos[axisType] === endPos[axisType]) {\n        criteria = [];\n    } else if (subjectStartPoint + selectionBoxMeasure >= drawingInfMeasure + offset) {\n        criteria = [axisScale.invert(drawingInfMeasure + offset - selectionBoxMeasure),\n            axisScale.invert(drawingInfMeasure + offset)];\n    } else if (subjectStartPoint - offset < offset) {\n        criteria = [axisScale.invert(offset * 2), axisScale.invert(selectionBoxMeasure + offset * 2)];\n    } else {\n        criteria = [axisScale.invert(subjectStartPoint), axisScale.invert(subjectStartPoint + selectionBoxMeasure)];\n    }\n    axisType === 'x' ? criteria : criteria.reverse();\n    return criteria;\n};\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let payload;\n    const endPos = {};\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const axisScale = context.axis().source().scale();\n    const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n    const drawingInfMeasure = context.measurement().gradientDimensions[axisType === 'x' ?\n        WIDTH : HEIGHT];\n    const offset = axisScale.range()[axisType === 'x' ? 0 : 1];\n    const measures = {\n        drawingInfMeasure,\n        offset\n    };\n    let subject = {};\n\n    targetEl.call(d3Drag().on('start', function () {\n        const event = getEvent();\n        startPos = getMousePos(this, event.sourceEvent);\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n\n        subject.x += event.dx;\n        subject.y += event.dy;\n\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(subject, { axisScale, axisType }, measures);\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }).on('end', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(event, { axisScale, axisType }, measures);\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true,\n            config: {\n                transition: {\n                    duration: 200\n                }\n            }\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }));\n};\n\n","import { getSymbol, mergeRecursive } from 'muze-utils';\nimport {\n    CENTER,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\nexport const ALIGN = {\n    HORIZONTAL: 'horizontal',\n    VERTICAL: 'vertical'\n};\n\nexport const DEFAULT_MEASUREMENT = {\n    height: 30,\n    width: 30,\n    maxWidth: Infinity,\n    maxHeight: Infinity,\n    padding: 2,\n    margin: 2,\n    marginHorizontal: 3,\n    paddingRight: 4,\n    border: 1\n};\n\nexport const LEGEND_TITLE = {\n    text: '',\n    orientation: (pos) => {\n        if (pos === LEFT || pos === RIGHT) {\n            return LEFT;\n        } return CENTER;\n    }\n};\n\nexport const DEFAULT_CONFIG = {\n    buffer: {\n        [ALIGN.HORIZONTAL]: 10,\n        [ALIGN.VERTICAL]: 10\n    },\n    classPrefix: 'muze',\n    borderStyle: 'solid',\n    borderColor: 'rgba(0,0,0,0)',\n    formatter: {\n        bounds: {\n            lower: 'less than',\n            upper: 'more than'\n        }\n    },\n    item: {\n        text: {\n            orientation: 'left',\n            width: 10,\n            formatter: (val, i, data, context) => context.valueParser()(val)\n        },\n        icon: {\n            className: 'legend-icon',\n            height: 20,\n            width: 20,\n            color: 'rgba(192,192,192,0.6)',\n            type: 'square'\n        }\n    }\n};\n\nconst tempConfig = mergeRecursive({}, DEFAULT_CONFIG);\n\nconst ITEM_FORMATTER = {\n    item: {\n        text: {\n            formatter: val => `${Math.ceil(val[0])} - ${Math.ceil(val[1])}`\n        }\n    }\n};\n\nexport const STEP_DEFAULT_CONFIG = mergeRecursive(tempConfig, ITEM_FORMATTER);\n\n/**\n * Creates a map of pre defined icons\n *\n * @param {string} icon Accepts a icon name like 'square', 'cross', 'diamond' etc\n * @return {Object} icon object which can be used to draw the icons\n */\nexport const ICON_MAP = (icon) => {\n    if (icon && typeof (icon) === 'string') {\n        return getSymbol(icon);\n    } return icon;\n};\n\nexport const LEGEND_MARKER_PROPS = {\n    size: 8,\n    ROTATE_HORIZONTAL: 180,\n    ROTATE_VERTICAL: 90,\n    shape: 'triangle'\n};\n","import { makeElement } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { CLASSPREFIX, HEIGHT, WIDTH, HORIZONTAL, RECT } from '../../../enums/constants';\nimport { SELECTIONBOX } from '../../../enums/side-effects';\nimport { selectionBoxDrag } from '../../physical/selection-box-drag';\nimport { LEGEND_MARKER_PROPS } from '../../../legend/defaults';\nimport './styles.scss';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\n/* istanbul ignore next */ class SelectionBox extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._graphicElems = {\n            rect: null\n        };\n    }\n\n    static formalName () {\n        return SELECTIONBOX;\n    }\n\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            className: 'legend-selection-box',\n            classPrefix: CLASSPREFIX\n        };\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     */\n    /* istanbul ignore next */ apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const firebolt = this.firebolt;\n        const context = firebolt.context;\n        const config = this.config();\n        const axis = context.axis().source();\n        const className = `${config.classPrefix}-${config.className}`;\n        const { criteria } = payload;\n        const { rect } = this._graphicElems;\n\n        if (criteria === null) {\n            rect && rect.remove();\n            return this;\n        }\n\n        const domain = criteria[firebolt.context.fieldName()];\n        const axisScale = axis.scale();\n        const range = domain ? [axis.getScaleValue(domain[0]), axis.getScaleValue(domain[1])] : [];\n\n        const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n\n        const gradientDimension = firebolt.context.measurement().gradientDimensions[axisType === 'x' ?\n            HEIGHT : WIDTH];\n\n        const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n        const legendGradContainer = context.getDrawingContext().svgContainer;\n        const legendSelGroup = makeElement(legendGradContainer, 'g', [1], `${config.classPrefix}-selection-box-group`);\n\n        if (firebolt.context.config().align === HORIZONTAL) {\n            x = range[0] - rangeShifter || 0;\n            y = LEGEND_MARKER_PROPS.size + 4;\n            width = range[1] - range[0] || 0;\n            height = gradientDimension;\n        } else {\n            x = LEGEND_MARKER_PROPS.size + 4;\n            y = range[1] - rangeShifter || 0;\n            height = range[0] - range[1] || 0;\n            width = gradientDimension;\n        }\n        const enterFn = function (el) {\n            selectionBoxDrag(firebolt)(el, ['brush']);\n        };\n        const selBox = makeElement(legendSelGroup, RECT, [{ domain, x, y, width, height }], className,\n            { enter: enterFn });\n        selBox.attr('y', y)\n                        .attr('x', x)\n                        .attr(WIDTH, width)\n                        .attr(HEIGHT, height);\n        this._graphicElems.rect = selBox;\n        return this;\n    }\n}\n\nexport default SelectionBox;\n\n","import { selectElement } from 'muze-utils';\n\nexport const strategies = (firebolt) => {\n    const context = firebolt.context;\n    const classed = (set, className, change) => {\n        const classPrefix = context.config().classPrefix;\n        selectElement(context.mount())\n                        .selectAll(`.${classPrefix}-legend-columns`)\n                        .filter(d => set.uids.indexOf(d.id) !== -1)\n                        .selectAll('div')\n                        .classed(className, change);\n    };\n\n    return {\n        fade: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-fadeout`, false);\n            } else {\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-fadeout`, true);\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-fadeout`, false);\n            }\n        },\n        brighten: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-brighten`, false);\n            } else {\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-brighten`, true);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n            }\n        }\n    };\n};\n","import { GenericSideEffect } from '@chartshq/muze-firebolt';\nimport { strategies } from './strategies';\nimport { Highlighter } from '../../../enums/side-effects';\n\nexport default class LegendHighlighter extends GenericSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategies = strategies(this.firebolt);\n        this._strategy = 'brighten';\n    }\n\n    static formalName () {\n        return Highlighter;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        strategy(selectionSet, this);\n    }\n}\n","import { GenericSideEffect } from '@chartshq/muze-firebolt';\nimport { makeElement, getSymbol } from 'muze-utils';\nimport { Marker } from '../../../enums/side-effects';\nimport { CLASSPREFIX, HORIZONTAL } from '../../../enums/constants';\nimport { LEGEND_MARKER_PROPS } from '../../../legend/defaults';\nimport './styles.scss';\n\nconst SYMBOL_PADDING = (Math.sqrt(3) * 3);\nconst AXIS_STROKE = 1;\n\nconst createTextCell = (className, labelManagerRef, cells) => {\n    const { TextCell } = cells;\n    const cell = new TextCell(\n        {\n            type: 'text',\n            className: `${className}-text`\n        }, {\n            labelManager: labelManagerRef()\n        }).config({ maxLines: 1 });\n    cell._minTickDiff = { height: 0, width: 0 };\n\n    return cell;\n};\n\nconst getRelativePosition = (canvas, legendContainer) => ({\n    top: legendContainer.getBoundingClientRect().top - canvas.getBoundingClientRect().top,\n    left: legendContainer.getBoundingClientRect().left - canvas.getBoundingClientRect().left\n});\nexport default class LegendMarker extends GenericSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._graphicElements = {\n            markerElement: null,\n            legendmarkerTextContainer: null,\n            legendmarkerText: null\n        };\n    }\n\n    static formalName () {\n        return Marker;\n    }\n\n      /**\n     * It returns the default configuration needed by legend-marker.\n     * @return {Object} Default configuration of the legend-marker.\n     */\n    static defaultConfig () {\n        return {\n            className: 'legend-marker',\n            classPrefix: CLASSPREFIX,\n            size: LEGEND_MARKER_PROPS.size,\n            shape: LEGEND_MARKER_PROPS.shape\n        };\n    }\n\n    apply (selectionSet, payload) {\n        const className = `${this.config().classPrefix}-${this.config().className}`;\n        if (payload.criteria && payload.criteria.length === 2) {\n            const physicalAction = function () {\n            // Register physical action on marker gere\n            };\n            const firebolt = this.firebolt;\n            const labelManager = firebolt.context.labelManager;\n            const context = firebolt.context;\n            const config = this.config();\n            const axis = context.axis().source();\n\n            const range = payload.criteria[0] ? axis.getScaleValue(payload.criteria[1]) : 0;\n\n            const legendGradContainer = context.getDrawingContext().svgContainer;\n\n            const { top, left } = getRelativePosition(context._canvasMount, legendGradContainer.node());\n            const { oriTextHeight, oriTextWidth } = labelManager().getSmartText(payload.criteria[1]);\n            let x;\n            let y;\n            let rotateAngle;\n            const lableConfig = {\n                top: 0,\n                left: 0\n            };\n\n            const { size, shape } = config;\n            if (context.config().align === HORIZONTAL) {\n                x = range - (Math.sqrt(size / SYMBOL_PADDING)) + AXIS_STROKE;\n                y = 5;\n                rotateAngle = LEGEND_MARKER_PROPS.ROTATE_HORIZONTAL;\n                lableConfig.top = top + y - 20;\n                lableConfig.left = x + left - (oriTextWidth / 2);\n            } else {\n                y = range + Math.sqrt(size / (2 * SYMBOL_PADDING)) - AXIS_STROKE;\n                x = 5;\n                rotateAngle = LEGEND_MARKER_PROPS.ROTATE_VERTICAL;\n                lableConfig.top = top + y - 17 + (oriTextHeight / 2);\n                lableConfig.left = x + left - oriTextWidth - 3;\n            }\n\n            const legendmarkerGroup = makeElement(legendGradContainer,\n                                                'g',\n                                                [1],\n                                                `${config.classPrefix}-${config.className}-group`);\n\n            if (!this._graphicElements.markerElement) {\n                this._graphicElements.markerElement = makeElement(legendmarkerGroup,\n                                    'path', [{ value: null }], className, { enter: physicalAction });\n            }\n\n            if (!this._graphicElements.legendmarkerTextContainer) {\n                this._graphicElements.legendmarkerTextContainer = makeElement(\n                                                    context._canvasMount,\n                                                    'div',\n                                                    [1],\n                                                    `${className}-text-container`);\n                this._graphicElements.legendmarkerText = makeElement(\n                                                    this._graphicElements.legendmarkerTextContainer,\n                                                    'div',\n                                                    [1],\n                                                    `${className}-text`);\n            }\n            const textElement = createTextCell(className, labelManager, context._cells);\n            this._graphicElements.markerElement\n                    .data([{ value: payload.criteria }])\n                    .attr('transform', `translate(${x},${y}) rotate(${rotateAngle})`)\n                    .attr('d', getSymbol(shape).size(size * size)())\n                    .classed(`${className}-show`, true)\n                    .classed(`${className}-hide`, false);\n\n            textElement.source(payload.criteria[1]);\n            textElement.render(this._graphicElements.legendmarkerText.node());\n            this._graphicElements.legendmarkerText\n                        .attr('style', `top: ${lableConfig.top}px; left:${lableConfig.left}px`)\n                                     .classed(`${className}-show`, true)\n                                     .classed(`${className}-hide`, false);\n        } else if (this._graphicElements.markerElement && this._graphicElements.legendmarkerText) {\n            this._graphicElements.markerElement\n                .data([{ value: null }])\n                .classed(`${className}-show`, false)\n                .classed(`${className}-hide`, true);\n            this._graphicElements.legendmarkerText\n                .classed(`${className}-show`, false)\n                .classed(`${className}-hide`, true);\n        }\n    }\n\n}\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    data: {},\n    fieldName: {},\n    legendContainer: {},\n    measurement: {\n        sanitization: (context, value) => {\n            const measurement = mergeRecursive(context._measurement, value);\n            ['padding', 'border', 'margin'].forEach((space) => {\n                measurement[space] = Math.min(measurement[space] > 0 ? measurement[space] : 0,\n                     measurement.maxWidth * 0.1, measurement.maxHeight * 0.1);\n            });\n            return measurement;\n        }\n    },\n    logicalSpace: {},\n    metaData: {\n        onset: (context, value) => context.firebolt().attachPropagationListener(value)\n    },\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.resetLogicalSpace();\n            context.store().commit('range', value);\n            return value;\n        }\n    },\n    scale: {},\n    smartTicks: {},\n    store: {},\n    title: {\n        sanitization: (context, value) => mergeRecursive(context._title || {}, value)\n    },\n    labelManager: {},\n    minTickDistance: {},\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import { makeElement, numberInterpolator } from 'muze-utils';\n\nimport {\n    SCALE_FUNCTIONS,\n    WIDTH,\n    HEIGHT,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    MAXWIDTH\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} scale\n *\n */\nexport const getScaleInfo = (scale) => {\n    const scaleType = scale.constructor.type();\n    const domain = scale.uniqueValues();\n    const steps = scale.config().stops || 1;\n    const scaleFn = SCALE_FUNCTIONS[scaleType];\n\n    return { scaleType, domain, steps, scaleFn };\n};\n\n/**\n * Function to recompute the stops in array in case to left and right alignment of legend.\n *\n * @param  {string} param - parameter to measure\n * @param  {Object} requiredMeasure - required measure parameters\n * @param  {Object} availableMeasure - available meassure parameters\n * @param  {Array} domainForLegend - array\n * @param  {Object} smartLabelCalc - smartLabel Manager\n * @return {Array} - Array\n */\nconst getcomputedArray = (computationhelper, requiredMeasure, availableMeasure, domainForLegend) => {\n    // declaring Current and Next Tick Value variable\n    let currentTickValue;\n    let nextTickValue;\n    const upperBound = domainForLegend[domainForLegend.length - 1];\n    const param = computationhelper.measureParam;\n    const smartLabelCalc = computationhelper.smartLabelCalc;\n\n    // calculating pixel required per Tick Values\n    const pixelPerTick = (availableMeasure[param] / upperBound);\n\n    // checking if available max width is smaller than required width for legend.\n    if (availableMeasure[param] >= requiredMeasure[param]) {\n        return domainForLegend;\n    }\n\n    currentTickValue = (smartLabelCalc.getOriSize((domainForLegend[0]))[param]);\n    for (let i = 1; i < domainForLegend.length - 1; i++) {\n        nextTickValue = Math.floor((currentTickValue / pixelPerTick) + domainForLegend[i - 1]);\n        if (domainForLegend[i] < nextTickValue) {\n            domainForLegend.splice(i, 1);\n            i -= 1;\n        }\n        currentTickValue = (smartLabelCalc.getOriSize((domainForLegend[i]))[param]);\n    }\n    return domainForLegend;\n};\n\n/**\n * function to recompute the Stops Array provided to prevent the Overlapping of values\n * @param  {Array} domainForLegend - Stops Array\n * @param  {Object} scaleParams - Scale Parameters\n * @return {Array} - modified Stops Array\n */\nexport const getInterpolatedArrayData = (domainForLegend, scaleParams) => {\n    // defining param for height/width selector\n    let measureParam;\n\n    // declaring variable for required Width\n    let requiredWidth;\n\n    // declaring variable for required height\n    let requiredHeight;\n\n    // declaring the variable for upperbound\n    let upperBound = domainForLegend[domainForLegend.length - 1];\n\n    // Initializing Minimum Tick Difference Variable and checking if it's less than 1 or not\n    let minTickDiff = Math.ceil(domainForLegend[1] - domainForLegend[0]);\n\n    // calculating max tick difference\n    const maxTickDiff = Math.ceil(upperBound - domainForLegend[0]);\n\n    // gradient Alignment\n    const { alignment } = scaleParams;\n\n    // getting SmartLabel Manager to calculate tick Params\n    const smartLabelCalc = scaleParams.smartLabel;\n\n    // scale Measurements (i.e MaxWidth and MaxHeight available)\n    const availableSpace = scaleParams.measures;\n\n    // getting minimum Tick size (i.e height and width)\n    const minimumTickSize = scaleParams.minTickDistance;\n\n    // getting domain upperbound dimensions\n    const { height: tickDimHeight, width: tickDimWidth } = smartLabelCalc.getOriSize((upperBound));\n\n    /* Checking if UpperBound of Domain is Floating or Not.\n    In case of floating constricting it to 2 decimals after point. */\n    if (!Number.isInteger(upperBound)) {\n        upperBound = ((upperBound).toFixed(2));\n    }\n\n    // Calculating minimum tick difference\n    minTickDiff = minTickDiff < 1 ? 1 : minTickDiff;\n\n    // required width to render legend\n    requiredWidth = (Math.abs(maxTickDiff) / Math.abs(minTickDiff)) * (tickDimWidth + (minimumTickSize.width));\n\n    requiredWidth -= Math.abs(maxTickDiff);\n\n    // require height to render legend\n    requiredHeight = (Math.abs(maxTickDiff) / Math.abs(minTickDiff)) * tickDimHeight;\n\n    requiredHeight -= Math.abs(maxTickDiff);\n\n    // checking the alignment of legend\n    if (alignment === TOP || alignment === BOTTOM) {\n        measureParam = WIDTH;\n    } else {\n        measureParam = HEIGHT;\n    }\n\n    // calculating computed array\n    domainForLegend = getcomputedArray({\n        smartLabelCalc,\n        measureParam\n    }, {\n        height: requiredHeight,\n        width: requiredWidth\n    }, {\n        height: availableSpace.maxHeight,\n        width: availableSpace.maxWidth\n    }, domainForLegend);\n\n    return domainForLegend;\n};\n\n/**\n * function to recalculate steps on providing more number of stops than canvas can accomodate.\n * @param  {Array} domain - Array\n * @param  {Array} steps - Array\n * @param  {Object} scaleParams - Scale Parameters\n * @return {Array} - recalculated Step Array\n */\nexport const getInterpolatedData = (domain, steps, scaleParams) => {\n    // declaring recomputeSteps Variable\n    let recomputeSteps = 0;\n\n    const getTickMeasure = scaleParams.smartLabel;\n    const { maxWidth, maxHeight } = scaleParams.measures;\n    const { alignment } = scaleParams;\n    const domainForLegend = [];\n    const interpolatedFn = numberInterpolator()(domain[0], domain[1]);\n\n    // getting tick measure(i.e height and width)\n    const tickValue = getTickMeasure.getOriSize(domain[1].toFixed(2));\n\n    // To round the floating values to Integer and checking if value is 1.\n    steps = Math.round(steps);\n    steps = steps < 1 ? (steps + 1) : steps;\n\n    // checking alignment of the Axis\n    if (alignment === TOP || alignment === BOTTOM) {\n        recomputeSteps = Math.floor(maxWidth / (tickValue.width));\n    } else {\n        recomputeSteps = Math.floor(maxHeight / (tickValue.height));\n    }\n    steps = Math.min(steps, recomputeSteps);\n\n    // scaling the axis based on steps provided\n    for (let i = 0; i <= steps; i++) {\n        domainForLegend[i] = interpolatedFn(i / steps);\n    }\n    return domainForLegend;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} text\n * @param {*} measurement\n * @param {*} classPrefix\n */\nexport const titleCreator = (container, title, measurement, config) => {\n    const titleWidth = Math.min(measurement.maxWidth, measurement.width);\n\n    const titleContainer = makeElement(container, 'table', [1], `${config.classPrefix}-legend-title`)\n            .style(WIDTH, `${titleWidth}px`)\n            .style(HEIGHT, `${measurement.height}px`)\n            .style('border-bottom', `${measurement.border}px ${config.borderStyle} ${config.borderColor}`)\n            .style('text-align', title.orientation instanceof Function ?\n            title.orientation(config.position) : title.orientation);\n    return makeElement(titleContainer, 'td', [1], `${config.classPrefix}-legend-title-text`)\n                    .style(WIDTH, `${titleWidth}px`)\n                    .style(MAXWIDTH, `${titleWidth}px`)\n                    .style(HEIGHT, '100%')\n                    .style('line-height', 1)\n                    .style('padding', `${measurement.padding}px`)\n                    .text(title.text)\n                    .style('overflow-x', 'scroll')\n                    .node();\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getMaxMeasures = (data, prop, labelManager) => {\n    let maxHeight = -Infinity;\n    let maxWidth = -Infinity;\n\n    data.forEach((item) => {\n        const value = prop ? item[prop] : item;\n        const space = labelManager.getOriSize(value);\n        maxHeight = Math.max(space.height + 2, maxHeight);\n        maxWidth = Math.max(space.width + 2, maxWidth);\n    });\n\n    return { height: maxHeight, width: maxWidth };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getItemMeasures = (context, prop, formatter) => {\n    const space = [];\n    const data = context.data();\n    const labelManager = context._labelManager;\n\n    data.forEach((item, index) => {\n        const value = prop ? item[prop] : item;\n        const formattedData = formatter(value, index, context.metaData(), context);\n        const { height, width } = labelManager.getOriSize(formattedData);\n        space[index] = { height, width };\n    });\n    return space;\n};\n\n/**\n *\n *\n * @param {*} textOrientation\n * @param {*} effPadding\n * @param {*} titleSpace\n *\n * @memberof Legend\n */\nexport const computeItemSpaces = (config, measures, data) => {\n    let totalHeight = 0;\n    let totalWidth = 0;\n    let maxItemSpaces = {\n        width: 0, height: 0\n    };\n    const {\n        effPadding,\n        titleWidth,\n        labelSpaces,\n        titleHeight,\n        maxWidth\n    } = measures;\n    const {\n        item,\n        align\n    } = config;\n    const {\n        icon,\n        text\n    } = item;\n    const textOrientation = text.orientation;\n    const itemSpaces = [];\n    const iconSpaces = [];\n    let maxIconWidth = 0;\n    labelSpaces.forEach((labelSpace, i) => {\n        const itemSpace = { width: 0, height: 0 };\n        const iconSpace = { width: 0, height: 0 };\n        const datum = data[i] || {};\n            // Compute each legend item height/width\n        if (textOrientation === LEFT || textOrientation === RIGHT) {\n            // Get label, icon and item widths\n            labelSpace.width += effPadding;\n            iconSpace.width = (datum.size ? 2 * Math.sqrt(datum.size / Math.PI) : icon.width) + effPadding;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n            itemSpace.width = labelSpace.width + maxIconWidth;\n\n            // Get label, icon and item heights\n            labelSpace.height = Math.max(labelSpace.height, icon.height) + effPadding;\n            iconSpace.height = labelSpace.height;\n            itemSpace.height = labelSpace.height;\n        } else {\n            // Get label, icon and item widths\n            labelSpace.width = Math.max(labelSpace.width, datum.size ? 2 * Math.sqrt(datum.size / Math.PI)\n            : icon.width) + effPadding;\n            iconSpace.width = labelSpace.width;\n            itemSpace.width = labelSpace.width;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n\n            // Get label, icon and item heights\n            labelSpace.height += effPadding;\n            iconSpace.height = icon.height + effPadding;\n            itemSpace.height = labelSpace.height + iconSpace.height;\n        }\n        // Compute height and width of legend for each alignment\n        if (align === 'horizontal') {\n            totalHeight = Math.max(totalHeight, itemSpace.height);\n        } else {\n            totalHeight += itemSpace.height;\n            totalWidth = Math.max(totalWidth, itemSpace.width, titleWidth);\n        }\n        maxItemSpaces = {\n            width: Math.max(itemSpace.width, maxItemSpaces.width),\n            height: Math.max(itemSpace.height, maxItemSpaces.height)\n        };\n        itemSpaces.push(itemSpace);\n        iconSpaces.push(iconSpace);\n    });\n\n    itemSpaces.forEach((itemSpace, i) => {\n        if (align === 'horizontal') {\n            itemSpace.height = totalHeight;\n            // iconSpaces[i].width = maxIconWidth;\n            if (textOrientation === LEFT || textOrientation === RIGHT) {\n                labelSpaces[i].height = totalHeight;\n                iconSpaces[i].height = totalHeight;\n                itemSpaces[i].width = labelSpaces[i].width + iconSpaces[i].width + 2 * effPadding;\n            } else {\n                labelSpaces[i].width = iconSpaces[i].width;\n                itemSpaces[i].width = iconSpaces[i].width;\n                labelSpaces[i].width = iconSpaces[i].width;\n            }\n            totalWidth += itemSpaces[i].width;\n        } else {\n            itemSpace.width = Math.max(totalWidth, maxWidth);\n            if (textOrientation === TOP || textOrientation === BOTTOM) {\n                labelSpaces[i].width = totalWidth;\n                iconSpaces[i].width = totalWidth;\n                maxIconWidth = totalWidth;\n            } else {\n                const labelWidth = labelSpaces[i].width;\n                const newLabelWidth = (maxItemSpaces.width - maxIconWidth);\n                iconSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = labelWidth + maxIconWidth;\n                labelSpaces[i].width = Math.max(labelWidth, newLabelWidth);\n                totalWidth = Math.max(totalWidth, itemSpace.width);\n            }\n        }\n    });\n    totalWidth = Math.ceil(Math.max(totalWidth, titleWidth)) + effPadding;\n    totalHeight += titleHeight + effPadding;\n    totalHeight = Math.ceil(totalHeight);\n    return { totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth };\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} scaleInfo\n * @param {*} domainInfo\n *\n */\nexport const getDomainBounds = (type, scaleInfo, domainInfo) => {\n    const {\n        scaleFn,\n        scaleType,\n        scale\n    } = scaleInfo;\n    const {\n        domain,\n        domainBounds,\n        domainLeg,\n        steps\n    } = domainInfo;\n    const ele = domain[type === 'lower' ? 0 : domain.length - 1];\n    const step = steps[type === 'lower' ? 0 : steps.length - 1];\n\n    return {\n        [scaleType]: scaleType === 'size' ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n        value: domainBounds[type],\n        id: type === 'lower' ? 0 : domainLeg.length + 2,\n        range: [ele, step]\n    };\n};\n","import {\n    makeElement,\n    selectElement,\n    getUniqueId,\n    getSmartComputedStyle,\n    generateGetterSetters,\n    mergeRecursive\n} from 'muze-utils';\nimport * as legendBehaviours from '../firebolt/behavioural';\n\nimport { LegendFireBolt } from '../firebolt/legend-firebolt';\nimport { actionBehaviourMap } from '../firebolt/action-behaviour-map';\nimport { physicalActions } from '../firebolt/physical';\nimport * as sideEffects from '../firebolt/side-effects';\nimport { behaviourEffectMap } from '../firebolt/behaviour-effect-map';\nimport { VALUE, PATH, RIGHT, LEFT, TOP, BOTTOM } from '../enums/constants';\nimport { PROPS } from './props';\nimport { DEFAULT_MEASUREMENT, DEFAULT_CONFIG, LEGEND_TITLE } from './defaults';\nimport { getItemMeasures, titleCreator, computeItemSpaces } from './legend-helper';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class SimpleLegend\n */\nexport default class SimpleLegend {\n\n    /**\n     * Creates an instance of Legend.\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @memberof Legend\n     */\n    constructor (dependencies) {\n        const { interactions } = dependencies.registry;\n        this._data = [];\n        this._metaData = [];\n        this._mount = null;\n        this._fieldName = null;\n        this._title = Object.assign({}, LEGEND_TITLE);\n        this._metaData = null;\n        this._labelManager = dependencies.labelManager;\n        this._cells = dependencies.cells;\n        this._id = getUniqueId();\n        this._measurement = Object.assign({}, this.constructor.defaultMeasurement());\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n\n        const dist = dependencies.labelManager.getOriSize('w');\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n\n        generateGetterSetters(this, PROPS);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'),\n            `${this.config().classPrefix}-legend-item-info`);\n\n        this._firebolt = new LegendFireBolt(this, {\n            behavioural: Object.assign({}, interactions.behaviours.get(), legendBehaviours),\n            physical: physicalActions,\n            physicalBehaviouralMap: actionBehaviourMap\n        }, sideEffects, behaviourEffectMap);\n    }\n\n    id () {\n        return this._id;\n    }\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new SimpleLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENT;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleLegend\n     */\n    firebolt (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return PATH;\n    }\n\n    canvasAlias (...alias) {\n        if (alias.length) {\n            this._canvasAlias = alias[0];\n            return this;\n        }\n        return this._canvasAlias;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    mount (...params) {\n        if (params.length) {\n            this._mount = params[0];\n            this.render();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces () {\n        const {\n            item,\n            classPrefix\n        } = this.config();\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n            `${classPrefix}-legend-item-info`));\n        return getItemMeasures(this, VALUE, item.text.formatter);\n    }\n\n    /**\n     * Sets the height and width of a legend based on provided max\n     * height and width and based on its contents\n     *\n     * @return {Instance} Current instance\n     * @memberof Legend\n     */\n    setLegendMeasures () {\n        const {\n            width,\n            height,\n            maxWidth,\n            maxHeight,\n            padding,\n            margin,\n            border\n        } = this.measurement();\n        const {\n            align\n        } = this.config();\n\n        // Effective padding, margin and padding\n        const effPadding = padding * 2;\n        const effBorder = border * 2;\n        const effMargin = margin * 2;\n\n        this.data(this.dataFromScale());\n        // Get space occupied by title\n        const titleSpace = this.getTitleSpace();\n        const titleHeight = titleSpace.height > 0 ? titleSpace.height + effPadding : 0;\n        const titleWidth = titleSpace.width + effPadding;\n\n        // Get space occupied by labels\n        const labelSpaces = this.getLabelSpaces(effPadding, align);\n        const {\n            totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth\n        } = computeItemSpaces(this.config(),\n        { effPadding, titleWidth, labelSpaces, titleHeight, maxWidth, maxHeight }, this.data());\n\n        this.measurement({\n            width: Math.max(totalWidth, width) + effMargin + effBorder,\n            height: Math.max(totalHeight, height) + effMargin + effBorder,\n            labelSpaces,\n            iconSpaces,\n            itemSpaces,\n            maxItemSpaces,\n            maxIconWidth,\n            titleSpaces: {\n                width: Math.min(maxWidth, this.measurement().width) - effMargin - effBorder,\n                height: titleHeight\n            }\n        });\n        return this;\n    }\n\n    /**\n     * Returns the space occupied by the legend title\n     *\n     * @return {Object} Space occupied by title\n     * @memberof Legend\n     */\n    getTitleSpace () {\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n                                                `${this.config().classPrefix}-legend-title`));\n        return this._labelManager.getOriSize(this.title().text ? this.title().text : '');\n    }\n\n    /**\n     * Creates the title for the legend\n     *\n     * @param {DOM} container Container made for the title\n     * @return {Selection} Title and it's node\n     * @memberof Legend\n     */\n    renderTitle (container) {\n        const { titleSpaces, border, padding, width, maxWidth } = this.measurement();\n        const { borderStyle, borderColor } = this.config();\n        return titleCreator(container, this.title(), {\n            height: titleSpaces.height,\n            width,\n            maxWidth,\n            border,\n            padding,\n            borderStyle,\n            borderColor\n        }, this.config());\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const {\n            classPrefix,\n            borderStyle,\n            borderColor,\n            position\n        } = this.config();\n        const {\n            maxWidth,\n            maxHeight,\n            width,\n            height,\n            border,\n            marginHorizontal\n        } = this.measurement();\n        let {\n            margin\n        } = this.measurement();\n        const legendContainer = makeElement(selectElement(this.mount()), 'div', [1], `${classPrefix}-legend-box`);\n        let marginPosition;\n        switch (position) {\n        case TOP:\n            marginPosition = `margin-${BOTTOM}`;\n            margin = marginHorizontal;\n            break;\n        case LEFT:\n            marginPosition = `margin-${RIGHT}`;\n            break;\n        case BOTTOM:\n            marginPosition = `margin-${TOP}`;\n            margin = marginHorizontal;\n            break;\n        default:\n            marginPosition = `margin-${LEFT}`;\n        }\n        legendContainer.classed(`${classPrefix}-legend-box-${this._id}`, true);\n        legendContainer.style('float', 'left');\n        // set height and width\n        legendContainer.style('width', `${Math.min(maxWidth, width) - margin * 2}px`)\n                        .style('height', `${Math.min(maxHeight, height) - margin * 2}px`)\n                        .style(`${marginPosition}`, `${margin}px`)\n                        .style('border', `${border}px ${borderStyle} ${borderColor}`);\n        this.legendContainer(legendContainer.node());\n\n        // create title\n        this.renderTitle(legendContainer);\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof SimpleLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        const type = this.metaData().getData().schema[0].type;\n        if (type === 'measure') {\n            return {\n                [fieldName]: data.range\n            };\n        }\n        return [[fieldName], [data.rawVal]];\n    }\n\n    getValueFromId (id, fields = []) {\n        const data = this.data();\n        if (fields.length) {\n            id = Number(id);\n            return [data.find(d => id === d.id).rawVal];\n        }\n\n        return [];\n    }\n\n    getRangeFromIdentifiers ({ fields, entrySet }) {\n        const data = this.data();\n        const idRangeMap = data.reduce((acc, v) => {\n            acc[v.id] = v;\n            return acc;\n        }, {});\n\n        return fields.reduce((acc, v) => {\n            acc[v] = entrySet.reduce((ranges, id) => {\n                if (id in idRangeMap) {\n                    ranges.push(idRangeMap[id].range);\n                }\n                return ranges;\n            }, []);\n            return acc;\n        }, {});\n    }\n\n    setParentInfo (info) {\n        this._canvasMount = info.canvasRoot;\n    }\n}\n","import {\n    LEFT,\n    RIGHT,\n    START,\n    END,\n    TOP,\n    BOTTOM,\n    HORIZONTAL,\n    VERTICAL,\n    CENTER,\n    SHAPE,\n    VALUE\n} from '../enums/constants';\n\nconst legendOrientation = {\n    [HORIZONTAL]: {\n        datasets: data => ({\n            row: [1],\n            column: data\n        }),\n        itemContainerMeasures: (measurement, config) => {\n            const {\n                itemSpaces,\n                width\n            } = measurement;\n            const {\n                buffer\n            } = config;\n            return {\n                row: {\n                    width: `${width + itemSpaces.length * buffer[HORIZONTAL] || 1}px`,\n                    padding: `${0}px`\n                },\n                column: {\n                    width: (d, i) => `${itemSpaces[i].width + buffer[HORIZONTAL]}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, height } = measurement;\n            return {\n                iconHeight: height,\n                iconWidth: maxItemSpaces.width,\n                stepPadding: {\n                    horizontal: true,\n                    vertical: false\n                }\n            };\n        }\n    },\n    [VERTICAL]: {\n        datasets: data => ({\n            row: data,\n            column: d => [d]\n        }),\n        itemContainerMeasures: (measurement, config) => {\n            const {\n                width\n            } = measurement;\n            const { padding } = config;\n\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${padding}px`\n                },\n                column: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, width } = measurement;\n            return {\n                iconHeight: maxItemSpaces.height,\n                iconWidth: width,\n                stepPadding: {\n                    horizontal: false,\n                    vertical: true\n                }\n            };\n        }\n    }\n};\n\nexport const positionConfig = {\n    [LEFT]: legendOrientation[VERTICAL],\n    [RIGHT]: legendOrientation[VERTICAL],\n    [TOP]: legendOrientation[HORIZONTAL],\n    [BOTTOM]: legendOrientation[HORIZONTAL]\n};\n\nexport const alignmentMap = {\n    [LEFT]: END,\n    [RIGHT]: START,\n    [TOP]: CENTER,\n    [BOTTOM]: CENTER\n};\n\n// Reverses data for step legend\nexport const stepData = data => ({\n    [LEFT]: data.reverse(),\n    [RIGHT]: data.reverse(),\n    [TOP]: data,\n    [BOTTOM]: data\n});\n\n// Changes the item layout based on the position of the text\nexport const itemStack = {\n    [LEFT]: [VALUE, SHAPE],\n    [RIGHT]: [SHAPE, VALUE],\n    [TOP]: [VALUE, SHAPE],\n    [BOTTOM]: [SHAPE, VALUE]\n};\n","import { makeElement, selectElement, applyStyle } from 'muze-utils';\nimport { ICON_MAP } from './defaults';\nimport { positionConfig, alignmentMap, itemStack } from './position-config';\nimport {\n    WIDTH,\n    HEIGHT,\n    CENTER,\n    VALUE,\n    RECT,\n    LEFT,\n    RIGHT,\n    DEFAULTICONSIZE,\n    VERTICAL_BUFFER,\n    HORIZONTAL_BUFFER,\n    HORIZONTAL,\n    VERTICAL,\n    DEFAULT\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} legendInstance\n * @param {*} align\n *\n */\nexport const getItemContainers = (container, data, legendInstance) => {\n    const measurement = legendInstance.measurement();\n    const config = legendInstance.config();\n    const {\n        itemSpaces\n    } = measurement;\n    const {\n        classPrefix,\n        position\n    } = config;\n    const positionObj = positionConfig[position];\n    const datasets = positionObj.datasets(data);\n    const measures = positionObj.itemContainerMeasures(measurement, config);\n\n    const rows = makeElement(container, 'div', datasets.row, `${classPrefix}-legend-row`);\n    rows.style(HEIGHT, (d, i) => `${itemSpaces[i].height}px`);\n    rows.style(WIDTH, measures.row.width);\n    rows.style('padding', measures.row.padding);\n\n    const columns = makeElement(rows, 'div', datasets.column, `${classPrefix}-legend-columns`);\n    columns.style(WIDTH, measures.column.width);\n    columns.style('padding', measures.column.padding);\n\n    return columns;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} classPrefix\n * @param {*} data\n *\n * @memberof DiscreteLegend\n */\nexport const createLegendSkeleton = (context, container, classPrefix, data) => {\n    let gradWidth = 0;\n    let gradHeight = 0;\n    let maxGradHeight = 0;\n    let maxGradWidth = 0;\n    const measurement = context.measurement();\n    const {\n            margin,\n            border,\n            titleSpaces,\n            width,\n            height,\n            maxWidth,\n            maxHeight\n        } = measurement;\n\n    gradHeight = height - (titleSpaces.height + 2 * margin + 2 * border);\n    gradWidth = width - (margin * 2 + border * 2);\n\n    maxGradHeight = maxHeight - (titleSpaces.height + margin * 2 + border * 2);\n    maxGradWidth = maxWidth - (margin * 2 + border * 2);\n\n    let legendBody = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    legendBody.select(`.${classPrefix}-legend-overflow`).remove();\n        // Create a div with scroll when overflow\n    if (maxGradWidth && maxGradWidth < gradWidth) {\n        legendBody = legendBody.style(WIDTH, `${maxGradWidth}px`).style('overflow-x', 'scroll');\n    }\n        // Create a div with scroll when overflow\n    if (maxGradHeight && maxGradHeight < gradHeight) {\n        legendBody.style(HEIGHT, `${maxGradHeight}px`).style('overflow-y', 'scroll');\n    }\n\n    legendBody = makeElement(legendBody, 'div', [1], `${classPrefix}-legend-overflow`);\n\n    legendBody.style(WIDTH, `${gradWidth}px`);\n    legendBody.style(HEIGHT, `${gradHeight}px`);\n\n    const legendItem = getItemContainers(legendBody, data, context);\n    return { legendItem };\n};\n\n/**\n * Creates legend item based on alignment and text orientation\n *\n * @param {Selection} container Point where items are to be mounted\n * @return {Instance} Current instance\n * @memberof Legend\n */\nexport const createItemSkeleton = (context, container) => {\n    const {\n        classPrefix,\n        item\n    } = context.config();\n    const textOrientation = item.text.orientation;\n    const stack = itemStack[textOrientation];\n    const itemSkeleton = makeElement(container, 'div', (d, i) => stack.map(e => [e, d[e], d.color, d.size,\n        d.value, context.fieldName(), i]), `${classPrefix}-legend-item-info`);\n\n    const alignClass = alignmentMap[textOrientation];\n\n    itemSkeleton.classed(alignClass, true);\n    return { itemSkeleton };\n};\n\n/**\n *\n *\n * @param {*} measureType\n * @param {*} stepColorCheck\n */\nexport const applyItemStyle = (item, measureType, stepColorCheck, context) => {\n    const {\n        padding,\n        labelSpaces,\n        iconSpaces,\n        maxIconWidth\n    } = context.measurement();\n\n    const { align } = context.config().align;\n\n    const diff = stepColorCheck ? -padding * 2 : 0;\n\n    if (item[0] === VALUE) {\n        return `${labelSpaces[item[6]][measureType]}px`;\n    }\n\n    if (measureType === 'width' && !stepColorCheck && align === VERTICAL) {\n        return `${maxIconWidth}px`;\n    } else if (align === HORIZONTAL) {\n        return `${maxIconWidth}px`;\n    }\n    return `${iconSpaces[item[6]][measureType] - diff}px`;\n};\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, elem, defaultIcon) {\n    const groupElement = elem;\n    // const { shape, size, update } = d;\n    const shape = d[1] || defaultIcon;\n    const defaultIconSize = DEFAULTICONSIZE[shape] || DEFAULTICONSIZE[DEFAULT];\n    const size = d[3] || defaultIconSize * Math.PI;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            return createShape(d, elem);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        shapeElement.attr('transform', `scale(${size / 100})`);\n        return selectElement(groupElement.node().appendChild(newShape));\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = ICON_MAP(shape).size(size)();\n        }\n        return makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    }\n    d[1] = 'circle';\n    return createShape(d, elem, 'circle');\n};\n\n/**\n * Returns the icon of the legend item\n *\n * @param {Object} datum Data property attached to the item\n * @param {number} width width of the item\n * @param {number} height height of the item\n * @return {Object|string} returns the path string or the string name of the icon\n * @memberof Legend\n */\nexport const getLegendIcon = (datum, width, height, defaultIcon) => {\n    const icon = ICON_MAP(datum[1]);\n\n    if (icon) {\n        return icon.size(datum[3] || Math.min(width, height) * Math.PI);\n    }\n    return ICON_MAP(datum[3] ? 'circle' : defaultIcon).size(datum[3] || Math.min(width, height) * Math.PI);\n};\n\n/**\n *\n *\n */\nexport const renderIcon = (icon, container, datum, context) => {\n    const {\n        classPrefix,\n        iconHeight,\n        padding,\n        color,\n        iconWidth,\n        align\n    } = context;\n\n    let { maxIconWidth } = context;\n\n    if (align === HORIZONTAL) {\n        maxIconWidth = iconWidth + 2 * padding;\n    }\n    const svg = makeElement(container, 'svg', f => [f], `${classPrefix}-legend-icon-svg`)\n    .attr(WIDTH, maxIconWidth)\n    .attr(HEIGHT, iconHeight)\n    .style(WIDTH, `${Math.ceil(maxIconWidth)}px`)\n    .style(HEIGHT, `${iconHeight}px`);\n\n    const transalate = maxIconWidth / 2 - padding;\n\n    if (icon !== RECT) {\n        const group = makeElement(svg, 'g', [datum[1]], `${classPrefix}-legend-icon`);\n        createShape(datum, group, icon)\n                        .attr('transform', `translate(${transalate} ${iconHeight / 2})`)\n                        .attr('fill', datum[2] || color)\n                        .attr('stroke', datum[2] || color);\n    } else {\n        makeElement(svg, RECT, [datum[1]], `${classPrefix}-legend-icon`)\n                        .attr('x', 0)\n                        .attr('y', 0)\n                        .attr(WIDTH, maxIconWidth)\n                        .attr(HEIGHT, iconHeight)\n                        .attr('fill', datum[2] || color);\n    }\n};\n\n/**\n * Renders the items in the legend i.e, icon and text\n *\n * @param {DOM} container Point where item is to be mounted\n * @memberof Legend\n */\nexport const renderDiscreteItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n           item,\n           classPrefix,\n           shape,\n           align\n    } = context.config();\n    const {\n        maxIconWidth,\n        padding\n    } = context.measurement();\n    const {\n            width: iconWidth,\n            height: iconHeight,\n            color,\n            className\n        } = item.icon;\n    const textOrientation = item.text.orientation;\n    const formatter = item.text.formatter;\n\n    labelManager.useEllipsesOnOverflow(true);\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, false, context),\n        height: d => applyItemStyle(d, HEIGHT, false, context),\n        'text-align': CENTER,\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = context.metaData();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context))\n            .style(`padding-${textOrientation === RIGHT ? LEFT : RIGHT}`, '0px')\n            .style('margin-left', `${align === HORIZONTAL ? HORIZONTAL_BUFFER : VERTICAL_BUFFER}px`);\n        } else {\n            // const icon = getLegendIcon(d, iconWidth, iconHeight, type);\n            selectElement(this).classed(`${classPrefix}-${className}`, true);\n            selectElement(this).classed(`${classPrefix}-${className}-${i}`, true);\n            renderIcon(shape, selectElement(this), d, {\n                classPrefix,\n                // iconWidth,\n                iconWidth: 2 * Math.sqrt(d[3] / Math.PI) || iconWidth,\n                iconHeight,\n                maxIconWidth,\n                padding,\n                color,\n                align\n            });\n        }\n    });\n};\n\n/**\n* Renders the items in the legend i.e, icon and text\n*\n* @param {DOM} container Point where item is to be mounted\n* @memberof Legend\n*/\nexport const renderStepItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n      item,\n      position,\n      classPrefix\n   } = context.config();\n    const {\n      maxItemSpaces,\n      maxIconWidth,\n      padding\n   } = context.measurement();\n    const {\n       width,\n       height,\n       color\n   } = item.icon;\n    const {\n        formatter\n   } = item.text;\n\n    labelManager.useEllipsesOnOverflow(true);\n    const { iconHeight, iconWidth, stepPadding } = positionConfig[position].getStepSpacesInfo({\n        maxItemSpaces, height, width\n    });\n\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, stepPadding.horizontal, context),\n        height: d => applyItemStyle(d, HEIGHT, stepPadding.vertical, context),\n        'text-align': 'center',\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = context.metaData();\n    const data = context.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            const formattedData = formatter([data[d[6]].range[0], data[d[6]].range[1]], i, dataArr, context);\n            selectElement(this).text(formattedData);\n        } else {\n            renderIcon(RECT, selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                iconHeight,\n                maxIconWidth,\n                color\n            });\n        }\n    });\n};\n","import {\n    FieldType,\n    DimensionSubtype,\n    formatTemporal\n} from 'muze-utils';\nimport SimpleLegend from './simple-legend';\nimport { DISCRETE, LEFT, SIZE } from '../enums/constants';\nimport { getScaleInfo } from './legend-helper';\nimport { createLegendSkeleton, createItemSkeleton, renderDiscreteItem } from './renderer';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class DiscreteLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new DiscreteLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof DiscreteLegend\n     */\n    static type () {\n        return DISCRETE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof DiscreteLegend\n     */\n    dataFromScale () {\n        const scale = this.scale();\n        const { scaleType, domain, scaleFn } = getScaleInfo(scale);\n        let domainForLegend = [...new Set(domain)];\n        const field = this.metaData().getFieldspace().fields[0];\n        const { type, subtype } = field.schema();\n        const len = domainForLegend.length;\n        domainForLegend = domainForLegend.map((ele, i) => {\n            let value = 0;\n            let range = 0;\n            const rawVal = domainForLegend[i];\n            if (type === FieldType.MEASURE) {\n                value = (+domainForLegend[i]).toFixed(0);\n                const nextVal = domainForLegend[i + 1] ? +domainForLegend[i + 1] : +value;\n                range = [value, i === len - 1 ? nextVal.toFixed(0) : nextVal.toFixed(0) - 1];\n            } else {\n                let domainVal = rawVal;\n                if (subtype === DimensionSubtype.TEMPORAL) {\n                    domainVal = formatTemporal(domainForLegend[i], field.minimumConsecutiveDifference());\n                }\n                value = domainVal;\n                range = [domainVal];\n            }\n            return {\n                [scaleType]: scale[scaleFn](ele),\n                value,\n                id: i,\n                range,\n                rawVal\n            };\n        }).filter(d => d.value !== null);\n\n        domainForLegend = scaleType === SIZE ? domainForLegend.sort((a, b) => a[scaleType] - b[scaleType])\n            : domainForLegend;\n        return domainForLegend;\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const data = this.data();\n        const { classPrefix } = this.config();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n        renderDiscreteItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n}\n","import { makeElement, applyStyle } from 'muze-utils';\nimport { ContinousAxis } from '@chartshq/muze-axis';\nimport { BOTTOM, RIGHT } from '../enums/constants';\nimport { ALIGN, LEGEND_MARKER_PROPS } from './defaults';\nimport '../styles.scss';\n\n/**\n *\n *\n * @param {*} data\n *\n */\nexport const getGradientDomain = (data) => {\n    if (typeof data[0].value === 'number') {\n        return data.reduce((accumulator, currentValue) =>\n            [Math.min(currentValue.value, accumulator[0]), Math.max(currentValue.value, accumulator[1])],\n                [Number.MAX_VALUE, Number.MIN_VALUE]);\n    }\n    return data.map(e => e.value);\n};\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} domain\n *\n */\nexport const makeLinearGradient = (container, data, domain) => {\n    const defs = makeElement(container, 'defs', [1]);\n    const linearGradient = makeElement(defs, 'linearGradient', [1])\n                .attr('id', 'linear-gradient')\n                .attr('x1', '0%')\n                .attr('y2', '0%');\n\n    makeElement(linearGradient, 'stop', data, 'stop-gradient')\n                    .attr('offset', d => `${(d.value - domain[0]) * 100 / (domain[1] - domain[0]) || 1}%`)\n                    .attr('stop-color', d => d.color);\n    return linearGradient;\n};\n\n/**\n * Creates an axis cell with a linear axis for computing space and\n * creating gradient legend\n *\n * @return {AxisCell} Instance of Axis Cell for the gradient axis\n * @memberof Legend\n */\nexport const createAxis = (context) => {\n    const data = context.data();\n    const { align } = context.config();\n    const AxisCell = context._cells.AxisCell;\n    const newAxis = new ContinousAxis({\n        id: `legend-${context._id}`,\n        orientation: align === ALIGN.VERTICAL ? RIGHT : BOTTOM,\n        style: context._computedStyle,\n        nice: false,\n        showAxisName: false,\n        tickValues: data.map(d => d.value),\n        fixedBaseline: false,\n        labels: {\n            rotation: null\n        }\n    }, { labelManager: context._labelManager });\n\n    newAxis.domain(getGradientDomain(data));\n    newAxis.range([1, 1]);\n    return new AxisCell().source(newAxis).config({\n        margin: { left: 0, bottom: 0, top: 0, right: 0 }\n    });\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} classPrefix\n *\n * @memberof GradientLegend\n */\nconst createLegendSkeleton = (container, classPrefix, data) => {\n    const domain = getGradientDomain(data);\n    const legendContainer = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    const legendGradSvg = makeElement(legendContainer, 'svg', [1], `${classPrefix}-gradient`);\n    const legendGradCont = makeElement(legendGradSvg, 'g', [1], `${classPrefix}-gradient-group`);\n    const linearGradient = makeLinearGradient(legendGradSvg, data, domain);\n    const legendRect = makeElement(legendGradCont, 'rect', [1], `${classPrefix}-gradient-rect`);\n\n    return {\n        legendContainer,\n        legendGradCont,\n        legendGradSvg,\n        linearGradient,\n        legendRect\n    };\n};\n\n/**\n * Renders the axis for the gradient\n *\n * @param {Selection} container Point where axis is to be mounted\n * @param {number} height Height for axis\n * @param {number} width Width for axis\n * @memberof Legend\n */\nexport const renderAxis = (context, container, height, width) => {\n    const axis = context.axis();\n\n    axis.source().config({\n        tickFormat: (val, i) => context.config().item.text.formatter(val, i, context.metaData(), context)\n    });\n    axis.setAvailableSpace(width, height);\n    axis.render(container.node());\n    axis.source().render();\n};\n\n/**\n * Renders gradient legends\n *\n * @param {Selection} container Point where the legend is to be appended\n * @memberof GradientLegend\n */\nexport const renderGradient = (context, container) => {\n    let gradHeight = 0;\n    let gradWidth = 0;\n    const {\n        align,\n        classPrefix,\n        item\n    } = context.config();\n    const data = context.data();\n    // Create the skeleton for the legend\n    const {\n        legendContainer,\n        legendGradSvg,\n        legendGradCont,\n        linearGradient,\n        legendRect\n    } = createLegendSkeleton(container, classPrefix, data);\n    const labelDim = context.axis().source().getAxisDimensions().tickDimensions;\n    const {\n        padding,\n        margin,\n        border,\n        titleSpaces,\n        maxItemSpaces,\n        maxHeight,\n        maxWidth,\n        height,\n        width\n    } = context.measurement();\n    const gradientDimensions = {};\n\n    gradHeight = Math.floor(Math.min(height, maxHeight) - (titleSpaces.height + 2 * margin + 2 * border));\n    gradWidth = Math.floor(Math.min(width, maxWidth) - (margin * 2 + border * 2));\n\n    if (align === ALIGN.HORIZONTAL) {\n        gradientDimensions.height = item.icon.height;\n        gradientDimensions.width = gradWidth - 2 * padding - labelDim.width / 2;\n        linearGradient.attr('x2', '100%').attr('y1', '0%');\n        legendGradCont.attr('transform', `translate( ${labelDim.width / 2} ${LEGEND_MARKER_PROPS.size + 4})`);\n        renderAxis(context, legendContainer, gradHeight - item.icon.height - padding, gradWidth - 2 * padding - 1);\n\n        applyStyle(legendContainer, {\n            height: `${maxItemSpaces.height + border + padding}px`,\n            width: `${Math.min(width, maxWidth)}px`,\n            padding: `${padding}px`\n        });\n\n        legendRect.attr('height', gradientDimensions.height);\n        legendRect.attr('width', gradientDimensions.width - labelDim.width / 2);\n    } else {\n        gradientDimensions.height = gradHeight - 2 * padding - labelDim.height / 2;\n        gradientDimensions.width = item.icon.width;\n        linearGradient.attr('x2', '0%').attr('y1', '100%');\n        legendGradCont.attr('transform', `translate(${LEGEND_MARKER_PROPS.size + 4} ${labelDim.height / 2})`);\n        renderAxis(context, legendContainer, gradHeight - 2 * padding - 1, gradWidth - item.icon.width - padding * 2);\n\n        applyStyle(legendContainer, {\n            height: `${Math.min(height, maxHeight)}px`,\n            width: `${maxWidth}px`,\n            padding: `${padding}px`\n        });\n        legendRect.attr('height', gradientDimensions.height - labelDim.height / 2);\n        legendRect.attr('width', gradientDimensions.width);\n    }\n\n    // Apply Styles to the legend plot area\n    applyStyle(legendGradSvg, {\n        height: `${gradientDimensions.height + LEGEND_MARKER_PROPS.size + 4}px`,\n        width: `${gradientDimensions.width + LEGEND_MARKER_PROPS.size + 4}px`\n    });\n\n        // Apply styles to the legend rect\n    applyStyle(legendRect, {\n        fill: 'url(#linear-gradient)'\n    });\n    legendGradSvg.attr('height', gradientDimensions.height + LEGEND_MARKER_PROPS.size + 4);\n    legendGradSvg.attr('width', gradientDimensions.width + LEGEND_MARKER_PROPS.size + 4);\n\n    context.measurement({\n        gradientDimensions\n    });\n    context._legendGradientSvg = legendGradSvg;\n    return context;\n};\n","import SimpleLegend from './simple-legend';\nimport { getScaleInfo, getInterpolatedData, getInterpolatedArrayData } from './legend-helper';\nimport { GRADIENT, LEFT, SIZE } from '../enums/constants';\nimport { HIGHLIGHT } from '../enums/behaviours';\nimport { Marker } from '../enums/side-effects';\nimport { renderGradient, createAxis } from './gradient-helper';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class GradientLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new GradientLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof GradientLegend\n     */\n    static type () {\n        return GRADIENT;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axis\n     *\n     * @memberof GradientLegend\n     */\n    axis (...axis) {\n        if (axis.length) {\n            this._axis = axis[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof GradientLegend\n     */\n    dataFromScale () {\n        let domainForLegend = [];\n        const scale = this.scale();\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        // defining scaleParams\n        const scaleParams = {\n            smartLabel: this.labelManager(),\n            measures: this.measurement(),\n            alignment: this.config().position,\n            minTickDistance: this.minTickDistance()\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainForLegend[0] = domain[0];\n            }\n            domainForLegend = [...domainForLegend, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainForLegend.push(domain[1]);\n            }\n            // Sorting the domain Array\n            domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n            domainForLegend = getInterpolatedArrayData(domainForLegend, scaleParams);\n        } else {\n            domainForLegend = getInterpolatedData(domain, steps - 1, scaleParams);\n        }\n        domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n        return domainForLegend.map((ele, i) => {\n            const value = domainForLegend[i];\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor()\n                    : scale[scaleFn](Math.floor(ele)),\n                value: +value.toFixed(2),\n                id: i\n            };\n        }).filter(d => d.value !== null);\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        const axis = createAxis(this);\n        const axisSpace = axis.getLogicalSpace();\n        const space = { width: axisSpace.width - effPadding, height: axisSpace.height - effPadding };\n        const axisDomainLength = axis.source().domain().length;\n        const labelSpaces = new Array(axisDomainLength).fill(space);\n\n        this.axis(axis);\n        return labelSpaces;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof GradientLegend\n     */\n    getDrawingContext () {\n        return {\n            svgContainer: this._legendGradientSvg\n        };\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        renderGradient(this, legendContainer);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.mapSideEffects({\n            [HIGHLIGHT]: [Marker]\n        });\n\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof SimpleLegend\n     */\n    getCriteriaFromData (data) {\n        return [[this.fieldName()], [data.value]];\n    }\n\n    getRangeFromIdentifiers ({ fields, criteria }) {\n        return fields.reduce((range, v) => {\n            range[v] = criteria[v];\n            return range;\n        }, {});\n    }\n}\n","import SimpleLegend from './simple-legend';\nimport {\n    getScaleInfo,\n    getInterpolatedData,\n    getDomainBounds,\n    getItemMeasures\n} from './legend-helper';\nimport {\n    createLegendSkeleton,\n    createItemSkeleton,\n    renderStepItem\n} from './renderer';\nimport { STEP, RECT, LEFT, SIZE, UPPER, LOWER, HORIZONTAL } from '../enums/constants';\nimport { stepData } from './position-config';\nimport '../styles.scss';\nimport { STEP_DEFAULT_CONFIG, DEFAULT_MEASUREMENT } from './defaults';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class StepLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new StepLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof StepLegend\n     */\n    static type () {\n        return STEP;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof StepLegend\n     */\n    static defaultConfig () {\n        STEP_DEFAULT_CONFIG.buffer[HORIZONTAL] = 0;\n        return STEP_DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof StepLegend\n     */\n    dataFromScale () {\n        let domainLeg = [];\n        const scale = this.scale();\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        const { formatter } = this.config();\n        const domainBounds = {\n            lower: null, upper: null\n        };\n\n        // defining scaleParams\n        const scaleParams = {\n            smartLabel: this.labelManager(),\n            measures: this.measurement(),\n            alignment: this.config().position,\n            minTickDistance: this.minTickDistance()\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainBounds.lower = [`${formatter.bounds.lower} ${steps[0]}`];\n            }\n            domainLeg = [...domainLeg, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainBounds.upper = [`${formatter.bounds.upper} ${steps[steps.length - 1]}`];\n            }\n        } else {\n            domainLeg = getInterpolatedData(domain, steps, scaleParams);\n        }\n\n        domainLeg = [...new Set(domainLeg)].sort((a, b) => a - b);\n        domainLeg = domainLeg.map((ele, i) => {\n            let value = null;\n            if (i < domainLeg.length - 1) {\n                value = `${(ele.toFixed(0))} - ${(+domainLeg[i + 1].toFixed(0))}`;\n            } else if (domainLeg.length === 1) {\n                value = ele.toFixed(1);\n            }\n            return {\n                [scaleType]: scaleType === SIZE\n                ? scale[scaleFn](ele) * scale.getScaleFactor()\n                : scale[scaleFn](ele),\n                value,\n                id: i + 1,\n                range: [ele, domainLeg[i + 1]]\n            };\n        }).filter(d => d.value !== null);\n\n        if (domainBounds.lower) {\n            const lowerBounds = getDomainBounds(LOWER, { scale, scaleFn, scaleType },\n                { domain, steps, domainBounds });\n            domainLeg = [lowerBounds, ...domainLeg];\n        }\n        if (domainBounds.upper) {\n            const upperBounds = getDomainBounds(UPPER, { scale, scaleFn, scaleType },\n            { domain, steps, domainBounds, domainLeg });\n            domainLeg = [...domainLeg, upperBounds];\n        }\n\n        return domainLeg;\n    }\n\n     /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces () {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        const {\n            item\n        } = this.config();\n        const stepItemBuffer = DEFAULT_MEASUREMENT.padding * 2;\n        return getItemMeasures(this, 'range', item.text.formatter, stepItemBuffer);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return RECT;\n    }\n\n     /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const { classPrefix, position } = this.config();\n        const data = stepData(this.data())[position];\n\n        const legendContainer = super.render(this.mount());\n\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n\n        renderStepItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        return {\n            [fieldName]: data.range\n        };\n    }\n}\n","import { GradientLegend, DiscreteLegend, StepLegend } from '@chartshq/muze-legend';\n\n/**\n * Contants to be used as attr\n */\nexport const ROWS = 'rows';\nexport const COLUMNS = 'columns';\nexport const DATA = 'data';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\nexport const DETAIL = 'detail';\nexport const LAYERS = 'layers';\nexport const TRANSFORM = 'transform';\nexport const INITIALIZED = 'isInitialized';\nexport const SOURCE = 'source';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const PADDING = 'padding';\nexport const BORDER = 'border';\nexport const MARGIN = 'margin';\nexport const CONFIG = 'config';\nexport const MOUNT = 'mount';\nexport const CANVAS_UPDATED = 'canvasUpdated';\nexport const CLASSPREFIX = 'classPrefix';\nexport const POLICIES = '_policies';\nexport const LEGEND = 'legend';\nexport const TITLE = 'title';\nexport const SUB_TITLE = 'subtitle';\nexport const RESOLVE = 'resolve';\nexport const DISCRETE = 'discrete';\nexport const STEP_COLOR = 'step-color';\nexport const GRADIENT = 'gradient';\nexport const LINEAR = 'linear';\nexport const ORDINAL = 'ordinal';\nexport const MUZE_PREFIX = 'muze';\n\nexport const TITLE_TEMPLATE_NOT_ALLOWED_TAGS = [\n    'script',\n    'style'\n];\n\nexport const ICON_SHAPES = {\n    SQUARE: 'square',\n    CIRCLE: 'circle'\n};\n\nexport const IS_POINT_MAP = {\n    true: ICON_SHAPES.CIRCLE,\n    false: ICON_SHAPES.SQUARE\n};\n\nexport const LEGEND_TYPE_MAP = {\n    [`${ORDINAL}-${true}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${COLOR}`]: StepLegend,\n    [`${LINEAR}-${false}-${COLOR}`]: GradientLegend\n};\n\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const GROUP = 'group';\nexport const LAYOUT = 'layout';\nexport const RETINAL = 'retinal';\nexport const DIMENSION = 'dimension';\nexport const MEASURE = 'measure';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\nexport const HORIZONTAL_CENTER = 'h-center';\nexport const VERTICAL_CENTER = 'v-center';\nexport const HIDDEN = 'hidden';\nexport const OVERFLOW = 'overflow';\nexport const OVERFLOW_X = 'overflow-x';\nexport const OVERFLOW_Y = 'overflow-y';\nexport const AUTO = 'auto';\nexport const VISIBLE = 'visible';\nexport const VERTICAL_SCROLL_BAR = 'verticalScrollBar';\nexport const HORIZONTAL_SCROLL_BAR = 'horizontalScrollBar';\nexport const GRID = 'grid';\nexport const POINT = 'point';\nexport const MESSAGE = 'message';\nexport const NO_DATA_MESSAGE = 'No data to display';\n\n","import { ComposedVars, SimpleVariable } from '@chartshq/visual-group';\nimport { TITLE_TEMPLATE_NOT_ALLOWED_TAGS } from './constants';\n\n/**\n * This method creates a new composed variable instance from multiple variables. This is required when we have multiple\n * variables on a single axis and the union of domain of all the variables needs to be set on the axis.\n *\n * To create a new composed variable from multiple fields,\n * ```\n *  const sharedVar = share('open', 'high', 'low', 'close');\n *  canvas.rows([sharedVar])\n *      .columns(['date']);\n * ```\n *\n * @module Operators\n * @public\n * @function share\n * @param {Array} vars Variable names.\n *\n * @return {ComposedVars} Instance of composed variable\n */\nexport const share = (...vars) => new ComposedVars(...vars.map(variable => new SimpleVariable(variable)));\n\n/**\n *\n *\n * @param {*} node\n *\n */\nfunction treeShakeNode (node) {\n    if (node.nodeType !== Node.ELEMENT_NODE) { return; }\n\n    if (TITLE_TEMPLATE_NOT_ALLOWED_TAGS.indexOf(node.tagName.toLowerCase()) !== -1) {\n        node.parentNode.removeChild(node);\n    } else {\n        for (const childNode of node.childNodes) {\n            treeShakeNode(childNode);\n        }\n    }\n}\n\n/**\n * A string template tagged function which sanitizes input html formatted string according to the allowed html tags.\n * This is used to render html in canvas components like title and tooltip.\n *\n * To render html in canvas components,\n * ```\n *     canvas.title(html`<span style=font-size:20px;>TITLE</span>`);\n * ```\n *\n * @public\n * @module Operators\n * @function html\n * @param {Array.<string>} strings - The string parts of the template.\n * @param {Array} exps - The list of evaluated expression values.\n *\n * @return {Function} Returns a function which returns the sanitized html string.\n */\nexport function html (strings, ...exps) {\n    let htmlCode = '';\n    const expLn = exps.length;\n    let i = 0;\n\n    for (; i < expLn; ++i) {\n        htmlCode += strings[i] + exps[i];\n    }\n    htmlCode += strings[i];\n\n    const frag = document.createDocumentFragment();\n    const wrapper = document.createElement('div');\n\n    frag.appendChild(wrapper);\n    wrapper.innerHTML = htmlCode;\n\n    treeShakeNode(wrapper);\n    const { innerHTML } = wrapper;\n\n    return () => innerHTML;\n}\n","import { mergeRecursive, CommonProps } from 'muze-utils';\n\nconst defaultPolicy = (registrableComponents) => {\n    const aliases = registrableComponents.map(comp => comp.alias());\n    return {\n        behaviours: {\n            '*': (propagationPayload) => {\n                const propagationCanvas = propagationPayload.sourceCanvas;\n                return propagationCanvas ? aliases.indexOf(propagationCanvas) !== -1 : true;\n            }\n        }\n    };\n};\n\nconst listenerFn = (canvas, fn) => () => {\n    const valueMatrix = canvas.composition().visualGroup.matrixInstance().value;\n    valueMatrix.each(cell => fn(cell.valueOf().firebolt()));\n};\n\nconst canvasIterator = (canvases, iteratorFn, cFn) => {\n    canvases.forEach((canvas) => {\n        const matrix = canvas.composition().visualGroup.matrixInstance().value;\n        matrix.each(cell => iteratorFn(cell.valueOf().firebolt()));\n        cFn && cFn(canvas);\n        // Also register actions on canvas update\n        const throwback = canvas._throwback;\n\n        throwback.registerImmediateListener([CommonProps.MATRIX_CREATED],\n            listenerFn(canvas, iteratorFn));\n    });\n};\n\nconst registerActions = (context, type, fnName, deps) => {\n    const canvases = context._registrableComponents;\n\n    canvases.forEach((canvas) => {\n        const vGroup = canvas.composition().visualGroup;\n\n        vGroup.resolver().setFireboltDependencies(type, deps);\n        canvas.firebolt()[fnName](deps);\n    });\n};\n\n/**\n * This class is initiated only once in lifecycle and is reponsible for regisration of physical and behavioural\n * actions and side effects and the mapping between them.\n *\n * To get the instance of action model\n * ```\n *  const ActionModel = muze.ActionModel;\n * ```\n *\n * @public\n * @module ActionModel\n */\nclass ActionModel {\n    constructor () {\n        this._registrableComponents = [];\n    }\n\n    /**\n     * Takes an array of canvases on which the physical and behavioural actions will get registered.\n     *\n     * @public\n     * @param  {Canvas} components Array of canvases\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    for (...components) {\n        this._registrableComponents = components;\n        return this;\n    }\n\n    /**\n     * Registers physical actions on the canvases. It takes an object with key as the name of action and value having\n     * the definition of the action.\n     *\n     * To register a {@link PhysicalAction},\n     * ```\n     *  const ActionModel = muze.ActionModel;\n     *  ActionModel\n     *       // Physical actions will be registered on these canvases.\n     *      .for(canvas)\n     *      .registerPhysicalActions({\n     *          // Key is the name of physical action.\n     *          ctrlClick: (firebolt) => (targetEl, behaviours) => {\n     *              targetEl.on('click', function (data) {\n     *                  const event = utils.getEvent();\n     *                  const pos = utils.getClientPoint(event, this);\n     *                  // Get the data point nearest to the mouse position.\n     *                  const nearestPoint = firebolt.context.getNearestPoint(pos, {\n     *                      data\n     *                  });\n     *                  // Prepare the payload\n     *                  const payload = {\n     *                      criteria: nearestPoint.id\n     *                  };\n     *                  behaviours.forEach((behaviour) => firebolt.dispatchBehaviour(behaviour, payload));\n     *              });\n     *          }\n     *      });\n     * ```\n     * @public\n     *\n     * @param {Object} action Names of physical actions and their definitions.\n     *\n     * @return {ActionModel} Instance of the action model.\n     */\n    registerPhysicalActions (action) {\n        registerActions(this, 'physicalActions', 'registerPhysicalActions', action);\n\n        return this;\n    }\n\n    /**\n     * Registers behavioural actions on the canvases. It takes definitions of the behavioural actions and registers\n     * them on the canvases. Every behavioural action must inherit the {@link GenericBehaviour} class.\n     *\n     * To register a behavioural action\n     * ```\n     *  // Define a new behavioural action\n     *  class SingleSelectBehaviour extends GenericBehaviour {\n     *      static formalName () {\n     *          return 'singleSelect';\n     *      }\n     *\n     *      setSelectionSet (addSet, selectionSet) {\n     *          if (addSet === null) {\n     *              selectionSet.reset();\n     *          } else if (addSet.length) {\n     *              const existingAddSet = selectionSet.getExistingEntrySet(addSet);\n     *              if (existingAddSet.length){\n     *                  selectionSet.reset();\n     *              } else {\n     *               selectionSet.add(addSet);\n     *              }\n     *          } else {\n     *              selectionSet.reset();\n     *          }\n     *      }\n     * }\n     * muze.ActionModel.registerBehaviouralActions(SingleSelectBehaviour);\n     * ```\n     *\n     * @public\n     *\n     * @param {GenericBehaviour} actions Definition of behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerBehaviouralActions (...actions) {\n        registerActions(this, 'behaviouralActions', 'registerBehaviouralActions', actions);\n        return this;\n    }\n\n    /**\n     * Registers the mapping of physical and behavioural actions. This mapping is used to establish which behavioural\n     * actions should be dispatched on any triggering of physical actions.\n     *\n     * To map physical actions with behavioural actions,\n     * ```\n     *  muze.ActionModel.registerPhysicalBehaviouralMap({\n     *      ctrlClick: {\n     *          behaviours: ['select'] // This array must be the formal names of the behavioural actions.\n     *      }\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Contains the physical and behavioural action map.\n     * ```\n     *   {\n     *      // Name of the physical action\n     *      click: {\n     *          // Target element selector. This is an optional field. If not passed, then by default takes the\n     *          // container element of visual unit.\n     *          target: '.muze-layers-area path',\n     *          // Behaviours which should be dispatched on triggering of the mapped physical action.\n     *          behaviours: ['select']\n     *      }\n     *   }\n     * ```\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPhysicalBehaviouralMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalBehaviouralMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalBehaviouralMap(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers what behaviour to propagate on dispatch of a certain behavioural action. By default, when any\n     * behavioural action is dispatched, then the same behavioural action gets propagated to all the other canvases.\n     * This can be changed using this api.\n     *\n     * To register what behaviour should be propagated on dispatch of any behavioural action,\n     * ```\n     *  ActionModel.for(canvas1, canvas2).registerPropagationBehaviourMap({\n     *      select: 'filter',\n     *      brush: 'filter'\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Propagation behaviour map.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPropagationBehaviourMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPropagationBehaviourMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPropagationBehaviourMap(map);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of side effects and behavioural actions. It takes an object which contains key as the\n     * name of behavioural action and the side effects which will be linked to it.\n     *\n     * To map side effects to select behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: ['infoBox'] // This array must be the formal names of the side effects\n     *  });\n     * ```\n     *\n     * To map side effects to select behaviour, but disable all the default side effects attached with this behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: {\n     *          effects: ['infoBox'],\n     *          preventDefaultActions: true\n     *      }\n     *  });\n     * @public\n     * @param {Object} map Mapping of behavioural actions and side effects.\n     * ```\n     *     {\n     *          select: ['infoBox']\n     *     }\n     * ```\n     * @return {ActionModel} Instance of action model.\n     */\n    mapSideEffects (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.mapSideEffects(map);\n        }, (canvas) => {\n            canvas.firebolt().mapSideEffects(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers the side effects on the registered canvases. It takes definitions of side effects and registers them\n     * on the canvases. Every side effect must inherit the base class {@link GenericSideEffect} or\n     * {@link SpawnableSideEffect} or {@link SurrogateSideEffect} class.\n     *\n     * ```\n     * // Define a custom side effect\n     *  class InfoBox extends SpawnableSideEffect {\n     *      static formalName () {\n     *          return 'infoBox';\n     *      }\n     *\n     *      apply (selectionSet) {\n     *      }\n     *  }\n     *  muze.ActionModel.registerSideEffects(InfoBox);\n     * ```\n     * @public\n     * @param  {GenericSideEffect} sideEffects Definition of side effects.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerSideEffects (...sideEffects) {\n        registerActions(this, 'sideEffects', 'registerSideEffects', sideEffects);\n        return this;\n    }\n\n    /**\n     * Breaks the link between behavioural actions and physical actions. It takes an array of behavioural action\n     * and it's physical action.\n     *\n     * To dissociate behavioural actions from physical actions\n     * ```\n     *  muze.ActionModel.dissociateBehaviour(['select', 'click'], ['highlight', 'hover']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of behavioural action and physical action.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateBehaviour (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateBehaviour(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateBehaviour(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between side effects and behavioural actions. It takes an array of formal names of the side\n     * effects and it's linked behavioural action.\n     *\n     * To dissociate side effects from behavioural actions\n     * ```\n     *  muze.ActionModel.dissociateSideEffect(['crossline', 'highlight'], ['selectionBox', 'brush']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of side effects and behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateSideEffect (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateSideEffect(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateSideEffect(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * By default cross interactivity is disabled between canvases. This enables cross interaction between the canvases\n     * so that any action happening in one canvas gets dispatched on other canvases as well. An optional policy can also\n     * be passed in this method. The policy can be used to control on which canvases the behavioural actions and\n     * side effects gets dispatched.\n     *\n     * To just enable cross interactivity between two canvases,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity();\n     * ```\n     *\n     * To enable cross interactivity but enable any behavioural action only when it is triggered from canvas1.\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          behaviours: {\n     *              // Here * stands for any behavioural action name. We can also give any name of behavioural action\n     *              // in place of this.\n     *              '*': (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     *\n     * To enable cross interactivity but enable tooltip effect if the action is propagated from canvas1,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          sideEffects: {\n     *              tooltip: (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} policy Policy definition.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    enableCrossInteractivity (policy = {}) {\n        const registrableComponents = this._registrableComponents;\n        const mergedPolicy = mergeRecursive(mergeRecursive({}, defaultPolicy(registrableComponents)), policy);\n\n        registrableComponents.forEach((canvas) => {\n            canvas.firebolt().crossInteractionPolicy(mergedPolicy);\n        });\n\n        return this;\n    }\n}\n\nexport const actionModel = (() => new ActionModel())();\n","import { MUZE_PREFIX } from '../constants';\n\nexport const TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 4,\n    className: `${MUZE_PREFIX}-title-container`\n};\n\nexport const SUB_TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 16,\n    maxLines: 2,\n    className: `${MUZE_PREFIX}-subtitle-container`\n};\n\nexport const MESSAGE_CONFIG = {\n    className: `${MUZE_PREFIX}-message-container`\n};\n\nexport const CANVAS = 'canvas';\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    ROWS,\n    COLUMNS,\n    COLOR,\n    SHAPE,\n    SIZE,\n    DETAIL,\n    LAYERS,\n    TRANSFORM,\n    TITLE,\n    SUB_TITLE\n} from '../constants';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG } from './defaults';\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Canvas.\n * Canvas merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module LocalOptions\n */\n\nexport const localOptions = {\n    [ROWS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLUMNS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLOR]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SHAPE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SIZE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [DETAIL]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n\n    [LAYERS]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [TRANSFORM]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object'\n        }\n    }\n};\n\nexport const canvasOptions = {\n    [TITLE]: {\n        value: [null, null],\n        meta: {\n            takesMultipleParams: true,\n            typeCheck: ([arg1, arg2]) => typeof arg1 === 'function' && typeof arg2 === 'object',\n            sanitization: ([title, titleConfig]) => {\n                let t = title;\n                if (typeof title === 'string' || !title) {\n                    t = () => title;\n                }\n                const defConfig = mergeRecursive({}, TITLE_CONFIG);\n                return [t, mergeRecursive(defConfig, titleConfig)];\n            }\n        }\n    },\n    [SUB_TITLE]: {\n        value: [null, null],\n        meta: {\n            takesMultipleParams: true,\n            typeCheck: ([arg1, arg2]) => typeof arg1 === 'function' && typeof arg2 === 'object',\n            sanitization: ([subtitle, subtitleConfig]) => {\n                let sub = subtitle;\n                if (typeof subtitle === 'string' || !subtitle) {\n                    sub = () => subtitle;\n                }\n                const defConfig = mergeRecursive({}, SUB_TITLE_CONFIG);\n                return [sub, mergeRecursive(defConfig, subtitleConfig)];\n            }\n        }\n    }\n};\n","export default class LayoutComponent {\n    constructor (name, dimensions, seed) {\n        this._seed = seed;\n        this._boundBox = {\n            height: dimensions.height,\n            width: dimensions.width,\n            top: null,\n            left: null\n        };\n        this._renderAt = null;\n        this._alignWith = null;\n        this._alignment = null;\n        this._target = null;\n        this._position = null;\n        this._componentName = name;\n        this._className = null;\n    }\n\n    getLogicalSpace () {\n        throw new Error('getLogicalSpace is not defined');\n    }\n\n    setSpatialConfig () {\n        throw new Error('setSpatialSpace is not defined');\n    }\n\n    name (param) {\n        if (param) {\n            this._componentName = param;\n        }\n        return this._componentName;\n    }\n\n    target (param) {\n        if (param) {\n            this._target = param;\n        }\n        return this._target;\n    }\n\n    position (param) {\n        if (param) {\n            this._position = param;\n        }\n        return this._position;\n    }\n\n    alignment (param) {\n        if (param) {\n            this._alignment = param;\n        }\n        return this._alignment;\n    }\n\n    alignWith (param) {\n        if (param) {\n            this._alignWith = param;\n        }\n        return this._alignWith;\n    }\n\n    renderAt (param) {\n        if (param) {\n            this._renderAt = param;\n        }\n        return this._renderAt;\n    }\n\n    boundBox (param) {\n        if (param) {\n            Object.assign(this._boundBox, param);\n        }\n        return this._boundBox;\n    }\n\n    className (param) {\n        if (param) {\n            this._className = param;\n        }\n        return this._className;\n    }\n\n    draw () {\n        throw new Error('draw is not defined');\n    }\n\n    attachListener () {\n        return this;\n    }\n  }\n\n","import LayoutComponent from './layoutComponent';\n\nclass DummyComponent extends LayoutComponent {\n    getLogicalSpace () {\n        return {\n            width: this.boundBox().width,\n            height: this.boundBox().height\n        };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n        return this;\n    }\n\n    draw () {\n        if (!this.component) {\n            throw new Error(`Component not set for ${this.componentName}`);\n        }\n        this.component.mount(document.getElementById(this.renderAt)); // Change the draw method to component draw\n        return this;\n    }\n}\n\nexport default DummyComponent;\n","export const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    interaction: {\n        sideEffect: 'individual'\n    },\n    pagination: 'scroll',\n    scrollBar: {\n        thickness: 10,\n        speed: 2,\n        vertical: {\n            align: 'right'\n        },\n        horizontal: {\n            align: 'bottom'\n        }\n    },\n    legend: {\n        position: 'right',\n        color: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        shape: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        size: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        }\n    },\n    showHeaders: false,\n    minWidth: 100,\n    minHeight: 100,\n    facet: {\n        rows: {\n            minCharacters: 3\n        },\n        columns: {\n            maxLines: 2,\n            verticalAlign: 'middle',\n            minCharacters: 1\n        }\n    },\n    border: {\n        style: 'solid',\n        color: '#d6d6d6',\n        width: 2,\n        collapse: true,\n        spacing: 0\n    },\n    autoGroupBy: {\n        disabled: false\n    },\n    invalidValues: {},\n    sort: {}\n};\n","import { DEFAULT_CONFIG } from '../../../../muze/src/defaults';\n\nconst DEFAULT_WIDTH = 600;\nconst DEFAULT_HEIGHT = 400;\nconst DEFAULT_CLASS_NAME = `${DEFAULT_CONFIG.classPrefix}-layout-container-component`;\nconst NODE_PREFIX = `${DEFAULT_CONFIG.classPrefix}-layout-container`;\n\nexport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT,\n  DEFAULT_CLASS_NAME,\n  NODE_PREFIX\n};\n","export default class DefinitionModel {\n    constructor (config) {\n        this._host = config.host || null;\n        this._cut = config.cut || null;\n        this._ratioWeight = config.ratioWeight === 0 ? 0 : config.ratioWeight || 1;\n        this._preferred = config.preferred || false;\n        this._lanes = config.lanes || [];\n        this._remainingHeight = 0;\n        this._remainingWidth = 0;\n    }\n\n    host (host) {\n        if (host) {\n            this._host = host;\n        }\n        return this._host;\n    }\n\n    preferred (preferred) {\n        if (preferred) {\n            this._preferred = preferred;\n        }\n        return this._preferred;\n    }\n\n    cut (cut) {\n        if (cut) {\n            this._cut = cut;\n        }\n        return this._cut;\n    }\n\n    ratioWeight (ratioWeight) {\n        if (ratioWeight) {\n            this._ratioWeight = ratioWeight;\n        }\n        return this._ratioWeight;\n    }\n\n    lanes (lanes) {\n        if (lanes) {\n            this._lanes = lanes;\n        }\n        return this._lanes;\n    }\n\n    remainingHeight (remainingHeight) {\n        if (remainingHeight) {\n            this._remainingHeight = remainingHeight;\n        }\n        return this._remainingHeight;\n    }\n\n    remainingWidth (remainingWidth) {\n        if (remainingWidth) {\n            this._remainingWidth = remainingWidth;\n        }\n        return this._remainingWidth;\n    }\n}\n","import { NODE_PREFIX } from '../../constants/defaults';\nimport DefinitionModel from '../definition-manager/definitionModel';\nimport DummyComponent from '../../layout-component/dummy-component';\n/**\n * Compares two strings in lowercase\n *\n * @export\n * @param {string} value the value to be compared\n * @param {string} compareTo whom the value would be compared\n * @return {boolean} true if values are equal\n */\nexport function isEqual (value, compareTo) {\n    if (typeof value !== 'string' || typeof compareTo !== 'string') {\n        throw new TypeError('value and compareTo must be string');\n    }\n    return value.toLowerCase() === compareTo.toLowerCase();\n}\n\nexport const getNodeId = (() => {\n    let _uid = 0;\n    return () => `${NODE_PREFIX}-${++_uid}`;\n})();\n\nexport function yExtraSpace (node) {\n    let smallestHeight = 0;\n    if (node.getCutType() === 'v') {\n        smallestHeight = smallestExtraHeightHorizontally(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'h') {\n        node.children().forEach((child) => {\n            smallestHeight += yExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerHeight = node.boundBox().height;\n        const hostHeight = node.model().host().getLogicalSpace().height;\n\n        smallestHeight = containerHeight - hostHeight;\n        if (smallestHeight < 0) {\n            smallestHeight = 0;\n        }\n    } else {\n        smallestHeight = 0;\n    }\n    return smallestHeight;\n}\n\nexport function smallestExtraHeightHorizontally (node) {\n    let smallestHeight = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const h = yExtraSpace(child);\n        if (h < smallestHeight) {\n            smallestHeight = h;\n        }\n    });\n    return smallestHeight;\n}\n\nexport function xExtraSpace (node) {\n    let smallestWidth = 0;\n    if (node.getCutType() === 'h') {\n        smallestWidth = smallestExtraWidthVertically(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'v') {\n        node.children().forEach((child) => {\n            smallestWidth += xExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerWidth = node.boundBox().width;\n        const hostWidth = node.model().host().getLogicalSpace().width;\n        smallestWidth = containerWidth - hostWidth;\n        if (smallestWidth < 0) {\n            smallestWidth = 0;\n        }\n    } else {\n        smallestWidth = 0;\n    }\n    return smallestWidth;\n}\n\nexport function smallestExtraWidthVertically (node) {\n    let smallestWidth = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const w = xExtraSpace(child);\n        if (w < smallestWidth) {\n            smallestWidth = w;\n        }\n    });\n    return smallestWidth;\n}\n\nexport function determineBoundBox (bb, i, arr, instance) {\n    if (i) {\n    // if not first sibling, take boundbox from previous sibling\n        const lastSibling = arr[i - 1];\n        const { top: _top, left: _left, height: _height, width: _width } = lastSibling.boundBox();\n        return {\n            width: bb.width,\n            height: bb.height,\n\n            top: instance.parentCut() === 'h'\n        ? _top + _height : _top,\n\n            left: instance.parentCut() === 'h'\n        ? _left : _left + _width\n        };\n    }\n  // if first sibling, take boundbox from parent\n    const { top: _top, left: _left } = instance.parent().boundBox();\n    return {\n        width: bb.width,\n        height: bb.height,\n        top: _top,\n        left: _left\n    };\n}\n\n// prepares the targetComponent Map for target Mapping ie. where a component should lie\nexport function prepareTargetComponentMap (context) {\n    context.targetComponentMap(new Map());\n    context.componentMap().forEach((value) => {\n        if (context.targetComponentMap().has(value.target())) {\n            context.targetComponentMap().get(value.target()).push(value);\n        } else {\n            const temp = [];\n            temp.push(value);\n            context.targetComponentMap().set(value.target(), temp);\n        }\n    });\n}\n\nexport function getComponent (canvasComponent, componentName) {\n    const comp = canvasComponent.find(component => component.name() === componentName);\n    return (comp && comp !== -1) ? comp : null;\n}\nexport function createPlaceHolderComponent (height, width, position) {\n    const comp = new DummyComponent(0, { height, width });\n    comp.name('placeHolder');\n    comp.position(position);\n    return comp;\n}\n\nexport function placeComponent (definitionModel, component, isPreferred = false, isGridComponent = false) {\n    let cut = '';\n    let componentRatioWidth = 1;\n    let leftOvercomponentRationWidth = 1;\n    let leftHeight = 0;\n    let leftWidth = 0;\n\n    if (!component) {\n        return { first: definitionModel, second: definitionModel };\n    }\n\n    const { height: componentHeight, width: componentWidth } = component.getLogicalSpace();\n    const position = component.position();\n    if (position === 'top' || position === 'bottom') {\n        cut = 'h';\n        componentRatioWidth = componentHeight / definitionModel.remainingHeight();\n        leftHeight = definitionModel.remainingHeight() - componentHeight;\n        leftWidth = definitionModel.remainingWidth();\n    } else {\n        cut = 'v';\n        componentRatioWidth = componentWidth / definitionModel.remainingWidth();\n        leftWidth = definitionModel.remainingWidth() - componentWidth;\n        leftHeight = definitionModel.remainingHeight();\n    }\n    leftOvercomponentRationWidth = 1 - componentRatioWidth;\n\n// update parentModel\n    definitionModel.cut(cut);\n    const firstLaneConfig = {\n        host: component.name(),\n        cut: null,\n        ratioWeight: componentRatioWidth,\n        preferred: isGridComponent ? false : isPreferred,\n        lanes: []\n    };\n    const firstLane = new DefinitionModel(firstLaneConfig);\n    firstLane.remainingHeight(componentHeight);\n    firstLane.remainingWidth(componentWidth);\n\n    const secondLaneConfig = {\n        host: null,\n        cut: null,\n        ratioWeight: leftOvercomponentRationWidth,\n        preferred: isGridComponent ? false : !isPreferred,\n        lanes: []\n    };\n    const secondLane = new DefinitionModel(secondLaneConfig);\n    secondLane.remainingHeight(leftHeight);\n    secondLane.remainingWidth(leftWidth);\n    if (isPreferred) {\n        definitionModel.lanes([firstLane]);\n    } else if (position === 'top' || position === 'left') {\n        definitionModel.lanes([firstLane, secondLane]);\n    } else {\n        definitionModel.lanes([secondLane, firstLane]);\n    }\n    return { first: firstLane, second: secondLane };\n}\n\nexport function placeGridComponent (definitionModel, gridComponents) {\n    let tempDefModel = definitionModel;\n    const rows = gridComponents.length;\n    const column = rows ? gridComponents[0].length : 0;\n    const height = gridComponents.reduce((acc, val) => (acc + val[0].getLogicalSpace().height), 0);\n\n    for (let i = 0; i < column; i++) {\n        const iscolumnPreffered = i === column - 1;\n        const columnPlaceHolderComponent = createPlaceHolderComponent(height,\n                                                    gridComponents[0][i].getLogicalSpace().width, 'left');\n        const { first, second } = placeComponent(tempDefModel, columnPlaceHolderComponent, iscolumnPreffered);\n        tempDefModel = first;\n        for (let j = 0; j < rows; j++) {\n            const rowpreffred = j === (rows - 1);\n            tempDefModel = placeComponent(tempDefModel, gridComponents[j][i], rowpreffred, true).second;\n        }\n        tempDefModel = second;\n    }\n    return tempDefModel;\n}\n\nexport function negotiateDimension (node) {\n    let preferred;\n    let cumultiveExtraSpaceAmt = 0;\n    let alteredDim;\n    let nonAlteredDim;\n\n    const childrenLength = node.children().length;\n\n    for (let index = 0; index < childrenLength; index++) {\n        let fn;\n        let extraSpaceAmt;\n        const child = node.children()[index];\n\n        if (child.parentCut() === 'h') {\n            fn = yExtraSpace;\n            alteredDim = 'height';\n            nonAlteredDim = 'width';\n        } else {\n            fn = xExtraSpace;\n            alteredDim = 'width';\n            nonAlteredDim = 'height';\n        }\n  // if vertical then get extra height from other node and push it to the preferred node.\n  // for horizontal cut the same thing is to be done with width\n        if (child.isPreferred()) {\n    // push extra space in sink. Execute it when all non preferred space are computed.\n            preferred = child;\n\n            continue; // eslint-disable-line no-continue\n        }\n  // reduce own height and save it in a var\n        cumultiveExtraSpaceAmt += (extraSpaceAmt = fn(child));\n        child.boundBox()[alteredDim] -= extraSpaceAmt;\n  // update nonaltered dim from parent for any change which happened during negotiation\n        child.boundBox()[nonAlteredDim] = child.parent().boundBox()[nonAlteredDim];\n\n        negotiateDimension(child);\n    }\n\n    if (preferred) {\n        preferred.boundBox()[alteredDim] += cumultiveExtraSpaceAmt;\n        preferred.boundBox()[nonAlteredDim] = preferred.parent().boundBox()[nonAlteredDim];\n        negotiateDimension(preferred);\n    }\n}\n\nexport function computePosition (node) {\n    node.children().forEach((child, i, children) => {\n        const boundBox = determineBoundBox(child.boundBox(), i, children, child);\n        child.boundBox(boundBox);\n        computePosition(child);\n    });\n}\n\nexport function allocateBoundingBox (node) {\n    const totalWeight = node.children()\n                            .map(child => child.model().ratioWeight())\n                            .reduce((carry, val) => carry + val, 0);\n\n    node.children().forEach((child, i, children) => {\n        const lastSibling = children[i - 1];\n        const ratio = child.model().ratioWeight() / totalWeight;\n\n        if (child.parentCut() === 'h') {\n            child.boundBox({\n                top: i ? lastSibling.boundBox().top + lastSibling.boundBox().height : 0,\n                left: child.parent().boundBox().left,\n                height: child.parent().boundBox().height * ratio,\n                width: child.parent().boundBox().width\n            });\n        } else {\n            child.boundBox({\n                top: child.parent().boundBox().top,\n                left: i ? lastSibling.boundBox().left + lastSibling.boundBox().width : 0,\n                height: child.parent().boundBox().height,\n                width: child.parent().boundBox().width * ratio\n            });\n        }\n        allocateBoundingBox(child);\n    });\n}\n\n","import { getNodeId } from '../helper';\nimport { LayoutComponent } from '../../layout-component';\n\nclass Node {\n    constructor (data) {\n        this._model = data;\n        this._parent = null;\n        this._children = [];\n        this._parentCut = null;\n        this._boundBox = {\n            top: null,\n            left: null,\n            height: null,\n            width: null\n        };\n\n        this._id = this._model.host() instanceof LayoutComponent && this._model.host().renderAt() ?\n                    this._model.host().renderAt() :\n                    getNodeId();\n    }\n\n    addChildren (entries) {\n        this._children.push(...entries);\n        entries.forEach((e) => { e.parent(this); });\n    }\n\n    isRoot () {\n        return this._parent === null;\n    }\n\n    isLeaf () {\n        return !this._children.length;\n    }\n\n    getCutType () {\n        return this._model.cut();\n    }\n\n    isPreferred () {\n        return !!this._model.preferred();\n    }\n\n    children (children) {\n        if (children) {\n            this._children = children;\n        }\n        return this._children;\n    }\n\n    parent (parent) {\n        if (parent) {\n            this._parent = parent;\n        }\n        return this._parent;\n    }\n\n    parentCut (parentCut) {\n        if (parentCut) {\n            this._parentCut = parentCut;\n        }\n        return this._parentCut;\n    }\n\n    id (id) {\n        if (id) {\n            this._id = id;\n        }\n        return this._id;\n    }\n\n    model (model) {\n        if (model) {\n            this._model = model;\n        }\n        return this._model;\n    }\n\n    boundBox (bound) {\n        if (bound) {\n            this._boundBox = {\n                top: bound.top,\n                left: bound.left,\n                height: bound.height,\n                width: bound.width\n            };\n        }\n        return this._boundBox;\n    }\n  /**\n     * function to search a node and update it with the config provided.\n     * @param  {Object} nodeconfig\n     */\n    updateNode (nodeconfig) {\n        if (this._id === nodeconfig._id) {\n            this._model.cut(nodeconfig.cut);\n            this._model.ratioWeight(nodeconfig.ratioWeight);\n        } else {\n            this._children.forEach((node) => {\n                if (node._id === nodeconfig._id) {\n                    node.model.cut(nodeconfig.cut);\n                    node.model.ratioWeight(nodeconfig.ratioWeight);\n                    return;\n                }\n                this.searchNode(node, nodeconfig);\n            });\n        }\n    }\n\n  // Recursive function to search a node\n    searchNode (node, nodeconfig) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeconfig._id) {\n                childNode.model().cut(nodeconfig.cut);\n                childNode.model().ratioWeight(nodeconfig.ratioWeight);\n            } else {\n                this.searchNode(childNode, nodeconfig);\n            }\n        });\n    }\n\n  /**\n     * function to delete a node from tree Structure.\n     * @param  {String} nodeId - node Id of the Node\n     */\n    delete (nodeId) {\n        this._children.forEach((node) => {\n            if (node.id() === nodeId) {\n                const index = this._children.indexOf(node);\n                this._model.lanes().splice(index, 1);\n            }\n            this.deleteSearchNode(node, nodeId);\n        });\n    }\n\n  // Recursive function to search a node\n    deleteSearchNode (node, nodeId) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeId) {\n                const index = node.children().indexOf(childNode);\n                node.model().lanes().splice(index, 1);\n            } else {\n                this.deleteSearchNode(childNode, nodeId);\n            }\n        });\n    }\n}\n\nexport default Node;\n","import Node from '../tree';\nimport {\n    allocateBoundingBox,\n    negotiateDimension,\n    computePosition\n} from '../helper';\n\nexport default class LayoutModel {\n    constructor (measurements, config) {\n        this._measurements = measurements;\n        this._config = config;\n        this._root = this.createTree(this._config, null);\n        this.setBoundBox();\n    }\n\n    createTree (config, parent) {\n        const node = new Node(config);\n        if (parent) {\n            node.parentCut(parent.getCutType());\n            parent.addChildren([node]);\n        } else {\n            this._root = node;\n        }\n        for (const lane of config.lanes()) {\n            this.createTree(lane, node);\n        }\n\n        return this._root;\n    }\n\n    setBoundBox () {\n        this._root.boundBox({\n            top: 0,\n            left: 0,\n            width: this._measurements.width,\n            height: this._measurements.height\n        });\n        allocateBoundingBox(this._root);\n    }\n\n    setHostPosition (node) {\n        node.children().forEach((child) => {\n            LayoutModel.setHostSpatialConfig(child);\n            this.setHostPosition(child);\n        });\n    }\n\n    static setHostSpatialConfig (node) {\n        const bb = node.boundBox();\n        const host = node.model().host();\n        if (host && host.setSpatialConfig) {\n            const conf = {\n                x: bb.left,\n                y: bb.top,\n                width: bb.width,\n                height: bb.height,\n                renderAt: node.id()\n            };\n            host.setSpatialConfig(conf);\n        }\n    }\n\n    negotiate () {\n        negotiateDimension(this._root);\n        computePosition(this._root);\n        return this;\n    }\n\n    broadcast () {\n        this.setHostPosition(this._root);\n        return this;\n    }\n\n    tree () {\n        return this._root;\n    }\n}\n","/**\n * This file exports constants that will be used to\n * create the state store of the table layout.\n */\n/**\n * The index of top, bottom and center in the matrix\n */\nexport const VIEW_INDEX = {\n    top: 0,\n    center: 1,\n    bottom: 2\n};\n\nexport const ROW_MATRIX_INDEX = {\n    0: 'top',\n    1: 'center',\n    2: 'bottom'\n};\n\nexport const COLUMN_MATRIX_INDEX = {\n    0: 'left',\n    1: 'middle',\n    2: 'right'\n};\n\n/**\n * The width of the grid suppied by the user.\n */\nexport const GRID_WIDTH = 'width';\n\n/**\n * The height of the grid supplied by the user.\n */\nexport const GRID_HEIGHT = 'height';\n\n/**\n  * The border for the grid\n  */\nexport const BORDER = 'border';\n\n /**\n  *  The index of the first visible row in view matrix.\n  */\nexport const ROW_POINTER = 'rowPointer';\n\n/**\n * The index of the first visible column in the view matrix.\n */\nexport const COLUMN_POINTER = 'columnPointer';\n\n/**\n * Flag to specify whether row sizes should be equal.\n */\nexport const ROW_SIZE_IS_EQUAL = 'isRowSizeEqual';\n\n/**\n * Flag to specify whether column sizes are equal.\n */\nexport const COLUMN_SIZE_IS_EQUAL = 'isColumnSizeEqual';\n\n/**\n * Field to store an array an of the widths of visible columns.\n * @computed\n */\nexport const COLUMN_WIDTHS = 'visibleColumnWidths';\n\n/**\n * Field to store an array of heights of visible rows.\n * @computed\n */\nexport const ROW_HEIGHTS = 'visibleRowHeights';\n\n/**\n * Field to store the width of the left matrix.\n * @computed\n */\nexport const LEFT_MATRIX_WIDTH = 'leftMatrixWidth';\n\n/**\n * Field to store the width of the right matrix.\n * @computed\n */\nexport const RIGHT_MATRIX_WIDTH = 'rightMatrixWidth';\n\n/**\n * Field to store the height of the top matrix.\n * @computed\n */\nexport const TOP_MATRIX_HEIGHT = 'topMatrixHeight';\n\n/**\n * Field to store the height of the bottom matrix.\n * @computed\n */\nexport const BOTTOM_MATRIX_HEIGHT = 'bottomMatrixHeight';\n\n/**\n * The dom element to render the layout inside.\n */\nexport const MOUNT_POINT = 'mount';\n\n/**\n * The id attribute of the left table element.\n */\nexport const LEFT_TABLE_ID = 'grid-left';\n\n/**\n * The id attribute of the right table element.\n */\nexport const RIGHT_TABLE_ID = 'grid-right';\n\n/**\n * The id attribute of the top table.\n */\nexport const TOP_TABLE_ID = 'grid-top';\n\n/**\n * The id attribute of the bottom table.\n */\nexport const BOTTOM_TABLE_ID = 'grid-bottom';\n\n/**\n * The id attribute of the center table.\n */\nexport const CENTER_TABLE_ID = 'grid-center';\n\n/**\n * The id attribute of the top div.\n */\nexport const TOP_DIV_ID = 'muze-div-top';\n\n/**\n * The id attribute of the bottom div.\n */\nexport const BOTTOM_DIV_ID = 'muze-div-bottom';\n\n/**\n * The id attribute of the center div.\n */\nexport const CENTER_DIV_ID = 'muze-div-center';\n\n/**\n * Field that indicates if the row configuration has changed\n */\nexport const HAVE_ROWS_CHANGED = 'haveRowsChanged';\n\n/**\n * Field that indicates if the column configuration has changed\n */\nexport const HAVE_COLUMNS_CHANGED = 'haveColumnsChanged';\n\n/**\n * Field that indicates if the values configuration for the center matrix has changed\n */\nexport const HAVE_VALUES_CHANGED = 'haveValuesChanged';\n\n/**\n * Field that indicates the width of row matrix\n */\nexport const ROW_MATRIX_WIDTH = 'rowMatrixWidth';\n\n/**\n * Field that indicates the height of row matrix\n */\nexport const COLUMN_MATRIX_HEIGHT = 'columnMatrixHeight';\n\n/**\n * Field that indicates the unit width of layout\n */\nexport const UNIT_WIDTH = 'unitWidth';\n\n/**\n * Field that indicates the unit height of layout\n */\nexport const UNIT_HEIGHT = 'unitHeight';\n\n/**\n * Field that indicates the style object\n */\nexport const STYLE = 'style';\n\n/**\n * Field that indicates the color configuration\n */\nexport const COLOR = 'color';\n\n/**\n * Field that indicates width\n */\nexport const WIDTH = 'width';\n\n/**\n * Field that indicates collpase property for border\n */\nexport const COLLAPSE = 'collapse';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SPACING = 'spacing';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const DISTRIBUTION = 'distribution';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const GUTTERSPACE = 'gutterSpace';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const BREAK_PAGE = 'breakPage';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_ROW_BORDERS = 'showRowBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_COL_BORDERS = 'showColBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_VALUE_BORDERS = 'showValueBorders';\n\nexport const HEIGHT = 'height';\nexport const COLUMN = 'column';\nexport const ROW = 'row';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const CENTER = 'center';\nexport const CLICK = 'click';\nexport const ROW_LEFT = 'rowLeft';\nexport const ROW_RIGHT = 'rowRight';\nexport const COLUMN_BOTTOM = 'colBottom';\nexport const COLUMN_TOP = 'colTop';\nexport const AUTO = 'auto';\nexport const ROW_SPAN = 'rowSpan';\nexport const COL_SPAN = 'colSpan';\nexport const ROW_ROOT = 'rowRoot';\nexport const COLUMN_ROOT = 'columnRoot';\nexport const PRIMARY = 'primary';\nexport const SECONDARY = 'secondary';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\nexport const GRID = 'grid';\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n\nexport const PAGINATION = 'pagination';\nexport const BUFFER = 'buffer';\nexport const HOLISTIC = 'holistic';\nexport const SCROLL = 'scroll';\nexport const MIDDLE = 'middle';\nexport const NO_BORDERS = null;\n\nexport const MAX_WIDTH_AVAIL_FOR_COL_MATRIX = 'maxWidthAvailableForColumnMatrix';\nexport const COLUMN_MATRIX = 'columnMatrix';\nexport const MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX = 'maxHeightAvailableForRowMatrix';\nexport const ROW_MATRIX = 'rowMatrix';\n","/* eslint no-undef: \"off\" */\n/* eslint default-case: \"off\" */\nexport class Utils {\n    static isDOMElement (element) {\n        return element instanceof Element;\n    }\n\n    static getID (element) {\n        return element.id;\n    }\n\n    static getElement (id) {\n        return document.getElementById(id);\n    }\n\n    static findContainer (data) {\n        return data.filter(coordinate => coordinate.parent == null)[0];\n    }\n  /**\n   * static method to remove the div\n   * @param  {} divId - div ID to be removed.\n   */\n    static removeDiv (divId) {\n        if (document.getElementById(divId) !== null) { document.getElementById(divId).remove(); }\n    }\n}\n","import { DEFAULT_CLASS_NAME } from '../constants/defaults';\nimport { LayoutComponent } from '../layout-component';\n\nexport default class DataPoint {\n    constructor (node) {\n        this._node = node;\n        this._className = node.model().host() instanceof LayoutComponent ?\n                            node.model().host().className() : DEFAULT_CLASS_NAME;\n    }\n\n    node () {\n        return this._node;\n    }\n\n    hasHost () {\n        return this._node.model().host() instanceof LayoutComponent;\n    }\n\n    className () {\n        return this._className || DEFAULT_CLASS_NAME;\n    }\n}\n","import { getnodePoints } from './helper';\n\nexport class DataParser {\n    constructor (data) {\n        this._data = data;\n    }\n\n    defaultDataPointLogic () {\n        const nodepoints = [];\n        getnodePoints(this._data, nodepoints);\n        return nodepoints;\n    }\n\n}\n","import DataPoint from './data-point';\n\nexport const getnodePoints = (node, nodepoints) => {\n    const datapoint = new DataPoint(node);\n    nodepoints.push(datapoint);\n    node.children().forEach((child) => {\n        getnodePoints(child, nodepoints);\n    });\n};\n","import { DataParser } from './data-parser';\n\nexport class HTMLDataAdapter extends DataParser {\n    getCoordinates () {\n        return super.defaultDataPointLogic();\n    }\n}\n","export class Renderer {\n\n    initRenderer (node, tree) {\n        node.__logicalTree = tree;\n    }\n}\n","import { HTMLDataAdapter } from '../data-adapters/html-data';\nimport { Utils } from '../utils';\nimport { Renderer } from './renderer';\n\nexport class HTMLRenderer extends Renderer {\n    constructor (data) {\n        super();\n        this._data = data;\n        this._coordinates = new HTMLDataAdapter(this._data).getCoordinates();\n    }\n\n    createhtml (mount, className) {\n        const mainDiv = mount;\n        super.initRenderer(mainDiv, this._data); // Initialise node with layout id\n        this.parentDiv = this.createAndCustomiseParent(className);\n        this._coordinates.forEach((node) => {\n            if (node.hasHost()) {\n                const host = node.node();\n                this.parentDiv.appendChild(this.createAndPositionDiv({ ...host.boundBox(),\n                    id: host.id(),\n                    className: node.className() }));\n            }\n        });\n        mainDiv.appendChild(this.parentDiv);\n    }\n\n    createAndPositionDiv (config) {\n        const { top, left, height, width, className, id } = config;\n        const existingDiv = document.getElementById(id);\n        const div = existingDiv || document.createElement('div');\n        div.style.position = 'absolute';\n        div.style.left = `${left}px`;\n        div.style.top = `${top}px`;\n        div.style.height = `${height}px`;\n        div.style.width = `${width}px`;\n        div.id = id;\n        div.className = className;\n        return div;\n    }\n\n    createAndCustomiseParent (className) {\n        const container = Utils.findContainer(this._coordinates);\n        const host = container.node();\n        const parentDiv = this.createAndPositionDiv({ ...host.boundBox(),\n            id: host.id(),\n            className: container.className() });\n        parentDiv.className = className;\n        parentDiv.style.position = 'relative';\n        return parentDiv;\n    }\n\n    coordinates () {\n        return this._coordinates;\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport { HTMLRenderer } from '../renderers/html-renderer';\nimport { LayoutComponent } from '../layout-component';\n\nexport const getChildNode = (context, config) =>\n    context.renderer().createAndPositionDiv(config);\n\nexport const findNode = (context, nodeID) =>\n    context.renderer().coordinates().find(point => point.node().id() === nodeID);\n\nexport const renderHTML = (context) => {\n    context.renderer(new HTMLRenderer(context.data()));\n    context.renderer().createhtml(context.mount(), context.className());\n};\n\nexport const drawLayout = context => renderHTML(context);\n\nexport const drawComponent = (componentData) => {\n    componentData.children().forEach((node) => {\n        const host = node.model().host();\n        if (host instanceof LayoutComponent) {\n            host.draw();\n        }\n        drawComponent(node);\n    });\n};\n\nexport const removeElement = (elemID) => {\n    if (elemID) {\n        selectElement(`#${elemID}`).remove();\n    }\n};\n\nconst setAlignConfig = (alignment, params) => {\n    let newNodeConfig = {};\n    const { node, refNode } = params;\n    switch (alignment) {\n    case 'left':\n        newNodeConfig = {\n            top: node.top,\n            left: refNode.left,\n            height: node.height,\n            width: Math.abs(node.width - Math.abs(refNode.left - node.left))\n        };\n        break;\n\n    case 'right':\n        newNodeConfig = {\n            top: node.top,\n            left: node.left,\n            height: node.height,\n            width: Math.abs(node.width - Math.abs(node.left + node.width - (refNode.left + refNode.width)))\n        };\n        break;\n\n    case 'top':\n        newNodeConfig = {\n            top: refNode.top,\n            left: node.left,\n            height: Math.abs(node.height - Math.abs(refNode.top - node.top)),\n            width: node.width\n        };\n        break;\n\n    case 'bottom':\n        newNodeConfig = {\n            top: node.top,\n            left: node.left,\n            height: Math.abs(node.top - refNode.top + refNode.height),\n            width: node.width\n        };\n        break;\n\n    case 'h-center':\n        newNodeConfig = {\n            top: node.top,\n            left: refNode.left,\n            height: node.height,\n            width: refNode.width\n        };\n        break;\n\n    case 'v-center':\n        newNodeConfig = {\n            top: refNode.top,\n            left: node.left,\n            height: refNode.top,\n            width: node.width\n        };\n        break;\n    default:\n        break;\n    }\n    return newNodeConfig;\n};\n\nexport const resolveAligment = (context, componentData) => {\n    componentData.children().forEach((component) => {\n        const host = component.model().host();\n\n        if (host instanceof LayoutComponent && host.alignWith()) {\n            const componentToAlign = context.componentMap().get(host.alignWith());\n\n            if (componentToAlign) {\n                const point = findNode(context, component.id()).node();\n                const node = point.boundBox();\n                const refNode = findNode(context, componentToAlign.renderAt())\n                    .node()\n                    .boundBox();\n                const newNodeConfig = setAlignConfig(host.alignment(), { node, refNode });\n\n                // check if model in parent component\n                Object.assign(newNodeConfig, { id: point.id(), className: host.className() });\n                context.renderer().createAndPositionDiv(newNodeConfig);\n                context.componentMap().get(host.name()).setSpatialConfig({\n                    x: newNodeConfig.left,\n                    y: newNodeConfig.top,\n                    height: newNodeConfig.height,\n                    width: newNodeConfig.width\n\n                });\n            }\n        }\n\n        resolveAligment(context, component);\n    });\n};\n","import { Utils } from '../utils';\nimport { drawLayout, resolveAligment, drawComponent } from './helper';\n\nexport class DrawingManager {\n    constructor (data, renderer, container) {\n        this._data = data.tree;\n        this._componentMap = data.componentMap;\n        this._layoutClassName = data.layoutClassName;\n        this._renderer = renderer;\n        this._mount = Utils.isDOMElement(container) ? container : Utils.getElement(container);\n    }\n\n    draw () {\n        drawLayout(this);\n        resolveAligment(this, this._data);\n        drawComponent(this._data);\n        return this;\n    }\n\n    data (data) {\n        if (data) {\n            this._data = data;\n        }\n        return this._data;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    className (param) {\n        if (param) {\n            this._layoutClassName = param;\n        }\n        return this._layoutClassName;\n    }\n\n    renderer (param) {\n        if (param) {\n            this._renderer = param;\n        }\n        return this._renderer;\n    }\n\n    mount (param) {\n        if (param) {\n            this._mount = param;\n        }\n        return this._mount;\n    }\n}\n","import DefinitionModel from './definitionModel';\nimport { prepareTargetComponentMap, getComponent, placeComponent, placeGridComponent } from '../helper';\n\nexport default class DefinitionManager {\n    constructor (componentMap, sequence, totalHeight, totalWidth) {\n        this._componentMap = componentMap;\n        this._prioritySequence = sequence;\n        this._totalHeight = totalHeight;\n        this._totalWidth = totalWidth;\n        this._targetComponentMap = null;\n    }\n\n    // create the config model\n    generateConfigModel () {\n        prepareTargetComponentMap(this);\n        const canvasComponent = this._targetComponentMap.get('canvas');\n        const definitionModel = new DefinitionModel({});\n        let tempDefModel = definitionModel;\n        definitionModel.remainingHeight(this._totalHeight);\n        definitionModel.remainingWidth(this._totalWidth);\n\n        let componentRef = null;\n\n        this._prioritySequence.forEach((name) => {\n            componentRef = getComponent(canvasComponent, name);\n            if (name !== 'grid') {\n                tempDefModel = placeComponent(tempDefModel, componentRef).second;\n            } else {\n                tempDefModel = placeGridComponent(tempDefModel, componentRef.component);\n            }\n        });\n        return definitionModel;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    targetComponentMap (param) {\n        if (param) {\n            this._targetComponentMap = param;\n        }\n        return this._targetComponentMap;\n    }\n}\n","import { sanitizeConfig } from './helper';\n\nexport class LayoutDef {\n    constructor () {\n        this._componentMap = new Map();\n        this._layoutDefinition = null;\n    }\n\n    addComponent (component) {\n        this._componentMap.set(component.name(), component);\n    }\n\n    layoutDefinition (def) {\n        if (def) {\n            this._layoutDefinition = def;\n        }\n        return this._layoutDefinition;\n    }\n\n    addMultipleComponent (componentArray) {\n        componentArray.forEach((comp) => {\n            this.addComponent(comp);\n        });\n    }\n\n    sanitizedDefinition () {\n        sanitizeConfig(this, this._layoutDefinition);\n        return this.layoutDefinition();\n    }\n\n    componentMap () {\n        return this._componentMap;\n    }\n    resetComponentMap () {\n        this._componentMap.clear();\n    }\n}\n","import DefinitionManager from '../layout-definition/definition-manager';\n\nexport function sanitizeConfig (context, hostObj) {\n    const hostID = hostObj.host();\n    if (hostObj.lanes() && hostObj.lanes().length) {\n        hostObj.lanes().forEach(childHost => sanitizeConfig(context, childHost));\n    }\n    if (hostID != null && typeof (hostID) === 'string') {\n        if (context.componentMap().get(hostID) !== undefined) {\n            hostObj.host(context.componentMap().get(hostID));\n        }\n    }\n}\n\nexport function calLayOutDef (context) {\n    const { height, width } = context.dimension();\n    const defManager = new DefinitionManager(context.layoutDef().componentMap(),\n                                              context.prioritySequence(),\n                                              height,\n                                              width);\n    const genLayoutdef = defManager.generateConfigModel();\n    return genLayoutdef;\n}\n","import {\n  LayoutModel\n} from '../layout-definition';\n\nimport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT\n} from '../constants/defaults';\n\nimport {\n   GRID\n} from '../../enums/constants';\n\nimport { DrawingManager } from '../drawing-manager';\nimport { removeElement } from '../drawing-manager/helper';\nimport { Utils } from '../utils';\nimport { LayoutDef } from './layout-def';\nimport { calLayOutDef } from './helper';\n\nexport default class LayoutManager {\n    constructor (conf) {\n        this._renderAt = conf.renderAt;\n        this._layoutClassName = conf.className;\n        this._dimension = {\n            width: conf.width || DEFAULT_WIDTH,\n            height: conf.height || DEFAULT_HEIGHT\n        };\n\n        this._skeletonType = conf.skeletonType || 'html';\n        this._layoutDefinition = null;\n        this._layoutDef = new LayoutDef();\n        this._drawingManager = null;\n        this._prioritySequence = [];\n        this.tree = null;\n        this._rootNodeID = null;\n    }\n\n    layoutDef (param) {\n        if (param) {\n            this._layoutDef = param;\n        }\n        return this._layoutDef;\n    }\n\n    prioritySequence (param) {\n        if (param) {\n            this._prioritySequence = param;\n        }\n        return this._prioritySequence;\n    }\n\n    dimension (param) {\n        if (param) {\n            Object.assign(this._dimension, param);\n        }\n        return this._dimension;\n    }\n\n    addComponent (component) {\n        this._layoutDef.addComponent(component);\n    }\n\n    addMultipleComponent (componentArray) {\n        this._layoutDef.addMultipleComponent(componentArray);\n    }\n\n    resetNode (node) {\n        if (this.con) {\n            this.con.resetNode(node);\n        }\n    }\n\n  /**\n   * function to update the node and rerender the layout.\n   * @param  {} config - node configuration to change.\n   */\n    updateNode (config) {\n        this.tree.updateNode(config);\n        this._layoutDefinition = this.tree.model;\n        this.compute();\n    }\n\n    compute () {\n        //----\n        if (Utils.isDOMElement(this._renderAt)) {\n            this._renderAt._layout = this;\n        } else {\n            document.getElementById(this._renderAt)._layout = this;\n        }\n        //-----\n        this._layoutDefinition = calLayOutDef(this);\n        this._layoutDef.layoutDefinition(this._layoutDefinition);\n        this._layoutDefinition = this._layoutDef.sanitizedDefinition();\n        this._layout = new LayoutModel({\n            width: this._dimension.width,\n            height: this._dimension.height\n        },\n            this._layoutDefinition);\n        this.tree = this._layout.negotiate().tree();\n        this._layout.broadcast();\n        this._drawingManager = new DrawingManager({\n            tree: this.tree,\n            componentMap: this._layoutDef.componentMap(),\n            layoutClassName: this._layoutClassName\n        }, this._skeletonType, this._renderAt);\n\n        if (this._rootNodeID) {\n            this.tree.id(this._rootNodeID);\n        } else {\n            this._rootNodeID = this.tree.id();\n        }\n    // this will draw all the components by calling their draw method\n        this._drawingManager.draw();\n    }\n\n    getRootNodeId () {\n        return this._rootNodeID;\n    }\n\n  /**\n  * This function takes the LayoutComponents and Register them in component store\n  * @param {Array<LayoutComponent>} layoutComponents\n  */\n    registerComponents (layoutComponents) {\n        this._prioritySequence.length = 0;\n        this._layoutDef.resetComponentMap();\n        layoutComponents.forEach((container) => {\n            if (container) {\n                this._prioritySequence.push(container.name());\n                this.addComponent(container);\n                if (container.name() === 'grid') {\n                    container.component.forEach((componentArr) => {\n                        componentArr.forEach((compo) => {\n                            this.addComponent(compo);\n                        });\n                    });\n                }\n            }\n        });\n        return this;\n    }\n\n    getComponent (componentName) {\n        return this._layoutDef.componentMap().get(componentName);\n    }\n\n    deleteElement (component, elementName) {\n        this._layoutDef.componentMap().delete(elementName);\n        const deleteElementId = component.renderAt();\n        return removeElement(deleteElementId);\n    }\n\n    removeComponent (name) {\n        const component = this.getComponent(name);\n        if (component) {\n            if (name === GRID) {\n                return component.component.map(comp => comp.map(\n                    co => this.deleteElement(co, co.name())\n                ));\n            }\n            return this.deleteElement(component, name);\n        }\n        return this;\n    }\n\n    renderAt (mount) {\n        if (mount) {\n            this._renderAt = mount;\n        }\n        return this._renderAt;\n    }\n}\n","import { isEqual, STATE_NAMESPACES, selectElement, getValueParser } from 'muze-utils';\nimport { VisualGroup } from '@chartshq/visual-group';\nimport { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, DATA, CONFIG, GRID, LEGEND }\n    from '../constants';\nimport { canvasOptions } from './local-options';\nimport { LayoutManager } from '../../../layout/src/tree-layout';\n\n/**\n * Instantiate high level components. Canvas knows what all high level component it has.\n * @nice-to-have dynamic high level components.\n *  - Is it even required ?\n *  - Reactive to source (canvas) streaming ?\n * @param {*} context Canvas instance\n * @return {Object.<Array>} Arrays of Title, visualGroup, Legend\n */\nexport const initCanvas = (context) => {\n    const reg = context._registry.components;\n\n    return [new reg.VisualGroup(context._registry, Object.assign({\n        throwback: context._throwback\n    }, context.dependencies()))];\n};\n\nexport const fixScrollBarConfig = (config) => {\n    config.scrollBar.thickness = Math.min(50, Math.max(10, config.scrollBar.thickness));\n    return config;\n};\n\nexport const setLayoutInfForUnits = (context) => {\n    const layoutManager = context._layoutManager;\n    const gridLayout = layoutManager.getComponent(GRID);\n    const legend = layoutManager.getComponent(LEGEND);\n    const boundBox = gridLayout && gridLayout.getBoundBox();\n    const valueMatrix = context.composition().visualGroup.matrixInstance().value;\n    const parentContainer = selectElement(`#${layoutManager.getRootNodeId()}`).node();\n    if (legend) {\n        legend.setComponentInfo({ rootNode: parentContainer });\n    }\n    valueMatrix.each((cell) => {\n        cell.valueOf().parentContainerInf({\n            el: parentContainer,\n            dimensions: boundBox\n        });\n    });\n};\n\n/**\n *\n *\n * @memberof Canvas\n */\nexport const dispatchProps = (context) => {\n    const lifeCycleManager = context.dependencies().lifeCycleManager;\n    lifeCycleManager.notify({ client: context, action: 'beforeupdate' });\n    const visualGroup = context.composition().visualGroup;\n\n    const allOptions = context._allOptions;\n    for (const key in allOptions) {\n        const value = context[key]();\n        if (value !== null) {\n            visualGroup[key] && visualGroup[key](value);\n        }\n    }\n    const { invalidValues } = context.config();\n\n    visualGroup.valueParser(getValueParser(invalidValues));\n    visualGroup.createMatrices();\n    context._cachedProps = {};\n    lifeCycleManager.notify({ client: context, action: 'initialized' });\n    lifeCycleManager.notify({ client: context, action: 'updated' });\n};\n\nconst equalityChecker = (props, params) => {\n    let checker = () => false;\n    return !props.every((option, i) => {\n        switch (option) {\n        case ROWS:\n        case COLUMNS:\n        case DETAIL:\n            checker = isEqual('Array');\n            break;\n\n        case SHAPE:\n        case SIZE:\n        case COLOR:\n        case DATA:\n        case CONFIG:\n            checker = isEqual('Object');\n            break;\n        default:\n            checker = () => true;\n            break;\n        }\n        const oldVal = params[i][0];\n        const newVal = params[i][1];\n\n        return checker(oldVal, newVal);\n    });\n};\n\nconst updateChecker = (props, params) => props.every((option, i) => {\n    const val = params[i][1];\n    switch (option) {\n    case ROWS:\n    case COLUMNS:\n        return val !== null;\n\n    case DATA:\n        return val && !val.isEmpty();\n\n    default:\n        return true;\n\n    }\n});\n\nexport const notifyAnimationEnd = (context) => {\n    const viewInfo = context.layout().viewInfo();\n    const centerMatrix = viewInfo && viewInfo.viewMatricesInfo.matrices.center[1] || [];\n    const promises = [];\n    centerMatrix.forEach((cellArr) => {\n        cellArr.forEach((cell) => {\n            promises.push(cell.valueOf().done());\n        });\n    });\n    const lifeCycleManager = context.lifeCycle();\n    if (promises.length) {\n        Promise.all(promises).then(() => {\n            // Update life cycle\n            lifeCycleManager.notify({ client: context, action: 'drawn' });\n            const animDonePromises = [];\n\n            centerMatrix.forEach((cellArr) => {\n                cellArr.forEach((cell) => {\n                    cell.valueOf().layers().forEach((layer) => {\n                        animDonePromises.push(layer.animationDone());\n                    });\n                });\n            });\n\n            [context.xAxes(), context.yAxes()].forEach((axisArr) => {\n                axisArr = axisArr || [];\n                axisArr.forEach((axes) => {\n                    axes.forEach((axisInst) => {\n                        animDonePromises.push(axisInst.animationDone());\n                    });\n                });\n            });\n\n            Promise.all(animDonePromises).then(() => {\n                lifeCycleManager.notify({ client: context, action: 'animationend' });\n            });\n        });\n    } else {\n        lifeCycleManager.notify({ client: context, action: 'animationend' });\n    }\n};\n\nexport const setupChangeListener = (context) => {\n    const store = context._store;\n\n    const allOptions = Object.keys(context._allOptions);\n    const props = [...allOptions, ...Object.keys(canvasOptions)];\n    const nameSpaceProps = [...allOptions, ...Object.keys(canvasOptions)].map(prop =>\n        `${STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE}.${prop}`);\n    store.registerChangeListener(nameSpaceProps, (...params) => {\n        const equalityProps = equalityChecker(props, params);\n        const updateProps = updateChecker(props, params);\n        // inform attached board to rerender\n        if (equalityProps && context.mount()) {\n            if (updateProps) {\n                dispatchProps(context);\n            } else {\n                context.composition().visualGroup.remove();\n            }\n            context.render();\n        }\n        notifyAnimationEnd(context);\n    }, true);\n};\n\nexport const applyInteractionPolicy = (firebolt) => {\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    if (visualGroup) {\n        const valueMatrix = visualGroup.matrixInstance().value;\n        const interactionPolicy = firebolt._interactionPolicy;\n        interactionPolicy(valueMatrix, firebolt);\n        const crossInteractionPolicy = firebolt._crossInteractionPolicy;\n        const behaviours = crossInteractionPolicy.behaviours;\n        const sideEffects = crossInteractionPolicy.sideEffects;\n        valueMatrix.each((cell) => {\n            const unitFireBolt = cell.valueOf().firebolt();\n            for (const key in behaviours) {\n                unitFireBolt.changeBehaviourStateOnPropagation(key, behaviours[key]);\n            }\n            for (const key in sideEffects) {\n                unitFireBolt.changeSideEffectStateOnPropagation(key, sideEffects[key]);\n            }\n        });\n    }\n};\n\n/**\n * Sets the rotation for all x axes if any axis has the rotation config set in the\n * entire view\n *\n * @param {Array} columns Column cells that contain the axes cells\n */\nexport const setLabelRotationForAxes = (context) => {\n    let rotation = 0;\n\n    const xAxes = context.xAxes() || [];\n\n    (() => {\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                const rotationVal = xAxes[i][j].renderConfig().labels.rotation;\n                if (rotationVal && rotationVal !== 0) {\n                    rotation = rotationVal;\n                    return;\n                }\n            }\n        }\n    })();\n\n    if (rotation) {\n        xAxes.forEach((axes) => {\n            axes.forEach((axis) => {\n                axis.renderConfig({ labels: { rotation } });\n                axis.smartTicks(axis.setTickConfig());\n            });\n        });\n    }\n};\n\nexport const createGroupState = (context) => {\n    const [globalState, localState] = VisualGroup.getState();\n    const store = context._store;\n    store.append('app.group', globalState);\n    store.append('local.group', localState);\n};\n\nexport const removeChild = (mount) => {\n    while (mount.firstChild) {\n        mount.removeChild(mount.firstChild);\n    }\n};\n\nexport const createLayoutManager = () => {\n    const layoutManager = new LayoutManager({\n        className: 'muze-group-container'\n    });\n    return layoutManager;\n};\n","/**\n * This is the global options semantics based on which setters getters are created and reactivity is initiated.\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n * @module GlobalOptions\n */\n\nimport { intSanitizer, mergeRecursive, DataModel } from 'muze-utils';\nimport { fixScrollBarConfig } from './canvas/helper';\nimport { DEFAULT_CONFIG } from './defaults';\n\nexport default {\n    data: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel\n        }\n    },\n    width: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    height: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitWidth: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitHeight: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    config: {\n        value: [null, null],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            takesMultipleParams: true,\n            sanitization: ([config, auxConfig = {}], oldConfig) => {\n                // Stores additional config, if passed\n                const { reset = false } = auxConfig;\n                let oldConf = {};\n\n                if (!reset) {\n                    oldConf = mergeRecursive({}, config === null ? {} : oldConfig);\n                }\n\n                const defConfig = mergeRecursive(oldConf, DEFAULT_CONFIG);\n                const newConf = mergeRecursive(defConfig, config);\n                return fixScrollBarConfig(newConf);\n            }\n\n        }\n    }\n};\n","import { sanitizeIP, mergeRecursive } from 'muze-utils';\nimport { TOP, CENTER, BOTTOM } from '../enums/constants';\n\n/*\n * This is the abstract implementation of the root layout. This takes care of common work which all the layouts\n * has to handle. The common work includes sanitizaion of inputs, update, rerender, dispose etc. This class can't be\n * used directly (as ofcourse this is an abstract implementaiton), the class which is implementing it has to implement\n * the necessary methods and gives its on visual.\n */\n\n/**\n * This class is used to create a generic layout. It can be extended to create layouts\n * of different types\n * @class GenericLayout\n */\nexport default class GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config configuration to be given for the layout\n     * @param {Object} dependencies external dependencies.\n     *\n     * @memberof GenericLayout\n     *\n     */\n    constructor (mountPoint, measurement, config, dependencies) {\n        this._config = {};\n        this._measurement = {};\n        this._matrices = [];\n        // External dependencies to be included for the layout. This includes the ext global dependencies like\n        // smartlabel which has one single implementation of throughout the page or per isntance\n        this._dependencies = dependencies;\n\n        this.measurement(measurement);\n        this.mountPoint(mountPoint);\n        this.config(config);\n    }\n\n    /**\n     * Returns an object which is used to recreate the layout.\n     * @return {Object} the serialized components\n     */\n    serialize () {\n        return {\n            measurement: this.measurement(),\n            config: this.config(),\n            matrices: this.matrices()\n        };\n    }\n\n     /**\n     * Sets/Gets the config for the layout\n     * @param {Object} config configuration for the layout\n     * @return {Layout|Object} Gets the Config/ Returns this instance when set\n     */\n    config (config) {\n        if (config) {\n            this._config = mergeRecursive(this._config || {}, config);\n            this._config.border.width = Math.max(0, this._config.border.width);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Sets/Gets the measurement for the layout\n     * @param {Object} measurement measurement for the layout\n     * @return {Layout|Object} Gets the measurement/ Returns this instance when set\n     */\n    measurement (measurement) {\n        if (measurement) {\n            this._measurement = mergeRecursive(this._measurement || {}, measurement);\n\n            return this;\n        }\n        return this._measurement;\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     * @param {Object} matrices matrices for the layout\n     * @return {Layout|Object} Gets the matrices/ Returns this instance when set\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = sanitizeIP.typeObj([TOP, CENTER, BOTTOM], matrices);\n\n            return this;\n        }\n        return this._matrices;\n    }\n\n    /**\n     * Sets/Gets the matrix for row\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    rowMatrix (matrix) {\n        if (matrix) {\n            this._rowMatrix = matrix;\n            return this;\n        }\n        return this._rowMatrix;\n    }\n\n    /**\n     * Sets/Gets the matrix for columns\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    columnMatrix (matrix) {\n        if (matrix) {\n            this._columnMatrix = matrix;\n            return this;\n        }\n        return this._columnMatrix;\n    }\n\n   /**\n     * Sets/Gets the matrix for value\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    centerMatrix (matrix) {\n        if (matrix) {\n            this._centerMatrix = matrix;\n            return this;\n        }\n        return this._centerMatrix;\n    }\n\n    /**\n     * Sets/Gets the mountPoint for the layout\n     * @param {Object} mountPoint mountPoint for the layout\n     * @return {Layout|Object} Gets the mountPoint/ Returns this instance when set\n     */\n    mountPoint (mountPoint) {\n        if (mountPoint) {\n            this._mountPoint = mountPoint;\n\n            return this;\n        }\n        return this._mountPoint;\n    }\n}\n","import * as FieldNames from '../enums/constants';\n\n/**\n * Default configuration of the layout\n * @return {Object} returns the default configuration\n */\nexport const DEFAULT_CONFIGURATION = {\n    [FieldNames.BORDER]: {\n        [FieldNames.STYLE]: 'solid',\n        [FieldNames.COLOR]: '#d6d6d6',\n        [FieldNames.WIDTH]: 2,\n        [FieldNames.COLLAPSE]: true,\n        [FieldNames.SPACING]: 0\n    },\n    [FieldNames.PAGINATION]: 'scroll',\n    [FieldNames.BUFFER]: 20,\n    [FieldNames.GUTTERSPACE]: { rows: [], columns: [] },\n    [FieldNames.DISTRIBUTION]: { rows: [], columns: [] },\n    [FieldNames.BREAK_PAGE]: { rows: [], columns: [] },\n    [FieldNames.ROW_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_POINTER]: 0,\n    [FieldNames.ROW_POINTER]: 0\n};\n\n/**\n * Default measurements for the layout\n * @return {Object} returns the default measurements\n */\nexport const DEFAULT_MEASUREMENTS = {\n    [FieldNames.GRID_WIDTH]: 100,\n    [FieldNames.GRID_HEIGHT]: 100,\n    [FieldNames.UNIT_WIDTH]: 100,\n    [FieldNames.UNIT_HEIGHT]: 100\n};\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n","/**\n * This file exports utility functions that are used across the layout module\n */\nimport { Symbols } from 'muze-utils';\nimport { PRIMARY, SECONDARY, HEIGHT, WIDTH } from '../enums/constants';\n\nconst nest = Symbols.nest;\n/**\n *\n *\n * @param {*} isTransposed\n *\n */\nconst getMeasureInfo = (isTransposed) => {\n    if (isTransposed) {\n        return {\n            firstMeasure: HEIGHT,\n            secondMeasure: WIDTH\n        };\n    }\n    return {\n        firstMeasure: WIDTH,\n        secondMeasure: HEIGHT\n    };\n};\n\n/**\n *\n *\n * @param {*} i\n * @param {*} page\n *\n */\nconst findInPage = (i, page) => {\n    let count = 0;\n    for (const x in page) {\n        if (i < page[x]) {\n            count = x;\n            break;\n        }\n    }\n    return count;\n};\n\n/**\n * Creates a single matrix from two matrices\n *\n * @param {Array<Array>} matrix Input matrix\n * @return {Array<Array>} Joined matrix\n * @memberof VisualMatrix\n */\nexport const combineMatrices = (matrix, config) => {\n    const { isTransposed } = config;\n    let joinedMatrix = matrix[0].length > 0 ? matrix[0] : matrix[1];\n    if (isTransposed) {\n        joinedMatrix = matrix[0].length > 0 ? [...matrix[0]] : [];\n        joinedMatrix = matrix[1].length > 0 ? [...joinedMatrix, ...matrix[1]] : joinedMatrix;\n    } else {\n        joinedMatrix = joinedMatrix.map((row, rowIndex) => {\n            let rowData = [];\n            if (matrix[0].length > 0) {\n                rowData = [...matrix[0][rowIndex]];\n            }\n            if (matrix[1].length > 0) {\n                rowData = [...rowData, ...matrix[1][rowIndex]];\n            }\n            return rowData;\n        });\n    }\n    return joinedMatrix;\n};\n\n/**\n * Creates a hirachical tree from the context\n *\n * @param {Object} context context for creating tree\n * @return {Object} nested tree\n */\nexport const createTree = (context) => {\n    let matrixTree = {};\n    let lastLevelKey = 0;\n    let facet = PRIMARY;\n    const nestFn = nest();\n    const keys = [];\n    const layoutMatrix = context._layoutMatrix;\n    const primaryMatrix = context.primaryMatrix();\n    const secondaryMatrix = context.secondaryMatrix();\n    const { isTransposed, breakPage } = context.config();\n\n    if (!isTransposed) {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix[0].length - 1; i++) {\n                keys.push(i);\n            }\n            keys.push(primaryMatrix[0].length - 1);\n            if (facet === SECONDARY || secondaryMatrix.length === 0) {\n                lastLevelKey = primaryMatrix[0].length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const keyLength = primaryMatrix.length > 0 ? primaryMatrix[0].length : 0;\n            for (let i = secondaryMatrix[0].length - 1; i > 0; i--) {\n                keys.push(i + keyLength);\n            }\n            keys.push(keyLength);\n\n            if (facet === PRIMARY) {\n                lastLevelKey = keyLength;\n            }\n        } else {\n            lastLevelKey = primaryMatrix.length > 0 ? primaryMatrix[0].length - 1 : 0;\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        matrixTree = nestFn.entries(layoutMatrix);\n    } else {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix.length - 1; i++) {\n                keys.push(i);\n            }\n            // if (facet === PRIMARY) {\n            keys.push(primaryMatrix.length - 1);\n            // } else {\n            if (facet === SECONDARY) {\n                lastLevelKey = primaryMatrix.length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const primaryMatrixLength = primaryMatrix.length;\n            for (let i = secondaryMatrix.length - 1; i > 0; i--) {\n                keys.push(i + primaryMatrixLength);\n            }\n            // if (facet === SECONDARY) {\n            keys.push(primaryMatrixLength);\n            // }\n            if (facet === PRIMARY) {\n                lastLevelKey = primaryMatrixLength;\n            }\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        let newMatrix = [];\n        newMatrix = layoutMatrix[0].map((col, colIndex) => layoutMatrix.map(row => row[colIndex]));\n        matrixTree = nestFn.entries(newMatrix);\n    }\n    return { tree: matrixTree, lastLevelKey };\n};\n\n/**\n * Gives the min measues\n *\n * @param {boolean} isTransposed is column matrix\n * @param {Object} unitMeasures min measures to be given to cells\n * @return {Object} dimension min cell\n */\nexport const getMinMeasures = (isTransposed, unitMeasures) => {\n    if (!isTransposed) {\n        return {\n            height: unitMeasures.height,\n            width: 0\n        };\n    }\n    return {\n        height: 0,\n        width: unitMeasures.width\n    };\n};\n\n/**\n * Get the logical space from the tree\n *\n * @param {Node} item tree to be calculated\n * @param {number} measures width and height\n * @param {Array} minMeasures min measures for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} dimension\n */\nexport const getLogicalSpace = (item, measures, minMeasures, maxMeasure = []) => {\n    const { firstMeasure, secondMeasure } = measures;\n    let firstMeasureValue = 0;\n    let secondMeasureValue = 0;\n    item.values.forEach((valueArray) => {\n        let fMeasure = 0;\n        let sMeasure = 0;\n        valueArray.forEach((placeholder, colIndex) => {\n            placeholder.setAvailableSpace();\n            const space = placeholder.getLogicalSpace();\n            const minSecondMeasure = placeholder.getMinMeasures(minMeasures[secondMeasure]);\n\n            sMeasure = Math.max(sMeasure, +space[secondMeasure], minSecondMeasure);\n            maxMeasure[colIndex] = Math.max(maxMeasure[colIndex] || 0, space[firstMeasure]);\n            fMeasure += +maxMeasure[colIndex];\n        });\n        secondMeasureValue += sMeasure;\n        firstMeasureValue = Math.max(firstMeasureValue, fMeasure);\n        item.space = {\n            [secondMeasure]: Math.ceil(secondMeasureValue),\n            [firstMeasure]: Math.ceil(firstMeasureValue)\n        };\n    });\n    return {\n        [secondMeasure]: secondMeasureValue,\n        [firstMeasure]: firstMeasureValue\n    };\n};\n\n/**\n * Computes the logical spcae taken by the matrix tree\n *\n * @param {*} [item={}] tree to be viewed\n * @param {boolean} [isTransposed=false] is column matrix\n * @param {*} unitMeasures min measues for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} logical space taken\n */\nexport const computeLogicalSpace = (item = {}, config, maxMeasures) => {\n    const { isTransposed = false, unitMeasures } = config;\n    const { firstMeasure, secondMeasure } = getMeasureInfo(isTransposed);\n    const { values } = item;\n    const minMeasures = getMinMeasures(isTransposed, unitMeasures);\n\n    if (values[0].key) {\n        const logicalSpace = { [firstMeasure]: 0, [secondMeasure]: 0 };\n\n        values.forEach((valueItem) => {\n            // Compute logical space for lowest level\n            const space = computeLogicalSpace(valueItem, config, maxMeasures);\n            // Set logical space for first measure\n            logicalSpace[firstMeasure] = Math.max(logicalSpace[firstMeasure], space[firstMeasure],\n                minMeasures[firstMeasure]);\n\n            // Set logical space for second measure\n            logicalSpace[secondMeasure] += +space[secondMeasure];\n        });\n        item.space = logicalSpace;\n        return logicalSpace;\n    }\n\n    return getLogicalSpace(item, { firstMeasure, secondMeasure }, minMeasures, maxMeasures);\n};\n\n/**\n * Gives the space taken by a row\n *\n * @param {Array} row matrix array of rows\n * @return {Object} dimension of the row\n */\nexport const spaceTakenByRow = (row) => {\n    let height = 0;\n    let width = 0;\n    row.forEach((col) => {\n        const spaces = col.getLogicalSpace();\n        height = Math.max(height, spaces.height);\n        width += spaces.width;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Gives the space taken by a column\n *\n * @param {Array<Array>} matrix column matrix\n * @param {number} colIndex column index\n * @return {Object} dimension of the column\n */\nexport const spaceTakenByColumn = (matrix, colIndex) => {\n    let height = 0;\n    let width = 0;\n    matrix.forEach((row) => {\n        const col = row[colIndex];\n        const spaces = col.getLogicalSpace();\n        width = Math.max(width, spaces.width);\n        height += spaces.height;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Creates different level matrices\n *\n * @param {Object} item matrix tree\n * @param {boolean} isTransposed is column matrix\n * @return {Object} matrix of each level\n */\nexport const createMatrixEachLevel = (item, isTransposed) => {\n    if (item.values[0].key) {\n        const arr = [];\n        item.values.forEach((child) => {\n            if (!isTransposed) {\n                arr.push(...createMatrixEachLevel(child, isTransposed));\n            } else {\n                const eachLevel = createMatrixEachLevel(child, isTransposed);\n                eachLevel.forEach((e, i) => {\n                    arr[i] = arr[i] || [];\n                    arr[i].push(...e);\n                });\n            }\n        });\n        item.matrix = arr;\n        return arr;\n    }\n    if (!isTransposed) {\n        item.matrix = item.values;\n    } else {\n        item.matrix = item.values[0].map((col, colIndex) => item.values.map(row => row[colIndex]));\n    }\n    return item.matrix;\n};\n\n/**\n * Breaks the matrix into two part\n *\n * @param {Array<Array>} matrix input matrix\n * @param {boolean} isTransposed is column matrix\n * @param {number} breakPointer point in matrix where it is to be broken\n * @return {Array} two broken matrix\n */\nexport const breakMatrix = (matrix, isTransposed, breakPointer) => {\n    const primaryMatrix = [];\n    const secondaryMatrix = [];\n    if (isTransposed) {\n        matrix.forEach((row, rowIndex) => {\n            if (rowIndex >= breakPointer) {\n                secondaryMatrix.push(row);\n            } else {\n                primaryMatrix.push(row);\n            }\n        });\n    } else {\n        matrix.forEach((row, rowIndex) => {\n            row.forEach((column, columnIndex) => {\n                if (columnIndex >= breakPointer) {\n                    secondaryMatrix[rowIndex] = secondaryMatrix[rowIndex] || [];\n                    secondaryMatrix[rowIndex].push(column);\n                } else {\n                    primaryMatrix[rowIndex] = primaryMatrix[rowIndex] || [];\n                    primaryMatrix[rowIndex].push(column);\n                }\n            });\n        });\n    }\n    return [primaryMatrix, secondaryMatrix];\n};\n\n/**\n * Distributed width returned\n *\n * @param {Object} context context for the width distibution\n * @return {number} distributed widths\n */\nexport const getDistributedWidth = (context, layoutConfig) => {\n    const {\n        availableWidth,\n        width,\n        row\n    } = context;\n    const {\n        isDistributionEqual,\n        isTransposed,\n        distribution\n    } = layoutConfig;\n    let distSum = 0;\n    if (distribution && distribution[0]) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    return row.map((col, colIndex) => {\n        const space = col.getLogicalSpace().width;\n        let distWidth = (space + (availableWidth - width) * (space / width));\n        if (isTransposed) {\n            if (distribution.length > 0) {\n                distWidth = (availableWidth * distribution[colIndex] / distSum);\n            } else if (isDistributionEqual || width === 0) {\n                const rowLen = row.length;\n                distWidth = (availableWidth / rowLen);\n            }\n        }\n        return Math.floor(distWidth);\n    });\n};\n\n/**\n * Distributeed heights returned\n *\n * @param {Object} context input for the height distribution\n * @return {Object} distribured heights\n */\nexport const getDistributedHeight = (context) => {\n    let distSum = 0;\n    let gutterSum = 0;\n    let heightWithoutGutter = 0;\n    const {\n        isTransposed,\n        distribution,\n        availableHeight,\n        height,\n        isDistributionEqual,\n        gutter,\n        matrix,\n        cIdx\n    } = context;\n\n    if (distribution && distribution[0] !== undefined) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    if (gutter && gutter[0] !== undefined) {\n        gutterSum = gutter.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    heightWithoutGutter = availableHeight - Math.floor(availableHeight * gutterSum);\n\n    const colLen = matrix.length;\n    return matrix.map((row, rIdx) => {\n        const col = row[cIdx];\n        const space = col.getLogicalSpace().height;\n        let distHeight = (space + (heightWithoutGutter - height) * (space / height));\n\n        if (!isTransposed) {\n            if (distribution.length > 0 && colLen === distribution.length) {\n                distHeight = (heightWithoutGutter * distribution[rIdx] / distSum);\n            } else if (isDistributionEqual || context.height === 0) {\n                distHeight = (heightWithoutGutter / colLen);\n            }\n        }\n        return Math.floor(distHeight);\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} beg\n * @param {*} end\n */\nexport const extraCellsRemover = (arr, beg, end) => arr.slice(beg, -end);\n\n/**\n * Creates matrix instancess\n *\n * @param {Array} [arr=[]] mutated arry\n * @param {number} depth depth of the tree\n * @param {Array} matrixInfo Details about the matrix(tree, etc) to be inserted\n * @param {boolean} layout Instance of layout\n */\nexport const createMatrixInstances = (arr = [], depth, matrixInfo, layout) => {\n    const breakPointer = layout._breakPointer;\n    const config = layout.config();\n    const {\n        isTransposed\n    } = config;\n    const {\n        tree,\n        layoutMatrix\n    } = matrixInfo;\n\n    if (depth === 0) {\n        const brokenMatrix = breakMatrix(tree.matrix, isTransposed, breakPointer);\n        arr.push({\n            matrix: tree.matrix,\n            primaryMatrix: brokenMatrix[0],\n            secondaryMatrix: brokenMatrix[1],\n            space: tree.space\n        });\n        return arr;\n    }\n    const nextLevel = depth - 1;\n    tree.values.forEach((e) => {\n        createMatrixInstances(arr, nextLevel, {\n            tree: e,\n            layoutMatrix\n        }, layout);\n    });\n    return arr;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    maxMeasures: {},\n    availableSpace: {},\n    logicalSpace: {}\n};\n","import { PRIMARY } from '../enums/constants';\n/**\n *\n *\n */\nexport const defaultConfig = {\n    distribution: [],\n    classPrefix: 'muze',\n    isDistributionEqual: true,\n    unitMeasures: {\n        height: 100,\n        width: 100,\n        border: 1\n    },\n    isTransposed: false,\n    facet: PRIMARY,\n    extraCellLengths: []\n};\n","import { mergeRecursive, generateGetterSetters, ERROR_MSG } from 'muze-utils';\nimport {\n    createTree,\n    combineMatrices,\n    createMatrixInstances\n  } from '../utils';\nimport { PROPS } from './props';\nimport { HEIGHT, WIDTH } from '../enums/constants';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        // Prepare matrices\n        this._lastLevelKey = 0;\n        this._primaryMatrix = matrix[0] || [];\n        this._secondaryMatrix = matrix[1] || [];\n        this._maxMeasures = [];\n        this._availableSpace = {};\n\n        // Store the config\n        generateGetterSetters(this, PROPS);\n        const defCon = Object.assign({}, this.constructor.defaultConfig());\n        this.config(mergeRecursive(defCon, config));\n\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n    }\n\n     /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    computeViewableSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getPriorityDistribution () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @returns\n     * @memberof VisualMatrix\n     */\n    primaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._primaryMatrix;\n    }\n\n    secondaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._secondaryMatrix;\n    }\n\n    tree (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._tree;\n    }\n\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    createTree () {\n        const { tree, lastLevelKey } = createTree(this);\n        this._lastLevelKey = lastLevelKey;\n        return tree;\n    }\n\n    /**\n     * Returns the space taken by visual matrix\n     *\n     * @return {Object} space taken by the matrix\n     * @memberof VisualMatrix\n     */\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    /**\n     * Sets the provied space to the visual matrix\n     *\n     * @param {number} width width provided\n     * @param {number} height height provided\n     * @memberof VisualMatrix\n     */\n    setAvailableSpace (width, height) {\n        this.availableSpace({ width, height });\n        const tree = this.tree();\n        const heightMeasures = this.populateMaxMeasures(HEIGHT, tree);\n        const widthMeasures = this.populateMaxMeasures(WIDTH, tree);\n        const depth = this.calculateDepth(widthMeasures, heightMeasures);\n\n        this.viewableMatrix = this.createViewPortMatrix(depth);\n        this.viewableMeasures = this.redistributeSpaces(width, height);\n        return this;\n    }\n\n    /**\n     * Populate the max measures in the array\n     *\n     * @param {Array} measures array to be filled with max measures\n     * @param {Object} matrixTree matrix tree of visual matrix\n     * @param {number} measure width or height\n     * @param {number} [depth=0] depth of the tree that to be calculated\n     * @memberof VisualMatrix\n     */\n    populateMaxMeasures (type, matrixTree, depth = 0, measures = []) {\n        measures[depth] = Math.max(measures[depth] || 0, matrixTree.space[type]);\n        if (matrixTree.values) {\n            const childDepth = depth + 1;\n            matrixTree.values.forEach((child) => {\n                if (child.space) {\n                    measures = this.populateMaxMeasures(type, child, childDepth, measures);\n                }\n            });\n        }\n        return measures;\n    }\n\n    /**\n     * Gets the viewable measures for the current viewable matrix\n     *\n     * @return {Object} Set of viewable measures\n     * @memberof VisualMatrix\n     */\n    getViewableSpaces () {\n        return this.viewableMeasures;\n    }\n\n    /**\n     * Returns the matrix that can be viewed in the current viewport\n     *\n     * @return {Array} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    getViewableMatrices () {\n        return this.viewableMatrix;\n    }\n\n    /**\n     * Creates the viewport that can be viewed together\n     *\n     * @param {number} depth maxDepth that can be viewed in the viewport\n     * @return {Array<Object>} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    createViewPortMatrix (depth) {\n        const arr = [];\n        createMatrixInstances(arr, depth, this.removeExtraCells(), this);\n        return arr;\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    combineMatrices,\n    spaceTakenByColumn,\n    getDistributedHeight,\n    computeLogicalSpace,\n    createMatrixEachLevel\n  } from '../utils';\nimport { ROW_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class RowVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = (matrix[0].length > 0 ? matrix[0][0].length : 0);\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n\n        // Create Tree\n        this._tree = {\n            key: ROW_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, false);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height\n        } = measures;\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i };\n            const { widths, rowHeights, columnWidths } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = [height, height];\n            const columnMeasures = widths;\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n        tree.matrix = extraCellsRemover(tree.matrix, begCellLen, endCellLen);\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        let remainingAvailWidth;\n        let remainingWidth;\n        let cWidths = [];\n        let conditions = [];\n        let maxPrioritySpace = 0;\n        const {\n            matrix,\n            width: availableWidth,\n            maxMeasures: maxWidths,\n            maxWidth: currentWidth,\n            height\n        } = measures;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length ? this.primaryMatrix()[0].length : 0;\n\n        const dist = [];\n\n        remainingAvailWidth = availableWidth;\n        remainingWidth = currentWidth;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            // divider = Math.min(2, matrixLen);\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            // divider = Math.min(1, matrixLen);\n        }\n        conditions.forEach((i) => {\n            dist[i] = maxWidths[i];\n            maxPrioritySpace += maxWidths[i];\n            remainingAvailWidth -= dist[i];\n            remainingWidth -= dist[i];\n        });\n        matrix[0].forEach((e, i) => {\n            if (conditions.indexOf(i) === -1) {\n                dist[i] = remainingAvailWidth * (maxWidths[i] / remainingWidth);\n            }\n        });\n        matrix.forEach(row => row.forEach((col, cIdx) => {\n            if (conditions.indexOf(cIdx) === -1) {\n                col.setAvailableSpace(dist[cIdx], height);\n\n                cWidths[cIdx] = Math.max(cWidths[cIdx] || 0, Math.floor(col.getLogicalSpace().width));\n            } else {\n                cWidths[cIdx] = 0;\n            }\n        }));\n\n        const prioritySpace = availableWidth - cWidths.reduce((t, n) => t + n);\n        if (prioritySpace < 0) {\n            cWidths = cWidths.map(() => 0);\n        } else {\n            conditions.forEach((i) => {\n                cWidths[i] = Math.floor(prioritySpace * (dist[i] / maxPrioritySpace || 1));\n            });\n        }\n        return cWidths;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures, heightMeasures) {\n        let i;\n        const { height } = this.availableSpace();\n\n        for (i = 0; i < heightMeasures.length; i++) {\n            if (heightMeasures[i] <= height) break;\n        }\n\n        return Math.min(widthMeasures.length - 1, i);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n        const maxMeasures = this.maxMeasures();\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        const logicalWidths = this.getPriorityDistribution({\n            matrix: this._layoutMatrix,\n            maxWidth,\n            maxMeasures,\n            width,\n            height\n        });\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths, logicalWidths };\n            const measures = this.redistributeViewSpaces(options);\n            maxWidths = measures.maxWidths;\n            maxHeights = measures.maxHeights;\n        });\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let cWidths = [];\n        let rHeights = [];\n        let mHeight = 0;\n        const maxMeasures = this.maxMeasures();\n\n        const {\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        } = this.config();\n        const { matrix, height, maxHeights, maxWidths, logicalWidths } = measures;\n        mHeight = spaceTakenByColumn(matrix, this._lastLevelKey).height;\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        measures.maxMeasures = maxMeasures;\n        measures.maxWidth = maxWidth;\n        if (maxWidth > 0) {\n            cWidths = logicalWidths;\n        } else {\n            cWidths = maxMeasures.map(() => 0);\n        }\n        rHeights = getDistributedHeight({\n            matrix,\n            cIdx: this._lastLevelKey,\n            height: mHeight,\n            availableHeight: height,\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        });\n        if (maxWidths.length > 0) {\n            cWidths = cWidths.map((e, i) => Math.max(e, maxWidths[0][i] || 0));\n        }\n        maxWidths.push(cWidths);\n        for (let x = 0; x < maxWidths.length; x++) {\n            maxWidths[x] = cWidths;\n        }\n        maxHeights.push(rHeights);\n        return { maxWidths, maxHeights };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = maxHeights[matrixIndex][rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth, colHeight - borderWidth);\n\n                if (rIdx === 0 && cIdx < breakPointer) {\n                    columnWidths[0][cIdx] = colWidth;\n                    widths[0] = (widths[0] || 0) + colWidth;\n                } else if (rIdx === 0 && cIdx >= breakPointer) {\n                    columnWidths[1][cIdx - breakPointer] = colWidth;\n                    widths[1] = (widths[1] || 0) + colWidth;\n                }\n                if (cIdx === this._lastLevelKey) {\n                    rowHeights[0][rIdx] = colHeight;\n                    rowHeights[1][rIdx] = colHeight;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    getDistributedWidth,\n    spaceTakenByRow,\n    createMatrixEachLevel,\n    computeLogicalSpace\n  } from '../utils';\nimport { COLUMN_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class ColumnVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = matrix[0].length;\n\n        // Create Tree\n        this._tree = {\n            key: COLUMN_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, true);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height,\n            width\n        } = measures;\n\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i, height };\n            const {\n                heights,\n                rowHeights,\n                columnWidths\n            } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = heights;\n            const columnMeasures = [width, width];\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n\n        tree.matrix = tree.matrix.map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        const {\n            height,\n            maxHeights\n        } = measures;\n        let remainingHeight = height;\n        let heightDist = [];\n        let conditions = [];\n        let divider = 2;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            divider = 2;\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            divider = 1;\n        }\n        maxHeights.forEach((heights, index) => {\n            if (conditions.indexOf(index) === -1) {\n                heightDist[index] = heights;\n                remainingHeight -= heights;\n            }\n        });\n        if (remainingHeight < 0) {\n            heightDist = heightDist.map(() => 0);\n        } else {\n            conditions.forEach((condition) => {\n                heightDist[condition] = Math.min(maxHeights[condition], (remainingHeight) / divider);\n            });\n        }\n        return heightDist;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures) {\n        let j;\n        const { width } = this.availableSpace();\n\n        for (j = 0; j < widthMeasures.length; j++) {\n            if (widthMeasures[j] <= width) break;\n        }\n        return Math.min(widthMeasures.length - 1, j);\n    }\n\n     /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths };\n            const maxMeasures = this.redistributeViewSpaces(options);\n            maxWidths = maxMeasures.maxWidths;\n            maxHeights = maxMeasures.maxHeights;\n        });\n\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space column wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let rHeights = [];\n        const {\n            matrix,\n            width,\n            maxHeights,\n            maxWidths\n        } = measures;\n        const borderWidth = this.config().unitMeasures.border;\n\n        const mWidth = spaceTakenByRow(matrix[this._lastLevelKey]).width;\n        const cWidths = getDistributedWidth({\n            row: matrix[this._lastLevelKey],\n            width: mWidth,\n            availableWidth: width\n        }, this.config());\n\n        matrix.forEach((row, rIdx) => row.forEach((col, cIdx) => {\n            const oldLogicalSpace = col.getLogicalSpace();\n\n            col.setAvailableSpace(cWidths[cIdx] - borderWidth, oldLogicalSpace.height);\n\n            rHeights[rIdx] = Math.max(rHeights[rIdx] || 0, Math.floor(col.getLogicalSpace().height));\n        }));\n        if (maxHeights.length > 0) {\n            rHeights = rHeights.map((e, i) => Math.max(e, maxHeights[0][i]));\n        }\n        maxHeights.push(rHeights);\n        for (let x = 0; x < maxHeights.length; x++) {\n            maxHeights[x] = rHeights;\n        }\n        maxWidths.push(cWidths);\n        return { maxHeights, maxWidths };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, height, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        const heightDistribution = this.getPriorityDistribution({ height, maxHeights: maxHeights[0] || [] });\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = heightDistribution[rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth - borderWidth, colHeight);\n\n                if (cIdx === 0 && rIdx < breakPointer) {\n                    rowHeights[0][rIdx] = colHeight;\n                    heights[0] = (heights[0] || 0) + colHeight;\n                } else if (cIdx === 0 && rIdx >= breakPointer) {\n                    rowHeights[1][rIdx - breakPointer] = colHeight;\n                    heights[1] = (heights[1] || 0) + colHeight;\n                }\n                if (rIdx === this._lastLevelKey) {\n                    columnWidths[0][cIdx] = colWidth;\n                    columnWidths[1][cIdx] = colWidth;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import {\n    HEIGHT, WIDTH, COLUMN, ROW, HORIZONTAL, VERTICAL, HOLISTIC,\n    MAX_WIDTH_AVAIL_FOR_COL_MATRIX, COLUMN_MATRIX, MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX, ROW_MATRIX, SCROLL\n} from '../enums/constants';\n\n/**\n * Gets measurement for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @return {Object} Logical height/width of the matrix\n */\nexport function getMatrixMeasurement (matrix, type) {\n    if (matrix) {\n        return matrix.getLogicalSpace()[type];\n    }\n    return 0;\n}\n\n/**\n * Sets available space for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @param {number} value Value of measurement\n */\nexport function setMatrixMeasurement (matrix, type, value) {\n    if (matrix) {\n        const spaces = matrix.getLogicalSpace();\n        if (value && spaces[type] !== value) {\n            type === HEIGHT ? matrix.setAvailableSpace(spaces.width, value) :\n                matrix.setAvailableSpace(value, spaces.height);\n        }\n    }\n}\n\nconst setAvailableSpace = (matrix, widths, heights) => {\n    matrix.forEach((row, rIdx) => {\n        row.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(widths[cIdx], heights[rIdx]);\n        });\n    });\n};\n\nconst setViewSpaces = (layout, pointerType, viewSpaces) => {\n    let pointer = layout.config()[`${pointerType}Pointer`];\n    if (viewSpaces.length - 1 < pointer) {\n        pointer = 0;\n        layout.config({ [`${pointerType}Pointer`]: pointer });\n    }\n    return pointer;\n};\n\nconst paginationDetailsMap = {\n    column: {\n        maxMeasure: MAX_WIDTH_AVAIL_FOR_COL_MATRIX,\n        matrix: COLUMN_MATRIX,\n        measureType: WIDTH,\n        scrollType: HORIZONTAL\n    },\n    row: {\n        maxMeasure: MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX,\n        matrix: ROW_MATRIX,\n        measureType: HEIGHT,\n        scrollType: VERTICAL\n    }\n};\n\n/**\n * This method provides the required width/height in the different pagination stages.\n * If the pagination is holistic, then only the max width/height will be provided for layouting\n * If scroll is enabled, then the entire width/height shall be provided for layouting\n * Note: width is required for scrolling the columns while height is required for scrolling rows\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {Object} measureDetails different measure details for row/column\n * @param {number} maxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst getMatrixMeasureForPagination = (layout, measureDetails, maxMeasure, buffer) => {\n    const {\n        pagination\n    } = layout.config();\n    const {\n        matrix,\n        measureType,\n        scrollType\n    } = measureDetails;\n\n    switch (pagination) {\n    case HOLISTIC:\n        return maxMeasure;\n    default: {\n        const actualMeasure = getMatrixMeasurement(layout[matrix](), measureType) + buffer;\n\n        if (actualMeasure > maxMeasure) {\n            layout.scrollInfo({ [scrollType]: true });\n        }\n        return Math.max(maxMeasure, actualMeasure);\n    }\n    }\n};\n\n/**\n * This method uses the getMatrixMeasureForPagination function to calculate maximum measure\n * depending on the layouting algorithm used\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {string} matrixType row/column\n * @param {number} relatedMaxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst paginationMeasureGetter = (layout, matrixType, relatedMaxMeasure, buffer) =>\n    getMatrixMeasureForPagination(layout, paginationDetailsMap[matrixType], relatedMaxMeasure, buffer);\n\nconst getMatrixWidthDetails = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const {\n        width\n    } = layout.measurement();\n    const {\n        border,\n        buffer\n    } = layout.config();\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get width of row matrix\n    const rowMatrixWidth = getMatrixMeasurement(rowMatrix, WIDTH);\n\n    // Get maximum width allowed for the row matrix\n    const maxRowMatrixWidth = Math.min(rowMatrixWidth + buffer, width / 2);\n\n    // Get maximum width available for the column matrix\n    const maxWidthAvailableForColumnMatrix = width - maxRowMatrixWidth - borderWidth;\n\n    // Set width for column matrix\n    const columnMatrixWidth = paginationMeasureGetter(layout, COLUMN, maxWidthAvailableForColumnMatrix, 0);\n\n    return {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n\nconst getHeightRequiredByColMatrix = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const columnMatrix = layout.columnMatrix();\n\n    // Get maximum allowed height for colum matrix\n    const maxColumnMatrixHeight = Math.min(columnMatrix.getLogicalSpace().height, height / 2);\n\n    // Set the computed width and max height to column matrix to determine the actual height\n    // that will be taken by the column matrix\n    columnMatrix.setAvailableSpace(columnMatrixWidth, maxColumnMatrixHeight);\n\n    // Get the set of pages column view\n    const columnViewPages = columnMatrix.getViewableSpaces();\n\n    // Figuring out total space needed by current view space\n    const columnViewSpace = columnViewPages[layout.config().columnPointer];\n\n    // Getting height of column matrix\n    const columnMatrixHeight = columnViewSpace.height.primary + columnViewSpace.height.secondary;\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight\n    };\n};\n\nconst getMatrixHeightDetails = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const {\n        buffer\n    } = layout.config();\n\n    // Get actual height required by column matrix\n    const { columnMatrixHeight, maxColumnMatrixHeight } = getHeightRequiredByColMatrix(layout, columnMatrixWidth);\n\n    // Based on column height, compute max height available for row matrix\n    const maxHeightAvailableForRowMatrix = height - Math.min(maxColumnMatrixHeight, columnMatrixHeight);\n\n    // Get height for row matrix\n    const rowMatrixHeight = paginationMeasureGetter(layout, ROW, maxHeightAvailableForRowMatrix, buffer);\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    };\n};\n\nconst setValueMatrixMeasurements = (layout, rowViewableSpaces, columnViewableSpaces) => {\n    const centerMatrix = layout.centerMatrix();\n\n    const {\n        border\n    } = layout.config();\n    const matrices = layout.matrices();\n    const {\n        top,\n        bottom\n    } = matrices;\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get the heights for each cell in the row matrix\n    const rowHeights = [].concat(...rowViewableSpaces.map(e => e.rowHeights.primary));\n\n    // Get the widths for each of the row matrix cells(primary and secondary)\n    const rowWidthsPrimary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.primary));\n    const rowWidthsSecondary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.secondary));\n\n    // Get the widths for each cell in the column matrix\n    const columnWidths = [].concat(...columnViewableSpaces.map(e => e.columnWidths.primary));\n\n    // Get the widths for each of the column matrix cells(primary and secondary)\n    const columnHeightsPrimary = columnViewableSpaces[0].rowHeights.primary;\n    const columnHeightsSecondary = [].concat(...columnViewableSpaces.map(e => e.rowHeights.secondary));\n\n    // Setting the available space for each cell in the centre matrix computed throught the row and\n    // column matrices\n    centerMatrix.forEach((matrix, rIdx) => {\n        matrix.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(columnWidths[cIdx] - borderWidth, rowHeights[rIdx] - borderWidth);\n        });\n    });\n\n    // Set the heights and widths for the corner matrices namely:\n    // TOP_LEFT\n    setAvailableSpace(top[0], rowWidthsPrimary, columnHeightsPrimary);\n    // TOP_RIGHT\n    setAvailableSpace(top[2], rowWidthsSecondary, columnHeightsPrimary);\n    // BOTTOM_LEFT\n    setAvailableSpace(bottom[0], rowWidthsPrimary, columnHeightsSecondary);\n     // BOTTOM_RIGHT\n    setAvailableSpace(bottom[2], rowWidthsSecondary, columnHeightsSecondary);\n};\n\nconst bufferCondition = {\n    isScroll: true,\n    pagination: SCROLL\n};\n\nconst getBufferFromCondition = (layout, type) => {\n    const scrollInfo = layout.scrollInfo();\n    const {\n        pagination\n    } = layout.config();\n\n    const currentBufferType = {\n        pagination,\n        isScroll: scrollInfo[type]\n    };\n\n    return Object.keys(bufferCondition).every(e => bufferCondition[e] === currentBufferType[e]);\n};\n\nconst getActualBufferFromConfig = (layout) => {\n    const {\n        buffer\n    } = layout.config();\n    const [horizontalBuffer, verticalBuffer] = [HORIZONTAL, VERTICAL].map((type) => {\n        if (getBufferFromCondition(layout, type)) {\n            return buffer;\n        }\n        return 0;\n    });\n\n    return {\n        horizontalBuffer,\n        verticalBuffer\n    };\n};\n/**\n * Computes the measurements of space for all matrices in the\n * layout\n *\n * @param {Object} layout Instance of grid layout\n * @return {Object} set of measurements for the layout\n */\nexport const computeLayoutMeasurements = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n\n    // Compute the widths of the row and column matrices\n    const {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        maxWidthAvailableForColumnMatrix,\n        columnMatrixWidth\n    } = getMatrixWidthDetails(layout);\n\n    // Compute the heights of the row and column matrices\n    const {\n        columnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    } = getMatrixHeightDetails(layout, columnMatrixWidth);\n\n    const {\n        horizontalBuffer,\n        verticalBuffer\n    } = getActualBufferFromConfig(layout);\n    rowMatrix.setAvailableSpace(maxRowMatrixWidth - verticalBuffer, rowMatrixHeight - horizontalBuffer);\n\n    // Get row and columns viewable spaces\n    const rowViewableSpaces = rowMatrix.getViewableSpaces();\n    const columnViewableSpaces = columnMatrix.getViewableSpaces();\n\n    // Set view spaces for row and columns\n    setViewSpaces(layout, ROW, rowViewableSpaces);\n    setViewSpaces(layout, COLUMN, columnViewableSpaces);\n\n    // Set measures for each cell of the value matrix\n    setValueMatrixMeasurements(layout, rowViewableSpaces, columnViewableSpaces);\n\n    return {\n        rowMatrixHeight: rowMatrixHeight - horizontalBuffer,\n        rowMatrixWidth: rowMatrixWidth - verticalBuffer,\n        maxHeightAvailableForRowMatrix: maxHeightAvailableForRowMatrix - horizontalBuffer,\n\n        columnMatrixHeight,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n","/**\n * Gets view matrices based on current pointers for row and column\n *\n * @param {Object} layout instance of layout\n * @param {number} rowPointer current row pointer\n * @param {number} columnPointer current column pointer\n * @return {Object} returns the view matrix and its relevant information\n */\nexport const getViewMatrices = (layout, rowPointer, columnPointer) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const centerMatrix = layout.centerMatrix();\n    const matrices = layout.matrices();\n    const rowMatrices = rowMatrix.getViewableMatrices();\n    const columnMatrices = columnMatrix.getViewableMatrices();\n    const centralMatrixPointer = {\n        row: 0,\n        column: 0\n    };\n\n    for (let i = rowPointer - 1; i >= 0; i--) {\n        const length = Math.max(rowMatrices[i].primaryMatrix.length,\n            rowMatrices[i].secondaryMatrix.length);\n        centralMatrixPointer.row += length;\n    }\n     /* istanbul ignore next */\n    for (let i = columnPointer - 1; i >= 0; i--) {\n        const matrix = columnMatrices[i];\n        const { primaryMatrix, secondaryMatrix } = matrix;\n        const length = Math.max(primaryMatrix[0] ? primaryMatrix[0].length : 0,\n            secondaryMatrix[0] ? secondaryMatrix[0].length : 0);\n        centralMatrixPointer.column += length;\n    }\n\n    matrices.top[1] = columnMatrices[columnPointer].primaryMatrix;\n    matrices.bottom[1] = columnMatrices[columnPointer].secondaryMatrix;\n\n    matrices.center[0] = rowMatrices[rowPointer].primaryMatrix;\n    matrices.center[2] = rowMatrices[rowPointer].secondaryMatrix;\n\n    const rowMatrixLen = Math.max(matrices.center[0].length, matrices.center[2].length);\n     /* istanbul ignore next */\n    const columnMatrixLen = Math.max(matrices.top[1][0] ? matrices.top[1][0].length : 0, matrices.bottom[1][0] ?\n            matrices.bottom[1][0].length : 0);\n    matrices.center[1] = centerMatrix.slice(centralMatrixPointer.row, centralMatrixPointer.row + rowMatrixLen)\n        .map(matrix => matrix.slice(centralMatrixPointer.column, centralMatrixPointer.column + columnMatrixLen));\n\n    return {\n        matrices,\n        rowPages: rowMatrices.length,\n        columnPages: columnMatrices.length\n    };\n};\n\nconst measureSum = measureArr => measureArr.reduce((total, measure) => total + measure, 0);\n/**\n * Returns measurements of the cells of the current matrix\n *\n * @param {Object} layout instance of layout\n * @return {Object} returns the measurements for current view matrix\n */\nexport const getViewMeasurements = (layout, maxRowHeight, maxColWidth) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const {\n        columnPointer,\n        rowPointer\n    } = layout.config();\n\n    const rowSpaces = rowMatrix.getViewableSpaces()[rowPointer];\n    const colSpaces = columnMatrix.getViewableSpaces()[columnPointer];\n\n    const {\n        rowHeights,\n        width: rowMatrixWidth\n    } = rowSpaces;\n    const {\n        columnWidths,\n        height: columnMatrixHeight\n    } = colSpaces;\n\n    const { primary: leftWidth, secondary: rightWidth } = rowMatrixWidth;\n    const { primary: topHeight, secondary: bottomHeight } = columnMatrixHeight;\n\n    const centerHeight = measureSum(rowHeights.primary);\n    const centerWidth = measureSum(columnWidths.primary);\n    const viewWidth = [leftWidth, Math.min(centerWidth, maxColWidth), rightWidth];\n    const viewHeight = [topHeight, Math.min(centerHeight, maxRowHeight), bottomHeight];\n\n    return {\n        viewWidth,\n        viewHeight,\n        actualCenterMeasures: {\n            height: centerHeight,\n            width: centerWidth\n        },\n        totalMeasures: {\n            width: measureSum(viewWidth),\n            height: measureSum(viewHeight)\n        },\n        unitHeights: rowHeights,\n        unitWidths: columnWidths\n    };\n};\n","/**\n * This file declares a table that can be extended to create a Datagrid, crosstab\n * and man other visualzations that require a tabular structure.\n */\n\nimport { getUniqueId, mergeRecursive } from 'muze-utils';\nimport GenericLayout from '../generic-layout';\nimport { DEFAULT_CONFIGURATION, DEFAULT_MEASUREMENTS } from './defaults';\nimport { generateVisualMatrices } from './layout-helper';\nimport { computeLayoutMeasurements } from './computations';\nimport { getViewMeasurements, getViewMatrices } from './view-info-getter';\n/**\n * This class is used to create a tabular structure that\n * can house charts and values.\n *\n * @class GridLayout\n */\nexport default class GridLayout extends GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} matrices Set of upto 9 matrices containing the cells to be rendered\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config external configurations.\n     * @memberof GenericLayout\n     */\n    constructor (matrices, mountPoint, measurement, config) {\n        super(mountPoint, measurement, config);\n        this.matrices(matrices);\n        this.config(this.constructor.defaultConfig());\n        this._layoutId = getUniqueId();\n        this._scrollInfo = { horizontal: false, vertical: false };\n    }\n\n    static defaultViewInfo () {\n        return Object.assign({}, {\n            layoutDimensions: {\n                border: this.defaultConfig().border,\n                viewHeight: [0, 0, 0],\n                viewWidth: [0, 0, 0]\n            },\n            viewMatricesInfo: {\n                columnPages: 0,\n                rowPages: 0,\n                matrices: { top: [], center: [], bottom: [] }\n            }\n        });\n    }\n\n    /**\n     * Returns initial set of measurements for the grid layout\n     *\n     * @static\n     * @return {Object} Returns initial set of measurements\n     * @memberof GridLayout\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENTS;\n    }\n\n    /**\n     * Returns initialconfiguration for grid layout\n     *\n     * @static\n     * @return {Object} Returns initial configuration for grid layout\n     * @memberof GridLayout\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIGURATION;\n    }\n\n    /**\n     * This function is used to return an instance of GridLayout\n     *\n     * @return {GridLayout} Instance of grid layout.\n     * @static\n     * @memberof GridLayout\n     */\n    static create () {\n        return new GridLayout(null, null, this.defaultMeasurement(), this.defaultConfig());\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     *\n     * @param {Array} matrices Set of matrices\n     * @return {Object} Getter/Setter\n     * @memberof GridLayout\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = generateVisualMatrices(this, matrices);\n            return this;\n        }\n        return super.matrices(matrices);\n    }\n\n    /**\n     * Triggers the computations for the layout based on the matrices available\n     * This causes a reflow in the entire layout system.\n     *\n     * @return {Object} Layout instance\n     * @memberof GridLayout\n     */\n    triggerReflow () {\n        this.scrollInfo({ horizontal: false, vertical: false });\n        const {\n            maxHeightAvailableForRowMatrix,\n            maxWidthAvailableForColumnMatrix\n        } = computeLayoutMeasurements(this);\n\n        this.setViewInformation(maxHeightAvailableForRowMatrix, maxWidthAvailableForColumnMatrix);\n        return this;\n    }\n\n    gotoPage (type, pageNumber) {\n        const pageType = type.toLowerCase();\n        const { viewMatricesInfo } = this.viewInfo();\n        const totalPages = viewMatricesInfo[`${pageType}Pages`];\n        const pointer = Math.min(Math.max(1, pageNumber), totalPages);\n        this.config({\n            [`${pageType}Pointer`]: pointer - 1\n        });\n        this.setViewInformation();\n        this.renderGrid();\n        return this;\n    }\n\n    pages (type) {\n        const { viewMatricesInfo } = this.viewInfo();\n        const pageType = type.toLowerCase();\n        return {\n            totalPages: viewMatricesInfo[`${pageType}Pages`],\n            currentPage: this.config()[`${pageType}Pointer`] + 1\n        };\n    }\n\n    viewInfo (...viewInfo) {\n        if (viewInfo.length) {\n            this._viewInfo = viewInfo[0];\n            return this;\n        }\n        return this._viewInfo;\n    }\n\n    scrollInfo (...scrollInfo) {\n        if (scrollInfo.length) {\n            this._scrollInfo = mergeRecursive(this._scrollInfo, scrollInfo[0]);\n            return this;\n        }\n        return this._scrollInfo;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof GridLayout\n     */\n    setViewInformation (maxRowHeight, maxColWidth) {\n        const {\n            rowPointer,\n            columnPointer,\n            border\n        } = this.config();\n        const viewMatricesInfo = getViewMatrices(this, rowPointer, columnPointer);\n        const layoutDimensions = getViewMeasurements(this, maxRowHeight, maxColWidth);\n        layoutDimensions.border = border;\n        this.viewInfo({\n            viewMatricesInfo,\n            layoutDimensions\n        });\n        return this;\n    }\n}\n","import RowMatrix from '../visual-matrix/row-matrix';\nimport ColumnMatrix from '../visual-matrix/column-matrix';\n\nexport const generateVisualMatrices = (context, matrices) => {\n    // Set of matrices for layout is generated starting with the left matrix\n    let leftMatrix = [];\n    let rightMatrix = [];\n    let topMatrix = [];\n    let bottomMatrix = [];\n    let begColCells;\n    let endColCells;\n    const {\n        isRowSizeEqual,\n        isColumnSizeEqual,\n        gutterSpace,\n        distribution,\n        border,\n        breakPage,\n        priority\n    } = context.config();\n    const {\n        minUnitHeight,\n        minUnitWidth\n    } = context.measurement();\n    const { top, center, bottom } = matrices;\n    const [topLeft, topColumns, topRight] = top;\n    const [leftRows, valueMatrix, rightRows] = center;\n    const [bottomLeft, bottomColumns, bottomRight] = bottom;\n\n    if (leftRows.length > 0) {\n        // If no left matrix is present, context will be empty\n        leftMatrix = [...topLeft, ...leftRows, ...bottomLeft];\n    }\n    if (rightRows.length > 0) {\n        // If no right matrix is present, context will be empty\n        rightMatrix = [...topRight, ...rightRows, ...bottomRight];\n    }\n    if (topColumns.length > 0 && topColumns[0].length > 0) {\n        // If no top matrix is present, context will be empty\n        topMatrix = topColumns.map((d, i) => [...topLeft[i], ...d, ...topRight[i]]);\n    }\n    if (bottomColumns.length > 0 && bottomColumns[0].length > 0) {\n        // If no bottom matrix is present, context will be empty\n        bottomMatrix = bottomColumns.map((d, i) => [...bottomLeft[i], ...d, ...bottomRight[i]]);\n    }\n\n    context.rowMatrix(new RowMatrix([leftMatrix, rightMatrix], {\n        isDistributionEqual: isRowSizeEqual,\n        distribution: distribution.rows,\n        gutter: gutterSpace.rows,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.row,\n        breakPage: breakPage.rows.map(e => e + Math.max(topLeft.length, topRight.length)),\n        extraCellLengths: [topLeft.length, bottomLeft.length]\n    }));\n\n    if (topLeft.length > 0) {\n        begColCells = topLeft[0].length;\n    } else {\n        begColCells = bottomLeft.length > 0 ? bottomLeft[0].length : 0;\n    }\n\n    if (topRight.length > 0) {\n        endColCells = topRight[0].length;\n    } else {\n        endColCells = bottomRight.length > 0 ? bottomRight[0].length : 0;\n    }\n\n    context.columnMatrix(new ColumnMatrix([topMatrix, bottomMatrix], {\n        isDistributionEqual: isColumnSizeEqual,\n        distribution: distribution.columns,\n        gutter: gutterSpace.columns,\n        isTransposed: true,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.col,\n        breakPage: breakPage.columns,\n        extraCellLengths: [begColCells, endColCells]\n    }));\n    context.centerMatrix(valueMatrix);\n\n    return matrices;\n};\n","import {\n    TOP, BOTTOM, LEFT, RIGHT, CENTER, BLANK_BORDERS, COLUMN, ROW,\n    VIEW_INDEX, ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, MIDDLE, NO_BORDERS\n} from '../enums/constants';\n\nconst borderMap = {\n    [`${TOP}-${LEFT}`]: NO_BORDERS,\n    [`${TOP}-${MIDDLE}`]: COLUMN,\n    [`${TOP}-${RIGHT}`]: NO_BORDERS,\n    [`${CENTER}-${LEFT}`]: ROW,\n    [`${CENTER}-${MIDDLE}`]: CENTER,\n    [`${CENTER}-${RIGHT}`]: ROW,\n    [`${BOTTOM}-${LEFT}`]: NO_BORDERS,\n    [`${BOTTOM}-${MIDDLE}`]: COLUMN,\n    [`${BOTTOM}-${RIGHT}`]: NO_BORDERS\n};\n\nconst applySpecificBorder = (cells, color, type, style) => {\n    cells.style(`border-${type}`, `${style} ${color}`);\n};\n\nconst specificBorderApplier = (borderTypes, showBorders, cells, borderInfo) => {\n    const {\n        color,\n        width,\n        style\n    } = borderInfo;\n    const borderStyle = `${width}px ${style}`;\n\n    borderTypes.forEach((borderType) => {\n        applySpecificBorder(cells, showBorders[borderType] ? color : BLANK_BORDERS, borderType, borderStyle);\n    });\n};\n\nconst borderApplier = (cells, borderInfo) => {\n    const {\n       showRowBorders,\n      showColBorders,\n      showValueBorders\n  } = borderInfo;\n    return {\n        row: () => specificBorderApplier([TOP, BOTTOM], showRowBorders, cells, borderInfo),\n        column: () => specificBorderApplier([LEFT, RIGHT], showColBorders, cells, borderInfo),\n        center: () => specificBorderApplier([LEFT, RIGHT, TOP, BOTTOM], showValueBorders, cells, borderInfo)\n    };\n};\n\nexport const applyBorders = (cells, border, row, column) => {\n    const borderApplierFn = borderApplier(cells, border);\n    const borderMapVal = borderMap[`${ROW_MATRIX_INDEX[VIEW_INDEX[row]]}-${COLUMN_MATRIX_INDEX[column]}`];\n    if (borderMapVal) {\n        borderApplierFn[borderMapVal]();\n    }\n};\n","import { selectElement } from 'muze-utils';\nimport {\n     TOP, BOTTOM, ROW_SPAN, COL_SPAN, CENTER, ROW, COLUMN\n} from '../enums/constants';\n\nconst orderMaker = arr => Array.from(Array(arr.length).keys());\n\nconst nestByStack = (stack, updateArr, optionalParams = {}) => {\n    let {\n        order,\n        keyFn\n    } = optionalParams;\n    const arr = updateArr.slice();\n    const currStack = stack.slice();\n    const prevStack = currStack.slice();\n    // Order in which element are to be checked for nesting, default normal looping\n    // Order is always in the order of nest, i.e., left to right\n    order = order || Array.from(Array(arr.length).keys());\n\n    // Key function, if array of objects\n    keyFn = keyFn || (v => v);\n\n    // Return same array if stack is empty\n    if (currStack.length === 0) {\n        const newArr = [];\n        order.forEach((e) => {\n            newArr.push(arr[e]);\n        });\n        return { prevStack, currStack: arr, arr: newArr };\n    }\n\n    let arrVal = '';\n    let stackVal = '';\n    const newArr = [];\n\n    // Loop in order\n    for (let i = order.length - 1; i >= 0; i--) {\n        // Get current element index from the order given\n        const currElemIndex = order[i];\n\n        // Crete a hashmap for the hierarchy by joining strings of the array for both stack and input array\n        arrVal += keyFn(arr[currElemIndex]);\n        stackVal += keyFn(currStack[currElemIndex]);\n\n        // If the current value and value in stack is same, convert it to null\n        if (arrVal === stackVal) {\n            newArr[currElemIndex] = null;\n        } else {\n            stackVal = '';\n            // Loop from the current index in order to the last element in order to change the\n            // whole hierarchy\n            for (let j = i; j < order.length; j++) {\n                const newElem = order[j];\n                const arrElem = arr[newElem];\n\n                newArr[newElem] = arrElem;\n\n                // Reset stack to new stack\n                currStack[newElem] = arrElem;\n                stackVal = arrVal;\n            }\n        }\n    }\n    const returnArr = [];\n    order.forEach((e) => {\n        returnArr.push(newArr[e]);\n    });\n    return { prevStack, currStack, arr: returnArr };\n};\n\nconst spanCalculator = (colData, colIdx, matrix, rIdx) => {\n    // if data is not header cell then rowspan\n    // has to be 1\n    if (!colData) {\n        return () => null;\n    }\n\n    const conditions = {\n        row: count => matrix[rIdx + count] && matrix[rIdx + count][colIdx],\n        column: count => matrix[rIdx][colIdx + count]\n    };\n\n    return (type) => {\n        let count = 1;\n        let isNull = false;\n\n        while (!isNull) {\n            if (conditions[type](count) === null) {\n                count += 1;\n            } else {\n                isNull = true;\n            }\n        }\n        return count;\n    };\n};\n\nconst maskCreator = (matrix, order) => ({\n    row: () => {\n        let stack = [];\n        return matrix.map((e) => {\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, e, { keyFn: val => val.valueOf(), order });\n\n            stack = currStack;\n            return arr;\n        });\n    },\n    column: () => {\n        let stack = [];\n        const viewMatrix = [];\n        matrix.length && matrix[0].forEach((cell, colIndex) => {\n            const hierarchy = [];\n            matrix.forEach((row) => {\n                hierarchy.push(row[colIndex]);\n            });\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, hierarchy, { keyFn: val => val.valueOf(), order });\n            stack = currStack;\n\n            matrix.forEach((row, rowIndex) => {\n                viewMatrix[rowIndex] = viewMatrix[rowIndex] || [];\n                viewMatrix[rowIndex][colIndex] = arr[rowIndex];\n            });\n        });\n        return viewMatrix;\n    }\n});\n\nconst spanGenerator = viewMatrix => ({\n    row: () => {\n        const spans = [];\n        viewMatrix.forEach((row, ridx) => {\n            spans[ridx] = spans[ridx] || [];\n            row.forEach((col, i) => {\n                if (viewMatrix[ridx][i]) {\n                    const currSpan = spanCalculator(col, i, viewMatrix, ridx)('row');\n                    currSpan && spans[ridx].push(currSpan);\n                }\n            });\n        });\n        return spans;\n    },\n    column: () => viewMatrix.map((row, ridx) => row.map((col, i) => spanCalculator(col, i, viewMatrix, ridx)('column'))\n                    .filter(col => col !== null))\n});\n\nconst getOrder = () => ({\n    row: matrix => orderMaker(matrix[0]),\n    column: matrix => orderMaker(matrix)\n});\n\nconst matrixSpanGeneratorMap = {\n    [`${TOP}-1`]: {\n        orderGetter: getOrder()[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${BOTTOM}-1`]: {\n        orderGetter: getOrder()[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${CENTER}-0`]: {\n        orderGetter: getOrder()[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    },\n    [`${CENTER}-2`]: {\n        orderGetter: getOrder()[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    }\n};\n\nconst matrixSpanGenerator = (type) => {\n    const generator = matrixSpanGeneratorMap[type];\n    if (generator) {\n        return generator;\n    }\n    return {\n        orderGetter: () => null,\n        viewMatrixMaker: matrix => () => matrix,\n        spanMaker: () => () => null\n    };\n};\n\n/**\n * This function is used to set the col and row spans\n * for the matrices based on repeated/hierarchichal data\n *\n * @export\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {string} type Type of array (center, top, bottom)\n * @param {number} index Index of array in the row\n * @return {Object} containing the view matrix and their spans\n */\nexport function cellSpanMaker (matrix, type, index) {\n    let spans = null;\n    let viewMatrix = matrix;\n    const {\n        orderGetter,\n        viewMatrixMaker,\n        spanMaker\n    } = matrixSpanGenerator(`${type}-${index}`);\n\n    if (matrix.length) {\n        const order = orderGetter(matrix);\n        viewMatrix = viewMatrixMaker(matrix, order)();\n        spans = spanMaker(viewMatrix)();\n    }\n    return { viewMatrix, spans };\n}\n\nconst spaceAllocationDueToSpan = (span = 1, placeholder, config, index) => {\n    const height = placeholder.availHeight();\n    const width = placeholder.availWidth();\n    const borderWidth = config.border.width;\n    const { unitWidths } = config.dimensions;\n    const { col } = index;\n\n    return {\n        [ROW_SPAN] () {\n            placeholder.setAvailableSpace(width, height * span);\n            if (span === 1) {\n                selectElement(this).style('height', `${height * span + borderWidth}px`);\n            }\n        },\n        [COL_SPAN] () {\n            const primaryUnitWidth = unitWidths.primary[col];\n            if (span > 1) {\n                let cumulativeWidth = 0;\n                for (let i = col; i < col + span; i++) {\n                    cumulativeWidth += unitWidths.primary[i] - borderWidth;\n                }\n                placeholder.setAvailableSpace(cumulativeWidth + borderWidth, height);\n            } else if (primaryUnitWidth) {\n                placeholder.setAvailableSpace(primaryUnitWidth - borderWidth, height);\n            }\n            selectElement(this).style('height', `${height}px`);\n        }\n    };\n};\n\nconst spanApplier = (cells, spans, config, type) => {\n    let cellCounter = 0;\n    cells.attr(type, function (cell, colIndex) {\n        if (colIndex === 0) {\n            cellCounter = 0;\n        }\n        const span = spans[cell.rowIndex][colIndex];\n        const placeholder = cell.placeholder;\n        const index = {\n            row: cell.rowIndex,\n            col: cellCounter\n        };\n\n        spaceAllocationDueToSpan(span, placeholder, config, index)[type].bind(this)();\n        cellCounter += span;\n        return span;\n    });\n};\n\nconst spanApplierMap = {\n    [`${TOP}-0`]: null,\n    [`${TOP}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${TOP}-2`]: null,\n    [`${CENTER}-0`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${CENTER}-1`]: null,\n    [`${CENTER}-2`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${BOTTOM}-0`]: null,\n    [`${BOTTOM}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${BOTTOM}-2`]: null\n};\n\nexport const applySpans = (cells, spans, config, type) => {\n    const applier = spanApplierMap[type];\n    if (applier) {\n        applier(cells, spans, config);\n    }\n};\n","import { ERROR_MSG } from 'muze-utils';\n/**\n * An Interface to be implemented if the transaction support is necessary. This class ensures reactivity to\n * global properties.\n */\nexport default class TransactionSupport {\n    /**\n     * Property accessor for data member of the class. Data is passed to the system by calling this method.\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for width of the class. Width is passed as an integer.\n     */\n    width () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for height of the class. Height is passed as an integer.\n     */\n    height () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for config of the class. Config is passed as an object.\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n}\n","import { TOP, BOTTOM, LEFT, TITLE, SUB_TITLE, GROUP, LAYOUT, LEGEND } from '../constants';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const arrangeComponents = (context) => {\n    const legendConfig = context.config().legend;\n    const titleConfig = context.title()[1];\n    const subtitleConfig = context.subtitle()[1];\n    const titleLayouts = {\n        [`${TOP}-${TOP}`]: [TITLE, SUB_TITLE, GROUP],\n        [`${BOTTOM}-${BOTTOM}`]: [GROUP, SUB_TITLE, TITLE],\n        [`${TOP}-${BOTTOM}`]: [TITLE, GROUP, SUB_TITLE],\n        [`${BOTTOM}-${TOP}`]: [SUB_TITLE, GROUP, TITLE]\n    };\n    const legendLayouts = [\n        [LEGEND, LAYOUT],\n        [LAYOUT, LEGEND]\n    ];\n    const titlePosition = titleConfig.position || TOP;\n    const subtitlePosition = subtitleConfig.position || TOP;\n\n    return {\n        headers: titleLayouts[`${titlePosition}-${subtitlePosition}`],\n        legends: legendConfig.position === LEFT || legendConfig.position === TOP ?\n        legendLayouts[0] : legendLayouts[1]\n    };\n};\n","/**\n * Flag to specify whether direction is vertical.\n */\nexport const MARGIN = 'margin';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const SPACE_FIXER = 'spaceFixer';\nexport const CLASSPREFIX = 'muze';\nexport const VERTICAL_ALIGN = 'verticalAlign';\nexport const TEXT_ALIGN = 'textAlign';\nexport const IS_OFFSET = 'isOffset';\nexport const MIDDLE = 'middle';\nexport const BASELINE = 'baseline';\nexport const SHOW = 'show';\nexport const CENTER = 'center';\nexport const TEXT = 'text';\nexport const HEADER = 'header';\nexport const HEIGHT = 'height';\nexport const WIDTH = 'width';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const FIELDS = 'fields';\nexport const TRANSFORM = 'transform';\nexport const LAYER_DEF = 'layerDef';\nexport const CONFIG = 'config';\nexport const DETAIL_FIELDS = 'detailFields';\nexport const MAX_LINES = 'maxLines';\nexport const MIN_CHARS = 'minCharacters';\nexport const ROTATION = 'rotation';\n\nexport const TEXT_CELL = 'text-cell';\nexport const AXIS_CELL = 'axis-cell';\nexport const GEOM_CELL = 'geom-cell';\nexport const BLANK_CELL = 'blank-cell';\n","// eneum to refer to simple cell\nexport const SIMPLE = 'simple';\n// eneum to refer to header cell\nexport const TEXT = 'text';\n// enum to refer to axis cell\nexport const AXIS = 'axis';\n// enum to refer to visual cell\nexport const GEOM = 'geom';\n// enum to refer blank cell\nexport const BLANK = 'blank';\n","import {\n    ERROR_MSG,\n    getUniqueId,\n    mergeRecursive\n} from 'muze-utils';\nimport { SIMPLE } from './enums/cell-type';\nimport { SIMPLE_CELL } from './constants';\n\n/**\n * This file declares a class that is used as an interface to create new\n * SimpleCell elements.\n * @module SimpleCell\n */\n/**\n * Base class for all table cells.\n *\n * @interface\n * @class SimpleCell\n */\nclass SimpleCell {\n\n    /**\n     * Creates an instance of SimpleCell.\n     *\n     * @param {*} config The input configuration.\n     * @memberof SimpleCell\n     */\n    constructor (config) {\n        this._id = getUniqueId();\n\n        const defConfig = mergeRecursive({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(defConfig, config || {});\n\n        this._mount = null;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     */\n    get type () {\n        return SIMPLE;\n    }\n\n    static formalName () {\n        return SIMPLE_CELL;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     * @return {Object} Default config for the placeholder\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the value contained by the SimpleCell.\n     *\n     * @memberof SimpleCell\n     */\n    valueOf () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a unique identifier for the instance used\n     * to control selective rendering.\n     *\n     * @memberof SimpleCell\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized representation of the instance.\n     *\n     * @memberof SimpleCell\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns an object with width and height fields\n     * specifying the space taken up by this metod.\n     *\n     * @memberof SimpleCell\n     */\n    getLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Method used to set the space available to render the SimpleCell\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @memberof SimpleCell\n     */\n    setAvailableSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    remove () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getMinMeasures (providedMinMeasure = 0) {\n        return providedMinMeasure;\n    }\n\n}\n\nexport default SimpleCell;\n","export const SIMPLE_CELL = 'SimpleCell';\nexport const TEXT_CELL = 'TextCell';\nexport const AXIS_CELL = 'AxisCell';\nexport const BLANK_CELL = 'BlankCell';\nexport const GEOM_CELL = 'GeomCell';\n\n","/**\n * This file exports variables that are used as defaults for\n * the placeholders\n */\nimport * as CONSTANTS from './constants';\n\n /**\n * Default Configuration for the cells\n * @return {Object} Default configuration\n */\nexport const DEFAULT_CONFIG = {\n    [CONSTANTS.MARGIN]: {\n        [CONSTANTS.LEFT]: 0,\n        [CONSTANTS.RIGHT]: 0,\n        [CONSTANTS.TOP]: 0,\n        [CONSTANTS.BOTTOM]: 0\n    },\n    [CONSTANTS.SPACE_FIXER]: 2,\n    [CONSTANTS.IS_OFFSET]: false,\n    [CONSTANTS.VERTICAL_ALIGN]: null,\n    [CONSTANTS.TEXT_ALIGN]: CONSTANTS.CENTER,\n    [CONSTANTS.SHOW]: true,\n    [CONSTANTS.MAX_LINES]: 0,\n    [CONSTANTS.MIN_CHARS]: 0,\n    [CONSTANTS.ROTATION]: null\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { GEOM, TEXT, AXIS, BLANK } from './enums/cell-type';\n\nconst DEFAULT_PROPS = {\n    mount: {},\n    availHeight: {},\n    availWidth: {},\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config, value)\n    },\n    logicalSpace: {},\n    minSpacing: {},\n    source: {}\n};\n\nconst geomProps = {\n    data: {},\n    caption: {},\n    config: {},\n    axes: {},\n    facetByFields: {},\n    fields: {},\n    transform: {},\n    layerDef: {},\n    detailFields: {}\n};\n\nconst textProps = {\n    smartText: {}\n};\nexport const PROPS = {\n    [GEOM]: mergeRecursive(geomProps, DEFAULT_PROPS),\n    [TEXT]: mergeRecursive(textProps, DEFAULT_PROPS),\n    [AXIS]: DEFAULT_PROPS,\n    [BLANK]: DEFAULT_PROPS\n};\n","/**\n * This file declares a class that represents a table cell\n * used to house an axis.\n * @module VisualCell\n */\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport { CLASSPREFIX, HEIGHT, WIDTH, AXIS_CELL, BOTTOM, TOP } from './enums/constants';\nimport SimpleCell from './simple-cell';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { AXIS } from './enums/cell-type';\nimport { PROPS } from './props';\nimport * as CONSTANTS from './constants';\n\n/**\n * Computes the logical space of the an axis instance within an axis cell\n *\n * @param {Object} context Required to get the needed parameters to compute axis space\n * @return {Object} Returns the logical space for axis\n */\nconst computeAxisSpace = (context) => {\n    let logicalWidth;\n    let logicalHeight;\n    const axis = context.source();\n    const {\n        spaceFixer,\n        margin\n    } = context.config();\n    const {\n        width,\n        height\n    } = axis.getLogicalSpace();\n    const {\n            show\n        } = axis.config();\n    if (show === true) {\n        logicalHeight = Math.floor(height + margin.top + margin.bottom + spaceFixer);\n        logicalWidth = Math.floor(width + margin.left + margin.right + spaceFixer);\n    } else {\n        [logicalWidth, logicalHeight] = [width, height];\n    }\n    return {\n        width: logicalWidth,\n        height: logicalHeight\n    };\n};\n\n/**\n * Represents an axis cell.\n *\n * @class Axis\n */\nclass AxisCell extends SimpleCell {\n\n    /**\n     * Creates an instance of AxisCell.\n     *\n     * @param {Object} config The input config.\n     * @memberof AxisCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._axis = null;\n        this._availHeight = null;\n        this._availWidth = null;\n        this._logicalSpace = null;\n\n        generateGetterSetters(this, PROPS[AXIS]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof AxisCell\n     */\n    get type () {\n        return AXIS;\n    }\n\n    /**\n     * This method return the value conatined by this SimpleCell.\n     *\n     * @return {SimpleAxis | ColorAxis} Instance of SimpleAxis or ColorAxis.\n     * @memberof AxisCell\n     */\n    valueOf () {\n        return this.source().id;\n    }\n\n    /**\n     * This method return the unique identififer of the axis\n     *\n     * @return {string} Id of the axis.\n     * @memberof AxisCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    static formalName () {\n        return CONSTANTS.AXIS_CELL;\n    }\n\n    /**\n     * Retrns the serialized representation of this cell.\n     *\n     * @return {Object}Object with serializable props.\n     * @memberof AxisCell\n     */\n    serialize () {\n        return {\n            type: AXIS,\n            axis: this.source().serialize()\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof AxisCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * return the space taken up by an axis element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof AxisCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeAxisSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @return {Instance} Returns current Instance\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        const {\n            margin,\n            isOffset\n        } = this.config();\n\n        if (width || height) {\n            this.source().setAvailableSpace(width, height, margin, isOffset);\n            this.source().logicalSpace(null);\n        } else {\n            this.source().resetLogicalSpace();\n        }\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the axis inside the axis cell.\n     *\n     * @param {HTMLElement} mount The mount point.\n     * @return {Selection} node where axis mounted\n     * @memberof AxisCell\n     */\n    /* istanbul ignore next */render (mount) {\n        if (!mount) {\n            return this;\n        }\n        let actualWidth = 0;\n        let actualHeight = 0;\n        const axis = this.source();\n        const availHeight = this.availHeight();\n        const availWidth = this.availWidth();\n        const {\n            margin\n        } = this.config();\n        const {\n            top,\n            bottom,\n            left,\n            right\n        } = margin;\n        const {\n            show,\n            orientation\n        } = axis.config();\n        const wrapperDiv = makeElement(selectElement(mount), 'div', [this], `${CLASSPREFIX}-${AXIS_CELL}`);\n        const selection = makeElement(wrapperDiv, 'svg', [1], `${CLASSPREFIX}-axis-container`);\n        selection.classed(`${CLASSPREFIX}-axis-container-${orientation}`, true);\n\n        this.mount(mount);\n        if (!availWidth) {\n            selection.attr(WIDTH, `${0}px`);\n        }\n        if (!availHeight) {\n            selection.attr(HEIGHT, `${0}px`);\n        }\n        actualWidth = availWidth;\n        actualHeight = availHeight;\n        if (!show) {\n            actualWidth = (orientation === TOP || orientation === BOTTOM) ? availWidth : 0;\n            actualHeight = (orientation === TOP || orientation === BOTTOM) ? 0 : availHeight;\n        }\n        wrapperDiv.style(WIDTH, `${actualWidth}px`)\n                        .style(HEIGHT, `${actualHeight}px`)\n                        .style('margin-top', top)\n                        .style('margin-bottom', bottom)\n                        .style('margin-left', left)\n                        .style('margin-right', right);\n\n        axis.mount(selection.node());\n        return selection;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Current instance of AxisCell\n     * @memberof AxisCell\n     */\n    remove () {\n        this.source() && this.source().remove();\n        this.mount() && this.mount().remove();\n        return this;\n    }\n}\n\nexport default AxisCell;\n\n","/**\n * This file declares a class that represents a BLANK element in a  table.\n * @module VisualCell\n */\nimport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    generateGetterSetters\n    } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { CLASSPREFIX, BLANK_CELL } from './enums/constants';\nimport { BLANK } from './enums/cell-type';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { PROPS } from './props';\nimport * as CONSTANTS from './constants';\n\n/**\n * Represents a table haeder.\n *\n * @class BLANK\n */\nclass BlankCell extends SimpleCell {\n\n    /**\n     * Creates an instance of BLANK.\n     * @param {Object} config The input configuration.\n     * @memberof BLANK\n     */\n    constructor (config) {\n        super(config);\n\n        generateGetterSetters(this, PROPS[BLANK]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof BlankCell\n     */\n    get type () {\n        return BLANK;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof BlankCell\n     */\n    valueOf () {\n        return this.id;\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof BlankCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the BLANK cell.\n     *\n     * @return {string} The unique identifier for the BLANK.\n     * @memberof BlankCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    static formalName () {\n        return CONSTANTS.BLANK_CELL;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof BLANK\n     */\n    serialize () {\n        return {\n            type: BLANK\n        };\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof BLANK\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            return {\n                width: this.width || 0,\n                height: this.height || 0\n            };\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the BLANK cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof BLANK\n     */\n    /* istanbul ignore next */render (mount) {\n        if (mount) {\n            const { style } = this.config();\n            // append span element to mount point\n            this.mount(mount);\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id]);\n            elem.classed(`${CLASSPREFIX}-${BLANK_CELL}`, true);\n            elem.style('width', `${this.availWidth()}px`);\n            elem.style('height', `${this.availHeight()}px`);\n            elem.html('');\n            // apply style on the returned element\n            if (style) {\n                applyStyle(elem, style);\n            }\n        } return this;\n    }\n\n    /**\n     * Removes the cell(Disposal)\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n\n    getMinMeasures () {\n        return 0;\n    }\n }\nexport default BlankCell;\n","/**\n * This file declares a class that represents a Text element in a  table.\n * @module VisualCell\n */\n\nimport {\n    selectElement,\n    makeElement,\n    getSmartComputedStyle,\n    generateGetterSetters\n} from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { TEXT } from './enums/cell-type';\nimport { PROPS } from './props';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { CLASSPREFIX, TOP, BOTTOM, LEFT, RIGHT, HEADER, WIDTH, TEXT_CELL } from './enums/constants';\nimport './text-cell.scss';\nimport * as CONSTANTS from './constants';\n\nconst setSmartText = (context) => {\n    const source = context.source();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       rotation\n   } = context.config();\n    const {\n        left,\n        right,\n        top,\n        bottom\n     } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const labelManager = context.dependencies().labelManager;\n\n    labelManager.setStyle(context._computedStyle);\n\n    !rotation && context.smartText(labelManager.getSmartText(source, availWidth, availHeight, false));\n    rotation && context.smartText(labelManager.getSmartText(source, availHeight, availWidth, true));\n\n    return context;\n};\n\n/**\n* Computes the Logical Space for the text\n*\n* @param {Object} context Required to get the needed parameters to compute text space\n* @return {Object} Logical space taken up by text\n* @memberof TextCell\n*/\nconst computeTextSpace = (context) => {\n    const { labelManager } = context.dependencies();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       show,\n       maxLines,\n       minCharacters\n   } = context.config();\n    const {\n       left,\n       right,\n       top,\n       bottom\n    } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const source = context.source();\n    const space = context.smartText();\n    const minText = new Array(minCharacters).fill('W').join('');\n    const _minTextSpace = labelManager.getOriSize(minText);\n\n    context.config({ rotation: false });\n    if (space.width > (availWidth || 0) && maxLines) {\n        space.height = space.oriTextHeight * maxLines;\n    }\n    if (availWidth && availWidth < space.width) {\n        space.width = _minTextSpace.width;\n    }\n    if (availWidth && availWidth < Math.min(_minTextSpace.width, space.oriTextWidth)) {\n        const smartSpace = labelManager.getSmartText(source, availHeight, _minTextSpace.height, true);\n        space.width = smartSpace.height;\n        space.height = smartSpace.width;\n        context.config({ rotation: true });\n        context.smartText(smartSpace);\n    }\n\n    if (show) {\n        return {\n            width: Math.ceil(space.width) + paddedWidth,\n            height: Math.ceil(space.height) + paddedHeight\n        };\n    } return {\n        width: 0,\n        height: 0\n    };\n};\n\n/**\n * Represents a table haeder.\n *\n * @class Text\n */\nclass TextCell extends SimpleCell {\n\n    /**\n     * Creates an instance of Text.\n     * @param {Object} config The input configuration.\n     * @param {string} dependencies Dependencies for the class(labelManager)\n     * @memberof Text\n     */\n    constructor (config, dependencies) {\n        super(config);\n\n        this._dependencies = dependencies;\n        this._className = this._config.className ||\n                    (this._config.type === HEADER ? `${CLASSPREFIX}-${HEADER}-cell` : `${CLASSPREFIX}-${TEXT}-cell`);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'), this._className);\n        this._dependencies.labelManager.setStyle(this._computedStyle);\n        generateGetterSetters(this, PROPS[TEXT]);\n        const space = this._dependencies.labelManager.getOriSize('w');\n        this.minSpacing({ width: Math.floor(space.width * 3 / 4), height: Math.floor(space.height / 2) });\n        setSmartText(this);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof TextCell\n     */\n    get type () {\n        return TEXT;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof TextCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the Text cell.\n     *\n     * @return {string} The unique identifier for the Text.\n     * @memberof TextCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the dependencies of the instance\n     *\n     * @return {Object} Dependencies needed by the class\n     * @memberof TextCell\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof TextCell\n     */\n    serialize () {\n        return {\n            text: this.source(),\n            type: TEXT\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof TextCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    static formalName () {\n        return CONSTANTS.TEXT_CELL;\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof Text\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeTextSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        setSmartText(this);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the Text cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof Text\n     */\n    render (mount) {\n        const availWidth = this.availWidth();\n        const availHeight = this.availHeight();\n        const {\n            margin,\n            show,\n            verticalAlign,\n            textAlign,\n            rotation\n        } = this.config();\n\n        this.mount(mount);\n        if (show) {\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id], `${CLASSPREFIX}-${TEXT_CELL}`);\n            const vAlign = verticalAlign || rotation ? 'middle' : 'top';\n            const {\n                width,\n                height\n            } = this.smartText();\n            const {\n                height: minHeightSpace\n            } = this.minSpacing();\n            const translation = {\n                top: width + minHeightSpace / 2,\n                middle: width / 2 + minHeightSpace,\n                bottom: minHeightSpace\n            };\n\n            container.style('vertical-align', vAlign);\n\n            // Set class name\n            elem.classed(this._className, true);\n\n            // Apply styles\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            elem.style('transform', rotation ? `translate(${height / 2}px,\n                ${translation[vAlign]}px) rotate(-90deg)` : '');\n            elem.style(WIDTH, availWidth ? `${availWidth}px` : '100%');\n            [TOP, BOTTOM, LEFT, RIGHT].forEach((type) => {\n                container.style(`margin-${type}`, `${margin[type]}px`);\n            });\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            // set the text as the innerHTML\n            this._dependencies.labelManager.setStyle(this._computedStyle);\n            elem.html(this._dependencies.labelManager.getSmartText(this.source(), availWidth, availHeight, true).text);\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\n\nexport default TextCell;\n","/**\n * This file declares a class that is used to represent a table cell\n * that houses a visual unit.\n * @module VisualCell\n */\n\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { GEOM } from './enums/cell-type';\nimport { PROPS } from './props';\nimport {\n    CLASSPREFIX, HEIGHT, WIDTH, DATA, AXES, FACET_BY_FIELDS, FIELDS, TRANSFORM, LAYER_DEF, CONFIG, GEOM_CELL,\n    DETAIL_FIELDS\n} from './enums/constants';\nimport * as CONSTANTS from './constants';\nimport { DEFAULT_CONFIG } from './enums/defaults';\n\n/**\n * Calculates the logical space of the cell\n *\n * @param {Object} context Required to get the needed parameters to compute unit space\n * @return {Object} Logical space taken up by the unit\n * @memberof GeomCell\n */\nconst computeGeomSpace = (context) => {\n    const config = context.source().config();\n    const { width, height } = config;\n    return {\n        width: Math.ceil(width),\n        height: Math.ceil(height + context.getCaptionSpace().height)\n    };\n};\n\n /**\n * This class represents a SimpleCell for visual unit.\n *\n * @class GeomCell\n */\nclass GeomCell extends SimpleCell {\n\n    /**\n     * Creates an instance of GeomCell.\n     * @param {Object} config The input configuration.\n     * @memberof GeomCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._unit = null;\n        this._layers = null;\n        this._axes = {};\n        this._datamodel = {};\n        this._facetByFields = {};\n        this._fields = null;\n        this._transform = null;\n        this._caption = null;\n\n        generateGetterSetters(this, PROPS[GEOM]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof GeomCell\n     */\n    get type () {\n        return GEOM;\n    }\n\n    /**\n     * This method return the value contained by this cell.\n     *\n     * @return {VisualUnit} Instance of visual unit contained by visual unit.\n     * @memberof GeomCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return the id of the\n     * visual unit housed by this cell.\n     *\n     * @return {string} The unique id of the visual unit.\n     * @memberof GeomCell\n     */\n    get id () {\n        return this.source().id();\n    }\n\n    static formalName () {\n        return CONSTANTS.GEOM_CELL;\n    }\n\n    /**\n     * This method return a serialized representation of\n     * this instance.\n     *\n     * @return {Object} Object with serializable props.\n     * @memberof GeomCell\n     */\n    serialize () {\n        return {\n            type: GEOM,\n            unit: this.source().serialize(),\n            caption: this.caption()\n        };\n    }\n\n    /**\n     * return the default configuration for the geom cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof GeomCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * Updates the model based on the changed parameters\n     *\n     * @return {Instance} return instance\n     * @memberof GeomCell\n     */\n    updateModel () {\n        const unit = this.source();\n        unit.clearCaching();\n        [LAYER_DEF, TRANSFORM, AXES, FIELDS, CONFIG, DATA, AXES, FACET_BY_FIELDS, DETAIL_FIELDS].forEach((prop) => {\n            this[prop]() && unit[prop](this[prop]());\n        });\n        return this;\n    }\n\n    /**\n     * It gives the space taken by the caption of the unit\n     *\n     * @return {Object} return the space taken by caption\n     * @memberof GeomCell\n     */\n    getCaptionSpace () {\n        const caption = this.caption();\n\n        let captionSpace = { width: 0, height: 0 };\n        if (caption) {\n            captionSpace = caption.getLogicalSpace();\n        }\n        return captionSpace;\n    }\n\n    /**\n     * return the space taken up by the element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof GeomCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeGeomSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space available to\n     * render the SimpleCell.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    setAvailableSpace (width, height) {\n        const unit = this.source();\n\n        this.availWidth(width);\n        this.availHeight(height);\n        unit.lockModel()\n            .width(width).height(height - this.getCaptionSpace().height)\n            .unlockModel();\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * his method is used to render the visual unit inside the provided cell.\n     *\n     * @param {HTMLElement} mount The mountpoint in the table.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    render (mount) {\n        if (mount) {\n            this.mount(mount);\n            const availHeight = this.availHeight();\n            const availWidth = this.availWidth();\n            const caption = this.caption();\n            const wrapperDiv = makeElement(selectElement(mount), 'div', [1], `${CLASSPREFIX}-${GEOM_CELL}`);\n\n            if (caption) {\n                const captionDom = makeElement(wrapperDiv, 'div', [caption], `${CLASSPREFIX}-unit-caption`).node();\n                caption.render(captionDom);\n            }\n            const selection = makeElement(wrapperDiv, 'div', [1], `${CLASSPREFIX}-unit`);\n            wrapperDiv.style(WIDTH, `${availWidth}px`).style(HEIGHT, `${availHeight}px`);\n            selection.style(WIDTH, `${availWidth}px`)\n                            .style(HEIGHT, `${availHeight - this.getCaptionSpace().height}px`);\n            this.source().mount(selection.node());\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Object} Current instance\n     * @memberof GeomCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        this.source().remove();\n        return this;\n    }\n}\n\nexport default GeomCell;\n","import AxisCell from './axis-cell';\nimport BlankCell from './blank-cell';\nimport TextCell from './text-cell';\nimport GeomCell from './geom-cell';\nimport SimpleCell from './simple-cell';\n\nimport * as CONSTANTS from './constants';\n\nexport const DEFAULT_PLACEHOLDERS = {\n    [CONSTANTS.SIMPLE_CELL]: SimpleCell,\n    [CONSTANTS.TEXT_CELL]: TextCell,\n    [CONSTANTS.AXIS_CELL]: AxisCell,\n    [CONSTANTS.GEOM_CELL]: GeomCell,\n    [CONSTANTS.BLANK_CELL]: BlankCell\n};\n\n","import { DEFAULT_PLACEHOLDERS } from './defaults';\n\n/**\n * Creates a registry for the cells, which can be used for\n * setting a new cell or getting the registered cells\n *\n * @return {Object} Setters and getters for registered cells\n */\nconst cellRegistry = () => {\n    const reg = DEFAULT_PLACEHOLDERS;\n    return {\n        register: (def) => {\n            const key = def.formalName();\n            if (key in reg) {\n                reg[key] = def;\n            }\n            return cellRegistry;\n        },\n        get: () => reg\n    };\n};\nexport default cellRegistry;\n","import { TextCell } from '@chartshq/visual-cell';\nimport { escapeHTML } from 'muze-utils';\nimport { TOP } from '../constants';\n\n/**\n *\n *\n * @param {*} rawContent\n *\n */\nconst resolveTitleSubTitleContent = (rawContent) => {\n    if (typeof rawContent === 'function' && !rawContent._sanitize) {\n        return rawContent();\n    }\n    return escapeHTML(rawContent());\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} cellType\n * @param {*} labelManager\n * @param {*} prevCell\n *\n */\nconst headerCreator = (config, cellType, labelManager, prevCell) => {\n    let margin = {};\n    const {\n        content,\n        classPrefix,\n        maxLines\n    } = config;\n    const cell = prevCell || new TextCell(\n        {\n            type: cellType === 'title' ? 'header' : 'text',\n            className: `${classPrefix}-${cellType}-cell`\n        }, {\n            labelManager\n        })\n     .config({ maxLines }).minSpacing({ width: 0, height: 0 });\n\n    cell.source(content);\n    cell._minTickDiff = { height: 0, width: 0 };\n\n    if (config.position === TOP) {\n        margin = { top: 0, bottom: config.padding };\n    } else {\n        margin = { top: config.padding, bottom: 0 };\n    }\n    cell.config({ margin });\n\n    return {\n        height: cell.getLogicalSpace().height,\n        cell\n    };\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} type\n * @param {*} labelManager\n * @param {*} cell\n *\n */\nconst createHeading = (config, type, labelManager, prevCell) => {\n    if (!config) { return ''; }\n\n    return headerCreator(\n        config,\n        type,\n        labelManager,\n        prevCell\n    );\n};\n\n/**\n *\n *\n * @param {*} context\n */\nexport const createHeaders = (context, canvasHeight, canvasWidth) => {\n    let headerHeight = 0;\n    const headers = {};\n    const subtitle = context.subtitle();\n    const isSubtitle = resolveTitleSubTitleContent(subtitle[0]);\n\n    canvasHeight >= 200 && canvasWidth >= 200 && ['title', 'subtitle'].forEach((type) => {\n        const headerOptions = context[type]();\n        const content = resolveTitleSubTitleContent(headerOptions[0]);\n        if (content) {\n            const config = headerOptions[1];\n\n            config.width = context.width();\n            config.height = context.height();\n            config.classPrefix = context.config().classPrefix;\n            config.content = content;\n            config.padding = (type === 'title' && !isSubtitle.length) ? subtitle[1].padding : config.padding;\n\n            const { height, cell } = createHeading(config, type, context.dependencies().smartlabel,\n                context[`${type}Cell`]);\n\n            headers[`${type}Cell`] = cell;\n            context._composition[type] = cell;\n            headerHeight += height;\n        }\n    });\n    return { headerHeight, headers };\n};\n\n","import { TextCell, AxisCell } from '@chartshq/visual-cell';\nimport { getValueParser, retrieveFieldDisplayName, DataModel, getObjProp } from 'muze-utils';\nimport {\n    VERTICAL, HORIZONTAL, LEFT, RIGHT, LEGEND_TYPE_MAP, PADDING,\n    BORDER, MARGIN, SIZE, COLOR, IS_POINT_MAP, POINT\n} from '../constants';\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n *\n */\nexport const legendCreator = (canvas) => {\n    let LegendCls;\n    const dataset = [];\n    const axes = canvas.getRetinalAxes();\n\n    Object.entries(axes).forEach((axisInfo) => {\n        const scale = axisInfo[1][0];\n        const scaleType = axisInfo[0];\n        const scaleProps = canvas[scaleType]();\n\n        if (scaleProps.field && scale) {\n            const {\n                type,\n                step\n            } = scale.config();\n\n            const stepMapper = typeof step === 'boolean' ? step : false;\n            LegendCls = LEGEND_TYPE_MAP[`${type}-${stepMapper}-${scaleType}`];\n            dataset.push({\n                scale,\n                canvas,\n                fieldName: scaleProps.field,\n                title: retrieveFieldDisplayName(canvas.data(), scaleProps.field),\n                LegendCls,\n                scaleType\n            });\n        }\n    });\n\n    return dataset;\n};\n\n/**\n * @param {*} mark mark of the layers in the canvas\n * @param {*} scaleType type of the scale to draw the legend ie shape, size or color\n *\n */\nexport const legendIconShapeMapper = (layers, scaleType) => {\n    const layerMarks = layers.map(el => el.mark);\n    const shape = IS_POINT_MAP[(scaleType === COLOR || scaleType === SIZE)\n    && layerMarks.includes(POINT)];\n    return shape;\n};\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n * @param {*} measurement\n * @param {*} prevLegends\n *\n */\nexport const legendInitializer = (legendConfig, canvas, measurement, prevLegends) => {\n    const legends = [];\n    const {\n        height,\n        width,\n        headerHeight\n    } = measurement;\n    const {\n        position,\n        align\n    } = legendConfig;\n\n    const legendInfo = legendCreator(canvas);\n    const { invalidValues } = canvas.config();\n    const interactionRegistry = canvas.registry().interactions;\n    const parser = getValueParser(invalidValues);\n\n    legendInfo.forEach((dataInfo, index) => {\n        const legendMeasures = {};\n        const {\n                LegendCls,\n                scale,\n                fieldName,\n                title: titleText,\n                scaleType\n            } = dataInfo;\n        const config = legendConfig[scaleType] || {};\n        const title = config.title || {};\n        title.text = title.text || titleText;\n        if (config.show) {\n            config.position = position;\n            config.align = align;\n            let legend = getObjProp(prevLegends[scaleType], index);\n            if (!legend) {\n                legend = LegendCls.create({\n                    labelManager: canvas._dependencies.smartlabel,\n                    cells: {\n                        AxisCell, TextCell\n                    },\n                    registry: {\n                        interactions: interactionRegistry\n                    }\n                });\n            }\n            legendMeasures.maxHeight = align === VERTICAL ? (height - headerHeight) : height * 0.2;\n            legendMeasures.maxWidth = align === HORIZONTAL ? width : width * 0.2;\n            legendMeasures.width = Math.min(legendMeasures.maxWidth, config.width);\n            legendMeasures.height = Math.min(legendMeasures.maxHeight, config.height);\n\n            [PADDING, BORDER, MARGIN].forEach((e) => {\n                legendMeasures[e] = config[e];\n            });\n            const metaData = legend.metaData();\n            if (metaData instanceof DataModel) {\n                metaData.dispose();\n            }\n\n            const mark = canvas.composition().visualGroup.resolver().matrixLayers()[0][0];\n            config.shape = legendIconShapeMapper(mark, scaleType);\n\n            legend.scale(scale)\n                            .valueParser(parser)\n                            .title(title)\n                            .fieldName(fieldName)\n                            .config(config)\n                            .metaData(canvas.composition().visualGroup.getGroupByData().project([fieldName]))\n                            .measurement(legendMeasures)\n                            .canvasAlias(canvas.alias())\n                            .setLegendMeasures();\n\n            legends.push({ canvas, legend, scaleType });\n        }\n    });\n    return legends;\n};\n\n/**\n *\n *\n * @param {*} legends\n * @param {*} legendConfig\n * @param {*} availableHeight\n * @param {*} availableWidth\n *\n */\nexport const getLegendSpace = (legends, legendConfig, availableHeight, availableWidth) => {\n    const legendMeasures = legends.map(legendInfo => legendInfo.legend.measurement());\n    const legendSpace = { width: 0, height: 0 };\n\n    legendMeasures.forEach((space) => {\n        let height = 0;\n        let width = 0;\n        width = Math.min(space.width, space.maxWidth);\n        height = Math.min(space.height, space.maxHeight);\n\n        if (legendConfig.align === HORIZONTAL) {\n            if (legendSpace.width + width > availableWidth) {\n                legendSpace.width = availableWidth;\n                legendSpace.height += height;\n            } else {\n                legendSpace.width += width;\n                legendSpace.height = Math.max(legendSpace.height, height);\n            }\n        } else if (legendSpace.height + height > availableHeight) {\n            legendSpace.height = height;\n            legendSpace.width += width;\n        } else {\n            legendSpace.height += height;\n            legendSpace.width = Math.max(legendSpace.width, width);\n        }\n    });\n    if (legendConfig.align === HORIZONTAL) {\n        legendSpace.width = availableWidth;\n    }\n    return legendSpace;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} headerHeight\n *\n */\nexport const createLegend = (context, headerHeight, height, width) => {\n    const measurement = {\n        height,\n        width,\n        headerHeight\n    };\n    const { legend } = context.config();\n    const { show, position } = legend;\n\n    legend.classPrefix = context.config().classPrefix;\n    const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n\n    legend.show = show ? ((align === VERTICAL && width > 200) || (align === HORIZONTAL && height > 200)) : show;\n    legend.align = align;\n    return legendInitializer(legend, context, measurement, context.composition().legend || {});\n};\n","import { LayoutComponent } from '../../../../layout/src/tree-layout';\n\nexport default class MuzeComponent extends LayoutComponent {\n    getLogicalSpace () {\n        const { width, height } = this.boundBox();\n        return { width, height };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n    }\n\n    getBoundBox () {\n        return this.boundBox();\n    }\n\n    updateWrapper () {\n        throw Error('Update is not implemented');\n    }\n\n    setParams () {\n        throw Error('set params is not implemented');\n    }\n\n    setComponentInfo () {\n        throw Error('setComponentInfo is not implemented');\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport { LEFT } from '../../constants';\n\nexport default class HeaderComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    renderHeader (container) {\n        const layoutConfig = this.params.config;\n        container = selectElement(container);\n        const { align } = layoutConfig;\n        const sel = container\n          .selectAll(`.${layoutConfig.classPrefix}-inner-container`)\n          .data([this.name]);\n        sel.exit().remove();\n        const selEnter = sel.enter().append('div');\n\n        const cont = selEnter.merge(sel);\n        cont.classed(`${layoutConfig.classPrefix}-inner-container`, true);\n        const { height, width } = this.boundBox();\n        this.component.setAvailableSpace(width, height);\n\n        this.component && this.component.render(cont.node());\n\n        cont.selectAll('div').classed(`${layoutConfig.classPrefix}-inner-content`, true);\n        cont.style('width', `${100}%`);\n\n        if (layoutConfig && this.component) {\n            cont.style('float', LEFT)\n                            .style('text-align', align);\n                            // .style(`padding-${position === TOP ? BOTTOM : TOP}`, `${padding}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderHeader(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.setParams(params);\n        this.name(params.name);\n        this.boundBox(params.component.getLogicalSpace());\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y,\n            left: conf.x,\n            width: conf.width,\n            height: conf.height });\n        this.renderAt(conf.renderAt);\n    }\n}\n","import { makeElement, selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport {\n     LEFT, RIGHT, VERTICAL, HORIZONTAL, TOP, BOTTOM, HORIZONTAL_CENTER, VERTICAL_CENTER\n} from '../../constants';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\n\nfunction defaultAlignmentHelper (position) {\n    let alignment = null;\n    const alignWith = `${ROW_MATRIX_INDEX[1]}-${COLUMN_MATRIX_INDEX[1]}`;\n    switch (position) {\n    case TOP:\n    case BOTTOM:\n        alignment = HORIZONTAL_CENTER;\n        break;\n    case LEFT:\n    case RIGHT:\n        alignment = VERTICAL_CENTER;\n        break;\n    default:\n        alignment = VERTICAL_CENTER;\n    }\n    return { alignment, alignWith };\n}\nexport default class LegendComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.config.measurement.legendSpace, 0);\n        this.setParams(params);\n    }\n\n    renderLegend (container) {\n        container = selectElement(container);\n        const sectionComponents = [];\n        const { position, classPrefix } = this.params.config;\n        const legendMount = makeElement(container, 'div', [this.components],\n                                        `${classPrefix}-inner-content`, {}, d => d);\n        legendMount.classed(`${classPrefix}-legend`, true);\n        const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n        const legWidth = this.newDimensions.width;\n        const legHeight = this.newDimensions.height;\n\n        [container, legendMount].forEach((elem) => {\n            elem.style('width', `${Math.floor(legWidth)}px`)\n                            .style('height', `${legHeight}px`)\n                            .style('float', LEFT);\n        });\n\n        if (align === VERTICAL) {\n            let sections = -1;\n            let currHeight = legHeight;\n            let currWidth = 0;\n\n            this.components.forEach((legendInfo) => {\n                const leg = legendInfo.legend;\n                if (leg.measurement().height > currHeight) {\n                    sections++;\n                    currWidth = 0;\n                    currHeight = legHeight;\n                } else {\n                    sections < 0 && sections++;\n                }\n                sectionComponents[sections] = sectionComponents[sections] || [];\n                currHeight -= Math.min(leg.measurement().height, currHeight);\n                currWidth = Math.max(Math.min(leg.measurement().width, leg.measurement().maxWidth), currWidth);\n                sectionComponents[sections].push({\n                    legend: leg,\n                    legendHeight: legHeight,\n                    legendWidth: currWidth\n                });\n            });\n\n            const mount = makeElement(legendMount, ['div'], sectionComponents, `${classPrefix}-legend-section`);\n            // mount.each((d, i) => selectElement(this).classed(`${classPrefix}-legend-section-${i}`, true));\n            mount.classed(`${classPrefix}-legend-vertical-section`, true)\n                            .style('width', d => `${d[0].legendWidth}px`);\n            makeElement(mount, ['div'], d => d, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) {\n                                d.legend.mount(this);\n                            })\n                            .style('width', d => `${d.legendWidth}px`);\n        } else {\n            const mount = makeElement(legendMount, 'div', [1], `${classPrefix}-legend-section`);\n            mount.classed(`${classPrefix}-legend-horizontal-section`, true);\n            mount.classed(`${classPrefix}-legend-section-${0}`, true)\n                            .style('width', `${legWidth}px`);\n\n            makeElement(mount, 'div', this.components, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) { d.legend.mount(this); })\n                            .style('width', d => `${d.legend.measurement().width}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderLegend(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.measurement.legendSpace);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.components = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        const { alignWith, alignment } = defaultAlignmentHelper(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith || alignWith);\n        this.alignment(params.config.alignment || alignment);\n    }\n\n    setComponentInfo (params) {\n        const { rootNode } = params;\n        this.components.forEach((legendInfo) => {\n            const leg = legendInfo.legend;\n            leg.setParentInfo({ canvasRoot: rootNode });\n        });\n    }\n\n}\n","import {\n    selectElement,\n    makeElement,\n    getD3Drag,\n    getEvent,\n    getWindow,\n    hasTouch\n} from 'muze-utils';\nimport './scroll-bar.scss';\nimport { WIDTH, HEIGHT } from '../../../constants';\n\nconst d3Drag = getD3Drag();\n\nconst arrowSizeMap = {\n    left: WIDTH,\n    right: WIDTH,\n    top: HEIGHT,\n    bottom: HEIGHT\n};\n\nexport const getUnitPositions = (unitMeasures, totalLength, viewLength) => {\n    let currentLen = 0;\n    const measures = unitMeasures.primary && unitMeasures.primary.length ?\n        unitMeasures.primary : unitMeasures.secondary;\n\n    return measures.map((e) => {\n        const unitPosition = currentLen * 100 / (totalLength - viewLength);\n        currentLen += e;\n        return unitPosition;\n    });\n};\n\nexport const createScrollBarArrow = (mount, type, config) => {\n    const {\n        classPrefix,\n        thickness\n    } = config;\n    const arrow = makeElement(mount, 'div', [type], `${classPrefix}-scroll-arrow-${type}`);\n\n    arrow.classed(`${classPrefix}-scroll-arrow`, true);\n    arrow.style(arrowSizeMap[type], `${thickness}px`);\n\n    const chevron = makeElement(arrow, 'div', [1], `${classPrefix}-scroll-arrow-chevron`);\n\n    chevron.attr('id', `${classPrefix}-scroll-arrow-chevron-${type}`);\n\n    return arrow;\n};\n\nexport const createScrollBarRect = (mount, config) => {\n    const {\n        classPrefix\n    } = config;\n    const rect = makeElement(mount, 'div', [1], `${classPrefix}-scroll-rect`);\n    const mover = makeElement(rect, 'div', [1], `${classPrefix}-scroll-mover`);\n\n    return { rect, mover };\n};\n\nexport const applyRectClick = (scrollMaker, moverRect) => {\n    const {\n        rect\n    } = moverRect;\n\n    rect.on('click', () => {\n        const event = getEvent();\n        scrollMaker.emptyScrollAreaClick(event);\n    });\n};\n\nconst applyMoverDrag = (scrollMaker, moverRect) => {\n    let startPos = {};\n    let moverStartPos = 0;\n    let rectStartPos = 0;\n    let endPos = {};\n    const {\n        mover,\n        rect\n    } = moverRect;\n\n    mover.call(d3Drag()\n                    .on('start', () => {\n                        const event = getEvent();\n\n                        moverStartPos = mover.node().getBoundingClientRect();\n                        rectStartPos = rect.node().getBoundingClientRect();\n                        startPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                    })\n                    .on('drag', () => {\n                        const event = getEvent();\n                        const window = getWindow();\n\n                        endPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                        const distanceMoved = {\n                            x: endPos.x - startPos.x,\n                            y: endPos.y - startPos.y\n                        };\n                        const actualPosition = {\n                            x: moverStartPos.x + distanceMoved.x - rectStartPos.x + window.pageXOffset,\n                            y: moverStartPos.y + distanceMoved.y - rectStartPos.y + window.pageYOffset\n                        };\n\n                        scrollMaker.changeMoverPosition(actualPosition);\n                    }));\n};\n\nconst applyScrollMouseDownAction = (moverRect, scrollMaker, speed) => {\n    const {\n        mover,\n        rect\n    } = moverRect;\n    const { x, y } = mover.node().getBoundingClientRect();\n    const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n    scrollMaker.changeMoverPosition({ x: x - rectX + speed, y: y - rectY + speed });\n};\n\nconst registerListenerOnArrow = (scrollMaker, moverRect, arrowType, speed) => {\n    let timer = '';\n    const arrow = scrollMaker._components[arrowType];\n    const isTouchDevice = hasTouch();\n\n    arrow.on(isTouchDevice ? 'touchstart' : 'mousedown', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        timer = setInterval(() => {\n            applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n        }, 100);\n    }).on(isTouchDevice ? 'touchend' : 'mouseup', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        clearInterval(timer);\n    }).on('click', () => {\n        applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n    });\n};\n\nexport const registerListeners = (scrollMaker) => {\n    const {\n        moverRect\n    } = scrollMaker._components;\n\n    const speed = scrollMaker.config().speed;\n\n    registerListenerOnArrow(scrollMaker, moverRect, 'prevArrow', -speed);\n    applyMoverDrag(scrollMaker, moverRect);\n    applyRectClick(scrollMaker, moverRect);\n    registerListenerOnArrow(scrollMaker, moverRect, 'nextArrow', speed);\n};\n\nexport const scrollContainerHelper = (mountPoint, config, dimensions, type) => {\n    const {\n        classPrefix\n    } = config;\n    const scrollBarContainer = makeElement(selectElement(mountPoint), 'div', [1], `#${classPrefix}-scroll-bar-${type}`);\n\n    scrollBarContainer.classed(`${classPrefix}-scroll-bar`, true);\n    scrollBarContainer.style(WIDTH, `${dimensions.width}px`);\n    scrollBarContainer.style(HEIGHT, `${dimensions.height}px`);\n    return scrollBarContainer;\n};\n\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n\n    config: {\n        sanitization: (context, value) => {\n            value = mergeRecursive(context._config, value);\n            return value;\n        }\n    },\n    manager: {},\n    unitPositions: {},\n    logicalSpace: {}\n};\n\n","import { ERROR_MSG, generateGetterSetters } from 'muze-utils';\nimport {\n    scrollContainerHelper,\n    registerListeners\n} from './helper';\nimport { PROPS } from './props';\n\nexport class ScrollMaker {\n\n    constructor () {\n        this._components = {};\n        this._logicalSpace = {};\n        this._attachedScrollAction = () => {};\n        this._config = {\n            thickness: 10,\n            speed: 2\n        };\n        this._unitPositions = null;\n\n        generateGetterSetters(this, PROPS);\n    }\n\n    static type () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    emptyScrollAreaClick () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    changeMoverPosition () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollDeltaTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    createScroll (mountPoint) {\n        const config = this.config();\n\n        return {\n            scrollBarContainer: scrollContainerHelper(mountPoint, config, this.logicalSpace(), this.constructor.type())\n        };\n    }\n\n    attachScrollAction (externalScrollAction) {\n        this._attachedScrollAction = externalScrollAction;\n        return this;\n    }\n\n    detachScrollAction () {\n        this._attachedScrollAction = () => {};\n        return this;\n    }\n\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    registerListeners () {\n        registerListeners(this);\n        return this;\n    }\n\n    remove () {\n        this._components.scrollBarContainer.remove();\n        return this;\n    }\n}\n\n","import MuzeComponent from './muze-chart-component';\nimport { HorizontalScrollMaker } from './scroll-bar-maker/horizontal-scroll-maker';\nimport { VerticalScrollMaker } from './scroll-bar-maker/vertical-scroll-maker';\n\nconst scrollMakerMap = {\n    horizontal: HorizontalScrollMaker,\n    vertical: VerticalScrollMaker\n};\n\n/**\n * Scroll Component acts as a wrapper over the scoll bars created using the respective Scroll Makers\n * This provides a consistent API for layouting using the tree layout system.\n *\n *\n * @class\n * @public\n * @module ScrollComponent\n */\nexport default class ScrollComponent extends MuzeComponent {\n\n    constructor (params) {\n        const ScrollMaker = scrollMakerMap[params.config.type];\n\n        params.component = new ScrollMaker();\n        params.component.config(params.config.scrollBarComponentConfig);\n        params.component.logicalSpace(params.dimensions);\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    manager (...manager) {\n        if (manager.length) {\n            this.component.manager(manager[0]);\n            return this;\n        }\n        return this.component.manager();\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollDeltaTo (delta) {\n        this.component.scrollDeltaTo(delta);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollTo (scrollPercentage) {\n        this.component.scrollTo(scrollPercentage);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page based on the unit index.\n     * The input is provided as a number represting the index for the unit.\n     * For vertical scroll, it's the row index that will be required.\n     * For horizontal scroll, it's the column index that will be required\n     *\n     * @public\n     *\n     * @param {number} unitIndex Index of the unit appearing in the grid\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollToUnitIndex (unitIndex) {\n        const unitPositions = this.component.unitPositions();\n        const sanitizedUnitIndex = Math.min(Math.max(0, unitIndex), unitPositions.length - 1);\n        this.component.scrollTo(unitPositions[sanitizedUnitIndex]);\n        return this;\n    }\n\n    /**\n     * Provides the positions of the units(either horizontal or vertical based on the type\n     * of scroll bar it wraps) relative to it's container. The position of the first unit starts at 0\n     *\n     *\n     * @public\n     *\n     * @return {Array} Positions of units either horizontal or vertical\n     */\n    getScrollPositionsForUnits () {\n        return this.component.unitPositions();\n    }\n\n    draw (container) {\n        this.component.createScroll(container || document.getElementById(this.renderAt()));\n        return this;\n    }\n\n    /**\n     * Can be used to attach a scroll action whenever scrolling occurs in the canvas\n     *\n     * @public\n     * @param {number} externalAction Action to be attached during scroll\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    attachScrollAction (externalAction) {\n        this.component.attachScrollAction(externalAction);\n        return this;\n    }\n\n    /**\n     * Can be used to detach the scroll action already bound to the scroll bar\n     *\n     * @public\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    detachScrollAction () {\n        this.component.detachScrollAction();\n        return this;\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.component.config(params.config.scrollBarComponentConfig);\n        this.component.logicalSpace(params.dimensions);\n        this.boundBox(this.component.getLogicalSpace());\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component || this.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    remove () {\n        this.component.remove();\n    }\n}\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { HORIZONTAL, HEIGHT, WIDTH, LEFT } from '../../../constants';\n\nexport class HorizontalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: horizontal\n     */\n    static type () {\n        return HORIZONTAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, config, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'left', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'right', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n\n        const { height, width, totalLength, viewLength, unitWidths } = this.logicalSpace();\n        const scrollBarWithouArrowLength = width - height * 2;\n\n        rect.style(WIDTH, `${dimensions.width - height * 2}px`);\n        rect.style(HEIGHT, `${100}%`);\n        mover.style(WIDTH, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(HEIGHT, `${100}%`);\n        mover.style(LEFT, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n        this.unitPositions(getUnitPositions(unitWidths, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n        let positionAdjuster = speed * 10;\n        if (event.x < x) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n        const {\n            totalLength\n         } = this.logicalSpace();\n\n        if (newPosition.x < 0) {\n            currentPos = 0;\n        } else if (newPosition.x + moverPos.width > rectStartPos.width) {\n            currentPos = rectStartPos.width - moverPos.width;\n        } else {\n            currentPos = newPosition.x;\n        }\n\n        mover.style(LEFT, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: 0, x: moverPos.x - rectStartPos.x - delta });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {HorizontalScrollMaker} Instance of the HorizontalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.width)) / 100;\n\n        this.changeMoverPosition({ y: 0, x: movement });\n        return this;\n    }\n\n}\n\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { VERTICAL, TOP, HEIGHT, WIDTH } from '../../../constants';\n\nexport class VerticalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: vertical\n     */\n    static type () {\n        return VERTICAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'top', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'bottom', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n        const { height, width, totalLength, viewLength, unitHeights } = this.logicalSpace();\n        const scrollBarWithouArrowLength = height - width * 2;\n\n        rect.style(HEIGHT, `${scrollBarWithouArrowLength}px`);\n        rect.style(WIDTH, `${100}%`);\n        mover.style(WIDTH, `${100}%`);\n        mover.style(HEIGHT, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(TOP, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n\n        this.unitPositions(getUnitPositions(unitHeights, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n        let positionAdjuster = speed * 10;\n        if (event.y < y) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const {\n            totalLength\n         } = this.logicalSpace();\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n\n        if (newPosition.y < 0) {\n            currentPos = 0;\n        } else if (newPosition.y + moverPos.height > rectStartPos.height) {\n            currentPos = rectStartPos.height - moverPos.height;\n        } else {\n            currentPos = newPosition.y;\n        }\n        mover.style(TOP, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: moverPos.y - rectStartPos.y - delta, x: 0 });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.height)) / 100;\n\n        this.changeMoverPosition({ x: 0, y: movement });\n        return this;\n    }\n\n}\n","import { makeElement } from 'muze-utils';\nimport { cellSpanMaker, applySpans } from '../../../../layout/src/grid-layout/span-maker';\nimport { applyBorders } from '../../../../layout/src/grid-layout/border-helper';\n\nimport {\n     TOP, CENTER\n} from '../../../../layout/src/enums/constants';\nimport MuzeComponent from './muze-chart-component';\nimport { WIDTH, HEIGHT, HIDDEN, OVERFLOW, AUTO, VISIBLE } from '../../constants';\n\nconst renderPlaceholders = (cells) => {\n    // Rendering content within placeholders\n    cells.each(function (cell) {\n        cell.placeholder.render(this);\n    });\n};\n\nexport default class MatrixComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.setParams(params);\n        this.className(params.config.className);\n    }\n\n    applyScroll (container) {\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const { horizontal, vertical } = this.params.config.scrollInfo;\n        container.style(OVERFLOW, VISIBLE);\n        container.style(WIDTH, AUTO);\n        container.style(HEIGHT, AUTO);\n\n        if (horizontal && column === 1) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(WIDTH, '100%');\n        }\n\n        if (vertical && row === CENTER) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(HEIGHT, '100%');\n        }\n    }\n\n    renderMatrix (mountPoint) {\n        // Creating containers for each matrix individually\n        const classPrefix = this.params.config.classPrefix;\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const dimensions = this.params.config.dimensions;\n        const border = this.params.config.border;\n\n        // Creating containers for each matrix individually\n        const containerForMatrix = makeElement(mountPoint, 'div', [1], `${classPrefix}-grid-${row}-${column + 1}`)\n            .classed(`${classPrefix}-grid-${row}`, true)\n            .classed(`${classPrefix}-grid`, true);\n\n        this.applyScroll(containerForMatrix);\n\n        const {\n            viewMatrix,\n            spans\n        } = cellSpanMaker(this.component, row, column);\n\n        // Rendering the table components\n        const { cells } = this.renderTable(containerForMatrix, `${classPrefix}-grid`, viewMatrix);\n\n        applySpans(cells, spans, { dimensions, border }, `${row}-${column}`);\n        renderPlaceholders(cells);\n\n        cells.exit().each((cell) => {\n            cell.placeholder.remove();\n        });\n\n        applyBorders(cells, border, row, column);\n    }\n\n    renderTable (mount, className, rowData) {\n        const table = makeElement(mount, 'table', ['layout'], `${className}-table`);\n        const body = makeElement(table, 'tbody', ['layout'], `${className}-body`);\n        const rows = makeElement(body, 'tr', rowData, `${className}-tr`);\n        const cells = makeElement(rows, 'td', (d, i) => d.filter(e => e !== null).map(e =>\n                                  ({ placeholder: e, rowIndex: i })), `${className}-td`, {}, key => key.placeholder.id);\n\n        return { table, body, rows, cells };\n    }\n\n    draw (container) {\n        this.renderMatrix(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(TOP);\n        this.className(params.config.className);\n    }\n}\n","import { selectElement, getEvent } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport MatrixComponent from './matrix-component';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\nimport { WHEEL_DELTA_MODIFIER } from '../../enums/constants';\n\n/**\n * Based on the type of scroll, it changes the scrollLeft/scrollTop property of the specific\n * elements based on the scroll distance provided\n *\n *\n */\nconst applyScrollAction = (elem, classPrefix, scollDistance, type) => {\n    selectElement(elem)\n                    .selectAll(`.${classPrefix}-grid`)\n                    .property(type, scollDistance);\n};\n\n/**\n * Applies the action of the scroll by actually scrolling the respective matrices based on the\n * type of scroll. It returns a function which has both the scroll methods available\n *\n * @return {Object} contains the horizontal and vertical scroll actions on the grid component\n */\nconst scrollActionApplier = (movement, context) => {\n    const classPrefix = context.params.config.classPrefix;\n\n    return {\n        horizontal: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[e][1].renderAt()}`, classPrefix, movement, 'scrollLeft'));\n        },\n        vertical: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[1][e].renderAt()}`, classPrefix, movement, 'scrollTop'));\n        }\n    };\n};\n\nexport default class GridComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.gridComponents = [];\n        this.setParams(params);\n    }\n\n    sanitizeGrid () {\n        let height = 0;\n        let width = 0;\n        const { viewMatricesInfo, layoutDimensions } = this.component.viewInfo();\n        const scrollInfo = this.component.scrollInfo();\n        const {\n            viewHeight,\n            viewWidth,\n            unitHeights,\n            unitWidths\n        } = layoutDimensions;\n\n        for (let i = 0; i < 3; i++) {\n            if (!(this.gridComponents.length && this.gridComponents[i] instanceof Array)) {\n                this.gridComponents[i] = [];\n            }\n            for (let j = 0; j < 3; j++) {\n                const matrixDim = {\n                    height: viewHeight[i],\n                    width: viewWidth[j],\n                    unitHeights,\n                    unitWidths\n                };\n                const matrix = viewMatricesInfo.matrices[`${ROW_MATRIX_INDEX[i]}`][j];\n                const matrixName = `${ROW_MATRIX_INDEX[i]}-${COLUMN_MATRIX_INDEX[j]}`;\n                const matrixConfig = {\n                    dimensions: matrixDim,\n                    border: layoutDimensions.border,\n                    classPrefix: this.params.config.classPrefix,\n                    scrollInfo,\n                    row: ROW_MATRIX_INDEX[i],\n                    column: j\n                };\n                if (this.gridComponents[i][j] instanceof MuzeComponent) {\n                    this.gridComponents[i][j].updateWrapper({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                } else {\n                    const matrixWrapper = new MatrixComponent({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                    this.gridComponents[i].push(matrixWrapper);\n                }\n                if (i === 0) {\n                    width += matrixDim.width;\n                }\n                if (j === 0) {\n                    height += matrixDim.height;\n                }\n            }\n        }\n        this.boundBox({ height, width });\n\n        this.component = this.gridComponents;\n        this.allComponents = this.gridComponents;\n    }\n\n    scrollBarManager (...manager) {\n        if (manager.length) {\n            this._scrollBarManager = manager[0];\n            return this;\n        }\n        return this._scrollBarManager;\n    }\n\n    /**\n     * Attaches a mousewheel listener to the center matrix, based on which the scrolling can occur.\n     * It uses the scroll component to change the position of the scroller, which ultimately scrolls the center matrix\n     *\n     *\n     * @return {GridComponent} Instance of the GridComponent\n     */\n    attachScrollListener () {\n        const scrollBarManager = this.scrollBarManager();\n        selectElement(`#${this.component[1][1].renderAt()}`)\n            .on('wheel', () => {\n                const event = getEvent();\n                const {\n                    wheelDeltaX,\n                    wheelDeltaY\n                } = event;\n\n                // Scrolling horizontally\n                if (wheelDeltaX !== 0 && Math.abs(wheelDeltaX) > Math.abs(wheelDeltaY)) {\n                    scrollBarManager.preventBrowserScroll('horizontal', event)\n                        .triggerScrollBarAction('horizontal', wheelDeltaX / WHEEL_DELTA_MODIFIER);\n                }\n\n                // Scrolling Vertically\n                if (wheelDeltaY !== 0 && Math.abs(wheelDeltaX) < Math.abs(wheelDeltaY)) {\n                    scrollBarManager.preventBrowserScroll('vertical', event)\n                        .triggerScrollBarAction('vertical', wheelDeltaY / WHEEL_DELTA_MODIFIER);\n                }\n            });\n        return this;\n    }\n\n    performScrollAction (direction, movedView) {\n        scrollActionApplier(movedView, this)[direction]();\n        return this;\n    }\n\n    getBoundBox () {\n        const { top, left } = this.component[0][0].boundBox();\n        const { height, width } = this.boundBox();\n\n        return {\n            top,\n            left,\n            height,\n            width\n        };\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.className(params.config.className);\n        this.sanitizeGrid();\n        return this;\n    }\n\n    attachListener () {\n        this.attachScrollListener();\n        return this;\n    }\n}\n","export const SIDE_EFFECT_COMMON = 'common';\nexport const SIDE_EFFECT_INDIVIDUAL = 'individual';\nexport const TOOLTIP_CONSOLIDATED = 'consolidated';\nexport const TOOLTIP_FRAGMENTED = 'fragmented';\nexport const WHEEL_DELTA_MODIFIER = 30;\n","import { selectElement, makeElement, applyStyle } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\n\nexport default class MessageComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.setParams(params);\n    }\n\n    render (container) {\n        const parent = selectElement(container);\n\n        const { config } = this.params;\n        const { className } = config.classPrefix;\n\n        const node = makeElement(parent, 'div', [1], className);\n        const { height, width } = config.dimensions;\n        const { message } = config;\n\n        applyStyle(node, { width: `${width}px`, height: `${height}px` });\n\n        const child = makeElement(node, 'div', [1], `${className}-child`);\n        const textElement = makeElement(child, 'text', [1]);\n\n        textElement.html(message);\n    }\n\n    draw (container) {\n        this.render(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        const { target, className } = params.config;\n        this.component = params.component;\n        this.params = params;\n        this.target(target);\n        this.className(className);\n        this.position(params.config.position);\n        return this;\n    }\n}\n","import {\n    TITLE,\n    SUB_TITLE,\n    LEGEND, VERTICAL,\n    HORIZONTAL,\n    WIDTH,\n    HEIGHT,\n    TOP,\n    LEFT,\n    RIGHT,\n    MESSAGE,\n    GRID,\n    NO_DATA_MESSAGE,\n    HORIZONTAL_CENTER\n} from '../constants';\nimport HeaderComponent from './components/headerComponent';\nimport LegendComponent from './components/legendComponent';\nimport ScrollComponent from './components/scroll-component';\nimport GridComponent from './components/grid-component';\nimport MessageComponent from './components/message-component';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG, CANVAS, MESSAGE_CONFIG } from './defaults';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, CENTER } from '../../../layout/src/enums/constants';\n\n// Mapping between types of headers and their required configs for wrapper creation\nconst headerMap = {\n    title: {\n        headerCell: 'titleCell',\n        configType: TITLE_CONFIG\n    },\n    subtitle: {\n        headerCell: 'subtitleCell',\n        configType: SUB_TITLE_CONFIG\n    }\n};\n\n// Mapping of header alignment values\nconst headerAlignmentMap = {\n    [LEFT]: LEFT,\n    [RIGHT]: RIGHT,\n    [CENTER]: HORIZONTAL_CENTER\n};\n\n/**\n * returns if data is Valid\n *\n *\n * @param {Object} params object where data has to be checked for validity\n * @return {Boolean} Returns true if all of the params are valid\n */\nconst checkParamsValidation = params => Object.keys(params).every((param => params[param]));\n\n/**\n * returns if message Component is needed or not\n *\n *\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Boolean} Returns if grid is present\n */\nconst isGridPresent = (renderDetails) => {\n    const { rows, columns, values } = renderDetails.components;\n    return checkParamsValidation({ rows, columns, values });\n};\n\n/**\n * Creates the wrapper for the header, i.e., title and subtitle to be used in the tree layout\n *\n *\n * @param {string} headerType type of header: title/subtite\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createHeaderWrapper = (headerType, layoutManager, renderDetails) => {\n    let wrapper = null;\n\n    const { components, layoutConfig } = renderDetails;\n    const { headerCell, configType } = headerMap[headerType];\n    const target = { target: CANVAS };\n\n    if (components.headers && components.headers[headerCell]) {\n        let headerConfig = layoutConfig[headerType];\n        const header = components.headers[headerCell];\n\n        headerConfig = Object.assign({}, headerConfig, {\n            classPrefix: layoutConfig.classPrefix,\n            ...target,\n            alignWith: `${ROW_MATRIX_INDEX[0]}-${COLUMN_MATRIX_INDEX[1]}`,\n            alignment: headerAlignmentMap[headerConfig.align],\n            className: configType.className\n        });\n\n        const wrapperParams = {\n            name: headerType,\n            component: header,\n            config: headerConfig\n        };\n\n        const existingComponent = layoutManager.getComponent(headerType);\n        if (existingComponent) {\n            wrapper = existingComponent\n                        .updateWrapper(wrapperParams);\n        } else {\n            wrapper = new HeaderComponent(wrapperParams);\n        }\n    }\n    return wrapper;\n};\n\n/**\n * Creates the wrapper for the grid layout to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {GridLayout} canvas canvas instance\n * @return {Instance} Returns the respective wrappers\n */\nconst createMessageWrapper = (layoutManager, canvas, renderDetails, renderGrid) => {\n    const headerValues = Object.values(renderDetails.components.headers);\n    let sum = 0;\n    let messageWrapper = null;\n\n    for (const val of headerValues) {\n        sum += val.logicalSpace().height;\n    }\n\n    if (!renderGrid) {\n        const defaultDimensions = { height: canvas.height() - sum, width: canvas.width() };\n        const gridComponent = layoutManager.getComponent(GRID);\n        const { height, width } = (gridComponent && gridComponent.getBoundBox()) || defaultDimensions;\n        const target = { target: CANVAS };\n        const config = {\n            ...target,\n            dimensions: { height, width },\n            message: NO_DATA_MESSAGE,\n            classPrefix: MESSAGE_CONFIG,\n            position: TOP\n        };\n        const wrapperParams = {\n            name: MESSAGE,\n            component: null,\n            config\n        };\n        const existingComponent = layoutManager.getComponent(MESSAGE);\n\n        if (existingComponent) {\n            messageWrapper = existingComponent.updateWrapper(wrapperParams);\n        } else {\n            messageWrapper = new MessageComponent(wrapperParams);\n        }\n        return messageWrapper;\n    }\n    return null;\n};\n\n// Mapping between types of scrollBars and their required configs for wrapper creation\nconst scrollBarMap = config => ({\n    vertical: {\n        componentName: 'verticalScrollBar',\n        width: 'thickness',\n        height: 'layoutBasedMeasure',\n        layoutBasedMeasure: HEIGHT,\n        viewMeasure: 'viewHeight',\n        rowAlign: 1,\n        colAlign: config.align === 'right' ? 2 : 0,\n        position: config.align,\n        alignment: TOP\n    },\n    horizontal: {\n        componentName: 'horizontalScrollBar',\n        width: 'layoutBasedMeasure',\n        layoutBasedMeasure: WIDTH,\n        viewMeasure: 'viewWidth',\n        height: 'thickness',\n        rowAlign: config.align === 'top' ? 0 : 2,\n        colAlign: 1,\n        position: config.align,\n        alignment: LEFT\n    }\n});\n\n/**\n * Creates the wrapper for the scroller, i.e., horizontal and vertical to be used in the tree layout\n *\n *\n * @param {string} scrollBarType type of scrollbar: horizontal/vertical\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst createScrollBarWrapper = (scrollBarType, layoutManager, renderDetails, grid, renderGrid) => {\n    if (renderGrid) {\n        let scrollBarWrapper = null;\n        const { layoutConfig } = renderDetails;\n        const target = { target: CANVAS };\n        const { scrollBar } = layoutConfig;\n        const { layoutDimensions } = grid.viewInfo();\n        const {\n            actualCenterMeasures,\n            unitHeights,\n            unitWidths\n        } = layoutDimensions;\n        const {\n            componentName, layoutBasedMeasure, width, height, rowAlign, colAlign,\n            viewMeasure, position, alignment\n        } = scrollBarMap(scrollBar[scrollBarType])[scrollBarType];\n        const dimensions = {\n            thickness: scrollBar.thickness,\n            layoutBasedMeasure: layoutDimensions[viewMeasure][1]\n        };\n        const isScroll = grid.scrollInfo()[scrollBarType];\n        const totalLength = actualCenterMeasures[layoutBasedMeasure];\n        const viewLength = layoutDimensions[viewMeasure][1];\n\n        const scrollConfig = Object.assign({}, {\n            classPrefix: layoutConfig.classPrefix,\n            ...target,\n            scrollBarComponentConfig: {\n                ...scrollBar,\n                classPrefix: layoutConfig.classPrefix\n            },\n\n            type: scrollBarType,\n            alignWith: `${ROW_MATRIX_INDEX[rowAlign]}-${COLUMN_MATRIX_INDEX[colAlign]}`,\n            alignment,\n            position\n        });\n\n        const wrapperParams = {\n            name: componentName,\n            config: scrollConfig,\n            dimensions: {\n                width: dimensions[width],\n                height: dimensions[height],\n                totalLength,\n                viewLength,\n                unitHeights,\n                unitWidths\n            }\n        };\n\n        const existingComponent = layoutManager.getComponent(componentName);\n\n        if (!isScroll) {\n            existingComponent && existingComponent.remove();\n            return null;\n        }\n\n        if (existingComponent) {\n            scrollBarWrapper = existingComponent\n                                    .updateWrapper(wrapperParams);\n        } else {\n            scrollBarWrapper = new ScrollComponent(wrapperParams);\n        }\n\n        return scrollBarWrapper;\n    }\n    return null;\n};\n\n/**\n * Creates the wrapper for the legend to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createLegendWrapper = (layoutManager, renderDetails, renderGrid) => {\n    if (renderGrid) {\n        let legendWrapper = null;\n        const { components, layoutConfig, measurement } = renderDetails;\n        const target = { target: CANVAS };\n\n        if (components.legends && components.legends.length) {\n            const legendConfig = { ...layoutConfig.legend, ...target, measurement };\n            const wrapperParams = {\n                name: LEGEND,\n                component: components.legends,\n                config: legendConfig\n            };\n\n            const existingComponent = layoutManager.getComponent(LEGEND);\n\n            if (existingComponent) {\n                legendWrapper = existingComponent\n                        .updateWrapper(wrapperParams);\n            } else {\n                legendWrapper = new LegendComponent(wrapperParams);\n            }\n        }\n        return legendWrapper;\n    }\n    return null;\n};\n\n/**\n * Creates the wrapper for the grid layout to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst gridLayoutWrapper = (layoutManager, renderDetails, grid, renderGrid) => {\n    if (renderGrid) {\n        let gridWrapper = null;\n        const target = { target: CANVAS };\n        const { layoutConfig } = renderDetails;\n\n        const config = {\n            ...target,\n            pagination: layoutConfig.pagination,\n            classPrefix: layoutConfig.classPrefix,\n            dimensions: { height: 0, width: 0 }\n        };\n        const wrapperParams = {\n            name: GRID,\n            component: grid,\n            config\n        };\n        const existingComponent = layoutManager.getComponent(GRID);\n        if (existingComponent) {\n            gridWrapper = existingComponent\n                        .updateWrapper(wrapperParams);\n        } else {\n            gridWrapper = new GridComponent(wrapperParams);\n        }\n        return gridWrapper;\n    }\n    return null;\n};\n/**\n * Responsible for providing the wrapper creators for every component in Muze.\n * This function, when called, returns the set of components and their respective wrappers.\n *\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {GridLayout} grid Instance of the grid layout\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers for each component\n */\nexport const componentWrapperMaker = (canvas, grid, renderDetails) => {\n    const layoutManager = canvas._layoutManager;\n    const renderGrid = isGridPresent(renderDetails);\n    return {\n        title: createHeaderWrapper(TITLE, layoutManager, renderDetails),\n        subtitle: createHeaderWrapper(SUB_TITLE, layoutManager, renderDetails),\n        message: createMessageWrapper(layoutManager, canvas, renderDetails, renderGrid),\n        legend: createLegendWrapper(layoutManager, renderDetails, renderGrid),\n        grid: gridLayoutWrapper(layoutManager, renderDetails, grid, renderGrid),\n        verticalScrollBar: createScrollBarWrapper(VERTICAL, layoutManager, renderDetails, grid, renderGrid),\n        horizontalScrollBar: createScrollBarWrapper(HORIZONTAL, layoutManager, renderDetails, grid, renderGrid)\n    };\n};\n","export class ScrollManager {\n\n    constructor () {\n        this._scrollBarComponents = {};\n        this._attachedComponents = {};\n    }\n\n    scrollBarComponents (...sbc) {\n        if (sbc.length) {\n            this._scrollBarComponents = sbc[0];\n            return this;\n        }\n        return this._scrollBarComponents;\n    }\n\n    attachedComponents (...abc) {\n        if (abc.length) {\n            this._attachedComponents = abc[0];\n            return this;\n        }\n        return this._attachedComponents;\n    }\n\n    preventBrowserScroll (type, event) {\n        if (this.scrollBarComponents()[type]) {\n        // Prevent default behaviour and stop propagating\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        return this;\n    }\n\n    performAttachedScrollFunction (type, movedViewLength) {\n        Object.values(this.attachedComponents()).forEach((e) => {\n            e.performScrollAction(type, movedViewLength);\n        });\n        return this;\n    }\n\n    triggerScrollBarAction (type, delta) {\n        this.scrollBarComponents()[type] && this.scrollBarComponents()[type].scrollDeltaTo(delta);\n        return this;\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\nimport { arrangeComponents } from './component-resolver';\nimport { createHeaders } from './title-maker';\nimport { createLegend, getLegendSpace } from './legend-maker';\nimport { componentWrapperMaker } from './component-wrapper-maker';\nimport {\n    TOP,\n    BOTTOM,\n    LEFT,\n    RIGHT,\n    TITLE,\n    SUB_TITLE,\n    LEGEND,\n    VERTICAL_SCROLL_BAR,\n    HORIZONTAL_SCROLL_BAR,\n    GRID,\n    MESSAGE\n} from '../constants';\nimport { ScrollManager } from './scroll-manager';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const prepareLayout = (layout, renderDetails) => {\n    const { components, layoutConfig, measurement } = renderDetails;\n    const {\n        rows,\n        columns,\n        values,\n        cornerMatrices\n    } = components;\n    const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n    } = cornerMatrices;\n    if (rows && columns) {\n        layout.measurement(measurement)\n                        .config(layoutConfig)\n                        .matrices({\n                            top: [topLeft, columns[0], topRight],\n                            center: [rows[0], values, rows[1]],\n                            bottom: [bottomLeft, columns[1], bottomRight]\n                        })\n                        .triggerReflow();\n    }\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} mount\n *\n */\nexport const getRenderDetails = (context, mount) => {\n    let layoutConfig = mergeRecursive({}, context.config());\n    // Get height width of the mount point\n    let { height, width } = mount.getBoundingClientRect();\n    const heightAttr = context.height();\n    const widthAttr = context.width();\n    const visGroup = context.composition().visualGroup;\n    const {\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority,\n        rows,\n        columns,\n        values\n    } = visGroup.placeholderInfo();\n    const {\n        minWidth,\n        minHeight,\n        classPrefix,\n        showHeaders,\n        legend,\n        pagination,\n        scrollBar\n    } = context.config();\n\n    // Get title configuration\n    const titleConfig = context.title()[1];\n     // Get subtitle configuration\n    const subtitleConfig = context.subtitle()[1];\n    // Get legend position\n    const legendPosition = legend.position;\n    // Arrange components according to config\n    const layoutArrangement = arrangeComponents(context);\n\n    height = Math.floor(height);\n    width = Math.floor(width);\n\n    const availableHeightForCanvas = Math.max(heightAttr > 0 ? heightAttr : height, minHeight);\n    const availableWidthForCanvas = Math.max(widthAttr > 0 ? widthAttr : width, minWidth);\n\n    // Create headers and determine header height\n    const { headers, headerHeight } = createHeaders(context, availableHeightForCanvas, availableWidthForCanvas);\n\n    // Create legends and determine legend space\n    const legends = createLegend(context, headerHeight, availableHeightForCanvas, availableWidthForCanvas);\n    context._composition.legend = {};\n    legends.forEach((e) => {\n        context._composition.legend[e.scaleType] = e.legend;\n    });\n\n    const legendSpace = getLegendSpace(legends, legend, availableHeightForCanvas, availableWidthForCanvas);\n    const legendWidth = (legendPosition === LEFT || legendPosition === RIGHT) ? legendSpace.width : 0;\n    const legendHeight = (legendPosition === TOP || legendPosition === BOTTOM) ? legendSpace.height : 0;\n\n    // Set components for layouting\n    const components = {\n        headers,\n        legends,\n        canvases: [context],\n        rows,\n        columns,\n        values,\n        cornerMatrices: visGroup.cornerMatrices()\n    };\n\n    const measurement = {\n        mountSpace: {\n            height,\n            width\n        },\n        headerHeight,\n        legendSpace,\n        canvasWidth: availableWidthForCanvas,\n        canvasHeight: availableHeightForCanvas,\n        width: availableWidthForCanvas - legendWidth,\n        height: availableHeightForCanvas - headerHeight - legendHeight,\n        minUnitHeight: context.minUnitHeight(),\n        minUnitWidth: context.minUnitWidth()\n    };\n    layoutConfig = mergeRecursive(layoutConfig, {\n        classPrefix,\n        showHeaders,\n        border: mergeRecursive(visGroup.metaData().border, context.config().border),\n        layoutArrangement,\n        legend,\n        buffer: scrollBar.thickness,\n        pagination,\n        title: titleConfig,\n        subtitle: subtitleConfig,\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        mount,\n        priority\n    });\n    return {\n        layoutConfig,\n        components,\n        measurement\n    };\n};\n\nconst componentIndexes = {\n    title: 0,\n    subtitle: 1,\n    legend: 2,\n    verticalScrollBar: 3,\n    horizontalScrollBar: 4,\n    grid: 5,\n    message: 6\n};\n\nconst componentNames = {\n    0: TITLE,\n    1: SUB_TITLE,\n    2: LEGEND,\n    3: VERTICAL_SCROLL_BAR,\n    4: HORIZONTAL_SCROLL_BAR,\n    5: GRID,\n    6: MESSAGE\n};\n\nconst attachListeners = (componentWrappers) => {\n    componentWrappers.forEach((componentWrapper) => {\n        if (componentWrapper) {\n            componentWrapper.attachListener();\n        }\n    });\n};\n\n/**\n * Responsible for creating a scroll manager that manages interactions between the grid\n * component and the scroll bar components\n *\n * @param {Array} componentWrappers Contains the wrappers for all the components\n * @param {Canvas} canvas Instance of the current canvas\n * @return {Array} Positions of units either horizontal or vertical\n */\nconst createScrollManager = (componentWrappers, canvas) => {\n    const {\n        horizontalScrollBar,\n        verticalScrollBar,\n        grid\n    } = componentIndexes;\n\n    const horizontalScrollWrapper = componentWrappers[horizontalScrollBar];\n    const verticalScrollWrapper = componentWrappers[verticalScrollBar];\n    const gridWrapper = componentWrappers[grid];\n    const scrollBarManager = new ScrollManager();\n    const scrollBarComponents = {};\n\n    verticalScrollWrapper && (scrollBarComponents.vertical = verticalScrollWrapper);\n    horizontalScrollWrapper && (scrollBarComponents.horizontal = horizontalScrollWrapper);\n\n    scrollBarManager\n                    .scrollBarComponents(scrollBarComponents)\n                    .attachedComponents({\n                        grid: gridWrapper\n                    });\n    canvas.composition().hScrollBar = horizontalScrollWrapper;\n    canvas.composition().vScrollBar = verticalScrollWrapper;\n\n    [horizontalScrollWrapper, verticalScrollWrapper].forEach((wrapper) => {\n        wrapper && wrapper.manager(scrollBarManager);\n    });\n\n    gridWrapper.scrollBarManager(scrollBarManager);\n};\n\nexport const renderLayout = (canvas, renderDetails) => {\n    const layoutManager = canvas._layoutManager;\n    const gridLayout = canvas.layout();\n    const {\n\n        grid\n    } = componentIndexes;\n\n    // Get the component wrappers\n    const compWrappers = componentWrapperMaker(canvas, gridLayout, renderDetails);\n    const componentWrappers = Object.keys(componentIndexes).map(e => compWrappers[e]);\n    const gridWrapper = componentWrappers[grid];\n    if (gridWrapper) {\n        createScrollManager(componentWrappers, canvas);\n    }\n\n    componentWrappers.forEach((componentWrapper, index) => {\n        if (!componentWrapper) {\n            const deleteElementName = componentNames[index];\n            layoutManager.removeComponent(deleteElementName);\n        }\n    });\n    layoutManager.registerComponents(componentWrappers).compute();\n    attachListeners(componentWrappers);\n};\n","import {\n    getDataModelFromIdentifiers,\n    FieldType,\n    mergeRecursive,\n    isSimpleObject,\n    CommonProps\n} from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\n\nimport { applyInteractionPolicy } from '../helper';\n\nconst defaultInteractionPolicy = (valueMatrix, firebolt) => {\n    const isMeasure = field => field.type() === FieldType.MEASURE;\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    const xFields = [].concat(...visualGroup.getFieldsFromChannel('x'));\n    const yFields = [].concat(...visualGroup.getFieldsFromChannel('y'));\n    const colDim = xFields.every(field => field.type() === FieldType.DIMENSION);\n    const fieldInf = visualGroup.resolver().getAllFields();\n    const rowFacets = fieldInf.rowFacets;\n    const colFacets = fieldInf.colFacets;\n    valueMatrix.each((cell) => {\n        const unitFireBolt = cell.valueOf().firebolt();\n        if (!(xFields.every(isMeasure) && yFields.every(isMeasure))) {\n            const facetFields = cell.valueOf().facetByFields()[0];\n            const unitColFacets = facetFields.filter(d => colFacets.findIndex(v => v.equals(d)) !== -1);\n            const unitRowFacets = facetFields.filter(d => rowFacets.findIndex(v => v.equals(d)) !== -1);\n            let propFields;\n            if (colDim) {\n                propFields = unitColFacets.map(d => `${d}`);\n            } else {\n                propFields = unitRowFacets.map(d => `${d}`);\n            }\n\n            unitFireBolt.propagateWith('*', propFields, true);\n        }\n    });\n};\n\nconst defaultCrossInteractionPolicy = {\n    behaviours: {\n        '*': (propagationPayload, context) => {\n            const propagationCanvasAlias = propagationPayload.sourceCanvas;\n            const canvasAlias = context.parentAlias();\n            return propagationCanvasAlias ? canvasAlias === propagationCanvasAlias : true;\n        }\n    },\n    sideEffects: {\n        tooltip: (propagationPayload, context) => {\n            const propagationUnit = propagationPayload.sourceUnit;\n            const propagationCanvas = propagationPayload.sourceCanvas;\n            const unitId = context.id();\n            const canvasAlias = context.parentAlias();\n            if (propagationCanvas) {\n                return propagationCanvas !== canvasAlias ? true : unitId === propagationUnit;\n            }\n            return true;\n        },\n        selectionBox: () => false\n    }\n};\n\n/**\n * This class is responsible for dispatching any behavioural action to all the visual units housed by the canvas.\n * It is created by {@link Canvas}. This class does not handle any physical actions. Physical actions get triggered\n * in {@link VisualUnit} which is managed by it's own firebolt instance. The firebolt instance of canvas only\n * propagates the action to all the visual units in it's composition.\n *\n * To get the firebolt instance of {@link Canvas}\n * ```\n *  const firebolt = canvas.firebolt();\n * ```\n *\n * @class GroupFireBolt\n * @public\n */\nexport default class GroupFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this._interactionPolicy = this.constructor.defaultInteractionPolicy();\n        this.crossInteractionPolicy(this.constructor.defaultCrossInteractionPolicy());\n    }\n\n    static defaultInteractionPolicy () {\n        return defaultInteractionPolicy;\n    }\n\n    static defaultCrossInteractionPolicy () {\n        return defaultCrossInteractionPolicy;\n    }\n\n    interactionPolicy (...policy) {\n        if (policy.length) {\n            this._interactionPolicy = policy[0] || this.constructor.defaultInteractionPolicy();\n            return this;\n        }\n        return this._interactionPolicy;\n    }\n\n    crossInteractionPolicy (...policy) {\n        if (policy.length) {\n            this._crossInteractionPolicy = mergeRecursive(mergeRecursive({},\n                this.constructor.defaultCrossInteractionPolicy()), policy[0] || {});\n            const context = this.context;\n            applyInteractionPolicy(this);\n            context._throwback.registerImmediateListener([CommonProps.MATRIX_CREATED], () => {\n                applyInteractionPolicy(this);\n            });\n            return this;\n        }\n        return this._crossInteractionPolicy;\n    }\n\n    /**\n     * Dispatches a behavioural action with a payload. It takes the name of the behavioural action and a payload\n     * object which contains the criteria aend an array of side effects which determines what side effects are\n     * going to be shown in each visual unit of the canvas. It prepares the datamodel from the given criteria\n     * and initiates a propagation from the datamodel of canvas. Then all the visual units of canvas which listens\n     * to the propagation gets informed on which rows got selected and dispatches the behavioural action sent during\n     * propagation.\n     *\n     * To dispatch a behavioural action on the canvas\n     * ```\n     *  // Get the firebolt instance of the canvas\n     *  const firebolt = canvas.firebolt();\n     *  // Dispatch a brush behaviour\n     *  firebolt.dispatchBehaviour('brush', {\n     *      // Selects all the rows with Horsepower having range between 100 and 200.\n     *      criteria: {\n     *          Horsepower: [100, 200]\n     *      }\n     *  });\n     * // On dispatch of this behavioural action, a selection box gets created and plots gets faded out which are the\n     * // default side effects mapped to this behavioural action.\n     * ```\n     *\n     * ```\n     * Additionally, it can also be passed an array of side effects in the payload.\n     *  // Dispatch a select behaviour with only crossline as side effect.\n     *  firebolt.dispatchBehaviour('select', {\n     *      criteria: {\n     *          Cylinders: ['8']\n     *      },\n     *      sideEffects: ['crossline']\n     *  });\n     * ```\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of the behavioural action\n     * @param {Object} payload Object which contains the interaction information.\n     * @param {Object | Array.<Array>} payload.criteria Identifiers by which the selection happens.\n     * @param {Array.<string|Object>} payload.sideEffects Side effects which needs to be shown.\n     *\n     * @return {GroupFireBolt} Instance of firebolt.\n     */\n    dispatchBehaviour (behaviour, payload) {\n        const propPayload = Object.assign(payload);\n        const criteria = propPayload.criteria;\n        const data = this.context.composition().visualGroup.getGroupByData();\n        const fieldsConfig = data.getFieldsConfig();\n        const model = getDataModelFromIdentifiers(data, criteria);\n        const behaviouralAction = this._actions.behavioural[behaviour];\n\n        if (behaviouralAction) {\n            const fields = isSimpleObject(criteria) ? Object.keys(criteria) : (criteria ? criteria[0] : []);\n            const validFields = fields.filter(field => field in fieldsConfig);\n            const mutates = behaviouralAction.constructor.mutates();\n            const propConfig = {\n                payload: propPayload,\n                action: behaviour,\n                criteria: model,\n                sourceId: this.context.alias(),\n                isMutableAction: mutates,\n                propagateInterpolatedValues: validFields.every(field => fieldsConfig[field].def.type ===\n                    FieldType.MEASURE)\n            };\n            data.propagate(model, propConfig, true);\n        }\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        return this;\n    }\n}\n","import GroupFireBolt from './group-firebolt';\n\nexport default GroupFireBolt;\n","export const APP_INITIAL_STATE = {\n    app: {\n        group: {},\n        units: {},\n        layers: {},\n        canvas: {}\n    },\n    local: {\n        canvas: {},\n        group: {},\n        units: {},\n        layers: {}\n    }\n};\n\n","import { GridLayout } from '@chartshq/layout';\nimport { transactor, Store, getUniqueId, selectElement, STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { RETINAL } from '../constants';\nimport TransactionSupport from '../transaction-support';\nimport { getRenderDetails, prepareLayout, renderLayout } from './layout-maker';\nimport { localOptions, canvasOptions } from './local-options';\nimport GroupFireBolt from './firebolt';\nimport options from '../options';\nimport { APP_INITIAL_STATE } from './app-state';\nimport { initCanvas,\n        setupChangeListener,\n        setLabelRotationForAxes,\n        createGroupState,\n        createLayoutManager,\n        setLayoutInfForUnits\n} from './helper';\n/**\n * Canvas is a logical component which houses a visualization by taking multiple variable in different encoding channel.\n * Canvas manages lifecycle of many other logical component and exposes one consistent interface for creation of chart.\n * Canvas is intialized from environment with settings from environment and singleton dependencies.\n *\n * To create an instance of canvas\n * ```\n *  const env = Muze();\n *  const canvas = env.canvas()\n * ```\n *\n *\n * @class\n * @public\n * @module Canvas\n */\nexport default class Canvas extends TransactionSupport {\n\n    /**\n     * Creates reactive property accessors.\n     * - data\n     * - height\n     * - width\n     * - config\n     * This configs are retrieved from options.\n     */\n    constructor (globalDependencies) {\n        super();\n\n        this._allOptions = Object.assign({}, options, localOptions);\n        this._registry = {};\n        this._composition = {};\n        this._cachedProps = {};\n        this._alias = null;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        this._composition.layout = new GridLayout();\n        this._store = new Store(APP_INITIAL_STATE);\n\n        this._throwback = new Store({\n            [CommonProps.MATRIX_CREATED]: false,\n            [CommonProps.ON_LAYER_DRAW]: null\n        });\n\n        // Setters and getters will be mounted on this. The object will be mutated.\n        const namespace = STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE;\n        const allOptions = Object.assign({}, options, localOptions, canvasOptions);\n\n        transactor(this, allOptions, this._store, {\n            namespace\n        });\n\n        this.dependencies(Object.assign({}, globalDependencies, this._dependencies));\n        this.firebolt(new GroupFireBolt(this, {\n            behavioural: behaviouralActions,\n            physical: physicalActions,\n            physicalBehaviouralMap: {}\n        }, sideEffects, behaviourEffectMap));\n        this.alias(`canvas-${getUniqueId()}`);\n        this.title('', {});\n        this.subtitle('', {});\n        this.legend({});\n        this.color({});\n        this.shape({});\n        this.size({});\n        setupChangeListener(this);\n         // init layoutManager\n        this._layoutManager = createLayoutManager();\n    }\n\n    /**\n     * Retrieves an instance of layout which is responsible for layouting. Layout is responsible for creating faceted\n     * presentation using table layout.\n     *\n     * @public\n     *\n     * @return {GridLayout} Instance of layout attached to canvas.\n     */\n    layout (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().layout;\n    }\n\n    /**\n     * Retrieves the composition for a canvas\n     *\n     * @public\n     *\n     * @return {object} Instances of the components which canvas requires to draw the full visualization.\n     *      ```\n     *          {\n     *              layout: // Instance of {@link GridLayout}\n     *              legend: // Instance of {@link Legend}\n     *              subtitle: // Instance of {@link TextCell} using which the title is rendered\n     *              title: // Instance of {@link TextCell} using which the title is rendered\n     *              visualGroup: // Instance of {@link visualGroup}\n     *          }\n     *      ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Sets or gets the alias of the canvas. Alias is a name by which the canvas can be referred.\n     *\n     * When setter\n     * @param {string} alias Name of the alias.\n     *\n     * @return {Canvas} Instance of the canvas.\n     *\n     * When getter\n     *\n     * @return {string} Alias of canvas.\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            const visualGroup = this.composition().visualGroup;\n            this._alias = params[0];\n            visualGroup && visualGroup.alias(this.alias());\n            return this;\n        }\n        return this._alias;\n    }\n\n    /**\n     * Creates an instance initiated with given settings.\n     *\n     * @param {Object} initialSettings Initial settings to be populated in the model\n     * @param {Object} regEntry newly created instance with the initial settings\n     * @param {Object} globalDependencies dependencies which will be created only once in the page\n     *\n     * @return {Object} newly created instance with the initial settings\n     */\n    static withSettings (initialSettings, regEntry, globalDependencies) {\n        const instance = new Canvas(globalDependencies);\n\n        for (const key in initialSettings) {\n            instance[key](initialSettings[key]);\n        }\n        // set registry for instance\n        instance.registry(regEntry);\n        return instance;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof Canvas\n     */\n    static formalName () {\n        return 'canvas';\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this canvas. The firebolt instance can be used to dispatch a\n     * behaviour dynamically on the canvas. This firebolt does not handle any physical actions. It is just used to\n     * propagate the action to all the visual units in it's composition.\n     *\n     * @public\n     *\n     * @return {GroupFireBolt} Instance of firebolt associated with canvas.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Registry peoperty accessor\n     *\n     * @param {Object} reg plain old javascript object keyvalue pairs. Key containing module name and value contains\n     * module definition class. The reg object has to be flat object of level 1.\n     */\n    registry (...params) {\n        if (params.length) {\n            const param = params[0];\n            const components = Object.assign({}, param.components);\n            const componentSubRegistry = Object.assign({}, param.componentSubRegistry);\n            const interactionRegistry = Object.assign({}, param.interactions);\n\n            this._registry = { components, componentSubRegistry, interactions: interactionRegistry };\n            const initedComponents = initCanvas(this);\n            // @todo is it okay to continue this tight behaviour? If not use a resolver to resolve diff component type.\n            this._composition.visualGroup = initedComponents[0];\n            createGroupState(this);\n            this.composition().visualGroup.alias(this.alias()).store(this._store);\n            return this;\n        }\n        return this._registry;\n    }\n\n    /*\n     * Prepare dependencies for top level elements\n     */\n    dependencies (...param) {\n        if (param.length) {\n            this._dependencies = param[0];\n            return this;\n        }\n        // @todo prepare dependencies here.\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     * @param {*} lifeCycles\n     *\n     * @memberof Canvas\n     */\n    lifeCycle (lifeCycles) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        if (lifeCycles) {\n            lifeCycleManager.register(lifeCycles);\n            return this;\n        }\n        return lifeCycleManager;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof Canvas\n     */\n    legend (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().legend;\n    }\n\n    /**\n     * Returns a promise for various {@link LifecycleEvents} of the various components of canvas. The promise gets\n     * resolved once the particular event gets completed.\n     *\n     * To use this,\n     * ```\n     *      canvas.once('layer.drawn').then(() => {\n     *          // Do any post drawing work here.\n     *      });\n     * ```\n     * @public\n     *\n     * @param {string} eventName Name of the lifecycle event.\n     *\n     * @return {Promise} A pending promise waiting for resolve to be called.\n     */\n    once (eventName) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        return lifeCycleManager.retrieve(eventName);\n    }\n\n    /**\n     * Internal function to trigger render, this method is cognizant of all the properties of the core modules and\n     * establish a passive reactivity. Passive reactivity is not always a bad thing :)\n     * @internal\n     */\n    render () {\n        const mount = this.mount();\n        // removeChild(mount);\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        // Get render details including arrangement and measurement\n        const renderDetails = getRenderDetails(this, mount);\n        lifeCycleManager.notify({ client: this, action: 'beforedraw' });\n        // Prepare the layout by triggering the matrix calculation\n        prepareLayout(this.layout(), renderDetails);\n\n        this._layoutManager.dimension({\n            height: renderDetails.measurement.canvasHeight,\n            width: renderDetails.measurement.canvasWidth\n        });\n\n        this._layoutManager.renderAt(mount);\n\n        // Render each component\n        renderLayout(this, renderDetails);\n\n        setLayoutInfForUnits(this);\n\n        // setLabelRotation\n        setLabelRotationForAxes(this);\n    }\n\n    /**\n     * Returns the instances of x axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the top axis and the second element represents the bottom\n     *   // axis.\n     *   [\n     *      [X1, X2],\n     *      [X3, X4]\n     *   ]\n     * ```\n     * @public\n     *\n     * @return {Array.<Array>} Instances of x axis.\n     */\n    xAxes () {\n        return this.composition().visualGroup.getAxes('x');\n    }\n\n    /**\n     * Returns the instances of y axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the left axis and the second element represents the right\n     *   // axis.\n     *   [\n     *      [Y1, Y2],\n     *      [Y3, Y4]\n     *   ]\n     * ```\n     * @public\n     * @return {Array.<Array>} Instances of y axis.\n     */\n    yAxes () {\n        return this.composition().visualGroup.getAxes('y');\n    }\n\n    /**\n     * Returns all the retinal axis of the canvas. Color, shape and size axis are combinedly called retinal axis.\n     *\n     * @public\n     * @return {Object} Instances of retinal axis.\n     *          ```\n     *              {\n     *                  color: [ColorAxis], // Array of color axis.\n     *                  shape: [ShapeAxis], // Array of shape axis.\n     *                  size: [SizeAxis] // Array of size axis.\n     *              }\n     *          ```\n     */\n    getRetinalAxes () {\n        const visualGroup = this.composition().visualGroup;\n        return visualGroup.getAxes(RETINAL);\n    }\n\n    mount (...params) {\n        if (params.length) {\n            let value = params[0];\n            if (typeof params[0] === 'string') {\n                value = selectElement(params[0]).node();\n            }\n            this._mount = value;\n            return this;\n        }\n        return this._mount;\n    }\n}\n","import { cellRegistry, SimpleCell } from '@chartshq/visual-cell';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { layerRegistry } from '@chartshq/visual-layer';\nimport { SimpleGroup, VisualGroup } from '@chartshq/visual-group';\nimport { registry as interactionRegistry } from '@chartshq/muze-firebolt';\n\nexport const COMPONENTS = {\n    [VisualGroup.formalName()]: VisualGroup,\n    [VisualUnit.formalName()]: VisualUnit\n};\n\nexport const SUBREGISTRIES = {\n    cells: cellRegistry,\n    layers: layerRegistry\n};\nexport const INTERFACES = {\n    SimpleGroup,\n    SimpleCell\n};\n\nconst componentRegistry = (components = COMPONENTS) => {\n    const reg = Object.assign({}, components);\n\n    return {\n        register: (cls) => {\n            const key = cls.formalName();\n            reg[key] = cls;\n            return componentRegistry;\n        },\n        get: () => reg\n    };\n};\n\nexport const registry = {\n    components: componentRegistry(COMPONENTS),\n    cells: cellRegistry(),\n    layers: layerRegistry(),\n    interactions: interactionRegistry\n};\n","import * as utils from 'muze-utils';\n\nimport { VisualUnit, helpers as unitHelpers, enums as unitEnums, UnitFireBolt } from '@chartshq/visual-unit';\nimport { VisualGroup, Encoders, encoderHelpers, groupUtils, enums as groupEnums } from '@chartshq/visual-group';\nimport {\n    SurrogateSideEffect,\n    SpawnableSideEffect,\n    sideEffects,\n    PersistentBehaviour,\n    GenericBehaviour,\n    VolatileBehaviour,\n    behaviouralActions,\n    GenericSideEffect,\n    Firebolt\n} from '@chartshq/muze-firebolt';\nimport {\n    layerFactory,\n    BaseLayer,\n    LineLayer,\n    TextLayer,\n    TickLayer,\n    PointLayer,\n    helpers,\n    enums,\n    SimpleLayer,\n    AreaLayer,\n    ArcLayer,\n    layerMixins\n} from '@chartshq/visual-layer';\nimport pkg from '../package.json';\nimport * as operators from './operators';\nimport { actionModel as ActionModel } from './action-model';\nimport options from './options';\nimport { Canvas } from './canvas';\nimport { registry as globalRegistry, SUBREGISTRIES } from './default-registry';\nimport './muze.scss';\n\nconst {\n    transactor,\n    Smartlabel,\n    enableChainedTransaction,\n    LifeCycleManager,\n    DataModel,\n    Store\n} = utils;\n\n// Cache singleton instances which should be included only once in a page\nconst globalCache = {};\nconst defaultRegistry = globalRegistry.components;\n\nconst overrideRegistryDefinitions = (overrideRegistry, registry) => {\n    overrideRegistry.forEach((def) => {\n        registry.register(def);\n    });\n};\n\n/**\n * Entry point to renderer. Initializes an environment with settings and registries for canvas. This is a simple wrapper\n * over {@link Canvas} which enables common configuration passing to multiple such canvases.\n *\n * Everytime `muze()` is called it creates an environment. These environment supports subset of APIs of Canvas. If\n * common configuration is used to render multiple canvases then it can be set directly in the env. Like if data is\n * common across all the visulization then its better to set the data in env. When a canvas is created it receives all\n * those configuration from env.\n *\n * ```\n *  // Creates an environment\n *  const env = muze()\n *  // Set data property in environment, so that all the canvas created from the same environment gets this data\n *  // automatically\n *  env.data(dm);\n *  // Creates canvas, by default env pushes data to canvas instance\n *  const canvas = env.canvas();\n * ```\n *\n * If a property is set on both environment and canvas instance, property set on canvas instance gets more priority.\n *\n * @public\n * @module muze\n * @namespace Muze\n *\n * @return {Env} Instance of an environment\n */\nconst muze = () => {\n    // Setters and getters will be mounted on this. Object will be mutated.\n    const [env, globalStore] = transactor({}, options);\n    const components = Object.assign({}, globalRegistry.components.get());\n    const componentSubRegistryDef = Object.assign({}, SUBREGISTRIES);\n\n    const componentSubRegistry = {};\n\n    for (const prop in componentSubRegistryDef) {\n        componentSubRegistry[prop] = componentSubRegistryDef[prop](globalRegistry[prop].get());\n    }\n\n    // Apart form the setter getter, an instance method is injected to create real renderer instances\n    env.canvas = () => {\n        // Create a canvas instance with this settings\n        const settings = globalStore.serialize();\n        const canvas = Canvas.withSettings(settings, { /* registry */\n            components,\n            componentSubRegistry,\n            interactions: globalRegistry.interactions\n        }, env.globalDependencies());\n\n        // Whenever settings is changed canvas is updated\n        enableChainedTransaction(globalStore, canvas, Object.keys(settings));\n\n        return canvas;\n    };\n\n    // Global dependencies for for compositions. Only one copy of the same should be in the page\n    env.globalDependencies = () => {\n        if (!globalCache.smartlabel) {\n            globalCache.smartlabel = new Smartlabel(1, 'body');\n        }\n        return {\n            smartlabel: globalCache.smartlabel,\n            lifeCycleManager: new LifeCycleManager()\n        };\n    };\n\n    // Retrieves global settings. This getter is readonly so that user can't change this as change should happen\n    // only from setter to avoid unwanted sync issues.\n    env.settings = () => globalStore.serialize();\n\n    env.registry = (...overrideRegistry) => {\n        // Selectively copy the properties from COMPONENTS\n        if (overrideRegistry.length) {\n            overrideRegistry.forEach((def) => {\n                const prop = def.formalName();\n                if (prop in defaultRegistry) {\n                    components[prop] = def;\n                }\n            });\n            return env;\n        }\n        return components;\n    };\n\n    env.cellRegistry = (...overrideRegistry) => {\n        const cellRegistry = componentSubRegistry.cellRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry, cellRegistry);\n            return env;\n        }\n        return cellRegistry.get();\n    };\n\n    env.layerRegistry = (...overrideRegistry) => {\n        const layerRegistry = componentSubRegistry.layerRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry, layerRegistry);\n            return env;\n        }\n        return layerRegistry.get();\n    };\n\n    return env;\n};\n\nmuze.registry = globalRegistry;\n\nmuze.Components = {\n    VisualLayer: {\n        layers: {\n            BaseLayer,\n            LineLayer,\n            TextLayer,\n            TickLayer,\n            PointLayer,\n            SimpleLayer,\n            AreaLayer,\n            ArcLayer\n        },\n        helpers,\n        enums,\n        layerMixins\n    },\n    VisualUnit: {\n        constructor: VisualUnit,\n        helpers: unitHelpers,\n        enums: unitEnums,\n        UnitFireBolt\n    },\n    VisualGroup: {\n        constructor: VisualGroup,\n        Encoders,\n        encoderHelpers,\n        groupUtils,\n        enums: groupEnums\n    },\n    Canvas: {\n        constructor: Canvas\n    },\n    Firebolt: {\n        constructor: Firebolt\n    }\n};\n\nconst SideEffects = {\n    sideEffects,\n    standards: {\n        SurrogateSideEffect,\n        SpawnableSideEffect,\n        GenericSideEffect\n    }\n};\n\nconst Behaviours = {\n    behaviouralActions,\n    standards: {\n        GenericBehaviour,\n        PersistentBehaviour,\n        VolatileBehaviour\n    }\n};\n\nmuze.DataModel = DataModel;\nmuze.version = pkg.version;\nmuze.SideEffects = SideEffects;\nmuze.ActionModel = ActionModel;\nmuze.layerFactory = layerFactory;\nmuze.Operators = operators;\nmuze.Behaviours = Behaviours;\nmuze.utils = utils;\nmuze.Model = new Store().model.constructor;\n\nexport default muze;\n"],"sourceRoot":""}