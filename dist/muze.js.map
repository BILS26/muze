{"version":3,"sources":["webpack://muze/webpack/universalModuleDefinition","webpack://muze/webpack/bootstrap","webpack://muze/webpack://DataModel/webpack/universalModuleDefinition","webpack://muze/webpack://DataModel/webpack/bootstrap","webpack://muze/webpack://DataModel/src/index.js","webpack://muze/webpack://DataModel/src/enums/data-format.js","webpack://muze/webpack://DataModel/src/enums/dimension-subtype.js","webpack://muze/webpack://DataModel/src/enums/measure-subtype.js","webpack://muze/webpack://DataModel/src/enums/field-type.js","webpack://muze/webpack://DataModel/src/enums/filtering-mode.js","webpack://muze/webpack://DataModel/src/enums/group-by-functions.js","webpack://muze/webpack://DataModel/src/utils/date-time-formatter.js","webpack://muze/webpack://DataModel/src/utils/column-major.js","webpack://muze/webpack://DataModel/src/utils/extend2.js","webpack://muze/webpack://DataModel/src/utils/helper.js","webpack://muze/webpack://DataModel/src/field-store.js","webpack://muze/webpack://DataModel/src/value.js","webpack://muze/webpack://DataModel/src/operator/row-diffset-iterator.js","webpack://muze/webpack://DataModel/src/invalid-aware-types.js","webpack://muze/webpack://DataModel/src/operator/compose.js","webpack://muze/webpack://DataModel/src/constants/index.js","webpack://muze/webpack://DataModel/src/operator/get-common-schema.js","webpack://muze/webpack://DataModel/src/operator/cross-product.js","webpack://muze/webpack://DataModel/src/operator/merge-sort.js","webpack://muze/webpack://DataModel/src/operator/data-builder.js","webpack://muze/webpack://DataModel/src/operator/difference.js","webpack://muze/webpack://DataModel/src/operator/group-by-function.js","webpack://muze/webpack://DataModel/src/utils/reducer-store.js","webpack://muze/webpack://DataModel/src/operator/natural-join-filter-function.js","webpack://muze/webpack://DataModel/src/operator/union.js","webpack://muze/webpack://DataModel/src/operator/outer-join.js","webpack://muze/webpack://DataModel/src/fields/field/index.js","webpack://muze/webpack://DataModel/src/fields/dimension/index.js","webpack://muze/webpack://DataModel/src/fields/categorical/index.js","webpack://muze/webpack://DataModel/src/fields/temporal/index.js","webpack://muze/webpack://DataModel/src/fields/binned/index.js","webpack://muze/webpack://DataModel/src/fields/measure/index.js","webpack://muze/webpack://DataModel/src/fields/continuous/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/field-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/categorical-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/temporal-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/binned-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/continuous-parser/index.js","webpack://muze/webpack://DataModel/src/fields/partial-field/index.js","webpack://muze/webpack://DataModel/src/field-creator.js","webpack://muze/webpack://DataModel/src/default-config.js","webpack://muze/webpack://DataModel/src/converter/dsv-arr.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/dsv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/csv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/tsv.js","webpack://muze/webpack://DataModel/src/converter/dsv-str.js","webpack://muze/webpack://DataModel/src/converter/flat-json.js","webpack://muze/webpack://DataModel/src/converter/auto-resolver.js","webpack://muze/webpack://DataModel/src/helper.js","webpack://muze/webpack://DataModel/src/relation.js","webpack://muze/webpack://DataModel/src/datamodel.js","webpack://muze/webpack://DataModel/src/operator/group-by.js","webpack://muze/webpack://DataModel/src/operator/bucket-creator.js","webpack://muze/webpack://DataModel/src/stats/index.js","webpack://muze/webpack://DataModel/src/export.js","webpack://muze/webpack://DataModel/src/operator/pure-operators.js","webpack://muze/webpack://DataModel/src/operator/natural-join.js","webpack://muze/webpack://hyperdis/webpack/universalModuleDefinition","webpack://muze/webpack://hyperdis/webpack/bootstrap","webpack://muze/webpack://hyperdis/src/utils/set.js","webpack://muze/webpack://hyperdis/src/utils/index.js","webpack://muze/webpack://hyperdis/src/graph-node.js","webpack://muze/webpack://hyperdis/src/electric-node.js","webpack://muze/webpack://hyperdis/src/graph.js","webpack://muze/webpack://hyperdis/src/model.js","webpack://muze/webpack://hyperdis/src/index.js","webpack://muze/(webpack)/buildin/module.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/SmartlabelManager.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/lib.js","webpack://muze/./packages/muze/src/index.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/container-manager.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisector.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisect.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/range.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ticks.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/threshold/sturges.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/map.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/nest.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/set.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/ordinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/band.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/define.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/lab.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/rgb.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/object.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/string.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/value.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/parse.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/date.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/round.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/decompose.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/zoom.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hsl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hcl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/piecewise.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/continuous.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatDecimal.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/exponent.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatSpecifier.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTrim.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatPrefixAuto.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatRounded.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTypes.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatGroup.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatNumerals.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionFixed.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/tickFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionPrefix.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionRound.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/nice.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/log.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/pow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/threshold.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/interval.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/millisecond.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/second.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/minute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/hour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/day.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/week.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/month.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/year.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMinute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcHour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcDay.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcWeek.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMonth.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcYear.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoParse.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/time.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20b.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20c.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/viridis.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/sequential.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/ramp.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack://muze/./packages/muze-utils/src/enums/namespace.js","webpack://muze/./packages/muze-utils/src/enums/reserved-fields.js","webpack://muze/./packages/muze-utils/src/enums/common-props.js","webpack://muze/./packages/muze-utils/src/enums/constants.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/axis.js","webpack://muze/./packages/muze-utils/node_modules/d3-path/src/path.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/arc.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/line.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/area.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/radial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/lineRadial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/diamond.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/star.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/square.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/triangle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/wye.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/noop.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/bundle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRom.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linearClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/monotone.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/natural.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/step.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/stack.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/cubic.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/poly.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/sin.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/bounce.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/back.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/elastic.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/RedBlackTree.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Edge.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Cell.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Beach.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Diagram.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/voronoi.js","webpack://muze/./packages/muze-utils/src/DataSystem/selection.js","webpack://muze/./packages/muze-utils/src/enums/stack-config.js","webpack://muze/./packages/muze-utils/src/common-utils.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/circle.js","webpack://muze/./packages/muze-utils/src/DataSystem/dataSelect.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/diverging.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/expand.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/wiggle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/pie.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespaces.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespace.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/creator.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selector.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selectorAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/matcher.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sparse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/enter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/data.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sort.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/window.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/classed.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/html.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/raise.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/lower.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/insert.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/clone.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/exit.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/join.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/order.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/call.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/nodes.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/node.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/size.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/empty.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/each.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/property.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/append.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/datum.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/local.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/sourceEvent.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/mouse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/touch.js","webpack://muze/./packages/muze-utils/node_modules/d3-dispatch/src/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/noevent.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/nodrag.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/event.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/drag.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timer.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timeout.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/schedule.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/tween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/interpolate.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selection.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attrTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/styleTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/delay.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/ease.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/end.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/interrupt.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/interrupt.js","webpack://muze/./packages/muze-utils/src/renderer-utils.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/event-list.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/lifecycle-manager.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/index.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/helper.js","webpack://muze/./packages/muze-utils/src/index.js","webpack://muze/./packages/muze-firebolt/src/enums/actions.js","webpack://muze/./packages/muze-firebolt/src/enums/selection.js","webpack://muze/./packages/muze-firebolt/src/selection-set/index.js","webpack://muze/./packages/muze-firebolt/src/selection-set/selection-set.js","webpack://muze/./packages/muze-firebolt/src/helper/index.js","webpack://muze/./packages/muze-firebolt/src/firebolt.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/generic.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/volatile.js","webpack://muze/./packages/muze-firebolt/src/enums/behaviours.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/highlight.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/brush.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/filter.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/persistent.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/select.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-action-config.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-event.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/hover.js","webpack://muze/./packages/muze-firebolt/src/enums/constants.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/click.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/drag.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/longtouch.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/touch-drag.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/props.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/generic-sideeffect.js","webpack://muze/./packages/muze-firebolt/src/side-effects/surrogate.js","webpack://muze/./packages/muze-firebolt/src/side-effects/spawnable.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/helper.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/selection-box-drag.js","webpack://muze/./packages/muze-tooltip/src/constants.js","webpack://muze/./packages/muze-tooltip/src/default-config.js","webpack://muze/./packages/muze-tooltip/src/helper.js","webpack://muze/./packages/muze-tooltip/src/content.js","webpack://muze/./packages/muze-tooltip/src/tooltip.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/helper/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/crossline/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/strategy.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/filter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/anchors/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/persistent-anchors.js","webpack://muze/./packages/muze-firebolt/src/side-effects/brush-anchors.js","webpack://muze/./packages/muze-firebolt/src/behaviour-effect-map.js","webpack://muze/./packages/visual-layer/src/enums/constants.js","webpack://muze/./packages/visual-layer/src/layers/area/default-config.js","webpack://muze/./packages/visual-layer/src/simple-layer/simple-layer.js","webpack://muze/./packages/visual-layer/src/base-layer/props.js","webpack://muze/./packages/muze-axis/src/enums/axis-orientation.js","webpack://muze/./packages/muze-axis/src/enums/scale-type.js","webpack://muze/./packages/muze-axis/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/scale-creator.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/default-config.js","webpack://muze/./packages/muze-axis/src/axis-renderer.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/skip-ticks.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/space-setter.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/helper.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/props.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/simple-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/linear.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/log.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/pow.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/continous-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/band-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/time-axis.js","webpack://muze/./packages/muze-axis/src/color-axis/color-maps.js","webpack://muze/./packages/muze-axis/src/color-axis/defaults.js","webpack://muze/./packages/muze-axis/src/color-axis/props.js","webpack://muze/./packages/muze-axis/src/helper.js","webpack://muze/./packages/muze-axis/src/color-axis/color-strategy.js","webpack://muze/./packages/muze-axis/src/color-axis/color-axis.js","webpack://muze/./packages/muze-axis/src/size-axis/defaults.js","webpack://muze/./packages/muze-axis/src/size-axis/size-strategy.js","webpack://muze/./packages/muze-axis/src/size-axis/props.js","webpack://muze/./packages/muze-axis/src/size-axis/size-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/defaults.js","webpack://muze/./packages/muze-axis/src/shape-axis/props.js","webpack://muze/./packages/muze-axis/src/shape-axis/shape-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/helper.js","webpack://muze/./packages/muze-axis/src/polar-axis/props.js","webpack://muze/./packages/muze-axis/src/polar-axis/angle-axis.js","webpack://muze/./packages/visual-group/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/polar-axis/radius-axis.js","webpack://muze/./packages/muze-axis/src/data-type-scale-map.js","webpack://muze/./packages/transform/src/group-transform/index.js","webpack://muze/./packages/transform/src/identity-transform/index.js","webpack://muze/./packages/transform/src/transform-factory/index.js","webpack://muze/./packages/transform/src/enums/transform-type.js","webpack://muze/./packages/transform/src/stack-transform/index.js","webpack://muze/./packages/visual-layer/src/helpers/index.js","webpack://muze/./packages/visual-layer/src/base-layer/listener-map.js","webpack://muze/./packages/visual-layer/src/enums/props.js","webpack://muze/./packages/visual-layer/src/base-layer/default-options.js","webpack://muze/./packages/visual-layer/src/base-layer/base-layer.js","webpack://muze/./packages/visual-layer/src/layers/line/renderer.js","webpack://muze/./packages/visual-layer/src/layers/line/default-config.js","webpack://muze/./packages/visual-layer/src/layers/line/line.js","webpack://muze/./packages/visual-layer/src/layers/area/renderer.js","webpack://muze/./packages/visual-layer/src/layers/area/area.js","webpack://muze/./packages/visual-layer/src/layers/arc/default-config.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc-helper.js","webpack://muze/./packages/visual-layer/src/layers/text/renderer.js","webpack://muze/./packages/visual-layer/src/layers/text/default-config.js","webpack://muze/./packages/visual-layer/src/layers/text/text.js","webpack://muze/./packages/visual-layer/src/layers/point/renderer.js","webpack://muze/./packages/visual-layer/src/layers/point/default-config.js","webpack://muze/./packages/visual-layer/src/layers/point/point.js","webpack://muze/./packages/visual-layer/src/layers/bar/renderer.js","webpack://muze/./packages/visual-layer/src/layers/bar/default-config.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar-helper.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar.js","webpack://muze/./packages/visual-layer/src/layers/tick/default-config.js","webpack://muze/./packages/visual-layer/src/layers/tick/renderer.js","webpack://muze/./packages/visual-layer/src/layers/tick/tick.js","webpack://muze/./packages/visual-layer/src/enums/layer-types.js","webpack://muze/./packages/visual-layer/src/layer-factory/layer-factory.js","webpack://muze/./packages/visual-layer/src/layer-factory/index.js","webpack://muze/./packages/visual-layer/src/defaults.js","webpack://muze/./packages/visual-group/src/visual-group/local-options.js","webpack://muze/./packages/visual-group/src/simple-group/simple-group.js","webpack://muze/./packages/visual-group/src/variable/variable.js","webpack://muze/./packages/visual-group/src/variable/composed-vars.js","webpack://muze/./packages/visual-group/src/variable/simple-var.js","webpack://muze/./packages/visual-group/src/encoder/field-sanitizer.js","webpack://muze/./packages/visual-group/src/encoder/visual-encoder.js","webpack://muze/./packages/visual-group/src/enums/scale-maps.js","webpack://muze/./packages/visual-group/src/data-type-scale-map.js","webpack://muze/./packages/visual-group/src/encoder/encoder-helper.js","webpack://muze/./packages/visual-group/src/encoder/cartesian-encoder.js","webpack://muze/./packages/visual-group/src/encoder/polar-encoder.js","webpack://muze/./packages/visual-group/src/encoder/retinal-encoder.js","webpack://muze/./packages/visual-group/src/group-helper/group-utils.js","webpack://muze/./packages/visual-unit/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/visual-unit/src/helper/index.js","webpack://muze/./packages/visual-unit/src/enums/constants.js","webpack://muze/./packages/visual-unit/src/helper/grid-lines.js","webpack://muze/./packages/visual-unit/src/default-config.js","webpack://muze/./packages/visual-unit/src/local-options.js","webpack://muze/./packages/visual-unit/src/enums/reactive-props.js","webpack://muze/./packages/visual-unit/src/listener-map.js","webpack://muze/./packages/visual-unit/src/props.js","webpack://muze/./packages/visual-unit/src/firebolt/helper.js","webpack://muze/./packages/visual-unit/src/firebolt/payload-generator.js","webpack://muze/./packages/visual-unit/src/firebolt/data-propagator.js","webpack://muze/./packages/visual-unit/src/firebolt/index.js","webpack://muze/./packages/visual-unit/src/visual-unit.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-model.js","webpack://muze/./packages/visual-group/src/group-helper/cell-creator.js","webpack://muze/./packages/visual-group/src/group-helper/resolver-props.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-resolver.js","webpack://muze/./packages/visual-group/src/visual-group/value-matrix.js","webpack://muze/./packages/visual-group/src/visual-group/helper.js","webpack://muze/./packages/visual-group/src/visual-group/change-listener.js","webpack://muze/./packages/visual-group/src/visual-group/props.js","webpack://muze/./packages/visual-group/src/visual-group/visual-group.js","webpack://muze/./packages/muze-legend/src/firebolt/behavioural/select.js","webpack://muze/./packages/muze-legend/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/muze-legend/src/firebolt/behaviour-effect-map.js","webpack://muze/./packages/muze-legend/src/enums/behaviours.js","webpack://muze/./packages/muze-legend/src/enums/side-effects.js","webpack://muze/./packages/muze-legend/src/enums/constants.js","webpack://muze/./packages/muze-legend/src/firebolt/helper.js","webpack://muze/./packages/muze-legend/src/firebolt/legend-firebolt.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/drag.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/hover.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/click.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/index.js","webpack://muze/./packages/muze-legend/src/enums/actions.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/selection-box-drag.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/selection-box/index.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/strategies.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/index.js","webpack://muze/./packages/muze-legend/src/legend/props.js","webpack://muze/./packages/muze-legend/src/legend/defaults.js","webpack://muze/./packages/muze-legend/src/legend/legend-helper.js","webpack://muze/./packages/muze-legend/src/legend/simple-legend.js","webpack://muze/./packages/muze-legend/src/legend/position-config.js","webpack://muze/./packages/muze-legend/src/legend/renderer.js","webpack://muze/./packages/muze-legend/src/legend/discrete-legend.js","webpack://muze/./packages/muze-legend/src/legend/gradient-helper.js","webpack://muze/./packages/muze-legend/src/legend/gradient-legend.js","webpack://muze/./packages/muze-legend/src/legend/step-legend.js","webpack://muze/./packages/muze/src/constants.js","webpack://muze/./packages/muze/src/operators.js","webpack://muze/./packages/muze/src/action-model.js","webpack://muze/./packages/muze/src/canvas/defaults.js","webpack://muze/./packages/muze/src/canvas/local-options.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/layoutComponent.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/dummy-component.js","webpack://muze/./packages/muze/src/defaults.js","webpack://muze/./packages/layout/src/tree-layout/constants/defaults.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/definitionModel.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/helper/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/tree/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/layout-model/index.js","webpack://muze/./packages/layout/src/tree-layout/utils/index.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-point.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-parser.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/helper.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/html-data.js","webpack://muze/./packages/layout/src/tree-layout/renderers/renderer.js","webpack://muze/./packages/layout/src/tree-layout/renderers/html-renderer.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/layout-def.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/index.js","webpack://muze/./packages/muze/src/canvas/helper.js","webpack://muze/./packages/muze/src/options.js","webpack://muze/./packages/layout/src/enums/constants.js","webpack://muze/./packages/layout/src/generic-layout/index.js","webpack://muze/./packages/layout/src/grid-layout/defaults.js","webpack://muze/./packages/layout/src/utils/index.js","webpack://muze/./packages/layout/src/visual-matrix/props.js","webpack://muze/./packages/layout/src/visual-matrix/default-config.js","webpack://muze/./packages/layout/src/visual-matrix/visual-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/row-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/column-matrix.js","webpack://muze/./packages/layout/src/grid-layout/computations.js","webpack://muze/./packages/layout/src/grid-layout/view-info-getter.js","webpack://muze/./packages/layout/src/grid-layout/layout.js","webpack://muze/./packages/layout/src/grid-layout/layout-helper.js","webpack://muze/./packages/layout/src/grid-layout/border-helper.js","webpack://muze/./packages/layout/src/grid-layout/span-maker.js","webpack://muze/./packages/muze/src/transaction-support.js","webpack://muze/./packages/muze/src/canvas/component-resolver.js","webpack://muze/./packages/visual-cell/src/enums/constants.js","webpack://muze/./packages/visual-cell/src/enums/cell-type.js","webpack://muze/./packages/visual-cell/src/simple-cell.js","webpack://muze/./packages/visual-cell/src/enums/defaults.js","webpack://muze/./packages/visual-cell/src/props.js","webpack://muze/./packages/visual-cell/src/axis-cell.js","webpack://muze/./packages/visual-cell/src/blank-cell.js","webpack://muze/./packages/visual-cell/src/text-cell.js","webpack://muze/./packages/visual-cell/src/geom-cell.js","webpack://muze/./packages/visual-cell/src/defaults.js","webpack://muze/./packages/visual-cell/src/constants.js","webpack://muze/./packages/visual-cell/src/cell-registry.js","webpack://muze/./packages/muze/src/canvas/title-maker.js","webpack://muze/./packages/muze/src/canvas/legend-maker.js","webpack://muze/./packages/muze/src/canvas/components/muze-chart-component.js","webpack://muze/./packages/muze/src/canvas/components/headerComponent.js","webpack://muze/./packages/muze/src/canvas/components/legendComponent.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/helper.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/props.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-component.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/horizontal-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/vertical-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/matrix-component.js","webpack://muze/./packages/muze/src/canvas/components/grid-component.js","webpack://muze/./packages/muze/src/enums/constants.js","webpack://muze/./packages/muze/src/canvas/component-wrapper-maker.js","webpack://muze/./packages/muze/src/canvas/scroll-manager.js","webpack://muze/./packages/muze/src/canvas/layout-maker.js","webpack://muze/./packages/muze/src/canvas/firebolt/group-firebolt.js","webpack://muze/./packages/muze/src/canvas/firebolt/index.js","webpack://muze/./packages/muze/src/canvas/app-state.js","webpack://muze/./packages/muze/src/canvas/canvas.js","webpack://muze/./packages/muze/src/default-registry.js","webpack://muze/./packages/visual-layer/src/layer-registry.js","webpack://muze/./packages/muze/src/muze.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","e","_typeof","a","default","description","homepage","version","license","main","author","keywords","repository","type","url","contributors","email","dependencies","d3-dsv","devDependencies","babel-cli","babel-core","babel-eslint","babel-loader","babel-plugin-transform-runtime","babel-preset-env","babel-preset-es2015","babel-preset-flow","chai","cross-env","eslint","eslint-config-airbnb","eslint-plugin-import","eslint-plugin-jsx-a11y","eslint-plugin-react","istanbul-instrumenter-loader","jsdoc","json2yaml","karma","karma-chai","karma-chrome-launcher","karma-coverage-istanbul-reporter","karma-mocha","karma-spec-reporter","karma-webpack","marked","mocha","mocha-webpack","transform-runtime","webpack","webpack-cli","webpack-dev-server","scripts","test","ut","utd","build","start","lint","lint-errors","docs","DataModel","require","DataFormat","FLAT_JSON","DSV_STR","DSV_ARR","AUTO","DimensionSubtype","CATEGORICAL","TEMPORAL","GEO","BINNED","MeasureSubtype","CONTINUOUS","FieldType","MEASURE","DIMENSION","FilteringMode","NORMAL","INVERSE","ALL","GROUP_BY_FUNCTIONS","SUM","AVG","MIN","MAX","FIRST","LAST","COUNT","STD","convertToNativeDate","date","Date","pad","DateTimeFormatter","format","this","dtParams","nativeDate","RegExp","escape","text","replace","TOKEN_PREFIX","DATETIME_PARAM_SEQUENCE","YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","defaultNumberParser","defVal","val","parsedVal","isFinite","parseInt","defaultRangeParser","range","nVal","toLowerCase","length","getTokenDefinitions","daysDef","short","long","monthsDef","H","index","extract","parser","formatter","getHours","toString","hours","P","M","getMinutes","S","getSeconds","K","getMilliseconds","join","day","getDay","A","getDate","b","month","getMonth","B","y","result","substring","presentDate","presentYear","Math","trunc","getFullYear","year","Y","getTokenFormalNames","definitions","HOUR_12","AMPM_UPPERCASE","AMPM_LOWERCASE","SHORT_DAY","LONG_DAY","DAY_OF_MONTH","DAY_OF_MONTH_CONSTANT_WIDTH","SHORT_MONTH","LONG_MONTH","MONTH_OF_YEAR","SHORT_YEAR","LONG_YEAR","tokenResolver","defaultResolver","arg","targetParam","arguments","hourFormat24","hourFormat12","ampmLower","ampmUpper","amOrpm","isPM","findTokens","tokenPrefix","tokenLiterals","keys","occurrence","forwardChar","indexOf","push","token","formatAs","nDate","formattedStr","String","formattedVal","parse","dateTimeStamp","options","extractTokenValue","dtParamSeq","noBreak","dtParamArr","args","resolverKey","resolverParams","resolverFn","param","resolvedVal","splice","apply","checkIfOnlyYear","unshift","tokenObj","lastOccurrenceIndex","occObj","occIndex","targetText","regexFormat","tokenArr","map","obj","occurrenceLength","extractValues","match","shift","getNativeDate","Number","len","v","store","fields","Array","forEach","fieldIndex","from","OBJECTSTRING","objectToStrFn","objectToStr","arrayToStr","checkCyclicRef","parentArr","bIndex","extend2","obj1","obj2","skipUndef","merge","tgtArr","srcArr","item","srcVal","tgtVal","str","cRef","isArray","getUniqueId","getTime","round","random","isArrEqual","arr1","arr2","formatNumber","detectDataFormat","data","fieldStore","createNamespace","fieldArr","dataId","fieldsObj","_cachedFieldsObj","field","getMeasure","measureFields","_cachedMeasure","schema","getDimension","dimensionFields","_cachedDimension","Value","_classCallCheck","configurable","writable","_value","rowDiffsetIterator","rowDiffset","callback","split","diffStr","diffStsArr","end","InvalidAwareTypes","invalid_aware_types_classCallCheck","config","assign","_invalidAwareValsMap","invalidAwareVals","NULL","NA","NIL","invalid","nil","null","undefined","DM_DERIVATIVES","SELECT","PROJECT","GROUPBY","COMPOSE","CAL_VAR","BIN","SORT","JOINS","CROSS","LEFTOUTER","RIGHTOUTER","NATURAL","FULLOUTER","getCommonSchema","fs1","fs2","retArr","fs1Arr","defaultFilterFn","crossProduct","dm1","dm2","filterFn","replaceCommonSchema","jointype","applicableFilterFn","dm1FieldStore","getFieldspace","dm2FieldStore","dm1FieldStoreName","dm2FieldStoreName","commonSchemaList","Error","tmpSchema","_rowDiffset","rowAdded","rowPosition","ii","tuple","userArg","partialField","dm1Fields","prepareJoinData","dm2Fields","detachedRoot","tupleObj","cellVal","iii","defSortFn","a1","b1","mergeSort","arr","sortFn","sort","lo","hi","mid","floor","mainArr","auxArr","getSortFn","dataType","sortType","retFunc","groupData","hashMap","Map","groupedData","datum","fieldVal","has","set","createSortingFnArg","groupedDatum","targetFields","targetFieldDetails","label","reduce","acc","next","idx","difference","hashTable","schemaNameArr","dm1FieldStoreFieldObj","dm2FieldStoreFieldObj","_colIdentifier","prepareDataHelper","dm","addData","hashData","schemaName","fieldName","getFilteredValues","filter","sum","filteredNumber","curr","avg","totalSum","isNaN","fnList","filteredValues","min","max","sqrt","mean","pow","num","defaultReducerName","ReducerStore","TypeError","defReducer","entries","_this","he","reducer","_this2","__unregister","delete","Function","reducerStore","ye","iterator","u","done","return","naturalJoinFilter","commonSchemaArr","retainTuple","union","leftOuterJoin","dataModel1","dataModel2","rightOuterJoin","Field","field_classCallCheck","subtype","displayName","Se","Dimension","_cachedDomain","calculateDataDomain","Categorical","hash","Set","domain","add","Temporal","temporal_classCallCheck","_cachedMinDiff","sortedData","arrLn","minDiff","POSITIVE_INFINITY","prevDatum","nextDatum","processedCount","_this3","Binned","binsArr","bins","Measure","unit","defAggFn","numberFormat","Continuous","NEGATIVE_INFINITY","FieldParser","Ue","CategoricalParser","isInvalid","getInvalidType","trim","TemporalParser","temporal_parser_classCallCheck","_dtf","BinnedParser","matched","parseFloat","ContinuousParser","PartialField","partial_field_classCallCheck","_sanitize","createFields","dataColumn","headers","headersObj","header","qe","dataFormat","DSVArr","firstRowHeader","columns","columnMajor","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","JSON","stringify","at","delimiter","reFormat","DELIMITER","charCodeAt","parseRows","f","rows","N","I","eof","eol","j","slice","row","formatRow","formatValue","convert","columnSet","column","concat","formatRows","csv","dsv","tsv","DSVStr","fieldSeparator","d3Dsv","FlatJSON","insertionIndex","Auto","converters","resp","persistDerivation","model","operation","_model$_derivation","criteriaFn","_derivation","op","meta","criteria","persistAncestorDerivation","sourceDm","newDm","_newDm$_ancestorDeriv","_ancestorDerivation","cloneWithAllFields","clonedDm","clone","partialFieldspace","getPartialFieldspace","__calculateFieldspace","calculateFieldsConfig","filterPropagationModel","propModels","filterByMeasure","fns","dataObj","dataModel","propModel","getData","fieldsConfig","getFieldsConfig","fieldsSpace","values","def","some","every","propField","valueOf","select","fn","saveChild","cloneWithSelect","selectFn","selectConfig","cloneConfig","cloned","selectHelper","newRowDiffSet","lastInsertedValue","li","cachedStore","cloneProvider","selectorHelperFn","_iteratorNormalCompletion","checker","cloneWithProject","projField","allFields","projectionSet","actualProjField","sanitizeUnitSchema","unitSchema","updateData","relation","defaultConfig","converterFn","converter","lt","formattedData","dataHeader","fieldNameAs","as","nameSpace","_partialFieldspace","_","_dataFormat","fieldInSchema","applyExistingOperationOnModel","derivations","getDerivations","selectionModel","rejectionModel","derivation","_selectionModel","params","groupByString","_rejectionModel","propagateIdentifiers","propModelInf","nonTraversingModel","excludeModels","handlePropagation","_children","child","propagateToAllDataModels","identifiers","rootModels","propagationInf","propagationNameSpace","propagateToSource","propagationSourceId","sourceId","propagateInterpolatedValues","criterias","persistent","actionCriterias","mutableActions","filteredCriteria","entry","action","sourceActionCriterias","actionInf","actionConf","applyOnSource","models","path","getPathToRootModel","_parent","_ref3","rootModel","propConfig","sourceIdentifiers","rootGroupByModel","groupByModel","inf","propagationModel","filteredModel","reverse","Relation","relation_classCallCheck","source","_fieldStoreName","_propagationNameSpace","immutableActions","Ft","_fieldspace","updateFields","fieldStoreName","colIdentifier","collID","partialFieldMap","newFields","coll","joinWith","unionWith","differenceWith","defConfig","oDm","constructor","setParent","fieldConfig","normalizedProjField","search","_fieldConfig","fieldObj","removeChild","findIndex","sibling","parent","ReferenceError","__proto__","getPrototypeOf","_onPropagation","setPrototypeOf","order","withUid","getAllFields","dataGenerated","dataBuilder","sortingDetails","retObj","uids","addUid","columnWise","reqSorting","tmpDataArr","colName","insertInd","sortMeta","fDetails","sortingFn","pop","tmpData","fieldNames","fmtFieldIdx","elem","fIdx","fmtFn","datumIdx","fieldsArr","reducers","newDataModel","groupBy","existingDataModel","sFieldArr","dimensions","reducerObj","measures","defaultReducer","measureName","reducerFn","resolve","fieldStoreObj","dbName","dimensionArr","measureArr","rowCount","rawData","dataInCSVArr","sortedDm","colData","rowsCount","serializedData","rowIdx","colIdx","fieldinst","dependency","replaceVar","depVars","retrieveFn","depFieldIndices","fieldSpec","fs","suppliedFields","computedValues","fieldsData","h","Dt","addField","addToNameSpace","isMutableAction","payload","find","sourceNamespace","filterImmutableAction","criteriaModel","eventName","measureFieldName","binFieldName","_createBinnedFieldDat","measureField","buckets","binsCount","binSize","dMin","dMax","ceil","abs","generateBuckets","bucketRanges","binnedData","findBucketRange","leftIdx","rightIdx","midIdx","binField","serialize","getSchema","first","last","count","sd","std","Operators","compose","operations","currentDM","firstChild","dispose","bin","project","calculateVariable","naturalJoin","fullOuterJoin","Stats","enums","makeEntry","sCon","_set","set1","set2","filteredKeys","s1","s2","ForeignSet","isSimpleObject","win","reqAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","getTimeBasedId","__lastTime","__id","flat","res","scheduler","onFinishCallback","queue","animationFrame","listeners","tempQ","unique","fetch","node","namedNode","qualifiedName","seed","fetchAggregator","getUpstreamNodes","list","rec","qname","placedIndex","preArr","postArr","outgoingEdges","resolver","accumulate","nodeDetails","identity","CustomResolver","utils_classCallCheck","dep","_dep","graph_node_classCallCheck","edges","_seed","requireResolve","retriever","history","electricEdges","_edges","retrieveDetails","edge","head","hist","electric_node_classCallCheck","nextFrame","currentFrame","lstnrs","nodes","nFn","qualifiedNodeMap","graph_node","_wholeSet","_propagate","propagationOverride","currentFrameListeners","nextFrameListeners","_schedule","flushTarget","flush","mount","resolveReqList","objn","perv","addDependencies","_node","getDependencies","getResolvedList","prop","props","fnSpec","eNode","_ref","electric_node","addEdges","addElectricNode","changedSet","upstreamNodes","upstreamNode","append","__execUniqueElectricEdges","cfLstnrs","nfLstnrs","toArray","repeatHead","resetPropagationOverride","qnames","_this4","update","resolved","resolveDependencyOrder","resolveMap","neighbour","isRoot","model_classCallCheck","_graph","graph","_lockFlag","_reqQ","mountPoint","_addPropInModel","calculationConfig","customResolver","varName","fetchFn","_customResolver","createNodesFrom","instantCall","_graph$stopPropagatio","propsArr","unsub","createElectricNodeOf","stopPropagation","setPropagationOverride","resetNodeValue","_graph$stopPropagatio2","setProp","getNodeValue","getNodeFromQualifiedName","Model","__webpack_exports__","webpackPolyfill","deprecate","paths","children","_interopRequireDefault","_lib2","_containerManager2","slLib","init","doc","document","htmlSplCharSpace"," ","documentSupport","getDocumentSupport","SVG_BBOX_CORRECTION","isWebKit","SmartLabelManager","id","container","useEllipses","wrapper","prevInstance","isBrowserLess","maxCacheLimit","maxDefaultCacheLimit","getElementById","createContainer","innerHTML","testStrAvg","isHeadLess","isIE","offsetHeight","offsetWidth","parentContainerStyle","style","parentContainer","_containerManager","_showNoEllipses","_init","setStyle","textToLines","smartlabel","lines","_calCharDimWithCache","calculateDifference","size","csArr","tw","twi","cachedStyle","asymmetricDifference","maxAdvancedCacheLimit","_container","cache","_advancedCache","advancedCacheKey","_advancedCacheKey","cacheName","fontSize","fontFamily","fontWeight","fontStyle","cacheInitName","repeat","width","height","_getWidthFn","contObj","_containerObj","svgText","bbox","textContent","getBBox","_styleNotSet","setLineHeight","sCont","_context","context","_cache","charCache","_lineHeight","lineHeight","useEllipsesOnOverflow","getSmartText","maxWidth","maxHeight","noWrap","trimStr","tempArr","tmpText","maxWidthWithEll","toolText","oriWidth","oriHeight","newCharIndex","nearestChar","tempChar","getWidth","initialLeft","initialTop","getOriSizeImproveObj","spanArr","x","minWidth","chr","elemRightMostPoint","elemLowestPoint","lastBR","removeFromIndex","removeFromIndexForEllipses","hasHTMLTag","maxStrWidth","lastDash","lastSpace","lastIndexBroken","strWidth","strHeight","oriTextArr","ellipsesStr","ellipsesWidth","dotWidth","characterArr","dashIndex","spaceIndex","lastLineBreak","fastTrim","ws","charAt","smartLabel","oriTextWidth","oriTextHeight","oriText","isTruncated","xmlTagRegEx","ltgtRegex","getOriSize","substr","getNearestBreakIndex","detailObj","tooltext","lastIndexOf","spanAdditionRegx","spanAdditionReplacer","classNameWithTag","classNameWithTagBR","childRetriverFn","childRetriverString","noClassTesting","classNameReg","className","spaceIdx","dashIdx","offsetLeft","offsetTop","parentNode","insertBefore","createElement","classNameBrReg","spanRemovalRegx","error","detailedCalculationFlag","textArr","letter","lSize","cumulativeSize","indiSizeStore","lib","userAgent","navigator","clsNameSpace","containerClass","brReplaceRegex","position","top","whiteSpace","padding","overflow","supportedStyle","font","font-family","font-weight","font-size","line-height","font-style","getElementsByClassName","opera","hasSVG","Boolean","SVGAngle","implementation","hasFeature","containerParent","body","appendChild","setAttribute","getElementsByTagName","sl","charLen","increment","avgWidth","styleObj","fSize","Muze","ContainerManager","maxContainers","svg","containers","rootNode","createElementNS","setAttributeNS","svgRoot","diff","containerObj","keyStr","prev","removeContainer","addContainer","avgCharWidth","display","cObj","ascending","NaN","bisector","compare","ascendingComparator","left","right","ascendingBisect","bisectRight","number","array","src_range","stop","step","e10","e5","e2","src_ticks","ticks","tickIncrement","power","log","LN10","tickStep","step0","step1","quantile","valueof","i0","value0","each","remove","clear","empty","src_nest","sortValues","rollup","nest","sortKeys","depth","createResult","setResult","keyValue","valuesByKey","createObject","setObject","createMap","setMap","sortKey","k","proto","implicit","ordinal","unknown","scale","copy","band","bandwidth","ordinalRange","paddingInner","paddingOuter","align","rescale","sequence","rangeRound","invertExtent","r0","r1","hiIndex","getClosestIndexOf","invert","side","highVal","d1","low","high","extend","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color","exec","Rgb","rgbn","rgba","hsla","g","rgbConvert","rgb","opacity","hex","Hsl","hsl","hslConvert","hsl2rgb","m1","m2","displayable","brighter","darker","deg2rad","PI","rad2deg","Xn","Yn","Zn","t0","t1","t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl","C","D","E","ED","EB","BC_DA","cubehelix","cubehelixConvert","Cubehelix","bl","basis","v0","v1","v2","v3","cosh","sinh","src_constant","linear","hue","constant","gamma","nogamma","exponential","src_rgb","rgbGamma","colorRgb","rgbSpline","spline","colors","rgbBasis","src_number","reA","reB","src_string","am","bm","bs","bi","lastIndex","q","one","zero","cssNode","cssRoot","cssView","svgNode","src_value","value_typeof","string","setTime","nb","na","src_round","degrees","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","pxComma","pxParen","degParen","translate","xa","ya","xb","yb","interpolateTransformCss","parseCss","documentElement","defaultView","transform","getComputedStyle","getPropertyValue","interpolateTransformSvg","parseSvg","baseVal","consolidate","matrix","SQRT2","colorHsl","hslLong","colorHcl","cubehelixGamma","colorCubehelix","cubehelixLong","piecewise","interpolate","d3_scale_src_constant","d3_scale_src_number","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","polymap","bisect","target","clamp","continuous","output","input","interpolateValue","deinterpolateClamp","reinterpolateClamp","interpolateRound","formatDecimal","toExponential","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","fill","sign","symbol","comma","precision","prefixExponent","locale","formatPrefix","formatTrim","out","i1","formatRounded","exponent","formatTypes","%","toFixed","toPrecision","X","toUpperCase","src_identity","prefixes","src_locale","group","grouping","thousands","formatGroup","currency","decimal","numerals","formatNumerals","percent","newFormat","prefix","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","Infinity","defaultLocale","formatLocale","src_tickFormat","precisionPrefix","precisionRound","precisionFixed","linearish","tickFormat","nice","interval","x0","x1","pow10","powp","base","exp","logp","log10","log2","reflect","logs","pows","raise","thresholds","threshold","quantiles","quantize","newInterval","floori","offseti","offset","previous","millisecond","durationMinute","durationWeek","second","getUTCSeconds","minute","hour","setHours","setDate","getTimezoneOffset","weekday","sunday","monday","tuesday","wednesday","thursday","friday","saturday","setMonth","setFullYear","utcMinute","setUTCSeconds","getUTCMinutes","utcHour","setUTCMinutes","getUTCHours","utcDay","setUTCHours","setUTCDate","getUTCDate","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcYear","setUTCFullYear","localDate","L","utcDate","UTC","newYear","timeFormat","utcFormat","utcParse","pads","-","0","numberRe","percentRe","requoteRe","requote","formatRe","names","formatLookup","parseWeekdayNumberSunday","w","parseWeekdayNumberMonday","parseWeekNumberSunday","U","parseWeekNumberISO","V","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","timeDay","timeYear","formatMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","timeSunday","formatWeekNumberISO","timeThursday","formatWeekdayNumberSunday","formatWeekNumberMonday","timeMonday","formatYear","formatFullYear","formatZone","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","getUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatShortWeekday","formatWeekday","formatShortMonth","formatMonth","formatPeriod","utcFormats","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCPeriod","parses","parseShortWeekday","parseWeekday","parseShortMonth","parseMonth","parseLocaleDateTime","parseSpecifier","parsePeriod","parseLocaleDate","parseLocaleTime","newParse","newDate","week","toISOString","durationSecond","durationHour","durationDay","durationMonth","durationYear","calendar","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickIntervals","tickInterval","src_time","timeMonth","timeWeek","timeHour","timeMinute","timeSecond","timeMillisecond","src_colors","interpolateCubehelixLong","ramp","sequential","interpolator","d3_scale_chromatic_src_colors","src_ramp","scheme","interpolateRgbBasis","warm","cool","sequential_multi_rainbow","ts","magma","inferno","plasma","UNIT_GLOBAL_NAMESPACE","UNIT_LOCAL_NAMESPACE","LAYER_LOCAL_NAMESPACE","LAYER_GLOBAL_NAMESPACE","GROUP_GLOBAL_NAMESPACE","GROUP_LOCAL_NAMESPACE","CANVAS_LOCAL_NAMESPACE","CANVAS_GLOBAL_NAMESPACE","ReservedFields","ROW_ID","CommonProps","ACTION_INF","ON_LAYER_DRAW","MATRIX_CREATED","COORD_TYPES","DATA_TYPE","d3_axis_src_identity","bottom","epsilon","entering","__axis","axis","orient","tickArguments","tickValues","tickTransform","tickSizeInner","tickSizeOuter","tickPadding","spacing","range0","range1","center","selection","selectAll","tick","tickExit","exit","tickEnter","enter","attr","line","insert","transition","getAttribute","tickSize","pi","tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","ccw","dx","dy","cw","da","rect","d3_shape_src_constant","halfPi","asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","x00","y00","d2","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","areaStart","_line","areaEnd","lineStart","_point","lineEnd","point","curve_linear","src_line","pointX","pointY","defined","curve","curveLinear","buffer","defined0","src_area","area","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","src_descending","d3_shape_src_identity","curveRadial","Radial","_curve","radial","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","kr","kx","ky","star","square","sqrt3","triangle","wye","noop","that","Basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","BasisOpen","Bundle","beta","_basis","_beta","_x","_y","custom","bundle","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","CardinalOpen","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","CatmullRomOpen","LinearClosed","slope3","h0","h1","s0","slope2","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","_t0","px","py","Step","_t","curve_step","stepBefore","stepAfter","none","series","order_none","stackValue","order_ascending","sums","cubicInOut","polyIn","polyOut","polyInOut","b2","b3","b4","b5","b6","b7","b8","b9","b0","bounceOut","backIn","overshoot","backOut","backInOut","elasticOut","elasticIn","amplitude","period","d3_voronoi_src_constant","elasticInOut","RedBlackTree","RedBlackNode","R","RedBlackRotateLeft","tree","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","createEdge","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","ax","ay","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","attachCircle","lArc","rArc","lSite","cSite","rSite","bx","by","epsilon2","ha","hc","circle","Circle","before","circles","detachCircle","beachPool","createBeach","beach","Beach","detachBeach","beaches","removeBeach","disappearing","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","sortCellHalfedges","clipEdges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","cover","dc","v00","v01","v11","v10","polygons","polygon","triangles","e1","links","radius","_found","vx","vy","src_voronoi","voronoi","Selection","idGetter","_dataObjects","_updatedata","_mode","_enterdata","_exitdata","_idGetter","newData","entryData","exitdata","tempMap","duplicateData","updatedData","newSelection","currentData","dataObjects","mergedObjects","mergedData","newdata","sortSel","sortSelection","kA","kB","_toConsumableArray","objects","STRING","FUNCTION","HTMLElement","common_utils_typeof","sanitizeIP","typeObj","nonExistentKeys","checkExistence","getMax","common_utils_toConsumableArray","getMin","getDomainFromData","fieldType","domArr","_loop","_fields","_slicedToArray","field0","field1","arr0","firstMin","secondMin","firstMax","secondMax","sanitizeDomainWhenEqual","unionDomain","domains","_ref2","dom","symbolFns","symbolCircle","cross","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolWye","symbolTriangle","easeFns","cubic","easeCubic","bounce","easeBounce","elastic","easeElastic","back","easeBack","poly","easePoly","circleInOut","getNearestValue","filterData","getWindow","getQualifiedClassName","cancelAnimationFrame","cls","defaultValue","objectIterator","Voronoi","common_utils_classCallCheck","_voronoi","_voronoiFn","addListenerToNamespace","namespaceInf","namespace","_listeners","getObjProp","_len","_key","Store","propName","propNames","callBack","on","calculatedProp","intSanitizer","transactor","holder","conf","stateProps","addAsMethod","nameSpaceProp","nsProp","compareTo","_len2","_key2","paramsLen","prevVal","spreadParams","sanitization","typeCheck","typeExpected","preset","oldValues","generateGetterSetters","propInfo","typeChecker","isEqual","oldVal","newVal","arraysEqual","is","ERROR_MSG","INTERFACE_IMPL","mergeRecursive","sink","createSelection","sel","appendObj","idFn","dataSelect","mergedSelection","exitSelection","getObjects","inst","numberInterpolator","interpolateNumber","piecewiseInterpolator","rgbToHsv","detectColor","col","getDataModelFromRange","selFields","selFn","getDataModelFromIdentifiers","filteredDataModel","dataArr","filteredSchema","include","registerListeners","listenerMap","_len3","_key3","propListenerMap","local","mapObj","propType","listenerFn","listener","isValidValue","getSymbol","stackOrders","_defineProperty","_stackOrders","stackOrderNone","stackOrderAscending","stackOffsets","_stackOffsets","yp","yn","stackOffsetNone","si","sij0","s3","sk","stack","orderNone","offsetNone","oz","kz","sz","sij","ki","d3Stack","pathInterpolators","curveStepAfter","curveStepBefore","curveStep","curveCatmullRom","Symbols","axisLeft","axisRight","axisTop","axisBottom","pie","descending","arcs","pa","cornerRadius","padRadius","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","p0","p1","oc","intersect","x3","y3","x32","y32","kc","lc","centroid","Scales","scaleBand","getSmallestDiff","points","timeFormats","timeDurations","formatTemporal","nearestInterval","getNearestInterval","getValueParser","retrieveNearestGroupByReducers","_len4","measureFieldNames","_key4","filteredReducers","getAncestorDerivations","nearestReducers","derv","retrieveFieldDisplayName","sortFieldByType","subType","sortOrder","firstVal","secondVal","sortOrderType","getAppropriateSortingFn","localeCompare","xhtml","src_namespaces","xlink","xml","xmlns","src_namespace","namespaces","space","creator","fullname","creatorFixed","ownerDocument","creatorInherit","uri","namespaceURI","src_selector","selector","querySelector","selectorAll","querySelectorAll","matcher","matches","sparse","EnterNode","_next","__data__","keyPrefix","bindIndex","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","src_window","styleValue","classArray","classList","ClassList","_names","classedAdd","classedRemove","contains","textRemove","htmlRemove","nextSibling","lower","previousSibling","constantNull","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","event","mouseenter","mouseleave","filterContextListener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","typename","__on","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","sourceEvent","dispatchEvent","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","groups","parents","_groups","_parents","subgroups","subnode","subgroup","enterGroup","updateGroup","_enter","_exit","onenter","onupdate","onexit","groups0","groups1","m0","merges","group0","group1","compareNode","sortgroups","sortgroup","getAttributeNS","attrRemoveNS","removeAttributeNS","attrRemove","removeAttribute","attrFunctionNS","attrFunction","attrConstantNS","attrConstant","priority","styleRemove","removeProperty","styleFunction","setProperty","styleConstant","propertyRemove","propertyFunction","propertyConstant","classed","classedFunction","classedTrue","classedFalse","textFunction","textConstant","html","htmlFunction","htmlConstant","deep","typenames","parseTypenames","dispatch","dispatchFunction","dispatchConstant","src_select","nextId","Local","current","src_point","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","mouse","changedTouches","src_touch","touches","identifier","touch","Dispatch","T","types","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","__noselect","MozUserSelect","d3_drag_src_constant","DragEvent","subject","active","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","src_drag","mousedownx","mousedowny","mousemoving","touchending","touchable","gestures","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","yesdrag","noclick","clearTimeout","sublisteners","clickDistance","taskHead","taskTail","frame","timeout","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","timer_typeof","now","setFrame","clearNow","Timer","_call","_time","timer","delay","restart","wake","timerFlush","nap","sleep","poke","clearInterval","setInterval","src_timeout","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","duration","ease","schedule","tweenValue","_id","transition_interpolate","interpolateRgb","interpolateString","Transition","_name","newId","selection_prototype","inherit","id0","id1","onFunction","on0","on1","sit","attrTween","string00","string10","interpolate0","string0","string1","value1","attrTweenNS","attrInterpolateNS","attrInterpolate","styleTween","styleNull","styleMaybeRemove","listener0","styleInterpolate","removeFunction","tweenRemove","tween0","tween1","tweenFunction","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","Promise","reject","cancel","interrupt","defaultTiming","easeCubicInOut","selectElement","element","makeElement","elemType","callbacks","keyFn","SVGElement","selectorVal","selectorType","actualSelector","enterSel","mergeSel","exitSel","applyStyle","setElementAttrs","attrs","setAttrs","setStyles","styles","createElements","getClientPoint","pos","clientPoint","getEvent","d3event","getD3Drag","d3drag","getSmartComputedStyle","css","textEl","mandatoryStyle","fill-opacity","renderer_utils_typeof","computedStyle","styleForSmartLabel","hasTouch","events","EVENT_LIST","composition","resolveFn","notification","hasOwn","LifeCycleManager","lifecycle_manager_classCallCheck","_eventList","_promises","_notifiers","_lifeCycles","_unreleasedLifeCycles","_boot","_preparePromises","promise","_makeNotifierPromise","createPromise","then","prm","formalName","client","_releasePromisesFromCache","_notify","stage","_resolvePromise","retrieve","_callLifeCycleCallback","_cachePromise","_resetTargetPromise","lifeCycles","DRAG","HOVER","SELECTIONDRAG","CLICK","LONGTOUCH","TOUCHDRAG","ALL_ACTIONS","SELECTION_NEW_ENTRY","SELECTION_NEW_EXIT","SELECTION_NULL","SELECTION_OLD_ENTRY","SELECTION_OLD_EXIT","SelectionSet","completeSet","_volatile","selection_set_classCallCheck","_completeSetCount","_lockedSelection","_resetted","ids","entrySet","exitSet","lockedSel","addSet","removeSet","updateSet","changeSideEffectAvailability","toEnable","sideEffects","change","enable","disable","getMergedSet","helper_toConsumableArray","conditionsMap","newEntry","SELECTION","oldEntry","mergedEnter","newExit","oldExit","mergedExit","complete","getSetInfo","selectionSet","propagationData","resetted","getModelFromSet","condition","Firebolt","actions","behaviourEffectMap","firebolt_classCallCheck","_sideEffectDefinitions","_sideEffects","_propagationInf","_actions","behavioural","physical","_selectionSet","_volatileSelectionSet","_propagationFields","_sourceSideEffects","selectionBox","_propagationBehaviourMap","_sourceBehaviours","_actionBehaviourMap","_config","_behaviourEffectMap","_entryExitSet","_actionHistory","_queuedSideEffects","mapSideEffects","registerBehaviouralActions","registerSideEffects","registerPhysicalBehaviouralMap","physicalBehaviouralMap","registerPhysicalActions","behEffectMap","preventDefaultActions","effectNames","effects","firebolt_toConsumableArray","behaviours","initializeBehaviouralActions","dispatchableBehaviours","Action","prepareSelectionSets","initializeSideEffects","sideEffectStore","actionHistory","queuedSideEffects","sideEffect","combinedSet","unionSets","behaviour","entryExitSet","existingModel","aggFns","effect","firebolt_typeof","sideEffectInstance","isEnabled","mutates","dispatchSideEffect","propagationInfo","propagate","getSideEffects","propagationSelectionSet","getPropagationSelectionSet","shouldApplySideEffects","sourceSelectionSet","applicableSideEffects","getApplicableSideEffects","applySideEffects","physicalAction","actionBehaviourMap","behaviourMap","mapActionsAndBehaviour","unsubscribe","onDataModelPropagation","propValue","dispatchBehaviour","uniqueIds","behaviouralActions","volatileSelectionSet","sideEffectDefinitions","sideEffectsMap","SideEffect","sideEffectConf","initedActions","initializePhysicalActions","physicalActions","phyAction","initedPhysicalActions","getDefaultTargetContainer","bindActionWithBehaviour","targets","behaviourList","xFields","yFields","xMeasures","yMeasures","_propModel$getData","fieldMap","getFullData","propagationSource","applicableSelectionSets","GenericBehaviour","firebolt","generic_classCallCheck","_enabled","selectionSets","getSelectionSets","_this$firebolt$getAdd","getAddSetFromCriteria","getPropagationInf","setSelectionSet","getEntryExitSet","_selectionSet$getSets","getSets","setConfig","isSourceFieldPresent","getSourceFields","VolatileBehaviour","reset","existingAddSet","updateExit","getCompleteSet","BRUSH","HIGHLIGHT","TOOLTIP","FILTER","HighlightBehaviour","BrushBehaviour","BEHAVIOURNAMES","FilterBehaviour","PersistentBehaviour","updateEntry","mergedExitSet","completeSetCount","SelectBehaviour","getDragActionConfig","sourceInfo","axes","xAxis","yAxis","axisFields","xField","getMembers","yField","xFieldType","yFieldType","stPos","startPos","endPos","dragDim","isXDimension","isYDimension","xRange","yRange","selectedDomains","rangeObj","xdom","ydom","snap","getNearestRange","attachDragEvent","targetEl","drawingInf","touchStart","d3Drag","getDrawingContext","getSourceInfo","beh","dragEnd","hover","interaction","tooltip","svgContainer","nearestPoint","getNearestPoint","getAllPoints","showInPosition","generatePayloadFromEvent","click","physical_defineProperty","_physicalActions","ACTIONNAMES","longtouch","touchEnd","touchdrag","PROPS","valueParser","GenericSideEffect","generic_sideeffect_classCallCheck","_strategy","_strategies","SurrogateSideEffect","interactionType","layers","layer","interactive","applyInteractionStyle","SpawnableSideEffect","_drawingContext","changeVisibility","sideEffectGroup","visible","defClassName","classPrefix","SelectionBox","boxConf","box","drawingContext","unitWidth","unitHeight","selectionGroupClassName","hide","sourceInf","_getBoxDimensionsFrom","getBoxDimensionsFromPayload","direction","xDim","yDim","xLinear","yLinear","xCriteria","yCriteria","x1Val","x2Val","bandScale","x1DomainIndex","x2DomainIndex","_sort2","helper_slicedToArray","getScaleValue","getUnitWidth","y1Val","y2Val","y1DomainIndex","y2DomainIndex","_sort4","_xDim","_yDim","dimension","show","selectionBoxDrag","onDrag","boxClassName","INITIAL_STYLE","connectorClassName","margin","content","iconContainerSize","iconScale","iconShape","iconColor","rowMargin","separator","parentClassName","arrow","disabled","getArrowPos","dim","measurement","arrowPos","boxHeight","boxWidth","arrowWidth","plotBottom","boxBottom","plotRight","boxRight","placeArrow","tooltipArrow","_tooltipArrow","tooltipBackground","_tooltipBackground","arrowConf","_arrowOrientation","Content","content_classCallCheck","_model","_formatter","ctx","_mount","displayFormat","table","tbody","margin-right","el","shape","Tooltip","htmlContainer","tooltip_classCallCheck","connectorContainer","tooltipConf","contentClass","_tooltipContainer","_contentContainer","_contents","_tooltipConnectorContainer","qualifiedClassName","addClass","defConf","contentConfig","reorderContainers","contentConf","render","_target","repositionArrow","arrowDisabled","arrowOrient","outsidePlot","connector","_offset","orientation","_extent","arrowSize","topSpace","dimX","rightSpace","leftSpace","positionTop","positionRight","positionLeft","positionHorizontal","positionVertical","_position","_arrowPos","formatters","strategies_defineProperty","getDefaultTooltipFormatterFn","defaultFormatter","getRowContent","fieldInf","dataInf","formattedValue","measureIndex","dimensionMeasureMap","timeDiffs","defFormatter","fieldspace","dataLen","formatterFn","uniqueVals","strategies_toConsumableArray","colorAxis","shapeAxis","sizeAxis","isRetinalField","associatedMeasures","icon","getColor","getShape","getSize","formattedKey","measure","measureFormatter","margin-left","buildTooltipData","fieldValues","detailFields","containsDetailField","getTabularData","allMeasures","_construct","strategies","selectionSummary","aggregatedModel","fieldsConf","measureNames","highlightSummary","configResolvers","specificConf","_default","_getPrototypeOf2","side_effects_tooltip_classCallCheck","tooltip_possibleConstructorReturn","tooltip_getPrototypeOf","_tooltips","sanitizeConfig","strategyObj","sanitizedConf","setStrategy","totalHeight","totalWidth","isEmpty","tooltips","boundBox","dataModels","fragmented","showVertically","tooltipPos","boxes","tooltip_toConsumableArray","sourceFields","indices","plotDimensions","getPlotPointsFromIdentifiers","strategy","strategyConf","dataTransform","projectFields","plotDim","dt","layoutContainer","parentContainerDimensions","layoutBoundBox","unitBoundBox","tooltipInst","TooltipRenderer","timeDiffsByField","strategyFn","positionRelativeTo","tooltipBoundBox","getContents","spaceOutBoxes","spaceOutIfOverlap","firstBox","secondBox","opposite","projectedFields","Crossline","bandWidth","_this$config","bandClass","lineClass","elemData","axisIndex","fieldInst","xOffset","plotWidth","crossline_toConsumableArray","getPlotSpan","getPlotPadding","startPx","endPx","dataPoint","parentGroup","fade","fadeFn","focus","highlight","PlotHighlighter","plot_highlighter_classCallCheck","plot_highlighter_possibleConstructorReturn","plot_highlighter_getPrototypeOf","FilterEffect","entryModel","clearCaching","resetData","enableCaching","addLayer","layerDefs","layerRegistry","layerDef","mark","layerCls","shouldDrawAnchors","depLayerEncoding","encoding","defaultSizeValue","layerObj","instances","getTransitionConfig","calculateDomain","linkedLayer","AnchorEffect","anchors_classCallCheck","anchors_possibleConstructorReturn","anchors_getPrototypeOf","_layersMap","addAnchorLayers","metaInf","registry","layerDefsVal","registerImmediateListener","STATE_NAMESPACES","anchors_slicedToArray","_layers","elems","_linkedLayer$getTrans2","getLayerByName","getTransformedDataFromIdentifiers","transformedData","transformedDataModel","PersistentAnchors","BrushAnchors","behaviour_effect_map_defineProperty","BEHAVIOURS","SIZE","COLOR","SHAPE","TEXT","ENCODING","X0","Y0","RADIUS","RADIUS0","ANGLE","ANGLE0","nearestPointThreshold","strokeOpacity","connectNullData","SimpleLayer","coord","BOTTOM","TOP","LEFT","RIGHT","axisOrientationMap","axis_orientation_defineProperty","_axisOrientationMap","AxisOrientation","LINEAR","BAND","TIME","ORDINAL","QUANTIZE","QUANTILE","LOG","POW","IDENTITY","SEQUENTIAL","THRESHOLD","CONTINOUS","DISCRETE","HIDDEN","DEFAULT_ANGLE_DOMAIN","scaleLinear","scales","scaleThreshold","scaleLog","scalePow","scaleIdentity","scaleOrdinal","scaleSequential","scaleQuantize","scaleQuantile","scaleTime","scaleMap","scale_creator_defineProperty","_scaleMap","ScaleType","createScale","scaleFactory","adjustRange","axisName","axisNamePadding","fixedBaseline","labels","rotation","smartTicks","numberOfTicks","showAxisName","showInnerTicks","showOuterTicks","yOffset","rotateAxis","instance","tickText","labelManager","renderConfig","getTickSize","yShift","xShift","tickLabelDim","quadrant","rotationNormalizer","angleToRadian","angle","changeTickOrientation","selectContainer","axisInstance","_smartTicks","isSmartTicks","registerAnimationDoneHook","setFixedBaseline","setAxisNamePos","textNode","axisNameHeight","labelOffset","availableSpace","longestWord","quarter","halfYearly","mintues","seconds","getTickIntervalFnBasedOnNumberOfTicks","possibleTickLevelIndex","maxPossibleTicks","tickIntervalLevelInfo","tickIntervalInfo","numOfPossibleTicks","getActualTickInterval","noOfTicks","minWidthBetweenTicks","_minTickDistance","getTickIntervalBasedOnCurrentLevel","_dependencies","longestWordType","applyTickSkipping","minTickDistance","minTickSpace","_minTickSpace","minTickWidth","maxTicks","getSkippedTicks","actualNumberOfTicks","_minDiff","millisecondInterval","numOfTicksAccordingToMinDiff","adjustHorizontalRange","adjustVerticalRange","rangeAdjustmentMap","space_setter_defineProperty","_rangeAdjustmentMap","setAxisRange","rangeBounds","getAdjustedRange","getAxisOffset","timeDiff","avWidth","bars","spaceSetter","spaceConfig","heightForTicks","_context$availableSpa2","availWidth","availHeight","isOffset","_context$renderConfig2","_context$getAxisDimen","getAxisDimensions","tickDimensions","allTickDimensions","axisNameDimensions","tickDimHeight","tickDimWidth","namePadding","labelConfig","minTickHeight","getTickValues","tickShifter","maxTickSpaces","widthForTicks","totalTickWidth","getRotatedSpaces","rotatedHeight","rotatedWidth","setOffset","logicalSpace","getAxisComponentDimensions","axisTicks","largestTick","largestTickDimensions","smartTick","_context$renderConfig","labelFunc","_tickLabelStyle","originalLabel","getFormattedText","_axisNameStyle","getHorizontalAxisSpace","axisDimensions","_context$config2","axisDimHeight","minTickDiff","getMinTickDifference","cartesian_axis_helper_toConsumableArray","getVerticalAxisSpace","_context$config3","calculateBandSpace","largestDimHeight","_getHorizontalAxisSpa","_getVerticalAxisSpace","getValidDomain","userDom","setContinousAxisDomain","_domain","axisComponentDimensions","oldConfig","mockedOldConfig","shouldAxesScaleUpdate","hasAxesConfigChanged","properties","tickFormatter","sanitizeTickFormatter","_scale","_axis","createAxis","_tickFormatter","resetRenderConfig","_renderConfig","_maxTickSpaces","SimpleAxis","simple_axis_classCallCheck","_range","_domainLock","_axisDimensions","defCon","simpleConfig","bodyElem","dist","_animationDonePromises","domainValue","setAxisComponentDimensions","smartAxisName","axisClass","_objectSpread","setTickConfig","setSmartAxisName","_this$config2","dimType","widthDim","getSmartAxisName","oriSize","domainVal","computeAxisDimensions","_getAxisComponentDime","labelHeight","labelWidth","calculateContinousSpace","_context$renderConfig6","axisNameWidth","_getHorizontalAxisSpa2","_getVerticalAxisSpace2","renderAxis","axisNameStyle","tickLabelStyle","axisTickFormatter","labelProps","axisNameSpace","all","LinearInterpolator","LogInterpolator","PowInterpolator","interpolatorMap","continous_axis_defineProperty","_interpolatorMap","ContinousAxis","continous_axis_classCallCheck","continous_axis_possibleConstructorReturn","continous_axis_getPrototypeOf","InterpolatorCls","_interpolator","_this$renderConfig","sanitizeDomain","_get2","_get","_this$renderConfig2","newTickValues","tickSpace","getNumberOfTicks","labelDim","numberOfValues","tickLength","_this$smartTicks$","BandAxis","_this$maxTickSpaces","_getRotatedSpaces","paddingNormalized","formatTickValue","TimeAxis","time_axis_classCallCheck","time_axis_possibleConstructorReturn","time_axis_getPrototypeOf","time_axis_get","rawTicks","resetTickInterval","_context$config8","_context$availableSpa","adjustedRange","x11Colors","Pink","LightPink","HotPink","DeepPink","PaleVioletRed","MediumVioletRed","LightSalmon","Salmon","DarkSalmon","LightCoral","IndianRed","Crimson","FireBrick","DarkRed","Red","OrangeRed","Tomato","Coral","DarkOrange","Orange","Gold","Yellow","LightYellow","LemonChiffon","LightGoldenrodYellow","PapayaWhip","Moccasin","PeachPuff","PaleGoldenrod","Khaki","DarkKhaki","Cornsilk","BlanchedAlmond","Bisque","NavajoWhite","Wheat","BurlyWood","Tan","RosyBrown","SandyBrown","Goldenrod","DarkGoldenrod","Peru","Chocolate","SaddleBrown","Sienna","Brown","Maroon","DarkOliveGreen","Olive","OliveDrab","YellowGreen","LimeGreen","Lime","LawnGreen","Chartreuse","GreenYellow","SpringGreen","MediumSpringGreen","LightGreen","PaleGreen","DarkSeaGreen","MediumSeaGreen","SeaGreen","ForestGreen","Green","DarkGreen","MediumAquamarine","Aqua","Cyan","LightCyan","PaleTurquoise","Aquamarine","Turquoise","MediumTurquoise","DarkTurquoise","LightSeaGreen","CadetBlue","DarkCyan","Teal","LightSteelBlue","PowderBlue","LightBlue","SkyBlue","LightSkyBlue","DeepSkyBlue","DodgerBlue","CornflowerBlue","SteelBlue","RoyalBlue","Blue","MediumBlue","DarkBlue","Navy","MidnightBlue","Lavender","Thistle","Plum","Violet","Orchid","Fuchsia","Magenta","MediumOrchid","MediumPurple","BlueViolet","DarkViolet","DarkOrchid","DarkMagenta","Purple","Indigo","DarkSlateBlue","SlateBlue","MediumSlateBlue","White","Snow","Honeydew","MintCream","Azure","AliceBlue","GhostWhite","WhiteSmoke","Seashell","Beige","OldLace","FloralWhite","Ivory","AntiqueWhite","Linen","LavenderBlush","MistyRose","Gainsboro","LightGray","Silver","DarkGrey","Grey","DimGrey","LightSlateGrey","SlateGrey","DarkSlateGrey","Black","palette","DEFAULT_GRADIENT_COLOR","DEFAULT_CONFIG","stops","getHslString","hslArr","convertToXllString","baseString","getActualHslColor","paletteColor","hexToHsv","props_toConsumableArray","newConfig","uniqueValues","treatNullMeasures","scaledVal","minDomainScaledVal","resolveAxisConfig","propVal","defaultVal","getStops","newStops","color_strategy_toConsumableArray","rangeStops","newStopsLength","newRange","hslInterpolator","interpolateHslLong","indexedDomain","scaleDomain","indexedDomainMeasure","normalDomain","steppedDomain","_getStops","continousSteppedDomain","_getStops2","uniqueRange","indexedRange","numVal","normalRange","strategyGetter","domainType","rangeType","schemeType","color_strategy_defineProperty","domainRange","ColorAxis","color_axis_classCallCheck","_domainType","_rangeType","_schemeType","getSchemeType","_colorStrategy","setColorStrategy","updateDomain","colorStrategy","getScheme","colorSchemes","hslColorArray","getRawColor","color_axis_toConsumableArray","scaleInfo","domainRangeFn","transformationArr","newH","newS","newL","newA","size_strategy_defineProperty","pieceWiseRange","size_strategy_toConsumableArray","intervals","newIntervals","discreteRange","SizeAxis","size_axis_classCallCheck","_sizeStrategy","domainInfo","domainFn","generator","ShapeAxis","shape_axis_classCallCheck","_generatedShapes","shapeType","shapeGenerator","generatorFn","generatedShapes","createAngleValues","angleData","_angleFn","_angleValues","AngleAxis","angle_axis_classCallCheck","customDomain","customRange","_this$_range","angle_axis_slicedToArray","ROWS","COLUMNS","COL","ROW","CELL","X_AXES","Y_AXES","ENTRY_CELLS","EXIT_CELLS","PRIMARY","SECONDARY","adjustDomain","minOuterRadius","RadiusAxis","radius_axis_classCallCheck","_radiusFactor","sanitizedRange","rangeVal","DATA_TYPES","group_transform","data_type_scale_map_defineProperty","_dataTypeScaleMap","groupByIndices","nestCollection","nestFn","identityTransform","transformMap","transform_factory_defineProperty","_transformMap","uniqueField","valueField","normalizedData","normalizeData","uniqueFieldIndex","valueFieldIndex","seriesKeyIndex","seriesKeys","tuples","rowObj","_tuple","seriesKey","newArr","orderBy","orderIndex","groupByIndex","stackData","seriesData","transformFactory","POLAR","CARTESIAN","transfromColor","styleType","intensity","stateColor","originalColor","fillColorInfo","transformColor","interactionStyles","elements","getPlotElementsFromSet","_d$meta","colorTransform","helpers_slicedToArray","getAxesScales","_map2","_map4","xScale","yScale","encodingFieldInfRetriever","helpers_defineProperty","_encodingFieldInfRetr","encodingInf","getIndividualClassName","individualClassName","classNameStr","dataNormalizers","_dataNormalizers","encodingFieldInf","radiusFieldIndex","angleFieldIndex","radius0FieldIndex","angle0FieldIndex","fieldsLen","pointObj","radius0","angle0","enc","rowId","transformType","xFieldIndex","yFieldIndex","x0FieldIndex","y0FieldIndex","domainCalculator","_domainCalculator","layerInst","angleValues","radius0Field","encodingFieldsInf","xFieldSubType","yFieldSubType","x0Field","y0Field","yEnc","xEnc","attachDataToVoronoi","helpers_toConsumableArray","updateStyle","positionPoints","positioner","encodingTransform","getPlotMeasurement","dimensionalValues","fieldInfo","_bandScale","span","groupSpan","offsetValues","actualGroupWidth","dataProps","innerPadding","getGroupSpan","isAxisBandScale","axisPadding","groupPadding","resolveInvalidTransformType","_context$encodingFiel","groupByField","groupByFieldMeasure","getValidTransformForAggFn","resolvedInvalidTransformType","_context$encodingFiel2","isCustomTransformTypeProvided","_customConfig","resolveEncodingValues","transformedValues","getColorMetaInf","getHslArray","getCoordValue","trig","coordValueGetter","toCartesianCoordinates","rangePlot","_point$update","_coordValueGetter","sortData","axisArr","listener_map_slicedToArray","encodingValue","resolveTransformType","_transformedData","getTransformedData","_normalizedData","getNormalizedData","calculateDomainFromData","_updateLock","getRenderProps","registerChangeListener","renderLayer","throwback","commit","defaultOptions","default_options_defineProperty","_defaultOptions","newConf","defaultPolicy","_cacheEnabled","_cachedData","BaseLayer","base_layer_classCallCheck","base_layer_possibleConstructorReturn","base_layer_getPrototypeOf","base_layer_assertThisInitialized","alias","_points","_measurement","_store","localNs","initializeGlobalState","globalState","getState","base_layer_defineProperty","global","unitRowIndex","unitColIndex","_encodingFieldsInf","_encodingTransform","_alias","transformData","encodingType","transformedDataArr","_transformType","getValidTransform","pointMap","_pointMap","_dataProps","_this$encodingFieldsI","base_layer_slicedToArray","xMeasure","yMeasure","_identifiers$","_identifiers$2","xMeasureIndex","yMeasureIndex","getAllAttrs","filteredPoints","base_layer_toConsumableArray","sizeVal","_identifiers$getData","identifierData","identifierSchema","_this$encodingFieldsI2","tupleArr","transformedVal","base_layer_construct","userConf","drawLine","curveInterpolatorFn","linepath","LineLayer","line_classCallCheck","line_possibleConstructorReturn","line_getPrototypeOf","isXDim","isYDim","xPx","yPx","resolvedEncodings","stroke","cachePoint","seriesClassName","containerSelection","colorField","colorFieldIndex","animateGroup","groupTransition","groupAnimateStyle","stroke-opacity","getPathStyle","translatePoints","colorValFn","colorVal","getDrawFn","searchRadius","_point$data$data","getIdentifiersFromData","layerId","drawArea","easeEffect","renderer_slicedToArray","enterAreaPath","updateAreaPath","selectionEnter","AreaLayer","area_get","area_getPrototypeOf","_getAxesScales","classNameFn","minYVal","basePos","y0Px","invalidY","invalidY0","resolvedValues","stroke-width","stroke-linejoin","states","fadeout","selected","ArcLayer","arc_classCallCheck","arc_possibleConstructorReturn","arc_getPrototypeOf","_prevPieData","_this$axes","radiusAxis","pieIndex","prevData","angleV","angles","_angles","uid","getOuterRadius","getInnerRadius","startAngle0","endAngle0","_previousInfo","getPreviousPoint","currIndex","prevArc","nextArc","_context$axes$angle$r2","arc_helper_slicedToArray","qualClassName","_arcFn","consecutiveExits","exitCounter","tweenPie","individualClass","tweenExit","exitArr","oldExitCounter","tweenExitPie","consecutiveExitArr","gElem","pieSlices","pieSliceInf","tData","drawText","selectionMerge","backgroundVal","textanchor","textStyle","background","backgroundPadding","_smartLabel$getOriSiz","backgroundEl","alignment-baseline","defaultEncoding","alignmentBaseLine","defRotation","pointTranslators","polar","textEncoding","angleAxis","textFormatter","backgroundEncoding","backgroundValue","cartesian","textField","textFieldIndex","textValue","text_slicedToArray","TextLayer","text-anchor","drawSymbols","createShape","groupElement","Element","newShape","nodeName","src","href","shapeElement","pathStr","checkPath","exitGroup","defColorStyle","fillOpacity","shapes","sizes","PointLayer","point_classCallCheck","point_possibleConstructorReturn","point_getPrototypeOf","_config$offset","offsetX","offsetY","point_slicedToArray","maxSize","generateDataPoints","point_toConsumableArray","drawFn","getMarkId","_maxSize","_getPlotMeasurement2","widthMetrics","heightMetrics","offsetXValues","offsetYValues","measurementConf","getMeasurementConfig","widthSpan","heightSpan","distanceLimit","drawRects","barEnterFn","transitionBars","selTransition","positionRetriever","isNegativeVal","barBasePos","resolveDimByField","axesInfo","spaceType","sizeEncoding","sizeConfig","sizeValue","enterSpace","minVal","maxVal","diffPx","minDomVal","_positionRetriever$ty2","bar_helper_slicedToArray","resolveDimensions","_resolveDimByField","enterWidth","enterX","xPos","_resolveDimByField2","enterHeight","BarLayer","bar_classCallCheck","bar_possibleConstructorReturn","bar_getPrototypeOf","_plotPadding","_plotSpan","bar_get","getTranslatedPoints","normalizedDataArr","clipElement","clipPathElement","bar_slicedToArray","barWidthMetrics","barHeightMetrics","barWidthOffsets","barHeightOffsets","barWidth","barWidthOffset","barHeight","barHeightOffset","uniqueFieldType","pointFound","bar_toConsumableArray","p2","tick_renderer","ticksEnter","angle0Axis","angle0V","angles0","_angles2","_layerInst$encodingFi","_config$span","xSpan","ySpan","x0Px","TickLayer","drawTicks","AREA_LAYER","ARC_LAYER","LINE_LAYER","TEXT_LAYER","POINT_LAYER","BAR_LAYER","TICK_LAYER","SIMPLE_LAYER","BASE_LAYER","sanitizeEncoding","layerFactory","compositeLayers","factoryObj","setLayerRegistry","reg","_layerRegistry","getSerializedConf","serializedDefs","defs","unitLayerDef","sDef","parseLayerDefinition","layerType","strs","layer_factory_toConsumableArray","getLayerInstance","layerConstructor","getLayerClass","composeLayers","sanitizeLayerConfig","DEFAULT_LAYERS","defaults_defineProperty","_DEFAULT_LAYERS","LAYER_TYPES","local_options","local_options_defineProperty","_CONFIG$ROWS$COLUMNS$","SimpleGroup","Variable","ComposedVars","composed_vars_classCallCheck","composed_vars_possibleConstructorReturn","composed_vars_getPrototypeOf","vars","_vars","_data","member","getMinDiff","SimpleVariable","simple_var_classCallCheck","simple_var_possibleConstructorReturn","simple_var_getPrototypeOf","oneVar","_oneVar","dtFormat","dateFormat","fieldDef","minimumConsecutiveDifference","varInst","convertToVar","datamodel","transformFields","field_sanitizer_slicedToArray","normalizedFields","normalizeFields","norFields","orderFields","fieldArray","temporalArr","categoricalArr","fieldList","numOfMeasures","allDimensions","field_sanitizer_toConsumableArray","temporal","categorical","rowsInfo","columnsInfo","rowDimensions","rowMeasures","rowTemporalFields","rowCategoricalFields","columnDimensions","columnMeasures","columnTemporalFields","columnCategoricalFields","VisualEncoder","_fieldInfo","_axisFrom","_headerFrom","__headerFrom","axisFrom","_getHeaderAxisFrom2","visual_encoder_slicedToArray","getHeaderAxisFrom","rowHeader","rowAxis","_getHeaderAxisFrom4","colHeader","colAxis","headerFrom","scaleMaps","dataTypeScaleMap","generateAxisFromMap","axisType","axesCreators","facetFields","axisKey","groupAxes","currentAxes","cacheMaps","commonAxisKey","getAxisKey","axisConfig","getAxisConfig","axisInfo","axisOrientation","rowIndex","columnIndex","rawUserAxisConfig","userAxisConfig","_rotationLock","createSimpleAxis","Cls","sanitizeIndividualLayerConfig","encodingConfigs","getIndex","arrIndex","CartesianEncoder","geomCellAxes","projections","rowFields","columnFields","geomCell","xAxes","yAxes","lock","unlock","units","1","rIdx","unitsArr","_loop2","cIdx","len2","encodingDomains","getDataDomain","axisTypeIndex","typeOfField","_resolver$axes","axesArr","adjustedDomain","typeOfAxis","alignZeroLine","getAdjustedDomain","y1ratio","y2ratio","allSameSign","currentFieldName","sortingOrder","facets","counter","primaryFacets","secondaryFacets","primaryFields","secondaryFields","primaryLen","secondaryLen","projArr","primaryField","secondaryField","facet","existIndex","axisFromIndex","cartesian_encoder_get","cartesian_encoder_getPrototypeOf","groupedModel","encodingObj","retriveDomainFromData","layerArray","serializedLayers","userLayerConfig","layerConfig","retinalConfig","colField","colFieldName","rowField","configs","rowFieldName","rowFieldType","getDefaultMark","colFieldType","defConfigs","layerConfigs","getLayerConfFromFields","colFields","encodingArr","encoder_helper_toConsumableArray","colFieldExist","rowFieldExist","layerConf","mergedLayerConf","serializedLayerConfig","cartesian_encoder_toConsumableArray","axesCls","polar_encoder_defineProperty","_axesCls","PolarEncoder","pieAxes","axesObj","matrixLayers","resolverAxes","varInstances","encType","userConfig","domainProps","matrixInstance","unitDomains","setRadiusFactor","sizeField","retinalFields","_context$axes","sizeFieldIndex","sizeMultiplier","getSizeMultiplier","sizeAxisDomain","encodingFields","sanitizedRows","sanitizedColumns","polar_encoder_get","polar_encoder_getPrototypeOf","sanitizedFields","typeIndex","fieldSet","polar_encoder_toConsumableArray","layerEncoding","sanitizedConfig","angleField","angle0Field","RetinalEncoder","newAxes","createRetinalAxis","fieldProps","getAxisType","isDistributionEqual","group_utils_toConsumableArray","rowType","initializeCacheMaps","cellMap","xAxesMap","yAxesMap","entryCellMap","exitCellMap","headerCreator","fieldHeaders","TextCell","getHeaderText","rowLength","getEncoder","encoder","hasPolarEncodings","userAxisFromConfig","group_utils_slicedToArray","firstField","secondField","firstFieldType","secondFieldType","setFacetsAndProjections","_encoder$simpleEncode","simpleEncoder","getFacetsAndProjections","group_utils_defineProperty","getBorders","matrices","showRowBorders","showColBorders","showValueBorders","valueMatrix","_rows","leftRows","rightRows","_columns","topColumns","bottomColumns","_encoder$fieldInfo","allDimensionLength","allMeasuresLength","allTemporalFieldsLength","getRowBorders","borders","getColumnsBorders","getValueBorders","borderTypeRow","borderTypeCol","sortFacetFields","fieldsSorted","allFacetsFields","includes","facetName","facetField","facetSortOrder","action_behaviour_map_defineProperty","ACTIONS","sanitizeLayerDef","sanitizedDefs","sConf","unionDomainFromLayers","layerAxisIndex","domainValues","layerDomain","fieldDomain","encodingDomain","fieldStr","domain1","renderLayers","_lifeCycleManager","notify","orderedLayers","layerParentGroup","layerDepOrder","getDependencyOrder","dependencyOrder","visited","visit","_layerDepOrder","_timeDiffs","getLayersBy","searchBy","removeLayersBy","createRenderPromise","_renderedPromise","_renderedResolve","radiusAxes","getRadiusRange","GRID_BAND","GRID_LINE","getGridLayerDefinitions","getDefaultVisibilty","getLayerDefinition","_definition","_axes","_encoding","gridLines","gridBands","gridLineColor","zeroLineColor","gridBandColor","isLinearScale","grid_lines_defineProperty","isNegativeDomain","dimensionSubTypes","getValidSubtype","attachDataToGridLineLayers","_gridLines","_gridBands","gridLayerData","getGridLayerData","gridData","jsonData","_jsonData$push","grid_lines_toConsumableArray","trackerClassName","arcLayerClassName","sideEffectClassName","src_local_options","src_local_options_defineProperty","_CONFIG$LAYERDEFS$TRA","cachedData","local_options_toConsumableArray","oldData","src_listener_map_slicedToArray","fieldsVal","removeExitLayers","layersMap","markSet","colIndex","listenerInf","hasPlotSpan","_ref5","temporalFields","filteredFields","_ref6","_ref7","_ref8","_ref9","_ref10","_timeDiffsByField","createGridLineLayer","vuConf","_layerDeps","atomicDef","_ref11","_ref12","transformDataModels","transformVal","_ref15","_ref16","layerAxisIndexVal","_layerAxisIndex","axesVal","lyr","disableUpdate","attachDataToLayers","transformedDataModels","dataSource","enableUpdate","_dimensionMeasureMap","getDimensionMeasureMap","retinalEncodingsAndMeasures","_layer$encodingFields","shapeField","_retinalEncodingsAndM","src_helper_toConsumableArray","attachAxisToLayers","axisInf","props_defineProperty","_PROPS","createSelectionSet","originalData","attachPropagationListener","firebolt_helper_slicedToArray","dispatchQueuedSideEffects","firebolt_helper_toConsumableArray","clearActionHistory","payloadGenerator","brush","selectionDataModel","propPayload","getRangeFromData","propCriteria","isDimension","payload_generator_toConsumableArray","__default","propagateValues","propagationFieldInf","propagationFields","sideEfffects","mergedModel","sourceUnit","sourceCanvas","parentAlias","propagationBehaviour","propFields","facetByFields","getModelWithFacetData","schema1","data1","derivedSchema","dataAtFirstPos","data_propagator_toConsumableArray","groupId","behaviourInstance","propagationConf","sourceBehaviour","enabled","propConf","propInf","UnitFireBolt","src_firebolt_classCallCheck","firebolt_possibleConstructorReturn","firebolt_getPrototypeOf","firebolt_assertThisInitialized","unitId","aliasName","propagationSourceCanvas","sourceUnitId","sourceSideEffects","sideEffectInstances","actionOnSource","mappedEffects","se","sideEffectChecker","enabledFn","payloadFn","sourceIdentifierFields","sourceBehaviours","firebolt_get","VisualUnit","visual_unit_classCallCheck","visual_unit_defineProperty","lifeCycleManager","_gridLinesSelection","_gridBandsSelection","_layerNamespaces","_transformedDataModels","localOptions","_firebolt","_rootSvg","class","renderGridLineLayers","gridLineParentGroup","_entry","grid_lines_slicedToArray","parentGroupClass","_sideEffectGroup","createSideEffectGroup","initSideEffects","rootSvg","_this$parentContainer","parentContainerInf","layerDefinition","layerDefinitions","components","layerIndex","startIndex","visual_unit_toConsumableArray","layersArr","_layersArr","markId","defArr","getLayerFromDef","existingLayer","instanceArr","instanceValues","layerdeps","depArr","resolveEncodingTransform","resolvable","getLayerAxisIndex","_layer$config","specificField","encodingField","stateStore","calculateDomainListener","parentModel","dimValue","getNearestDimensionalValue","entryVal","pointInf","getMarkInfFromLayers","markInf","parsedIdentifiers","transposeArray","getPointsFromIdentifiers","visual_unit_construct","getFieldNames","fields1","matrix_model_toConsumableArray","createSelectedDataModel","uniqueKeyGenerator","keyArray","nextDepthUniqueValues","projectRows","allColumnProjections","rowProjections","optionalProjections","_getFieldNames2","matrix_model_slicedToArray","projFieldNames","colProjFieldNames","pushToMatrix","valueCellCreator","_matrix$rowIndex","facetInfo","colProjections","rowProj","projIdx","_getFieldNames4","rowProjFieldNames","projectedDm","formatKeys","formatterList","formattedKeys","rKeys","createValueCells","suppliedLayers","GeomCell","horizontalAxis","verticalAxis","datamodelTransform","layerConfigArr","getLayerConfig","normalizedColumns","normalizedRows","allFacets","cell_creator_toConsumableArray","rowFacets","colFacets","geomCellKey","getCellKey","columnId","updateCells","facetKey","extractAxisIndex","createAxisCells","currObj","axisInst","_axisInst$config","AxisCell","BlankCell","extractFacetIndex","headerPlaceholderGn","selectionObj","selectionKeys","keySet","textCells","createTextCells","textCell","generatePlaceholders","facetsAndProjections","encoders","valuesMatrix","rowKeys","columnKeys","takeAxisFrom","takeHeaderFrom","axisPlaceholderGn","selObj","axesMatrix","selObjProp","axesForDraw","rowsPrimary","rowPrime","rowsSecondary","rowSec","columnsPrimary","colPrime","columnsSecondary","colSec","_selectionObj","section","hContext","getAxisFields","fieldHolder","ac","transformDataModel","resolvedData","extractFields","layerFields","_ref4","flattenArray","getFieldsFromSuppliedLayers","suppliedLayerConfig","aggregationFns","nearestAggFns","resolvedAggFns","sortDmTemporalFields","computeMatrices","componentRegistry","globalConfig","autoGroupBy","otherEncodings","matrixGnContext","getCellDef","isRowSizeEqual","isColumnSizeEqual","colCells","rowCells","resetSimpleAxes","newCacheMap","valueCellContext","serializeLayerConfig","valueMatrixInfo","getMatrixModel","rowDataModels","colProj","firstLevelRowKeys","_rowDataModels","rowFacetFieldNames","selectedDataModel","newProjectedDataModels","_rowDataModels2","colFacetNames","firstLevelColumnKeys","dme","rIndex","cIndex","formattedColKeys","rawFormat","formattedRowKeys","transposedColKeys","valueCellsCreator","placeholder","_mutateAxesFromMap","mutateAxesFromMap","xAxisSet","yAxisSet","axisId","createUnits","_generateMatrices","generateMatrices","leftHeaders","topHeaders","bottomHeaders","rightHeaders","cell_creator_slicedToArray","leftFacets","rightFacets","rowPriority","colPriority","leftMatrix","rightMatrix","topMatrix","bottomMatrix","currentBottomLength","setAvailableSpace","rowMatrix","columnMatrix","RESOLVER_PROPS","MatrixResolver","matrix_resolver_classCallCheck","_registry","_layerConfig","_matrixLayers","_rowMatrix","_columnMatrix","_valueMatrix","_facets","_projections","_datamodelTransform","_units","_cacheMaps","maps","matrix_resolver_toConsumableArray","_horizontalAxis","_verticalAxis","matrixType","_this5","sideEffectRegistry","_this$dependencies","unitConfig","extractUnitConfig","globalStates","_this$getAllFields","retContext","getRetinalFieldsDomain","retinalEncoder","setCommonDomain","_this6","retinalAxes","updateModel","placeholders","bottomLeft","bottomRight","_this$dependencies3","showHeaders","matrix_resolver_slicedToArray","topCols","bottomCols","rowHeaders","blankCellCreator","footers","topLeft","topRight","ValueMatrix","matrixArr","value_matrix_classCallCheck","instancesById","cellValue","_instancesById","_matrix","_filterFn","rowWidth","currentRowWidth","getLogicalSpace","rowHeight","currentRowHeight","setMatrixInstances","_composition","createMatrices","matrixConfig","unsubscribeChangeListeners","sanitizeRetinalConfig","retinalConf","confValue","groupType","fieldSanitizer","setAxisAndHeaders","placeholderInfo","getMatrices","_groupedDataModel","createRetinalAxes","setDomains","cornerMatrices","createHeaders","metaData","border","unionUnitDomains","registerDomainChangeListener","visual_group_props_defineProperty","visual_group_props_PROPS","cellRegistry","VisualGroup","visual_group_classCallCheck","visual_group_possibleConstructorReturn","visual_group_getPrototypeOf","componentSubRegistry","visual_group_assertThisInitialized","_selection","createUnitState","visual_group_helper_slicedToArray","createLayerState","setupChangeListeners","variable","findInGroup","channel","group_utils_this","facetType","projType","getRetinalAxes","getSimpleAxes","_this$resolver$getAll","visual_group_defineProperty","existingRemoveSet","select_toConsumableArray","firebolt_action_behaviour_map_defineProperty","action_behaviour_map_actionBehaviourMap","propagationBehaviourMap","_propagationBehaviour","firebolt_behaviour_effect_map_defineProperty","firebolt_behaviour_effect_map_behaviourEffectMap","propagationSideEffects","_propagationSideEffec","SCALE_FUNCTIONS","VALUE","canvasAlias","rawVal","check","assembleModelFromIdentifiers","temp","src_firebolt_helper_toConsumableArray","LegendFireBolt","_Firebolt","legend_firebolt_classCallCheck","legend_firebolt_possibleConstructorReturn","legend_firebolt_getPrototypeOf","legend_firebolt_inherits","legend_firebolt_createClass","behaviourName","getCriteriaFromData","firebolt_physical_defineProperty","physical_physicalActions","boundingBox","gradientDimensions","axisScale","rangeShifter","drag_defineProperty","getSelectionCriteria","selectionBoxMeasure","drawingInfMeasure","subjectStartPoint","gradientDimension","legendGradContainer","legendSelGroup","enterFn","getMousePos","boundingClientRect","selection_box_drag_defineProperty","fadeOut","brighten","LegendHighlighter","legend_highlighter_classCallCheck","legend_highlighter_possibleConstructorReturn","legend_highlighter_getPrototypeOf","legendContainer","resetLogicalSpace","title","_title","ALIGN","DEFAULT_MEASUREMENT","LEGEND_TITLE","borderStyle","borderColor","bounds","upper","ICON_MAP","getScaleInfo","scaleType","steps","scaleFn","getInterpolatedArrayData","domainForLegend","scaleParams","requiredWidth","requiredHeight","upperBound","maxTickDiff","alignment","smartLabelCalc","minimumTickSize","_smartLabelCalc$getOr","isInteger","getcomputedArray","computationhelper","requiredMeasure","availableMeasure","currentTickValue","nextTickValue","measureParam","pixelPerTick","getInterpolatedData","recomputeSteps","getTickMeasure","_scaleParams$measures","interpolatedFn","tickValue","getDomainBounds","domainBounds","domainLeg","ele","legend_helper_defineProperty","getScaleFactor","SimpleLegend","simple_legend_classCallCheck","_metaData","_fieldName","_labelManager","_cells","defaultMeasurement","_computedStyle","legendBehaviours","_canvasAlias","getItemMeasures","_labelManager$getOriS","_this$measurement","effPadding","effBorder","effMargin","dataFromScale","titleSpace","getTitleSpace","titleHeight","titleWidth","labelSpaces","getLabelSpaces","_computeItemSpaces","computeItemSpaces","maxItemSpaces","textOrientation","itemSpaces","iconSpaces","maxIconWidth","labelSpace","itemSpace","iconSpace","newLabelWidth","titleSpaces","_this$measurement2","_this$config3","titleCreator","titleContainer","marginPosition","_this$config4","_this$measurement3","renderTitle","simple_legend_defineProperty","legendOrientation","position_config_defineProperty","_legendOrientation","datasets","itemContainerMeasures","getStepSpacesInfo","iconHeight","iconWidth","stepPadding","horizontal","vertical","positionConfig","_positionConfig","alignmentMap","_alignmentMap","itemStack","_itemStack","createLegendSkeleton","gradWidth","gradHeight","maxGradHeight","maxGradWidth","legendBody","legendItem","getItemContainers","legendInstance","positionObj","createItemSkeleton","_context$config","itemSkeleton","alignClass","applyItemStyle","measureType","stepColorCheck","_context$measurement","renderIcon","defaultIcon","DiscreteLegend","_getScaleInfo","discrete_legend_toConsumableArray","_field$schema","discrete_legend_defineProperty","discrete_legend_get","discrete_legend_getPrototypeOf","renderDiscreteItem","_context$measurement2","_item$icon","text-align","getGradientDomain","accumulator","currentValue","MAX_VALUE","MIN_VALUE","legendGradSvg","legendGradCont","linearGradient","makeLinearGradient","legendRect","GradientLegend","gradient_legend_toConsumableArray","gradient_legend_defineProperty","newAxis","axisSpace","axisDomainLength","_legendGradientSvg","gradient_legend_get","gradient_legend_getPrototypeOf","renderGradient","_createLegendSkeleton","StepLegend","step_legend_toConsumableArray","step_legend_defineProperty","lowerBounds","upperBounds","step_legend_get","step_legend_getPrototypeOf","stepData","renderStepItem","_context$measurement3","_item$icon2","_positionConfig$posit","PADDING","BORDER","MARGIN","TITLE_TEMPLATE_NOT_ALLOWED_TAGS","LEGEND_TYPE_MAP","constants_defineProperty","_LEGEND_TYPE_MAP","HORIZONTAL_CENTER","VERTICAL_CENTER","share","operators_construct","operators_toConsumableArray","strings","htmlCode","expLn","frag","createDocumentFragment","treeShakeNode","nodeType","Node","ELEMENT_NODE","tagName","_didIteratorError","_iteratorError","_step","_iterator","childNodes","err","canvasIterator","canvases","iteratorFn","cFn","canvas","visualGroup","_throwback","actionModel","ActionModel","action_model_classCallCheck","_registrableComponents","registerPropagationBehaviourMap","dissociateBehaviour","_len5","_key5","dissociateSideEffect","policy","registrableComponents","mergedPolicy","aliases","comp","*","propagationPayload","propagationCanvas","crossInteractionPolicy","TITLE_CONFIG","SUB_TITLE_CONFIG","maxLines","LAYOUT_ALIGN","canvas_local_options_defineProperty","_localOptions","canvasOptions","_canvasOptions","titleConfig","subtitle","sub","subtitleConfig","LayoutComponent","layoutComponent_classCallCheck","_boundBox","_renderAt","_alignWith","_alignment","_componentName","_className","DummyComponent","newDimensions","renderAt","component","componentName","pagination","scrollBar","thickness","speed","legend","minHeight","minCharacters","verticalAlign","collapse","invalidValues","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_CLASS_NAME","NODE_PREFIX","DefinitionModel","definitionModel_classCallCheck","_host","host","_cut","cut","_ratioWeight","ratioWeight","_preferred","preferred","_lanes","lanes","_remainingHeight","_remainingWidth","remainingHeight","remainingWidth","getNodeId","_uid","yExtraSpace","smallestHeight","getCutType","smallestExtraHeightHorizontally","MAX_SAFE_INTEGER","containerHeight","hostHeight","xExtraSpace","smallestWidth","smallestExtraWidthVertically","containerWidth","hostWidth","createPlaceHolderComponent","placeComponent","definitionModel","leftOvercomponentRationWidth","isPreferred","isGridComponent","componentRatioWidth","leftHeight","leftWidth","_component$getLogical","componentHeight","componentWidth","firstLaneConfig","firstLane","secondLane","tree_classCallCheck","_parentCut","_this$_children","tree_toConsumableArray","parentCut","bound","nodeconfig","searchNode","childNode","nodeId","deleteSearchNode","LayoutModel","measurements","layout_model_classCallCheck","_measurements","_root","createTree","setBoundBox","addChildren","lane","allocateBoundingBox","totalWeight","carry","lastSibling","ratio","setHostSpatialConfig","setHostPosition","negotiateDimension","alteredDim","nonAlteredDim","cumultiveExtraSpaceAmt","childrenLength","extraSpaceAmt","computePosition","determineBoundBox","bb","_lastSibling$boundBox","_top","_left","_height","_width","_instance$parent$boun","setSpatialConfig","Utils","utils_createClass","isDOMElement","getID","getElement","findContainer","coordinate","removeDiv","divId","DataPoint","data_point_classCallCheck","DataParser","data_parser_classCallCheck","data_parser_createClass","defaultDataPointLogic","nodepoints","getnodePoints","datapoint","HTMLDataAdapter","_DataParser","html_data_classCallCheck","html_data_possibleConstructorReturn","html_data_getPrototypeOf","html_data_inherits","html_data_createClass","getCoordinates","html_data_get","Renderer","renderer_classCallCheck","renderer_createClass","initRenderer","__logicalTree","HTMLRenderer","_Renderer","html_renderer_classCallCheck","html_renderer_possibleConstructorReturn","html_renderer_getPrototypeOf","_coordinates","html_renderer_inherits","html_renderer_createClass","createhtml","mainDiv","html_renderer_get","parentDiv","createAndCustomiseParent","hasHost","createAndPositionDiv","html_renderer_objectSpread","div","coordinates","findNode","nodeID","renderer","renderHTML","DrawingManager","drawing_manager_classCallCheck","_componentMap","componentMap","_layoutClassName","layoutClassName","_renderer","drawing_manager_createClass","drawLayout","resolveAligment","componentData","alignWith","newNodeConfig","refNode","drawComponent","DefinitionManager","definition_manager_classCallCheck","_prioritySequence","_totalHeight","_totalWidth","_targetComponentMap","prepareTargetComponentMap","targetComponentMap","canvasComponent","tempDefModel","componentRef","getComponent","placeGridComponent","gridComponents","iscolumnPreffered","_placeComponent","rowpreffred","LayoutDef","layout_def_classCallCheck","_layoutDefinition","layout_def_createClass","addComponent","layoutDefinition","addMultipleComponent","componentArray","sanitizedDefinition","hostObj","hostID","childHost","resetComponentMap","LayoutManager","layout_manager_classCallCheck","_dimension","_skeletonType","skeletonType","_layoutDef","_drawingManager","_rootNodeID","con","resetNode","updateNode","compute","_layout","calLayOutDef","_context$dimension","layoutDef","prioritySequence","generateConfigModel","negotiate","broadcast","layoutComponents","componentArr","compo","removeElement","elemID","setupChangeListener","allOptions","_allOptions","canvas_helper_toConsumableArray","nameSpaceProps","equalityChecker","option","updateChecker","dispatchProps","_cachedProps","notifyAnimationEnd","centerMatrix","layout","viewInfo","viewMatricesInfo","promises","cellArr","lifeCycle","animDonePromises","animationDone","applyInteractionPolicy","interactionPolicy","_interactionPolicy","_crossInteractionPolicy","unitFireBolt","changeBehaviourStateOnPropagation","changeSideEffectStateOnPropagation","createLayoutManager","src_options","minUnitWidth","minUnitHeight","oldConf","fixScrollBarConfig","VIEW_INDEX","ROW_MATRIX_INDEX","2","COLUMN_MATRIX_INDEX","HEIGHT","ROW_ROOT","COLUMN_ROOT","VERTICAL","HORIZONTAL","GenericLayout","generic_layout_classCallCheck","_matrices","_centerMatrix","_mountPoint","DEFAULT_CONFIGURATION","grid_layout_defaults_defineProperty","_DEFAULT_CONFIGURATIO","_FieldNames$BORDER","DEFAULT_MEASUREMENTS","_DEFAULT_MEASUREMENTS","findInPage","page","combineMatrices","isTransposed","joinedMatrix","utils_toConsumableArray","rowData","computeLogicalSpace","maxMeasures","_config$isTransposed","unitMeasures","_getMeasureInfo","getMeasureInfo","firstMeasure","secondMeasure","minMeasures","getMinMeasures","_logicalSpace","utils_defineProperty","valueItem","maxMeasure","firstMeasureValue","secondMeasureValue","valueArray","_item$space","fMeasure","sMeasure","minSecondMeasure","createMatrixEachLevel","_arr$i","extraCellsRemover","beg","distribution","extraCellLengths","VisualMatrix","visual_matrix_classCallCheck","_lastLevelKey","_primaryMatrix","_secondaryMatrix","_maxMeasures","_availableSpace","_layoutMatrix","_tree","_createTree2","matrixTree","lastLevelKey","layoutMatrix","primaryMatrix","secondaryMatrix","breakPage","primaryMatrixLength","newMatrix","keyLength","heightMeasures","populateMaxMeasures","widthMeasures","calculateDepth","viewableMatrix","createViewPortMatrix","viewableMeasures","redistributeSpaces","childDepth","createMatrixInstances","matrixInfo","breakPointer","_breakPointer","brokenMatrix","breakMatrix","nextLevel","removeExtraCells","RowVisualMatrix","row_matrix_classCallCheck","row_matrix_possibleConstructorReturn","row_matrix_getPrototypeOf","maxHeights","maxWidths","matrixInst","cellDimOptions","matrixIndex","_this2$getCellDimensi","getCellDimensions","widths","rowHeights","columnWidths","primary","secondary","begCellLen","endCellLen","remainingAvailWidth","cWidths","conditions","maxPrioritySpace","availableWidth","currentWidth","prioritySpace","logicalWidths","getPriorityDistribution","mWidth","mHeight","redistributeViewSpaces","computeViewableSpaces","rHeights","gutter","spaceTakenByColumn","spaces","getDistributedHeight","heightWithoutGutter","distSum","gutterSum","availableHeight","colLen","distHeight","borderWidth","colHeight","colWidth","heights","ColumnVisualMatrix","column_matrix_classCallCheck","column_matrix_possibleConstructorReturn","column_matrix_getPrototypeOf","heightDist","divider","spaceTakenByRow","getDistributedWidth","layoutConfig","distWidth","rowLen","oldLogicalSpace","heightDistribution","getMatrixMeasurement","setViewSpaces","pointerType","viewSpaces","pointer","computations_defineProperty","paginationDetailsMap","scrollType","paginationMeasureGetter","relatedMaxMeasure","getMatrixMeasureForPagination","measureDetails","actualMeasure","scrollInfo","getMatrixHeightDetails","columnMatrixWidth","_getHeightRequiredByC","getHeightRequiredByColMatrix","maxColumnMatrixHeight","columnViewSpace","getViewableSpaces","columnPointer","columnMatrixHeight","maxHeightAvailableForRowMatrix","rowMatrixHeight","bufferCondition","isScroll","getActualBufferFromConfig","computations_slicedToArray","getBufferFromCondition","currentBufferType","horizontalBuffer","verticalBuffer","computeLayoutMeasurements","_getMatrixWidthDetail","getMatrixWidthDetails","_layout$config3","rowMatrixWidth","maxRowMatrixWidth","maxWidthAvailableForColumnMatrix","_getMatrixHeightDetai","_getActualBufferFromC","rowViewableSpaces","columnViewableSpaces","setValueMatrixMeasurements","computations_toConsumableArray","rowWidthsPrimary","rowWidthsSecondary","columnHeightsPrimary","columnHeightsSecondary","measureSum","total","GridLayout","layout_classCallCheck","layout_possibleConstructorReturn","layout_getPrototypeOf","_layoutId","_viewInfo","defaultViewInfo","_scrollInfo","generateVisualMatrices","begColCells","endColCells","gutterSpace","layout_helper_slicedToArray","_center","_bottom","layout_helper_toConsumableArray","RowMatrix","ColumnMatrix","layout_get","_computeLayoutMeasure","setViewInformation","pageNumber","pageType","totalPages","layout_defineProperty","renderGrid","currentPage","maxRowHeight","maxColWidth","rowPointer","getViewMatrices","rowMatrices","getViewableMatrices","columnMatrices","centralMatrixPointer","rowMatrixLen","columnMatrixLen","rowPages","columnPages","layoutDimensions","getViewMeasurements","_layout$config","rowSpaces","colSpaces","rightWidth","topHeight","bottomHeight","centerHeight","centerWidth","viewWidth","viewHeight","actualCenterMeasures","totalMeasures","unitHeights","unitWidths","borderMap","border_helper_defineProperty","_borderMap","specificBorderApplier","borderTypes","showBorders","borderInfo","borderType","applySpecificBorder","applyBorders","borderApplierFn","borderApplier","borderMapVal","orderMaker","nestByStack","updateArr","optionalParams","currStack","prevStack","arrVal","stackVal","currElemIndex","newElem","arrElem","returnArr","spanCalculator","isNull","maskCreator","_nestByStack","viewMatrix","hierarchy","_nestByStack2","spanGenerator","spans","ridx","currSpan","getOrder","isReverse","matrixSpanGeneratorMap","span_maker_defineProperty","_matrixSpanGeneratorM","orderGetter","viewMatrixMaker","spanMaker","matrixSpanGenerator","spanApplier","cellCounter","spaceAllocationDueToSpan","cumulativeWidth","spanApplierMap","_spanApplierMap","TransactionSupport","INTERFACE_IMPl","CLASSPREFIX","HEADER","DATA","AXES","FACET_BY_FIELDS","FIELDS","TRANSFORM","LAYER_DEF","CONFIG","DETAIL_FIELDS","AXIS","GEOM","BLANK","SimpleCell","simple_cell_classCallCheck","enums_defaults_defineProperty","_DEFAULT_CONFIG","_CONSTANTS$MARGIN","CONSTANTS","DEFAULT_PROPS","minSpacing","src_props_defineProperty","visual_cell_src_props_PROPS","caption","smartText","axis_cell_classCallCheck","axis_cell_possibleConstructorReturn","axis_cell_getPrototypeOf","_availHeight","_availWidth","axis_cell_assertThisInitialized","computeAxisSpace","logicalWidth","logicalHeight","spaceFixer","_axis$getLogicalSpace","actualWidth","actualHeight","_axis$config2","wrapperDiv","blank_cell_classCallCheck","blank_cell_possibleConstructorReturn","blank_cell_getPrototypeOf","blank_cell_assertThisInitialized","setSmartText","_context$minSpacing","minHeightSpace","minWidthSpace","paddedHeight","paddedWidth","text_cell_classCallCheck","text_cell_possibleConstructorReturn","text_cell_getPrototypeOf","text_cell_assertThisInitialized","computeTextSpace","_context$minSpacing2","minText","_minTextSpace","smartSpace","textAlign","vAlign","_this$smartText","translation","middle","geom_cell_classCallCheck","geom_cell_possibleConstructorReturn","geom_cell_getPrototypeOf","_unit","_datamodel","_facetByFields","_transform","_caption","geom_cell_assertThisInitialized","lockModel","unlockModel","captionSpace","computeGeomSpace","getCaptionSpace","captionDom","DEFAULT_PLACEHOLDERS","src_defaults_defineProperty","_DEFAULT_PLACEHOLDERS","resolveTitleSubTitleContent","rawContent","escapeHTML","htmlEscapes","&","<",">","\"","'","/","createHeading","prevCell","cellType","_minTickDiff","legendInitializer","legendConfig","prevLegends","legends","headerHeight","legendInfo","legendCreator","LegendCls","dataset","scaleProps","_scale$config","stepMapper","dataInfo","legendMeasures","titleText","getGroupByData","setLegendMeasures","MuzeComponent","_this$boundBox","HeaderComponent","headerComponent_classCallCheck","headerComponent_possibleConstructorReturn","headerComponent_getPrototypeOf","setParams","cont","renderHeader","LegendComponent","legendComponent_classCallCheck","legendComponent_possibleConstructorReturn","legendComponent_getPrototypeOf","legendSpace","sectionComponents","_this$params$config","legendMount","legWidth","legHeight","sections","currHeight","currWidth","leg","legendHeight","legendWidth","renderLegend","_defaultAlignmentHelp","defaultAlignmentHelper","arrowSizeMap","getUnitPositions","totalLength","viewLength","currentLen","unitPosition","createScrollBarArrow","createScrollBarRect","mover","applyScrollMouseDownAction","moverRect","scrollMaker","_mover$node$getBoundi","_rect$node$getBoundin","rectX","rectY","changeMoverPosition","registerListenerOnArrow","arrowType","_components","isTouchDevice","applyMoverDrag","moverStartPos","rectStartPos","distanceMoved","actualPosition","pageXOffset","pageYOffset","applyRectClick","emptyScrollAreaClick","manager","unitPositions","ScrollMaker","scroll_maker_classCallCheck","_attachedScrollAction","_unitPositions","scroll_maker_createClass","scrollTo","scrollDeltaTo","createScroll","scrollBarContainer","scrollContainerHelper","attachScrollAction","externalScrollAction","detachScrollAction","scrollMakerMap","_ScrollMaker","HorizontalScrollMaker","horizontal_scroll_maker_classCallCheck","horizontal_scroll_maker_possibleConstructorReturn","horizontal_scroll_maker_getPrototypeOf","horizontal_scroll_maker_inherits","horizontal_scroll_maker_createClass","horizontal_scroll_maker_get","prevArrow","nextArrow","_this$logicalSpace","scrollBarWithouArrowLength","_scrollBarWithouArrowLength","_this$_components$mov","positionAdjuster","newPosition","currentPos","_this$_components$mov2","moverPos","movedViewLength","performAttachedScrollFunction","delta","_this$_components$mov3","scrollPercentage","movement","VerticalScrollMaker","vertical_scroll_maker_classCallCheck","vertical_scroll_maker_possibleConstructorReturn","vertical_scroll_maker_getPrototypeOf","vertical_scroll_maker_inherits","vertical_scroll_maker_createClass","vertical_scroll_maker_get","ScrollComponent","scroll_component_classCallCheck","scrollBarComponentConfig","scroll_component_possibleConstructorReturn","scroll_component_getPrototypeOf","unitIndex","sanitizedUnitIndex","externalAction","MatrixComponent","matrix_component_classCallCheck","matrix_component_possibleConstructorReturn","matrix_component_getPrototypeOf","_this$params$config$s","containerForMatrix","applyScroll","_cellSpanMaker","cellSpanMaker","_matrixSpanGenerator","renderTable","applySpans","applier","renderPlaceholders","renderMatrix","applyScrollAction","scollDistance","GridComponent","grid_component_classCallCheck","grid_component_possibleConstructorReturn","grid_component_getPrototypeOf","_this$component$viewI","matrixDim","matrixName","updateWrapper","matrixWrapper","allComponents","_scrollBarManager","wheelDeltaX","wheelDeltaY","scrollBarManager","triggerScrollBarAction","movedView","scrollActionApplier","_this$component$0$0$b","sanitizeGrid","headerMap","headerCell","configType","createHeaderWrapper","headerType","layoutManager","renderDetails","_headerMap$headerType","headerConfig","component_wrapper_maker_objectSpread","wrapperParams","existingComponent","createScrollBarWrapper","scrollBarType","grid","_scrollBarMap$scrollB","scrollBarMap","layoutBasedMeasure","viewMeasure","rowAlign","colAlign","componentWrapperMaker","createLegendWrapper","legendWrapper","gridLayoutWrapper","verticalScrollBar","horizontalScrollBar","ScrollManager","scroll_manager_classCallCheck","_scrollBarComponents","_attachedComponents","scroll_manager_createClass","scrollBarComponents","attachedComponents","performScrollAction","getRenderDetails","_mount$getBoundingCli","heightAttr","widthAttr","visGroup","_visGroup$placeholder","legendPosition","layoutArrangement","arrangeComponents","_titleLayouts","titleLayouts","component_resolver_defineProperty","legendLayouts","titlePosition","subtitlePosition","availableHeightForCanvas","availableWidthForCanvas","_createHeaders","canvasHeight","canvasWidth","isSubtitle","headerOptions","_createHeading","createLegend","getLegendSpace","mountSpace","componentIndexes","componentNames","3","4","5","renderLayout","_layoutManager","gridLayout","compWrappers","componentWrappers","gridWrapper","createScrollManager","horizontalScrollWrapper","verticalScrollWrapper","hScrollBar","vScrollBar","componentWrapper","deleteElementName","deleteElementId","removeComponent","registerComponents","attachScrollListener","defaultInteractionPolicy","isMeasure","group_firebolt_toConsumableArray","getFieldsFromChannel","colDim","unitColFacets","equals","unitRowFacets","propagateWith","defaultCrossInteractionPolicy","propagationCanvasAlias","propagationUnit","GroupFireBolt","group_firebolt_classCallCheck","group_firebolt_possibleConstructorReturn","group_firebolt_getPrototypeOf","behaviouralAction","validFields","APP_INITIAL_STATE","app","Canvas","globalDependencies","canvas_classCallCheck","canvas_possibleConstructorReturn","canvas_getPrototypeOf","canvas_defineProperty","canvas_assertThisInitialized","initedComponents","initCanvas","createGroupState","_VisualGroup$getState2","canvas_helper_slicedToArray","localState","register","prepareLayout","triggerReflow","setLayoutInfForUnits","getBoundBox","getRootNodeId","setLabelRotationForAxes","rotationVal","getAxes","initialSettings","regEntry","COMPONENTS","SUBREGISTRIES","regObj","globalCache","defaultRegistry","overrideRegistryDefinitions","overrideRegistry","muze","_transactor2","muze_slicedToArray","env","globalStore","componentSubRegistryDef","settings","withSettings","enableChainedTransaction","transactionModel","transactionEndpoint","transactionItems","Smartlabel","SideEffects","standards","Behaviours","pkg","operators","utils","lookupWhat","lookupDetails","lookupTarget","deps"],"mappings":"CAAA,SAAAA,iCAAAC,KAAAC,SACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,UACA,mBAAAG,eAAAC,IACAD,OAAA,UAAAH,SACA,iBAAAC,QACAA,QAAA,KAAAD,UAEAD,KAAA,KAAAC,UARA,CASCK,OAAA,WACD,yBCTA,IAAAC,oBAGA,SAAAC,oBAAAC,UAGA,GAAAF,iBAAAE,UACA,OAAAF,iBAAAE,UAAAP,QAGA,IAAAC,OAAAI,iBAAAE,WACAC,EAAAD,SACAE,GAAA,EACAT,YAUA,OANAU,QAAAH,UAAAI,KAAAV,OAAAD,QAAAC,cAAAD,QAAAM,qBAGAL,OAAAQ,GAAA,EAGAR,OAAAD,QA0DA,OArDAM,oBAAAM,EAAAF,QAGAJ,oBAAAO,EAAAR,iBAGAC,oBAAAQ,EAAA,SAAAd,QAAAe,KAAAC,QACAV,oBAAAW,EAAAjB,QAAAe,OACAG,OAAAC,eAAAnB,QAAAe,MAA0CK,YAAA,EAAAC,IAAAL,UAK1CV,oBAAAgB,EAAA,SAAAtB,SACA,oBAAAuB,eAAAC,aACAN,OAAAC,eAAAnB,QAAAuB,OAAAC,aAAwDC,MAAA,WAExDP,OAAAC,eAAAnB,QAAA,cAAiDyB,OAAA,KAQjDnB,oBAAAoB,EAAA,SAAAD,MAAAE,MAEA,GADA,EAAAA,OAAAF,MAAAnB,oBAAAmB,QACA,EAAAE,KAAA,OAAAF,MACA,KAAAE,MAAA,iBAAAF,oBAAAG,WAAA,OAAAH,MACA,IAAAI,GAAAX,OAAAY,OAAA,MAGA,GAFAxB,oBAAAgB,EAAAO,IACAX,OAAAC,eAAAU,GAAA,WAAyCT,YAAA,EAAAK,cACzC,EAAAE,MAAA,iBAAAF,MAAA,QAAAM,OAAAN,MAAAnB,oBAAAQ,EAAAe,GAAAE,IAAA,SAAAA,KAAgH,OAAAN,MAAAM,MAAqBC,KAAA,KAAAD,MACrI,OAAAF,IAIAvB,oBAAA2B,EAAA,SAAAhC,QACA,IAAAe,OAAAf,eAAA2B,WACA,SAAAM,aAA2B,OAAAjC,OAAA,SAC3B,SAAAkC,mBAAiC,OAAAlC,QAEjC,OADAK,oBAAAQ,EAAAE,OAAA,IAAAA,QACAA,QAIAV,oBAAAW,EAAA,SAAAmB,OAAAC,UAAsD,OAAAnB,OAAAoB,UAAAC,eAAA5B,KAAAyB,OAAAC,WAGtD/B,oBAAAkC,EAAA,GAIAlC,wCAAAmC,EAAA,sbClFA,SAAAC,EAAAhB,GACA,UAAAiB,QAAA3C,UAAA,UAAA2C,QAAA1C,QACAA,oBAEAC,yRAJA,CASCE,kBACD,gBAAAsC,GCTA,IAAAhB,KAGA,SAAAO,EAAAX,GAGA,GAAAI,EAAAJ,GACA,OAAAI,EAAAJ,GAAAtB,QAGA,IAAA4C,EAAAlB,EAAAJ,IACAd,IACAC,KACAT,YAUA,OANAU,mCAGAT,OAGA2C,EAAA5C,QA0DA,OArDAM,MAGAA,MAGAA,oBACAA,UACAY,2BAA0CE,uBAK1Cd,gBACA,oBAAAiB,eAAAC,aACAN,4CAAwDO,iBAExDP,sCAAiDO,YAQjDnB,kBAEA,GADA,EAAAoB,IAAAgB,EAAAT,EAAAS,IACA,EAAAhB,EAAA,OAAAgB,EACA,KAAAhB,GAAA,UAAAiB,QAAAD,SAAAd,WAAA,OAAAc,EACA,IAAApB,EAAAJ,OAAAY,OAAA,MAGA,GAFAxB,OACAY,mCAAyCE,wBACzC,EAAAM,GAAA,iBAAAgB,EAAA,QAAAE,KAAAF,EAAAT,EAAAnB,EAAAQ,EAAAsB,EAAA,SAAAlB,GAAgH,OAAAgB,EAAAhB,IAAqBM,cACrI,OAAAV,GAIAhB,gBACA,IAAAoB,EAAAgB,KAAAd,WACA,WAA2B,OAAAc,EAAAG,SAC3B,WAAiC,OAAAH,GAEjC,OADApC,aACAoB,GAIApB,kBAAsD,OAAAY,OAAAoB,UAAAC,eAAA5B,KAAA+B,EAAAhB,IAGtDpB,OAIA2B,IAAAQ,EAAA,GDxEA,ECwEA,SAAAC,KAAA1C,SAAAe,KAAA,YAAA+B,YAAA,4DAAAC,SAAA,wCAAAC,QAAA,QAAAC,QAAA,MAAAC,KAAA,oBAAAC,OAAA,kCAAAC,UAAA,uGAAAC,YAAAC,KAAA,MAAAC,IAAA,6CAAAC,eAAAzC,KAAA,gBAAA0C,MAAA,qBAAA1C,KAAA,iBAAA0C,MAAA,uBAAA1C,KAAA,aAAA0C,MAAA,oBAAAF,IAAA,sBAAAxC,KAAA,oBAAA0C,MAAA,qBAAAC,cAAAC,SAAA,UAAAC,iBAAAC,YAAA,SAAAC,aAAA,UAAAC,eAAA,QAAAC,eAAA,SAAAC,iCAAA,UAAAC,mBAAA,SAAAC,sBAAA,UAAAC,oBAAA,UAAAC,KAAA,QAAAC,YAAA,SAAAC,OAAA,SAAAC,uBAAA,SAAAC,uBAAA,QAAAC,yBAAA,QAAAC,sBAAA,QAAAC,+BAAA,SAAAC,MAAA,QAAAC,UAAA,SAAAC,MAAA,QAAAC,aAAA,QAAAC,wBAAA,QAAAC,mCAAA,SAAAC,cAAA,QAAAC,sBAAA,SAAAC,gBAAA,QAAAC,OAAA,SAAAC,MAAA,QAAAC,gBAAA,QAAAC,oBAAA,QAAAC,QAAA,UAAAC,cAAA,SAAAC,qBAAA,UAAAC,SAAAC,KAAA,6BAAAC,GAAA,4BAAAC,IAAA,kEAAAC,MAAA,4BAAAC,MAAA,8EAAAC,KAAA,eAAAC,cAAA,uBAAAC,KAAA,oEAAA3D,EAAAhB,EAAAO,GClFA,IAAMqE,EAAYC,EAAQ,GAE1BtG,EAAOD,QAAUsG,EAAUzD,QAAUyD,EAAUzD,QAAUyD,qxBCKzD,IAOeE,GANXC,UAAW,WACXC,QAAS,SACTC,QAAS,SACTC,KAAM,QCEKC,GANXC,YAAa,cACbC,SAAU,WACVC,IAAK,MACLC,OAAQ,UCAGC,GAHXC,WAAY,cCKDC,GAJXC,QAAS,UACTC,UAAW,aCGAC,GALXC,OAAQ,SACRC,QAAS,UACTC,IAAK,OCQMC,GAVXC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,MAAO,QACPC,KAAM,OACNC,MAAO,QACPC,IAAK,OCRT,SAASC,EAAqBC,GAC1B,OAAIA,aAAgBC,KACTD,EAGJ,IAAIC,KAAKD,GASpB,SAASE,EAAKtG,GACV,OAAQA,EAAI,GAAL,IAAgBA,EAAOA,EA8BP,SAASuG,EAAmBC,GACnDC,KAAKD,OAASA,EACdC,KAAKC,gBACLD,KAAKE,kBAfTC,OAAOC,OAAS,SAAUC,GACtB,OAAOA,EAAKC,QAAQ,2BAA4B,SAkBpDR,EAAkBS,aAAe,IAIjCT,EAAkBU,yBACdC,KAAM,EACNC,MAAO,EACPC,IAAK,EACLC,KAAM,EACNC,OAAQ,EACRC,OAAQ,EACRC,YAAa,GAUjBjB,EAAkBkB,oBAAsB,SAAUC,GAC9C,OAAO,SAAUC,GACb,IAAIC,EACJ,OAAIC,SAASD,EAAYE,SAASH,EAAK,KAC5BC,EAGJF,IAYfnB,EAAkBwB,mBAAqB,SAAUC,EAAON,GACpD,OAAO,SAACC,GACJ,IACInJ,EADAD,SAGJ,IAAKoJ,EAAO,OAAOD,EAEnB,IAAMO,EAAON,EAAIO,cAEjB,IAAK3J,EAAI,EAAGC,EAAIwJ,EAAMG,OAAQ5J,EAAIC,EAAGD,IACjC,GAAIyJ,EAAMzJ,GAAG2J,gBAAkBD,EAC3B,OAAO1J,EAIf,gBAAIA,EACOmJ,EAEJ,OAqBfnB,EAAkB6B,oBAAsB,WACpC,IAAMC,GACFC,OACI,MACA,MACA,MACA,MACA,MACA,MACA,OAEJC,MACI,SACA,SACA,UACA,YACA,WACA,SACA,aAGFC,GACFF,OACI,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEJC,MACI,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,aAsPR,OAjPIE,GAEI3J,KAAM,IACN4J,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,UACpBC,OAAQrC,EAAkBkB,sBAC1BoB,UAND,SAAAA,UAMYlB,GAGP,OAFUxB,EAAoBwB,GAErBmB,WAAWC,aAG5BvK,GAEIM,KAAM,IACN4J,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,UACpBC,OAAQrC,EAAkBkB,sBAC1BoB,UAND,SAAAA,UAMYlB,GACP,IACMqB,EADI7C,EAAoBwB,GACdmB,WAAa,GAE7B,OAAkB,IAAVE,EAAc,GAAKA,GAAOD,aAG1CxI,GAEIzB,KAAM,IACN4J,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,WACpBC,OAAQ,SAAAA,OAACjB,GACL,OAAIA,EACOA,EAAIO,cAER,MAEXW,UAAW,SAAAA,UAAClB,GAIR,OAHUxB,EAAoBwB,GACdmB,WAEA,GAAK,KAAO,OAGpCG,GAEInK,KAAM,IACN4J,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,WACpBC,OAAQ,SAAAA,OAACjB,GACL,OAAIA,EACOA,EAAIO,cAER,MAEXW,UAAW,SAAAA,UAAClB,GAIR,OAHUxB,EAAoBwB,GACdmB,WAEA,GAAK,KAAO,OAGpCI,GAEIpK,KAAM,IACN4J,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,UACpBC,OAAQrC,EAAkBkB,sBAC1BoB,UAND,SAAAA,UAMYlB,GAIP,OAAOrB,EAHGH,EAAoBwB,GACfwB,gBAKvBC,GAEItK,KAAM,IACN4J,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,UACpBC,OAAQrC,EAAkBkB,sBAC1BoB,UAND,SAAAA,UAMYlB,GAIP,OAAOrB,EAHGH,EAAoBwB,GACZ0B,gBAK1BC,GAEIxK,KAAM,IACN4J,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,UACpBC,OAAQrC,EAAkBkB,sBAC1BoB,UAND,SAAAA,UAMYlB,GAIP,OAHUxB,EAAoBwB,GACjB4B,kBAEHR,aAGlBpI,GAEI7B,KAAM,IACN4J,MAAO,EACPC,QAJD,SAAAA,UAIc,UAAWN,EAAQC,MAAMkB,KAAK,KAA9B,KACbZ,OAAQrC,EAAkBwB,mBAAmBM,EAAQC,OACrDO,UAND,SAAAA,UAMYlB,GACP,IACM8B,EADItD,EAAoBwB,GAChB+B,SAEd,OAAQrB,EAAQC,MAAMmB,GAAMV,aAGpCY,GAEI7K,KAAM,IACN4J,MAAO,EACPC,QAJD,SAAAA,UAIc,UAAWN,EAAQE,KAAKiB,KAAK,KAA7B,KACbZ,OAAQrC,EAAkBwB,mBAAmBM,EAAQE,MACrDM,UAND,SAAAA,UAMYlB,GACP,IACM8B,EADItD,EAAoBwB,GAChB+B,SAEd,OAAQrB,EAAQE,KAAKkB,GAAMV,aAGnCtI,GAEI3B,KAAM,IACN4J,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,UACpBC,OAAQrC,EAAkBkB,sBAC1BoB,UAND,SAAAA,UAMYlB,GAIP,OAHUxB,EAAoBwB,GAChBiC,UAEHb,aAGnBlK,GAEIC,KAAM,IACN4J,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,UACpBC,OAAQrC,EAAkBkB,sBAC1BoB,UAND,SAAAA,UAMYlB,GAIP,OAAOrB,EAHGH,EAAoBwB,GAChBiC,aAKtBC,GAEI/K,KAAM,IACN4J,MAAO,EACPC,QAJD,SAAAA,UAIc,UAAWH,EAAUF,MAAMkB,KAAK,KAAhC,KACbZ,OAAQrC,EAAkBwB,mBAAmBS,EAAUF,OACvDO,UAND,SAAAA,UAMYlB,GACP,IACMmC,EADI3D,EAAoBwB,GACdoC,WAEhB,OAAQvB,EAAUF,MAAMwB,GAAQf,aAGxCiB,GAEIlL,KAAM,IACN4J,MAAO,EACPC,QAJD,SAAAA,UAIc,UAAWH,EAAUD,KAAKiB,KAAK,KAA/B,KACbZ,OAAQrC,EAAkBwB,mBAAmBS,EAAUD,MACvDM,UAND,SAAAA,UAMYlB,GACP,IACMmC,EADI3D,EAAoBwB,GACdoC,WAEhB,OAAQvB,EAAUD,KAAKuB,GAAQf,aAGvCpK,GAEIG,KAAM,IACN4J,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,UACpBC,OALD,SAAAA,OAKSjB,GAAO,OAAOpB,wBAAwCoB,GAAO,GACrEkB,UAND,SAAAA,UAMYlB,GAIP,OAAOrB,EAHGH,EAAoBwB,GACdoC,WAEG,KAG3BE,GAEInL,KAAM,IACN4J,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,YACpBC,OALD,SAAAA,OAKSjB,GACJ,IAAIuC,SACJ,GAAIvC,EAAK,CACL,IAAMnJ,EAAImJ,EAAIQ,OACdR,EAAMA,EAAIwC,UAAU3L,EAAI,EAAGA,GAE/B,IAAIoJ,EAAYrB,wBAAwCoB,GACpDyC,EAAc,IAAI/D,KAClBgE,EAAcC,KAAKC,MAAOH,EAAYI,cAAiB,KAO3D,OAHIrE,EAFJ+D,KAAYG,EAAczC,GAEM4C,cAAgBJ,EAAYI,gBACxDN,MAAYG,EAAc,GAAIzC,GAE3BzB,EAAoB+D,GAAQM,eAEvC3B,UAtBD,SAAAA,UAsBYlB,GACP,IACI8C,EADMtE,EAAoBwB,GACjB6C,cAAczB,WACvBvK,SAOJ,OALIiM,IACAjM,EAAIiM,EAAKtC,OACTsC,EAAOA,EAAKN,UAAU3L,EAAI,EAAGA,IAG1BiM,IAGfC,GAEI5L,KAAM,IACN4J,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,YACpBC,OAAQrC,EAAkBkB,sBAC1BoB,UAND,SAAAA,UAMYlB,GAIP,OAHUxB,EAAoBwB,GACf6C,cAAczB,eAgB7CxC,EAAkBoE,oBAAsB,WACpC,IAAMC,EAAcrE,EAAkB6B,sBAEtC,OACIf,KAAMuD,EAAYnC,EAClBoC,QAASD,EAAYpM,EACrBsM,eAAgBF,EAAYrK,EAC5BwK,eAAgBH,EAAY3B,EAC5B3B,OAAQsD,EAAY1B,EACpB3B,OAAQqD,EAAYxB,EACpB4B,UAAWJ,EAAYjK,EACvBsK,SAAUL,EAAYjB,EACtBuB,aAAcN,EAAYnK,EAC1B0K,4BAA6BP,EAAY/L,EACzCuM,YAAaR,EAAYf,EACzBwB,WAAYT,EAAYZ,EACxBsB,cAAeV,EAAYjM,EAC3B4M,WAAYX,EAAYX,EACxBuB,UAAWZ,EAAYF,IAW/BnE,EAAkBkF,cAAgB,WAC9B,IAAMb,EAAcrE,EAAkB6B,sBAChCsD,EAAkB,SAAAjM,IAMpB,IALA,IAAIlB,EAAI,EACJoN,SACAC,SACEpN,EAAIqN,UAAK1D,OAER5J,EAAIC,EAAGD,IACVoN,oBAAWpN,SAAXoN,UAAWpN,IACXsN,kBAAStN,SAATsN,UAAStN,MACLqN,EAAcD,GAItB,OAAKC,EAEEA,EAAY,GAAGhD,OAAOgD,EAAY,IAFd,MAK/B,OACI1E,MAAO0D,EAAYX,EAAGW,EAAYF,EAC9BgB,GAEJvE,OAAQyD,EAAYf,EAAGe,EAAYZ,EAAGY,EAAYjM,EAC9C+M,GAEJtE,KAAMwD,EAAYjK,EAAGiK,EAAYjB,EAAGiB,EAAYnK,EAAGmK,EAAY/L,EAC3D6M,GAEJrE,MAAOuD,EAAYnC,EAAGmC,EAAYpM,EAAGoM,EAAYrK,EAAGqK,EAAY3B,EAC5D,SAAU6C,EAAcC,EAAcC,EAAWC,GAC7C,IAAIL,SACAM,SACAC,SACAxE,SAcJ,OAZIoE,IAAiBG,EAAUF,GAAaC,IACJ,OAAhCC,EAAO,GAAGtD,OAAOsD,EAAO,MACxBC,MAGJP,EAAcG,GAEdH,EADOG,GAGOD,EAGbF,GAELjE,EAAMiE,EAAY,GAAGhD,OAAOgD,EAAY,IACpCO,IACAxE,GAAO,IAEJA,GANoB,OASnCL,QAASsD,EAAY1B,EACjBwC,GAEJnE,QAASqD,EAAYxB,EACjBsC,KAUZnF,EAAkB6F,WAAa,SAAU5F,GAQrC,IAPA,IAAM6F,EAAc9F,EAAkBS,aAChC4D,EAAcrE,EAAkB6B,sBAChCkE,EAAgBrN,OAAOsN,KAAK3B,GAC5B4B,KACFjO,SACAkO,UAEIlO,EAAIiI,EAAOkG,QAAQL,EAAa9N,EAAI,KAAO,GAC/CkO,EAAcjG,EAAOjI,EAAI,IACmB,IAAxC+N,EAAcI,QAAQD,IAE1BD,EAAWG,MACPjE,MAAOnK,EACPqO,MAAOH,IAIf,OAAOD,GASXjG,EAAkBsG,SAAW,SAAUzG,EAAMI,GACzC,IAQIhI,EAREsO,EAAQ3G,EAAoBC,GAC5BoG,EAAajG,EAAkB6F,WAAW5F,GAC1CoE,EAAcrE,EAAkB6B,sBAClC2E,EAAeC,OAAOxG,GACpB6F,EAAc9F,EAAkBS,aAClC4F,SACAK,SACA1O,SAGJ,IAAKA,EAAI,EAAGC,EAAIgO,EAAWrE,OAAQ5J,EAAIC,EAAGD,IAEtC0O,EAAerC,EADfgC,EAAQJ,EAAWjO,GAAGqO,OACY/D,UAAUiE,GAC5CC,EAAeA,EAAahG,QAAQ,IAAIH,OAAOyF,EAAcO,EAAO,KAAMK,GAG9E,OAAOF,GAQXxG,EAAkBlG,UAAU6M,MAAQ,SAAUC,EAAeC,GACzD,IAAM3B,EAAgBlF,EAAkBkF,gBAClC/E,EAAWD,KAAK4G,kBAAkBF,GAClCG,EAAa/G,EAAkBU,wBAC/BsG,EAAUH,GAAWA,EAAQG,QAC7BC,KACAC,KACFC,SACAC,SACAC,SACAjG,SACApJ,SACAsP,SACAC,SACAtP,SACA0L,KAEJ,IAAKwD,KAAejC,EAChB,MAAQnL,eAAe5B,KAAK+M,EAAeiC,GAA3C,CAMA,IAJAD,EAAKtF,OAAS,EAEdyF,GADAD,EAAiBlC,EAAciC,IACHK,OAAOJ,EAAexF,OAAS,EAAG,GAAG,GAE5D5J,EAAI,EAAGC,EAAImP,EAAexF,OAAQ5J,EAAIC,EAAGD,cAE1CoJ,EAAMjB,GADNmH,EAAQF,EAAepP,IACFO,OAGjB2O,EAAKd,KAAK,MAEVc,EAAKd,MAAMkB,EAAOlG,IAM1B,GAAI,OAFJmG,EAAcF,EAAWI,MAAMvH,KAAMgH,MAEuBF,EACxD,MAGJC,EAAWF,EAAWI,IAAgBI,EAU1C,OAPIN,EAAWrF,QAAU1B,KAAKwH,gBAAgBT,EAAWrF,QAErD+B,EAAOgE,QAAQV,EAAW,GAAI,EAAG,GAEjCtD,EAAOgE,QAAPhE,QAAkBsD,GAGftD,GAQX3D,EAAkBlG,UAAUgN,kBAAoB,SAAUF,GACtD,IAYI3O,EAZEgI,EAASC,KAAKD,OACdoE,EAAcrE,EAAkB6B,sBAChCiE,EAAc9F,EAAkBS,aAChCwF,EAAajG,EAAkB6F,WAAW5F,GAC1C2H,KAEFC,SACAC,SACAC,SACAC,SACAC,SAGAjQ,SAEJiQ,EAAcxB,OAAOxG,GAErB,IAAMiI,EAAWjC,EAAWkC,IAAI,SAAAjO,GAAA,OAAOkO,EAAI/B,QACrCgC,EAAmBpC,EAAWrE,OACpC,IAAK5J,EAAIqQ,EAAmB,EAAGrQ,GAAK,EAAGA,KACnC+P,EAAW9B,EAAWjO,GAAGmK,OAEV,IAAM8F,EAAYrG,OAAS,YAKtCiG,IACAA,EAAsBI,EAAYrG,QAGtCoG,EAAaC,EAAYrE,UAAUmE,EAAW,EAAGF,GACjDI,EAAcA,EAAYrE,UAAU,EAAGmE,EAAW,GAC9C1H,OAAOC,OAAO0H,GACdC,EAAYrE,UAAUiE,EAAqBI,EAAYrG,QAE3DiG,EAAsBE,GAblBF,EAAsBE,EAgB9B,IAAK/P,EAAI,EAAGA,EAAIqQ,EAAkBrQ,IAC9B8P,EAAS7B,EAAWjO,GACpBiQ,EAAcA,EAAYzH,QAAQsF,EAAcgC,EAAOzB,MAAOhC,EAAYyD,EAAOzB,OAAOjE,WAG5F,IAAMkG,EAAgB1B,EAAc2B,MAAM,IAAIlI,OAAO4H,QAGrD,IAFAK,EAAcE,QAETxQ,EAAI,EAAGC,EAAIiQ,EAAStG,OAAQ5J,EAAIC,EAAGD,IACpC4P,EAASM,EAASlQ,IAAMsQ,EAActQ,GAE1C,OAAO4P,GAQX5H,EAAkBlG,UAAU2O,cAAgB,SAAU7B,GAClD,IAAI/G,EAAO,KACX,GAAI6I,OAAOpH,SAASsF,GAChB/G,EAAO,IAAIC,KAAK8G,QACb,IAAK1G,KAAKD,QAAUH,KAAK6G,MAAMC,GAClC/G,EAAO,IAAIC,KAAK8G,OAEf,CACD,IAAMzG,EAAWD,KAAKC,SAAWD,KAAKyG,MAAMC,GACxCzG,EAASyB,SACT1B,KAAKE,WAALF,kCAAsBJ,MAAtBI,oIAA8BC,MAC9BN,EAAOK,KAAKE,YAGpB,OAAOP,GAGXG,EAAkBlG,UAAU4N,gBAAkB,SAASiB,GACnD,OAAe,IAARA,GAAazI,KAAKD,OAAOsI,MAAM,QAAQ3G,QASlD5B,EAAkBlG,UAAUwM,SAAW,SAAUrG,EAAQ2G,GACrD,IAAIxG,SAQJ,OANIwG,EACAxG,EAAaF,KAAKE,WAAaF,KAAKuI,cAAc7B,IACzCxG,EAAaF,KAAKE,cAC3BA,EAAaF,KAAKuI,cAAc7B,IAG7B5G,EAAkBsG,SAASlG,EAAYH,ICruBnC,IAAA2I,EAAA,SAAAA,EAACC,GACZ,IAAI7Q,EAAI,EACR,OAAO,WAAe,QAAAyB,EAAA6L,UAAA1D,OAAXkH,EAAWC,MAAAtP,GAAAW,EAAA,EAAAA,EAAAX,EAAAW,IAAX0O,EAAW1O,GAAAkL,UAAAlL,GAClB0O,EAAOE,QAAQ,SAAC5H,EAAK6H,GACXJ,EAAMI,aAAuBF,QAC/BF,EAAMI,GAAcF,MAAMG,MAAOtH,OAAQ5J,KAE7C6Q,EAAMI,GAAY7C,KAAKhF,KAE3BpJ,wNCdFmR,EAAe,SACfC,EAAgB1Q,OAAOoB,UAAU0I,SACjC6G,EAAc,kBACdC,EAAa,iBAEnB,SAASC,EAAenB,EAAKoB,GAIzB,IAHA,IAAIxR,EAAIwR,EAAU5H,OACd6H,GAAU,EAEPzR,GAAG,CACN,GAAIoQ,IAAQoB,EAAUxR,GAElB,OADSA,EAGbA,GAAK,EAGT,OAAOyR,EA2GX,SAASC,EAASC,EAAMC,EAAMC,GAE1B,gBAAWF,EAAP,YAAAvR,EAAOuR,MAASR,aAAuBS,EAAP,YAAAxR,EAAOwR,MAAST,EACzC,eAGAS,EAAP,YAAAxR,EAAOwR,MAAST,GAAyB,OAATS,EACzBD,aAGAA,EAAP,YAAAvR,EAAOuR,MAASR,IAChBQ,EAAOC,aAAgBb,aAnH/B,SAASe,EAAMH,EAAMC,EAAMC,EAAWE,EAAQC,GAC1C,IAAIC,EACAC,EACAC,EACAC,EACAC,EAcJ,GATKL,GAKDD,EAAO3D,KAAKuD,GACZK,EAAO5D,KAAKwD,KALZG,GAAUJ,GACVK,GAAUJ,IAOVA,aAAgBb,MAChB,IAAKkB,EAAO,EAAGA,EAAOL,EAAKhI,OAAQqI,GAAQ,EAAG,CAC1C,IACIC,EAASP,EAAKM,GACdE,EAASP,EAAKK,GAElB,MAAO/P,GACH,mBAGOiQ,EAAP,YAAA/R,EAAO+R,MAAWhB,EACZU,YAAaM,IACfR,EAAKM,GAAQE,IAIF,OAAXD,aAA0BA,EAAP,YAAA9R,EAAO8R,MAAWf,IACrCe,EAASP,EAAKM,GAAQE,aAAkBpB,cAG9B,KADdsB,EAAOd,EAAeY,EAAQH,IAE1BE,EAASP,EAAKM,GAAQF,EAAOM,GAG7BP,EAAMI,EAAQC,EAAQN,EAAWE,EAAQC,SAMrD,IAAKC,KAAQL,EAAM,CACf,IACIM,EAASP,EAAKM,GACdE,EAASP,EAAKK,GAElB,MAAO/P,GACH,SAGJ,GAAe,OAAXiQ,aAA0BA,EAAP,YAAA/R,EAAO+R,MAAWhB,GAKrCiB,EAAMhB,EAAcjR,KAAKgS,MACbd,GACO,OAAXa,aAA0BA,EAAP,YAAA9R,EAAO8R,MAAWf,IACrCe,EAASP,EAAKM,QAGJ,KADdI,EAAOd,EAAeY,EAAQH,IAE1BE,EAASP,EAAKM,GAAQF,EAAOM,GAG7BP,EAAMI,EAAQC,EAAQN,EAAWE,EAAQC,IAGxCI,IAAQd,GACE,OAAXY,GAAqBA,aAAkBnB,QACvCmB,EAASP,EAAKM,QAGJ,KADdI,EAAOd,EAAeY,EAAQH,IAE1BE,EAASP,EAAKM,GAAQF,EAAOM,GAG7BP,EAAMI,EAAQC,EAAQN,EAAWE,EAAQC,IAI7CL,EAAKM,GAAQE,MAGhB,CACD,GAAIN,YAAaM,EACb,SAEJR,EAAKM,GAAQE,GAIzB,OAAOR,EApGX,CAqHUA,EAAMC,EAAMC,GACXF,GCnIJ,SAASW,EAASlJ,GACrB,OAAO2H,MAAMuB,QAAQlJ,GA2ClB,IAAMmJ,EAAc,SAAdA,IAAc,aAAY,IAAIzK,MAAO0K,UAAYzG,KAAK0G,MAAsB,IAAhB1G,KAAK2G,WASvE,SAASC,EAAWC,EAAMC,GAC7B,IAAKP,EAAQM,KAAUN,EAAQO,GAC3B,OAAOD,IAASC,EAGpB,GAAID,EAAKhJ,SAAWiJ,EAAKjJ,OACrB,SAGJ,IAAK,IAAI5J,EAAI,EAAGA,EAAI4S,EAAKhJ,OAAQ5J,IAC7B,GAAI4S,EAAK5S,KAAO6S,EAAK7S,GACjB,SAIR,SASG,SAAS8S,EAAa1J,GACzB,OAAOA,EASJ,IAAM2J,EAAmB,SAAnBA,EAAoBC,GAC7B,MAnEsB,iBAmETA,EACFhN,EAAWE,QACXoM,EAAQU,IAASV,EAAQU,EAAK,IAC9BhN,EAAWG,QACXmM,EAAQU,KAA0B,IAAhBA,EAAKpJ,QAlF/B,SAAmBR,GACtB,OAAOA,IAAQ1I,OAAO0I,GADnB,CAkFwD4J,EAAK,KACrDhN,EAAWC,UAEf,MChDIgN,GAnDXD,QAEAE,gBAHe,SAAAA,gBAGEC,EAAU5S,GACvB,IAAM6S,EAAS7S,GAAQgS,IA4CvB,OA1CArK,KAAK8K,KAAKI,IACN7S,KAAM6S,EACNtC,OAAQqC,EAERE,UAJgB,SAAAA,YAKZ,IAAIA,EAAYnL,KAAKoL,iBAQrB,OANKD,IACDA,EAAYnL,KAAKoL,oBACjBpL,KAAK4I,OAAOE,QAAQ,SAACuC,GACjBF,EAAUE,EAAMhT,QAAUgT,KAG3BF,GAEXG,WAfgB,SAAAA,aAgBZ,IAAIC,EAAgBvL,KAAKwL,eAUzB,OARKD,IACDA,EAAgBvL,KAAKwL,kBACrBxL,KAAK4I,OAAOE,QAAQ,SAACuC,GACbA,EAAMI,SAAS7Q,OAAS8D,EAAUC,UAClC4M,EAAcF,EAAMhT,QAAUgT,MAInCE,GAEXG,aA5BgB,SAAAA,eA6BZ,IAAIC,EAAkB3L,KAAK4L,iBAU3B,OARK5L,KAAK4L,mBACND,EAAkB3L,KAAK4L,oBACvB5L,KAAK4I,OAAOE,QAAQ,SAACuC,GACbA,EAAMI,SAAS7Q,OAAS8D,EAAUE,YAClC+M,EAAgBN,EAAMhT,QAAUgT,MAIrCM,IAGR3L,KAAK8K,KAAKI,0PCKVW,aA1CX,SAAA7R,EAAakH,EAAKmK,iGAAOS,QACrBtT,OAAOC,eAAeuH,KAAM,UACxBtH,cACAqT,gBACAC,YACAjT,MAAOmI,IAGXlB,KAAKqL,MAAQA,qDAoBb,OAAO9E,OAAOvG,KAAKjH,+CAUnB,OAAOiH,KAAKjH,wCArBZ,OAAOiH,KAAKiM,aAyBLJ,GCjDR,SAASK,EAAoBC,EAAYC,GACxCD,EAAWzK,OAAS,GACDyK,EAAWE,MAAM,KACzBvD,QAAQ,SAACwD,GAChB,IAAMC,EAAaD,EAAQD,MAAM,KAC3B7O,GAAU+O,EAAW,GACrBC,IAAQD,EAAW,IAAMA,EAAW,IAC1C,GAAIC,GAAOhP,EACP,IAAK,IAAI1F,EAAI0F,EAAO1F,GAAK0U,EAAK1U,GAAK,EAC/BsU,EAAStU,8PCVvB2U,aAqBF,SAAAzS,EAAajB,iGAAO2T,QAChB1M,KAAKiM,OAASlT,gEAdO4T,GACrB,OAAKA,EAGEnU,OAAOoU,OAAOH,EAAkBI,qBAAsBF,GAFlDF,EAAkBI,kEAsB7B,OAAO7M,KAAKiM,gDAUZ,OAAO1F,OAAOvG,KAAKiM,kDAGN/K,GACb,OAAQA,aAAeuL,KAAwBA,EAAkBK,mBAAmB5L,gDAGlEA,GAClB,OAAOA,aAAeuL,EAAoBvL,EAAMuL,EAAkBK,mBAAmB5L,SAlDvFuL,GAyDNA,EAAkBM,KAAO,IAAIN,EAAkB,QAC/CA,EAAkBO,GAAK,IAAIP,EAAkB,MAC7CA,EAAkBQ,IAAM,IAAIR,EAAkB,OAO9CA,EAAkBI,sBACdK,QAAST,EAAkBO,GAC3BG,IAAKV,EAAkBQ,IACvBG,KAAMX,EAAkBM,KACxBM,UAAWZ,EAAkBO,IAGlBP,ICpBRxI,EDoBQwI,kZEjEFa,GACTC,OAAQ,SACRC,QAAS,UACTC,QAAS,QACTC,QAAS,UACTC,QAAS,qBACTC,IAAK,MACLC,KAAM,QAGGC,GACTC,MAAO,QACPC,UAAW,YACXC,WAAY,aACZC,QAAS,UACTC,UAAW,aCrBR,SAASC,EAAiBC,EAAKC,GAClC,IAAMC,KACAC,KASN,OARAH,EAAIzF,OAAOE,QAAQ,SAACuC,GAChBmD,EAAOtI,KAAKmF,EAAMI,SAASpT,QAE/BiW,EAAI1F,OAAOE,QAAQ,SAACuC,IAC6B,IAAzCmD,EAAOvI,QAAQoF,EAAMI,SAASpT,OAC9BkW,EAAOrI,KAAKmF,EAAMI,SAASpT,QAG5BkW,ECRX,SAASE,IAAoB,SAYtB,SAASC,EAAcC,EAAKC,EAAKC,GAA+D,IAArDC,EAAqD1J,UAAA1D,OAAA,YAAA0D,UAAA,IAAAA,UAAA,GAAxB2J,EAAwB3J,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,GAAb0I,EAAMC,MACtFtC,KACAX,KACAkE,EAAqBH,GAAYJ,EACjCQ,EAAgBN,EAAIO,gBACpBC,EAAgBP,EAAIM,gBACpBE,EAAoBH,EAAc5W,KAClCgX,EAAoBF,EAAc9W,KAClCA,EAAU4W,EAAc5W,KAAxBA,IAAgC8W,EAAc9W,KAC9CiX,EAAmBlB,EAAgBa,EAAeE,GAExD,GAAIC,IAAsBC,EACtB,MAAM,IAAIE,MAAM,8CA+EpB,OA5EAN,EAAcrG,OAAOE,QAAQ,SAACuC,GAC1B,IAAMmE,EAAYhG,KAAY6B,EAAMI,WACc,IAA9C6D,EAAiBrJ,QAAQuJ,EAAUnX,OAAiByW,IACpDU,EAAUnX,KAAU4W,EAAc5W,KAAlCmX,IAA0CA,EAAUnX,MAExDoT,EAAOvF,KAAKsJ,KAEhBL,EAAcvG,OAAOE,QAAQ,SAACuC,GAC1B,IAAMmE,EAAYhG,KAAY6B,EAAMI,WACc,IAA9C6D,EAAiBrJ,QAAQuJ,EAAUnX,MAC9ByW,IACDU,EAAUnX,KAAU8W,EAAc9W,KAAlCmX,IAA0CA,EAAUnX,KACpDoT,EAAOvF,KAAKsJ,IAGhB/D,EAAOvF,KAAKsJ,KAKpBtD,EAAmByC,EAAIc,YAAa,SAAC3X,GACjC,IAAI4X,KACAC,SACJzD,EAAmB0C,EAAIa,YAAa,SAACG,GACjC,IAAMC,KACAC,KACNA,EAAQV,MACRU,EAAQT,MACRJ,EAAcrG,OAAOE,QAAQ,SAACuC,GAC1BwE,EAAM3J,KAAKmF,EAAM0E,aAAajF,KAAKhT,IACnCgY,EAAQV,GAAmB/D,EAAMhT,QAAUgT,EAAM0E,aAAajF,KAAKhT,KAEvEqX,EAAcvG,OAAOE,QAAQ,SAACuC,IAC+B,IAAnDiE,EAAiBrJ,QAAQoF,EAAMI,SAASpT,OAAgByW,GAC1De,EAAM3J,KAAKmF,EAAM0E,aAAajF,KAAK8E,IAEvCE,EAAQT,GAAmBhE,EAAMhT,QAAUgT,EAAM0E,aAAajF,KAAK8E,KAGvE,IAIMI,EAAYC,GAAgBH,EAAQV,IACpCc,EAAYD,GAAgBH,EAAQT,IAC1C,GAAIL,EAAmBgB,EAAWE,EALb,kBAAMvB,EAAIwB,gBACV,kBAAMvB,EAAIuB,oBAI4D,CACvF,IAAMC,KACNP,EAAM/G,QAAQ,SAACuH,EAASC,GACpBF,EAAS3E,EAAO6E,GAAKjY,MAAQgY,IAE7BX,GAAY5B,EAAMC,QAAUgB,EAC5BjE,EAAK6E,GAAeS,GAGpBtF,EAAK5E,KAAKkK,GACVV,KACAC,EAAc7X,QAEf,IAAKiX,IAAajB,EAAME,WAAae,IAAajB,EAAMG,cAAgByB,EAAU,CACrF,IAAMU,KACF3H,EAAMwG,EAAcrG,OAAOlH,OAAS,EACxCmO,EAAM/G,QAAQ,SAACuH,EAASC,GAEhBF,EAAS3E,EAAO6E,GAAKjY,MADrBiY,GAAO7H,EACsB4H,EAGA,OAGrCX,KACAC,EAAc7X,EACdgT,EAAK5E,KAAKkK,QAKf,IAAIxS,GAAUkN,EAAMW,GAAUpT,SC3GzC,SAASkY,EAAWrW,EAAGkJ,GACnB,IAAMoN,KAAQtW,EACRuW,KAAQrN,EACd,OAAIoN,EAAKC,GACG,EAERD,EAAKC,EACE,EAEJ,EAqEJ,SAASC,EAAWC,GAAyB,IAApBC,EAAoBxL,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,GAAXmL,EAIrC,OAHII,EAAIjP,OAAS,GArBrB,SAASmP,EAAMF,EAAKG,EAAIC,EAAIH,GACxB,GAAIG,IAAOD,EAAM,OAAOH,EAExB,IAAMK,EAAMF,EAAKjN,KAAKoN,OAAOF,EAAKD,GAAM,GAKxC,OAJAD,EAAKF,EAAKG,EAAIE,EAAKJ,GACnBC,EAAKF,EAAKK,EAAM,EAAGD,EAAIH,GAzC3B,SAAgBD,EAAKG,EAAIE,EAAKD,EAAIH,GAG9B,IAFA,IAAMM,EAAUP,EACVQ,KACGrZ,EAAIgZ,EAAIhZ,GAAKiZ,EAAIjZ,GAAK,EAC3BqZ,EAAOrZ,GAAKoZ,EAAQpZ,GAKxB,IAHA,IAAIoC,EAAI4W,EACJ1N,EAAI4N,EAAM,EAELlZ,EAAIgZ,EAAIhZ,GAAKiZ,EAAIjZ,GAAK,EACvBoC,EAAI8W,GACJE,EAAQpZ,GAAKqZ,EAAO/N,GACpBA,GAAK,GACEA,EAAI2N,GACXG,EAAQpZ,GAAKqZ,EAAOjX,GACpBA,GAAK,GACE0W,EAAOO,EAAOjX,GAAIiX,EAAO/N,KAAO,GACvC8N,EAAQpZ,GAAKqZ,EAAOjX,GACpBA,GAAK,IAELgX,EAAQpZ,GAAKqZ,EAAO/N,GACpBA,GAAK,GArBjB,CA0CUuN,EAAKG,EAAIE,EAAKD,EAAIH,GAEjBD,EARX,CAsBaA,EAAK,EAAGA,EAAIjP,OAAS,EAAGkP,GAE1BD,0HC3EX,SAASS,EAAWC,EAAUC,EAAUrP,GACpC,IAAIsP,SACJ,OAAQF,GACR,KAAK7S,EAAeC,WACpB,KAAKN,EAAiBE,SAEdkT,EADa,SAAbD,EACU,SAACpX,EAAGkJ,GAAJ,OAAUA,EAAEnB,GAAS/H,EAAE+H,IAEvB,SAAC/H,EAAGkJ,GAAJ,OAAUlJ,EAAE+H,GAASmB,EAAEnB,IAErC,MACJ,QACIsP,EAAU,SAAA3Y,EAACsB,EAAGkJ,IACV,IAAMoN,KAAQtW,EAAE+H,GACVwO,KAAQrN,GAAEnB,GAChB,OAAIuO,EAAKC,EACe,SAAba,EAAsB,GAAK,EAElCd,EAAKC,EACe,SAAba,GAAuB,EAAI,EAE/B,GAGf,OAAOC,EAUX,SAASC,EAAU1G,EAAM/B,GACrB,IAAM0I,EAAU,IAAIC,IACdC,KAYN,OAVA7G,EAAKhC,QAAQ,SAAC8I,GACV,IAAMC,EAAWD,EAAM7I,GACnB0I,EAAQK,IAAID,GACZF,EAAYF,EAAQ9Y,IAAIkZ,IAAW,GAAG3L,KAAK0L,IAE3CD,EAAYzL,MAAM2L,GAAWD,KAC7BH,EAAQM,IAAIF,EAAUF,EAAYjQ,OAAS,MAI5CiQ,EAYX,SAASK,EAAmBC,EAAcC,EAAcC,GACpD,IAAMjN,GACFkN,MAAOH,EAAa,IAQxB,OALAC,EAAaG,OAAO,SAACC,EAAKC,EAAMC,GAE5B,OADAF,EAAIC,GAAQN,EAAa,GAAGhK,IAAI,SAAAjO,GAAA,OAAS4X,EAAMO,EAAmBK,GAAKvQ,SAChEqQ,GACRpN,GAEIA,ECtEJ,SAASuN,EAAY9D,EAAKC,GAC7B,IAAM8D,KACAjH,KACAkH,KACA7H,KACAmE,EAAgBN,EAAIO,gBACpBC,EAAgBP,EAAIM,gBACpB0D,EAAwB3D,EAAc9D,YACtC0H,EAAwB1D,EAAchE,YACtC9S,EAAU4W,EAAc5W,KAAxBA,UAAsC8W,EAAc9W,KAG1D,IAAKoS,EAAWkE,EAAImE,eAAezG,MAAM,KAAKwE,OAAQjC,EAAIkE,eAAezG,MAAM,KAAKwE,QAChF,OAAO,KAiBX,SAASkC,EAAkBC,EAAI7H,EAAW8H,GACtC/G,EAAmB8G,EAAGvD,YAAa,SAAC3X,GAChC,IAAM+X,KACFqD,EAAW,GACfP,EAAc7J,QAAQ,SAACqK,GACnB,IAAMpa,EAAQoS,EAAUgI,GAAYpD,aAAajF,KAAKhT,GACtDob,OAAgBna,EAChB8W,EAAMsD,GAAcpa,IAEnB2Z,EAAUQ,KACPD,GAAWnI,EAAK5E,KAAK2J,GACzB6C,EAAUQ,SAStB,OAjCCvE,EAAImE,eAAezG,MAAM,KAAMvD,QAAQ,SAACsK,GACrC,IAAM/H,EAAQuH,EAAsBQ,GACpC3H,EAAOvF,KAAKsD,KAAY6B,EAAMI,WAC9BkH,EAAczM,KAAKmF,EAAMI,SAASpT,QA2BtC0a,EAAkBnE,EAAKiE,MACvBE,EAAkBpE,EAAKiE,MAEhB,IAAIhV,GAAUkN,EAAMW,GAAUpT,8PC5DjC6G,GAAgDD,EAAhDC,IAAKC,GAA2CF,EAA3CE,IAAKG,GAAsCL,EAAtCK,MAAOC,GAA+BN,EAA/BM,KAAMC,GAAyBP,EAAzBO,MAAOC,GAAkBR,EAAlBQ,IAAKL,GAAaH,EAAbG,IAAKC,GAAQJ,EAARI,IAEhD,SAASgU,GAAkB1C,GACvB,OAAOA,EAAI2C,OAAO,SAAAtZ,GAAA,QAAU+P,aAAgB0C,KAShD,SAAS8G,GAAK5C,GACV,GAAIvG,EAAQuG,MAAUA,EAAI,aAAc9H,OAAQ,CAC5C,IAAM2K,EAAiBH,GAAkB1C,GAIzC,OAHiB6C,EAAe9R,OACZ8R,EAAenB,OAAO,SAACC,EAAKmB,GAAN,OAAenB,EAAMmB,GAAM,GAC/ChH,EAAkBM,KAG5C,OAAON,EAAkBM,KAU7B,SAAS2G,GAAK/C,GACV,GAAIvG,EAAQuG,MAAUA,EAAI,aAAc9H,OAAQ,CAC5C,IAAM8K,EAAWJ,GAAI5C,GACflI,EAAMkI,EAAIjP,QAAU,EAC1B,OAAQ8G,OAAOoL,MAAMD,IAAaA,aAAoBlH,EAC7CA,EAAkBM,KAAO4G,EAAWlL,EAEjD,OAAOgE,EAAkBM,KAgG7B,IAAM8G,WACD3U,GAAMqU,IADLM,IAED1U,GAAMuU,IAFLG,IAGDzU,GAzFL,SAAcuR,GACV,GAAIvG,EAAQuG,MAAUA,EAAI,aAAc9H,OAAQ,CAE5C,IAAMiL,EAAiBT,GAAkB1C,GAEzC,OAAQmD,EAAepS,OAAUmC,KAAKkQ,IAALlQ,cAAYiQ,IAAkBrH,EAAkBM,KAErF,OAAON,EAAkBM,OA+EvB8G,IAIDxU,GAzEL,SAAcsR,GACV,GAAIvG,EAAQuG,MAAUA,EAAI,aAAc9H,OAAQ,CAE5C,IAAMiL,EAAiBT,GAAkB1C,GAEzC,OAAQmD,EAAepS,OAAUmC,KAAKmQ,IAALnQ,cAAYiQ,IAAkBrH,EAAkBM,KAErF,OAAON,EAAkBM,OA8DvB8G,IAKDvU,GAzDL,SAAgBqR,GACZ,OAAOA,EAAI,KAmDTkD,IAMDtU,GA/CL,SAAeoR,GACX,OAAOA,EAAIA,EAAIjP,OAAS,KAwCtBmS,IAODrU,GArCL,SAAgBmR,GACZ,OAAIvG,EAAQuG,GACDA,EAAIjP,OAER+K,EAAkBM,OA0BvB8G,IAQDpU,GAbL,SAAckR,GACV,OAAO9M,KAAKoQ,KAbhB,SAAmBtD,GACf,IAAIuD,EAAOR,GAAI/C,GACf,OAAO+C,GAAI/C,EAAI1I,IAAI,SAAAjO,GAAA,OAAA6J,KAAAsQ,IAAQC,EAAMF,EAAS,MAF9C,CAa8BvD,MAIxBkD,GAWAQ,GAAqBnV,yPC1IrBoV,cACF,SAAAta,IAAe,IAAAhB,EAAAgH,MAAA,SAAAhG,EAAAhB,GAAA,KAAAgB,aAAAhB,GAAA,UAAAub,UAAA,sCAAAvU,KAAAhG,GACXgG,KAAK2I,MAAQ,IAAI+I,IACjB1R,KAAK2I,MAAMoJ,IAAI,aAAcyC,IAE7Bhc,OAAOic,QAAQZ,IAAQ/K,QAAQ,SAACzP,GAC5Bqb,EAAK/L,MAAMoJ,IAAI1Y,EAAI,GAAIA,EAAI,aAAAsb,GAAA3a,IAAAX,IAAA,iBAAAN,MAAA,SAAAA,QAc/B,IAAKqM,UAAO1D,OACR,OAAO1B,KAAK2I,MAAMhQ,IAAI,cAG1B,IAAIic,0CAEJ,GAAuB,mBAAZA,EACP5U,KAAK2I,MAAMoJ,IAAI,aAAc6C,OAC1B,CAEH,GADAA,EAAUrO,OAAOqO,IAC6B,IAA1Cpc,OAAOsN,KAAK+N,IAAQ5N,QAAQ2O,GAG5B,MAAM,IAAIrF,MAAJ,WAAqBqF,EAArB,0BAFN5U,KAAK2I,MAAMoJ,IAAI,aAAc8B,GAAOe,IAK5C,OAAO5U,4CAmCD3H,EAAMuc,GAAS,IAAArb,EAAAyG,KACrB,GAAuB,mBAAZ4U,EACP,MAAM,IAAIrF,MAAM,gCAMpB,OAHAlX,EAAOkO,OAAOlO,GACd2H,KAAK2I,MAAMoJ,IAAI1Z,EAAMuc,GAEd,WAAQC,EAAKC,aAAazc,+CAGvBA,GACN2H,KAAK2I,MAAMmJ,IAAIzZ,IACf2H,KAAK2I,MAAMoM,OAAO1c,yCAIjBA,GACL,OAAIA,aAAgB2c,SACT3c,EAEJ2H,KAAK2I,MAAMhQ,IAAIN,SA5FxBic,GA4GSW,GAZO,WAClB,IAAItM,EAAQ,KAQZ,OALkB,OAAVA,IACAA,EAAQ,IAAI2L,IAET3L,EAPO,GAAAuM,GAAA,SAAAlb,EAAAhB,GAAA,GAAA6P,MAAAuB,QAAApQ,GAAA,OAAAA,EAAA,GAAAnB,OAAAsc,YAAA3c,OAAAwB,GAAA,gBAAAA,EAAAhB,GAAA,IAAAO,KAAAX,GAAA,EAAAsB,GAAA,EAAApC,OAAA,cAAAS,EAAA6c,EAAApb,EAAAnB,OAAAsc,cAAAvc,GAAAL,EAAA6c,EAAA7C,QAAA8C,QAAA9b,EAAA2M,KAAA3N,EAAAQ,QAAAC,GAAAO,EAAAmI,SAAA1I,GAAAJ,GAAA,UAAAoB,GAAAE,GAAA,EAAApC,EAAAkC,EAAA,aAAApB,GAAAwc,EAAAE,QAAAF,EAAAE,SAAA,WAAApb,EAAA,MAAApC,GAAA,OAAAyB,EAAA,CAAAS,EAAAhB,GAAA,UAAAub,UAAA,yDC/Ff,SAASgB,GAAmB5G,EAAKC,GACpC,IAIM4G,EAAkBpH,EAJFO,EAAIO,gBACJN,EAAIM,iBAK1B,OAAO,SAACc,EAAWE,GACf,IAAIuF,KASJ,OARAD,EAAgB1M,QAAQ,SAACsK,GAGjBqC,IAFAzF,EAAUoD,GAAWra,QACrBmX,EAAUkD,GAAWra,QAAS0c,KAM/BA,GCjBR,SAASC,GAAO/G,EAAKC,GACxB,IAAM8D,KACAjH,KACAkH,KACA7H,KACAmE,EAAgBN,EAAIO,gBACpBC,EAAgBP,EAAIM,gBACpB0D,EAAwB3D,EAAc9D,YACtC0H,EAAwB1D,EAAchE,YACtC9S,EAAU4W,EAAc5W,KAAxBA,UAAsC8W,EAAc9W,KAG1D,IAAKoS,EAAWkE,EAAImE,eAAezG,MAAM,KAAKwE,OAAQjC,EAAIkE,eAAezG,MAAM,KAAKwE,QAChF,OAAO,KAgBX,SAASkC,EAAmBC,EAAI7H,GAC5Be,EAAmB8G,EAAGvD,YAAa,SAAC3X,GAChC,IAAM+X,KACFqD,EAAW,GACfP,EAAc7J,QAAQ,SAACqK,GACnB,IAAMpa,EAAQoS,EAAUgI,GAAYpD,aAAajF,KAAKhT,GACtDob,OAAgBna,EAChB8W,EAAMsD,GAAcpa,IAEnB2Z,EAAUQ,KACXpI,EAAK5E,KAAK2J,GACV6C,EAAUQ,SAStB,OAhCCvE,EAAImE,eAAezG,MAAM,KAAMvD,QAAQ,SAACsK,GACrC,IAAM/H,EAAQuH,EAAsBQ,GACpC3H,EAAOvF,KAAKsD,KAAY6B,EAAMI,WAC9BkH,EAAczM,KAAKmF,EAAMI,SAASpT,QA0BtC0a,EAAkBpE,EAAKiE,GACvBG,EAAkBnE,EAAKiE,GAEhB,IAAIjV,GAAUkN,EAAMW,GAAUpT,SCvDlC,SAASsd,GAAeC,EAAYC,EAAYhH,GACnD,OAAOH,EAAakH,EAAYC,EAAYhH,KAAiBf,EAAME,WAGhE,SAAS8H,GAAgBF,EAAYC,EAAYhH,GACpD,OAAOH,EAAamH,EAAYD,EAAY/G,KAAiBf,EAAMG,sQCWlD8H,cAQjB,SAAA/b,EAAa+V,EAAc5D,iGAAY6J,QACnChW,KAAK+P,aAAeA,EACpB/P,KAAKmM,WAAaA,oDAUlB,MAAM,IAAIoD,MAAM,0BAAAlW,IAAA,SAAAN,MAAA,SAAAA,QAUhB,OAAOiH,KAAK+P,aAAatE,4CAUzB,OAAOzL,KAAK+P,aAAa1X,0CAUzB,OAAO2H,KAAK+P,aAAatE,OAAO7Q,6CAUhC,OAAOoF,KAAK+P,aAAatE,OAAOwK,oDAUhC,OAAOjW,KAAK+P,aAAatE,OAAOrR,wDAUhC,OAAO4F,KAAK+P,aAAatE,OAAOyK,aAAelW,KAAK+P,aAAatE,OAAOpT,0CASpE,IAAA2B,EAAAgG,KACE8K,KAIN,OAHAoB,EAAmBlM,KAAKmM,WAAY,SAACrU,GACjCgT,EAAK5E,KAAKwO,EAAK3E,aAAajF,KAAKhT,MAE9BgT,gDAUP,MAAM,IAAIyE,MAAM,2BAAAvV,EAxGH+b,GAwGGI,GAAA,oBAAAnc,IAAAhB,GAAA,QAAAO,EAAA,EAAAA,EAAAP,EAAA0I,OAAAnI,IAAA,KAAAX,EAAAI,EAAAO,GAAAX,EAAAF,WAAAE,EAAAF,aAAA,EAAAE,EAAAmT,cAAA,YAAAnT,MAAAoT,UAAA,GAAAxT,OAAAC,eAAAuB,EAAApB,EAAAS,IAAAT,IAAA,gBAAAI,EAAAO,EAAAX,GAAA,OAAAW,GAAAS,EAAAhB,EAAAY,UAAAL,GAAAX,GAAAoB,EAAAhB,EAAAJ,GAAAI,GAAA,GCpHHod,qrBAAkBL,+CAY/B,OAHK/V,KAAKqW,gBACNrW,KAAKqW,cAAgBrW,KAAKsW,uBAEvBtW,KAAKqW,kEAUZ,MAAM,IAAI9G,MAAM,0BAAAlW,IAAA,gBAAAN,MAAA,SAAAA,QAWhB,OAAOiH,KAAK8K,aAjCCsL,GAiCDtL,sPChCCyL,qrBAAoBH,gDASjC,OAAOjY,EAAiBC,gEAUL,IAAApE,EAAAgG,KACbwW,EAAO,IAAIC,IACXC,KAUN,OAPAxK,EAAmBlM,KAAKmM,WAAY,SAACrU,GACjC,IAAM8Z,EAAQiD,EAAK9E,aAAajF,KAAKhT,GAChC0e,EAAK1E,IAAIF,KACV4E,EAAKG,IAAI/E,GACT8E,EAAOxQ,KAAK0L,MAGb8E,QA/BMH,GA+BNG,sPC7BME,eAQjB,SAAA5d,EAAa+W,EAAc5D,iGAAY0K,yOAC7B9G,EAAc5D,IADe0K,OAGnCnC,EAAKoC,eAAiB,KAHaD,uUARLT,4DAqBX,IAAApc,EAAAgG,KACbwW,EAAO,IAAIC,IACXC,KAYN,OARAxK,EAAmBlM,KAAKmM,WAAY,SAACrU,GACjC,IAAM8Z,EAAQiD,EAAK9E,aAAajF,KAAKhT,GAChC0e,EAAK1E,IAAIF,KACV4E,EAAKG,IAAI/E,GACT8E,EAAOxQ,KAAK0L,MAIb8E,+DAWP,GAAI1W,KAAK8W,eACL,OAAO9W,KAAK8W,eAUhB,IAPA,IAAMC,EAAa/W,KAAK8K,OAAOwI,OAAO,SAAAtZ,GAAA,QAAU+P,aAAgB0C,KAAoBoE,KAAK,SAAC3W,EAAGkJ,GAAJ,OAAUlJ,EAAIkJ,IACjG4T,EAAQD,EAAWrV,OACrBuV,EAAUzO,OAAO0O,kBACjBC,SACAC,SACAC,EAAiB,EAEZvf,EAAI,EAAGA,EAAIkf,EAAOlf,IACvBqf,EAAYJ,EAAWjf,EAAI,IAC3Bsf,EAAYL,EAAWjf,MAELqf,IAIlBF,EAAUpT,KAAKkQ,IAAIkD,EAASG,EAAYL,EAAWjf,EAAI,IACvDuf,KAQJ,OALKA,IACDJ,EAAU,MAEdjX,KAAK8W,eAAiBG,EAEfjX,KAAK8W,sDAUZ,OAAO9W,KAAK+P,aAAatE,OAAO1L,qDAUnB,IAAA/F,EAAAgG,KACP8K,KASN,OARAoB,EAAmBlM,KAAKmM,WAAY,SAACrU,GACjC,IAAM8Z,EAAQ0F,EAAKvH,aAAajF,KAAKhT,GACjC8Z,aAAiBnF,EACjB3B,EAAK5E,KAAK0L,GAEV9G,EAAK5E,KAAKpG,EAAkBsG,SAASwL,EAAO0F,EAAKvX,aAGlD+K,QAxGM8L,GAwGN9L,sPC3GMyM,qrBAAenB,4DAS5B,IAAMoB,EAAUxX,KAAK+P,aAAatE,OAAOgM,KACzC,OAAQD,EAAQ,GAAIA,EAAQA,EAAQ9V,OAAS,OAAArI,IAAA,OAAAN,MAAA,SAAAA,QAU7C,OAAOiH,KAAK+P,aAAatE,OAAOgM,WApBnBF,GAoBmBE,sPClBnBC,qrBAAgB3B,+CAY7B,OAHK/V,KAAKqW,gBACNrW,KAAKqW,cAAgBrW,KAAKsW,uBAEvBtW,KAAKqW,mDAUZ,OAAOrW,KAAK+P,aAAatE,OAAOkM,8CAUhC,OAAO3X,KAAK+P,aAAatE,OAAOmM,UAAYvD,gDAShC,IACJwD,EAAiB7X,KAAK+P,aAAatE,OAAnCoM,aACR,OAAOA,aAAwB7C,SAAW6C,EAAejN,sDAUzD,MAAM,IAAI2E,MAAM,0BAAAlW,IAAA,gBAAAN,MAAA,SAAAA,QAWhB,OAAOiH,KAAK8K,aAhEC4M,GAgED5M,sPC/DCgN,qrBAAmBJ,gDAShC,OAAOlZ,EAAeC,+DAUH,IAAAzE,EAAAgG,KACf+T,EAAMvL,OAAO0O,kBACblD,EAAMxL,OAAOuP,kBAiBjB,OAdA7L,EAAmBlM,KAAKmM,WAAY,SAACrU,GACjC,IAAM8Z,EAAQiD,EAAK9E,aAAajF,KAAKhT,GACjC8Z,aAAiBnF,IAIjBmF,EAAQmC,IACRA,EAAMnC,GAENA,EAAQoC,IACRA,EAAMpC,OAINmC,EAAKC,SAtCA8D,GAsCA9D,sPC5CAgE,kLAQb,MAAM,IAAIzI,MAAM,2BAAAvV,EARHge,GAQGC,GAAA,oBAAAje,IAAAhB,GAAA,QAAAO,EAAA,EAAAA,EAAAP,EAAA0I,OAAAnI,IAAA,KAAAX,EAAAI,EAAAO,GAAAX,EAAAF,WAAAE,EAAAF,aAAA,EAAAE,EAAAmT,cAAA,YAAAnT,MAAAoT,UAAA,GAAAxT,OAAAC,eAAAuB,EAAApB,EAAAS,IAAAT,IAAA,gBAAAI,EAAAO,EAAAX,GAAA,OAAAW,GAAAS,EAAAhB,EAAAY,UAAAL,GAAAX,GAAAoB,EAAAhB,EAAAJ,GAAAI,GAAA,GCJHkf,qrBAA0BF,4CAQpC9W,GAQH,OALKuL,EAAkB0L,UAAUjX,GAGpBuL,EAAkB2L,eAAelX,GAFjCqF,OAAOrF,GAAKmX,aAZZH,GAYYG,sPCXZC,eAOjB,SAAAtf,EAAayS,iGAAQ8M,kPAEjB7D,EAAKjJ,OAASA,EACdiJ,EAAK8D,KAAO,IAAI1Y,EAAkB4U,EAAKjJ,OAAO1L,QAH7BwY,uUAPmBP,4CAoBjC9W,GACH,IAAIuC,SAEJ,GAAKgJ,EAAkB0L,UAAUjX,GAI7BuC,EAASgJ,EAAkB2L,eAAelX,OAJP,CACnC,IAAIhB,EAAaF,KAAKwY,KAAKjQ,cAAcrH,GACzCuC,EAASvD,EAAaA,EAAWoK,UAAYmC,EAAkBO,GAInE,OAAOvJ,QA7BM6U,GA6BN7U,sPC9BMgV,qrBAAqBT,4CAQ/B9W,GAEHA,EAAMqF,OAAOrF,GACb,IAAIuC,SAEJ,GAAKgJ,EAAkB0L,UAAUjX,GAK7BuC,EAASgJ,EAAkB2L,eAAelX,OALP,CACnC,IAAIwX,EAAUxX,EAAImH,MALR,2DAMV5E,EAASiV,EAAalQ,OAAOmQ,WAAWD,EAAQ,IAAvCA,IAA8ClQ,OAAOmQ,WAAWD,EAAQ,IAC9DjM,EAAkBO,GAIzC,OAAOvJ,QApBMgV,GAoBNhV,sPCpBMmV,qrBAAyBZ,4CAQnC9W,GACH,IAAIuC,SAEJ,GAAKgJ,EAAkB0L,UAAUjX,GAI7BuC,EAASgJ,EAAkB2L,eAAelX,OAJP,CACnC,IAAIC,EAAYwX,WAAWzX,EAAK,IAChCuC,EAAS+E,OAAOoL,MAAMzS,GAAasL,EAAkBO,GAAK7L,EAI9D,OAAOsC,QAjBMmV,GAiBNnV,sPCnBMoV,cAUjB,SAAA7e,EAAa3B,EAAMyS,EAAMW,EAAQtJ,iGAAQ2W,QACrC9Y,KAAK3H,KAAOA,EACZ2H,KAAKyL,OAASA,EACdzL,KAAKmC,OAASA,EACdnC,KAAK8K,KAAO9K,KAAK+Y,UAAUjO,sDAUpBA,GAAM,IAAA9R,EAAAgH,KACb,OAAO8K,EAAK7C,IAAI,SAAAjO,GAAA,OAAS0a,EAAKvS,OAAOsE,MAAMmL,WAzB9BiH,GC0Fd,SAASG,GAAaC,EAAYxN,EAAQyN,GAC7C,IAAMC,KAUN,OARMD,GAAWA,EAAQxX,SACrBwX,EAAUzN,EAAOxD,IAAI,SAAAjO,GAAA,OAAQ+P,EAAK1R,QAGtC6gB,EAAQpQ,QAAQ,SAACsQ,EAAQthB,GACrBqhB,EAAWC,GAAUthB,IAGlB2T,EAAOxD,IAAI,SAAAjP,GAAA,OAzFtB,SAAyB8R,EAAMW,GAC3BX,EAAOA,MACP,IAAIiF,SAEJ,OAAQtE,EAAO7Q,MACf,KAAK8D,EAAUC,QACX,OAAQ8M,EAAOwK,SACf,KAAKzX,EAAeC,WAGpB,QAEI,OADAsR,EAAe,IAAI8I,GAAapN,EAAOpT,KAAMyS,EAAMW,EAAQ,IAAImN,IACxD,IAAId,GAAW/H,EAAf,MAAkCjF,EAAKpJ,OAAS,IAE/D,KAAKhD,EAAUE,UACX,OAAQ6M,EAAOwK,SACf,KAAK9X,EAAiBC,YAElB,OADA2R,EAAe,IAAI8I,GAAapN,EAAOpT,KAAMyS,EAAMW,EAAQ,IAAIyM,IACxD,IAAI3B,GAAYxG,EAAhB,MAAmCjF,EAAKpJ,OAAS,IAC5D,KAAKvD,EAAiBE,SAElB,OADA0R,EAAe,IAAI8I,GAAapN,EAAOpT,KAAMyS,EAAMW,EAAQ,IAAI6M,GAAe7M,IACvE,IAAImL,GAAS7G,EAAb,MAAgCjF,EAAKpJ,OAAS,IACzD,KAAKvD,EAAiBI,OAElB,OADAwR,EAAe,IAAI8I,GAAapN,EAAOpT,KAAMyS,EAAMW,EAAQ,IAAIgN,IACxD,IAAIlB,GAAOxH,EAAX,MAA8BjF,EAAKpJ,OAAS,IACvD,QAEI,OADAqO,EAAe,IAAI8I,GAAapN,EAAOpT,KAAMyS,EAAMW,EAAQ,IAAIyM,IACxD,IAAI3B,GAAYxG,EAAhB,MAAmCjF,EAAKpJ,OAAS,IAEhE,QAEI,OADAqO,EAAe,IAAI8I,GAAapN,EAAOpT,KAAMyS,EAAMW,EAAQ,IAAIyM,IACxD,IAAI3B,GAAYxG,EAAhB,MAAmCjF,EAAKpJ,OAAS,KA/BhE,CAyF8CuX,EAAWE,EAAWpP,EAAK1R,OAAQ0R,KC3GlE,IAAAsP,IACXC,WAAYxb,EAAWI,MCuCZqb,GAvBf,SAuBeA,GAvBE5I,EAAKhK,GAIlBA,EAAUnO,OAAOoU,WAFb4M,mBAEuC7S,GAE3C,IAAIyS,EACEK,KACAvT,EAAOwT,EAAYD,GAYzB,OAPIL,EAHAzS,EAAQ6S,eAGC7I,EAAIrJ,OAAO,EAAG,GAAG,MAK9BqJ,EAAI7H,QAAQ,SAAA9O,GAAA,OAASkM,sIAAQmF,OAErB+N,EAAQK,ICvChBE,MACAC,MACAC,GAAQ,GACRC,GAAU,GACVC,GAAS,GAEb,SAASC,GAAgBP,GACvB,OAAO,IAAIzE,SAAS,IAAK,WAAayE,EAAQxR,IAAI,SAAS5P,EAAMP,GAC/D,OAAOmiB,KAAKC,UAAU7hB,GAAQ,OAASP,EAAI,MAC1CiL,KAAK,KAAO,KA0BF,IAAAoX,GAAA,SAAAA,GAASC,GACtB,IAAIC,EAAW,IAAIla,OAAO,KAAQia,EAAY,SAC1CE,EAAYF,EAAUG,WAAW,GAWrC,SAASC,EAAUna,EAAMoa,GACvB,IAIIzhB,EAJA0hB,KACAC,EAAIta,EAAKqB,OACTkZ,EAAI,EACJrhB,EAAI,EAEJshB,EAAMF,GAAK,EACXG,KAMJ,SAAS3U,IACP,GAAI0U,EAAK,OAAOjB,GAChB,GAAIkB,EAAK,OAAOA,KAAanB,GAG7B,IAAI7hB,EAAUK,EAAP4iB,EAAIH,EACX,GAAIva,EAAKka,WAAWQ,KAAOlB,GAAO,CAChC,KAAOe,IAAMD,GAAKta,EAAKka,WAAWK,KAAOf,IAASxZ,EAAKka,aAAaK,KAAOf,KAI3E,OAHK/hB,EAAI8iB,IAAMD,EAAGE,MACR1iB,EAAIkI,EAAKka,WAAWK,QAAUd,GAASgB,KACxC3iB,IAAM4hB,KAAUe,KAAgBza,EAAKka,WAAWK,KAAOd,MAAWc,GACpEva,EAAK2a,MAAMD,EAAI,EAAGjjB,EAAI,GAAGwI,QAAQ,MAAO,KAIjD,KAAOsa,EAAID,GAAG,CACZ,IAAKxiB,EAAIkI,EAAKka,WAAWziB,EAAI8iB,QAAUd,GAASgB,UAC3C,GAAI3iB,IAAM4hB,GAAUe,KAAgBza,EAAKka,WAAWK,KAAOd,MAAWc,OACtE,GAAIziB,IAAMmiB,EAAW,SAC1B,OAAOja,EAAK2a,MAAMD,EAAGjjB,GAIvB,OAAO+iB,KAAYxa,EAAK2a,MAAMD,EAAGJ,GAGnC,IA7BIta,EAAKka,WAAWI,EAAI,KAAOb,MAAWa,EACtCta,EAAKka,WAAWI,EAAI,KAAOZ,MAAUY,GA4BjC3hB,EAAImN,OAAayT,IAAK,CAE5B,IADA,IAAIqB,KACGjiB,IAAM2gB,IAAO3gB,IAAM4gB,IAAKqB,EAAI/U,KAAKlN,GAAIA,EAAImN,IAC5CsU,GAA4B,OAAtBQ,EAAMR,EAAEQ,EAAK1hB,OACvBmhB,EAAKxU,KAAK+U,GAGZ,OAAOP,EAgBT,SAASQ,EAAUD,GACjB,OAAOA,EAAIhT,IAAIkT,GAAapY,KAAKqX,GAGnC,SAASe,EAAY9a,GACnB,OAAe,MAARA,EAAe,GAChBga,EAASjd,KAAKiD,GAAQ,IAAM,IAAOA,EAAKC,QAAQ,KAAM,MAAU,IAChED,EAGR,OACEoG,MAlFF,SAAAA,MAAepG,EAAMoa,GACnB,IAAIW,EAAS3B,EAASiB,EAAOF,EAAUna,EAAM,SAAS4a,EAAKnjB,GACzD,GAAIsjB,EAAS,OAAOA,EAAQH,EAAKnjB,EAAI,GACrC2hB,EAAUwB,EAAKG,EAAUX,EA9B/B,SAAyBhB,EAASgB,GAChC,IAAI/gB,EAASsgB,GAAgBP,GAC7B,OAAO,SAASwB,EAAKnjB,GACnB,OAAO2iB,EAAE/gB,EAAOuhB,GAAMnjB,EAAG2hB,IAH7B,CA8BmDwB,EAAKR,GAAKT,GAAgBiB,KAGzE,OADAP,EAAKjB,QAAUA,MACRiB,GA6EPF,UAAWA,EACXza,OA1BF,SAAAA,OAAgB2a,EAAMjB,GAEpB,OADe,MAAXA,IAAiBA,EA9EzB,SAAsBiB,GACpB,IAAIW,EAAY7iB,OAAOY,OAAO,MAC1BqgB,KAUJ,OARAiB,EAAK5R,QAAQ,SAASmS,GACpB,IAAK,IAAIK,KAAUL,EACXK,KAAUD,GACd5B,EAAQvT,KAAKmV,EAAUC,GAAUA,KAKhC7B,EAZT,CA8EgDiB,KACpCjB,EAAQxR,IAAIkT,GAAapY,KAAKqX,IAAYmB,OAAOb,EAAKzS,IAAI,SAASgT,GACzE,OAAOxB,EAAQxR,IAAI,SAASqT,GAC1B,OAAOH,EAAYF,EAAIK,MACtBvY,KAAKqX,MACNrX,KAAK,OAqBTyY,WAlBF,SAAAA,WAAoBd,GAClB,OAAOA,EAAKzS,IAAIiT,GAAWnY,KAAK,SCzGhC0Y,GAAMC,GAAI,KCAVC,IDEkBF,GAAIhV,MACAgV,GAAIjB,UACPiB,GAAI1b,OACA0b,GAAID,WCLrBE,GAAI,OAEQC,GAAIlV,MACAkV,GAAInB,UACPmB,GAAI5b,OACA4b,GAAIH,WC4BhBI,OAXf,SAWeA,GAXE1R,EAAKvD,GAKlBA,EAAUnO,OAAOoU,WAHb4M,kBACAqC,eAAgB,KAEuBlV,GAE3C,IAAM+U,EAAMI,GAAMnV,EAAQkV,gBAC1B,OAAOtC,GAAOmC,EAAIlB,UAAUtQ,GAAMvD,ICoBvBoV,GAxBf,SAwBeA,GAxBIpL,GACf,IAAMyI,KACFthB,EAAI,EACJkkB,SACEvC,KACAvT,EAAOwT,EAAYD,GAgBzB,OAdA9I,EAAI7H,QAAQ,SAACiB,GACT,IAAMnB,KACN,IAAK,IAAIvP,KAAO0Q,EACR1Q,KAAO+f,EACP4C,EAAiB5C,EAAO/f,IAExB+f,EAAO/f,GAAOvB,IACdkkB,EAAiBlkB,EAAI,GAEzB8Q,EAAOoT,GAAkBjS,EAAK1Q,GAElC6M,eAAQ0C,MAGJpQ,OAAOsN,KAAKsT,GAASK,IC1BlBwC,GAXf,SAWeA,GAXAnR,EAAMnE,GACjB,IAAMuV,GAAeH,YAAUH,UAAQrC,WACjCD,EAAazO,EAAiBC,GAEpC,IAAKwO,EACD,MAAM,IAAI/J,MAAM,mCAGpB,OAAO2M,EAAW5C,GAAYxO,EAAMnE,4gBCGjC,SAASsJ,GAAiBrH,GAC7B,IAAMuT,KAEN,OADA3jB,OAAOsN,KAAK8C,GAAQE,QAAQ,SAACzP,GAAU8iB,EAAK9iB,GAAO,IAAIwS,EAAMjD,EAAOvP,GAAMA,KACnE8iB,EAGJ,IAOMC,GAAoB,SAApBA,GAAqBC,EAAOC,GAAuC,IAClCC,EADM5P,EAA4BvH,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,MAAfoX,EAAepX,UAAA,GACxEkX,IAAchP,EAAeI,SAC7B2O,EAAMI,YAAY/a,OAAS,GAC3B6a,IAAME,aAAYvW,KAAlBqW,WAA0BC,KAE1BH,EAAMI,YAAYvW,MACdwW,GAAIJ,EACJK,KAAMhQ,EACNiQ,SAAUJ,KAKTK,GAA4B,SAA5BA,GAA6BC,EAAUC,GAAU,IAAAxjB,GAC1DyjB,IAAMC,qBAAoB/W,KAA1B8W,WAAkCF,EAASG,qBAA3CD,UAAmEF,EAASL,gBAsCnES,GAAqB,SAArBA,GAAsBb,GAC/B,IAAMc,EAAWd,EAAMe,UACjBC,EAAoBhB,EAAMiB,uBAShC,OARAH,EAASrK,eAAiBuK,EAAkBzU,OAAOX,IAAI,SAAAjO,GAAA,OAAKygB,EAAEpiB,SAAQ0K,KAAK,KAG3Esa,EAAkBjS,iBAAmB,KACrCiS,EAAkBzR,iBAAmB,KACrCyR,EAAkB7R,eAAiB,KACnC2R,EAASI,wBAAwBC,wBAE1BL,GAGEM,GAAyB,SAAzBA,GAA0BpB,EAAOqB,GAA4B,IAAhB/Q,EAAgBvH,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,MAChEkX,EAAY3P,EAAO2P,WjCtEpB,MiCuECqB,EAAkBhR,EAAOgR,oBAC3BC,KAiDJ,OA7CIA,EAHCF,EAAWhc,OAGNgc,EAAWzV,IAAI,SAAAjO,GAAA,OACX6jB,GAD0BC,EA6BjCC,GA5B2BC,UACpBvS,EAASoS,EAAQpS,OACjBwS,EAAeH,EAAUI,kBACzBC,EAAcL,EAAU5O,gBAAgB/D,YACxCL,EAAO+S,EAAQ/S,KACf4L,EAASle,OAAO4lB,OAAOH,GAAc5L,OAAO,SAACC,EAAK5J,GAEpD,OADA4J,EAAI5J,EAAE2V,IAAIhmB,MAAQ8lB,EAAYzV,EAAE2V,IAAIhmB,MAAMqe,SACnCpE,OAGJ,SAAC1J,GAgBJ,QAfiBkC,EAAKpJ,QAAiBoJ,EAAKwT,KAAK,SAAAtlB,GAAA,OAAOyS,EAAO8S,MAAM,SAACC,GAClE,KAAMA,EAAUnmB,QAAQuQ,GACpB,SAEJ,IAAM7P,EAAQ6P,EAAO4V,EAAUnmB,MAAMomB,UACrC,GAAId,GAAmBa,EAAU5jB,OAAS8D,EAAUC,QAChD,OAAO5F,GAAS2d,EAAO8H,EAAUnmB,MAAM,IAAMU,GAAS2d,EAAO8H,EAAUnmB,MAAM,GAGjF,GAAImmB,EAAU5jB,OAAS8D,EAAUE,UAC7B,SAEJ,IAAM4T,EAAMyL,EAAaO,EAAUnmB,MAAM4J,MACzC,OAAOgZ,EAAIzI,KAAS5J,EAAO4V,EAAUnmB,MAAMomB,eAzBpB,IAACX,EAC1BD,EACApS,EACAwS,EACAE,EACArT,EACA4L,KARH,sBjC1EN,QiC6GD4F,EACgBY,GAAmBb,GAAOqC,OAAO,SAAA1kB,GAAA,OAAU4jB,EAAIW,MAAM,SAAAvlB,GAAA,OAAM2lB,EAAG/V,OAC1EgW,aACA3lB,KAAM4F,EAAcG,MAGRke,GAAmBb,GAAOqC,OAAO,SAAA1kB,GAAA,OAAU4jB,EAAIU,KAAK,SAAAtlB,GAAA,OAAM2lB,EAAG/V,OACzE3P,KAAM4F,EAAcG,IACpB4f,gBAOCC,GAAkB,SAAlBA,GAAmB/B,EAAUgC,EAAUC,EAAcC,GAC9D,IAAMC,EAASnC,EAASM,MAAM4B,EAAYJ,WACpCzS,EA1GkB,SAAf+S,GAAgB/S,EAAYvD,EAAQkW,EAAUnS,EAAQmQ,GAC/D,IAAMqC,KACFC,GAAqB,EACnBnmB,EAAS0T,EAAT1T,KACFomB,SACAC,KACAC,EAAgB,SAAhBA,IAAgB,OAAMzC,EAAS3M,gBAC7BqP,EAAmB,SAAnBA,EAAmBxlB,GAAA,OAAS8kB,EA7CtC,SAA+BlW,EAAQ9Q,GACnC,IAAMqkB,KADgCsD,uBAEtC,QAAAlnB,EAAA6c,EAAkBxM,EAAlB/P,OAAAsc,cAAAvc,GAAAL,EAAA6c,EAAA7C,QAAA8C,MAAAzc,GAAA,EAA0B,KAAjByS,EAAiB9S,EAAAQ,MACtBojB,EAAK9Q,EAAMhT,QAAU,IAAIwT,EAAMR,EAAM0E,aAAajF,KAAKhT,GAAIuT,IAHzBoU,6EAKtC,OAAOtD,EALX,CA8C6BvT,EAAQ3G,GAC7BA,EACAsd,EACAD,IAGAI,SAkBJ,OAhBIA,EADAzmB,IAAS4F,EAAcE,QACb,SAAA/E,GAAA,OAAUwlB,EAAiBvd,IAE3B,SAAAjI,GAAA,OAASwlB,EAAiBvd,IAGxCiK,EAAmBC,EAAY,SAACrU,GACxB4nB,EAAQ5nB,MACmB,IAAvBsnB,GAA4BtnB,IAAOsnB,EAAoB,GACvDC,EAAKF,EAAczd,OAAS,EAC5Byd,EAAcE,GAASF,EAAcE,GAAIhT,MAAM,KAAK,GAApD8S,IAA0DrnB,GAE1DqnB,EAAcjZ,KAAdiZ,GAAsBrnB,GAE1BsnB,EAAoBtnB,KAGrBqnB,EAAcpc,KAAK,KA0EPmc,CACfD,EAAOxP,YACPwP,EAAO3B,uBAAuB1U,OAC9BkW,EACAC,EACAjC,GAQJ,OANAmC,EAAOxP,YAActD,EACrB8S,EAAO1B,wBAAwBC,wBAE/BpB,GAAkB6C,EAAQ3R,EAAeC,QAAUZ,OAAQoS,GAAgBD,GAC3EjC,GAA0BC,EAAUmC,GAE7BA,GAGEU,GAAmB,SAAnBA,GAAoB7C,EAAU8C,EAAWjT,EAAQkT,GAC1D,IAAMZ,EAASnC,EAASM,MAAMzQ,EAAOiS,WACjCkB,EAAgBF,EAiBpB,OAhBIjT,EAAO1T,OAAS4F,EAAcE,UAC9B+gB,EAAgBD,EAAUvM,OAAO,SAAAtZ,GAAA,OAA+C,IAAlC4lB,EAAU3Z,QAAQmN,MAIpE6L,EAAOnM,eAAiBgN,EAAc/c,KAAK,KAC3Ckc,EAAO1B,wBAAwBC,wBAE/BpB,GACI6C,EACA3R,EAAeE,SACboS,YAAWjT,SAAQoT,gBAAiBD,GACtC,MAEJjD,GAA0BC,EAAUmC,GAE7BA,GAGEe,GAAqB,SAArBA,GAAsBC,GAO/B,IALAA,EAAazW,KAAYyW,IACTrlB,OACZqlB,EAAWrlB,KAAO8D,EAAUE,YAG3BqhB,EAAWhK,QACZ,OAAQgK,EAAWrlB,MACnB,KAAK8D,EAAUC,QACXshB,EAAWhK,QAAUzX,EAAeC,WACpC,MACJ,QACA,KAAKC,EAAUE,UACXqhB,EAAWhK,QAAU9X,EAAiBC,YAK9C,OAAO6hB,GAiBEC,GAAa,SAAbA,GAAcC,EAAUrV,EAAMW,EAAQ9E,GAC/C8E,EAAwBA,EAfmBxD,IAAI,SAAAjO,GAAA,OAAcgmB,GAAmBC,KAgBhFtZ,EAAUnO,OAAOoU,OAAOpU,OAAOoU,UAAWwT,IAAgBzZ,GAC1D,IAAM0Z,EAAcC,EAAU3Z,EAAQ2S,YAEtC,IAAM+G,GAAsC,mBAAhBA,EACxB,MAAM,IAAI9Q,MAAJ,mCAA6C5I,EAAQ2S,WAArD,WANiD,IAAAlE,EAS3BiL,EAAYvV,EAAMnE,GATSxO,EAAAooB,GAAAnL,EAAA,GASpDgE,EAToDjhB,EAAA,GAS5CqoB,EAT4CroB,EAAA,IAZ/B,SAACsT,EAAQgV,GAsBpBhV,EArBV3C,QAAQ,SAACmX,GACZ,IAAMS,EAAcT,EAAWU,GAC/B,GAAKD,EAAL,CAEA,IAAMlO,EAAMiO,EAAWxa,QAAQga,EAAW5nB,MAC1CooB,EAAWjO,GAAOkO,EAClBT,EAAW5nB,KAAOqoB,SACXT,EAAWU,MARM,CAsBXlV,EAAQ2N,GACzB,IAAMnO,EAAW+N,GAAawH,EAAe/U,EAAQ2N,GAG/CwH,EAAY7V,EAAWC,gBAAgBC,EAAUtE,EAAQtO,MAM/D,OALA8nB,EAASU,mBAAqBD,EAE9BT,EAAS1Q,YAAc+Q,EAAc9e,QAAU8e,EAAc,GAAG9e,OAAzC8e,MAAuDA,EAAc,GAAG9e,OAAS,GAAM,GAC9Gye,EAASrN,eAAkBrH,EAAOxD,IAAI,SAAAjO,GAAA,OAAK8mB,EAAEzoB,OAAO0K,OACpDod,EAASY,YAAcpa,EAAQ2S,aAAexb,EAAWI,KAAO2M,EAAiBC,GAAQnE,EAAQ2S,WAC1F6G,GAGEa,GAAgB,SAAhBA,GAAiBvV,EAAQJ,GAGlC,IAFA,IAAIvT,EAAI,EAEDA,EAAI2T,EAAO/J,SAAU5J,EACxB,GAAIuT,IAAUI,EAAO3T,GAAGO,KACpB,OACIuC,KAAM6Q,EAAO3T,GAAGme,SAAWxK,EAAO3T,GAAG8C,KACrCqH,MAAOnK,GAInB,OAAO,MA6BLmpB,GAAgC,SAAhCA,GAAiClD,EAAWD,GAC9C,IAAMoD,EAAcpD,EAAUqD,iBAC1BC,EAAiBrD,EAAU,GAC3BsD,EAAiBtD,EAAU,GAkB/B,OAhBAmD,EAAYpY,QAAQ,SAACwY,GACjB,GAAKA,EAAL,CADgC,IAMjBC,IANiBzpB,EA9BF,SAACwpB,GACnC,IAAIE,KACAlF,SAEJ,OADAA,EAAYgF,EAAW5E,IAEvB,KAAKpP,EAAeC,OAChBiU,GAAUF,EAAW1E,UACrB,MACJ,KAAKtP,EAAeE,QAChBgU,GAAUF,EAAW3E,KAAKoD,iBAC1B,MACJ,KAAKzS,EAAeG,QAChB6O,EAAY,UACZkF,GAAUF,EAAW3E,KAAK8E,cAAcpV,MAAM,KAAMiV,EAAW1E,UAC/D,MACJ,QACIN,EAAY,KAGhB,OACIA,YACAkF,UArB8B,CAmCuBF,GAA7ChF,EALwBxkB,EAKxBwkB,UAAWkF,EALa1pB,EAKb0pB,OACflF,IACA8E,GAAiBG,KAAejF,GAAfiF,WAA6BC,GAA7BD,SACb3C,iBAEJyC,GAAiBK,KAAepF,GAAfoF,WAA6BF,GAA7BE,SACb9C,sBAKJwC,EAAgBC,IAWtBM,GAAuB,SAAvBA,EAAwB7D,EAAWC,GAA8C,IAAnCpR,EAAmCvH,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,MAAtBwc,EAAsBxc,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,MAC7Eyc,EAAqBD,EAAaC,mBAClCC,EAAgBF,EAAaE,kBAE/BhE,IAAc+D,MAIAC,EAAcpgB,SAA+C,IAAtCogB,EAAc7b,QAAQ6X,KAElDA,EAAUiE,kBAAkBhE,EAAWpR,GAEnCmR,EAAUkE,UAClBlZ,QAAQ,SAACmZ,GAAU,IAAAnqB,EACempB,GAA8BlD,EAAWkE,GADxD1pB,EAAAgoB,GAAAzoB,EAAA,GACnBspB,EADmB7oB,EAAA,GACH8oB,EADG9oB,EAAA,GAExBopB,EAAqBM,GAAQb,EAAgBC,GAAiB1U,EAAQiV,OA0BjEM,GAA2B,SAA3BA,GAA4BC,EAAaC,EAAYC,EAAgB1V,GAC9E,IAAIiQ,SACAmB,SACIuE,EAA4CD,EAA5CC,qBAAsBC,EAAsBF,EAAtBE,kBACxBC,EAAsBH,EAAeI,SACrCC,EAA8B/V,EAAO+V,4BAMvCC,KAEJ,GAAoB,OAAhBR,QAAwBxV,EAAOiW,WAC/BD,IACI/F,kBAED,KAAA7iB,EACC8oB,EAAkBrqB,OAAO4lB,OAAOkE,EAAqBQ,qBACrDP,IACAM,EAAkBA,EAAgBvP,OAAO,SAAAtZ,GAAA,OAAK5B,EAAEuU,OAAO8V,WAAaD,KAGxE,IAAMO,EAAmBF,EAAgBvP,OAjB5B,SAAC0P,GAEd,OADerW,EAAOkC,UAAa,sBACrBmU,EAAOrW,KAeqC1E,IAAI,SAAAjO,GAAA,OAAUipB,EAAOtW,OAAOiQ,WAEhFkF,KAEN,QAAIS,EAA6B,CAC7B,IAAMW,EAAwB1qB,OAAO4lB,OAAOkE,EAAqBQ,gBAEjEI,EAAsBpa,QAAQ,SAACqa,GAC3B,IAAMC,EAAaD,EAAUxW,YACzByW,EAAWC,eAA2BD,EAAWH,SAAWtW,EAAOsW,QAC/DG,EAAWX,WAAaD,IAC5BV,EAAc5b,KAAKid,EAAU9G,QAC7BO,EAAWsG,EAAsB5P,OAAO,SAAAta,GAAA,OAAKZ,IAAM+qB,IAAWlb,IAAI,SAAAjO,GAAA,OAAK5B,EAAEuU,OAAOiQ,YACvElb,QAAUihB,EAAUzc,MACzB0W,WACA0G,OAAQH,EAAU9G,MAClBkH,KA/CU,SAArBC,GAAsBnH,GAC/B,IADoD,IAAdkH,EAAcne,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,MAC7CiX,EAAMoH,SACTF,EAAKrd,KAAKmW,GACVA,EAAQA,EAAMoH,QAElB,OAAOF,EA0CmBC,CAAmBL,EAAU9G,YAOnDO,GAAW8G,MAAGnI,OAAHmI,qBAAiBX,IAAkBZ,KAAc7O,OAAO,SAAAtZ,GAAA,OAAW,OAAN5B,IACxEuqB,EAAUzc,MACN0W,WACAkF,wBAAmBA,EAAnBA,GAAqCnV,EAAOmV,sBAIpD,IAAM6B,EAAYvB,EAAW/F,MAEvBuH,EAAaprB,OAAOoU,QACtBiX,kBAAmB1B,EACnBK,uBACD7V,GAEGmX,EAAmB1B,EAAW2B,aAChCrB,GAA+BoB,IAC/B/F,EAAYN,GAAuBqG,EAAkBlH,GACjDe,gBAAiB+E,IAErBf,GAAqBmC,EAAkB/F,EAAW6F,IAGtDjB,EAAU7Z,QAAQ,SAACkb,GACf,IAAMC,EAAmBxG,GAAuBkG,EAAWK,EAAIpH,UACzD2G,EAAOS,EAAIT,KAEjB,GAAIA,EAAM,CACN,IAAMW,EA1HO,SAACnG,EAAWwF,GACjC,IAAK,IAAIzrB,EAAI,EAAG2Q,EAAM8a,EAAK7hB,OAAQ5J,EAAI2Q,EAAK3Q,IAAK,CAC7C,IAAMukB,EAAQkH,EAAKzrB,GACnBimB,EAAYkD,GAA8BlD,EAAW1B,GAEzD,OAAO0B,EALc,CA0H0BkG,EAAkBV,EAAKY,WAC9DH,EAAIV,OAAOvB,kBAAkBmC,EAAeN,QAE5CjC,GAAqBgC,EAAWM,EAAkBL,GAC9C9B,cAAekC,EAAIlC,cACnBD,mBAAoBa,GAA+BoB,6PCwJpDM,cA3jBX,SAAApqB,KAAA,SAAAA,EAAAhB,GAAA,KAAAgB,aAAAhB,GAAA,UAAAub,UAAA,sCAAwB8P,QACpB,IAAIC,SAEJtkB,KAAKyjB,QAAU,KACfzjB,KAAKyc,eACLzc,KAAKid,uBACLjd,KAAKgiB,aANeqC,2BAAR7C,EAAQ6C,qBAAR7C,EAAQ6C,gBAQE,IAAlB7C,EAAO9f,SAAkB4iB,EAAS9C,EAAO,cAAe4C,GAExDpkB,KAAK8S,eAAiBwR,EAAOxR,eAC7B9S,KAAKyP,YAAc6U,EAAO7U,YAC1BzP,KAAK+gB,YAAcuD,EAAOvD,YAC1B/gB,KAAKyjB,QAAUa,EACftkB,KAAK6gB,mBAAqB7gB,KAAKyjB,QAAQ5C,mBACvC7gB,KAAKukB,gBAAkBla,IACvBrK,KAAKud,wBAAwBC,0BAE7B0C,GAAUA,cAAClgB,MAAXkgB,OAAoBsB,IACpBxhB,KAAKukB,gBAAkBvkB,KAAK6gB,mBAAmBxoB,KAC/C2H,KAAKud,wBAAwBC,wBAC7Bxd,KAAKwkB,uBACD1B,kBACA2B,sBAAkB,OAAAC,GAAA1qB,IAAAX,IAAA,YAAAN,MAAA,SAAAA,QA0B1B,OAAOiH,KAAKkP,gBAAgBtG,OAAOX,IAAI,SAAAjO,GAAA,OAAK5B,EAAEqT,mDAY9C,OAAOzL,KAAKukB,8DAIZ,OAAOvkB,KAAK2kB,kEAMZ,OAFA3kB,KAAK2kB,YDpEe,SAAfC,GAAe5qB,EAA8BqjB,EAAmBwH,GAAmB,IAAAjsB,EAAA2nB,GAAAvmB,EAAA,GAAlEmS,EAAkEvT,EAAA,GAAtDksB,EAAsDlsB,EAAA,GACxFmsB,EAASD,EAAcpjB,OAASojB,EAAczY,MAAM,QACpD2Y,EAAkB3H,EAAkBlS,YACpC8Z,EAAYF,EAAO9c,IAAI,SAAAjO,GAAA,OT+BxB,SAAoC+V,EAAc5D,GAAY,IACzDV,EAAWsE,EAAXtE,OAER,OAAQA,EAAO7Q,MACf,KAAK8D,EAAUC,QACX,OAAQ8M,EAAOwK,SACf,KAAKzX,EAAeC,WAEpB,QACI,OAAO,IAAIqZ,GAAW/H,EAAc5D,GAE5C,KAAKzN,EAAUE,UACX,OAAQ6M,EAAOwK,SACf,KAAK9X,EAAiBC,YAClB,OAAO,IAAImY,GAAYxG,EAAc5D,GACzC,KAAKhO,EAAiBE,SAClB,OAAO,IAAIuY,GAAS7G,EAAc5D,GACtC,KAAKhO,EAAiBI,OAClB,OAAO,IAAIgZ,GAAOxH,EAAc5D,GACpC,QACI,OAAO,IAAIoK,GAAYxG,EAAc5D,GAE7C,QACI,OAAO,IAAIoK,GAAYxG,EAAc5D,IAvBtC,CS/B2D6Y,EAAgBE,GAAMnV,aAAc5D,KAClG,OAAOpB,EAAWC,gBAAgBia,EAAWJ,GCgEtBD,EAAc5kB,KAAKyP,YAAazP,KAAK8S,gBACnD9S,KAAKsd,uBAAwBtd,KAAKukB,iBAChCvkB,0DAIP,OAAOA,KAAK6gB,sDAiCVsE,EAAUtW,GACZ,OAAOH,EAAa1O,KAAMmlB,EAAUtW,6CAuB3BsW,GACT,OAAOzW,EAAa1O,KAAMmlB,EAAU5P,GAAkBvV,KAAMmlB,UAAW9rB,IAAA,QAAAN,MAAA,SAAAA,MAqBpEqsB,GACH,OAAO1P,GAAM1V,KAAMolB,4CAoBXC,GACR,OAAO5S,EAAWzS,KAAMqlB,wCAkDpBvG,EAAUnS,GACd,IAAM2Y,GACFrsB,KAAM4F,EAAcC,OACpB8f,cAIEI,GAAgBJ,WAFtBjS,EAASnU,OAAOoU,UAAW0Y,EAAW3Y,IAEEiS,WA0BxC,OAvBIjS,EAAO1T,OAAS4F,EAAcG,KACb6f,GACb7e,KACA8e,GACE7lB,KAAM4F,EAAcC,QACtBkgB,GAEaH,GACb7e,KACA8e,GACE7lB,KAAM4F,EAAcE,SACtBigB,IAIEH,GACF7e,KACA8e,EACAnS,EACAqS,MAIDuG,qCAsBP,OAAQvlB,KAAKyP,YAAY/N,SAAW1B,KAAK8S,eAAepR,6CAUnC,IAAlBkd,IAAkBxZ,UAAA1D,OAAA,YAAA0D,UAAA,KAAAA,UAAA,GACf+X,EAAW,IAAInd,KAAKwlB,YAAYxlB,MAMtC,OALI4e,EACAzB,EAASsI,UAAUzlB,MAEnBmd,EAASsI,UAAU,MAEhBtI,wCA8CFyC,EAAWjT,GAChB,IAAM2Y,GACFrsB,KAAM4F,EAAcC,OACpB8f,cAEJjS,EAASnU,OAAOoU,UAAW0Y,EAAW3Y,GACtC,IAAM+Y,EAAc1lB,KAAKke,kBACnB2B,EAAYrnB,OAAOsN,KAAK4f,GACtBzsB,EAAS0T,EAAT1T,KAEJ0sB,EAAsB/F,EAAUvN,OAAO,SAACC,EAAKjH,GAM7C,MAL+B,WAA3BA,EAAMma,YAAYntB,KAClBia,EAAIpM,KAAJoM,+HAAYuN,EAAUvM,OAAO,SAAAtZ,GAAA,OAA0C,IAA7BoZ,EAAUwS,OAAOva,OACpDA,KAASqa,GAChBpT,EAAIpM,KAAKmF,GAENiH,OAGXqT,EAAsB9c,MAAMG,KAAK,IAAIyN,IAAIkP,IAAsB1d,IAAI,SAAAjO,GAAA,OAASqR,EAAMgN,SAkBlF,OAfIpf,IAAS4F,EAAcG,KACD2gB,GAAiB3f,KAAM2lB,GACzC1sB,KAAM4F,EAAcC,OACpB8f,UAAWjS,EAAOiS,WACnBiB,GACkBF,GAAiB3f,KAAM2lB,GACxC1sB,KAAM4F,EAAcE,QACpB6f,UAAWjS,EAAOiS,WACnBiB,IAGmBF,GAAiB3f,KAAM2lB,EAAqBhZ,EAAQkT,MAIvE/B,6CAIP,OAAO9d,KAAK6lB,mEAWZ,OAPA7lB,KAAK6lB,aAAe7lB,KAAK2kB,YAAY/b,OAAOyJ,OAAO,SAACC,EAAKwT,EAAUhuB,GAK/D,OAJAwa,EAAIwT,EAASztB,SACT4J,MAAOnK,EACPumB,IAAKyH,EAASra,UAEX6G,OAEJtS,6CAWPA,KAAKyjB,SAAWzjB,KAAKyjB,QAAQsC,YAAY/lB,MACzCA,KAAKyjB,QAAU,KACfzjB,KAAKgiB,UAAUlZ,QAAQ,SAACmZ,GACpBA,EAAMwB,QAAU,OAEpBzjB,KAAKgiB,gBAAY3oB,IAAA,cAAAN,MAAA,SAAAA,MA6BRkpB,GACT,IAAIzP,EAAMxS,KAAKgiB,UAAUgE,UAAU,SAAAhtB,GAAA,OAAWitB,IAAYhE,KACjD,IAATzP,GAAaxS,KAAKgiB,UAAU1a,OAAOkL,EAAK,MAAAnZ,IAAA,YAAAN,MAAA,SAAAA,MAQjCmtB,GACPlmB,KAAKyjB,SAAWzjB,KAAKyjB,QAAQsC,YAAY/lB,MACzCA,KAAKyjB,QAAUyC,EACfA,GAAUA,EAAOlE,UAAU9b,KAAKlG,gDA4BhC,OAAOA,KAAKyjB,oDA6BZ,OAAOzjB,KAAKgiB,yDA4BZ,OAAOhiB,KAAKyc,mEA4BZ,OAAOzc,KAAKid,0BAILmH,GAJKnH,qoBC0FLrf,eAnmBX,SAAA5E,IAAsB,IAAAgB,GAAA,SAAAA,EAAAhB,GAAA,KAAAgB,aAAAhB,GAAA,UAAAub,UAAA,sCAAAvU,KAAAhH,GAAA,QAAAO,EAAA6L,UAAA1D,OAANsF,EAAM6B,MAAAtP,GAAAW,EAAA,EAAAA,EAAAX,EAAAW,IAAN8M,EAAM9M,GAAAkL,UAAAlL,GAAA,IAAApC,EAAA,SAAAkC,EAAAhB,GAAA,IAAAgB,EAAA,UAAAmsB,eAAA,oEAAAntB,GAAA,UAAAiB,QAAAjB,IAAA,mBAAAA,EAAAgB,EAAAhB,EAAA,CAAAgH,MAAAhG,EAAAhB,EAAAotB,WAAA5tB,OAAA6tB,eAAArtB,IAAAf,KAAAsP,MAAAvN,GAAAgG,MAAAub,OACTvU,KADS,OAGlB0N,EAAK4R,kBAHaxuB,EAAA,gBAAAkC,EAAAhB,GAAA,sBAAAA,GAAA,OAAAA,EAAA,UAAAub,UAAA,2DAAAta,QAAAjB,IAAAgB,EAAAJ,UAAApB,OAAAY,OAAAJ,KAAAY,WAAA4rB,aAAAzsB,MAAAiB,EAAAtB,YAAA,EAAAsT,UAAA,EAAAD,cAAA,KAAA/S,IAAAR,OAAA+tB,eAAA/tB,OAAA+tB,eAAAvsB,EAAAhB,GAAAgB,EAAAosB,UAAAptB,GAAA,CAAAA,EArCForB,8CAuGXzd,GAQLA,EAAUnO,OAAOoU,WANb4Z,MAAO,MACPpkB,UAAW,KACXqkB,WACAC,gBACA7V,SAEoClK,GACxC,IAAMiC,EAAS5I,KAAKsd,uBAAuB1U,OAErC+d,E/BOP,SAASC,EAAa7b,EAAYoB,EAAY2Y,EAAe+B,EAAgBlgB,GAOhF,IAAMmgB,GACFrb,UACAX,QACAic,SAEEC,GAPNrgB,EAAUnO,OAAOoU,WAHboa,UACAC,eAEoCtgB,IAOjBqgB,OACjBE,EAAaL,GAAkBA,EAAenlB,OAAS,EAEvDylB,KAiDN,GA/CgBrC,EAAczY,MAAM,KAE5BvD,QAAQ,SAACse,GACb,IAAK,IAAItvB,EAAI,EAAGA,EAAIiT,EAAWrJ,OAAQ5J,GAAK,EACxC,GAAIiT,EAAWjT,GAAGO,SAAW+uB,EAAS,CAClCD,EAAWjhB,KAAK6E,EAAWjT,IAC3B,SAMZqvB,EAAWre,QAAQ,SAACuC,GAEhByb,EAAOrb,OAAOvF,KAAKmF,EAAMI,YAGzBub,GACAF,EAAOrb,OAAOvF,MACV7N,KAAM,MACNuC,KAAM,eAIdsR,EAAmBC,EAAY,SAACrU,GAC5BgvB,EAAOhc,KAAK5E,SACZ,IAAMmhB,EAAYP,EAAOhc,KAAKpJ,OAAS,EAEvCylB,EAAWre,QAAQ,SAACuC,EAAOuE,GACvBkX,EAAOhc,KAAKuc,GAAWzX,EAFf,GAE6BvE,EAAM0E,aAAajF,KAAKhT,KAE7DkvB,IACAF,EAAOhc,KAAKuc,GAAWF,EAAWzlB,QAAU5J,GAGhDgvB,EAAOC,KAAK7gB,KAAKpO,GAIbovB,GAAcJ,EAAOhc,KAAKuc,GAAWnhB,KAAKpO,KAI9CovB,GA7HR,SAAkBrJ,EAASgJ,GAOvB,IAPuC,IAC/B/b,EAAiB+S,EAAjB/S,KAAMW,EAAWoS,EAAXpS,OACV2H,SACAkU,SACAC,SACAzvB,EAAI+uB,EAAenlB,OAAS,EAEzB5J,GAAK,EAAGA,IACXsb,EAAYyT,EAAe/uB,GAAG,GAC9BwvB,EAAWT,EAAe/uB,GAAG,IAC7ByvB,EAAWvG,GAAcvV,EAAQ2H,MVhEf,mBUuEHkU,EAEX5W,EAAU5F,EAAM,SAAC5Q,EAAGkJ,GAAJ,OAAUkkB,EAASptB,EAAEqtB,EAAStlB,OAAQmB,EAAEmkB,EAAStlB,UAC1DmI,EAAQkd,GAAW,WAC1B,IAAM3V,EAAcH,EAAU1G,EAAMyc,EAAStlB,OACvCulB,EAAYF,EAASA,EAAS5lB,OAAS,GACvCwQ,EAAeoV,EAAStM,MAAM,EAAGsM,EAAS5lB,OAAS,GACnDyQ,EAAqBD,EAAajK,IAAI,SAAAjO,GAAA,OAAKgnB,GAAcvV,EAAQgP,KAEvE9I,EAAY7I,QAAQ,SAACmJ,GACjBA,EAAa/L,KAAK8L,EAAmBC,EAAcC,EAAcC,MAGrEzB,EAAUiB,EAAa,SAACzX,EAAGkJ,GACvB,IAAMlL,EAAIgC,EAAE,GACNX,EAAI6J,EAAE,GACZ,OAAOokB,EAAUtvB,EAAGqB,KAIxBuR,EAAKpJ,OAAS,EACdiQ,EAAY7I,QAAQ,SAAC8I,GACjB9G,EAAK5E,KAAL4E,UAAa8G,EAAM,OAnBG,IAsB1B0V,EAA8C,SAAnC/gB,OAAO+gB,GAAU7lB,cAA2B,OAAS,MAChEiP,EAAU5F,EAAMsG,EAAUmW,EAAS3sB,KAAM0sB,EAAUC,EAAStlB,UAIpE4b,EAAQkJ,QACRjc,EAAKhC,QAAQ,SAAC/P,GACV8kB,EAAQkJ,KAAK7gB,KAAKnN,EAAM0uB,SAjDhC,CA8HiBX,EAAQD,GAGjBlgB,EAAQsgB,WAAY,CACpB,IAAMS,EAAU7e,qBAASA,MAAMie,EAAOrb,OAAO/J,UAASuG,IAAI,sBAC1D6e,EAAOhc,KAAKhC,QAAQ,SAAC+G,GACjBA,EAAM/G,QAAQ,SAACgC,EAAMhT,GACjB4vB,EAAQ5vB,GAAGoO,KAAK4E,OAGxBgc,EAAOhc,KAAO4c,EAGlB,OAAOZ,G+BjF+B7uB,KAC9B+H,KACAA,KAAKsd,uBAAuB1U,OAC5B5I,KAAKyP,YACL9I,EAAQ+f,aAAe9d,EAAOX,IAAI,SAAAjO,GAAA,OAAK5B,EAAEC,SAAQ0K,OAAS/C,KAAK8S,eAC/DnM,EAAQkK,MAEJoW,WAA8B,WAAlBtgB,EAAQ6f,MACpBQ,SAAUrgB,EAAQ8f,UAI1B,IAAK9f,EAAQvE,UACT,OAAOukB,EAxBG,IA2BNvkB,EAAcuE,EAAdvE,UACA0I,EAAuB6b,EAAvB7b,KAAMW,EAAiBkb,EAAjBlb,OAAQsb,EAASJ,EAATI,KAChBY,EAAalc,EAAOxD,IAAK,SAAAjO,GAAA,OAAKA,EAAE3B,OAEhCuvB,EADgBpvB,OAAOsN,KAAK1D,GACAiQ,OAAO,SAACC,EAAKC,GAC3C,IAAMC,EAAMmV,EAAW1hB,QAAQsM,GAI/B,OAHa,IAATC,GACAF,EAAIpM,MAAMsM,EAAKpQ,EAAUmQ,KAEtBD,OAiCX,MA9BsB,WAAlB3L,EAAQ6f,MACRoB,EAAY9e,QAAQ,SAAC+e,GACjB,IAAMC,EAAOD,EAAK,GACZE,EAAQF,EAAK,GAEnB/c,EAAKgd,GAAMhf,QAAQ,SAAC8I,EAAOoW,GACvBld,EAAKgd,GAAME,GAAYD,EAAM9vB,YAEzB2Z,EACAmV,EAAKiB,GACLvc,EAAOqc,QAKnBhd,EAAKhC,QAAQ,SAAC8I,EAAOoW,GACjBJ,EAAY9e,QAAQ,SAAC+e,GACjB,IAAMC,EAAOD,EAAK,GACZE,EAAQF,EAAK,GAEnBjW,EAAMkW,GAAQC,EAAM9vB,YAEhB2Z,EAAMkW,GACNf,EAAKiB,GACLvc,EAAOqc,QAMhBnB,wCA2BFsB,GAAwD,IAA7CC,EAA6C9iB,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,MAA9BuH,EAA8BvH,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,IAAnBwZ,cACpC6C,KAAmBwG,EAAUllB,OAE7BolB,EC1Kd,SAASC,GAAStK,EAAW7S,EAAUid,EAAUG,GAC7C,IAAMC,EAxDV,SAAsBxK,EAAW7S,GAC7B,IAAMsD,KAEAga,EADazK,EAAU5O,gBACCxD,eAY9B,OAVAlT,OAAOic,QAAQ8T,GAAYzf,QAAQ,SAAA9O,GAAW,IAATX,EAAS6b,GAAAlb,EAAA,MACtCiR,GAAYA,EAASvJ,QACU,IAA3BuJ,EAAShF,QAAQ5M,IACjBkV,EAAOrI,KAAK7M,GAGhBkV,EAAOrI,KAAK7M,KAIbkV,EAfX,CAwDkCuP,EAAW7S,GACnCud,EAhCV,SAAwB1K,GAA0B,IAAfoK,EAAe9iB,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,MACxC0hB,KAEA2B,EADa3K,EAAU5O,gBACD5D,aACtBkJ,EAAaS,GAAayT,iBAchC,OAZAlwB,OAAOsN,KAAK2iB,GAAU3f,QAAQ,SAAC6f,GACU,iBAA1BT,EAASS,KAChBT,EAASS,GAAeF,EAASE,GAAa/Q,YAElD,IAAMgR,EAAY3T,GAAa4T,QAAQX,EAASS,IAC5CC,EACA9B,EAAO6B,GAAeC,GAEtB9B,EAAO6B,GAAenU,EACtB0T,EAASS,GAAetU,MAGzByS,EAlBX,CAgCqChJ,EAAWoK,GACtCnd,EAAa+S,EAAU5O,gBACvB4Z,EAAgB/d,EAAWI,YAC3B4d,EAAShe,EAAW1S,KACpB2wB,KACAC,KACAxd,KACAgG,KACA3G,KACFqd,SAGJ3vB,OAAOic,QAAQqU,GAAehgB,QAAQ,SAAA9O,GAAkB,IAAAhB,EAAAkc,GAAAlb,EAAA,GAAhBX,EAAgBL,EAAA,GAAXD,EAAWC,EAAA,GACpD,IAAgC,IAA5BsvB,EAAUriB,QAAQ5M,IAAemvB,EAAWnvB,GAG5C,OAFAoS,EAAOvF,KAAKsD,KAAYzQ,EAAM0S,WAEtB1S,EAAM0S,SAAS7Q,MACvB,KAAK8D,EAAUC,QACXsqB,EAAW/iB,KAAK7M,GAChB,MACJ,QACA,KAAKqF,EAAUE,UACXoqB,EAAa9iB,KAAK7M,MAK9B,IAAI6vB,EAAW,EACfhd,EAAmB4R,EAAUrO,YAAa,SAAC3X,GACvC,IAAI0e,EAAO,GACXwS,EAAalgB,QAAQ,SAACgY,GAClBtK,EAAUA,EAAVA,IAAkBsS,EAAchI,GAAG/Q,aAAajF,KAAKhT,cAErD2Z,EAAQ+E,IACR/E,EAAQ+E,GAAQ0S,EAChBpe,EAAK5E,SACL8iB,EAAalgB,QAAQ,SAACgY,GAClBhW,EAAKoe,GAAUpI,GAAKgI,EAAchI,GAAG/Q,aAAajF,KAAKhT,KAE3DmxB,EAAWngB,QAAQ,SAACgY,GAChBhW,EAAKoe,GAAUpI,IAAMgI,EAAchI,GAAG/Q,aAAajF,KAAKhT,MAE5DoxB,GAAY,GAEZD,EAAWngB,QAAQ,SAACgY,GAChBhW,EAAK2G,EAAQ+E,IAAOsK,GAAG5a,KAAK4iB,EAAchI,GAAG/Q,aAAajF,KAAKhT,QAM3E,IAAIwnB,KACAC,EAAgB,SAAhBA,IAAgB,OAAMzB,EAAU3N,gBAcpC,OAbArF,EAAKhC,QAAQ,SAACmS,GACV,IAAMpL,EAAQoL,EACdgO,EAAWngB,QAAQ,SAACgY,GAChBjR,EAAMiR,GAAK0H,EAAW1H,GAAG7F,EAAI6F,GAAIvB,EAAeD,OAGpD+I,GACAA,EAAkB9K,wBAClB4K,EAAeE,GAGfF,EAAe,IAAIvqB,GAAUkN,EAAMW,GAAUpT,KAAM0wB,IAEhDZ,GDsGkBC,cADPpoB,KAAMioB,EAAWC,IAiB/B,OAdA9L,GACI+L,EACA7a,EAAeG,SACbwa,YAAWxG,gBAAeiH,eAAgBzT,GAAayT,kBACzDR,GAEJrL,GAA0B7c,KAAMmoB,GAE5Bxb,EAAOiS,UACPuJ,EAAa1C,UAAUzlB,MAEvBmoB,EAAa1C,UAAU,MAGpB0C,qCAsDLtB,GAA+C,IAA/Bla,EAA+BvH,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,IAApBwZ,cACvBuK,EAAUnpB,KAAKge,SACjBwI,MAAO,MACP3V,KAAMgW,IAGJuC,GADSD,EAAQ1d,OAAOxD,IAAI,SAAAjO,GAAA,OAASqR,EAAMhT,QACnBkjB,OAAO4N,EAAQre,MAEvCue,EAAW,IAAIrpB,KAAKwlB,YAAY4D,EAAcD,EAAQ1d,QAAU6N,WAAY,WAWlF,OATA8C,GAAkBiN,EAAU/b,EAAeO,KAAMlB,EAAQka,GACzDhK,GAA0B7c,KAAMqpB,GAE5B1c,EAAOiS,UACPyK,EAAS5D,UAAUzlB,MAEnBqpB,EAAS5D,UAAU,MAGhB4D,0CAwBAzuB,EAAM+L,GACb/L,EAAOA,GAAQoF,KAAK+gB,YACpBpa,EAAUnO,OAAOoU,WAAaiP,eAAgB,KAAOlV,GAErD,IAAMiC,EAAS5I,KAAKkP,gBAAgBtG,OAC9B0gB,EAAU1gB,EAAOX,IAAI,SAAAjO,GAAA,OAAKygB,EAAE+F,kBAC5B+I,EAAYD,EAAQ,GAAG5nB,OACzB8nB,SACAC,SACAC,SAEJ,GAAI9uB,IAASkD,EAAWC,UAEpB,IADAyrB,KACKC,EAAS,EAAGA,EAASF,EAAWE,IAAU,CAC3C,IAAMxO,KACN,IAAKyO,EAAS,EAAGA,EAAS9gB,EAAOlH,OAAQgoB,IACrCzO,EAAIrS,EAAO8gB,GAAQrxB,QAAUixB,EAAQI,GAAQD,GAEjDD,EAAetjB,KAAK+U,QAErB,GAAIrgB,IAASkD,EAAWE,QAAS,CAEpC,IADAwrB,GAAkB5gB,EAAOX,IAAI,SAAAjO,GAAA,OAAKygB,EAAEpiB,SAAQ0K,KAAK4D,EAAQkV,iBACpD4N,EAAS,EAAGA,EAASF,EAAWE,IAAU,CAC3C,IAAMxO,KACN,IAAKyO,EAAS,EAAGA,EAAS9gB,EAAOlH,OAAQgoB,IACrCzO,EAAI/U,KAAKojB,EAAQI,GAAQD,IAE7BD,EAAetjB,KAAK+U,EAAIlY,KAAK4D,EAAQkV,iBAEzC2N,EAAiBA,EAAezmB,KAAK,UAClC,IAAInI,IAASkD,EAAWG,QAU3B,MAAM,IAAIsR,MAAJ,aAAuB3U,EAAvB,qBARN,IADA4uB,GAAkB5gB,EAAOX,IAAI,SAAAjO,GAAA,OAAKygB,EAAEpiB,UAC/BoxB,EAAS,EAAGA,EAASF,EAAWE,IAAU,CAC3C,IAAMxO,KACN,IAAKyO,EAAS,EAAGA,EAAS9gB,EAAOlH,OAAQgoB,IACrCzO,EAAI/U,KAAKojB,EAAQI,GAAQD,IAE7BD,EAAetjB,KAAK+U,IAM5B,OAAOuO,yCAGDne,GACN,IAAM+H,EAAY/H,EAAMhT,OACxB2H,KAAK8S,gBAAL9S,IAA2BoT,EAC3B,IAAMiK,EAAoBrd,KAAK6gB,mBAE/B,GAAKxD,EAAkBlS,YAAYE,EAAMhT,QAElC,CACH,IAAM0Q,EAAasU,EAAkBzU,OAAOod,UAAU,SAAAhsB,GAAA,OAAa2vB,EAAUtxB,SAAW+a,IACxFrK,GAAc,IAAMsU,EAAkBzU,OAAOG,GAAcsC,QAH3DgS,EAAkBzU,OAAO1C,KAAKmF,GAYlC,OALAgS,EAAkBjS,iBAAmB,KACrCiS,EAAkBzR,iBAAmB,KACrCyR,EAAkB7R,eAAiB,KAEnCxL,KAAKud,wBAAwBC,wBACtBxd,qDAuCQyL,EAAQme,EAAYjd,GAAQ,IAAA/T,EAAAoH,KAC3CyL,EAASuU,GAAmBvU,GAC5BkB,EAASnU,OAAOoU,WAAagS,aAAiBiL,eAAqBld,GAEnE,IAAMsR,EAAeje,KAAKke,kBACpB4L,EAAUF,EAAW5O,MAAM,EAAG4O,EAAWloB,OAAS,GAClDqoB,EAAaH,EAAWA,EAAWloB,OAAS,GAElD,GAAIuc,EAAaxS,EAAOpT,QAAUsU,EAAOkd,WACrC,MAAM,IAAIta,MAAS9D,EAAOpT,KAApB,sCAGV,IAAM2xB,EAAkBF,EAAQ7hB,IAAI,SAACoD,GACjC,IAAM4e,EAAYhM,EAAa5S,GAC/B,IAAK4e,EAED,MAAM,IAAI1a,MAASlE,EAAb,gCAEV,OAAO4e,EAAUhoB,QAGfmb,EAAQpd,KAAKod,MAAMzQ,EAAOiS,WAE1BsL,EAAK9M,EAAMlO,gBAAgBtG,OAC3BuhB,EAAiBH,EAAgB/hB,IAAI,SAAAjO,GAAA,OAAOkwB,EAAG1X,KAEjD8M,KACAC,EAAgB,SAAhBA,IAAgB,OAAM1K,EAAK1E,gBAEzBia,KACNle,EAAmBkR,EAAM3N,YAAa,SAAC3X,GACnC,IAAMuyB,EAAaF,EAAeliB,IAAI,SAAAjP,GAAA,OAASqS,EAAM0E,aAAajF,KAAKhT,KACvEsyB,EAAetyB,GAAKiyB,sIAAcM,GAAdN,QAA0BjyB,EAAGynB,EAAeD,OAhCzB,IAAAgL,EAkC3BtR,IAAcoR,IAAkB3e,IAAUA,EAAOpT,OAA1DgT,EAlCoCkf,GAAAD,EAAA,MAwC3C,OALAlN,EAAMoN,SAASnf,GAEf+Q,GAAkBgB,EAAO9P,EAAeK,SAAWhB,OAAQlB,EAAQ7C,OAAQkhB,GAAWC,GACtFlN,GAA0B7c,KAAMod,GAEzBA,0CAWA+E,GAA2D,IAA9CxV,EAA8CvH,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,MAAjCqlB,EAAiCrlB,UAAA,GAAjBwe,EAAiBxe,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,MAC5DslB,EAAkB/d,EAAO+d,gBACzBlI,EAAsB7V,EAAO8V,SAC7BkI,EAAUhe,EAAOge,QACjBhH,EF5JkB,SAACtH,GAC7B,KAAOA,EAAMoH,SACTpH,EAAQA,EAAMoH,QAElB,OAAOpH,EAJqB,CE4JWrc,MAC7BsiB,EAAuBqB,EAAUa,sBAEjCpC,GACF2B,aFvKuB,SAAC1H,GAChC,KAAOA,EAAMoH,SAAWpH,EAAMI,YAAYmO,KAAK,SAAA5wB,GAAA,OAAK5B,EAAEskB,KAAOpP,EAAeG,WACxE4O,EAAQA,EAAMoH,QAElB,OAAOpH,EAJwB,CEqKkBrc,MAGzCqc,MAAOsH,GAgBX,OAbA8G,GF7C0B,SAACnI,GAA6C,IAAvB3V,EAAuBvH,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,MAAViX,EAAUjX,UAAA,GACxEylB,SACEH,EAAkB/d,EAAO+d,gBACzB9N,EAAWjQ,EAAOiQ,SAClBvjB,EAASsT,EAAOsW,OAAhB5pB,IAA0BsT,EAAO8V,SAGnCoI,EADAH,EACkBpI,EAAqBQ,eAErBR,EAAqBmC,iBAG1B,OAAb7H,SACOiO,EAAgBxxB,GAEvBwxB,EAAgBxxB,IACZgjB,QACA1P,UAjBsB,CE6CW2V,EAAsB3V,EAAQ3M,MACnEkiB,GAAyBC,EAAaC,GAAcE,uBAAsBG,SAAUD,GAChFhqB,OAAOoU,QACH+d,WACDhe,IAEH+d,GFvE6B,SAACpI,EAAsBF,EAAYC,GACxE,IAAMoC,EAAmBnC,EAAqBmC,iBAE9C,IAAK,IAAMxB,KAAUwB,EAAkB,CACnC,IACMrB,EADYqB,EAAiBxB,GACNtW,OACvB6V,EAAsBH,EAAe1V,OAAO8V,SAC5CqI,GAAwBzI,EAAeuB,WAAWkH,uBACpDzI,EAAeuB,WAAWkH,sBAAsB1H,EAAYf,EAAe1V,QAC/E,GAAIyW,EAAWX,WAAaD,GAAuBsI,EAAuB,CACtE,IAAMC,EAAgB3H,EAAWxG,SACjCsF,GAAyB6I,EAAe3I,GACpCE,uBACAC,qBACAE,SAAUD,GACXY,KAf0B,CEwEHd,EAAsBF,GAC5CzV,SACAiX,eAID5jB,sCAUPgrB,EAAW5e,GACX,OAAQ4e,GACR,InC3hBmB,cmC4hBfhrB,KAAKsmB,eAAepgB,KAAKkG,GAG7B,OAAOpM,+CASEgrB,GACT,OAAQA,GACR,InC1iBmB,cmC2iBfhrB,KAAKsmB,kBAIT,OAAOtmB,qDAUQ+d,EAAW4M,GAAS,IAAApxB,EAAAyG,KACfA,KAAKsmB,eACXxd,QAAQ,SAAAlQ,GAAA,OAAM+lB,EAAG1mB,KAAKqf,EAAMyG,EAAW4M,uCA8CpDM,EAAkBte,GACnB,IAAMsR,EAAeje,KAAKke,kBAE1B,IAAKD,EAAagN,GACd,MAAM,IAAI1b,MAAJ,SAAmB0b,EAAnB,kBAGV,IAAMC,EAAeve,EAAOtU,MAAW4yB,EAAlBte,UAErB,GAAIsR,EAAaiN,GACb,MAAM,IAAI3b,MAAJ,SAAmB2b,EAAnB,mBAGV,IAb2BC,EE9jB5B,SAAgCC,EAAcjf,EAAYQ,GAAQ,IAC/D0e,EAA4C1e,EAA5C0e,QAASC,EAAmC3e,EAAnC2e,UAAWC,EAAwB5e,EAAxB4e,QAAS/tB,EAAemP,EAAfnP,MAAOgP,EAAQG,EAARH,IAD2BrU,EAEhDizB,EAAa1U,SAFmC+D,EAAAhY,EAAAtK,EAAA,GAE9DqzB,EAF8D/Q,EAAA,GAExDgR,EAFwDhR,EAAA,GAIhE4Q,IACD7tB,EAAmB,IAAVA,KAAiBA,GAASA,EAAQguB,GAASA,EAAOhuB,EAC3DgP,EAAe,IAARA,KAAeA,GAAOA,EAAMif,GAAUA,EAAO,EAAKjf,EAErD8e,IACAC,EAAU1nB,KAAK6nB,KAAK7nB,KAAK8nB,IAAInf,EAAMhP,GAAS8tB,IAGhDD,EAxDgB,SAAlBO,EAAmBL,EAAS/tB,EAAOgP,GAIrC,IAHA,IAAM6e,KACF9Y,EAAO/U,EAEJ+U,EAAO/F,GACV6e,EAAQnlB,KAAKqM,GACbA,GAAQgZ,EAIZ,OAFAF,EAAQnlB,KAAKqM,GAEN8Y,EA8COO,CAAgBL,EAAS/tB,EAAOgP,IAG1C6e,EAAQ,GAAKG,GACbH,EAAQ5jB,QAAQ+jB,GAEhBH,EAAQA,EAAQ3pB,OAAS,IAAM+pB,GAC/BJ,EAAQnlB,KAAKulB,EAAO,GAIxB,IADA,IAAMI,KACG/zB,EAAI,EAAGA,EAAIuzB,EAAQ3pB,OAAS,EAAG5J,IACpC+zB,EAAa3lB,MACT1I,MAAO6tB,EAAQvzB,GACf0U,IAAK6e,EAAQvzB,EAAI,KAIzB,IAAMg0B,KAYN,OAXA5f,EAAmBC,EAAY,SAACrU,GAC5B,IAAM8Z,EAAQwZ,EAAarb,aAAajF,KAAKhT,GAC7C,GAAI8Z,aAAiBnF,EACjBqf,EAAW5lB,KAAK0L,OADpB,CAKA,IAAMrQ,EArEU,SAAlBwqB,EAAmBF,EAAc9yB,GAOnC,IANA,IAAIizB,EAAU,EACVC,EAAWJ,EAAanqB,OAAS,EACjCwqB,SACA3qB,SAGGyqB,GAAWC,GAAU,CAIxB,GAAIlzB,IAFJwI,EAAQsqB,EADRK,EAASF,EAAUnoB,KAAKoN,OAAOgb,EAAWD,GAAW,KAGlCxuB,OAASzE,EAAQwI,EAAMiL,IACtC,OAAOjL,EACAxI,GAASwI,EAAMiL,IACtBwf,EAAUE,EAAS,EACZnzB,EAAQwI,EAAM/D,QACrByuB,EAAWC,EAAS,GAI5B,OAAO,KAiDWH,CAAgBF,EAAcja,GAC5Cka,EAAW5lB,KAAQ3E,EAAM/D,MAAzBsuB,IAAkCvqB,EAAMiL,SAGnCsf,aAAYrU,KAAM4T,GA1CxB,CF2kBsBrrB,KAAKkP,gBAAgB/D,YAAY8f,GACWjrB,KAAKyP,YAAa9C,GAA3Emf,EAdmBX,EAcnBW,WAAYrU,EAdO0T,EAcP1T,KAEd0U,EAAWnT,IAAc8S,KAEvBzzB,KAAM6yB,EACNtwB,KAAM8D,EAAUE,UAChBqX,QAAS9X,EAAiBI,OAC1BkZ,UACCyT,IAAe,GAElB9N,EAAQpd,KAAKod,MAAMzQ,EAAOiS,WAMhC,OALAxB,EAAMoN,SAAS2B,GAEf/P,GAAkBgB,EAAO9P,EAAeM,KAAOqd,mBAAkBte,SAAQue,gBAAgB,MACzFrO,GAA0B7c,KAAMod,GAEzBA,+CA8BP,OAAO,IAAIxf,EAHEoC,KAAKosB,UAAUtuB,EAAWC,WACxBiC,KAAKqsB,wEA/jBW1f,GAC/B,OAAOF,EAAkBK,iBAAiBH,wCAf1C,OAAOsI,SAmlBArX,GG3qBA2V,GAAoDM,GAApDN,IAAKG,GAA+CG,GAA/CH,IAAKK,GAA0CF,GAA1CE,IAAKC,GAAqCH,GAArCG,IAAKsY,GAAgCzY,GAAhCyY,MAAOC,GAAyB1Y,GAAzB0Y,KAAMC,GAAmB3Y,GAAnB2Y,MAAYC,GAAO5Y,GAAZ6Y,ICsBjDC,IACFC,QxC8LmB,SAAAA,UAAA,QAAA5yB,EAAAoL,UAAA1D,OAAImrB,EAAJhkB,MAAA7O,GAAAT,EAAA,EAAAA,EAAAS,EAAAT,IAAIszB,EAAJtzB,GAAA6L,UAAA7L,GAAA,OACnB,SAACyZ,GAAqC,IAAjCrG,EAAiCvH,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,IAAtBwZ,cACRkO,EAAY9Z,EACZ+Z,SACE7L,KAyBN,OAvBA2L,EAAW/jB,QAAQ,SAACwT,GAChBwQ,EAAYxQ,EAAUwQ,GACtB5L,EAAYhb,KAAZgb,+HAAoB4L,EAAUrQ,cACzBsQ,IACDA,EAAaD,KAIjBC,GAAcA,IAAeD,GAC7BC,EAAWC,UAGf5Q,GAAkB0Q,EAAWxf,EAAeI,QAAS,KAAMwT,GAE3D4L,EAAU7P,uBACVJ,GAA0B7J,EAAI8Z,GAE1BngB,EAAOiS,UACPkO,EAAUrH,UAAUzS,GAEpB8Z,EAAUrH,UAAU,MAGjBqH,IwC1NXG,IxC4He,SAAAA,MAAA,QAAAjzB,EAAAoL,UAAA1D,OAAIsF,EAAJ6B,MAAA7O,GAAAT,EAAA,EAAAA,EAAAS,EAAAT,IAAIyN,EAAJzN,GAAA6L,UAAA7L,GAAA,OAAa,SAAAS,GAAA,OAAMgZ,EAAGia,IAAHja,QAAUhM,KwC3H5C0X,OxCgCkB,SAAAA,SAAA,QAAA1kB,EAAAoL,UAAA1D,OAAIsF,EAAJ6B,MAAA7O,GAAAT,EAAA,EAAAA,EAAAS,EAAAT,IAAIyN,EAAJzN,GAAA6L,UAAA7L,GAAA,OAAa,SAAAS,GAAA,OAAMgZ,EAAG0L,OAAH1L,QAAahM,KwC/BlDkmB,QxC+DmB,SAAAA,UAAA,QAAAlzB,EAAAoL,UAAA1D,OAAIsF,EAAJ6B,MAAA7O,GAAAT,EAAA,EAAAA,EAAAS,EAAAT,IAAIyN,EAAJzN,GAAA6L,UAAA7L,GAAA,OAAa,SAAAS,GAAA,OAAMgZ,EAAGka,QAAHla,QAAchM,KwC9DpDohB,QxCsJmB,SAAAA,UAAA,QAAApuB,EAAAoL,UAAA1D,OAAIsF,EAAJ6B,MAAA7O,GAAAT,EAAA,EAAAA,EAAAS,EAAAT,IAAIyN,EAAJzN,GAAA6L,UAAA7L,GAAA,OAAa,SAAAS,GAAA,OAAMgZ,EAAGoV,QAAHpV,QAAchM,KwCrJpDmmB,kBCvB6B,SAAAA,oBAAA,QAAAnzB,EAAAoL,UAAA1D,OAAIsF,EAAJ6B,MAAA7O,GAAAT,EAAA,EAAAA,EAAAS,EAAAT,IAAIyN,EAAJzN,GAAA6L,UAAA7L,GAAA,OAAa,SAAAS,GAAA,OAAMgZ,EAAGma,kBAAHna,QAAwBhM,KDwBxE6J,KCfgB,SAAAA,OAAA,QAAA7W,EAAAoL,UAAA1D,OAAIsF,EAAJ6B,MAAA7O,GAAAT,EAAA,EAAAA,EAAAS,EAAAT,IAAIyN,EAAJzN,GAAA6L,UAAA7L,GAAA,OAAa,SAAAS,GAAA,OAAMgZ,EAAGnC,KAAHmC,QAAWhM,KDgB9C0H,eACA+D,aACA2a,YE/BG,SAAAA,YAAsBxX,EAAYC,GACrC,OAAOnH,EAAakH,EAAYC,EAAYN,GAAkBK,EAAYC,QF+B1EF,iBACAG,kBACAuX,c7BxBG,SAAAA,cAAwBzX,EAAYC,EAAYhH,GACnD,OAAO6G,GAAMC,GAAcC,EAAYC,EAAYhH,GAAWiH,GAAeF,EAAYC,EAAYhH,K6BwBrG6G,UAGEpb,QAAcA,QACpB9B,OAAOoU,OAAOhP,IACV+uB,aACAW,QACAhgB,iBACAxN,oBACAhC,aACAe,gBACA4N,oBACAnS,YACDizB,GAEY3vB,siBGrDf,SAAA5D,EAAAhB,GACA,UAAAiB,QAAA3C,UAAA,UAAA2C,QAAA1C,QACAA,oBAEAC,yRAJA,CASCE,kBACD,gBAAAsC,GCTA,IAAAhB,KAGA,SAAAJ,EAAAW,GAGA,GAAAP,EAAAO,GACA,OAAAP,EAAAO,GAAAjC,QAGA,IAAAQ,EAAAkB,EAAAO,IACAzB,IACAC,KACAT,YAUA,OANAU,mCAGAT,OAGAO,EAAAR,QA0DA,OArDAM,MAGAA,MAGAA,oBACAA,UACAY,2BAA0CE,uBAK1Cd,gBACA,oBAAAiB,eAAAC,aACAN,4CAAwDO,iBAExDP,sCAAiDO,YAQjDnB,kBAEA,GADA,EAAAoB,IAAAgB,EAAApB,EAAAoB,IACA,EAAAhB,EAAA,OAAAgB,EACA,KAAAhB,GAAA,UAAAiB,QAAAD,SAAAd,WAAA,OAAAc,EACA,IAAAT,EAAAf,OAAAY,OAAA,MAGA,GAFAxB,OACAY,mCAAyCE,wBACzC,EAAAM,GAAA,iBAAAgB,EAAA,QAAAlC,KAAAkC,EAAApB,EAAAR,EAAAmB,EAAAzB,EAAA,SAAAkB,GAAgH,OAAAgB,EAAAhB,IAAqBM,cACrI,OAAAC,GAIA3B,gBACA,IAAAoB,EAAAgB,KAAAd,WACA,WAA2B,OAAAc,EAAAG,SAC3B,WAAiC,OAAAH,GAEjC,OADApC,aACAoB,GAIApB,kBAAsD,OAAAY,OAAAoB,UAAAC,eAAA5B,KAAA+B,EAAAhB,IAGtDpB,OAIAgB,IAAAmB,EAAA,GDxEA,ECwEA,SAAAC,EAAAhB,EAAAJ,GAAA,aAAAA,IAAAI,GAAA,IAAAO,EAAA,oBAAAS,IAAAhB,GAAA,QAAAJ,EAAA,EAAAA,EAAAI,EAAA0I,OAAA9I,IAAA,KAAAW,EAAAP,EAAAJ,GAAAW,EAAAb,WAAAa,EAAAb,aAAA,EAAAa,EAAAwS,cAAA,YAAAxS,MAAAyS,UAAA,GAAAxT,OAAAC,eAAAuB,EAAAT,EAAAF,IAAAE,IAAA,gBAAAP,EAAAJ,EAAAW,GAAA,OAAAX,GAAAoB,EAAAhB,EAAAY,UAAAhB,GAAAW,GAAAS,EAAAhB,EAAAO,GAAAP,GAAA,GClFMw0B,EAAY,SAAZA,EAAa7c,EAAK8c,GACpB9c,EAAI7H,QAAQ,SAAC+e,YACLA,GAA+B,OAATA,IAG1B4F,EAAK5F,GAAQ,MAAAtvB,EAAA,WAKjB,SAAAyB,EAAa2W,iGAAK7E,QACd9L,KAAK0tB,QACLF,EAAU7c,EAAK3Q,KAAK0tB,qDAGhB/c,GAEJ,OADA6c,EAAU7c,EAAK3Q,KAAK0tB,MACb1tB,6CAIP,OAAOxH,OAAOsN,KAAK9F,KAAK0tB,iDAGTC,EAAMC,GACrB,IAAIv0B,SACEw0B,KACFC,EAAKH,EAAKD,KACVK,EAAKH,EAAKF,KACd,IAAKr0B,KAAOy0B,OACEj0B,eAAe5B,KAAK61B,EAAIz0B,KAG9BA,KAAO00B,GAGXF,EAAa3nB,KAAK7M,IAEtB,OAAO,IAAI20B,EAAWH,SAjCT,GAiCSA,+jBClC9B,IACII,EAAiB,SAAjBA,EAAkB/lB,GAEd,GAAmB,qBAARA,EAAP,YAAAhO,EAAOgO,IAAkB,CACzB,GAAY,OAARA,EAAgB,SAEpB,GAAc,oBADN1P,OAAOoB,UAAU0I,SAASrK,KAAKiQ,GAEnC,MAA8E,YAAtEA,EAAIsd,YAAYljB,WAAW+F,MAAM,4BAA8B,GAG/E,UAGsB6lB,EAAwB,oBAAXx2B,UAAwCA,OACpDy2B,EAAeD,EAAIE,uBAAyBF,EAAIG,6BACvEH,EAAII,0BAA4BJ,EAAIK,wBACpCL,EAAIM,yBACJ,SAAUpiB,GACNqiB,WAAWriB,EANF,KASjBsiB,EAAiB,SAAjBA,IACI,OAAIA,EAAeC,cAAe,IAAI/uB,MAAO0K,UACjCokB,EAAeC,WAAYrsB,YAAcosB,EAAeE,QAAQtsB,YAG5EosB,EAAeE,KAAO,GACtBF,EAAeC,YAAa,IAAI/uB,MAAO0K,WACJhI,YAAcosB,EAAeE,QAAQtsB,aAwC5EusB,EAAO,SAAPA,IAAsB,QAAA70B,EAAAoL,UAAA1D,OAAX8f,EAAW3Y,MAAA7O,GAAApB,EAAA,EAAAA,EAAAoB,EAAApB,IAAX4oB,EAAW5oB,GAAAwM,UAAAxM,GAClB,IAAMk2B,KAEN,OADAtN,EAAO1Y,QAAQ,SAAA9O,GAAA,OAAS80B,EAAI5oB,KAAJ4oB,UAAY1nB,MAC7B0nB,GAQXC,EAAY,SAAZA,EAAaC,GACT,IAAIC,KACAC,EAAiB,KAKrB,OAHAF,EAAmBA,GACa,mBAArBA,GAAmCA,GAAqB,aAE5D,SAACG,EAAWxE,MACZzkB,KAAKqB,MAAM0nB,EAAOE,GACE,OAAnBD,IACAA,EAAiBf,EAAa,WAC1B,IAAMiB,EAAQH,EAAMjU,MAAM,GAC1BiU,EAAMvtB,OAAS,EACfwtB,EAAiB,KAEVE,EAzCN/c,OAAO,SAAC1J,EAAOgW,GAEZ,OAAIA,EAAGiQ,QAAQjmB,EAAMV,IACVU,GAGXA,EAAMV,IAAI0W,EAAGiQ,MAAQ,EACrBjmB,EAAM0mB,OAAOnpB,KAAKyY,GAEXhW,KACNV,OAASonB,YACbA,OA8BavmB,QAAQ,SAAA9O,GAAA,OAAM2kB,MAC5BqQ,EAAiBrE,QAKjC2E,EAAQ,SAARA,EAAQt1B,GAAA,OAAa,mBAAAhB,EAAAoM,UAAA1D,OAAI8f,EAAJ3Y,MAAA7P,GAAAO,EAAA,EAAAA,EAAAP,EAAAO,IAAIioB,EAAJjoB,GAAA6L,UAAA7L,GAAA,OAAeioB,EAAOvZ,IAAI,SAACb,GAC5C,IAAMmoB,EAAOC,EAAUpoB,GACvB,OACI/O,KAAMk3B,EAAKl3B,KACXo3B,cAAeF,EAAKE,cACpB12B,MAAOw2B,EAAKG,UAGpBC,EAAkB,SAAlBA,IAAkB,QAAA31B,EAAAoL,UAAA1D,OAAI8f,EAAJ3Y,MAAA7O,GAAApB,EAAA,EAAAA,EAAAoB,EAAApB,IAAI4oB,EAAJ5oB,GAAAwM,UAAAxM,GAAA,OACdoC,aAAcwmB,EAAOxG,MAAM,EAAGwG,EAAO9f,OAAS,GAC9Cid,GAAI6C,EAAOA,EAAO9f,OAAS,KAE/BkuB,EAAmB,SAAnBA,EAAoBC,GAChB,IAAIf,KACE7mB,KA2BN,OA1BA4nB,EAAK/mB,QAAQ,SAAA9O,GAAA,OAAQiO,EAAIsnB,EAAKE,gBAAkB,IAChD,SAASK,EAAKnf,GACVA,EAAI7H,QAAQ,SAACymB,GACT,IAAIQ,EACAC,SACAC,SACAC,UACGH,EAAQR,EAAKE,iBAAkBxnB,GAIb,KADrB+nB,EAAc/nB,EAAI8nB,KACQC,IAAgBlB,EAAIptB,OAAS,IAEnDuuB,EAASnB,EAAI9T,MAAM,EAAGgV,GACtBE,EAAUpB,EAAI9T,MAAMgV,EAAc,GAClClB,EAAMmB,EAAO1U,OAAO2U,GAGpBA,EAAQpnB,QAAQ,SAAC+e,EAAM/vB,GAAP,OAAamQ,EAAI4f,EAAK4H,eAAiB33B,EAAIm4B,EAAOvuB,SAClEuG,EAAI8nB,GAASjB,EAAI5oB,KAAKqpB,GAAQ,GAXlCtnB,EAAI8nB,GAASjB,EAAI5oB,KAAKqpB,GAAQ,EAclCO,EAAIP,EAAKY,iBArBjB,CAwBIN,GACGf,GAEXsB,GACIC,WAAY,SAAAA,aAAe,QAAAr2B,EAAAoL,UAAA1D,OAAX8f,EAAW3Y,MAAA7O,GAAApB,EAAA,EAAAA,EAAAoB,EAAApB,IAAX4oB,EAAW5oB,GAAAwM,UAAAxM,GACvB,IAAMujB,KAIN,OAHAqF,EAAO1Y,QAAQ,SAACwnB,GACZ93B,OAAOoU,OAAOuP,4HAASmU,EAAYj4B,KAAOi4B,EAAYv3B,UAEnDojB,GAEXoU,SAAU,SAAAA,SAAAv2B,GAAA,OAAes2B,EAAYv3B,QAgBvCy3B,aACF,SAAAx2B,EAAao2B,iGAAUK,QACnBzwB,KAAK2e,GAAKyR,EACVpwB,KAAK0wB,iEAGe,IAAA12B,EAEpB,OADA22B,OAAKD,KAAIxqB,KAATyqB,mBACO3wB,qDAIP,OAAOA,KAAK0wB,wCAIZ,OAAO1wB,KAAK2e,SAhBd6R,GAgBc7R,8XC1LhB,SAAA3kB,EAAa3B,EAAMo3B,EAAe9oB,iGAASiqB,QACbjqB,EAAUA,MACpC3G,KAAK3H,KAAOA,EACZ2H,KAAKyvB,cAAgBA,EACrBzvB,KAAK6wB,SACL7wB,KAAKmwB,iBACLnwB,KAAK8wB,MAAQ,KACb9wB,KAAK+wB,kBACL/wB,KAAKgxB,UAAYrqB,EAAQqqB,UACzBhxB,KAAKixB,WACLjxB,KAAKowB,SAAW,KAChBpwB,KAAKkxB,2EAGgB,QAAAl3B,EAAAhB,EAAAgH,KAAApH,EAAAwM,UAAA1D,OAALgvB,EAAK7nB,MAAAjQ,GAAAd,EAAA,EAAAA,EAAAc,EAAAd,IAAL44B,EAAK54B,GAAAsN,UAAAtN,GAGrB,OAFAq5B,OAAKN,OAAM3qB,KAAXirB,QAAmBT,GACnBA,EAAI5nB,QAAQ,SAAA9O,GAAA,OAASgpB,EAAMmN,cAAcjqB,KAAKwO,KACvC1U,mDAGMuvB,GAEb,OADAvvB,KAAKkxB,cAAchrB,KAAKqpB,GACjBvvB,6CAiBP,OAHAA,KAAK0vB,KAAO1vB,KAAKowB,SAALpwB,aAAiBA,KAAKoxB,oBAClCpxB,KAAKixB,QAAQ/qB,KAAKlG,KAAK0vB,MACvB1vB,KAAK+wB,kBACE/wB,qDAIP,OAA0B,IAAtBA,KAAK6wB,MAAMnvB,SAEPrJ,KAAM2H,KAAK3H,KACXo3B,cAAezvB,KAAKyvB,cACpB12B,MAAOiH,KAAK0vB,OAGb1vB,KAAKgxB,UAALhxB,aAAkBA,KAAK6wB,MAAM5oB,IAAI,SAAAjO,GAAA,OAAQq3B,EAAK5B,6DAIrD,IACIwB,EAAUjxB,KAAKixB,QACfK,EAAOL,EAAQA,EAAQvvB,OAAS,GAEpC,OAAuB,IAAnBuvB,EAAQvvB,OACD1B,MAEXixB,EAAQ/qB,KAAKorB,GACNtxB,4CAIP,IAAMuxB,EAAOvxB,KAAKixB,QACdK,EAAOC,EAAKA,EAAK7vB,OAAS,GAG9B,OAFA6vB,EAAK7vB,OAAS,EACd6vB,EAAKrrB,KAAKorB,GACHtxB,4CAIP,OAAqB,OAAdA,KAAK3H,sCAhDZ,OAAO2H,KAAK8wB,wBAGN/3B,GAGN,OAFAiH,KAAK8wB,MAAQ/3B,EACbiH,KAAK+wB,kBACE/wB,WD0JK2e,GC1JL3e,kQC3BX,SAAAhG,KAAA,SAAAA,EAAAhB,GAAA,KAAAgB,aAAAhB,GAAA,UAAAub,UAAA,sCAAeid,QACXxxB,KAAK6wB,SACL7wB,KAAKmvB,WACDsC,aACAC,oEAIY,IAAA13B,EAEhB,OADAm3B,OAAKN,OAAM3qB,KAAXirB,mBACOnxB,2DAGc2e,GAAI,IAAA3lB,EAAAgH,KACnB2xB,EAAS3xB,KAAKmvB,UAAUuC,aAC1BzvB,EAAQ0vB,EAAOzrB,KFaN,SAAC0rB,EAAOjT,GACrB,IAAIkT,EAAM,SAANA,IACAlT,iBAAMiT,EAAM3pB,IAAI,SAACsnB,GACb,IACIgC,EAAOhC,EAAK0B,QACZl5B,EAAIw5B,EAAK7vB,OAAS,EACtB,OAAQ6vB,EAAKx5B,EAAI,EAAI,EAAI,EAAIA,EAAI,GAAIw5B,EAAKx5B,SAIlD,OADA85B,EAAIjD,KAAOF,IACJmD,EAVM,CEb0B7xB,KAAK6wB,MAAOlS,IAAO,EAE1D,OAAO,WACHjK,EAAKya,UAAUuC,aAAeC,EAAOre,OAAO,SAACqL,EAAI7mB,GAAL,OAAWA,IAAMmK,2DAI5C0c,GAAI,IAAA3lB,EAAAgH,KACnB2xB,EAAS3xB,KAAKmvB,UAAUsC,UAC1BxvB,EAAQ0vB,EAAOzrB,KFgBT,SAAC0rB,EAAOjT,GAClB,IAAIkT,EAAM,SAANA,IACAlT,iBAAMiT,EAAM3pB,IAAI,SAACsnB,GACb,IAAMgC,EAAOhC,EAAK0B,QAClB,OAAQM,EAAK,GAAIA,EAAKA,EAAK7vB,OAAS,SAI5C,OADAmwB,EAAIjD,KAAOF,IACJmD,EARG,CEhB0B7xB,KAAK6wB,MAAOlS,IAAO,EAEvD,OAAO,WACH9J,EAAKsa,UAAUsC,UAAYE,EAAOre,OAAO,SAACqL,EAAI7mB,GAAL,OAAWA,IAAMmK,0DAK9D,QAASjC,KAAKmvB,UAAUsC,UAAU/vB,aDL3B1B,GCK2B0B,8XCtBtC,SAAA1H,IAAe,IAAAhB,EAAAgH,MAAA,SAAAhG,EAAAhB,GAAA,KAAAgB,aAAAhB,GAAA,UAAAub,UAAA,sCAAAvU,KAAAhG,GACXgG,KAAK8xB,oBACL9xB,KAAKgxB,UAAY1B,EAAMtvB,KAAK8xB,kBAC5B9xB,KAAK5I,KAAO,IAAI26B,EAAK,KAAM,MAAQf,UAAWhxB,KAAKgxB,YACnDhxB,KAAK5I,KAAKg5B,SAAWA,EAASC,WAE9BrwB,KAAKgyB,UAAY,KACjBhyB,KAAKiyB,cACLjyB,KAAKkyB,qBACDC,yBACAC,uBAGJpyB,KAAKqyB,UAAYtD,EAAU,SAACpE,GACxB,IAAIoF,SACJ,IAAKA,KAASpF,EAAQ2H,YAAa,CAC/B,OAAUz4B,eAAe5B,KAAKyc,EAAKod,iBAAkB/B,GACjD,OAEJrb,EAAKod,iBAAiB/B,GAAOwC,mEAKxBrqB,EAAKsqB,GAClB,IACIC,EADAvxB,SAEE4wB,EAAmB9xB,KAAK8xB,iBAC1B16B,EAAO4I,KAAK5I,KACZ45B,EAAYhxB,KAAKgxB,UA8CrB,OA5CC,SAASlB,EAAK4C,EAAMjD,EAAewB,GAChC,IAAI53B,SACA02B,SACA4C,SACApD,SAEJ,IAAKl2B,KAAOq5B,EACR,MAAU74B,eAAe5B,KAAKy6B,EAAMr5B,GAcpC,GAVAk2B,EAAO,IAAIwC,EAAK14B,EADhB02B,KAAWN,EAAgBp2B,GACG23B,cAC9Bc,EAAiB/B,GAASR,YAErBoD,EAAO1B,EAAQ0B,MAChBA,EAAKC,gBAAgBrD,GAGrBn4B,EAAKw7B,gBAAgBrD,GAGrBtB,EAAe/sB,EAAMwxB,EAAKr5B,IAC1By2B,EAAI5uB,EAAJ4uB,GAAYL,EAAgBp2B,EAA5By2B,KAAsC6C,KAAMpD,IAC5CA,EAAKa,SAAWA,EAASC,gBACtB,GAAInvB,aAAesvB,EAAgB,KAAAp4B,EACtCm3B,EAAKa,SAAWlvB,EAAIvI,OACpBk6B,KAAKD,gBAALC,UAAwB3xB,EAAI4xB,kBAAkB7qB,IAAI,SAAAjO,GAAA,OAAS83B,EAAiB/B,YAE5ER,EAAKa,SAAWA,EAASG,SACzBhB,EAAKG,KAAOxuB,EA7BvB,CAiCCgH,EAAe,OAAVsqB,EAAiB,GAAQA,EAAzBA,KACHG,KAAMb,EAAiBU,KAG3BxyB,KAAKgyB,UAAY,IAAIjgB,EAAWvZ,OAAOsN,KAAK9F,KAAK8xB,oBAIjDW,EAAiBzyB,KAAKwlB,YAAYuN,gBAAgB37B,GAAMmkB,OAAOnkB,GAAMkc,OAAO,SAAAtZ,GAAA,OAAQu1B,EAAKwB,kBAC1EjoB,QAAQ,SAAA9O,GAAA,OAAQu1B,EAAK1G,YACpC+G,EAAiB6C,GAAgB3pB,QAAQ,SAAA9O,GAAA,OAAQu1B,EAAK1G,YAC/C7oB,gDAGGgzB,GACV,GAAIA,KAAQhzB,KAAK8xB,iBACb,OAAO9xB,KAAK8xB,iBAAiBkB,GAAMtD,wDAKrBuD,EAAOC,GAAQ,IAAAt6B,EAAAW,EAAAyG,KAC3B4xB,EAAQqB,EAAMhrB,IAAI,SAAAjO,GAAA,OAAQ6a,EAAKid,iBAAiBkB,KAClDG,GAAQC,MAAIC,GAAeC,SAAnBF,UAA+BxB,IAG3C,OADAA,EAAM9oB,QAAQ,SAAA9O,GAAA,OAAQu1B,EAAKgE,gBAAgBJ,KACpCA,mBAAuBD,EAAOt4B,MAAQs4B,EAAOvU,2CAGrC,IACf,IAAI6U,SACAC,SAFW76B,EAAAwM,UAAA1D,OAAR8f,EAAQ3Y,MAAAjQ,GAAAd,EAAA,EAAAA,EAAAc,EAAAd,IAAR0pB,EAAQ1pB,GAAAsN,UAAAtN,GAGf,IACIo5B,KACAU,EAAQpQ,EAAOvZ,IAAI,SAAC+a,GAEhB,OADAA,EAAM,GAAG0M,KAAO1M,EAAM,GACfA,EAAM,KAMrB,OAJA4O,EAAM9oB,QAAQ,SAAA9O,GAAA,OAAQu1B,EAAK1G,YAC3BqI,EAAchrB,KAAdgrB,UAAsBrC,iBAAQ+C,EAAM3pB,IAAI,SAAAjO,GAAA,OAAQu1B,EAAK2B,oBACrDsC,EAAa,IAAIzhB,EAAW6f,EAAM3pB,IAAI,SAAAjO,GAAA,OAAQu1B,EAAKE,iBAE9CzvB,KAAKiyB,aAMVwB,EAAgB7D,EAAiBgC,IACnB9oB,QAAQ,SAAA9O,GAAA,OAAgB05B,EAAa7K,YACnD2K,EAAWG,OAAOF,EAAcxrB,IAAI,SAAAjO,GAAA,OAAQu1B,EAAKE,iBACjDyB,EAAchrB,KAAdgrB,UAAsBrC,iBAAQ4E,EAAcxrB,IAAI,SAAAjO,GAAA,OAAQu1B,EAAK2B,oBAE7DlxB,KAAK4zB,0BAA0B/qB,MAAMG,KAAK,IAAIyN,IAAIya,IAAiBsC,GAC5DxzB,OAXHA,KAAK4zB,0BAA0B1C,GAC/BlxB,KAAKiyB,cACEjyB,8DAYYkxB,EAAesC,GAAY,IAAA56B,EAAAoH,KAE9C6zB,KACAC,KAmBJ,OAlBIN,GAEoBzhB,EAAWU,WAAWzS,KAAKgyB,UAAWwB,GAC9BO,UAEpBjrB,QAAQ,SAAA9O,GAAA,OAASsd,EAAKwa,iBAAiB9O,GAAOgR,eAG1D9C,EAAcpoB,QAAQ,SAAC9O,GACnB65B,EAAS3tB,KAAT2tB,UAAiB75B,EAAEm1B,UAAUuC,iBAEjCR,EAAcpoB,QAAQ,SAAC9O,GACnB85B,EAAS5tB,KAAT4tB,UAAiB95B,EAAEm1B,UAAUsC,eAGhCzxB,KAAKkyB,oBAAoBC,uBAAyB0B,EAAS/qB,QAAQ,SAAA9O,GAAA,OAAM2kB,OACzE3e,KAAKkyB,oBAAoBE,oBAAsBpyB,KAAKqyB,UAAUyB,GAAYxB,YAAakB,IACxFxzB,KAAKi0B,2BACEj0B,oDAGgB,QAAAhG,EAAAgG,KAAAhH,EAAAoM,UAAA1D,OAARwyB,EAAQrrB,MAAA7P,GAAAO,EAAA,EAAAA,EAAAP,EAAAO,IAAR26B,EAAQ36B,GAAA6L,UAAA7L,GACvB,IACIyN,EADUktB,EAAOjsB,IAAI,SAAAjP,GAAA,OAASm7B,EAAKrC,iBAAiB/B,KACvC9nB,IAAI,SAAAjO,GAAA,OAASu1B,EAAMA,EAAKG,QAEzC,OADA1vB,KAAKo0B,OAALp0B,aAAegH,IACRhH,qDAWP,OADAA,KAAKiyB,cACEjyB,8DAMP,OAFAA,KAAKkyB,oBAAoBC,yBACzBnyB,KAAKkyB,oBAAoBE,sBAClBpyB,0DAGa3G,GAEpB,OADA2G,KAAKkyB,oBAAuB74B,EAA5B2G,gBACOA,4DAGe+vB,GACtB,OAAO/vB,KAAK8xB,iBAAiB/B,mDAvBTR,GACpB,IAAM8E,KAEN,OHdR,SAASC,EAAwB/E,EAAM8E,EAAUE,GAC7C,IAAIxE,SACJR,EAAKsB,MAAM/nB,QAAQ,SAAC0rB,GAChBF,EAAuBE,EAAWH,EAAUE,KAG5ChF,EAAKkF,WAAa1E,EAAQR,EAAKE,iBAAkB8E,IAGrDF,EAASnuB,KAAKqpB,GACdgF,EAAWxE,GAAS,GAVxB,CGa+BR,EAAM8E,MACtBA,QDtI2B3yB,GCsI3B2yB,iXC+JfhY,aA5TI,SAAAriB,KAAA,SAAAA,EAAAhB,GAAA,KAAAgB,aAAAhB,GAAA,UAAAub,UAAA,sCAAemgB,QACX10B,KAAK20B,OAAS,IAAIC,EAClB50B,KAAK60B,aACL70B,KAAK80B,0DA6BL,IAAIC,SACA7sB,SAWJ,OATsB,IAAlB9C,UAAO1D,QACPqzB,EAAa,KACb7sB,4CAEA6sB,0CACA7sB,2CAGJlI,KAAKg1B,gBAAgBD,EAAY7sB,GAC1BlI,oDASgB,IAAAhG,EACnBi7B,EACAC,EACAC,SACA3C,SACA4C,SAiBJ,OAfIhwB,UAAO1D,OAAS,GAChB8wB,0CACA2C,0CACAC,4CAEA5C,EAAQ,KACR2C,0CACAC,2CAGJH,EAAoBG,EAAQzF,IAE5B0F,EADAH,EAAiB,IAAI1E,EAAeyE,EAAkBtW,KACvCiU,gBAAfyC,UAAkCJ,EAAkBj6B,eAEpDgF,KAAKg1B,gBAAgBxC,4HAAU2C,EAAUD,IAClCl1B,mDAIM+0B,EAAY7sB,GAEzB,OADAlI,KAAK20B,OAAOW,gBAAgBptB,EAAK6sB,GAC1B/0B,sCA0FPizB,EAAOtU,EAAI4W,GACX,IAQiBC,EAPbC,EAAWxC,aAAiBpqB,MAAQoqB,GAASA,GAE7CyC,EAAQ11B,KAAK20B,OAAOgB,qBAAqBF,GACrC76B,KAAM,YACN+jB,OAOR,OAJI4W,IAEAC,OAAKb,OAAOiB,kBAAkBC,uBAAuB,cAAaC,eAAlEN,UAAoFvC,IAEjFyC,qCAgBLzC,EAAOtU,EAAI4W,GACb,IASiBQ,EARbN,EAAWxC,aAAiBpqB,MAAQoqB,GAASA,GAE7CyC,EAAQ11B,KAAK20B,OAAOgB,qBAAqBF,GACrC76B,KAAM,YACN+jB,OASR,OALI4W,IAEAQ,OAAKpB,OAAOiB,kBAAkBC,uBAAuB,iBAAgBC,eAArEC,UAAuF9C,IAGpFyC,uCAYP,OAFA11B,KAAK60B,aACL70B,KAAK80B,MAAMpzB,OAAS,EACb1B,4CAYP,OAHAA,KAAK60B,aACL70B,KAAKg2B,QAALh2B,aAAgBA,KAAK80B,QACrB90B,KAAK80B,MAAMpzB,OAAS,EACb1B,0CAkBP,IAEIyI,EAFAuqB,SACA9xB,SAGJ,OAAQuH,EAAMrD,UAAO1D,QACrB,KAAK,EACDsxB,0CACA,MAEJ,KAAK,EACDA,0CACA9xB,0CACA,MAEJ,QACI,OAAOlB,KAGX,OAAY,IAARyI,GACAzI,KAAK60B,UAAY70B,KAAK80B,MAAM5uB,MAAM8sB,EAAM9xB,IAAQlB,KAAKg2B,SAAShD,EAAM9xB,IAC7DlB,MAGJA,KAAK20B,OAAOsB,aAAajD,2CAIjB,QAAAh5B,EAAAhB,EAAAgH,KAAApH,EAAAwM,UAAA1D,OAAPuxB,EAAOpqB,MAAAjQ,GAAAd,EAAA,EAAAA,EAAAc,EAAAd,IAAPm7B,EAAOn7B,GAAAsN,UAAAtN,GAMf,OAAqB,IAAjBm7B,EAAMvxB,OACC1B,OAGX20B,OAAKA,QAAOP,OAAZO,UAAsB1B,EAAMhrB,IAAI,SAAAjO,GAAA,OAAS0a,EAAKigB,OAAOuB,yBAAyBlD,EAAK,IAAKA,EAAK,QACtFhzB,4CAQP,OAAOA,KAAK20B,iDASZ,OAAO30B,KAAK20B,OAAOv9B,KAAKs4B,4CA5SbxnB,GACX,OAAO,IAAIiuB,GAAQnB,gBAAgB,KAAM9sB,SA+SjDmU,GCzUA+Z,uFCFA7+B,OAAOD,QAAU,SAASC,QAoBzB,OAnBKA,OAAO8+B,kBACX9+B,OAAO++B,UAAY,aACnB/+B,OAAOg/B,SAEFh/B,OAAOi/B,WAAUj/B,OAAOi/B,aAC7Bh+B,OAAOC,eAAelB,OAAQ,UAC7BmB,YAAY,EACZC,IAAK,SAAAA,MACJ,OAAOpB,OAAOQ,KAGhBS,OAAOC,eAAelB,OAAQ,MAC7BmB,YAAY,EACZC,IAAK,SAAAA,MACJ,OAAOpB,OAAOO,KAGhBP,OAAO8+B,gBAAkB,GAEnB9+B,sVCdR,SAASk/B,uBAAuBvuB,KAAO,OAAOA,KAAOA,IAAIhP,WAAagP,KAAQ/N,QAAW+N,KAJzF1P,OAAOC,eAAenB,QAAS,cAC3ByB,OAAO,IAKX,IAEI29B,MAAQD,uBAFD54B,oBAAQ,IAMf84B,mBAAqBF,uBAFD54B,oBAAQ,IAI5B+4B,MAAQF,MAAK,QAAYG,KAAuB,oBAAXn/B,OAAyBA,YAAS2V,GACvEypB,IAAMF,MAAM1I,IAAI6I,SAChBt0B,EAAIm0B,MAAM1I,IAAIrqB,KACdmQ,IAAMvR,EAAEuR,IACRzJ,MAAQ9H,EAAE8H,MAEVysB,kBAAqBC,IAAK,UAC1BC,gBAAkBN,MAAMO,qBACxBC,oBAAsBF,gBAAgBG,SAAW,EAAI,IAsBzD,SAASC,kBAAkBC,GAAIC,UAAWC,YAAa9wB,SACnD,IAAI+wB,QACA1E,KACAhf,IACA2jB,aACAC,eAAgB,EAChBjvB,MAAQ2uB,kBAAkB3uB,MAE9B,QAAkB,IAAP4uB,IAAoC,WAAdt9B,QAAOs9B,IAAxC,CAwBA,IAAKvE,QApBD2E,aAAehvB,MAAM4uB,MACrBI,aAAa3K,UAGjBrkB,MAAM4uB,IAAMv3B,MACZ2G,QAAUA,aACFkxB,cAAgBz2B,SAAS4S,IAAMrN,QAAQkxB,eAAiB7jB,IAAM4iB,MAAMkB,qBAEnD,iBAAdN,YACPA,UAAYV,IAAIiB,eAAeP,aAGnCE,QAAUd,MAAMoB,gBAAgBR,YACxBS,UAAYrB,MAAMsB,YAEtBhB,gBAAgBiB,aAAejB,gBAAgBkB,MAASV,QAAQW,cAAiBX,QAAQY,eACzFV,eAAgB,GAGpBF,QAAQO,UAAY,GACPrB,MAAM2B,qBACfb,QAAQc,MAAMxF,MAAQ4D,MAAM2B,qBAAqBvF,MAGrDhzB,KAAKu3B,GAAKA,GACVv3B,KAAKy4B,gBAAkBf,QAEvB13B,KAAK04B,kBAAoB,IAAI/B,mBAAkB,QAAYe,QAASE,cAAe,IACnF53B,KAAK24B,iBAAmBlB,YACxBz3B,KAAK44B,OAAQ,EACb54B,KAAKw4B,SACLx4B,KAAK2G,QAAUA,QAEf3G,KAAK64B,YAaTvB,kBAAkBwB,YAAc,SAAUC,YAUtC,OATAA,WAAaA,gBAEG14B,KAEsB,iBAApB04B,WAAW14B,OACzB04B,WAAW14B,KAAO04B,WAAW14B,KAAKiC,YAFlCy2B,WAAW14B,KAAO,GAKtB04B,WAAWC,MAAQD,WAAW14B,KAAKgM,MAAM,oBAClC0sB,YAIXzB,kBAAkB3uB,SAIlB2uB,kBAAkB19B,UAAUq/B,qBAAuB,SAAU54B,KAAM64B,oBAAqBx3B,QACpF,IAAK1B,KAAK44B,MACN,OAAO,EAGX,IAAIO,KACAC,MACAC,GACAC,IACAC,YACAC,qBACAC,sBAAwBz5B,KAAK2G,QAAQkxB,cACrCL,UAAYx3B,KAAK05B,WACjBlB,MAAQx4B,KAAKw4B,UACbmB,MAAQ35B,KAAK45B,iBAAmB55B,KAAK45B,mBACrCC,iBAAmB75B,KAAK85B,oBAAsB95B,KAAK85B,sBACnDC,UAAY15B,MAAQm4B,MAAMwB,UArHtB,KAqH4CxB,MAAMyB,YArHlD,KAqH0EzB,MAAM0B,YArHhF,KAqHwG1B,MAAM2B,WArH9G,IAsHJC,cAAgB/5B,KAAO,QAAUm4B,MAAMwB,UAtHnC,KAsHyDxB,MAAMyB,YAtH/D,KAsHuFzB,MAAM0B,YAtH7F,KAsHqH1B,MAAM2B,WAtH3H,IA4IR,OApBAnD,iBAAiB32B,QAAUA,KAAO22B,iBAAiB32B,OAE9C64B,yBAGqD7rB,KAAjDmsB,qBAAuBG,MAAMS,kBAC9B5C,UAAUS,UAAY53B,KAAKg6B,OAASh6B,KAAKg6B,OAAO34B,QAAUmH,MAAMnH,OAAS,GAAGqB,KAAK1C,MACjFg5B,GAAK7B,UAAUc,YAEfd,UAAUS,UAAY53B,KACtBi5B,IAAM9B,UAAUc,YAEhBkB,qBAAuBG,MAAMS,gBAAkBf,GAAK33B,OAAS43B,MAAQ53B,OAAS,GAC9Em4B,iBAAiB3zB,KAAKk0B,eAClBP,iBAAiBn4B,OAAS+3B,8BACnBE,MAAME,iBAAiBvxB,UAZtCkxB,qBAAuB,GAiBvBD,YAAcI,MAAMI,aACpBX,MAAQG,YAAYltB,MAAM,MAEtBiuB,MAAO3hB,WAAWygB,MAAM,GAAI,IAC5BmB,OAAQ5hB,WAAWygB,MAAM,GAAI,OAIrC5B,UAAUS,UAAY53B,KAEtB84B,MACIoB,OAAQ/C,UAAUa,aAClBiC,MAAO9C,UAAUc,YAAckB,sBAGnCG,MAAMI,WAAaZ,KAAKmB,MAAQ,IAAMnB,KAAKoB,OAC3CV,iBAAiB3zB,KAAK6zB,WAClBF,iBAAiBn4B,OAAS+3B,8BACnBE,MAAME,iBAAiBvxB,SAG3B6wB,OAIX7B,kBAAkB19B,UAAU4gC,YAAc,WACtC,IAAIC,QAAUz6B,KAAK06B,cACflD,UAAYx3B,KAAK05B,WACjBiB,QAAUF,QAAQE,QAEtB,OAAIA,QACO,SAAUzwB,KACb,IAAI0wB,KAAMN,MASV,OAPAK,QAAQE,YAAc3wB,KAEtBowB,OADAM,KAAOD,QAAQG,WACFR,MAAQlD,qBACT,IACRkD,MAAQM,KAAKN,OAGVA,OAGJ,SAAUpwB,KAEb,OADAstB,UAAUS,UAAY/tB,IACfstB,UAAUc,cAkB7BhB,kBAAkB19B,UAAUi/B,SAAW,SAAUL,OAC7C,OAAKx4B,KAAK44B,MAMNJ,QAAUx4B,KAAKw4B,OAAUx4B,KAAK+6B,cAI7BvC,QACDA,MAAQx4B,KAAKw4B,OAGjB5B,MAAMoE,cAAcxC,OACpBx4B,KAAKw4B,MAAQA,MAEbx4B,KAAK06B,cAAgBO,MAAQj7B,KAAK04B,kBAAkB//B,IAAI6/B,OAEpDx4B,KAAK06B,eACL16B,KAAK05B,WAAauB,MAAM1L,KACxBvvB,KAAKk7B,SAAWD,MAAME,QACtBn7B,KAAKo7B,OAASH,MAAMI,UACpBr7B,KAAKs7B,YAAcL,MAAMM,WACzBv7B,KAAK+6B,cAAe,GAEpB/6B,KAAK+6B,cAAe,EAGjB/6B,WAvBP,EALWA,KAGX,IAAIi7B,OAmCR3D,kBAAkB19B,UAAU4hC,sBAAwB,SAAU/D,aAC1D,OAAKz3B,KAAK44B,OAGV54B,KAAK24B,iBAAmBlB,YACjBz3B,MAHIA,MA4Bfs3B,kBAAkB19B,UAAU6hC,aAAe,SAAUp7B,KAAMq7B,SAAUC,UAAWC,QAC5E,IAAK57B,KAAK44B,MACN,OAAO,OAGEvrB,IAAThN,MAA+B,OAATA,KACtBA,KAAO,GACgB,iBAATA,OACdA,KAAOA,KAAKiC,YAGhB,IAAImG,IACAozB,QACAC,QACAC,QACAC,gBACAC,SACAC,SACAC,UACAC,aACAC,YACAC,SACAC,SACAC,YACAC,WACAC,qBACAC,QACAC,EACAp5B,EACAq5B,SACAhV,KACAiV,IACAC,mBACAC,gBACAC,OACAC,gBACAC,2BACAC,YAAa,EACbC,YAAc,EACdC,UAAY,EACZC,WAAa,EACbC,iBAAmB,EACnBC,SAAW,EACXC,UAAY,EACZC,cACA7lC,EAAI,EACJ8lC,YAAc59B,KAAK24B,gBAAkB,GAAK,MAC1C4C,WAAav7B,KAAKs7B,YAClBH,QAAUn7B,KAAKk7B,SACf1D,UAAYx3B,KAAK05B,WACjBuB,MAAQj7B,KAAK06B,cACbmD,cAAgB5C,MAAM4C,cACtBC,SAAW7C,MAAM6C,SACjBC,gBACAC,WAAa,EACbC,YAAc,EACdC,eAAiB,EACjBC,SAAW,SAASA,SAASj0B,KAI7B,IAFA,IAAIk0B,GAAK,KACLtmC,GAFJoS,IAAMA,IAAI5J,QAAQ,SAAU,KAEhBoB,OACL08B,GAAGhhC,KAAK8M,IAAIm0B,OAAOvmC,GAAK,MAC/B,OAAOoS,IAAI8Q,MAAM,EAAGljB,EAAI,IAExBwmC,YACAj+B,KAAMA,KACNq7B,SAAUA,SACVC,UAAWA,UACXrB,MAAO,KACPC,OAAQ,KACRgE,aAAc,KACdC,cAAe,KACfC,QAASp+B,KACTq+B,aAAa,GAYjB,GATAnC,SAAWv8B,KAAKw6B,cAKZmB,YAAcJ,aACdI,WAAa,KAGbnE,UAAW,CACX,IAAKN,gBAAgBU,cAAe,CAmBhC,IAlBAwF,WAAaxG,MAAM+H,YAAYvhC,KAAKiD,QAahCm3B,UAAUS,UAAY53B,KACtBi+B,WAAWC,aAAerC,SAAW1E,UAAUc,YAC/CgG,WAAWE,cAAgBrC,UAAY3E,UAAUa,eAVjD0D,QAAU17B,KAAKC,QAAQs2B,MAAMgI,UAAW,SAAUv2B,OAC9C,MAAiB,SAAVA,MAAmB,IAAM,MAEpCq0B,qBAAuB18B,KAAK6+B,WAAW9C,SAAS,GAEhDuC,WAAWC,aAAerC,SAAWQ,qBAAqBpC,MAC1DgE,WAAWE,cAAgBrC,UAAYO,qBAAqBnC,QAO5D4B,WAAaR,WAAaO,UAAYR,SAGtC,OAFA4C,WAAWhE,MAAQgE,WAAWC,aAAerC,SAC7CoC,WAAW/D,OAAS+D,WAAWE,cAAgBrC,UACxCmC,WAGX,GAAI/C,WAAaI,UAIb,OAHA2C,WAAWj+B,KAAO,GAClBi+B,WAAWhE,MAAQgE,WAAWC,aAAe,EAC7CD,WAAW/D,OAAS+D,WAAWE,cAAgB,EACxCF,WAQf,GAHAj+B,KAAO89B,SAAS99B,MAAMC,QAAQ,SAAU,KACxC07B,gBAAkBh8B,KAAK24B,gBAAkB+C,SAAWA,SAAWmC,eAE1DT,WAAY,CAab,GAXA30B,KADAk1B,WAAat9B,KAAKgM,MAAM,KACP3K,OACjBm6B,QAAU,GAAIC,WACdQ,SAAWqB,WAAW,GAElB39B,KAAKo7B,OAAOkB,UACZO,SAAW78B,KAAKo7B,OAAOkB,UAAUhC,OAEjCuC,SAAWN,SAASD,UACpBt8B,KAAKo7B,OAAOkB,WAAchC,MAAOuC,WAGjCb,gBAAkBa,SAElB/kC,GADAgkC,QAAUz7B,KAAKy+B,OAAO,EAAGlI,MAAMmI,qBAAqB1+B,KAAM27B,gBAAiBh8B,OAAOqM,MAAM,KAC5E3K,WACT,IAAIm7B,SAAWnB,SAGlB,OAFA4C,WAAWj+B,KAAO,GAClBi+B,WAAWhE,MAAQgE,WAAWC,aAAeD,WAAW/D,OAAS+D,WAAWE,cAAgB,EACrFF,WACAV,eACP5B,gBAAkBN,SAAW,EAAIoC,UACXjB,SAClBe,YAAc,MAEd5B,gBAAkBN,SAAWoC,UACPjB,SAClBe,YAAc,KAEd5B,gBAAkB,EAClB4B,YAAc,KAQ1B,GAHAH,SAAWlB,SAAST,QAAQ/4B,KAAK,KACjC26B,UAAY19B,KAAKs7B,YAEbM,OAAQ,CACR,KAAO9jC,EAAI2Q,IAAK3Q,GAAK,EAajB,GAZAwkC,SAAWR,QAAQhkC,GAAK6lC,WAAW7lC,GAC/BkI,KAAKo7B,OAAOkB,UACZO,SAAW78B,KAAKo7B,OAAOkB,UAAUhC,OAE5BoC,uBAA0BG,SAAWH,qBAAqBsC,UAAU1C,aACrEO,SAAWN,SAASD,WAExBt8B,KAAKo7B,OAAOkB,WACRhC,MAAOuC,YAGfY,UAAYZ,UACGb,kBACNH,UACDA,QAAUC,QAAQ9gB,MAAM,GAAI,GAAGjY,KAAK,KAEpC06B,SAAW/B,UAKX,OAJA4C,WAAWj+B,KAAO89B,SAAStC,SAAW+B,YACtCU,WAAWW,SAAWX,WAAWG,QACjCH,WAAWhE,MAAQiC,SAAS+B,WAAWj+B,MACvCi+B,WAAW/D,OAASv6B,KAAKs7B,YAClBgD,WAQnB,OAHAA,WAAWj+B,KAAOy7B,QAAQ/4B,KAAK,IAC/Bu7B,WAAWhE,MAAQmD,SACnBa,WAAW/D,OAASv6B,KAAKs7B,YAClBgD,WAEP,KAAOxmC,EAAI2Q,IAAK3Q,GAAK,EAkBjB,GAhBiB,OADjBwkC,SAAWR,QAAQhkC,GAAK6lC,WAAW7lC,KACVqjC,UACrBmB,SAAW,UAGXt8B,KAAKo7B,OAAOkB,UACZO,SAAW78B,KAAKo7B,OAAOkB,UAAUhC,OAE5BoC,uBAA0BG,SAAWH,qBAAqBsC,UAAU1C,aACrEO,SAAWN,SAASD,WAExBt8B,KAAKo7B,OAAOkB,WACRhC,MAAOuC,YAGfY,UAAYZ,UAEGb,kBACNH,UACDA,QAAUC,QAAQ9gB,MAAM,GAAI,GAAGjY,KAAK,KAEpC06B,SAAW/B,UAAU,CA2BrB,GAzBA6B,UAAYl9B,KAAKy+B,OAAO,EAAGhD,QAAQp6B,QAAQw9B,YAAY,KACvD5B,SAAWj9B,KAAKy+B,OAAO,EAAGhD,QAAQp6B,QAAQw9B,YAAY,KAClD3B,UAAYC,iBACZC,SAAWlB,SAAST,QAAQ9gB,MAAMwiB,gBAAkB,EAAGD,WAAWx6B,KAAK,KACvE+4B,QAAQx0B,OAAOi2B,UAAW,EAAG,SAC7BC,gBAAkBD,UAClBnB,aAAemB,UAAY,GACpBD,SAAWE,iBACdF,WAAaxB,QAAQp6B,OAAS,GAC9B+7B,SAAWlB,SAAST,QAAQ9gB,MAAMwiB,gBAAkB,EAAGD,WAAWx6B,KAAK,KACvE+4B,QAAQx0B,OAAOg2B,SAAU,EAAG,YAE5BG,SAAWlB,SAAST,QAAQ9gB,MAAMwiB,gBAAkB,EAAGD,WAAWx6B,KAAK,KACvE+4B,QAAQx0B,OAAOg2B,SAAU,EAAG,WAEhCE,gBAAkBF,SAClBlB,aAAekB,SAAW,IAE1BxB,QAAQx0B,OAAOw0B,QAAQp6B,OAAS,EAAG,EAAG,QAAUi8B,WAAW7lC,IAC3DomC,cAAgBpC,QAAQp6B,OAAS,EACjC+7B,SAAWlB,SAAST,QAAQ9gB,MAAMwiB,gBAAkB,EAAGU,cAAgB,GAAGn7B,KAAK,KAC/Ey6B,gBAAkBU,cAClB9B,aAAetkC,IAEnB4lC,WAAa19B,KAAKs7B,aACFK,UAMZ,OALA2C,WAAWj+B,KAAO89B,SAAStC,SAAW+B,YACtCU,WAAWW,SAAWX,WAAWG,QAEjCH,WAAWhE,MAAQoB,SACnB4C,WAAW/D,OAASmD,UAAY19B,KAAKs7B,YAC9BgD,WAEPjB,YAAcrpB,IAAIqpB,YAAaI,UAC/B5B,QAAU,KACVQ,YAAczF,MAAMmI,qBAAqB1+B,KAAKy+B,OAAO1C,cAAeJ,gBAAiBh8B,MACrFy9B,SAAWlB,SAASl8B,KAAKy+B,OAAO1C,aAAcC,aAAe,IACzDP,QAAQp6B,OAAS06B,aAAeC,cAEhCvkC,GADAgkC,QAAUA,QAAQvgB,OAAOlb,KAAKy+B,OAAOhD,QAAQp6B,OAAQ06B,aAAeC,YAAcP,QAAQp6B,QAAQ2K,MAAM,MAC5F3K,OAAS,GAYzC,OALA27B,YAAcrpB,IAAIqpB,YAAaI,UAE/Ba,WAAWj+B,KAAOy7B,QAAQ/4B,KAAK,IAC/Bu7B,WAAWhE,MAAQ+C,YACnBiB,WAAW/D,OAASmD,UACbY,WAWX,IARArC,SAAW57B,KAAKC,QAAQs2B,MAAMuI,iBAAkB,MAEhD9+B,MADAA,KAAOA,KAAKC,QAAQs2B,MAAMuI,iBAAkBvI,MAAMwI,uBACtC9+B,QAAQ,iBAAkB,iBAAmBs2B,MAAMyI,iBAAkB,IAAKzI,MAAM0I,oBAAoBv8B,KAAK,IAAM,eAE3Hy0B,UAAUS,UAAY53B,KAIjBu8B,EAAI,EAAGp5B,GAFZm5B,QAAUnF,UAAUN,gBAAgBqI,iBAAiBrI,gBAAgBsI,sBAE7C99B,OAAQk7B,EAAIp5B,EAAGo5B,GAAK,EACxC/U,KAAO8U,QAAQC,IAEX1F,gBAAgBuI,gBAAkB7I,MAAM8I,aAAatiC,KAAKyqB,KAAK8X,aAEnD,MADZ7C,IAAMjV,KAAKoQ,aAEK,MAAR6E,IACAmB,WAAaF,aAAar8B,OACX,MAARo7B,MACPkB,UAAYD,aAAar8B,QAG7Bq8B,aAAa73B,MACT05B,SAAU3B,WACV4B,QAAS7B,UACTnW,KAAMA,OAEV8V,WAAWz3B,KAAK42B,MAS5B,GAJAhlC,EAAI,EACJ2Q,IAAMs1B,aAAar8B,QACnBm7B,SAAWkB,aAAa,GAAGlW,KAAKyQ,aAEjBoD,SAIX,OAHA4C,WAAWj+B,KAAO,GAClBi+B,WAAWhE,MAAQgE,WAAWC,aAAeD,WAAW/D,OAAS+D,WAAWE,cAAgB,EAErFF,WAoBX,GAnBWzB,SAAWb,kBAAoBh8B,KAAK24B,mBAE3CqD,gBAAkBN,SAAW,EAAIoC,UACXjB,SAClBe,YAAc,MAEd5B,gBAAkBN,SAAWoC,UACPjB,SAClBe,YAAc,KAEd5B,gBAAkB,EAClB4B,YAAc,KAK1BpB,YAAcuB,aAAa,GAAGlW,KAAKiY,WACnCrD,WAAasB,aAAa,GAAGlW,KAAKkY,UAE9BnE,OACA,KAAO9jC,EAAI2Q,IAAK3Q,GAAK,GAEjBilC,oBADAlV,KAAOkW,aAAajmC,GAAG+vB,MACGiY,WAAatD,YAAc3U,KAAKyQ,aAEjC0D,kBAChBmB,6BACDA,2BAA6BrlC,GAE7B0/B,UAAUc,YAAcoD,WACxBwB,gBAAkBplC,EAClBA,EAAI2Q,WAKhB,KAAO3Q,EAAI2Q,IAAK3Q,GAAK,EAEjBklC,iBADAnV,KAAOkW,aAAajmC,GAAG+vB,MACAwQ,cAAgBxQ,KAAKkY,UAAYtD,YAGxDQ,OAAS,MAFTF,mBAAqBlV,KAAKiY,WAAatD,YAAc3U,KAAKyQ,aAIjC0D,iBAChBmB,6BACDA,2BAA6BrlC,GAG7BilC,mBAAqBrB,WACrB6B,UAAYQ,aAAajmC,GAAG8nC,SAC5BtC,SAAWS,aAAajmC,GAAG+nC,QACvBtC,UAAYC,iBACZO,aAAaR,WAAW1V,KAAKoQ,UAAY,QACzCuF,gBAAkBD,WACXD,SAAWE,iBAGdO,aAAaT,UAAUzV,KAAKoQ,UAF5BqF,WAAaxlC,EAE2B,SAEA,SAE5C0lC,gBAAkBF,UAElBzV,KAAKmY,WAAWC,aAAahD,OAASnG,IAAIoJ,cAAc,MAAOrY,MAI/DA,KAAKwQ,aAAexQ,KAAKkY,UAAYpE,WAEjCsB,OACAA,OAAO+C,WAAWja,YAAYkX,QACvBO,kBAAoBF,SAC3BS,aAAaT,UAAUzV,KAAKoQ,UAAY,IAExC8F,aAAaR,WAAW1V,KAAKoQ,UAAY,IAE7CiF,gBAAkBplC,EAElBA,EAAI2Q,KAEJ00B,2BAA6B,OAKjCH,gBAAkBrB,YAClBuB,gBAAkBplC,EAClBA,EAAI2Q,KAMpB,GAAIy0B,gBAAkBz0B,IAAK,CAOvB,IALA61B,WAAWI,aAAc,EAGzBvB,2BAA6BA,4BAA0DD,gBAElFplC,EAAI2Q,IAAM,EAAG3Q,GAAKqlC,2BAA4BrlC,GAAK,GACpD+vB,KAAOkW,aAAajmC,GAAG+vB,MAElBmY,WAAWja,YAAY8B,MAGhC,KAAO/vB,GAAK,EAAGA,GAAK,EAChB+vB,KAAOkW,aAAajmC,GAAG+vB,KACnB+O,MAAMuJ,eAAe/iC,KAAKyqB,KAAK8X,WAE/B9X,KAAKmY,WAAWja,YAAY8B,MAE5B/vB,EAAI,EAgBpB,OAVIwmC,WAAWj+B,KAAOm3B,UAAUS,UAAU33B,QAAQs2B,MAAMwJ,gBAAiB,MAAM9/B,QAAQ,WAAY,KAC3Fg+B,WAAWI,cACXJ,WAAWj+B,MAAQu9B,YACnBU,WAAWW,SAAWhD,UAI9BqC,WAAW/D,OAAS/C,UAAUa,aAC9BiG,WAAWhE,MAAQ9C,UAAUc,YAEtBgG,WAGP,OADAA,WAAW+B,MAAQ,IAAI9wB,MAAM,qBACtB+uB,YAoBfhH,kBAAkB19B,UAAUilC,WAAa,SAAUx+B,KAAMigC,yBACrD,IAAKtgC,KAAK44B,MACN,OAAO,EAGX,IAAI2H,QACAC,OACAC,MACA3oC,EACAC,EACA2oC,eAAiB,EACjBnG,OAAS,EACToG,iBAEJ,IAAKL,wBACD,OAAOtgC,KAAKi5B,qBAAqB54B,MAKrC,IAAKvI,EAAI,EAAGC,GADZwoC,QAAUlgC,KAAKgM,MAAM,KACG3K,OAAQ5J,EAAIC,EAAGD,IACnC0oC,OAASD,QAAQzoC,GACjB2oC,MAAQzgC,KAAKi5B,qBAAqBuH,QAAQ,EAAMD,QAAQ7+B,QACxD64B,OAASvmB,IAAIumB,OAAQkG,MAAMlG,QAC3BmG,gBAAkBD,MAAMnG,MACxBqG,cAAcH,QAAUC,MAAMnG,MAGlC,OACIA,MAAO/vB,MAAMm2B,gBACbnG,OAAQA,OACRyE,UAAW2B,gBAOnBrJ,kBAAkB19B,UAAUozB,QAAU,WAClC,OAAKhtB,KAAK44B,OAIV54B,KAAK04B,mBAAqB14B,KAAK04B,kBAAkB1L,SAAWhtB,KAAK04B,kBAAkB1L,iBAE5EhtB,KAAK05B,kBACL15B,KAAKk7B,gBACLl7B,KAAKo7B,cACLp7B,KAAK04B,yBACL14B,KAAK06B,qBACL16B,KAAKu3B,UACLv3B,KAAKw4B,aACLx4B,KAAKy4B,uBACLz4B,KAAK24B,gBAEL34B,MAfIA,MAkBf1I,QAAO,QAAcggC,kBACrB//B,OAAOD,QAAUA,QAAO,mEC7yBxBkB,OAAOC,eAAenB,QAAS,cAC9ByB,OAAO,IAER,IAAI6nC,KACH/J,KAAM,SAASA,KAAK3I,KACnB,IAAI4I,IAAM5I,IAAI6I,SAEV8J,UADM3S,IAAI4S,UACMD,UAEhBnV,KAAO7nB,KAAK6nB,KACZza,MAAQpN,KAAKoN,MAEb8vB,aAAe,2BACfC,eAAiBD,aAAe,YAChC1B,iBAAmB0B,aAAe,MAkLtC,OA/KAH,KACC1S,IAAKA,IAEL8S,eAAgBA,eAEhB3B,iBAAkBA,iBAElBC,mBATwByB,6BAWxBjJ,qBAAsB,IAEtB4H,aAAc,IAAIv/B,OAAO,KAAOk/B,iBAAmB,MAEnDc,eAAgB,IAAIhgC,OAAO,kCAE3Bg/B,iBAAkB,2CAElBC,qBAAsB,kBAAoBC,iBAAmB,cAE7De,gBAAiB,IAAIjgC,OAAO,kBAAoBk/B,iBAAmB,kCAAmC,MAEtGV,YAAa,IAAIx+B,OAAO,mBAAoB,KAE5Cy+B,UAAW,aAEXqC,eAAgB,WAEhB/I,WAAY,MAGZK,sBACC2I,SAAU,WACVC,IAAK,UACLC,WAAY,SACZC,QAAS,MACT/G,MAAO,MACPC,OAAQ,MACR+G,SAAU,UAIXC,gBACCC,KAAM,OACNvH,WAAY,cACZwH,cAAe,cACfvH,WAAY,cACZwH,cAAe,cACf1H,SAAU,YACV2H,YAAa,YACbpG,WAAY,cACZqG,cAAe,cACfzH,UAAW,aACX0H,aAAc,cAIf1K,mBAAoB,SAASA,qBAC5B,IAAIoI,gBAAiBC,oBAAqBC,eAY1C,OAVI3I,IAAIgL,wBACPvC,gBAAkB,yBAClBC,oBAAsBH,iBACtBI,gBAAiB,IAEjBF,gBAAkB,uBAClBC,oBAAsB,OACtBC,gBAAiB,IAIjBrH,KAAM,QAAQh7B,KAAKyjC,aAAe3S,IAAI6T,MACtCC,OAAQC,QAAQ/T,IAAIgU,UAAYpL,IAAIqL,eAAeC,WAAW,oDAAqD,QACnHjK,WAAY,IAAIh4B,OAAO,aAAa/C,KAAKyjC,WACzCxJ,SAAU,IAAIl3B,OAAO,iBAAiB/C,KAAKyjC,WAC3CtB,gBAAiBA,gBACjBC,oBAAqBA,oBACrBC,eAAgBA,iBAWlBzH,gBAAiB,SAASA,gBAAgBqK,iBACzC,IAAIC,KAAM9K,UAEV,GAAI6K,kBAAoBA,gBAAgB/J,aAAe+J,gBAAgBhK,eACtE,GAAIgK,gBAAgBE,YAKnB,OAJAF,gBAAgBE,YAAY/K,UAAYV,IAAIoJ,cArGtC,QAsGN1I,UAAUmI,UAAYqB,eACtBxJ,UAAUgL,aAAa,cAAe,QACtChL,UAAUgL,aAAa,OAAQ,gBACxBhL,eAKR,IAFA8K,KAAOxL,IAAI2L,qBAAqB,QAAQ,KAE5BH,KAAKC,YAOhB,OANA/K,UAAYV,IAAIoJ,cA/GV,QAgHIP,UAAYqB,eACtBxJ,UAAUgL,aAAa,cAAe,QACtChL,UAAUgL,aAAa,OAAQ,gBACL,EAC1BF,KAAKC,YAAY/K,WACVA,WAMVuH,qBAAsB,SAASA,qBAAqB1+B,KAAMq7B,SAAUgH,IACnE,IAAKriC,OAASA,KAAKqB,OAClB,OAAO,EAGR,IAAI+Q,WACA8pB,SAAWmG,GAAGlI,cACdmI,QAAU,EACVC,UAAY,EACZ1G,SAAWK,SAASl8B,MACpBwiC,SAAW3G,SAAW77B,KAAKqB,OAK/B,GAHA+Q,WAAaipB,SACbiH,QAAUjX,KAAKgQ,SAAWmH,UAEtB3G,SAAWR,SACd,OAAOr7B,KAAKqB,OAAS,EAQtB,IALIihC,QAAUtiC,KAAKqB,SAClB+Q,WAAaipB,SAAWQ,SACxByG,QAAUtiC,KAAKqB,QAGT+Q,WAAa,GAAG,CAGtB,GAFAA,WAAaipB,SAAWa,SAASl8B,KAAKy+B,OAAO,EAAG6D,YAChDC,UAAY3xB,MAAMwB,WAAaowB,WAI9B,OAAOF,QAFPA,SAAWC,UAMb,KAAOnwB,WAAa,GAAG,CAGtB,GAFAA,WAAaipB,SAAWa,SAASl8B,KAAKy+B,OAAO,EAAG6D,YAChDC,UAAY3xB,MAAMwB,WAAaowB,WAI9B,OAAOF,QAFPA,SAAWC,UAKb,OAAOD,SAWR3H,cAAe,SAASA,cAAc8H,UACrC,IAAIC,MAAQD,SAAS9I,SAAW8I,SAAS9I,UAAY,OAErD,OADA8I,SAASvH,WAAauH,SAASvH,YAAcuH,SAAS,gBAAwC,IAAtBzhC,SAAS0hC,MAAO,IAAY,KAC7FD,aAQXxrC,QAAO,QAAcspC,IACrBrpC,OAAOD,QAAUA,QAAO,mtCCvMxB,IAAM0rC,KAAOnlC,oBAAQ,IAErBtG,OAAOD,QAAU0rC,KAAK7oC,QAAU6oC,KAAK7oC,QAAU6oC,gECE/C,IAIIpM,MANJ,SAASH,uBAAuBvuB,KAAO,OAAOA,KAAOA,IAAIhP,WAAagP,KAAQ/N,QAAW+N,KAI7EuuB,CAFD54B,oBAAQ,IAIF,QAAYg5B,KAAuB,oBAAXn/B,OAAyBA,YAAS2V,GACvEypB,IAAMF,MAAM1I,IAAI6I,SAChBG,gBAAkBN,MAAMO,qBACxBC,oBAAsBF,gBAAgBG,SAAW,EAAI,IAEzD,SAAS4L,iBAAiBxK,gBAAiBb,cAAesL,eACtD,IAAIC,IAGJD,eADAA,cAAgBA,cAAgB,EAAIA,cAAgB,GACpB,GAAKA,cAAgB,GAErDljC,KAAKkjC,cAAgBA,cACrBljC,KAAKssB,MAAQ,KACbtsB,KAAKusB,KAAO,KACZvsB,KAAKojC,cACLpjC,KAAK0B,OAAS,EACd1B,KAAKqjC,SAAW5K,gBAEZb,iBACAuL,IAAMrM,IAAIwM,gBAAgB,6BAA8B,QACpDC,eAAe,6BAA8B,QAAS,gCAC1DJ,IAAII,eAAe,6BAA8B,SAAU,KAC3DJ,IAAII,eAAe,6BAA8B,QAAS,KAC1DvjC,KAAKwjC,QAAUL,IACfnjC,KAAKqjC,SAASd,YAAYY,MAIlCF,iBAAiBrpC,UAAUjB,IAAM,SAAU6/B,OACvC,IAAIiL,KACApqC,IACAqqC,aACAN,WAAapjC,KAAKojC,WAClB36B,IAAMzI,KAAK0B,OACXsS,IAAMhU,KAAKkjC,cACXS,OAAS,GAEb,IAAKtqC,OAAOu9B,MAAM2K,oBACKl0B,IAAfmrB,MAAMn/B,OACNsqC,QAAU/M,MAAM2K,eAAeloC,KAAO,IAAMm/B,MAAMn/B,KAAO,KAIjE,IAAKsqC,OACD,OAAO,EAGX,GAAID,aAAeN,WAAWO,QACtB3jC,KAAKssB,QAAUoX,eACfA,aAAaE,OAASF,aAAaE,KAAKrxB,KAAOmxB,aAAanxB,MAC5DmxB,aAAanxB,OAASmxB,aAAanxB,KAAKqxB,KAAOF,aAAaE,MAC5DF,aAAanxB,KAAOvS,KAAKssB,MACzBoX,aAAanxB,KAAKqxB,KAAOF,aACzB1jC,KAAKusB,OAASmX,eAAiB1jC,KAAKusB,KAAOmX,aAAaE,MACxDF,aAAaE,KAAO,KACpB5jC,KAAKssB,MAAQoX,kBAEd,CACH,GAAIj7B,KAAOuL,IAGP,IAFAyvB,KAAOh7B,IAAMuL,IAAM,EAEZyvB,QACHzjC,KAAK6jC,gBAAgB7jC,KAAKusB,MAGlCmX,aAAe1jC,KAAK8jC,aAAaH,QAGrC,OAAOD,cAGXT,iBAAiBrpC,UAAUkqC,aAAe,SAAUH,QAChD,IAAIpU,KAAMiI,UA8DV,OA5DAx3B,KAAKojC,WAAWO,QAAUnM,WACtBjlB,KAAM,KACNqxB,KAAM,KACNrU,KAAM,KACNsO,cAAe,EACftC,WAAY,EACZuC,SAAU,EACViG,aAAc,EACdJ,OAAQA,OACRtI,cAKJ7D,UAAUjlB,KAAOvS,KAAKssB,MACtBkL,UAAUjlB,OAASilB,UAAUjlB,KAAKqxB,KAAOpM,WACzCx3B,KAAKssB,MAAQkL,UACRx3B,KAAKusB,OACNvsB,KAAKusB,KAAOiL,WAEhBx3B,KAAK0B,QAAU,EAEf6tB,KAAOiI,UAAUjI,KAAOuH,IAAIoJ,cAAc,OAC1ClgC,KAAKqjC,SAASd,YAAYhT,MAEtB2H,gBAAgBkB,OAASlB,gBAAgB8K,OACzCzS,KAAKiJ,MAAMgK,aAAa,UAAWmB,QAEnCpU,KAAKiT,aAAa,QAASmB,QAG/BpU,KAAKiT,aAAa,cAAe,QACjCjT,KAAKiT,aAAa,OAAQ,gBAC1BjT,KAAKiJ,MAAMwL,QAAU,eAErBzU,KAAK0I,UAAYrB,MAAMsB,WACvBV,UAAU+D,WAAahM,KAAK8I,aAC5Bb,UAAUuM,aAAexU,KAAK+I,YAAc,EAExCpB,gBAAgBU,gBAChBrI,KAAOiI,UAAUmD,QAAU7D,IAAIwM,gBAAgB,6BAA8B,SACxEd,aAAa,QAASmB,QAC3B3jC,KAAKwjC,QAAQjB,YAAYhT,MAEzBA,KAAKsL,YAAcjE,MAAMsB,WACzBV,UAAU+D,WAAahM,KAAKuL,UAAUP,OACtC/C,UAAUuM,cAAgBxU,KAAKuL,UAAUR,MAAQlD,qBAAuB,EAExE7H,KAAKsL,YAAc,MACnBrD,UAAUqG,cAAgBtO,KAAKuL,UAAUR,MAAQlD,oBACjD7H,KAAKsL,YAAc,IACnBrD,UAAUsG,SAAWvO,KAAKuL,UAAUR,MAAQlD,sBAE5C7H,KAAK0I,UAAY,MACjBT,UAAUqG,cAAgBtO,KAAK+I,YAC/B/I,KAAK0I,UAAY,IACjBT,UAAUsG,SAAWvO,KAAK+I,YAC1B/I,KAAK0I,UAAY,IAGdT,WAGXyL,iBAAiBrpC,UAAUiqC,gBAAkB,SAAUI,MACnD,IAAIN,OAASM,KAAKN,OAEbA,QAAW3jC,KAAK0B,QAAWuiC,OAGhCjkC,KAAK0B,QAAU,EAEfuiC,KAAKL,OAASK,KAAKL,KAAKrxB,KAAO0xB,KAAK1xB,MACpC0xB,KAAK1xB,OAAS0xB,KAAK1xB,KAAKqxB,KAAOK,KAAKL,MACpC5jC,KAAKssB,QAAU2X,OAASjkC,KAAKssB,MAAQ2X,KAAK1xB,MAC1CvS,KAAKusB,OAAS0X,OAASjkC,KAAKusB,KAAO0X,KAAKL,MAExCK,KAAK1U,KAAKyQ,WAAWja,YAAYke,KAAK1U,aAE/BvvB,KAAKojC,WAAWO,UAG3BV,iBAAiBrpC,UAAUozB,QAAU,WACjC,IAAI3zB,IACA+pC,WAAapjC,KAAKojC,WAGtB,IAAK/pC,OADL2G,KAAKkjC,cAAgB,KACTE,WACRpjC,KAAK6jC,gBAAgBT,WAAW/pC,MAGpC2G,KAAKqjC,SAASrD,WAAWja,YAAY/lB,KAAKqjC,UAE1CrjC,KAAKqjC,SAAW,KAChBrjC,KAAKssB,MAAQ,KACbtsB,KAAKusB,KAAO,MAGhBh1B,OAAOD,QAAU2rC,o2dCnLFiB,UAAA,SAAShqC,EAAGkJ,GACzB,OAAOlJ,EAAIkJ,GAAK,EAAIlJ,EAAIkJ,EAAI,EAAIlJ,GAAKkJ,EAAI,EAAI+gC,KCChCC,SAAA,SAASC,SAEtB,OADuB,IAAnBA,QAAQ3iC,SAAc2iC,QAyB5B,SAASC,oBAAoB7pB,GAC3B,OAAO,SAASriB,EAAGwkC,GACjB,OAAOsH,UAAUzpB,EAAEriB,GAAIwkC,IA3BW0H,CAAoBD,WAEtDE,KAAM,SAAAA,KAASrqC,EAAG0iC,EAAG9rB,GAAIC,IAGvB,IAFU,MAAND,KAAYA,GAAK,GACX,MAANC,KAAYA,GAAK7W,EAAEwH,QAChBoP,GAAKC,IAAI,CACd,IAAIC,IAAMF,GAAKC,KAAO,EAClBszB,QAAQnqC,EAAE8W,KAAM4rB,GAAK,EAAG9rB,GAAKE,IAAM,EAClCD,GAAKC,IAEZ,OAAOF,IAET0zB,MAAO,SAAAA,MAAStqC,EAAG0iC,EAAG9rB,GAAIC,IAGxB,IAFU,MAAND,KAAYA,GAAK,GACX,MAANC,KAAYA,GAAK7W,EAAEwH,QAChBoP,GAAKC,IAAI,CACd,IAAIC,IAAMF,GAAKC,KAAO,EAClBszB,QAAQnqC,EAAE8W,KAAM4rB,GAAK,EAAG7rB,GAAKC,IAC5BF,GAAKE,IAAM,EAElB,OAAOF,MCpBb,IAAI2zB,gBAAkBL,SAASF,WACpBQ,YAAcD,gBAAgBD,MAE1BE,QADSD,gBAAgBF,KACzBG,aCJA,ICFAC,OAAA,SAAS/H,GACtB,OAAa,OAANA,EAAauH,KAAOvH,GCDzBgI,YAAQ/7B,MAAMjP,UCAHirC,WDEID,YAAM5pB,MACR4pB,YAAM38B,ICHR,SAASzK,MAAOsnC,KAAMC,MACnCvnC,OAASA,MAAOsnC,MAAQA,KAAMC,MAAQxrC,EAAI6L,UAAU1D,QAAU,GAAKojC,KAAOtnC,MAAOA,MAAQ,EAAG,GAAKjE,EAAI,EAAI,GAAKwrC,KAM9G,IAJA,IAAIjtC,GAAK,EACLyB,EAAoD,EAAhDsK,KAAKmQ,IAAI,EAAGnQ,KAAK6nB,MAAMoZ,KAAOtnC,OAASunC,OAC3CxjC,MAAQ,IAAIsH,MAAMtP,KAEbzB,EAAIyB,GACXgI,MAAMzJ,GAAK0F,MAAQ1F,EAAIitC,KAGzB,OAAOxjC,QCXLyjC,IAAMnhC,KAAKoQ,KAAK,IAChBgxB,GAAKphC,KAAKoQ,KAAK,IACfixB,GAAKrhC,KAAKoQ,KAAK,GAEJkxB,UAAA,SAAS3nC,MAAOsnC,KAAMtY,OACnC,IAAIrI,QAEA5qB,EACA6rC,MACAL,KAHAjtC,GAAK,EAMT,GAD8B00B,OAASA,OAAzBhvB,OAASA,UAAvBsnC,MAAQA,OACctY,MAAQ,EAAG,OAAQhvB,OAEzC,IADI2mB,QAAU2gB,KAAOtnC,SAAOjE,EAAIiE,MAAOA,MAAQsnC,KAAMA,KAAOvrC,GACT,KAA9CwrC,KAAOM,cAAc7nC,MAAOsnC,KAAMtY,UAAkBprB,SAAS2jC,MAAO,SAEzE,GAAIA,KAAO,EAIT,IAHAvnC,MAAQqG,KAAK6nB,KAAKluB,MAAQunC,MAC1BD,KAAOjhC,KAAKoN,MAAM6zB,KAAOC,MACzBK,MAAQ,IAAIv8B,MAAMtP,EAAIsK,KAAK6nB,KAAKoZ,KAAOtnC,MAAQ,MACtC1F,EAAIyB,GAAG6rC,MAAMttC,IAAM0F,MAAQ1F,GAAKitC,UAKzC,IAHAvnC,MAAQqG,KAAKoN,MAAMzT,MAAQunC,MAC3BD,KAAOjhC,KAAK6nB,KAAKoZ,KAAOC,MACxBK,MAAQ,IAAIv8B,MAAMtP,EAAIsK,KAAK6nB,KAAKluB,MAAQsnC,KAAO,MACtChtC,EAAIyB,GAAG6rC,MAAMttC,IAAM0F,MAAQ1F,GAAKitC,KAK3C,OAFI5gB,SAASihB,MAAMjhB,UAEZihB,OAGF,SAASC,cAAc7nC,MAAOsnC,KAAMtY,OACzC,IAAIuY,MAAQD,KAAOtnC,OAASqG,KAAKmQ,IAAI,EAAGwY,OACpC8Y,MAAQzhC,KAAKoN,MAAMpN,KAAK0hC,IAAIR,MAAQlhC,KAAK2hC,MACzCnF,MAAQ0E,KAAOlhC,KAAKsQ,IAAI,GAAImxB,OAChC,OAAOA,OAAS,GACTjF,OAAS2E,IAAM,GAAK3E,OAAS4E,GAAK,EAAI5E,OAAS6E,GAAK,EAAI,GAAKrhC,KAAKsQ,IAAI,GAAImxB,QAC1EzhC,KAAKsQ,IAAI,IAAKmxB,QAAUjF,OAAS2E,IAAM,GAAK3E,OAAS4E,GAAK,EAAI5E,OAAS6E,GAAK,EAAI,GAGlF,SAASO,SAASjoC,MAAOsnC,KAAMtY,OACpC,IAAIkZ,MAAQ7hC,KAAK8nB,IAAImZ,KAAOtnC,OAASqG,KAAKmQ,IAAI,EAAGwY,OAC7CmZ,MAAQ9hC,KAAKsQ,IAAI,GAAItQ,KAAKoN,MAAMpN,KAAK0hC,IAAIG,OAAS7hC,KAAK2hC,OACvDnF,MAAQqF,MAAQC,MAIpB,OAHItF,OAAS2E,IAAKW,OAAS,GAClBtF,OAAS4E,GAAIU,OAAS,EACtBtF,OAAS6E,KAAIS,OAAS,GACxBb,KAAOtnC,OAASmoC,MAAQA,MCjDlB,ICEAC,SAAA,SAASxnB,OAAQtkB,EAAG+rC,SAEjC,GADe,MAAXA,UAAiBA,QAAUlB,QACzBprC,EAAI6kB,OAAO1c,OAAjB,CACA,IAAK5H,GAAKA,IAAM,GAAKP,EAAI,EAAG,OAAQssC,QAAQznB,OAAO,GAAI,EAAGA,QAC1D,GAAItkB,GAAK,EAAG,OAAQ+rC,QAAQznB,OAAO7kB,EAAI,GAAIA,EAAI,EAAG6kB,QAClD,IAAI7kB,EACAzB,GAAKyB,EAAI,GAAKO,EACdgsC,GAAKjiC,KAAKoN,MAAMnZ,GAChBiuC,QAAUF,QAAQznB,OAAO0nB,IAAKA,GAAI1nB,QAEtC,OAAO2nB,SADOF,QAAQznB,OAAO0nB,GAAK,GAAIA,GAAK,EAAG1nB,QACpB2nB,SAAWjuC,EAAIguC,MCV3C,SAASp0B,WAkDT,SAASzJ,QAAIvO,OAAQ+gB,GACnB,IAAIxS,IAAM,IAAIyJ,QAGd,GAAIhY,kBAAkBgY,QAAKhY,OAAOssC,KAAK,SAASjtC,MAAOM,KAAO4O,IAAI8J,IAAI1Y,IAAKN,cAGtE,GAAI8P,MAAMuB,QAAQ1Q,QAAS,CAC9B,IAEInB,EAFAT,GAAK,EACLyB,EAAIG,OAAOgI,OAGf,GAAS,MAAL+Y,EAAW,OAAS3iB,EAAIyB,GAAG0O,IAAI8J,IAAIja,EAAG4B,OAAO5B,SAC5C,OAASA,EAAIyB,GAAG0O,IAAI8J,IAAI0I,EAAEliB,EAAImB,OAAO5B,GAAIA,EAAG4B,QAASnB,QAIvD,GAAImB,OAAQ,IAAK,IAAIL,OAAOK,OAAQuO,IAAI8J,IAAI1Y,IAAKK,OAAOL,MAE7D,OAAO4O,IAnETyJ,QAAI9X,UAAYqO,QAAIrO,WAClB4rB,YAAa9T,QACbI,IAAK,SAAAA,IAASzY,KACZ,MAPgB,IAOCA,OAAQ2G,MAE3BrH,IAAK,SAAAA,IAASU,KACZ,OAAO2G,KAVS,IAUK3G,MAEvB0Y,IAAK,SAAAA,IAAS1Y,IAAKN,OAEjB,OADAiH,KAbgB,IAaF3G,KAAON,MACdiH,MAETimC,OAAQ,SAAAA,OAAS5sC,KACf,IAAIM,SAjBY,IAiBQN,IACxB,OAAOM,YAAYqG,aAAeA,KAAKrG,WAEzCusC,MAAO,SAAAA,QACL,IAAK,IAAIvsC,YAAYqG,KArBL,MAqBerG,SAAS,WAAsBqG,KAAKrG,WAErEmM,KAAM,SAAAA,OACJ,IAAIA,QACJ,IAAK,IAAInM,YAAYqG,KAzBL,MAyBerG,SAAS,IAAemM,KAAKI,KAAKvM,SAASqhB,MAAM,IAChF,OAAOlV,MAETsY,OAAQ,SAAAA,SACN,IAAIA,UACJ,IAAK,IAAIzkB,YAAYqG,KA9BL,MA8BerG,SAAS,IAAeykB,OAAOlY,KAAKlG,KAAKrG,WACxE,OAAOykB,QAET3J,QAAS,SAAAA,UACP,IAAIA,WACJ,IAAK,IAAI9a,YAAYqG,KAnCL,MAmCerG,SAAS,IAAe8a,QAAQvO,MAAM7M,IAAKM,SAASqhB,MAAM,GAAIjiB,MAAOiH,KAAKrG,YACzG,OAAO8a,SAET0kB,KAAM,SAAAA,OACJ,IAAIA,KAAO,EACX,IAAK,IAAIx/B,YAAYqG,KAxCL,MAwCerG,SAAS,MAAiBw/B,KACzD,OAAOA,MAETgN,MAAO,SAAAA,QACL,IAAK,IAAIxsC,YAAYqG,KAAM,GA5CX,MA4CerG,SAAS,GAAe,OAAO,EAC9D,OAAO,GAETqsC,KAAM,SAAAA,KAASvrB,GACb,IAAK,IAAI9gB,YAAYqG,KAhDL,MAgDerG,SAAS,IAAe8gB,EAAEza,KAAKrG,UAAWA,SAASqhB,MAAM,GAAIhb,QA0BjFiI,oBCxEAm+B,SAAA,WACb,IAEIC,YACAC,QACAC,KAJAzgC,QACA0gC,aAKJ,SAASj/B,MAAMq9B,MAAO6B,MAAOC,aAAcC,WACzC,GAAIF,OAAS3gC,KAAKpE,OAEhB,OADkB,MAAd2kC,aAAoBzB,MAAM/zB,KAAKw1B,aAClB,MAAVC,QAAiBA,QAAO1B,OAASA,MAY1C,IATA,IAGIgC,SACA7tC,MAEAqlB,OANAtmB,GAAK,EACLyB,EAAIqrC,MAAMljC,OACVrI,IAAMyM,KAAK2gC,SAGXI,YAAc5+B,UAEdxE,OAASijC,iBAEJ5uC,EAAIyB,IACP6kB,OAASyoB,YAAYluC,IAAIiuC,SAAWvtC,IAAIN,MAAQ6rC,MAAM9sC,IAAM,KAC9DsmB,OAAOlY,KAAKnN,OAEZ8tC,YAAY90B,IAAI60B,UAAW7tC,QAQ/B,OAJA8tC,YAAYb,KAAK,SAAS5nB,OAAQ/kB,KAChCstC,UAAUljC,OAAQpK,IAAKkO,MAAM6W,OAAQqoB,MAAOC,aAAcC,cAGrDljC,OAWT,OAAO8iC,MACL7sC,OAAQ,SAAAA,OAASkrC,OAAS,OAAOr9B,MAAMq9B,MAAO,EAAGkC,aAAcC,YAC/D9+B,IAAK,SAAAA,IAAS28B,OAAS,OAAOr9B,MAAMq9B,MAAO,EAAGoC,UAAWC,SACzDxyB,QAAS,SAAAA,QAASmwB,OAAS,OAX7B,SAASnwB,SAAQxM,IAAKw+B,OACpB,KAAMA,MAAQ3gC,KAAKpE,OAAQ,OAAOuG,IAClC,IAAI28B,MAAOsC,QAAUV,UAASC,MAAQ,GAGtC,OAFc,MAAVH,SAAkBG,OAAS3gC,KAAKpE,OAAQkjC,MAAQ38B,IAAIwM,WACnDmwB,SAAY38B,IAAI+9B,KAAK,SAASt9B,EAAGy+B,GAAKvC,MAAM1+B,MAAM7M,IAAK8tC,EAAG/oB,OAAQ3J,SAAQ/L,EAAG+9B,YAChE,MAAXS,QAAkBtC,MAAM/zB,KAAK,SAAS3W,EAAGkJ,GAAK,OAAO8jC,QAAQhtC,EAAEb,IAAK+J,EAAE/J,OAAWurC,MAMtDnwB,CAAQlN,MAAMq9B,MAAO,EAAGoC,UAAWC,QAAS,IAC9E5tC,IAAK,SAAAA,IAASjB,GAAmB,OAAd0N,KAAKI,KAAK9N,GAAWmuC,MACxCC,SAAU,SAAAA,SAAShgB,OAA4C,OAAnCggB,UAAS1gC,KAAKpE,OAAS,GAAK8kB,MAAc+f,MACtEF,WAAY,SAAAA,WAAS7f,OAA6B,OAApB6f,YAAa7f,MAAc+f,MACzDD,OAAQ,SAAAA,OAAS7rB,GAAiB,OAAZ6rB,QAAS7rB,EAAU8rB,QAI7C,SAASO,eACP,SAGF,SAASC,UAAUrtC,OAAQL,IAAKN,OAC9BW,OAAOL,KAAON,MAGhB,SAASiuC,YACP,OAAO/+B,UAGT,SAASg/B,OAAOh/B,IAAK5O,IAAKN,OACxBkP,IAAI8J,IAAI1Y,IAAKN,OCrEf,SAAS0d,WAET,IAAI2wB,MAAQn/B,QAAIrO,UAkBhB,SAASmY,QAAIrY,OAAQ+gB,GACnB,IAAI1I,IAAM,IAAI0E,QAGd,GAAI/c,kBAAkB+c,QAAK/c,OAAOssC,KAAK,SAASjtC,OAASgZ,IAAI4E,IAAI5d,cAG5D,GAAIW,OAAQ,CACf,IAAI5B,GAAK,EAAGyB,EAAIG,OAAOgI,OACvB,GAAS,MAAL+Y,EAAW,OAAS3iB,EAAIyB,GAAGwY,IAAI4E,IAAIjd,OAAO5B,SACzC,OAASA,EAAIyB,GAAGwY,IAAI4E,IAAI8D,EAAE/gB,OAAO5B,GAAIA,EAAG4B,SAG/C,OAAOqY,IA7BT0E,QAAI7c,UAAYmY,QAAInY,WAClB4rB,YAAa/O,QACb3E,IAAKs1B,MAAMt1B,IACX6E,IAAK,SAAAA,IAAS5d,OAGZ,OADAiH,KFXgB,KEUhBjH,OAAS,KACcA,MAChBiH,MAETimC,OAAQmB,MAAMnB,OACdC,MAAOkB,MAAMlB,MACb9nB,OAAQgpB,MAAMthC,KACdqzB,KAAMiO,MAAMjO,KACZgN,MAAOiB,MAAMjB,MACbH,KAAMoB,MAAMpB,MAmBCj0B,ICtCX6yB,gBAAQ/7B,MAAMjP,UAEPqO,cAAM28B,gBAAM38B,IACZ+S,YAAQ4pB,gBAAM5pB,MCAdqsB,UAAYhvC,KAAM,YAEd,SAASivC,QAAQ/lC,OAC9B,IAAIU,MAAQgG,UACRyO,UACA6wB,QAAUF,SAId,SAASG,MAAMpvC,GACb,IAAIiB,IAAMjB,EAAI,GAAIN,EAAImK,MAAMtJ,IAAIU,KAChC,IAAKvB,EAAG,CACN,GAAIyvC,UAAYF,SAAU,OAAOE,QACjCtlC,MAAM8P,IAAI1Y,IAAKvB,EAAI4e,OAAOxQ,KAAK9N,IAEjC,OAAOmJ,OAAOzJ,EAAI,GAAKyJ,MAAMG,QA0B/B,OAlCAH,MAAiB,MAATA,SAAqByZ,YAAM/iB,KAAKsJ,OAWxCimC,MAAM9wB,OAAS,SAASoK,GACtB,IAAK1b,UAAU1D,OAAQ,OAAOgV,OAAOsE,QACrCtE,UAAazU,MAAQgG,UAErB,IADA,IAA0B7P,EAAGiB,IAAzBvB,GAAK,EAAGyB,EAAIunB,EAAEpf,SACT5J,EAAIyB,GAAQ0I,MAAM6P,IAAIzY,KAAOjB,EAAI0oB,EAAEhpB,IAAM,KAAKmK,MAAM8P,IAAI1Y,IAAKqd,OAAOxQ,KAAK9N,IAClF,OAAOovC,OAGTA,MAAMjmC,MAAQ,SAASuf,GACrB,OAAO1b,UAAU1D,QAAUH,MAAQyZ,YAAM/iB,KAAK6oB,GAAI0mB,OAASjmC,MAAMyZ,SAGnEwsB,MAAMD,QAAU,SAASzmB,GACvB,OAAO1b,UAAU1D,QAAU6lC,QAAUzmB,EAAG0mB,OAASD,SAGnDC,MAAMC,KAAO,WACX,OAAOH,UACF5wB,OAAOA,QACPnV,MAAMA,OACNgmC,QAAQA,UAGRC,MCzCM,SAASE,OACtB,IAII3C,KACA4C,UALAH,MAAQF,UAAUC,aAAQl6B,GAC1BqJ,OAAS8wB,MAAM9wB,OACfkxB,aAAeJ,MAAMjmC,MACrBA,OAAS,EAAG,GAGZgJ,OAAQ,EACRs9B,aAAe,EACfC,aAAe,EACfC,MAAQ,GAGZ,SAASC,UACP,IAAIzuC,EAAImd,SAAShV,OACbyiB,QAAU5iB,MAAM,GAAKA,MAAM,GAC3B/D,MAAQ+D,MAAM4iB,QAAU,GACxB2gB,KAAOvjC,MAAM,EAAI4iB,SACrB4gB,MAAQD,KAAOtnC,OAASqG,KAAKmQ,IAAI,EAAGza,EAAIsuC,aAA8B,EAAfC,cACnDv9B,QAAOw6B,KAAOlhC,KAAKoN,MAAM8zB,OAC7BvnC,QAAUsnC,KAAOtnC,MAAQunC,MAAQxrC,EAAIsuC,eAAiBE,MACtDJ,UAAY5C,MAAQ,EAAI8C,cACpBt9B,QAAO/M,MAAQqG,KAAK0G,MAAM/M,OAAQmqC,UAAY9jC,KAAK0G,MAAMo9B,YAC7D,IAAIvpB,OAAS6pB,UAAS1uC,GAAG0O,IAAI,SAASnQ,GAAK,OAAO0F,MAAQunC,KAAOjtC,IACjE,OAAO8vC,aAAazjB,QAAU/F,OAAO+F,UAAY/F,QAkGnD,cA9GOopB,MAAMD,QAebC,MAAM9wB,OAAS,SAASoK,GACtB,OAAO1b,UAAU1D,QAAUgV,OAAOoK,GAAIknB,WAAatxB,UAGrD8wB,MAAMjmC,MAAQ,SAASuf,GACrB,OAAO1b,UAAU1D,QAAUH,QAAUuf,EAAE,IAAKA,EAAE,IAAKknB,WAAazmC,MAAMyZ,SAGxEwsB,MAAMU,WAAa,SAASpnB,GAC1B,OAAOvf,QAAUuf,EAAE,IAAKA,EAAE,IAAKvW,OAAQ,EAAMy9B,WAG/CR,MAAMG,UAAY,WAChB,OAAOA,WAGTH,MAAMzC,KAAO,WACX,OAAOA,MAGTyC,MAAMj9B,MAAQ,SAASuW,GACrB,OAAO1b,UAAU1D,QAAU6I,QAAUuW,EAAGknB,WAAaz9B,OAGvDi9B,MAAMnG,QAAU,SAASvgB,GACvB,OAAO1b,UAAU1D,QAAUmmC,aAAeC,aAAejkC,KAAKmQ,IAAI,EAAGnQ,KAAKkQ,IAAI,EAAG+M,IAAKknB,WAAaH,cAGrGL,MAAMK,aAAe,SAAS/mB,GAC5B,OAAO1b,UAAU1D,QAAUmmC,aAAehkC,KAAKmQ,IAAI,EAAGnQ,KAAKkQ,IAAI,EAAG+M,IAAKknB,WAAaH,cAGtFL,MAAMM,aAAe,SAAShnB,GAC5B,OAAO1b,UAAU1D,QAAUomC,aAAejkC,KAAKmQ,IAAI,EAAGnQ,KAAKkQ,IAAI,EAAG+M,IAAKknB,WAAaF,cAGtFN,MAAMO,MAAQ,SAASjnB,GACrB,OAAO1b,UAAU1D,QAAUqmC,MAAQlkC,KAAKmQ,IAAI,EAAGnQ,KAAKkQ,IAAI,EAAG+M,IAAKknB,WAAaD,OAG/EP,MAAMC,KAAO,WACX,OAAOC,OACFhxB,OAAOA,UACPnV,MAAMA,OACNgJ,MAAMA,OACNs9B,aAAaA,cACbC,aAAaA,cACbC,MAAMA,QAGbP,MAAMW,aAAe,SAASC,GAAIC,IAChC,IAI2BnuC,EAAGkJ,EAAGpK,EAC7BsvC,QALAx3B,IAAMs3B,GACNr3B,GAAK3L,UAAU1D,OAAS,GAAK2mC,GAAKv3B,GAClCqT,QAAU5iB,MAAM,GAAKA,MAAM,GAC3B6c,OAAS+F,QAAUyjB,eAAezjB,UAAYyjB,eAC9CruC,EAAI6kB,OAAO1c,OAAS,EAKxB,GAHA0c,OAAOlY,KAAKkY,OAAO7kB,GAAKyG,KAAK+kC,QAEzBh0B,GAAKD,KAAI9X,EAAI8X,GAAIA,GAAKC,GAAIA,GAAK/X,KAC/B+X,GAAKqN,OAAO,IAAMtN,GAAKvP,MAAM,EAAE4iB,UAWnC,OARAjqB,EAAI2J,KAAKmQ,IAAI,EAAGu0B,kBAAkBnqB,OAAQtN,KAC1Cw3B,QAAUC,kBAAkBnqB,OAAQrN,IACpC3N,EAAI0N,KAAKC,GAAK7W,EAAI2J,KAAKmQ,IAAI9Z,EAAGouC,QAAU,GAKpCnkB,UAASnrB,EAAIkB,EAAGA,EAAIX,EAAI6J,EAAGA,EAAI7J,EAAIP,GAC/BkB,EAAIkJ,OAAKiK,EAAYqJ,SAASsE,MAAM9gB,EAAGkJ,EAAE,IAGnDokC,MAAMgB,OAAS,SAAUJ,GAAIC,IAC3B,IAKInuC,EACAlB,EANA8X,IAAMs3B,GACNr3B,GAAK3L,UAAU1D,OAAS,GAAK2mC,GAAKv3B,GAClCqT,QAAU5iB,MAAM,GAAKA,MAAM,GAC3B6c,OAAS+F,QAAUyjB,eAAezjB,UAAYyjB,eAC9CruC,EAAI6kB,OAAO1c,OAAS,EAMxB,GADIqP,GAAKD,KAAI9X,EAAI8X,GAAIA,GAAKC,GAAIA,GAAK/X,KAC/B+X,GAAKqN,OAAO,IAAMtN,GAAKvP,MAAM,EAAE4iB,UAQnC,OALAjqB,EAAI2J,KAAKmQ,IAAI,EAAGu0B,kBAAkBnqB,OAAQtN,GAAI,SAKvC4F,SAASyN,QAAU5qB,EAAIW,EAAIA,IAE7B8tC,UAqBT,SAASO,kBAAmB53B,IAAK5X,MAAO0vC,MAStC,IARA,IAGIC,QACA13B,IACA23B,GALAC,IAAM,EAENC,KADSl4B,IAAIjP,OACG,EAMbknC,IAAMC,MACT73B,IAAMnN,KAAKoN,OAAO23B,IAAMC,MAAQ,GAChCF,GAAK9kC,KAAK8nB,IAAIhb,IAAIK,KAAOjY,OACpB8K,KAAK8nB,IAAIhb,IAAIK,IAAM,GAAKjY,QAEnB4vC,GACNC,IAAM53B,IAAM,EAGZ63B,KAAO73B,IAIf,OAAKy3B,MAILC,QAAU/3B,IAAIk4B,SACE9vC,MACL8vC,KACAH,QAAU3vC,MACJ,IAAT8vC,KAAqBA,KACT,SAATJ,KAAiBI,KAAO,EAAIA,KAE/BA,OAASl4B,IAAIjP,OAAS,EAAYmnC,KACtB,SAATJ,KAAiBI,KAAOA,KAAO,EAX/BA,KCzKE,IAAArxC,OAAA,SAASguB,YAAanuB,QAASuC,WAC5C4rB,YAAY5rB,UAAYvC,QAAQuC,UAAYA,UAC5CA,UAAU4rB,YAAcA,aAGnB,SAASsjB,OAAO5iB,OAAQ6iB,YAC7B,IAAInvC,UAAYpB,OAAOY,OAAO8sB,OAAOtsB,WACrC,IAAK,IAAIP,OAAO0vC,WAAYnvC,UAAUP,KAAO0vC,WAAW1vC,KACxD,OAAOO,UCNF,SAASovC,SAET,IAGHC,IAAM,sBACNC,IAAM,gDACNC,IAAM,iDACNC,OAAS,mBACTC,OAAS,mBACTC,aAAe,IAAInpC,OAAO,WAAa8oC,IAAKA,IAAKA,KAAO,QACxDM,aAAe,IAAIppC,OAAO,WAAagpC,IAAKA,IAAKA,KAAO,QACxDK,cAAgB,IAAIrpC,OAAO,YAAc8oC,IAAKA,IAAKA,IAAKC,KAAO,QAC/DO,cAAgB,IAAItpC,OAAO,YAAcgpC,IAAKA,IAAKA,IAAKD,KAAO,QAC/DQ,aAAe,IAAIvpC,OAAO,WAAa+oC,IAAKC,IAAKA,KAAO,QACxDQ,cAAgB,IAAIxpC,OAAO,YAAc+oC,IAAKC,IAAKA,IAAKD,KAAO,QAE/DU,OACFC,UAAW,SACXC,aAAc,SACdC,KAAM,MACNC,WAAY,QACZC,MAAO,SACPC,MAAO,SACPC,OAAQ,SACRC,MAAO,EACPC,eAAgB,SAChBC,KAAM,IACNC,WAAY,QACZC,MAAO,SACPC,UAAW,SACXC,UAAW,QACXC,WAAY,QACZC,UAAW,SACXC,MAAO,SACPC,eAAgB,QAChBC,SAAU,SACVC,QAAS,SACTC,KAAM,MACNC,SAAU,IACVC,SAAU,MACVC,cAAe,SACfC,SAAU,SACVC,UAAW,MACXC,SAAU,SACVC,UAAW,SACXC,YAAa,QACbC,eAAgB,QAChBC,WAAY,SACZC,WAAY,SACZC,QAAS,QACTC,WAAY,SACZC,aAAc,QACdC,cAAe,QACfC,cAAe,QACfC,cAAe,QACfC,cAAe,MACfC,WAAY,QACZC,SAAU,SACVC,YAAa,MACbC,QAAS,QACTC,QAAS,QACTC,WAAY,QACZC,UAAW,SACXC,YAAa,SACbC,YAAa,QACbC,QAAS,SACTC,UAAW,SACXC,WAAY,SACZC,KAAM,SACNC,UAAW,SACXC,KAAM,QACNC,MAAO,MACPC,YAAa,SACbC,KAAM,QACNC,SAAU,SACVC,QAAS,SACTC,UAAW,SACXC,OAAQ,QACRC,MAAO,SACPC,MAAO,SACPC,SAAU,SACVC,cAAe,SACfC,UAAW,QACXC,aAAc,SACdC,UAAW,SACXC,WAAY,SACZC,UAAW,SACXC,qBAAsB,SACtBC,UAAW,SACXC,WAAY,QACZC,UAAW,SACXC,UAAW,SACXC,YAAa,SACbC,cAAe,QACfC,aAAc,QACdC,eAAgB,QAChBC,eAAgB,QAChBC,eAAgB,SAChBC,YAAa,SACbC,KAAM,MACNC,UAAW,QACXC,MAAO,SACPC,QAAS,SACTC,OAAQ,QACRC,iBAAkB,QAClBC,WAAY,IACZC,aAAc,SACdC,aAAc,QACdC,eAAgB,QAChBC,gBAAiB,QACjBC,kBAAmB,MACnBC,gBAAiB,QACjBC,gBAAiB,SACjBC,aAAc,QACdC,UAAW,SACXC,UAAW,SACXC,SAAU,SACVC,YAAa,SACbC,KAAM,IACNC,QAAS,SACTC,MAAO,QACPC,UAAW,QACXC,OAAQ,SACRC,UAAW,SACXC,OAAQ,SACRC,cAAe,SACfC,UAAW,SACXC,cAAe,SACfC,cAAe,SACfC,WAAY,SACZC,UAAW,SACXC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,WAAY,SACZC,OAAQ,QACRC,cAAe,QACfC,IAAK,SACLC,UAAW,SACXC,UAAW,QACXC,YAAa,QACbC,OAAQ,SACRC,WAAY,SACZC,SAAU,QACVC,SAAU,SACVC,OAAQ,SACRC,OAAQ,SACRC,QAAS,QACTC,UAAW,QACXC,UAAW,QACXC,UAAW,QACXC,KAAM,SACNC,YAAa,MACbC,UAAW,QACXC,IAAK,SACLC,KAAM,MACNC,QAAS,SACTC,OAAQ,SACRC,UAAW,QACXC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,WAAY,SACZC,OAAQ,SACRC,YAAa,UAeA,SAASC,YAAMlzC,QAC5B,IAAI7H,EAEJ,OADA6H,QAAUA,OAAS,IAAIsY,OAAO5W,eACtBvJ,EAAIkxC,OAAO8J,KAAKnzC,SAAoC,IAAIozC,KAA5Bj7C,EAAImJ,SAASnJ,EAAE,GAAI,MAAmB,EAAI,GAAQA,GAAK,EAAI,IAASA,GAAK,EAAI,GAAY,IAAJA,GAAiB,GAAJA,IAAY,EAAU,GAAJA,EAAU,IAC3JA,EAAImxC,OAAO6J,KAAKnzC,SAAWqzC,KAAK/xC,SAASnJ,EAAE,GAAI,MAC/CA,EAAIoxC,aAAa4J,KAAKnzC,SAAW,IAAIozC,IAAIj7C,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAI,IAC3DA,EAAIqxC,aAAa2J,KAAKnzC,SAAW,IAAIozC,IAAW,IAAPj7C,EAAE,GAAW,IAAY,IAAPA,EAAE,GAAW,IAAY,IAAPA,EAAE,GAAW,IAAK,IAC/FA,EAAIsxC,cAAc0J,KAAKnzC,SAAWszC,KAAKn7C,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,KAC3DA,EAAIuxC,cAAcyJ,KAAKnzC,SAAWszC,KAAY,IAAPn7C,EAAE,GAAW,IAAY,IAAPA,EAAE,GAAW,IAAY,IAAPA,EAAE,GAAW,IAAKA,EAAE,KAC/FA,EAAIwxC,aAAawJ,KAAKnzC,SAAWuzC,KAAKp7C,EAAE,GAAIA,EAAE,GAAK,IAAKA,EAAE,GAAK,IAAK,IACpEA,EAAIyxC,cAAcuJ,KAAKnzC,SAAWuzC,KAAKp7C,EAAE,GAAIA,EAAE,GAAK,IAAKA,EAAE,GAAK,IAAKA,EAAE,IACxE0xC,MAAM/vC,eAAekG,QAAUqzC,KAAKxJ,MAAM7pC,SAC/B,gBAAXA,OAA2B,IAAIozC,IAAIhP,IAAKA,IAAKA,IAAK,GAClD,KAGR,SAASiP,KAAK75C,GACZ,OAAO,IAAI45C,IAAI55C,GAAK,GAAK,IAAMA,GAAK,EAAI,IAAU,IAAJA,EAAU,GAG1D,SAAS85C,KAAKz6C,EAAG26C,EAAGnwC,EAAGlJ,GAErB,OADIA,GAAK,IAAGtB,EAAI26C,EAAInwC,EAAI+gC,KACjB,IAAIgP,IAAIv6C,EAAG26C,EAAGnwC,EAAGlJ,GAGnB,SAASs5C,WAAWj7C,GAEzB,OADMA,aAAaywC,QAAQzwC,EAAI06C,YAAM16C,IAChCA,EAEE,IAAI46C,KADX56C,EAAIA,EAAEk7C,OACW76C,EAAGL,EAAEg7C,EAAGh7C,EAAE6K,EAAG7K,EAAEm7C,SAFjB,IAAIP,IAKd,SAASM,UAAI76C,EAAG26C,EAAGnwC,EAAGswC,SAC3B,OAA4B,IAArBtuC,UAAU1D,OAAe8xC,WAAW56C,GAAK,IAAIu6C,IAAIv6C,EAAG26C,EAAGnwC,EAAc,MAAXswC,QAAkB,EAAIA,SAGlF,SAASP,IAAIv6C,EAAG26C,EAAGnwC,EAAGswC,SAC3B1zC,KAAKpH,GAAKA,EACVoH,KAAKuzC,GAAKA,EACVvzC,KAAKoD,GAAKA,EACVpD,KAAK0zC,SAAWA,QAkClB,SAASC,KAAI56C,OAEX,QADAA,MAAQ8K,KAAKmQ,IAAI,EAAGnQ,KAAKkQ,IAAI,IAAKlQ,KAAK0G,MAAMxR,QAAU,KACvC,GAAK,IAAM,IAAMA,MAAMuJ,SAAS,IAGlD,SAASgxC,KAAKhpB,EAAGvwB,EAAGhC,EAAGmC,GAIrB,OAHIA,GAAK,EAAGowB,EAAIvwB,EAAIhC,EAAIosC,IACfpsC,GAAK,GAAKA,GAAK,EAAGuyB,EAAIvwB,EAAIoqC,IAC1BpqC,GAAK,IAAGuwB,EAAI6Z,KACd,IAAIyP,IAAItpB,EAAGvwB,EAAGhC,EAAGmC,GA6BnB,SAAS25C,IAAIvpB,EAAGvwB,EAAGhC,EAAG27C,SAC3B,OAA4B,IAArBtuC,UAAU1D,OA3BZ,SAASoyC,WAAWv7C,GACzB,GAAIA,aAAaq7C,IAAK,OAAO,IAAIA,IAAIr7C,EAAE+xB,EAAG/xB,EAAEwB,EAAGxB,EAAER,EAAGQ,EAAEm7C,SAEtD,GADMn7C,aAAaywC,QAAQzwC,EAAI06C,YAAM16C,KAChCA,EAAG,OAAO,IAAIq7C,IACnB,GAAIr7C,aAAaq7C,IAAK,OAAOr7C,EAE7B,IAAIK,GADJL,EAAIA,EAAEk7C,OACI76C,EAAI,IACV26C,EAAIh7C,EAAEg7C,EAAI,IACVnwC,EAAI7K,EAAE6K,EAAI,IACV2Q,IAAMlQ,KAAKkQ,IAAInb,EAAG26C,EAAGnwC,GACrB4Q,IAAMnQ,KAAKmQ,IAAIpb,EAAG26C,EAAGnwC,GACrBknB,EAAI6Z,IACJpqC,EAAIia,IAAMD,IACVhc,GAAKic,IAAMD,KAAO,EAUtB,OATIha,GACauwB,EAAX1xB,IAAMob,KAAUu/B,EAAInwC,GAAKrJ,EAAc,GAATw5C,EAAInwC,GAC7BmwC,IAAMv/B,KAAU5Q,EAAIxK,GAAKmB,EAAI,GAC5BnB,EAAI26C,GAAKx5C,EAAI,EACvBA,GAAKhC,EAAI,GAAMic,IAAMD,IAAM,EAAIC,IAAMD,IACrCuW,GAAK,IAELvwB,EAAIhC,EAAI,GAAKA,EAAI,EAAI,EAAIuyB,EAEpB,IAAIspB,IAAItpB,EAAGvwB,EAAGhC,EAAGQ,EAAEm7C,SAIMI,CAAWxpB,GAAK,IAAIspB,IAAItpB,EAAGvwB,EAAGhC,EAAc,MAAX27C,QAAkB,EAAIA,SAGzF,SAASE,IAAItpB,EAAGvwB,EAAGhC,EAAG27C,SACpB1zC,KAAKsqB,GAAKA,EACVtqB,KAAKjG,GAAKA,EACViG,KAAKjI,GAAKA,EACViI,KAAK0zC,SAAWA,QAiClB,SAASK,QAAQzpB,EAAG0pB,GAAIC,IACtB,OAGY,KAHJ3pB,EAAI,GAAK0pB,IAAMC,GAAKD,IAAM1pB,EAAI,GAChCA,EAAI,IAAM2pB,GACV3pB,EAAI,IAAM0pB,IAAMC,GAAKD,KAAO,IAAM1pB,GAAK,GACvC0pB,IAzKRx8C,OAAOwxC,MAAOiK,aACZiB,YAAa,SAAAA,cACX,OAAOl0C,KAAKyzC,MAAMS,eAEpBP,IAAK,SAAAA,MACH,OAAO3zC,KAAKyzC,MAAME,OAEpBrxC,SAAU,SAAAA,WACR,OAAOtC,KAAKyzC,MAAQ,MA+CxBj8C,OAAO27C,IAAKM,UAAK3K,OAAOE,OACtBmL,SAAU,SAAAA,SAAShN,GAEjB,OADAA,EAAS,MAALA,EA9Nc,EADF,GA+NWtjC,KAAKsQ,IA9Nd,EADF,GA+N8BgzB,GACvC,IAAIgM,IAAInzC,KAAKpH,EAAIuuC,EAAGnnC,KAAKuzC,EAAIpM,EAAGnnC,KAAKoD,EAAI+jC,EAAGnnC,KAAK0zC,UAE1DU,OAAQ,SAAAA,OAASjN,GAEf,OADAA,EAAS,MAALA,EAnOY,GAmOStjC,KAAKsQ,IAnOd,GAmO0BgzB,GACnC,IAAIgM,IAAInzC,KAAKpH,EAAIuuC,EAAGnnC,KAAKuzC,EAAIpM,EAAGnnC,KAAKoD,EAAI+jC,EAAGnnC,KAAK0zC,UAE1DD,IAAK,SAAAA,MACH,OAAOzzC,MAETk0C,YAAa,SAAAA,cACX,OAAQ,GAAKl0C,KAAKpH,GAAKoH,KAAKpH,GAAK,KACzB,GAAKoH,KAAKuzC,GAAKvzC,KAAKuzC,GAAK,KACzB,GAAKvzC,KAAKoD,GAAKpD,KAAKoD,GAAK,KACzB,GAAKpD,KAAK0zC,SAAW1zC,KAAK0zC,SAAW,GAE/CC,IAAK,SAAAA,MACH,MAAO,IAAMA,KAAI3zC,KAAKpH,GAAK+6C,KAAI3zC,KAAKuzC,GAAKI,KAAI3zC,KAAKoD,IAEpDd,SAAU,SAAAA,WACR,IAAIpI,EAAI8F,KAAK0zC,QACb,OAAc,KADQx5C,EAAI0Z,MAAM1Z,GAAK,EAAI2J,KAAKmQ,IAAI,EAAGnQ,KAAKkQ,IAAI,EAAG7Z,KAC/C,OAAS,SACrB2J,KAAKmQ,IAAI,EAAGnQ,KAAKkQ,IAAI,IAAKlQ,KAAK0G,MAAMvK,KAAKpH,IAAM,IAAM,KACtDiL,KAAKmQ,IAAI,EAAGnQ,KAAKkQ,IAAI,IAAKlQ,KAAK0G,MAAMvK,KAAKuzC,IAAM,IAAM,KACtD1vC,KAAKmQ,IAAI,EAAGnQ,KAAKkQ,IAAI,IAAKlQ,KAAK0G,MAAMvK,KAAKoD,IAAM,KACzC,IAANlJ,EAAU,IAAM,KAAOA,EAAI,SAqDtC1C,OAAOo8C,IAAKC,IAAK/K,OAAOE,OACtBmL,SAAU,SAAAA,SAAShN,GAEjB,OADAA,EAAS,MAALA,EA9Sc,EADF,GA+SWtjC,KAAKsQ,IA9Sd,EADF,GA+S8BgzB,GACvC,IAAIyM,IAAI5zC,KAAKsqB,EAAGtqB,KAAKjG,EAAGiG,KAAKjI,EAAIovC,EAAGnnC,KAAK0zC,UAElDU,OAAQ,SAAAA,OAASjN,GAEf,OADAA,EAAS,MAALA,EAnTY,GAmTStjC,KAAKsQ,IAnTd,GAmT0BgzB,GACnC,IAAIyM,IAAI5zC,KAAKsqB,EAAGtqB,KAAKjG,EAAGiG,KAAKjI,EAAIovC,EAAGnnC,KAAK0zC,UAElDD,IAAK,SAAAA,MACH,IAAInpB,EAAItqB,KAAKsqB,EAAI,IAAqB,KAAdtqB,KAAKsqB,EAAI,GAC7BvwB,EAAI6Z,MAAM0W,IAAM1W,MAAM5T,KAAKjG,GAAK,EAAIiG,KAAKjG,EACzChC,EAAIiI,KAAKjI,EACTk8C,GAAKl8C,GAAKA,EAAI,GAAMA,EAAI,EAAIA,GAAKgC,EACjCi6C,GAAK,EAAIj8C,EAAIk8C,GACjB,OAAO,IAAId,IACTY,QAAQzpB,GAAK,IAAMA,EAAI,IAAMA,EAAI,IAAK0pB,GAAIC,IAC1CF,QAAQzpB,EAAG0pB,GAAIC,IACfF,QAAQzpB,EAAI,IAAMA,EAAI,IAAMA,EAAI,IAAK0pB,GAAIC,IACzCj0C,KAAK0zC,UAGTQ,YAAa,SAAAA,cACX,OAAQ,GAAKl0C,KAAKjG,GAAKiG,KAAKjG,GAAK,GAAK6Z,MAAM5T,KAAKjG,KACzC,GAAKiG,KAAKjI,GAAKiI,KAAKjI,GAAK,GACzB,GAAKiI,KAAK0zC,SAAW1zC,KAAK0zC,SAAW,MC1U1C,IAAIW,QAAUxwC,KAAKywC,GAAK,IACpBC,QAAU,IAAM1wC,KAAKywC,GCK5BE,GAAK,OACLC,GAAK,EACLC,GAAK,OACLC,OAAK,EAAI,GACTC,OAAK,EAAI,GACTC,GAAK,EAAID,OAAKA,OACdE,GAAKF,OAAKA,OAAKA,OAEnB,SAASG,WAAWx8C,GAClB,GAAIA,aAAay8C,IAAK,OAAO,IAAIA,IAAIz8C,EAAER,EAAGQ,EAAE2B,EAAG3B,EAAE6K,EAAG7K,EAAEm7C,SACtD,GAAIn7C,aAAa08C,IAAK,CACpB,GAAIrhC,MAAMrb,EAAE+xB,GAAI,OAAO,IAAI0qB,IAAIz8C,EAAER,EAAG,EAAG,EAAGQ,EAAEm7C,SAC5C,IAAIppB,EAAI/xB,EAAE+xB,EAAI+pB,QACd,OAAO,IAAIW,IAAIz8C,EAAER,EAAG8L,KAAKqxC,IAAI5qB,GAAK/xB,EAAEJ,EAAG0L,KAAKsxC,IAAI7qB,GAAK/xB,EAAEJ,EAAGI,EAAEm7C,SAExDn7C,aAAa46C,MAAM56C,EAAIi7C,WAAWj7C,IACxC,IAGuEqkC,EAAGwY,EAHtEx8C,EAAIy8C,SAAS98C,EAAEK,GACf26C,EAAI8B,SAAS98C,EAAEg7C,GACfnwC,EAAIiyC,SAAS98C,EAAE6K,GACfI,EAAI8xC,SAAS,SAAY18C,EAAI,SAAY26C,EAAI,SAAYnwC,GAAKqxC,IAKlE,OAJI77C,IAAM26C,GAAKA,IAAMnwC,EAAGw5B,EAAIwY,EAAI5xC,GAC9Bo5B,EAAI0Y,SAAS,SAAY18C,EAAI,SAAY26C,EAAI,SAAYnwC,GAAKoxC,IAC9DY,EAAIE,SAAS,SAAY18C,EAAI,SAAY26C,EAAI,SAAYnwC,GAAKsxC,KAEzD,IAAIM,IAAI,IAAMxxC,EAAI,GAAI,KAAOo5B,EAAIp5B,GAAI,KAAOA,EAAI4xC,GAAI78C,EAAEm7C,SAOhD,SAAS6B,IAAIx9C,EAAGmC,EAAGkJ,EAAGswC,SACnC,OAA4B,IAArBtuC,UAAU1D,OAAeqzC,WAAWh9C,GAAK,IAAIi9C,IAAIj9C,EAAGmC,EAAGkJ,EAAc,MAAXswC,QAAkB,EAAIA,SAGlF,SAASsB,IAAIj9C,EAAGmC,EAAGkJ,EAAGswC,SAC3B1zC,KAAKjI,GAAKA,EACViI,KAAK9F,GAAKA,EACV8F,KAAKoD,GAAKA,EACVpD,KAAK0zC,SAAWA,QA0BlB,SAAS4B,QAAQt8C,GACf,OAAOA,EAAI87C,GAAKjxC,KAAKsQ,IAAInb,EAAG,EAAI,GAAKA,EAAI67C,GAAKF,OAGhD,SAASa,QAAQx8C,GACf,OAAOA,EAAI47C,OAAK57C,EAAIA,EAAIA,EAAI67C,IAAM77C,EAAI27C,QAGxC,SAASc,SAAS7Y,GAChB,OAAO,KAAOA,GAAK,SAAY,MAAQA,EAAI,MAAQ/4B,KAAKsQ,IAAIyoB,EAAG,EAAI,KAAO,MAG5E,SAASyY,SAASzY,GAChB,OAAQA,GAAK,MAAQ,OAAUA,EAAI,MAAQ/4B,KAAKsQ,KAAKyoB,EAAI,MAAS,MAAO,KAG3E,SAAS8Y,WAAWn9C,GAClB,GAAIA,aAAa08C,IAAK,OAAO,IAAIA,IAAI18C,EAAE+xB,EAAG/xB,EAAEJ,EAAGI,EAAER,EAAGQ,EAAEm7C,SAEtD,GADMn7C,aAAay8C,MAAMz8C,EAAIw8C,WAAWx8C,IAC5B,IAARA,EAAE2B,GAAmB,IAAR3B,EAAE6K,EAAS,OAAO,IAAI6xC,IAAI9Q,IAAK,EAAG5rC,EAAER,EAAGQ,EAAEm7C,SAC1D,IAAIppB,EAAIzmB,KAAK8xC,MAAMp9C,EAAE6K,EAAG7K,EAAE2B,GAAKq6C,QAC/B,OAAO,IAAIU,IAAI3qB,EAAI,EAAIA,EAAI,IAAMA,EAAGzmB,KAAKoQ,KAAK1b,EAAE2B,EAAI3B,EAAE2B,EAAI3B,EAAE6K,EAAI7K,EAAE6K,GAAI7K,EAAER,EAAGQ,EAAEm7C,SAOxE,SAASkC,IAAItrB,EAAGnyB,EAAGJ,EAAG27C,SAC3B,OAA4B,IAArBtuC,UAAU1D,OAAeg0C,WAAWprB,GAAK,IAAI2qB,IAAI3qB,EAAGnyB,EAAGJ,EAAc,MAAX27C,QAAkB,EAAIA,SAGlF,SAASuB,IAAI3qB,EAAGnyB,EAAGJ,EAAG27C,SAC3B1zC,KAAKsqB,GAAKA,EACVtqB,KAAK7H,GAAKA,EACV6H,KAAKjI,GAAKA,EACViI,KAAK0zC,SAAWA,QA3DlBl8C,OAAOw9C,IAAKO,IAAKzM,OAAOE,OACtBmL,SAAU,SAAAA,SAAShN,GACjB,OAAO,IAAI6N,IAAIh1C,KAAKjI,EA7ChB,IA6C8B,MAALovC,EAAY,EAAIA,GAAInnC,KAAK9F,EAAG8F,KAAKoD,EAAGpD,KAAK0zC,UAExEU,OAAQ,SAAAA,OAASjN,GACf,OAAO,IAAI6N,IAAIh1C,KAAKjI,EAhDhB,IAgD8B,MAALovC,EAAY,EAAIA,GAAInnC,KAAK9F,EAAG8F,KAAKoD,EAAGpD,KAAK0zC,UAExED,IAAK,SAAAA,MACH,IAAIjwC,GAAKxD,KAAKjI,EAAI,IAAM,IACpB6kC,EAAIhpB,MAAM5T,KAAK9F,GAAKsJ,EAAIA,EAAIxD,KAAK9F,EAAI,IACrCk7C,EAAIxhC,MAAM5T,KAAKoD,GAAKI,EAAIA,EAAIxD,KAAKoD,EAAI,IAIzC,OAAO,IAAI+vC,IACTsC,SAAU,WAJZ7Y,EAAI4X,GAAKgB,QAAQ5Y,IAIW,WAH5Bp5B,EAAIixC,GAAKe,QAAQhyC,IAG2B,UAF5C4xC,EAAIV,GAAKc,QAAQJ,KAGfK,UAAU,SAAY7Y,EAAI,UAAYp5B,EAAI,QAAY4xC,GACtDK,SAAU,SAAY7Y,EAAI,SAAYp5B,EAAI,UAAY4xC,GACtDp1C,KAAK0zC,aA4CXl8C,OAAOy9C,IAAKW,IAAK9M,OAAOE,OACtBmL,SAAU,SAAAA,SAAShN,GACjB,OAAO,IAAI8N,IAAIj1C,KAAKsqB,EAAGtqB,KAAK7H,EAAG6H,KAAKjI,EA3GhC,IA2G8C,MAALovC,EAAY,EAAIA,GAAInnC,KAAK0zC,UAExEU,OAAQ,SAAAA,OAASjN,GACf,OAAO,IAAI8N,IAAIj1C,KAAKsqB,EAAGtqB,KAAK7H,EAAG6H,KAAKjI,EA9GhC,IA8G8C,MAALovC,EAAY,EAAIA,GAAInnC,KAAK0zC,UAExED,IAAK,SAAAA,MACH,OAAOsB,WAAW/0C,MAAMyzC,UClH5B,IAAIvwC,GAAK,OACLK,EAAI,QACJsyC,GAAK,OACLC,aAAK,OACLC,EAAI,QACJC,GAAKD,EAAID,YACTG,GAAKF,EAAIxyC,EACT2yC,MAAQ3yC,EAAIsyC,EAAIC,YAAI5yC,EAgBT,SAASizC,oBAAU7rB,EAAGvwB,EAAGhC,EAAG27C,SACzC,OAA4B,IAArBtuC,UAAU1D,OAfnB,SAAS00C,iBAAiB79C,GACxB,GAAIA,aAAa89C,UAAW,OAAO,IAAIA,UAAU99C,EAAE+xB,EAAG/xB,EAAEwB,EAAGxB,EAAER,EAAGQ,EAAEm7C,SAC5Dn7C,aAAa46C,MAAM56C,EAAIi7C,WAAWj7C,IACxC,IAAIK,EAAIL,EAAEK,EAAI,IACV26C,EAAIh7C,EAAEg7C,EAAI,IACVnwC,EAAI7K,EAAE6K,EAAI,IACVrL,GAAKm+C,MAAQ9yC,EAAI4yC,GAAKp9C,EAAIq9C,GAAK1C,IAAM2C,MAAQF,GAAKC,IAClDK,GAAKlzC,EAAIrL,EACTovC,GAAK4O,GAAKxC,EAAIx7C,GAAK89C,EAAIS,IAAMR,YAC7B/7C,EAAI8J,KAAKoQ,KAAKkzB,EAAIA,EAAImP,GAAKA,KAAOP,EAAIh+C,GAAK,EAAIA,IAC/CuyB,EAAIvwB,EAAI8J,KAAK8xC,MAAMxO,EAAGmP,IAAM/B,QAAU,IAAMpQ,IAChD,OAAO,IAAIkS,UAAU/rB,EAAI,EAAIA,EAAI,IAAMA,EAAGvwB,EAAGhC,EAAGQ,EAAEm7C,SAIlB0C,CAAiB9rB,GAAK,IAAI+rB,UAAU/rB,EAAGvwB,EAAGhC,EAAc,MAAX27C,QAAkB,EAAIA,SAG9F,SAAS2C,UAAU/rB,EAAGvwB,EAAGhC,EAAG27C,SACjC1zC,KAAKsqB,GAAKA,EACVtqB,KAAKjG,GAAKA,EACViG,KAAKjI,GAAKA,EACViI,KAAK0zC,SAAWA,QCnCX,SAAS6C,MAAM3B,GAAI4B,GAAIC,GAAIC,GAAIC,IACpC,IAAI9B,GAAKD,GAAKA,GAAIE,GAAKD,GAAKD,GAC5B,QAAS,EAAI,EAAIA,GAAK,EAAIC,GAAKC,IAAM0B,IAC9B,EAAI,EAAI3B,GAAK,EAAIC,IAAM2B,IACvB,EAAI,EAAI7B,GAAK,EAAIC,GAAK,EAAIC,IAAM4B,GACjC5B,GAAK6B,IAAM,EDiCnBn/C,OAAO6+C,UAAWF,oBAAWrN,OAAOE,OAClCmL,SAAU,SAAAA,SAAShN,GAEjB,OADAA,EAAS,MAALA,EHnCc,EADF,GGoCWtjC,KAAKsQ,IHnCd,EADF,GGoC8BgzB,GACvC,IAAIkP,UAAUr2C,KAAKsqB,EAAGtqB,KAAKjG,EAAGiG,KAAKjI,EAAIovC,EAAGnnC,KAAK0zC,UAExDU,OAAQ,SAAAA,OAASjN,GAEf,OADAA,EAAS,MAALA,EHxCY,GGwCStjC,KAAKsQ,IHxCd,GGwC0BgzB,GACnC,IAAIkP,UAAUr2C,KAAKsqB,EAAGtqB,KAAKjG,EAAGiG,KAAKjI,EAAIovC,EAAGnnC,KAAK0zC,UAExDD,IAAK,SAAAA,MACH,IAAInpB,EAAI1W,MAAM5T,KAAKsqB,GAAK,GAAKtqB,KAAKsqB,EAAI,KAAO+pB,QACzCt8C,GAAKiI,KAAKjI,EACVmC,EAAI0Z,MAAM5T,KAAKjG,GAAK,EAAIiG,KAAKjG,EAAIhC,GAAK,EAAIA,GAC1C6+C,KAAO/yC,KAAKqxC,IAAI5qB,GAChBusB,KAAOhzC,KAAKsxC,IAAI7qB,GACpB,OAAO,IAAI6oB,IACT,KAAOp7C,EAAImC,GAAKgJ,EAAI0zC,KAAOrzC,EAAIszC,OAC/B,KAAO9+C,EAAImC,GAAK27C,EAAIe,KAAOd,YAAIe,OAC/B,KAAO9+C,EAAImC,GAAK67C,EAAIa,OACpB52C,KAAK0zC,aCjDI,ICRAoD,aAAA,SAASla,GACtB,OAAO,WACL,OAAOA,ICAX,SAASma,OAAO78C,EAAG9B,GACjB,OAAO,SAASY,GACd,OAAOkB,EAAIlB,EAAIZ,GAUZ,SAAS4+C,UAAI98C,EAAGkJ,GACrB,IAAIhL,EAAIgL,EAAIlJ,EACZ,OAAO9B,EAAI2+C,OAAO78C,EAAG9B,EAAI,KAAOA,GAAK,IAAMA,EAAI,IAAMyL,KAAK0G,MAAMnS,EAAI,KAAOA,GAAK6+C,aAASrjC,MAAM1Z,GAAKkJ,EAAIlJ,GAGnG,SAASg9C,MAAM1zC,GACpB,OAAoB,IAAZA,GAAKA,GAAW2zC,QAAU,SAASj9C,EAAGkJ,GAC5C,OAAOA,EAAIlJ,EAbf,SAASk9C,YAAYl9C,EAAGkJ,EAAGI,GACzB,OAAOtJ,EAAI2J,KAAKsQ,IAAIja,EAAGsJ,GAAIJ,EAAIS,KAAKsQ,IAAI/Q,EAAGI,GAAKtJ,EAAGsJ,EAAI,EAAIA,EAAG,SAASxK,GACrE,OAAO6K,KAAKsQ,IAAIja,EAAIlB,EAAIoK,EAAGI,IAWZ4zC,CAAYl9C,EAAGkJ,EAAGI,GAAKyzC,aAASrjC,MAAM1Z,GAAKkJ,EAAIlJ,IAInD,SAASi9C,QAAQj9C,EAAGkJ,GACjC,IAAIhL,EAAIgL,EAAIlJ,EACZ,OAAO9B,EAAI2+C,OAAO78C,EAAG9B,GAAK6+C,aAASrjC,MAAM1Z,GAAKkJ,EAAIlJ,GCtBrC,IAAAm9C,QAAA,SAAUC,SAAS9zC,GAChC,IAAIyvC,MAAQiE,MAAM1zC,GAElB,SAASiwC,IAAIj2C,MAAOgP,KAClB,IAAI5T,EAAIq6C,OAAOz1C,MAAQ+5C,UAAS/5C,QAAQ5E,GAAI4T,IAAM+qC,UAAS/qC,MAAM5T,GAC7D26C,EAAIN,MAAMz1C,MAAM+1C,EAAG/mC,IAAI+mC,GACvBnwC,EAAI6vC,MAAMz1C,MAAM4F,EAAGoJ,IAAIpJ,GACvBswC,QAAUyD,QAAQ35C,MAAMk2C,QAASlnC,IAAIknC,SACzC,OAAO,SAAS16C,GAKd,OAJAwE,MAAM5E,EAAIA,EAAEI,GACZwE,MAAM+1C,EAAIA,EAAEv6C,GACZwE,MAAM4F,EAAIA,EAAEpK,GACZwE,MAAMk2C,QAAUA,QAAQ16C,GACjBwE,MAAQ,IAMnB,OAFAi2C,IAAIyD,MAAQI,SAEL7D,IAnBM,CAoBZ,GAEH,SAAS+D,UAAUC,QACjB,OAAO,SAASC,QACd,IAII5/C,EAAGm7C,MAJH15C,EAAIm+C,OAAOh2C,OACX9I,EAAI,IAAIiQ,MAAMtP,GACdg6C,EAAI,IAAI1qC,MAAMtP,GACd6J,EAAI,IAAIyF,MAAMtP,GAElB,IAAKzB,EAAI,EAAGA,EAAIyB,IAAKzB,EACnBm7C,MAAQsE,UAASG,OAAO5/C,IACxBc,EAAEd,GAAKm7C,MAAMr6C,GAAK,EAClB26C,EAAEz7C,GAAKm7C,MAAMM,GAAK,EAClBnwC,EAAEtL,GAAKm7C,MAAM7vC,GAAK,EAMpB,OAJAxK,EAAI6+C,OAAO7+C,GACX26C,EAAIkE,OAAOlE,GACXnwC,EAAIq0C,OAAOr0C,GACX6vC,MAAMS,QAAU,EACT,SAAS16C,GAId,OAHAi6C,MAAMr6C,EAAIA,EAAEI,GACZi6C,MAAMM,EAAIA,EAAEv6C,GACZi6C,MAAM7vC,EAAIA,EAAEpK,GACLi6C,MAAQ,KAKd,IAAI0E,SAAWH,UH7CP,SAASp5B,QACtB,IAAI7kB,EAAI6kB,OAAO1c,OAAS,EACxB,OAAO,SAAS1I,GACd,IAAIlB,EAAIkB,GAAK,EAAKA,EAAI,EAAKA,GAAK,GAAKA,EAAI,EAAGO,EAAI,GAAKsK,KAAKoN,MAAMjY,EAAIO,GAChEk9C,GAAKr4B,OAAOtmB,GACZ4+C,GAAKt4B,OAAOtmB,EAAI,GAChB0+C,GAAK1+C,EAAI,EAAIsmB,OAAOtmB,EAAI,GAAK,EAAI2+C,GAAKC,GACtCC,GAAK7+C,EAAIyB,EAAI,EAAI6kB,OAAOtmB,EAAI,GAAK,EAAI4+C,GAAKD,GAC9C,OAAOF,OAAOv9C,EAAIlB,EAAIyB,GAAKA,EAAGi9C,GAAIC,GAAIC,GAAIC,OIhB/BiB,YDsDaJ,UEpDb,SAASp5B,QACtB,IAAI7kB,EAAI6kB,OAAO1c,OACf,OAAO,SAAS1I,GACd,IAAIlB,EAAI+L,KAAKoN,QAAQjY,GAAK,GAAK,IAAMA,EAAIA,GAAKO,GAC1Ci9C,GAAKp4B,QAAQtmB,EAAIyB,EAAI,GAAKA,GAC1Bk9C,GAAKr4B,OAAOtmB,EAAIyB,GAChBm9C,GAAKt4B,QAAQtmB,EAAI,GAAKyB,GACtBo9C,GAAKv4B,QAAQtmB,EAAI,GAAKyB,GAC1B,OAAOg9C,OAAOv9C,EAAIlB,EAAIyB,GAAKA,EAAGi9C,GAAIC,GAAIC,GAAIC,ODV/B,SAASz8C,EAAGkJ,GACzB,OAAeA,GAARlJ,GAAKA,EAAW,SAASlB,GAC9B,OAAOkB,EAAIkJ,EAAIpK,wREAJ,ICAX6+C,IAAM,8CACNC,IAAM,IAAI33C,OAAO03C,IAAIvzB,OAAQ,KAclB,IAAAyzB,WAAA,SAAS79C,EAAGkJ,GACzB,IACI40C,GACAC,GACAC,GAHAC,GAAKN,IAAIO,UAAYN,IAAIM,UAAY,EAIrCtgD,GAAK,EACLiC,KACAs+C,KAMJ,IAHAn+C,GAAQ,GAAIkJ,GAAQ,IAGZ40C,GAAKH,IAAI3E,KAAKh5C,MACd+9C,GAAKH,IAAI5E,KAAK9vC,MACf80C,GAAKD,GAAGh2C,OAASk2C,KACpBD,GAAK90C,EAAE4X,MAAMm9B,GAAID,IACbn+C,EAAEjC,GAAIiC,EAAEjC,IAAMogD,GACbn+C,IAAIjC,GAAKogD,KAEXF,GAAKA,GAAG,OAASC,GAAKA,GAAG,IACxBl+C,EAAEjC,GAAIiC,EAAEjC,IAAMmgD,GACbl+C,IAAIjC,GAAKmgD,IAEdl+C,IAAIjC,GAAK,KACTugD,EAAEnyC,MAAMpO,EAAGA,EAAG8kC,EAAG+H,WAAOqT,GAAIC,OAE9BE,GAAKL,IAAIM,UAYX,OARID,GAAK/0C,EAAE1B,SACTw2C,GAAK90C,EAAE4X,MAAMm9B,IACTp+C,EAAEjC,GAAIiC,EAAEjC,IAAMogD,GACbn+C,IAAIjC,GAAKogD,IAKTn+C,EAAE2H,OAAS,EAAK22C,EAAE,GA7C3B,SAASC,IAAIl1C,GACX,OAAO,SAASpK,GACd,OAAOoK,EAAEpK,GAAK,IA4CVs/C,CAAID,EAAE,GAAGzb,GApDjB,SAAS2b,YAAKn1C,GACZ,OAAO,WACL,OAAOA,GAmDHm1C,CAAKn1C,IACJA,EAAIi1C,EAAE32C,OAAQ,SAAS1I,GACtB,IAAK,IAAWT,EAAPT,EAAI,EAAMA,EAAIsL,IAAKtL,EAAGiC,GAAGxB,EAAI8/C,EAAEvgD,IAAIA,GAAKS,EAAEqkC,EAAE5jC,GACrD,OAAOe,EAAEgJ,KAAK,oSCpDT,ICPXy1C,QACAC,QACAC,QACAC,QDIWC,UAAA,SAAS1+C,EAAGkJ,GACzB,IAAkBjL,EAAda,EAAI6/C,aAAOz1C,GACf,OAAY,MAALA,GAAmB,YAANpK,EAAkBi+C,aAAS7zC,IAClC,WAANpK,EAAiB2rC,WACZ,WAAN3rC,GAAmBb,EAAI86C,YAAM7vC,KAAOA,EAAIjL,EAAGs7C,SAAOqF,WAClD11C,aAAa6vC,YAAQQ,QACrBrwC,aAAaxD,KEfN,SAAS1F,EAAGkJ,GACzB,IAAIhL,EAAI,IAAIwH,KACZ,OAAewD,GAARlJ,GAAKA,EAAW,SAASlB,GAC9B,OAAOZ,EAAE2gD,QAAQ7+C,EAAIkJ,EAAIpK,GAAIZ,IFazByQ,MAAMuB,QAAQhH,GGdP,SAASlJ,EAAGkJ,GACzB,IAIItL,EAJAkhD,GAAK51C,EAAIA,EAAE1B,OAAS,EACpBu3C,GAAK/+C,EAAI2J,KAAKkQ,IAAIilC,GAAI9+C,EAAEwH,QAAU,EAClCk7B,EAAI,IAAI/zB,MAAMowC,IACd9gD,EAAI,IAAI0Q,MAAMmwC,IAGlB,IAAKlhD,EAAI,EAAGA,EAAImhD,KAAMnhD,EAAG8kC,EAAE9kC,GAAKiB,UAAMmB,EAAEpC,GAAIsL,EAAEtL,IAC9C,KAAOA,EAAIkhD,KAAMlhD,EAAGK,EAAEL,GAAKsL,EAAEtL,GAE7B,OAAO,SAASkB,GACd,IAAKlB,EAAI,EAAGA,EAAImhD,KAAMnhD,EAAGK,EAAEL,GAAK8kC,EAAE9kC,GAAGkB,GACrC,OAAOb,IHGkB,mBAAdiL,EAAEqb,SAAgD,mBAAfrb,EAAEd,UAA2BsR,MAAMxQ,GFftE,SAASlJ,EAAGkJ,GACzB,IAEI+jC,EAFArvC,KACAK,KAMJ,IAAKgvC,KAHK,OAANjtC,GAA2B,WAAbD,QAAOC,KAAgBA,MAC/B,OAANkJ,GAA2B,WAAbnJ,QAAOmJ,KAAgBA,MAE/BA,EACJ+jC,KAAKjtC,EACPpC,EAAEqvC,GAAKpuC,UAAMmB,EAAEitC,GAAI/jC,EAAE+jC,IAErBhvC,EAAEgvC,GAAK/jC,EAAE+jC,GAIb,OAAO,SAASnuC,GACd,IAAKmuC,KAAKrvC,EAAGK,EAAEgvC,GAAKrvC,EAAEqvC,GAAGnuC,GACzB,OAAOb,IEFHwsC,YAAQzqC,EAAGkJ,IIlBJ81C,UAAA,SAASh/C,EAAGkJ,GACzB,OAAeA,GAARlJ,GAAKA,EAAW,SAASlB,GAC9B,OAAO6K,KAAK0G,MAAMrQ,EAAIkJ,EAAIpK,KCF1BmgD,QAAU,IAAMt1C,KAAKywC,GAEd/jB,oBACT6oB,WAAY,EACZC,WAAY,EACZC,OAAQ,EACRC,MAAO,EACPC,OAAQ,EACRC,OAAQ,GAGKC,UAAA,SAASx/C,EAAGkJ,EAAGjL,EAAGC,EAAG4B,EAAGygB,GACrC,IAAI++B,OAAQC,OAAQF,MAKpB,OAJIC,OAAS31C,KAAKoQ,KAAK/Z,EAAIA,EAAIkJ,EAAIA,MAAIlJ,GAAKs/C,OAAQp2C,GAAKo2C,SACrDD,MAAQr/C,EAAI/B,EAAIiL,EAAIhL,KAAGD,GAAK+B,EAAIq/C,MAAOnhD,GAAKgL,EAAIm2C,QAChDE,OAAS51C,KAAKoQ,KAAK9b,EAAIA,EAAIC,EAAIA,MAAID,GAAKshD,OAAQrhD,GAAKqhD,OAAQF,OAASE,QACtEv/C,EAAI9B,EAAIgL,EAAIjL,IAAG+B,GAAKA,EAAGkJ,GAAKA,EAAGm2C,OAASA,MAAOC,QAAUA,SAE3DJ,WAAYp/C,EACZq/C,WAAY5+B,EACZ6+B,OAAQz1C,KAAK8xC,MAAMvyC,EAAGlJ,GAAKi/C,QAC3BI,MAAO11C,KAAK81C,KAAKJ,OAASJ,QAC1BK,OAAQA,OACRC,OAAQA,SCpBZ,SAASG,qBAAqBnzC,MAAOozC,QAASC,QAASC,UAErD,SAAStyB,IAAI1tB,GACX,OAAOA,EAAE2H,OAAS3H,EAAE0tB,MAAQ,IAAM,GAsCpC,OAAO,SAASvtB,EAAGkJ,GACjB,IAAIrJ,KACAs+C,KAOJ,OANAn+C,EAAIuM,MAAMvM,GAAIkJ,EAAIqD,MAAMrD,GAtC1B,SAAS42C,UAAUC,GAAIC,GAAIC,GAAIC,GAAIrgD,EAAGs+C,GACpC,GAAI4B,KAAOE,IAAMD,KAAOE,GAAI,CAC1B,IAAItiD,EAAIiC,EAAEmM,KAAK,aAAc,KAAM2zC,QAAS,KAAMC,SAClDzB,EAAEnyC,MAAMpO,EAAGA,EAAI,EAAG8kC,EAAG+H,WAAOsV,GAAIE,MAAOriD,EAAGA,EAAI,EAAG8kC,EAAG+H,WAAOuV,GAAIE,WACtDD,IAAMC,KACfrgD,EAAEmM,KAAK,aAAei0C,GAAKN,QAAUO,GAAKN,SAkC5CE,CAAU9/C,EAAEk/C,WAAYl/C,EAAEm/C,WAAYj2C,EAAEg2C,WAAYh2C,EAAEi2C,WAAYt/C,EAAGs+C,GA9BvE,SAASiB,OAAOp/C,EAAGkJ,EAAGrJ,EAAGs+C,GACnBn+C,IAAMkJ,GACJlJ,EAAIkJ,EAAI,IAAKA,GAAK,IAAcA,EAAIlJ,EAAI,MAAKA,GAAK,KACtDm+C,EAAEnyC,MAAMpO,EAAGiC,EAAEmM,KAAKuhB,IAAI1tB,GAAK,UAAW,KAAMggD,UAAY,EAAGnd,EAAG+H,WAAOzqC,EAAGkJ,MAC/DA,GACTrJ,EAAEmM,KAAKuhB,IAAI1tB,GAAK,UAAYqJ,EAAI22C,UA0BlCT,CAAOp/C,EAAEo/C,OAAQl2C,EAAEk2C,OAAQv/C,EAAGs+C,GAtBhC,SAASkB,MAAMr/C,EAAGkJ,EAAGrJ,EAAGs+C,GAClBn+C,IAAMkJ,EACRi1C,EAAEnyC,MAAMpO,EAAGiC,EAAEmM,KAAKuhB,IAAI1tB,GAAK,SAAU,KAAMggD,UAAY,EAAGnd,EAAG+H,WAAOzqC,EAAGkJ,KAC9DA,GACTrJ,EAAEmM,KAAKuhB,IAAI1tB,GAAK,SAAWqJ,EAAI22C,UAmBjCR,CAAMr/C,EAAEq/C,MAAOn2C,EAAEm2C,MAAOx/C,EAAGs+C,GAf7B,SAAS7Q,MAAMyS,GAAIC,GAAIC,GAAIC,GAAIrgD,EAAGs+C,GAChC,GAAI4B,KAAOE,IAAMD,KAAOE,GAAI,CAC1B,IAAItiD,EAAIiC,EAAEmM,KAAKuhB,IAAI1tB,GAAK,SAAU,KAAM,IAAK,KAAM,KACnDs+C,EAAEnyC,MAAMpO,EAAGA,EAAI,EAAG8kC,EAAG+H,WAAOsV,GAAIE,MAAOriD,EAAGA,EAAI,EAAG8kC,EAAG+H,WAAOuV,GAAIE,WAC/C,IAAPD,IAAmB,IAAPC,IACrBrgD,EAAEmM,KAAKuhB,IAAI1tB,GAAK,SAAWogD,GAAK,IAAMC,GAAK,KAW7C5S,CAAMttC,EAAEs/C,OAAQt/C,EAAEu/C,OAAQr2C,EAAEo2C,OAAQp2C,EAAEq2C,OAAQ1/C,EAAGs+C,GACjDn+C,EAAIkJ,EAAI,KACD,SAASpK,GAEd,IADA,IAA0BT,EAAtBT,GAAK,EAAGyB,EAAI8+C,EAAE32C,SACT5J,EAAIyB,GAAGQ,GAAGxB,EAAI8/C,EAAEvgD,IAAIA,GAAKS,EAAEqkC,EAAE5jC,GACtC,OAAOe,EAAEgJ,KAAK,MAKb,IAAIs3C,wBAA0BT,qBLtD9B,SAASU,SAASvhD,OACvB,MAAc,SAAVA,MAAyBw3B,oBACxBioB,UAASA,QAAUzhB,SAASmJ,cAAc,OAAQuY,QAAU1hB,SAASwjB,gBAAiB7B,QAAU3hB,SAASyjB,aAC9GhC,QAAQhgB,MAAMiiB,UAAY1hD,MAC1BA,MAAQ2/C,QAAQgC,iBAAiBjC,QAAQlW,YAAYiW,SAAU,MAAMmC,iBAAiB,aACtFlC,QAAQ1yB,YAAYyyB,SACpBz/C,MAAQA,MAAMiiB,MAAM,GAAI,GAAG3O,MAAM,KAC1BqtC,WAAW3gD,MAAM,IAAKA,MAAM,IAAKA,MAAM,IAAKA,MAAM,IAAKA,MAAM,IAAKA,MAAM,MK+Cb,OAAQ,MAAO,QACxE6hD,wBAA0BhB,qBL7C9B,SAASiB,SAAS9hD,OACvB,OAAa,MAATA,MAAsBw3B,oBACrBooB,UAASA,QAAU5hB,SAASuM,gBAAgB,6BAA8B,MAC/EqV,QAAQnW,aAAa,YAAazpC,QAC5BA,MAAQ4/C,QAAQ8B,UAAUK,QAAQC,gBACxChiD,MAAQA,MAAMiiD,OACPtB,UAAU3gD,MAAMmB,EAAGnB,MAAMqK,EAAGrK,MAAMZ,EAAGY,MAAMX,EAAGW,MAAMiB,EAAGjB,MAAM0hB,IAFL8V,qBKyCG,KAAM,IAAK,KC9DrE1sB,KAAKo3C,MCGf,SAASpH,QAAImD,KACX,OAAO,SAASx5C,MAAOgP,KACrB,IAAI8d,EAAI0sB,KAAKx5C,MAAQ09C,IAAS19C,QAAQ8sB,GAAI9d,IAAM0uC,IAAS1uC,MAAM8d,GAC3DvwB,EAAIk5C,QAAMz1C,MAAMzD,EAAGyS,IAAIzS,GACvBhC,EAAIk7C,QAAMz1C,MAAMzF,EAAGyU,IAAIzU,GACvB27C,QAAUT,QAAMz1C,MAAMk2C,QAASlnC,IAAIknC,SACvC,OAAO,SAAS16C,GAKd,OAJAwE,MAAM8sB,EAAIA,EAAEtxB,GACZwE,MAAMzD,EAAIA,EAAEf,GACZwE,MAAMzF,EAAIA,EAAEiB,GACZwE,MAAMk2C,QAAUA,QAAQ16C,GACjBwE,MAAQ,KAKNq2C,QAAImD,WAAJnD,IACJsH,QAAUtH,QAAIZ,SCjBzB,SAAS2C,QAAIoB,KACX,OAAO,SAASx5C,MAAOgP,KACrB,IAAI8d,EAAI0sB,KAAKx5C,MAAQ49C,IAAS59C,QAAQ8sB,GAAI9d,IAAM4uC,IAAS5uC,MAAM8d,GAC3DnyB,EAAI86C,QAAMz1C,MAAMrF,EAAGqU,IAAIrU,GACvBJ,EAAIk7C,QAAMz1C,MAAMzF,EAAGyU,IAAIzU,GACvB27C,QAAUT,QAAMz1C,MAAMk2C,QAASlnC,IAAIknC,SACvC,OAAO,SAAS16C,GAKd,OAJAwE,MAAM8sB,EAAIA,EAAEtxB,GACZwE,MAAMrF,EAAIA,EAAEa,GACZwE,MAAMzF,EAAIA,EAAEiB,GACZwE,MAAMk2C,QAAUA,QAAQ16C,GACjBwE,MAAQ,KAKNo4C,QAAIoB,WACEpB,QAAI3C,SCjBzB,SAASkD,wBAAUa,KACjB,OAAQ,SAASqE,eAAe73C,GAG9B,SAAS2yC,UAAU34C,MAAOgP,KACxB,IAAI8d,EAAI0sB,KAAKx5C,MAAQ89C,oBAAe99C,QAAQ8sB,GAAI9d,IAAM8uC,oBAAe9uC,MAAM8d,GACvEvwB,EAAIk5C,QAAMz1C,MAAMzD,EAAGyS,IAAIzS,GACvBhC,EAAIk7C,QAAMz1C,MAAMzF,EAAGyU,IAAIzU,GACvB27C,QAAUT,QAAMz1C,MAAMk2C,QAASlnC,IAAIknC,SACvC,OAAO,SAAS16C,GAKd,OAJAwE,MAAM8sB,EAAIA,EAAEtxB,GACZwE,MAAMzD,EAAIA,EAAEf,GACZwE,MAAMzF,EAAIA,EAAE8L,KAAKsQ,IAAInb,EAAGwK,IACxBhG,MAAMk2C,QAAUA,QAAQ16C,GACjBwE,MAAQ,IAMnB,OAlBAgG,GAAKA,EAgBL2yC,UAAUe,MAAQmE,eAEXlF,UAnBD,CAoBL,GAGUA,wBAAUa,WAAVb,IACJoF,cAAgBpF,wBAAUlD,SC5BtB,SAASuI,oBAAUC,YAAar9B,QAE7C,IADA,IAAItmB,EAAI,EAAGyB,EAAI6kB,OAAO1c,OAAS,EAAGgH,EAAI0V,OAAO,GAAIxD,EAAI,IAAI/R,MAAMtP,EAAI,EAAI,EAAIA,GACpEzB,EAAIyB,GAAGqhB,EAAE9iB,GAAK2jD,YAAY/yC,EAAGA,EAAI0V,SAAStmB,IACjD,OAAO,SAASkB,GACd,IAAIlB,EAAI+L,KAAKmQ,IAAI,EAAGnQ,KAAKkQ,IAAIxa,EAAI,EAAGsK,KAAKoN,MAAMjY,GAAKO,KACpD,OAAOqhB,EAAE9iB,GAAGkB,EAAIlB,ICLL,ICAA4jD,sBAAA,SAAS9e,GACtB,OAAO,WACL,OAAOA,ICFI+e,oBAAA,SAAS/e,GACtB,OAAQA,GCKNjlB,iBAAQ,EAAG,GAER,SAASikC,oBAAoB1hD,EAAGkJ,GACrC,OAAQA,GAAMlJ,GAAKA,GACb,SAAS0iC,GAAK,OAAQA,EAAI1iC,GAAKkJ,GAC/B6zC,sBAAS7zC,GAiBjB,SAASy4C,MAAMnlC,OAAQnV,MAAOu6C,cAAeC,eAC3C,IAAIC,GAAKtlC,OAAO,GAAIiyB,GAAKjyB,OAAO,GAAI0xB,GAAK7mC,MAAM,GAAI8mC,GAAK9mC,MAAM,GAG9D,OAFIonC,GAAKqT,IAAIA,GAAKF,cAAcnT,GAAIqT,IAAK5T,GAAK2T,cAAc1T,GAAID,MAC3D4T,GAAKF,cAAcE,GAAIrT,IAAKP,GAAK2T,cAAc3T,GAAIC,KACjD,SAASzL,GAAK,OAAOwL,GAAG4T,GAAGpf,KAGpC,SAASqf,QAAQvlC,OAAQnV,MAAOu6C,cAAeC,eAC7C,IAAIhhC,EAAIlX,KAAKkQ,IAAI2C,OAAOhV,OAAQH,MAAMG,QAAU,EAC5CtJ,EAAI,IAAIyQ,MAAMkS,GACdniB,EAAI,IAAIiQ,MAAMkS,GACdjjB,GAAK,EAQT,IALI4e,OAAOqE,GAAKrE,OAAO,KACrBA,OAASA,OAAOsE,QAAQmJ,UACxB5iB,MAAQA,MAAMyZ,QAAQmJ,aAGfrsB,EAAIijB,GACX3iB,EAAEN,GAAKgkD,cAAcplC,OAAO5e,GAAI4e,OAAO5e,EAAI,IAC3Cc,EAAEd,GAAKikD,cAAcx6C,MAAMzJ,GAAIyJ,MAAMzJ,EAAI,IAG3C,OAAO,SAAS8kC,GACd,IAAI9kC,EAAIokD,OAAOxlC,OAAQkmB,EAAG,EAAG7hB,GAAK,EAClC,OAAOniB,EAAEd,GAAGM,EAAEN,GAAG8kC,KAId,SAAS6K,KAAKnjB,OAAQ63B,QAC3B,OAAOA,OACFzlC,OAAO4N,OAAO5N,UACdnV,MAAM+iB,OAAO/iB,SACbk6C,YAAYn3B,OAAOm3B,eACnBW,MAAM93B,OAAO83B,SAKL,SAASC,WAAWP,cAAeC,eAChD,IAIIP,UACAc,OACAC,MANA7lC,OAASiB,gBACTpW,MAAQoW,gBACR8jC,YAAce,UACdJ,OAAQ,EAKZ,SAASpU,UAGP,OAFAwT,UAAY33C,KAAKkQ,IAAI2C,OAAOhV,OAAQH,MAAMG,QAAU,EAAIu6C,QAAUJ,MAClES,OAASC,MAAQ,KACV/U,MAGT,SAASA,MAAM5K,GACb,OAAQ0f,SAAWA,OAASd,UAAU9kC,OAAQnV,MAAO66C,MAtEzD,SAASK,mBAAmBX,eAC1B,OAAO,SAAS5hD,EAAGkJ,GACjB,IAAIhL,EAAI0jD,cAAc5hD,GAAKA,EAAGkJ,GAAKA,GACnC,OAAO,SAASw5B,GAAK,OAAOA,GAAK1iC,EAAI,EAAI0iC,GAAKx5B,EAAI,EAAIhL,EAAEwkC,KAmEK6f,CAAmBX,eAAiBA,cAAeL,gBAAgB7e,GA2BlI,OAxBA4K,MAAMgB,OAAS,SAAShlC,GACtB,OAAQ+4C,QAAUA,MAAQf,UAAUj6C,MAAOmV,OAAQklC,oBAAqBQ,MAnE5E,SAASM,mBAAmBX,eAC1B,OAAO,SAAS7hD,EAAGkJ,GACjB,IAAIxK,EAAImjD,cAAc7hD,GAAKA,EAAGkJ,GAAKA,GACnC,OAAO,SAASpK,GAAK,OAAOA,GAAK,EAAIkB,EAAIlB,GAAK,EAAIoK,EAAIxK,EAAEI,KAgEwB0jD,CAAmBX,eAAiBA,kBAAkBv4C,IAGxIgkC,MAAM9wB,OAAS,SAASoK,GACtB,OAAO1b,UAAU1D,QAAUgV,OAASzO,cAAIhQ,KAAK6oB,EAAG6jB,qBAASqD,WAAatxB,OAAOsE,SAG/EwsB,MAAMjmC,MAAQ,SAASuf,GACrB,OAAO1b,UAAU1D,QAAUH,MAAQyZ,YAAM/iB,KAAK6oB,GAAIknB,WAAazmC,MAAMyZ,SAGvEwsB,MAAMU,WAAa,SAASpnB,GAC1B,OAAOvf,MAAQyZ,YAAM/iB,KAAK6oB,GAAI26B,YAAckB,UAAkB3U,WAGhER,MAAM4U,MAAQ,SAASt7B,GACrB,OAAO1b,UAAU1D,QAAU06C,QAAUt7B,EAAGknB,WAAaoU,OAGvD5U,MAAMiU,YAAc,SAAS36B,GAC3B,OAAO1b,UAAU1D,QAAU+5C,YAAc36B,EAAGknB,WAAayT,aAGpDzT,UC5GM,IAAA4U,cAAA,SAAShgB,EAAG9iC,GACzB,IAAKhC,GAAK8kC,EAAI9iC,EAAI8iC,EAAEigB,cAAc/iD,EAAI,GAAK8iC,EAAEigB,iBAAiB52C,QAAQ,MAAQ,EAAG,OAAO,KACxF,IAAInO,EAAGglD,YAAclgB,EAAE5hB,MAAM,EAAGljB,GAIhC,OACEglD,YAAYp7C,OAAS,EAAIo7C,YAAY,GAAKA,YAAY9hC,MAAM,GAAK8hC,aAChElgB,EAAE5hB,MAAMljB,EAAI,KCTFilD,aAAA,SAASngB,GACtB,OAAOA,EAAIggB,cAAc/4C,KAAK8nB,IAAIiR,KAASA,EAAE,GAAKuH,KCFhD6Y,GAAK,2EAEM,SAASC,gBAAgBC,WACtC,OAAO,IAAIC,gBAAgBD,WAK7B,SAASC,gBAAgBD,WACvB,KAAM70C,MAAQ20C,GAAG9J,KAAKgK,YAAa,MAAM,IAAI3tC,MAAM,mBAAqB2tC,WACxE,IAAI70C,MACJrI,KAAKo9C,KAAO/0C,MAAM,IAAM,IACxBrI,KAAK+nC,MAAQ1/B,MAAM,IAAM,IACzBrI,KAAKq9C,KAAOh1C,MAAM,IAAM,IACxBrI,KAAKs9C,OAASj1C,MAAM,IAAM,GAC1BrI,KAAKu4C,OAASlwC,MAAM,GACpBrI,KAAKs6B,MAAQjyB,MAAM,KAAOA,MAAM,GAChCrI,KAAKu9C,QAAUl1C,MAAM,GACrBrI,KAAKw9C,UAAYn1C,MAAM,KAAOA,MAAM,GAAG2S,MAAM,GAC7Chb,KAAKqY,OAAShQ,MAAM,GACpBrI,KAAKpF,KAAOyN,MAAM,KAAO,GAd3B40C,gBAAgBrjD,UAAYujD,gBAAgBvjD,UAiB5CujD,gBAAgBvjD,UAAU0I,SAAW,WACnC,OAAOtC,KAAKo9C,KACNp9C,KAAK+nC,MACL/nC,KAAKq9C,KACLr9C,KAAKs9C,QACJt9C,KAAKu4C,KAAO,IAAM,KACJ,MAAdv4C,KAAKs6B,MAAgB,GAAKz2B,KAAKmQ,IAAI,EAAgB,EAAbhU,KAAKs6B,SAC3Ct6B,KAAKu9C,MAAQ,IAAM,KACD,MAAlBv9C,KAAKw9C,UAAoB,GAAK,IAAM35C,KAAKmQ,IAAI,EAAoB,EAAjBhU,KAAKw9C,aACrDx9C,KAAKqY,KAAO,IAAM,IACnBrY,KAAKpF,MCjCE,ICCJ6iD,eCAPC,qBACO39C,qBACA49C,2BFHIC,WAAA,SAAS7jD,GACtB8jD,IAAK,IAAK,IAAkCC,GAA9BvkD,EAAIQ,EAAE2H,OAAQ5J,EAAI,EAAGguC,IAAM,EAAOhuC,EAAIyB,IAAKzB,EACvD,OAAQiC,EAAEjC,IACR,IAAK,IAAKguC,GAAKgY,GAAKhmD,EAAG,MACvB,IAAK,IAAgB,IAAPguC,KAAUA,GAAKhuC,GAAGgmD,GAAKhmD,EAAG,MACxC,QAAS,GAAIguC,GAAK,EAAG,CAAE,KAAM/rC,EAAEjC,GAAI,MAAM+lD,IAAK/X,GAAK,GAGvD,OAAOA,GAAK,EAAI/rC,EAAEihB,MAAM,EAAG8qB,IAAM/rC,EAAEihB,MAAM8iC,GAAK,GAAK/jD,GGPtCgkD,cAAA,SAASnhB,EAAG9iC,GACzB,IAAI1B,EAAIwkD,cAAchgB,EAAG9iC,GACzB,IAAK1B,EAAG,OAAOwkC,EAAI,GACnB,IAAIkgB,YAAc1kD,EAAE,GAChB4lD,SAAW5lD,EAAE,GACjB,OAAO4lD,SAAW,EAAI,KAAO,IAAIn1C,OAAOm1C,UAAUj7C,KAAK,KAAO+5C,YACxDA,YAAYp7C,OAASs8C,SAAW,EAAIlB,YAAY9hC,MAAM,EAAGgjC,SAAW,GAAK,IAAMlB,YAAY9hC,MAAMgjC,SAAW,GAC5GlB,YAAc,IAAIj0C,MAAMm1C,SAAWlB,YAAYp7C,OAAS,GAAGqB,KAAK,MCNzDk7C,aACbC,IAAK,SAAAp9B,EAAS8b,EAAG9iC,GAAK,OAAY,IAAJ8iC,GAASuhB,QAAQrkD,IAC/CsJ,EAAK,SAAAA,EAASw5B,GAAK,OAAO/4B,KAAK0G,MAAMqyB,GAAGt6B,SAAS,IACjDnK,EAAK,SAAAA,EAASykC,GAAK,OAAOA,EAAI,IAC9BxkC,EAAK,SAAAA,EAASwkC,GAAK,OAAO/4B,KAAK0G,MAAMqyB,GAAGt6B,SAAS,KACjDtI,EAAK,SAAAA,EAAS4iC,EAAG9iC,GAAK,OAAO8iC,EAAEigB,cAAc/iD,IAC7C2gB,EAAK,SAAAA,EAASmiB,EAAG9iC,GAAK,OAAO8iC,EAAEuhB,QAAQrkD,IACvCy5C,EAAK,SAAAA,EAAS3W,EAAG9iC,GAAK,OAAO8iC,EAAEwhB,YAAYtkD,IAC3CvB,EAAK,SAAAA,EAASqkC,GAAK,OAAO/4B,KAAK0G,MAAMqyB,GAAGt6B,SAAS,IACjDxI,EAAK,SAAAA,EAAS8iC,EAAG9iC,IAAK,OAAOikD,cAAkB,IAAJnhB,EAAS9iC,KACpDlB,EAAKmlD,cACLhkD,EHVa,SAAS6iC,EAAG9iC,GACzB,IAAI1B,EAAIwkD,cAAchgB,EAAG9iC,GACzB,IAAK1B,EAAG,OAAOwkC,EAAI,GACnB,IAAIkgB,YAAc1kD,EAAE,GAChB4lD,SAAW5lD,EAAE,GACbN,EAAIkmD,UAAYP,eAAuE,EAAtD55C,KAAKmQ,KAAK,EAAGnQ,KAAKkQ,IAAI,EAAGlQ,KAAKoN,MAAM+sC,SAAW,MAAY,EAC5FzkD,EAAIujD,YAAYp7C,OACpB,OAAO5J,IAAMyB,EAAIujD,YACXhlD,EAAIyB,EAAIujD,YAAc,IAAIj0C,MAAM/Q,EAAIyB,EAAI,GAAGwJ,KAAK,KAChDjL,EAAI,EAAIglD,YAAY9hC,MAAM,EAAGljB,GAAK,IAAMglD,YAAY9hC,MAAMljB,GAC1D,KAAO,IAAI+Q,MAAM,EAAI/Q,GAAGiL,KAAK,KAAO65C,cAAchgB,EAAG/4B,KAAKmQ,IAAI,EAAGla,EAAIhC,EAAI,IAAI,IGCnFumD,EAAK,SAAAA,EAASzhB,GAAK,OAAO/4B,KAAK0G,MAAMqyB,GAAGt6B,SAAS,IAAIg8C,eACrD1hB,EAAK,SAAAA,EAASA,IAAK,OAAO/4B,KAAK0G,MAAMqyB,IAAGt6B,SAAS,MChBpCi8C,aAAA,SAAS3hB,GACtB,OAAOA,GCQL4hB,UAAY,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAEhEC,WAAA,SAASf,QACtB,IAAIgB,MAAQhB,OAAOiB,UAAYjB,OAAOkB,UCZzB,SAASD,SAAUC,WAChC,OAAO,SAAS7lD,MAAOuhC,OAOrB,IANA,IAAIxiC,EAAIiB,MAAM2I,OACV1I,KACA+hB,EAAI,EACJw4B,EAAIoL,SAAS,GACbj9C,OAAS,EAEN5J,EAAI,GAAKy7C,EAAI,IACd7xC,OAAS6xC,EAAI,EAAIjZ,QAAOiZ,EAAI1vC,KAAKmQ,IAAI,EAAGsmB,MAAQ54B,SACpD1I,EAAEkN,KAAKnN,MAAM2K,UAAU5L,GAAKy7C,EAAGz7C,EAAIy7C,OAC9B7xC,QAAU6xC,EAAI,GAAKjZ,SACxBiZ,EAAIoL,SAAS5jC,GAAKA,EAAI,GAAK4jC,SAASj9C,QAGtC,OAAO1I,EAAEmrB,UAAUphB,KAAK67C,YDHwBC,CAAYnB,OAAOiB,SAAUjB,OAAOkB,WAAaruB,aAC/FuuB,SAAWpB,OAAOoB,SAClBC,QAAUrB,OAAOqB,QACjBC,SAAWtB,OAAOsB,SEfT,SAASA,UACtB,OAAO,SAASjmD,OACd,OAAOA,MAAMuH,QAAQ,SAAU,SAASxI,GACtC,OAAOknD,UAAUlnD,MFYYmnD,CAAevB,OAAOsB,UAAYzuB,aAC/D2uB,QAAUxB,OAAOwB,SAAW,IAEhC,SAASC,UAAUjC,WAGjB,IAAIE,MAFJF,UAAYD,gBAAgBC,YAEPE,KACjBrV,MAAQmV,UAAUnV,MAClBsV,KAAOH,UAAUG,KACjBC,OAASJ,UAAUI,OACnB/E,KAAO2E,UAAU3E,KACjBje,MAAQ4iB,UAAU5iB,MAClBijB,MAAQL,UAAUK,MAClBC,UAAYN,UAAUM,UACtBnlC,KAAO6kC,UAAU7kC,KACjBzd,KAAOsiD,UAAUtiD,KAGR,MAATA,MAAc2iD,OAAQ,EAAM3iD,KAAO,KAG7BqjD,YAAYrjD,QAAoB,MAAb4iD,YAAsBA,UAAY,IAAKnlC,MAAO,EAAMzd,KAAO,MAGpF29C,MAAkB,MAAT6E,MAA0B,MAAVrV,SAAgBwQ,MAAO,EAAM6E,KAAO,IAAKrV,MAAQ,KAI9E,IAAIqX,OAAoB,MAAX9B,OAAiBwB,SAAS,GAAgB,MAAXxB,QAAkB,SAASlgD,KAAKxC,MAAQ,IAAMA,KAAK6G,cAAgB,GAC3G49C,OAAoB,MAAX/B,OAAiBwB,SAAS,GAAK,OAAO1hD,KAAKxC,MAAQskD,QAAU,GAKtEI,WAAarB,YAAYrjD,MACzB2kD,YAAc,aAAaniD,KAAKxC,MAUpC,SAASmF,OAAOhH,OACd,IAEIjB,EAAGyB,EAAGpB,EAFNqnD,YAAcJ,OACdK,YAAcJ,OAGlB,GAAa,MAATzkD,KACF6kD,YAAcH,WAAWvmD,OAAS0mD,YAClC1mD,MAAQ,OACH,CAIL,IAAI2mD,eAHJ3mD,OAASA,OAGmB,EAe5B,GAdAA,MAAQumD,WAAWz7C,KAAK8nB,IAAI5yB,OAAQykD,WAGhCnlC,OAAMtf,MAAQ6kD,WAAW7kD,QAGzB2mD,eAA4B,IAAV3mD,QAAa2mD,eAAgB,GAGnDF,aAAeE,cAA0B,MAATrC,KAAeA,KAAO,IAAgB,MAATA,MAAyB,MAATA,KAAe,GAAKA,MAAQmC,YACzGC,aAAwB,MAAT7kD,KAAe4jD,SAAS,EAAIf,eAAiB,GAAK,IAAMgC,aAAeC,eAA0B,MAATrC,KAAe,IAAM,IAIxHkC,YAEF,IADAznD,GAAK,EAAGyB,EAAIR,MAAM2I,SACT5J,EAAIyB,GACX,GAA6B,IAAzBpB,EAAIY,MAAMwhB,WAAWziB,KAAcK,EAAI,GAAI,CAC7CsnD,aAAqB,KAANtnD,EAAW4mD,QAAUhmD,MAAMiiB,MAAMljB,EAAI,GAAKiB,MAAMiiB,MAAMljB,IAAM2nD,YAC3E1mD,MAAQA,MAAMiiB,MAAM,EAAGljB,GACvB,OAOJylD,QAAUhF,OAAMx/C,MAAQ2lD,MAAM3lD,MAAO4mD,MAGzC,IAAIj+C,OAAS89C,YAAY99C,OAAS3I,MAAM2I,OAAS+9C,YAAY/9C,OACzD2/B,QAAU3/B,OAAS44B,MAAQ,IAAIzxB,MAAMyxB,MAAQ54B,OAAS,GAAGqB,KAAKq6C,MAAQ,GAM1E,OAHIG,OAAShF,OAAMx/C,MAAQ2lD,MAAMrd,QAAUtoC,MAAOsoC,QAAQ3/B,OAAS44B,MAAQmlB,YAAY/9C,OAASi+C,KAAWte,QAAU,IAG7G0G,OACN,IAAK,IAAKhvC,MAAQymD,YAAczmD,MAAQ0mD,YAAcpe,QAAS,MAC/D,IAAK,IAAKtoC,MAAQymD,YAAcne,QAAUtoC,MAAQ0mD,YAAa,MAC/D,IAAK,IAAK1mD,MAAQsoC,QAAQrmB,MAAM,EAAGtZ,OAAS2/B,QAAQ3/B,QAAU,GAAK89C,YAAczmD,MAAQ0mD,YAAcpe,QAAQrmB,MAAMtZ,QAAS,MAC9H,QAAS3I,MAAQsoC,QAAUme,YAAczmD,MAAQ0mD,YAGnD,OAAOT,SAASjmD,OAOlB,OApEAykD,UAAyB,MAAbA,UAAoB,EAC1B,SAASpgD,KAAKxC,MAAQiJ,KAAKmQ,IAAI,EAAGnQ,KAAKkQ,IAAI,GAAIypC,YAC/C35C,KAAKmQ,IAAI,EAAGnQ,KAAKkQ,IAAI,GAAIypC,YA8D/Bz9C,OAAOuC,SAAW,WAChB,OAAO46C,UAAY,IAGdn9C,OAaT,OACEA,OAAQo/C,UACRxB,aAZF,SAASA,aAAaT,UAAWnkD,OAC/B,IAAI0hB,EAAI0kC,YAAWjC,UAAYD,gBAAgBC,YAAsBtiD,KAAO,IAAKsiD,YAC7EljD,EAAiE,EAA7D6J,KAAKmQ,KAAK,EAAGnQ,KAAKkQ,IAAI,EAAGlQ,KAAKoN,MAAM+sC,aAASjlD,OAAS,KAC1DouC,EAAItjC,KAAKsQ,IAAI,IAAKna,GAClBolD,OAASZ,SAAS,EAAIxkD,EAAI,GAC9B,OAAO,SAASjB,OACd,OAAO0hB,EAAE0sB,EAAIpuC,OAASqmD,YJxHb,SAASQ,cAAc7W,YAIpC,OAHA2U,qBAASmC,WAAa9W,YACtBhpC,qBAAS29C,qBAAO39C,OAChB49C,2BAAeD,qBAAOC,aACfD,qBAXTkC,EACEb,QAAS,IACTH,UAAW,IACXD,UAAW,GACXG,UAAW,IAAK,MORH,ICCAgB,eAAA,SAASppC,OAAQ8V,MAAO0wB,WACrC,IAGIM,UAHAhgD,MAAQkZ,OAAO,GACfouB,KAAOpuB,OAAOA,OAAOhV,OAAS,GAC9BqjC,KAAOU,SAASjoC,MAAOsnC,KAAe,MAATtY,MAAgB,GAAKA,OAGtD,QADA0wB,UAAYD,gBAA6B,MAAbC,UAAoB,KAAOA,YACrCtiD,MAChB,IAAK,IACH,IAAI7B,MAAQ8K,KAAKmQ,IAAInQ,KAAK8nB,IAAInuB,OAAQqG,KAAK8nB,IAAImZ,OAE/C,OAD2B,MAAvBoY,UAAUM,WAAsB5pC,MAAM4pC,UCVjC,SAASzY,KAAMhsC,OAC5B,OAAO8K,KAAKmQ,IAAI,EAAgE,EAA7DnQ,KAAKmQ,KAAK,EAAGnQ,KAAKkQ,IAAI,EAAGlQ,KAAKoN,MAAM+sC,aAASjlD,OAAS,KAAWilD,aAASn6C,KAAK8nB,IAAIoZ,QDS5Cgb,CAAgBhb,KAAMhsC,UAASmkD,UAAUM,UAAYA,WACpGG,2BAAaT,UAAWnkD,OAEjC,IAAK,GACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACwB,MAAvBmkD,UAAUM,WAAsB5pC,MAAM4pC,UElBjC,SAASzY,KAAM/wB,KAE5B,OADA+wB,KAAOlhC,KAAK8nB,IAAIoZ,MAAO/wB,IAAMnQ,KAAK8nB,IAAI3X,KAAO+wB,KACtClhC,KAAKmQ,IAAI,EAAGgqC,aAAShqC,KAAOgqC,aAASjZ,OAAS,EFgBKib,CAAejb,KAAMlhC,KAAKmQ,IAAInQ,KAAK8nB,IAAInuB,OAAQqG,KAAK8nB,IAAImZ,WAAUoY,UAAUM,UAAYA,WAAgC,MAAnBN,UAAUtiD,OACrK,MAEF,IAAK,IACL,IAAK,IACwB,MAAvBsiD,UAAUM,WAAsB5pC,MAAM4pC,UDvBjC,SAASzY,MACtB,OAAOlhC,KAAKmQ,IAAI,GAAIgqC,aAASn6C,KAAK8nB,IAAIoZ,QCsBoBkb,CAAelb,SAAQmY,UAAUM,UAAYA,UAAuC,GAAP,MAAnBN,UAAUtiD,OAI9H,OAAOmF,qBAAOm9C,YGxBT,SAASgD,UAAU1Y,OACxB,IAAI9wB,OAAS8wB,MAAM9wB,OAmDnB,OAjDA8wB,MAAMpC,MAAQ,SAAS5Y,OACrB,IAAIp0B,EAAIse,SACR,OAAO0uB,UAAMhtC,EAAE,GAAIA,EAAEA,EAAEsJ,OAAS,GAAa,MAAT8qB,MAAgB,GAAKA,QAG3Dgb,MAAM2Y,WAAa,SAAS3zB,MAAO0wB,WACjC,OAAOiD,eAAWzpC,SAAU8V,MAAO0wB,YAGrC1V,MAAM4Y,KAAO,SAAS5zB,OACP,MAATA,QAAeA,MAAQ,IAE3B,IAKIuY,KALA3sC,EAAIse,SACJovB,GAAK,EACLgY,GAAK1lD,EAAEsJ,OAAS,EAChBlE,MAAQpF,EAAE0tC,IACVhB,KAAO1sC,EAAE0lD,IA8Bb,OA3BIhZ,KAAOtnC,QACTunC,KAAOvnC,MAAOA,MAAQsnC,KAAMA,KAAOC,KACnCA,KAAOe,GAAIA,GAAKgY,GAAIA,GAAK/Y,OAG3BA,KAAOM,cAAc7nC,MAAOsnC,KAAMtY,QAEvB,EAGTuY,KAAOM,cAFP7nC,MAAQqG,KAAKoN,MAAMzT,MAAQunC,MAAQA,KACnCD,KAAOjhC,KAAK6nB,KAAKoZ,KAAOC,MAAQA,KACEvY,OACzBuY,KAAO,IAGhBA,KAAOM,cAFP7nC,MAAQqG,KAAK6nB,KAAKluB,MAAQunC,MAAQA,KAClCD,KAAOjhC,KAAKoN,MAAM6zB,KAAOC,MAAQA,KACCvY,QAGhCuY,KAAO,GACT3sC,EAAE0tC,IAAMjiC,KAAKoN,MAAMzT,MAAQunC,MAAQA,KACnC3sC,EAAE0lD,IAAMj6C,KAAK6nB,KAAKoZ,KAAOC,MAAQA,KACjCruB,OAAOte,IACE2sC,KAAO,IAChB3sC,EAAE0tC,IAAMjiC,KAAK6nB,KAAKluB,MAAQunC,MAAQA,KAClC3sC,EAAE0lD,IAAMj6C,KAAKoN,MAAM6zB,KAAOC,MAAQA,KAClCruB,OAAOte,IAGFovC,OAGFA,MAGM,SAASuP,gBACtB,IAAIvP,MAAQ6U,WAAWP,oBAAeC,YAMtC,OAJAvU,MAAMC,KAAO,WACX,OAAOA,KAAKD,MAAOuP,kBAGdmJ,UAAU1Y,OC/DJ,SAASjX,oBACtB,IAAI7Z,QAAU,EAAG,GAEjB,SAAS8wB,MAAM5K,GACb,OAAQA,EAaV,OAVA4K,MAAMgB,OAAShB,MAEfA,MAAM9wB,OAAS8wB,MAAMjmC,MAAQ,SAASuf,GACpC,OAAO1b,UAAU1D,QAAUgV,OAASzO,cAAIhQ,KAAK6oB,EAAG6jB,qBAAS6C,OAAS9wB,OAAOsE,SAG3EwsB,MAAMC,KAAO,WACX,OAAOlX,oBAAW7Z,OAAOA,SAGpBwpC,UAAU1Y,OCrBJ,IAAA4Y,KAAA,SAAS1pC,OAAQ2pC,UAG9B,IAIIrnD,EAJA8sC,GAAK,EACLgY,IAHJpnC,OAASA,OAAOsE,SAGAtZ,OAAS,EACrB4+C,GAAK5pC,OAAOovB,IACZya,GAAK7pC,OAAOonC,IAUhB,OAPIyC,GAAKD,KACPtnD,EAAI8sC,GAAIA,GAAKgY,GAAIA,GAAK9kD,EACtBA,EAAIsnD,GAAIA,GAAKC,GAAIA,GAAKvnD,GAGxB0d,OAAOovB,IAAMua,SAASpvC,MAAMqvC,IAC5B5pC,OAAOonC,IAAMuC,SAAS30B,KAAK60B,IACpB7pC,QCVT,SAASolC,kBAAc5hD,EAAGkJ,GACxB,OAAQA,EAAIS,KAAK0hC,IAAIniC,EAAIlJ,IACnB,SAAS0iC,GAAK,OAAO/4B,KAAK0hC,IAAI3I,EAAI1iC,GAAKkJ,GACvC6zC,sBAAS7zC,GAGjB,SAAS24C,kBAAc7hD,EAAGkJ,GACxB,OAAOlJ,EAAI,EACL,SAASlB,GAAK,OAAQ6K,KAAKsQ,KAAK/Q,EAAGpK,GAAK6K,KAAKsQ,KAAKja,EAAG,EAAIlB,IACzD,SAASA,GAAK,OAAO6K,KAAKsQ,IAAI/Q,EAAGpK,GAAK6K,KAAKsQ,IAAIja,EAAG,EAAIlB,IAG9D,SAASwnD,MAAM5jB,GACb,OAAOx7B,SAASw7B,KAAO,KAAOA,GAAKA,EAAI,EAAI,EAAIA,EAGjD,SAAS6jB,KAAKC,MACZ,OAAgB,KAATA,KAAcF,MACfE,OAAS78C,KAAKkyC,EAAIlyC,KAAK88C,IACvB,SAAS/jB,GAAK,OAAO/4B,KAAKsQ,IAAIusC,KAAM9jB,IAG5C,SAASgkB,KAAKF,MACZ,OAAOA,OAAS78C,KAAKkyC,EAAIlyC,KAAK0hC,IACf,KAATmb,MAAe78C,KAAKg9C,OACV,IAATH,MAAc78C,KAAKi9C,OAClBJ,KAAO78C,KAAK0hC,IAAImb,MAAO,SAAS9jB,GAAK,OAAO/4B,KAAK0hC,IAAI3I,GAAK8jB,OAGpE,SAASK,QAAQtmC,GACf,OAAO,SAASmiB,GACd,OAAQniB,GAAGmiB,IAIA,SAAS2I,MACtB,IAAIiC,MAAQ6U,WAAWP,kBAAeC,mBAAerlC,QAAQ,EAAG,KAC5DA,OAAS8wB,MAAM9wB,OACfgqC,KAAO,GACPM,KAAOJ,KAAK,IACZK,KAAOR,KAAK,IAEhB,SAASzY,UAGP,OAFAgZ,KAAOJ,KAAKF,MAAOO,KAAOR,KAAKC,MAC3BhqC,SAAS,GAAK,IAAGsqC,KAAOD,QAAQC,MAAOC,KAAOF,QAAQE,OACnDzZ,MA2ET,OAxEAA,MAAMkZ,KAAO,SAAS5/B,GACpB,OAAO1b,UAAU1D,QAAUg/C,MAAQ5/B,EAAGknB,WAAa0Y,MAGrDlZ,MAAM9wB,OAAS,SAASoK,GACtB,OAAO1b,UAAU1D,QAAUgV,OAAOoK,GAAIknB,WAAatxB,UAGrD8wB,MAAMpC,MAAQ,SAAS5Y,OACrB,IAGI5zB,EAHAR,EAAIse,SACJtB,EAAIhd,EAAE,GACNsQ,EAAItQ,EAAEA,EAAEsJ,OAAS,IAGjB9I,EAAI8P,EAAI0M,KAAGtd,EAAIsd,EAAGA,EAAI1M,EAAGA,EAAI5Q,GAEjC,IAEIgC,EACAqtC,EACAnuC,EAJAlB,EAAIkpD,KAAK5rC,GACT2F,EAAIimC,KAAKt4C,GAITnP,EAAa,MAATizB,MAAgB,IAAMA,MAC1B4oB,KAEJ,KAAMsL,KAAO,IAAM3lC,EAAIjjB,EAAIyB,GAEzB,GADAzB,EAAI+L,KAAK0G,MAAMzS,GAAK,EAAGijB,EAAIlX,KAAK0G,MAAMwQ,GAAK,EACvC3F,EAAI,GAAG,KAAOtd,EAAIijB,IAAKjjB,EACzB,IAAKqvC,EAAI,EAAGrtC,EAAImnD,KAAKnpD,GAAIqvC,EAAIuZ,OAAQvZ,EAEnC,MADAnuC,EAAIc,EAAIqtC,GACA/xB,GAAR,CACA,GAAIpc,EAAI0P,EAAG,MACX0sC,EAAElvC,KAAKlN,SAEJ,KAAOlB,EAAIijB,IAAKjjB,EACrB,IAAKqvC,EAAIuZ,KAAO,EAAG5mD,EAAImnD,KAAKnpD,GAAIqvC,GAAK,IAAKA,EAExC,MADAnuC,EAAIc,EAAIqtC,GACA/xB,GAAR,CACA,GAAIpc,EAAI0P,EAAG,MACX0sC,EAAElvC,KAAKlN,SAIXo8C,EAAIhQ,UAAMttC,EAAGijB,EAAGlX,KAAKkQ,IAAIgH,EAAIjjB,EAAGyB,IAAI0O,IAAIg5C,MAG1C,OAAOroD,EAAIw8C,EAAEjxB,UAAYixB,GAG3B5N,MAAM2Y,WAAa,SAAS3zB,MAAO0wB,WAGjC,GAFiB,MAAbA,YAAmBA,UAAqB,KAATwD,KAAc,MAAQ,KAChC,mBAAdxD,YAA0BA,UAAYn9C,qBAAOm9C,YACpD1wB,QAAUmzB,IAAU,OAAOzC,UAClB,MAAT1wB,QAAeA,MAAQ,IAC3B,IAAI2a,EAAItjC,KAAKmQ,IAAI,EAAG0sC,KAAOl0B,MAAQgb,MAAMpC,QAAQ1jC,QACjD,OAAO,SAAStJ,GACd,IAAIN,EAAIM,EAAI6oD,KAAKp9C,KAAK0G,MAAMy2C,KAAK5oD,KAEjC,OADIN,EAAI4oD,KAAOA,KAAO,KAAK5oD,GAAK4oD,MACzB5oD,GAAKqvC,EAAI+V,UAAU9kD,GAAK,KAInCovC,MAAM4Y,KAAO,WACX,OAAO1pC,OAAO0pC,KAAK1pC,UACjBzF,MAAO,SAAAA,MAAS2rB,GAAK,OAAOqkB,KAAKp9C,KAAKoN,MAAM+vC,KAAKpkB,MACjDlR,KAAM,SAAAA,KAASkR,GAAK,OAAOqkB,KAAKp9C,KAAK6nB,KAAKs1B,KAAKpkB,UAInD4K,MAAMC,KAAO,WACX,OAAOA,KAAKD,MAAOjC,MAAMmb,KAAKA,QAGzBlZ,MC1HT,SAAS0Z,MAAMtkB,EAAGohB,UAChB,OAAOphB,EAAI,GAAK/4B,KAAKsQ,KAAKyoB,EAAGohB,UAAYn6C,KAAKsQ,IAAIyoB,EAAGohB,UAGxC,SAAS7pC,MACtB,IAAI6pC,SAAW,EACXxW,MAAQ6U,WAGZ,SAASP,cAAc5hD,EAAGkJ,GACxB,OAAQA,EAAI89C,MAAM99C,EAAG46C,WAAa9jD,EAAIgnD,MAAMhnD,EAAG8jD,YACzC,SAASphB,GAAK,OAAQskB,MAAMtkB,EAAGohB,UAAY9jD,GAAKkJ,GAChD6zC,sBAAS7zC,IAGjB,SAAS24C,cAAc7hD,EAAGkJ,GAExB,OADAA,EAAI89C,MAAM99C,EAAG46C,WAAa9jD,EAAIgnD,MAAMhnD,EAAG8jD,WAChC,SAAShlD,GAAK,OAAOkoD,MAAMhnD,EAAIkJ,EAAIpK,EAAG,EAAIglD,aAV/CtnC,OAAS8wB,MAAM9wB,OAqBnB,OARA8wB,MAAMwW,SAAW,SAASl9B,GACxB,OAAO1b,UAAU1D,QAAUs8C,UAAYl9B,EAAGpK,OAAOA,WAAasnC,UAGhExW,MAAMC,KAAO,WACX,OAAOA,KAAKD,MAAOrzB,MAAM6pC,SAASA,YAG7BkC,UAAU1Y,OC7BJ,SAAS5B,oBACtB,IAAIlvB,UACAnV,SACA4/C,cAEJ,SAASnZ,UACP,IAAIlwC,EAAI,EAAGyB,EAAIsK,KAAKmQ,IAAI,EAAGzS,MAAMG,QAEjC,IADAy/C,WAAa,IAAIt4C,MAAMtP,EAAI,KAClBzB,EAAIyB,GAAG4nD,WAAWrpD,EAAI,GAAKspD,SAAU1qC,OAAQ5e,EAAIyB,GAC1D,OAAOiuC,MAGT,SAASA,MAAM5K,GACb,IAAKhpB,MAAMgpB,GAAKA,GAAI,OAAOr7B,MAAM26C,OAAOiF,WAAYvkB,IAiCtD,OA9BA4K,MAAMW,aAAe,SAAS3kC,GAC5B,IAAI1L,EAAIyJ,MAAM0E,QAAQzC,GACtB,OAAO1L,EAAI,GAAKqsC,IAAKA,MACnBrsC,EAAI,EAAIqpD,WAAWrpD,EAAI,GAAK4e,OAAO,GACnC5e,EAAIqpD,WAAWz/C,OAASy/C,WAAWrpD,GAAK4e,OAAOA,OAAOhV,OAAS,KAInE8lC,MAAM9wB,OAAS,SAASoK,GACtB,IAAK1b,UAAU1D,OAAQ,OAAOgV,OAAOsE,QACrCtE,UACA,IAAK,IAAyBte,EAArBN,EAAI,EAAGyB,EAAIunB,EAAEpf,OAAW5J,EAAIyB,IAAKzB,EAAsB,OAAfM,EAAI0oB,EAAEhpB,KAAkB8b,MAAMxb,GAAKA,IAAIse,OAAOxQ,KAAK9N,GAEpG,OADAse,OAAO7F,KAAKqzB,WACL8D,WAGTR,MAAMjmC,MAAQ,SAASuf,GACrB,OAAO1b,UAAU1D,QAAUH,MAAQyZ,YAAM/iB,KAAK6oB,GAAIknB,WAAazmC,MAAMyZ,SAGvEwsB,MAAM6Z,UAAY,WAChB,OAAOF,WAAWnmC,SAGpBwsB,MAAMC,KAAO,WACX,OAAO7B,oBACFlvB,OAAOA,QACPnV,MAAMA,QAGNimC,MC7CM,SAAS8Z,oBACtB,IAAIhB,GAAK,EACLC,GAAK,EACLhnD,EAAI,EACJmd,QAAU,IACVnV,OAAS,EAAG,GAEhB,SAASimC,MAAM5K,GACb,GAAIA,GAAKA,EAAG,OAAOr7B,MAAM26C,OAAOxlC,OAAQkmB,EAAG,EAAGrjC,IAGhD,SAASyuC,UACP,IAAIlwC,GAAK,EAET,IADA4e,OAAS,IAAI7N,MAAMtP,KACVzB,EAAIyB,GAAGmd,OAAO5e,KAAOA,EAAI,GAAKyoD,IAAMzoD,EAAIyB,GAAK+mD,KAAO/mD,EAAI,GACjE,OAAOiuC,MAyBT,OAtBAA,MAAM9wB,OAAS,SAASoK,GACtB,OAAO1b,UAAU1D,QAAU4+C,IAAMx/B,EAAE,GAAIy/B,IAAMz/B,EAAE,GAAIknB,YAAcsY,GAAIC,KAGvE/Y,MAAMjmC,MAAQ,SAASuf,GACrB,OAAO1b,UAAU1D,QAAUnI,GAAKgI,MAAQyZ,YAAM/iB,KAAK6oB,IAAIpf,OAAS,EAAGsmC,WAAazmC,MAAMyZ,SAGxFwsB,MAAMW,aAAe,SAAS3kC,GAC5B,IAAI1L,EAAIyJ,MAAM0E,QAAQzC,GACtB,OAAO1L,EAAI,GAAKqsC,IAAKA,KACfrsC,EAAI,GAAKwoD,GAAI5pC,OAAO,IACpB5e,GAAKyB,GAAKmd,OAAOnd,EAAI,GAAIgnD,KACxB7pC,OAAO5e,EAAI,GAAI4e,OAAO5e,KAG/B0vC,MAAMC,KAAO,WACX,OAAO6Z,oBACF5qC,QAAQ4pC,GAAIC,KACZh/C,MAAMA,QAGN2+C,UAAU1Y,OCzCJ,SAAS4Z,sBACtB,IAAI1qC,QAAU,IACVnV,OAAS,EAAG,GACZhI,EAAI,EAER,SAASiuC,MAAM5K,GACb,GAAIA,GAAKA,EAAG,OAAOr7B,MAAM26C,OAAOxlC,OAAQkmB,EAAG,EAAGrjC,IAsBhD,OAnBAiuC,MAAM9wB,OAAS,SAASoK,GACtB,OAAO1b,UAAU1D,QAAUgV,OAASsE,YAAM/iB,KAAK6oB,GAAIvnB,EAAIsK,KAAKkQ,IAAI2C,OAAOhV,OAAQH,MAAMG,OAAS,GAAI8lC,OAAS9wB,OAAOsE,SAGpHwsB,MAAMjmC,MAAQ,SAASuf,GACrB,OAAO1b,UAAU1D,QAAUH,MAAQyZ,YAAM/iB,KAAK6oB,GAAIvnB,EAAIsK,KAAKkQ,IAAI2C,OAAOhV,OAAQH,MAAMG,OAAS,GAAI8lC,OAASjmC,MAAMyZ,SAGlHwsB,MAAMW,aAAe,SAAS3kC,GAC5B,IAAI1L,EAAIyJ,MAAM0E,QAAQzC,GACtB,OAAQkT,OAAO5e,EAAI,GAAI4e,OAAO5e,KAGhC0vC,MAAMC,KAAO,WACX,OAAO2Z,sBACF1qC,OAAOA,QACPnV,MAAMA,QAGNimC,MC/BT,IAAImN,YAAK,IAAI/0C,KACTg1C,YAAK,IAAIh1C,KAEE,SAAS2hD,YAAYC,OAAQC,QAASj1B,MAAOnhB,OAE1D,SAASg1C,SAAS1gD,MAChB,OAAO6hD,OAAO7hD,KAAO,IAAIC,MAAMD,OAAQA,KA4DzC,OAzDA0gD,SAASpvC,MAAQovC,SAEjBA,SAAS30B,KAAO,SAAS/rB,MACvB,OAAO6hD,OAAO7hD,KAAO,IAAIC,KAAKD,KAAO,IAAK8hD,QAAQ9hD,KAAM,GAAI6hD,OAAO7hD,MAAOA,MAG5E0gD,SAAS91C,MAAQ,SAAS5K,MACxB,IAAIq8C,GAAKqE,SAAS1gD,MACdgpC,GAAK0X,SAAS30B,KAAK/rB,MACvB,OAAOA,KAAOq8C,GAAKrT,GAAKhpC,KAAOq8C,GAAKrT,IAGtC0X,SAASqB,OAAS,SAAS/hD,KAAMolC,MAC/B,OAAO0c,QAAQ9hD,KAAO,IAAIC,MAAMD,MAAe,MAARolC,KAAe,EAAIlhC,KAAKoN,MAAM8zB,OAAQplC,MAG/E0gD,SAAS9+C,MAAQ,SAAS/D,MAAOsnC,KAAMC,MACrC,IAAgB4c,SAAZpgD,SAGJ,GAFA/D,MAAQ6iD,SAAS30B,KAAKluB,OACtBunC,KAAe,MAARA,KAAe,EAAIlhC,KAAKoN,MAAM8zB,QAC/BvnC,MAAQsnC,MAAWC,KAAO,GAAI,OAAOxjC,MAC3C,GAAGA,MAAM2E,KAAKy7C,SAAW,IAAI/hD,MAAMpC,QAASikD,QAAQjkD,MAAOunC,MAAOyc,OAAOhkD,aAClEmkD,SAAWnkD,OAASA,MAAQsnC,MACnC,OAAOvjC,OAGT8+C,SAAS/sC,OAAS,SAASlW,MACzB,OAAOmkD,YAAY,SAAS5hD,MAC1B,GAAIA,MAAQA,KAAM,KAAO6hD,OAAO7hD,OAAQvC,KAAKuC,OAAOA,KAAKo5C,QAAQp5C,KAAO,IACvE,SAASA,KAAMolC,MAChB,GAAIplC,MAAQA,KACV,GAAIolC,KAAO,EAAG,OAASA,MAAQ,GAC7B,KAAO0c,QAAQ9hD,MAAO,IAAKvC,KAAKuC,aAC3B,OAASolC,MAAQ,GACtB,KAAO0c,QAAQ9hD,KAAM,IAAMvC,KAAKuC,YAMpC6sB,QACF6zB,SAAS7zB,MAAQ,SAAShvB,MAAOgP,KAG/B,OAFAmoC,YAAGoE,SAASv7C,OAAQo3C,YAAGmE,SAASvsC,KAChCg1C,OAAO7M,aAAK6M,OAAO5M,aACZ/wC,KAAKoN,MAAMub,MAAMmoB,YAAIC,eAG9ByL,SAAS9hC,MAAQ,SAASwmB,MAExB,OADAA,KAAOlhC,KAAKoN,MAAM8zB,MACV3jC,SAAS2jC,OAAWA,KAAO,EAC3BA,KAAO,EACTsb,SAAS/sC,OAAOjI,MACZ,SAASjT,GAAK,OAAOiT,MAAMjT,GAAK2sC,MAAS,GACzC,SAAS3sC,GAAK,OAAOioD,SAAS7zB,MAAM,EAAGp0B,GAAK2sC,MAAS,IAH3Csb,SADoB,OAQrCA,SChET,IAAIuB,wBAAcvB,YAAS,aAExB,SAAS1gD,KAAMolC,MAChBplC,KAAKo5C,SAASp5C,KAAOolC,OACpB,SAASvnC,MAAOgP,KACjB,OAAOA,IAAMhP,QAIfokD,wBAAYrjC,MAAQ,SAAS4oB,GAE3B,OADAA,EAAItjC,KAAKoN,MAAMk2B,GACV/lC,SAAS+lC,IAAQA,EAAI,EACpBA,EAAI,EACHkZ,YAAS,SAAS1gD,MACvBA,KAAKo5C,QAAQl1C,KAAKoN,MAAMtR,KAAOwnC,GAAKA,IACnC,SAASxnC,KAAMolC,MAChBplC,KAAKo5C,SAASp5C,KAAOolC,KAAOoC,IAC3B,SAAS3pC,MAAOgP,KACjB,OAAQA,IAAMhP,OAAS2pC,IANJya,wBADgB,MAWxBA,4CCvBJC,gBDwBeD,wBAAYrgD,MCxBV,KAGjBugD,aAAe,OCDtBC,cAAS1B,YAAS,SAAS1gD,MAC7BA,KAAKo5C,QAAQp5C,KAAOA,KAAKmD,oBACxB,SAASnD,KAAMolC,MAChBplC,KAAKo5C,SAASp5C,KDNY,ICMLolC,OACpB,SAASvnC,MAAOgP,KACjB,OAAQA,IAAMhP,ODRY,KCSzB,SAASmC,MACV,OAAOA,KAAKqiD,kBAGCD,yBCVXE,eDWiBF,cAAOxgD,MCXf8+C,YAAS,SAAS1gD,MAC7BA,KAAKo5C,QAAQp5C,KAAOA,KAAKmD,kBFJC,IEImBnD,KAAKiD,eACjD,SAASjD,KAAMolC,MAChBplC,KAAKo5C,SAASp5C,KAAOolC,KAAO8c,iBAC3B,SAASrkD,MAAOgP,KACjB,OAAQA,IAAMhP,OAASqkD,gBACtB,SAASliD,MACV,OAAOA,KAAK+C,gBAGCu/C,yBCVXC,WDWiBD,cAAO1gD,MCXjB8+C,YAAS,SAAS1gD,MAC3BA,KAAKo5C,QAAQp5C,KAAOA,KAAKmD,kBHJC,IGImBnD,KAAKiD,aAAgCjD,KAAK+C,aAAem/C,iBACrG,SAASliD,KAAMolC,MAChBplC,KAAKo5C,SAASp5C,KHJU,KGIHolC,OACpB,SAASvnC,MAAOgP,KACjB,OAAQA,IAAMhP,OHNU,MGOvB,SAASmC,MACV,OAAOA,KAAK0C,cAGC6/C,mBCVXl/C,SDWek/C,UAAK3gD,MCXd8+C,YAAS,SAAS1gD,MAC1BA,KAAKwiD,SAAS,EAAG,EAAG,EAAG,IACtB,SAASxiD,KAAMolC,MAChBplC,KAAKyiD,QAAQziD,KAAKwD,UAAY4hC,OAC7B,SAASvnC,MAAOgP,KACjB,OAAQA,IAAMhP,OAASgP,IAAI61C,oBAAsB7kD,MAAM6kD,qBAAuBR,gBJLvD,OIMtB,SAASliD,MACV,OAAOA,KAAKwD,UAAY,KAGXH,gBACGA,QAAIzB,MCXtB,SAAS+gD,QAAQxqD,GACf,OAAOuoD,YAAS,SAAS1gD,MACvBA,KAAKyiD,QAAQziD,KAAKwD,WAAaxD,KAAKsD,SAAW,EAAInL,GAAK,GACxD6H,KAAKwiD,SAAS,EAAG,EAAG,EAAG,IACtB,SAASxiD,KAAMolC,MAChBplC,KAAKyiD,QAAQziD,KAAKwD,UAAmB,EAAP4hC,OAC7B,SAASvnC,MAAOgP,KACjB,OAAQA,IAAMhP,OAASgP,IAAI61C,oBAAsB7kD,MAAM6kD,qBAAuBR,gBAAkBC,eAI7F,IAAIS,OAASD,QAAQ,GACjBE,OAASF,QAAQ,GACjBG,QAAUH,QAAQ,GAClBI,UAAYJ,QAAQ,GACpBK,SAAWL,QAAQ,GACnBM,OAASN,QAAQ,GACjBO,SAAWP,QAAQ,GClB1Bj/C,aDoBiBk/C,OAAOhhD,MACPihD,OAAOjhD,MACNkhD,QAAQlhD,MACNmhD,UAAUnhD,MACXohD,SAASphD,MACXqhD,OAAOrhD,MACLshD,SAASthD,MC1BpB8+C,YAAS,SAAS1gD,MAC5BA,KAAKyiD,QAAQ,GACbziD,KAAKwiD,SAAS,EAAG,EAAG,EAAG,IACtB,SAASxiD,KAAMolC,MAChBplC,KAAKmjD,SAASnjD,KAAK2D,WAAayhC,OAC/B,SAASvnC,MAAOgP,KACjB,OAAOA,IAAIlJ,WAAa9F,MAAM8F,WAAyD,IAA3CkJ,IAAIzI,cAAgBvG,MAAMuG,gBACrE,SAASpE,MACV,OAAOA,KAAK2D,cAGCD,sBCXXW,WDYgBX,YAAM9B,MCZf8+C,YAAS,SAAS1gD,MAC3BA,KAAKmjD,SAAS,EAAG,GACjBnjD,KAAKwiD,SAAS,EAAG,EAAG,EAAG,IACtB,SAASxiD,KAAMolC,MAChBplC,KAAKojD,YAAYpjD,KAAKoE,cAAgBghC,OACrC,SAASvnC,MAAOgP,KACjB,OAAOA,IAAIzI,cAAgBvG,MAAMuG,eAChC,SAASpE,MACV,OAAOA,KAAKoE,iBAIdC,UAAKua,MAAQ,SAAS4oB,GACpB,OAAQ/lC,SAAS+lC,EAAItjC,KAAKoN,MAAMk2B,KAASA,EAAI,EAAYkZ,YAAS,SAAS1gD,MACzEA,KAAKojD,YAAYl/C,KAAKoN,MAAMtR,KAAKoE,cAAgBojC,GAAKA,GACtDxnC,KAAKmjD,SAAS,EAAG,GACjBnjD,KAAKwiD,SAAS,EAAG,EAAG,EAAG,IACtB,SAASxiD,KAAMolC,MAChBplC,KAAKojD,YAAYpjD,KAAKoE,cAAgBghC,KAAOoC,KALG,MASrCnjC,uBCrBXg/C,WDsBeh/C,UAAKzC,MCtBR8+C,YAAS,SAAS1gD,MAChCA,KAAKsjD,cAAc,EAAG,IACrB,SAAStjD,KAAMolC,MAChBplC,KAAKo5C,SAASp5C,KAAOolC,KAAO8c,iBAC3B,SAASrkD,MAAOgP,KACjB,OAAQA,IAAMhP,OAASqkD,gBACtB,SAASliD,MACV,OAAOA,KAAKujD,mBCPVC,SDWoBH,UAAUzhD,MCXpB8+C,YAAS,SAAS1gD,MAC9BA,KAAKyjD,cAAc,EAAG,EAAG,IACxB,SAASzjD,KAAMolC,MAChBplC,KAAKo5C,SAASp5C,KTJU,KSIHolC,OACpB,SAASvnC,MAAOgP,KACjB,OAAQA,IAAMhP,OTNU,MSOvB,SAASmC,MACV,OAAOA,KAAK0jD,iBCPVC,QDWkBH,QAAQ5hD,MCXjB8+C,YAAS,SAAS1gD,MAC7BA,KAAK4jD,YAAY,EAAG,EAAG,EAAG,IACzB,SAAS5jD,KAAMolC,MAChBplC,KAAK6jD,WAAW7jD,KAAK8jD,aAAe1e,OACnC,SAASvnC,MAAOgP,KACjB,OAAQA,IAAMhP,OVLS,OUMtB,SAASmC,MACV,OAAOA,KAAK8jD,aAAe,KAGdH,kBACMA,OAAO/hD,MCX5B,SAASmiD,WAAW5rD,GAClB,OAAOuoD,YAAS,SAAS1gD,MACvBA,KAAK6jD,WAAW7jD,KAAK8jD,cAAgB9jD,KAAKgkD,YAAc,EAAI7rD,GAAK,GACjE6H,KAAK4jD,YAAY,EAAG,EAAG,EAAG,IACzB,SAAS5jD,KAAMolC,MAChBplC,KAAK6jD,WAAW7jD,KAAK8jD,aAAsB,EAAP1e,OACnC,SAASvnC,MAAOgP,KACjB,OAAQA,IAAMhP,OAASskD,eAIpB,IAAI8B,UAAYF,WAAW,GACvBG,UAAYH,WAAW,GACvBI,WAAaJ,WAAW,GACxBK,aAAeL,WAAW,GAC1BM,YAAcN,WAAW,GACzBO,UAAYP,WAAW,GACvBQ,YAAcR,WAAW,GClBhCS,UDoBoBP,UAAUriD,MACVsiD,UAAUtiD,MACTuiD,WAAWviD,MACTwiD,aAAaxiD,MACdyiD,YAAYziD,MACd0iD,UAAU1iD,MACR2iD,YAAY3iD,MC1BvB8+C,YAAS,SAAS1gD,MAC/BA,KAAK6jD,WAAW,GAChB7jD,KAAK4jD,YAAY,EAAG,EAAG,EAAG,IACzB,SAAS5jD,KAAMolC,MAChBplC,KAAKykD,YAAYzkD,KAAK0kD,cAAgBtf,OACrC,SAASvnC,MAAOgP,KACjB,OAAOA,IAAI63C,cAAgB7mD,MAAM6mD,cAAkE,IAAjD73C,IAAI83C,iBAAmB9mD,MAAM8mD,mBAC9E,SAAS3kD,MACV,OAAOA,KAAK0kD,iBCRVE,SDYmBJ,SAAS5iD,MCZlB8+C,YAAS,SAAS1gD,MAC9BA,KAAKykD,YAAY,EAAG,GACpBzkD,KAAK4jD,YAAY,EAAG,EAAG,EAAG,IACzB,SAAS5jD,KAAMolC,MAChBplC,KAAK6kD,eAAe7kD,KAAK2kD,iBAAmBvf,OAC3C,SAASvnC,MAAOgP,KACjB,OAAOA,IAAI83C,iBAAmB9mD,MAAM8mD,kBACnC,SAAS3kD,MACV,OAAOA,KAAK2kD,oBAIdC,QAAQhmC,MAAQ,SAAS4oB,GACvB,OAAQ/lC,SAAS+lC,EAAItjC,KAAKoN,MAAMk2B,KAASA,EAAI,EAAYkZ,YAAS,SAAS1gD,MACzEA,KAAK6kD,eAAe3gD,KAAKoN,MAAMtR,KAAK2kD,iBAAmBnd,GAAKA,GAC5DxnC,KAAKykD,YAAY,EAAG,GACpBzkD,KAAK4jD,YAAY,EAAG,EAAG,EAAG,IACzB,SAAS5jD,KAAMolC,MAChBplC,KAAK6kD,eAAe7kD,KAAK2kD,iBAAmBvf,KAAOoC,KALH,MASrCod,wBACOA,QAAQhjD,MCZ9B,SAASkjD,UAAUrsD,GACjB,GAAI,GAAKA,EAAEoL,GAAKpL,EAAEoL,EAAI,IAAK,CACzB,IAAI7D,KAAO,IAAIC,MAAM,EAAGxH,EAAEF,EAAGE,EAAEA,EAAGA,EAAE4J,EAAG5J,EAAEqK,EAAGrK,EAAEuK,EAAGvK,EAAEssD,GAEnD,OADA/kD,KAAKojD,YAAY3qD,EAAEoL,GACZ7D,KAET,OAAO,IAAIC,KAAKxH,EAAEoL,EAAGpL,EAAEF,EAAGE,EAAEA,EAAGA,EAAE4J,EAAG5J,EAAEqK,EAAGrK,EAAEuK,EAAGvK,EAAEssD,GAGlD,SAASC,QAAQvsD,GACf,GAAI,GAAKA,EAAEoL,GAAKpL,EAAEoL,EAAI,IAAK,CACzB,IAAI7D,KAAO,IAAIC,KAAKA,KAAKglD,KAAK,EAAGxsD,EAAEF,EAAGE,EAAEA,EAAGA,EAAE4J,EAAG5J,EAAEqK,EAAGrK,EAAEuK,EAAGvK,EAAEssD,IAE5D,OADA/kD,KAAK6kD,eAAepsD,EAAEoL,GACf7D,KAET,OAAO,IAAIC,KAAKA,KAAKglD,IAAIxsD,EAAEoL,EAAGpL,EAAEF,EAAGE,EAAEA,EAAGA,EAAE4J,EAAG5J,EAAEqK,EAAGrK,EAAEuK,EAAGvK,EAAEssD,IAG3D,SAASG,QAAQrhD,GACf,OAAQA,EAAGA,EAAGtL,EAAG,EAAGE,EAAG,EAAG4J,EAAG,EAAGS,EAAG,EAAGE,EAAG,EAAG+hD,EAAG,GA2UjD,ICzWIhH,yBACOoH,WAEAC,UACAC,SDqWPC,MAAQC,IAAK,GAAIpkC,EAAK,IAAKqkC,EAAK,KAChCC,SAAW,UACXC,UAAY,KACZC,UAAY,sBAEhB,SAASzlD,WAAI9G,MAAOqkD,KAAM9iB,OACxB,IAAI+iB,KAAOtkD,MAAQ,EAAI,IAAM,GACzB+/C,QAAUuE,MAAQtkD,MAAQA,OAAS,GACnC2I,OAASo3C,OAAOp3C,OACpB,OAAO27C,MAAQ37C,OAAS44B,MAAQ,IAAIzxB,MAAMyxB,MAAQ54B,OAAS,GAAGqB,KAAKq6C,MAAQtE,OAASA,QAGtF,SAASyM,QAAQxrD,GACf,OAAOA,EAAEuG,QAAQglD,UAAW,QAG9B,SAASE,SAASC,OAChB,OAAO,IAAItlD,OAAO,OAASslD,MAAMx9C,IAAIs9C,SAASxiD,KAAK,KAAO,IAAK,KAGjE,SAAS2iD,aAAaD,OAEpB,IADA,IAAIx9C,OAAUnQ,GAAK,EAAGyB,EAAIksD,MAAM/jD,SACvB5J,EAAIyB,GAAG0O,IAAIw9C,MAAM3tD,GAAG2J,eAAiB3J,EAC9C,OAAOmQ,IAGT,SAAS09C,yBAAyBvtD,EAAG0gD,OAAQhhD,GAC3C,IAAIyB,EAAI6rD,SAASlS,KAAK4F,OAAO99B,MAAMljB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEwtD,GAAKrsD,EAAE,GAAIzB,EAAIyB,EAAE,GAAGmI,SAAW,EAG/C,SAASmkD,yBAAyBztD,EAAG0gD,OAAQhhD,GAC3C,IAAIyB,EAAI6rD,SAASlS,KAAK4F,OAAO99B,MAAMljB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEgd,GAAK7b,EAAE,GAAIzB,EAAIyB,EAAE,GAAGmI,SAAW,EAG/C,SAASokD,sBAAsB1tD,EAAG0gD,OAAQhhD,GACxC,IAAIyB,EAAI6rD,SAASlS,KAAK4F,OAAO99B,MAAMljB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAE2tD,GAAKxsD,EAAE,GAAIzB,EAAIyB,EAAE,GAAGmI,SAAW,EAG/C,SAASskD,mBAAmB5tD,EAAG0gD,OAAQhhD,GACrC,IAAIyB,EAAI6rD,SAASlS,KAAK4F,OAAO99B,MAAMljB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAE6tD,GAAK1sD,EAAE,GAAIzB,EAAIyB,EAAE,GAAGmI,SAAW,EAG/C,SAASwkD,sBAAsB9tD,EAAG0gD,OAAQhhD,GACxC,IAAIyB,EAAI6rD,SAASlS,KAAK4F,OAAO99B,MAAMljB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAE+tD,GAAK5sD,EAAE,GAAIzB,EAAIyB,EAAE,GAAGmI,SAAW,EAG/C,SAAS0kD,cAAchuD,EAAG0gD,OAAQhhD,GAChC,IAAIyB,EAAI6rD,SAASlS,KAAK4F,OAAO99B,MAAMljB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEoL,GAAKjK,EAAE,GAAIzB,EAAIyB,EAAE,GAAGmI,SAAW,EAG/C,SAAS2kD,UAAUjuD,EAAG0gD,OAAQhhD,GAC5B,IAAIyB,EAAI6rD,SAASlS,KAAK4F,OAAO99B,MAAMljB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEoL,GAAKjK,EAAE,KAAOA,EAAE,GAAK,GAAK,KAAO,KAAOzB,EAAIyB,EAAE,GAAGmI,SAAW,EAG5E,SAAS4kD,UAAUluD,EAAG0gD,OAAQhhD,GAC5B,IAAIyB,EAAI,+BAA+B25C,KAAK4F,OAAO99B,MAAMljB,EAAGA,EAAI,IAChE,OAAOyB,GAAKnB,EAAEmuD,EAAIhtD,EAAE,GAAK,IAAMA,EAAE,IAAMA,EAAE,IAAM,OAAQzB,EAAIyB,EAAE,GAAGmI,SAAW,EAG7E,SAAS8kD,iBAAiBpuD,EAAG0gD,OAAQhhD,GACnC,IAAIyB,EAAI6rD,SAASlS,KAAK4F,OAAO99B,MAAMljB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEF,EAAIqB,EAAE,GAAK,EAAGzB,EAAIyB,EAAE,GAAGmI,SAAW,EAGlD,SAAS+kD,gBAAgBruD,EAAG0gD,OAAQhhD,GAClC,IAAIyB,EAAI6rD,SAASlS,KAAK4F,OAAO99B,MAAMljB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEA,GAAKmB,EAAE,GAAIzB,EAAIyB,EAAE,GAAGmI,SAAW,EAG/C,SAASglD,eAAetuD,EAAG0gD,OAAQhhD,GACjC,IAAIyB,EAAI6rD,SAASlS,KAAK4F,OAAO99B,MAAMljB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEF,EAAI,EAAGE,EAAEA,GAAKmB,EAAE,GAAIzB,EAAIyB,EAAE,GAAGmI,SAAW,EAGxD,SAASilD,YAAYvuD,EAAG0gD,OAAQhhD,GAC9B,IAAIyB,EAAI6rD,SAASlS,KAAK4F,OAAO99B,MAAMljB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAE4J,GAAKzI,EAAE,GAAIzB,EAAIyB,EAAE,GAAGmI,SAAW,EAG/C,SAASklD,aAAaxuD,EAAG0gD,OAAQhhD,GAC/B,IAAIyB,EAAI6rD,SAASlS,KAAK4F,OAAO99B,MAAMljB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEqK,GAAKlJ,EAAE,GAAIzB,EAAIyB,EAAE,GAAGmI,SAAW,EAG/C,SAASmlD,aAAazuD,EAAG0gD,OAAQhhD,GAC/B,IAAIyB,EAAI6rD,SAASlS,KAAK4F,OAAO99B,MAAMljB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEuK,GAAKpJ,EAAE,GAAIzB,EAAIyB,EAAE,GAAGmI,SAAW,EAG/C,SAASolD,kBAAkB1uD,EAAG0gD,OAAQhhD,GACpC,IAAIyB,EAAI6rD,SAASlS,KAAK4F,OAAO99B,MAAMljB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEssD,GAAKnrD,EAAE,GAAIzB,EAAIyB,EAAE,GAAGmI,SAAW,EAG/C,SAASqlD,kBAAkB3uD,EAAG0gD,OAAQhhD,GACpC,IAAIyB,EAAI6rD,SAASlS,KAAK4F,OAAO99B,MAAMljB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEssD,EAAI7gD,KAAKoN,MAAM1X,EAAE,GAAK,KAAOzB,EAAIyB,EAAE,GAAGmI,SAAW,EAGjE,SAASslD,oBAAoB5uD,EAAG0gD,OAAQhhD,GACtC,IAAIyB,EAAI8rD,UAAUnS,KAAK4F,OAAO99B,MAAMljB,EAAGA,EAAI,IAC3C,OAAOyB,EAAIzB,EAAIyB,EAAE,GAAGmI,QAAU,EAGhC,SAASulD,mBAAmB7uD,EAAG0gD,OAAQhhD,GACrC,IAAIyB,EAAI6rD,SAASlS,KAAK4F,OAAO99B,MAAMljB,IACnC,OAAOyB,GAAKnB,EAAE8uD,GAAK3tD,EAAE,GAAIzB,EAAIyB,EAAE,GAAGmI,SAAW,EAG/C,SAASylD,0BAA0B/uD,EAAG0gD,OAAQhhD,GAC5C,IAAIyB,EAAI6rD,SAASlS,KAAK4F,OAAO99B,MAAMljB,IACnC,OAAOyB,GAAKnB,EAAE8uD,EAAc,KAAR3tD,EAAE,GAAYzB,EAAIyB,EAAE,GAAGmI,SAAW,EAGxD,SAAS0lD,iBAAiBhvD,EAAG0B,GAC3B,OAAO+F,WAAIzH,EAAE+K,UAAWrJ,EAAG,GAG7B,SAASutD,aAAajvD,EAAG0B,GACvB,OAAO+F,WAAIzH,EAAEiK,WAAYvI,EAAG,GAG9B,SAASwtD,aAAalvD,EAAG0B,GACvB,OAAO+F,WAAIzH,EAAEiK,WAAa,IAAM,GAAIvI,EAAG,GAGzC,SAASytD,gBAAgBnvD,EAAG0B,GAC1B,OAAO+F,WAAI,EAAI2nD,QAAQh7B,MAAMi7B,SAASrvD,GAAIA,GAAI0B,EAAG,GAGnD,SAAS4tD,mBAAmBtvD,EAAG0B,GAC7B,OAAO+F,WAAIzH,EAAE0K,kBAAmBhJ,EAAG,GAGrC,SAAS6tD,mBAAmBvvD,EAAG0B,GAC7B,OAAO4tD,mBAAmBtvD,EAAG0B,GAAK,MAGpC,SAAS8tD,kBAAkBxvD,EAAG0B,GAC5B,OAAO+F,WAAIzH,EAAEkL,WAAa,EAAGxJ,EAAG,GAGlC,SAAS+tD,cAAczvD,EAAG0B,GACxB,OAAO+F,WAAIzH,EAAEsK,aAAc5I,EAAG,GAGhC,SAASguD,cAAc1vD,EAAG0B,GACxB,OAAO+F,WAAIzH,EAAEwK,aAAc9I,EAAG,GAGhC,SAASiuD,0BAA0B3vD,GACjC,IAAI4K,IAAM5K,EAAE6K,SACZ,OAAe,IAARD,IAAY,EAAIA,IAGzB,SAASglD,uBAAuB5vD,EAAG0B,GACjC,OAAO+F,WAAIooD,OAAWz7B,MAAMi7B,SAASrvD,GAAIA,GAAI0B,EAAG,GAGlD,SAASouD,oBAAoB9vD,EAAG0B,GAC9B,IAAIkJ,IAAM5K,EAAE6K,SAEZ,OADA7K,EAAK4K,KAAO,GAAa,IAARA,IAAamlD,SAAa/vD,GAAK+vD,SAAaz8B,KAAKtzB,GAC3DyH,WAAIsoD,SAAa37B,MAAMi7B,SAASrvD,GAAIA,IAA+B,IAAzBqvD,SAASrvD,GAAG6K,UAAiBnJ,EAAG,GAGnF,SAASsuD,0BAA0BhwD,GACjC,OAAOA,EAAE6K,SAGX,SAASolD,uBAAuBjwD,EAAG0B,GACjC,OAAO+F,WAAIyoD,OAAW97B,MAAMi7B,SAASrvD,GAAIA,GAAI0B,EAAG,GAGlD,SAASyuD,kBAAWnwD,EAAG0B,GACrB,OAAO+F,WAAIzH,EAAE2L,cAAgB,IAAKjK,EAAG,GAGvC,SAAS0uD,eAAepwD,EAAG0B,GACzB,OAAO+F,WAAIzH,EAAE2L,cAAgB,IAAOjK,EAAG,GAGzC,SAAS2uD,WAAWrwD,GAClB,IAAIg9C,EAAIh9C,EAAEiqD,oBACV,OAAQjN,EAAI,EAAI,KAAOA,IAAM,EAAG,MAC1Bv1C,WAAIu1C,EAAI,GAAK,EAAG,IAAK,GACrBv1C,WAAIu1C,EAAI,GAAI,IAAK,GAGzB,SAASsT,oBAAoBtwD,EAAG0B,GAC9B,OAAO+F,WAAIzH,EAAEqrD,aAAc3pD,EAAG,GAGhC,SAAS6uD,gBAAgBvwD,EAAG0B,GAC1B,OAAO+F,WAAIzH,EAAEirD,cAAevpD,EAAG,GAGjC,SAAS8uD,gBAAgBxwD,EAAG0B,GAC1B,OAAO+F,WAAIzH,EAAEirD,cAAgB,IAAM,GAAIvpD,EAAG,GAG5C,SAAS+uD,mBAAmBzwD,EAAG0B,GAC7B,OAAO+F,WAAI,EAAIyjD,WAAO92B,MAAM+3B,YAAQnsD,GAAIA,GAAI0B,EAAG,GAGjD,SAASgvD,sBAAsB1wD,EAAG0B,GAChC,OAAO+F,WAAIzH,EAAE2wD,qBAAsBjvD,EAAG,GAGxC,SAASkvD,sBAAsB5wD,EAAG0B,GAChC,OAAOgvD,sBAAsB1wD,EAAG0B,GAAK,MAGvC,SAASmvD,qBAAqB7wD,EAAG0B,GAC/B,OAAO+F,WAAIzH,EAAEisD,cAAgB,EAAGvqD,EAAG,GAGrC,SAASovD,iBAAiB9wD,EAAG0B,GAC3B,OAAO+F,WAAIzH,EAAE8qD,gBAAiBppD,EAAG,GAGnC,SAASqvD,iBAAiB/wD,EAAG0B,GAC3B,OAAO+F,WAAIzH,EAAE4pD,gBAAiBloD,EAAG,GAGnC,SAASsvD,6BAA6BhxD,GACpC,IAAIixD,IAAMjxD,EAAEurD,YACZ,OAAe,IAAR0F,IAAY,EAAIA,IAGzB,SAASC,0BAA0BlxD,EAAG0B,GACpC,OAAO+F,WAAI+jD,UAAUp3B,MAAM+3B,YAAQnsD,GAAIA,GAAI0B,EAAG,GAGhD,SAASyvD,uBAAuBnxD,EAAG0B,GACjC,IAAIkJ,IAAM5K,EAAEurD,YAEZ,OADAvrD,EAAK4K,KAAO,GAAa,IAARA,IAAaghD,YAAY5rD,GAAK4rD,YAAYt4B,KAAKtzB,GACzDyH,WAAImkD,YAAYx3B,MAAM+3B,YAAQnsD,GAAIA,IAAiC,IAA3BmsD,YAAQnsD,GAAGurD,aAAoB7pD,EAAG,GAGnF,SAAS0vD,6BAA6BpxD,GACpC,OAAOA,EAAEurD,YAGX,SAAS8F,0BAA0BrxD,EAAG0B,GACpC,OAAO+F,WAAIgkD,UAAUr3B,MAAM+3B,YAAQnsD,GAAIA,GAAI0B,EAAG,GAGhD,SAAS4vD,cAActxD,EAAG0B,GACxB,OAAO+F,WAAIzH,EAAEksD,iBAAmB,IAAKxqD,EAAG,GAG1C,SAAS6vD,kBAAkBvxD,EAAG0B,GAC5B,OAAO+F,WAAIzH,EAAEksD,iBAAmB,IAAOxqD,EAAG,GAG5C,SAAS8vD,gBACP,MAAO,QAGT,SAASC,uBACP,MAAO,IAGT,SAASC,oBAAoB1xD,GAC3B,OAAQA,EAGV,SAAS2xD,2BAA2B3xD,GAClC,OAAOyL,KAAKoN,OAAO7Y,EAAI,MC3mBV,SAASwnD,4BAAc7W,YAMpC,OALA2U,yBDea,SAASmC,aAAanC,QACnC,IAAIsM,gBAAkBtM,OAAOuM,SACzBC,YAAcxM,OAAO/9C,KACrBwqD,YAAczM,OAAO0M,KACrBC,eAAiB3M,OAAO4M,QACxBC,gBAAkB7M,OAAO8M,KACzBC,qBAAuB/M,OAAOgN,UAC9BC,cAAgBjN,OAAOkN,OACvBC,mBAAqBnN,OAAOoN,YAE5BC,SAAWvF,SAAS6E,gBACpBW,aAAetF,aAAa2E,gBAC5BY,UAAYzF,SAAS+E,iBACrBW,cAAgBxF,aAAa6E,iBAC7BY,eAAiB3F,SAASiF,sBAC1BW,mBAAqB1F,aAAa+E,sBAClCY,QAAU7F,SAASmF,eACnBW,YAAc5F,aAAaiF,eAC3BY,aAAe/F,SAASqF,oBACxBW,iBAAmB9F,aAAamF,oBAEhCY,SACFvxD,EAkPF,SAASwxD,mBAAmBtzD,GAC1B,OAAOqyD,qBAAqBryD,EAAE6K,WAlP9BC,EAqPF,SAASyoD,cAAcvzD,GACrB,OAAOmyD,gBAAgBnyD,EAAE6K,WArPzBG,EAwPF,SAASwoD,iBAAiBxzD,GACxB,OAAOyyD,mBAAmBzyD,EAAEkL,aAxP5BC,EA2PF,SAASsoD,YAAYzzD,GACnB,OAAOuyD,cAAcvyD,EAAEkL,aA3PvBnL,EAAK,KACLC,EAAKgvD,iBACLptD,EAAKotD,iBACL3sC,EAAKktC,mBACL3lD,EAAKqlD,aACLzsC,EAAK0sC,aACLvsC,EAAKwsC,gBACL7C,EAAKgD,mBACLxvD,EAAK0vD,kBACLnlD,EAAKolD,cACL/tD,EAoPF,SAASgyD,aAAa1zD,GACpB,OAAOiyD,iBAAiBjyD,EAAEiK,YAAc,MApPxC6kD,EAAK4C,oBACL/vD,EAAKgwD,2BACLpnD,EAAKmlD,cACL1yC,EAAK2yC,0BACLhC,EAAKiC,uBACL/B,EAAKiC,oBACLtC,EAAKwC,0BACLjC,EAAKkC,uBACLzrB,EAAK,KACLyhB,EAAK,KACL76C,EAAK+kD,kBACLtkD,EAAKukD,eACLjC,EAAKkC,WACLvK,IAAK2L,sBAGHkC,YACF7xD,EAsOF,SAAS8xD,sBAAsB5zD,GAC7B,OAAOqyD,qBAAqBryD,EAAEurD,cAtO9BzgD,EAyOF,SAAS+oD,iBAAiB7zD,GACxB,OAAOmyD,gBAAgBnyD,EAAEurD,cAzOzBvgD,EA4OF,SAAS8oD,oBAAoB9zD,GAC3B,OAAOyyD,mBAAmBzyD,EAAEisD,gBA5O5B9gD,EA+OF,SAAS4oD,eAAe/zD,GACtB,OAAOuyD,cAAcvyD,EAAEisD,gBA/OvBlsD,EAAK,KACLC,EAAKswD,oBACL1uD,EAAK0uD,oBACLjuC,EAAKuuC,sBACLhnD,EAAK2mD,gBACL/tC,EAAKguC,gBACL7tC,EAAK8tC,mBACLnE,EAAKoE,sBACL5wD,EAAK+wD,qBACLxmD,EAAKymD,iBACLpvD,EAwOF,SAASsyD,gBAAgBh0D,GACvB,OAAOiyD,iBAAiBjyD,EAAEirD,eAAiB,MAxO3C6D,EAAK4C,oBACL/vD,EAAKgwD,2BACLpnD,EAAKwmD,iBACL/zC,EAAKg0C,6BACLrD,EAAKuD,0BACLrD,EAAKsD,uBACL3D,EAAK4D,6BACLrD,EAAKsD,0BACL7sB,EAAK,KACLyhB,EAAK,KACL76C,EAAKkmD,cACLzlD,EAAK0lD,kBACLpD,EAAKqD,cACL1L,IAAK2L,sBAGHwC,QACFnyD,EAkJF,SAASoyD,kBAAkBl0D,EAAG0gD,OAAQhhD,GACpC,IAAIyB,EAAI4xD,eAAejY,KAAK4F,OAAO99B,MAAMljB,IACzC,OAAOyB,GAAKnB,EAAEwtD,EAAIwF,mBAAmB7xD,EAAE,GAAGkI,eAAgB3J,EAAIyB,EAAE,GAAGmI,SAAW,GAnJ9EwB,EAsJF,SAASqpD,aAAan0D,EAAG0gD,OAAQhhD,GAC/B,IAAIyB,EAAI0xD,UAAU/X,KAAK4F,OAAO99B,MAAMljB,IACpC,OAAOyB,GAAKnB,EAAEwtD,EAAIsF,cAAc3xD,EAAE,GAAGkI,eAAgB3J,EAAIyB,EAAE,GAAGmI,SAAW,GAvJzE0B,EA0JF,SAASopD,gBAAgBp0D,EAAG0gD,OAAQhhD,GAClC,IAAIyB,EAAIgyD,aAAarY,KAAK4F,OAAO99B,MAAMljB,IACvC,OAAOyB,GAAKnB,EAAEF,EAAIszD,iBAAiBjyD,EAAE,GAAGkI,eAAgB3J,EAAIyB,EAAE,GAAGmI,SAAW,GA3J5E6B,EA8JF,SAASkpD,WAAWr0D,EAAG0gD,OAAQhhD,GAC7B,IAAIyB,EAAI8xD,QAAQnY,KAAK4F,OAAO99B,MAAMljB,IAClC,OAAOyB,GAAKnB,EAAEF,EAAIozD,YAAY/xD,EAAE,GAAGkI,eAAgB3J,EAAIyB,EAAE,GAAGmI,SAAW,GA/JvEvJ,EAkKF,SAASu0D,oBAAoBt0D,EAAG0gD,OAAQhhD,GACtC,OAAO60D,eAAev0D,EAAG4xD,gBAAiBlR,OAAQhhD,IAlKlDM,EAAKquD,gBACLzsD,EAAKysD,gBACLhsC,EAAKssC,kBACL/kD,EAAK2kD,YACL/rC,EAAK+rC,YACL5rC,EAAK2rC,eACLhC,EAAKoC,kBACL5uD,EAAKsuD,iBACL/jD,EAAKmkD,aACL9sD,EA+HF,SAAS8yD,YAAYx0D,EAAG0gD,OAAQhhD,GAC9B,IAAIyB,EAAIwxD,SAAS7X,KAAK4F,OAAO99B,MAAMljB,IACnC,OAAOyB,GAAKnB,EAAE0B,EAAIkxD,aAAazxD,EAAE,GAAGkI,eAAgB3J,EAAIyB,EAAE,GAAGmI,SAAW,GAhIxEwlD,EAAKD,mBACLltD,EAAKotD,0BACLxkD,EAAKkkD,aACLzxC,EAAKywC,yBACLE,EAAKD,sBACLG,EAAKD,mBACLJ,EAAKD,yBACLQ,EAAKD,sBACLtpB,EAmJF,SAASiwB,gBAAgBz0D,EAAG0gD,OAAQhhD,GAClC,OAAO60D,eAAev0D,EAAG8xD,YAAapR,OAAQhhD,IAnJ9CumD,EAsJF,SAASyO,gBAAgB10D,EAAG0gD,OAAQhhD,GAClC,OAAO60D,eAAev0D,EAAG+xD,YAAarR,OAAQhhD,IAtJ9C0L,EAAK6iD,UACLpiD,EAAKmiD,cACLG,EAAKD,UACLpI,IAAK8I,qBAWP,SAAS7H,UAAUjC,UAAWuO,SAC5B,OAAO,SAAS9rD,MACd,IAIIxH,EACA0H,IACAE,OANA+4C,UACAhhD,GAAK,EACLijB,EAAI,EACJxhB,EAAI2jD,UAAUx7C,OAOlB,IAFM/B,gBAAgBC,OAAOD,KAAO,IAAIC,MAAMD,SAErC7H,EAAIyB,GACqB,KAA5B2jD,UAAU3iC,WAAWziB,KACvBghD,OAAO5yC,KAAKg3C,UAAUliC,MAAMD,EAAGjjB,IACgB,OAA1C+H,IAAMolD,KAAK9sD,EAAI+kD,UAAU7e,SAASvmC,KAAcK,EAAI+kD,UAAU7e,SAASvmC,GACvE+H,IAAY,MAAN1H,EAAY,IAAM,KACzB4H,OAAS0rD,QAAQtzD,MAAIA,EAAI4H,OAAOJ,KAAME,MAC1Ci5C,OAAO5yC,KAAK/N,GACZ4iB,EAAIjjB,EAAI,GAKZ,OADAghD,OAAO5yC,KAAKg3C,UAAUliC,MAAMD,EAAGjjB,IACxBghD,OAAO/1C,KAAK,KAIvB,SAASgqD,SAAS7P,UAAW8P,SAC3B,OAAO,SAASlU,QACd,IAEImU,KAAMjqD,IAFN5K,EAAIysD,QAAQ,MAGhB,GAFQ8H,eAAev0D,EAAG8kD,UAAWpE,QAAU,GAAI,IAE1CA,OAAOp3C,OAAQ,OAAO,KAG/B,GAAI,MAAOtJ,EAAG,OAAO,IAAIwH,KAAKxH,EAAE8uD,GAMhC,GAHI,MAAO9uD,IAAGA,EAAE4J,EAAI5J,EAAE4J,EAAI,GAAW,GAAN5J,EAAE0B,GAG7B,MAAO1B,EAAG,CACZ,GAAIA,EAAE6tD,EAAI,GAAK7tD,EAAE6tD,EAAI,GAAI,OAAO,KAC1B,MAAO7tD,IAAIA,EAAEwtD,EAAI,GACnB,MAAOxtD,GAET60D,MAD8BjqD,KAA9BiqD,KAAOtI,QAAQE,QAAQzsD,EAAEoL,KAAgBmgD,aAC5B,GAAa,IAAR3gD,IAAY6gD,UAAUn4B,KAAKuhC,MAAQpJ,UAAUoJ,MAC/DA,KAAO3J,WAAO5B,OAAOuL,KAAkB,GAAX70D,EAAE6tD,EAAI,IAClC7tD,EAAEoL,EAAIypD,KAAK3I,iBACXlsD,EAAEF,EAAI+0D,KAAK5I,cACXjsD,EAAEA,EAAI60D,KAAKxJ,cAAgBrrD,EAAEwtD,EAAI,GAAK,IAGtCqH,MAD8BjqD,KAA9BiqD,KAAOD,QAAQnI,QAAQzsD,EAAEoL,KAAgBP,UAC5B,GAAa,IAARD,IAAYslD,OAAW58B,KAAKuhC,MAAQ3E,OAAW2E,MACjEA,KAAOzF,QAAQ9F,OAAOuL,KAAkB,GAAX70D,EAAE6tD,EAAI,IACnC7tD,EAAEoL,EAAIypD,KAAKlpD,cACX3L,EAAEF,EAAI+0D,KAAK3pD,WACXlL,EAAEA,EAAI60D,KAAK9pD,WAAa/K,EAAEwtD,EAAI,GAAK,QAE5B,MAAOxtD,GAAK,MAAOA,KACtB,MAAOA,IAAIA,EAAEwtD,EAAI,MAAOxtD,EAAIA,EAAEgd,EAAI,EAAI,MAAOhd,EAAI,EAAI,GAC3D4K,IAAM,MAAO5K,EAAIusD,QAAQE,QAAQzsD,EAAEoL,IAAImgD,YAAcqJ,QAAQnI,QAAQzsD,EAAEoL,IAAIP,SAC3E7K,EAAEF,EAAI,EACNE,EAAEA,EAAI,MAAOA,GAAKA,EAAEwtD,EAAI,GAAK,EAAU,EAANxtD,EAAE+tD,GAASnjD,IAAM,GAAK,EAAI5K,EAAEwtD,EAAU,EAANxtD,EAAE2tD,GAAS/iD,IAAM,GAAK,GAKzF,MAAI,MAAO5K,GACTA,EAAE4J,GAAK5J,EAAEmuD,EAAI,IAAM,EACnBnuD,EAAEqK,GAAKrK,EAAEmuD,EAAI,IACN5B,QAAQvsD,IAIV40D,QAAQ50D,IAInB,SAASu0D,eAAev0D,EAAG8kD,UAAWpE,OAAQ/9B,GAO5C,IANA,IAGI5iB,EACAsO,MAJA3O,EAAI,EACJyB,EAAI2jD,UAAUx7C,OACdxJ,EAAI4gD,OAAOp3C,OAIR5J,EAAIyB,GAAG,CACZ,GAAIwhB,GAAK7iB,EAAG,OAAQ,EAEpB,GAAU,MADVC,EAAI+kD,UAAU3iC,WAAWziB,OAIvB,GAFAK,EAAI+kD,UAAU7e,OAAOvmC,OACrB2O,MAAQ4lD,OAAOl0D,KAAK8sD,KAAO/H,UAAU7e,OAAOvmC,KAAOK,MACnC4iB,EAAItU,MAAMrO,EAAG0gD,OAAQ/9B,IAAM,EAAI,OAAQ,OAClD,GAAI5iB,GAAK2gD,OAAOv+B,WAAWQ,KAChC,OAAQ,EAIZ,OAAOA,EAgFT,OA1LA0wC,QAAQ7uB,EAAIuiB,UAAU+K,YAAauB,SACnCA,QAAQpN,EAAIc,UAAUgL,YAAasB,SACnCA,QAAQtzD,EAAIgnD,UAAU6K,gBAAiByB,SACvCM,WAAWnvB,EAAIuiB,UAAU+K,YAAa6B,YACtCA,WAAW1N,EAAIc,UAAUgL,YAAa4B,YACtCA,WAAW5zD,EAAIgnD,UAAU6K,gBAAiB+B,aAsLxChsD,OAAQ,SAAAA,OAASm9C,WACf,IAAIziC,EAAI0kC,UAAUjC,WAAa,GAAIuO,SAEnC,OADAhxC,EAAEnY,SAAW,WAAa,OAAO46C,WAC1BziC,GAEThU,MAAO,SAAAA,MAASy2C,WACd,IAAIpjD,EAAIizD,SAAS7P,WAAa,GAAIuH,WAElC,OADA3qD,EAAEwI,SAAW,WAAa,OAAO46C,WAC1BpjD,GAETirD,UAAW,SAAAA,UAAS7H,WAClB,IAAIziC,EAAI0kC,UAAUjC,WAAa,GAAI6O,YAEnC,OADAtxC,EAAEnY,SAAW,WAAa,OAAO46C,WAC1BziC,GAETuqC,SAAU,SAAAA,SAAS9H,WACjB,IAAIpjD,EAAIizD,SAAS7P,UAAWyH,SAE5B,OADA7qD,EAAEwI,SAAW,WAAa,OAAO46C,WAC1BpjD,IClVF+lD,CAAa9W,YACtB+b,WAAapH,yBAAO39C,OACR29C,yBAAOj3C,MACnBs+C,UAAYrH,yBAAOqH,UACnBC,SAAWtH,yBAAOsH,SACXtH,yBAjBTkC,EACEqK,SAAU,SACVtqD,KAAM,aACNyqD,KAAM,eACNE,SAAU,KAAM,MAChBE,MAAO,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YACzEE,WAAY,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACtDE,QAAS,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YACvHE,aAAc,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,SCR7ElrD,KAAKhG,UAAUszD,aAEzBnI,UARoB,0BCMV,IAAInlD,KAAK,6BAEnBolD,SDRoB,yBCM1B,ICAImI,oBAAiB,IACjBtL,oBAAkC,GAAjBsL,oBACjBC,kBAAgC,GAAjBvL,oBACfwL,iBAA6B,GAAfD,kBACdtL,kBAA6B,EAAduL,iBACfC,cAA8B,GAAdD,iBAChBE,aAA6B,IAAdF,iBAEnB,SAAS1tD,UAAK3G,GACZ,OAAO,IAAI4G,KAAK5G,GAGlB,SAAS2rC,YAAO3rC,GACd,OAAOA,aAAa4G,MAAQ5G,GAAK,IAAI4G,MAAM5G,GAGtC,SAASw0D,SAASxpD,KAAMX,MAAO4pD,KAAMjqD,IAAKk/C,KAAMD,OAAQF,OAAQH,YAAa7hD,QAClF,IAAIynC,MAAQ6U,WAAWP,oBAAeC,YAClCvT,OAAShB,MAAMgB,OACf9xB,OAAS8wB,MAAM9wB,OAEf+2C,kBAAoB1tD,OAAO,OAC3B2tD,aAAe3tD,OAAO,OACtB4tD,aAAe5tD,OAAO,SACtB6tD,WAAa7tD,OAAO,SACpB8tD,UAAY9tD,OAAO,SACnB+tD,WAAa/tD,OAAO,SACpB8rD,YAAc9rD,OAAO,MACrBwoD,WAAaxoD,OAAO,MAEpBguD,gBACDhM,OAAS,EAAQoL,sBACjBpL,OAAS,EAAI,EAAIoL,sBACjBpL,OAAQ,GAAI,GAAKoL,sBACjBpL,OAAQ,GAAI,GAAKoL,sBACjBlL,OAAS,EAAQJ,sBACjBI,OAAS,EAAI,EAAIJ,sBACjBI,OAAQ,GAAI,GAAKJ,sBACjBI,OAAQ,GAAI,GAAKJ,sBACfK,KAAO,EAAQkL,oBACflL,KAAO,EAAI,EAAIkL,oBACflL,KAAO,EAAI,EAAIkL,oBACflL,KAAM,GAAI,GAAKkL,oBACdpqD,IAAM,EAAQqqD,mBACdrqD,IAAM,EAAI,EAAIqqD,mBACfJ,KAAO,EAAQnL,oBAChBz+C,MAAQ,EAAQiqD,gBAChBjqD,MAAQ,EAAI,EAAIiqD,gBACftpD,KAAO,EAAQupD,eAGpB,SAASpN,WAAWxgD,MAClB,OAAQoiD,OAAOpiD,MAAQA,KAAO8tD,kBACxBxL,OAAOtiD,MAAQA,KAAO+tD,aACtBxL,KAAKviD,MAAQA,KAAOguD,aACpB3qD,IAAIrD,MAAQA,KAAOiuD,WACnBvqD,MAAM1D,MAAQA,KAAQstD,KAAKttD,MAAQA,KAAOkuD,UAAYC,WACtD9pD,KAAKrE,MAAQA,KAAOksD,YACpBtD,YAAY5oD,MAGpB,SAASquD,aAAa3N,SAAU7iD,MAAOsnC,KAAMC,MAM3C,GALgB,MAAZsb,WAAkBA,SAAW,IAKT,iBAAbA,SAAuB,CAChC,IAAIlE,OAASt4C,KAAK8nB,IAAImZ,KAAOtnC,OAAS6iD,SAClCvoD,EAAIssC,SAAS,SAAStsC,GAAK,OAAOA,EAAE,KAAO0sC,MAAMupB,cAAe5R,QAChErkD,IAAMi2D,cAAcrsD,QACtBqjC,KAAOU,SAASjoC,MAAQ+vD,aAAczoB,KAAOyoB,aAAclN,UAC3DA,SAAWr8C,MACFlM,GAETitC,MADAjtC,EAAIi2D,cAAc5R,OAAS4R,cAAcj2D,EAAI,GAAG,GAAKi2D,cAAcj2D,GAAG,GAAKqkD,OAASrkD,EAAI,EAAIA,IACnF,GACTuoD,SAAWvoD,EAAE,KAEbitC,KAAOlhC,KAAKmQ,IAAIyxB,SAASjoC,MAAOsnC,KAAMub,UAAW,GACjDA,SAAWuB,aAIf,OAAe,MAAR7c,KAAesb,SAAWA,SAAS9hC,MAAMwmB,MAsClD,OAnCAyC,MAAMgB,OAAS,SAAShlC,GACtB,OAAO,IAAI5D,KAAK4oC,OAAOhlC,KAGzBgkC,MAAM9wB,OAAS,SAASoK,GACtB,OAAO1b,UAAU1D,OAASgV,OAAOzO,cAAIhQ,KAAK6oB,EAAG6jB,cAAWjuB,SAASzO,IAAItI,YAGvE6nC,MAAMpC,MAAQ,SAASib,SAAUtb,MAC/B,IAII/rC,EAJAZ,EAAIse,SACJi+B,GAAKv8C,EAAE,GACPw8C,GAAKx8C,EAAEA,EAAEsJ,OAAS,GAClB9I,EAAIg8C,GAAKD,GAKb,OAHI/7C,IAAGI,EAAI27C,GAAIA,GAAKC,GAAIA,GAAK57C,GAE7BA,GADAA,EAAIg1D,aAAa3N,SAAU1L,GAAIC,GAAI7P,OAC3B/rC,EAAEuI,MAAMozC,GAAIC,GAAK,MAClBh8C,EAAII,EAAEmrB,UAAYnrB,GAG3BwuC,MAAM2Y,WAAa,SAAS3zB,MAAO0wB,WACjC,OAAoB,MAAbA,UAAoBiD,WAAapgD,OAAOm9C,YAGjD1V,MAAM4Y,KAAO,SAASC,SAAUtb,MAC9B,IAAI3sC,EAAIse,SACR,OAAQ2pC,SAAW2N,aAAa3N,SAAUjoD,EAAE,GAAIA,EAAEA,EAAEsJ,OAAS,GAAIqjC,OAC3DruB,OAAO0pC,KAAKhoD,EAAGioD,WACf7Y,OAGRA,MAAMC,KAAO,WACX,OAAOA,KAAKD,MAAOgmB,SAASxpD,KAAMX,MAAO4pD,KAAMjqD,IAAKk/C,KAAMD,OAAQF,OAAQH,YAAa7hD,UAGlFynC,MAGM,IAAAymB,SAAA,WACb,OAAOT,SAAS/F,SAAUyG,UAAWC,OAAU3G,QAAS4G,SAAUC,WAAYC,WAAYC,gBAAiBzJ,YAAYpuC,QAAQ,IAAI9W,KAAK,IAAM,EAAG,GAAI,IAAIA,KAAK,IAAM,EAAG,MCrI1J4uD,WAAA,SAASz0D,GACtB,OAAOA,EAAEsO,MAAM,SAASJ,IAAI,SAAS20B,GACnC,MAAO,IAAMA,KCAF8a,sBAAO,gECAPA,uBAAO,4HCAPA,YCAAA,WAAO,4HDAPA,WAAO,6HECP+W,cAAyBtY,oBAAU,IAAK,GAAK,GAAMA,qBAAW,IAAK,GAAK,ICArEsY,cAAyBtY,qBAAW,IAAK,IAAM,KAAOA,oBAAU,GAAI,IAAM,KAE1EsY,cAAyBtY,oBAAU,IAAK,IAAM,KAAOA,oBAAU,GAAI,IAAM,KAE7EA,sBCLd,SAASuY,KAAKntD,OACZ,IAAIhI,EAAIgI,MAAMG,OACd,OAAO,SAAS1I,GACd,OAAOuI,MAAMsC,KAAKmQ,IAAI,EAAGnQ,KAAKkQ,IAAIxa,EAAI,EAAGsK,KAAKoN,MAAMjY,EAAIO,OAI7Cm1D,KAAKhX,WAAO,qgDAERgX,KAAKhX,WAAO,qgDAEVgX,KAAKhX,WAAO,qgDAEbgX,KAAKhX,WAAO,qgDCbjB,SAASiX,WAAWC,cACjC,IAAItO,GAAK,EACLC,GAAK,EACLnE,OAAQ,EAEZ,SAAS5U,MAAM5K,GACb,IAAI5jC,GAAK4jC,EAAI0jB,KAAOC,GAAKD,IACzB,OAAOsO,aAAaxS,MAAQv4C,KAAKmQ,IAAI,EAAGnQ,KAAKkQ,IAAI,EAAG/a,IAAMA,GAmB5D,OAhBAwuC,MAAM9wB,OAAS,SAASoK,GACtB,OAAO1b,UAAU1D,QAAU4+C,IAAMx/B,EAAE,GAAIy/B,IAAMz/B,EAAE,GAAI0mB,QAAU8Y,GAAIC,KAGnE/Y,MAAM4U,MAAQ,SAASt7B,GACrB,OAAO1b,UAAU1D,QAAU06C,QAAUt7B,EAAG0mB,OAAS4U,OAGnD5U,MAAMonB,aAAe,SAAS9tC,GAC5B,OAAO1b,UAAU1D,QAAUktD,aAAe9tC,EAAG0mB,OAASonB,cAGxDpnB,MAAMC,KAAO,WACX,OAAOknB,WAAWC,cAAcl4C,QAAQ4pC,GAAIC,KAAKnE,MAAMA,QAGlD8D,UAAU1Y,OC5BJ,IAAAqnB,8BAAA,SAAS3R,WAEtB,IADA,IAAI3jD,EAAI2jD,UAAUx7C,OAAS,EAAI,EAAGg2C,OAAS,IAAI7uC,MAAMtP,GAAIzB,EAAI,EACtDA,EAAIyB,GAAGm+C,OAAO5/C,GAAK,IAAMolD,UAAUliC,MAAU,EAAJljB,EAAa,IAAJA,GACzD,OAAO4/C,QCDMA,QCAAA,8BAAO,gEDAPA,8BAAO,qDEAPA,oCAAO,oDCAPA,qCAAO,4ECAPA,sCAAO,0DCAPA,sCAAO,oDCAPA,mCAAO,0DCAPA,mCAAO,oDCAPA,mCAAO,4ECAPoX,SAAA,SAASC,QACtB,OAAOC,SAAoBD,OAAOA,OAAOrtD,OAAS,KCAzCqtD,YAAS,IAAIlmD,MAAM,GAAG0S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAtT,IAAIyvC,+BAESgX,cAAKK,aCZTA,YAAS,IAAIlmD,MAAM,GAAG0S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAtT,IAAIyvC,+BAESgX,cAAKK,aCZTA,YAAS,IAAIlmD,MAAM,GAAG0S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAtT,IAAIyvC,+BAESgX,cAAKK,aCALL,cAZK,IAAI7lD,MAAM,GAAG0S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAtT,IAAIyvC,gCCESgX,cAZK,IAAI7lD,MAAM,GAAG0S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAtT,IAAIyvC,gCCESgX,cAZK,IAAI7lD,MAAM,GAAG0S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAtT,IAAIyvC,gCCESgX,gBAZK,IAAI7lD,MAAM,GAAG0S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAtT,IAAIyvC,gCCESgX,gBAZK,IAAI7lD,MAAM,GAAG0S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAtT,IAAIyvC,gCCESgX,kBAZK,IAAI7lD,MAAM,GAAG0S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAtT,IAAIyvC,gCCASgX,cAVK,IAAI7lD,MAAM,GAAG0S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAtT,IAAIyvC,gCCESgX,cAVK,IAAI7lD,MAAM,GAAG0S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAtT,IAAIyvC,gCCESgX,cAVK,IAAI7lD,MAAM,GAAG0S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAtT,IAAIyvC,gCCE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","file":"muze.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"muze\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"muze\"] = factory();\n\telse\n\t\troot[\"muze\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"DataModel\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DataModel\"] = factory();\n\telse\n\t\troot[\"DataModel\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","const DataModel = require('./export');\n\nmodule.exports = DataModel.default ? DataModel.default : DataModel;\n","/**\n * DataFormat Enum defines the format of the input data.\n * Based on the format of the data the respective adapter is loaded.\n *\n * @readonly\n * @enum {string}\n */\nconst DataFormat = {\n    FLAT_JSON: 'FlatJSON',\n    DSV_STR: 'DSVStr',\n    DSV_ARR: 'DSVArr',\n    AUTO: 'Auto'\n};\n\nexport default DataFormat;\n","/**\n * DimensionSubtype enum defines the sub types of the Dimensional Field.\n *\n * @readonly\n * @enum {string}\n */\nconst DimensionSubtype = {\n    CATEGORICAL: 'categorical',\n    TEMPORAL: 'temporal',\n    GEO: 'geo',\n    BINNED: 'binned'\n};\n\nexport default DimensionSubtype;\n","/**\n * MeasureSubtype enum defines the sub types of the Measure Field.\n *\n * @readonly\n * @enum {string}\n */\nconst MeasureSubtype = {\n    CONTINUOUS: 'continuous'\n};\n\nexport default MeasureSubtype;\n","/**\n * FieldType enum defines the high level field based on which visuals are controlled.\n * Measure in a high level is numeric field and Dimension in a high level is string field.\n *\n * @readonly\n * @enum {string}\n */\nconst FieldType = {\n    MEASURE: 'measure',\n    DIMENSION: 'dimension'\n};\n\nexport default FieldType;\n","/**\n * Filtering mode enum defines the filering modes of DataModel.\n *\n * @readonly\n * @enum {string}\n */\nconst FilteringMode = {\n    NORMAL: 'normal',\n    INVERSE: 'inverse',\n    ALL: 'all'\n};\n\nexport default FilteringMode;\n","/**\n * Group by function names\n *\n * @readonly\n * @enum {string}\n */\nconst GROUP_BY_FUNCTIONS = {\n    SUM: 'sum',\n    AVG: 'avg',\n    MIN: 'min',\n    MAX: 'max',\n    FIRST: 'first',\n    LAST: 'last',\n    COUNT: 'count',\n    STD: 'std'\n};\n\nexport default GROUP_BY_FUNCTIONS;\n","/**\n * Creates a JS native date object from input\n *\n * @param {string | number | Date} date Input using which date object to be created\n * @return {Date} : JS native date object\n */\nfunction convertToNativeDate (date) {\n    if (date instanceof Date) {\n        return date;\n    }\n\n    return new Date(date);\n}\n/**\n * Apply padding before a number if its less than 1o. This is used when constant digit's number to be returned\n * between 0 - 99\n *\n * @param {number} n Input to be padded\n * @return {string} Padded number\n */\nfunction pad (n) {\n    return (n < 10) ? (`0${n}`) : n;\n}\n/*\n * DateFormatter utility to convert any date format to any other date format\n * DateFormatter parse a date time stamp specified by a user abiding by rules which are defined\n * by user in terms of token. It creates JS native date object from the user specified format.\n * That native date can also be displayed\n * in any specified format.\n * This utility class only takes care of format conversion only\n */\n\n/*\n * Escapes all the special character that are used in regular expression.\n * Like\n * RegExp.escape('sgfd-$') // Output: sgfd\\-\\$\n *\n * @param text {String} : text which is to be escaped\n */\nRegExp.escape = function (text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n};\n\n/**\n * DateTimeFormatter class to convert any user format of date time stamp to any other format\n * of date time stamp.\n *\n * @param {string} format Format of the date given. For the above date,\n * 'year: %Y, month: %b, day: %d'.\n * @class\n */\n/* istanbul ignore next */ function DateTimeFormatter (format) {\n    this.format = format;\n    this.dtParams = undefined;\n    this.nativeDate = undefined;\n}\n\n// The identifier of the tokens\nDateTimeFormatter.TOKEN_PREFIX = '%';\n\n// JS native Date constructor takes the date params (year, month, etc) in a certail sequence.\n// This defines the sequence of the date parameters in the constructor.\nDateTimeFormatter.DATETIME_PARAM_SEQUENCE = {\n    YEAR: 0,\n    MONTH: 1,\n    DAY: 2,\n    HOUR: 3,\n    MINUTE: 4,\n    SECOND: 5,\n    MILLISECOND: 6\n};\n\n/*\n * This is a default number parsing utility. It tries to parse a number in integer, if parsing is unsuccessful, it\n * gives back a default value.\n *\n * @param: defVal {Number} : Default no if the parsing to integer is not successful\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be parsed.\n */\nDateTimeFormatter.defaultNumberParser = function (defVal) {\n    return function (val) {\n        let parsedVal;\n        if (isFinite(parsedVal = parseInt(val, 10))) {\n            return parsedVal;\n        }\n\n        return defVal;\n    };\n};\n\n/*\n * This is a default number range utility. It tries to find an element in the range. If not found it returns a\n * default no as an index.\n *\n * @param: range {Array} : The list which is to be serached\n * @param: defVal {Number} : Default no if the serach and find does not return anything\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be found\n */\nDateTimeFormatter.defaultRangeParser = function (range, defVal) {\n    return (val) => {\n        let i;\n        let l;\n\n        if (!val) { return defVal; }\n\n        const nVal = val.toLowerCase();\n\n        for (i = 0, l = range.length; i < l; i++) {\n            if (range[i].toLowerCase() === nVal) {\n                return i;\n            }\n        }\n\n        if (i === undefined) {\n            return defVal;\n        }\n        return null;\n    };\n};\n\n/*\n * Defines the tokens which are supporter by the dateformatter. Using this definitation a value gets extracted from\n * the user specifed date string. This also formats the value for display purpose from native JS date.\n * The definition of each token contains the following named properties\n * {\n *     %token_name% : {\n *         name: name of the token, this is used in reverse lookup,\n *         extract: a function that returns the regular expression to extract that piece of information. All the\n *                  regex should be gouped by using ()\n *         parser: a function which receives value extracted by the above regex and parse it to get the date params\n *         formatter: a formatter function that takes milliseconds or JS Date object and format the param\n *                  represented by the token only.\n *     }\n * }\n *\n * @return {Object} : Definition of the all the supported tokens.\n */\nDateTimeFormatter.getTokenDefinitions = function () {\n    const daysDef = {\n        short: [\n            'Sun',\n            'Mon',\n            'Tue',\n            'Wed',\n            'Thu',\n            'Fri',\n            'Sat'\n        ],\n        long: [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday'\n        ]\n    };\n    const monthsDef = {\n        short: [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n            'Oct',\n            'Nov',\n            'Dec'\n        ],\n        long: [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December'\n        ]\n    };\n\n    const definitions = {\n        H: {\n            // 24 hours format\n            name: 'H',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n\n                return d.getHours().toString();\n            }\n        },\n        l: {\n            // 12 hours format\n            name: 'l',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours() % 12;\n\n                return (hours === 0 ? 12 : hours).toString();\n            }\n        },\n        p: {\n            // AM or PM\n            name: 'p',\n            index: 3,\n            extract () { return '(AM|PM)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'AM' : 'PM');\n            }\n        },\n        P: {\n            // am or pm\n            name: 'P',\n            index: 3,\n            extract () { return '(am|pm)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'am' : 'pm');\n            }\n        },\n        M: {\n            // Two digit minutes 00 - 59\n            name: 'M',\n            index: 4,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const mins = d.getMinutes();\n\n                return pad(mins);\n            }\n        },\n        S: {\n            // Two digit seconds 00 - 59\n            name: 'S',\n            index: 5,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const seconds = d.getSeconds();\n\n                return pad(seconds);\n            }\n        },\n        K: {\n            // Milliseconds\n            name: 'K',\n            index: 6,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const ms = d.getMilliseconds();\n\n                return ms.toString();\n            }\n        },\n        a: {\n            // Short name of day, like Mon\n            name: 'a',\n            index: 2,\n            extract () { return `(${daysDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.short[day]).toString();\n            }\n        },\n        A: {\n            // Long name of day, like Monday\n            name: 'A',\n            index: 2,\n            extract () { return `(${daysDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.long[day]).toString();\n            }\n        },\n        e: {\n            // 8 of March, 11 of November\n            name: 'e',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return day.toString();\n            }\n        },\n        d: {\n            // 08 of March, 11 of November\n            name: 'd',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return pad(day);\n            }\n        },\n        b: {\n            // Short month, like Jan\n            name: 'b',\n            index: 1,\n            extract () { return `(${monthsDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.short[month]).toString();\n            }\n        },\n        B: {\n            // Long month, like January\n            name: 'B',\n            index: 1,\n            extract () { return `(${monthsDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.long[month]).toString();\n            }\n        },\n        m: {\n            // Two digit month of year like 01 for January\n            name: 'm',\n            index: 1,\n            extract () { return '(\\\\d+)'; },\n            parser (val) { return DateTimeFormatter.defaultNumberParser()(val) - 1; },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return pad(month + 1);\n            }\n        },\n        y: {\n            // Short year like 90 for 1990\n            name: 'y',\n            index: 0,\n            extract () { return '(\\\\d{2})'; },\n            parser (val) {\n                let result;\n                if (val) {\n                    const l = val.length;\n                    val = val.substring(l - 2, l);\n                }\n                let parsedVal = DateTimeFormatter.defaultNumberParser()(val);\n                let presentDate = new Date();\n                let presentYear = Math.trunc((presentDate.getFullYear()) / 100);\n\n                result = `${presentYear}${parsedVal}`;\n\n                if (convertToNativeDate(result).getFullYear() > presentDate.getFullYear()) {\n                    result = `${presentYear - 1}${parsedVal}`;\n                }\n                return convertToNativeDate(result).getFullYear();\n            },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                let year = d.getFullYear().toString();\n                let l;\n\n                if (year) {\n                    l = year.length;\n                    year = year.substring(l - 2, l);\n                }\n\n                return year;\n            }\n        },\n        Y: {\n            // Long year like 1990\n            name: 'Y',\n            index: 0,\n            extract () { return '(\\\\d{4})'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const year = d.getFullYear().toString();\n\n                return year;\n            }\n        }\n    };\n\n    return definitions;\n};\n\n/*\n * The tokens which works internally is not user friendly in terms of memorizing the names. This gives a formal\n * definition to the informal notations.\n *\n * @return {Object} : Formal definition of the tokens\n */\nDateTimeFormatter.getTokenFormalNames = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n\n    return {\n        HOUR: definitions.H,\n        HOUR_12: definitions.l,\n        AMPM_UPPERCASE: definitions.p,\n        AMPM_LOWERCASE: definitions.P,\n        MINUTE: definitions.M,\n        SECOND: definitions.S,\n        SHORT_DAY: definitions.a,\n        LONG_DAY: definitions.A,\n        DAY_OF_MONTH: definitions.e,\n        DAY_OF_MONTH_CONSTANT_WIDTH: definitions.d,\n        SHORT_MONTH: definitions.b,\n        LONG_MONTH: definitions.B,\n        MONTH_OF_YEAR: definitions.m,\n        SHORT_YEAR: definitions.y,\n        LONG_YEAR: definitions.Y\n    };\n};\n\n/*\n * This defines the rules and declares dependencies that resolves a date parameter (year, month etc) from\n * the date time parameter array.\n *\n * @return {Object} : An object that contains dependencies and a resolver function. The dependencies values are fed\n *                  to the resolver function in that particular sequence only.\n */\nDateTimeFormatter.tokenResolver = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const defaultResolver = (...args) => { // eslint-disable-line require-jsdoc\n        let i = 0;\n        let arg;\n        let targetParam;\n        const l = args.length;\n\n        for (; i < l; i++) {\n            arg = args[i];\n            if (args[i]) {\n                targetParam = arg;\n            }\n        }\n\n        if (!targetParam) { return null; }\n\n        return targetParam[0].parser(targetParam[1]);\n    };\n\n    return {\n        YEAR: [definitions.y, definitions.Y,\n            defaultResolver\n        ],\n        MONTH: [definitions.b, definitions.B, definitions.m,\n            defaultResolver\n        ],\n        DAY: [definitions.a, definitions.A, definitions.e, definitions.d,\n            defaultResolver\n        ],\n        HOUR: [definitions.H, definitions.l, definitions.p, definitions.P,\n            function (hourFormat24, hourFormat12, ampmLower, ampmUpper) {\n                let targetParam;\n                let amOrpm;\n                let isPM;\n                let val;\n\n                if (hourFormat12 && (amOrpm = (ampmLower || ampmUpper))) {\n                    if (amOrpm[0].parser(amOrpm[1]) === 'pm') {\n                        isPM = true;\n                    }\n\n                    targetParam = hourFormat12;\n                } else if (hourFormat12) {\n                    targetParam = hourFormat12;\n                } else {\n                    targetParam = hourFormat24;\n                }\n\n                if (!targetParam) { return null; }\n\n                val = targetParam[0].parser(targetParam[1]);\n                if (isPM) {\n                    val += 12;\n                }\n                return val;\n            }\n        ],\n        MINUTE: [definitions.M,\n            defaultResolver\n        ],\n        SECOND: [definitions.S,\n            defaultResolver\n        ]\n    };\n};\n\n/*\n * Finds token from the format rule specified by a user.\n * @param format {String} : The format of the input date specified by the user\n * @return {Array} : An array of objects which contains the available token and their occurence index in the format\n */\nDateTimeFormatter.findTokens = function (format) {\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenLiterals = Object.keys(definitions);\n    const occurrence = [];\n    let i;\n    let forwardChar;\n\n    while ((i = format.indexOf(tokenPrefix, i + 1)) >= 0) {\n        forwardChar = format[i + 1];\n        if (tokenLiterals.indexOf(forwardChar) === -1) { continue; }\n\n        occurrence.push({\n            index: i,\n            token: forwardChar\n        });\n    }\n\n    return occurrence;\n};\n\n/*\n * Format any JS date to a specified date given by user.\n *\n * @param date {Number | Date} : The date object which is to be formatted\n * @param format {String} : The format using which the date will be formatted for display\n */\nDateTimeFormatter.formatAs = function (date, format) {\n    const nDate = convertToNativeDate(date);\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    let formattedStr = String(format);\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    let token;\n    let formattedVal;\n    let i;\n    let l;\n\n    for (i = 0, l = occurrence.length; i < l; i++) {\n        token = occurrence[i].token;\n        formattedVal = definitions[token].formatter(nDate);\n        formattedStr = formattedStr.replace(new RegExp(tokenPrefix + token, 'g'), formattedVal);\n    }\n\n    return formattedStr;\n};\n\n/*\n * Parses the user specified date string to extract the date time params.\n *\n * @return {Array} : Value of date time params in an array [year, month, day, hour, minutes, seconds, milli]\n */\nDateTimeFormatter.prototype.parse = function (dateTimeStamp, options) {\n    const tokenResolver = DateTimeFormatter.tokenResolver();\n    const dtParams = this.extractTokenValue(dateTimeStamp);\n    const dtParamSeq = DateTimeFormatter.DATETIME_PARAM_SEQUENCE;\n    const noBreak = options && options.noBreak;\n    const dtParamArr = [];\n    const args = [];\n    let resolverKey;\n    let resolverParams;\n    let resolverFn;\n    let val;\n    let i;\n    let param;\n    let resolvedVal;\n    let l;\n    let result = [];\n\n    for (resolverKey in tokenResolver) {\n        if (!{}.hasOwnProperty.call(tokenResolver, resolverKey)) { continue; }\n\n        args.length = 0;\n        resolverParams = tokenResolver[resolverKey];\n        resolverFn = resolverParams.splice(resolverParams.length - 1, 1)[0];\n\n        for (i = 0, l = resolverParams.length; i < l; i++) {\n            param = resolverParams[i];\n            val = dtParams[param.name];\n\n            if (val === undefined) {\n                args.push(null);\n            } else {\n                args.push([param, val]);\n            }\n        }\n\n        resolvedVal = resolverFn.apply(this, args);\n\n        if ((resolvedVal === undefined || resolvedVal === null) && !noBreak) {\n            break;\n        }\n\n        dtParamArr[dtParamSeq[resolverKey]] = resolvedVal;\n    }\n\n    if (dtParamArr.length && this.checkIfOnlyYear(dtParamArr.length))\n     {\n        result.unshift(dtParamArr[0], 0, 1); }\n    else {\n        result.unshift(...dtParamArr);\n    }\n\n    return result;\n};\n\n/*\n * Extract the value of the token from user specified date time string.\n *\n * @return {Object} : An key value pair which contains the tokens as key and value as pair\n */\nDateTimeFormatter.prototype.extractTokenValue = function (dateTimeStamp) {\n    const format = this.format;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const tokenObj = {};\n\n    let lastOccurrenceIndex;\n    let occObj;\n    let occIndex;\n    let targetText;\n    let regexFormat;\n\n    let l;\n    let i;\n\n    regexFormat = String(format);\n\n    const tokenArr = occurrence.map(obj => obj.token);\n    const occurrenceLength = occurrence.length;\n    for (i = occurrenceLength - 1; i >= 0; i--) {\n        occIndex = occurrence[i].index;\n\n        if (occIndex + 1 === regexFormat.length - 1) {\n            lastOccurrenceIndex = occIndex;\n            continue;\n        }\n\n        if (lastOccurrenceIndex === undefined) {\n            lastOccurrenceIndex = regexFormat.length;\n        }\n\n        targetText = regexFormat.substring(occIndex + 2, lastOccurrenceIndex);\n        regexFormat = regexFormat.substring(0, occIndex + 2) +\n            RegExp.escape(targetText) +\n            regexFormat.substring(lastOccurrenceIndex, regexFormat.length);\n\n        lastOccurrenceIndex = occIndex;\n    }\n\n    for (i = 0; i < occurrenceLength; i++) {\n        occObj = occurrence[i];\n        regexFormat = regexFormat.replace(tokenPrefix + occObj.token, definitions[occObj.token].extract());\n    }\n\n    const extractValues = dateTimeStamp.match(new RegExp(regexFormat)) || [];\n    extractValues.shift();\n\n    for (i = 0, l = tokenArr.length; i < l; i++) {\n        tokenObj[tokenArr[i]] = extractValues[i];\n    }\n    return tokenObj;\n};\n\n/*\n * Give back the JS native date formed from  user specified date string\n *\n * @return {Date} : Native JS Date\n */\nDateTimeFormatter.prototype.getNativeDate = function (dateTimeStamp) {\n    let date = null;\n    if (Number.isFinite(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    } else if (!this.format && Date.parse(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    }\n    else {\n        const dtParams = this.dtParams = this.parse(dateTimeStamp);\n        if (dtParams.length) {\n            this.nativeDate = new Date(...dtParams);\n            date = this.nativeDate;\n        }\n    }\n    return date;\n};\n\nDateTimeFormatter.prototype.checkIfOnlyYear = function(len) {\n    return len === 1 && this.format.match(/y|Y/g).length;\n};\n\n/*\n * Represents JS native date to a user specified format.\n *\n * @param format {String} : The format according to which the date is to be represented\n * @return {String} : The formatted date string\n */\nDateTimeFormatter.prototype.formatAs = function (format, dateTimeStamp) {\n    let nativeDate;\n\n    if (dateTimeStamp) {\n        nativeDate = this.nativeDate = this.getNativeDate(dateTimeStamp);\n    } else if (!(nativeDate = this.nativeDate)) {\n        nativeDate = this.getNativeDate(dateTimeStamp);\n    }\n\n    return DateTimeFormatter.formatAs(nativeDate, format);\n};\n\nexport { DateTimeFormatter as default };\n","/**\n * The utility function to calculate major column.\n *\n * @param {Object} store - The store object.\n * @return {Function} Returns the push function.\n */\nexport default (store) => {\n    let i = 0;\n    return (...fields) => {\n        fields.forEach((val, fieldIndex) => {\n            if (!(store[fieldIndex] instanceof Array)) {\n                store[fieldIndex] = Array.from({ length: i });\n            }\n            store[fieldIndex].push(val);\n        });\n        i++;\n    };\n};\n","/* eslint-disable */\nconst OBJECTSTRING = 'object';\nconst objectToStrFn = Object.prototype.toString;\nconst objectToStr = '[object Object]';\nconst arrayToStr = '[object Array]';\n\nfunction checkCyclicRef(obj, parentArr) {\n    let i = parentArr.length;\n    let bIndex = -1;\n\n    while (i) {\n        if (obj === parentArr[i]) {\n            bIndex = i;\n            return bIndex;\n        }\n        i -= 1;\n    }\n\n    return bIndex;\n}\n\nfunction merge(obj1, obj2, skipUndef, tgtArr, srcArr) {\n    var item,\n        srcVal,\n        tgtVal,\n        str,\n        cRef;\n    // check whether obj2 is an array\n    // if array then iterate through it's index\n    // **** MOOTOOLS precution\n\n    if (!srcArr) {\n        tgtArr = [obj1];\n        srcArr = [obj2];\n    }\n    else {\n        tgtArr.push(obj1);\n        srcArr.push(obj2);\n    }\n\n    if (obj2 instanceof Array) {\n        for (item = 0; item < obj2.length; item += 1) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (typeof tgtVal !== OBJECTSTRING) {\n                if (!(skipUndef && tgtVal === undefined)) {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                    srcVal = obj1[item] = tgtVal instanceof Array ? [] : {};\n                }\n                cRef = checkCyclicRef(tgtVal, srcArr);\n                if (cRef !== -1) {\n                    srcVal = obj1[item] = tgtArr[cRef];\n                }\n                else {\n                    merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                }\n            }\n        }\n    }\n    else {\n        for (item in obj2) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (tgtVal !== null && typeof tgtVal === OBJECTSTRING) {\n                // Fix for issue BUG: FWXT-602\n                // IE < 9 Object.prototype.toString.call(null) gives\n                // '[object Object]' instead of '[object Null]'\n                // that's why null value becomes Object in IE < 9\n                str = objectToStrFn.call(tgtVal);\n                if (str === objectToStr) {\n                    if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                        srcVal = obj1[item] = {};\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else if (str === arrayToStr) {\n                    if (srcVal === null || !(srcVal instanceof Array)) {\n                        srcVal = obj1[item] = [];\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (skipUndef && tgtVal === undefined) {\n                    continue;\n                }\n                obj1[item] = tgtVal;\n            }\n        }\n    }\n    return obj1;\n}\n\n\nfunction extend2 (obj1, obj2, skipUndef) {\n    //if none of the arguments are object then return back\n    if (typeof obj1 !== OBJECTSTRING && typeof obj2 !== OBJECTSTRING) {\n        return null;\n    }\n\n    if (typeof obj2 !== OBJECTSTRING || obj2 === null) {\n        return obj1;\n    }\n\n    if (typeof obj1 !== OBJECTSTRING) {\n        obj1 = obj2 instanceof Array ? [] : {};\n    }\n    merge(obj1, obj2, skipUndef);\n    return obj1;\n}\n\nexport { extend2 as default };\n","import { DataFormat } from '../enums';\n\n/**\n * Checks whether the value is an array.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an array otherwise returns false.\n */\nexport function isArray (val) {\n    return Array.isArray(val);\n}\n\n/**\n * Checks whether the value is an object.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an object otherwise returns false.\n */\nexport function isObject (val) {\n    return val === Object(val);\n}\n\n/**\n * Checks whether the value is a string value.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is a string value otherwise returns false.\n */\nexport function isString (val) {\n    return typeof val === 'string';\n}\n\n/**\n * Checks whether the value is callable.\n *\n * @param {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is callable otherwise returns false.\n */\nexport function isCallable (val) {\n    return typeof val === 'function';\n}\n\n/**\n * Returns the unique values from the input array.\n *\n * @param {Array} data - The input array.\n * @return {Array} Returns a new array of unique values.\n */\nexport function uniqueValues (data) {\n    return [...new Set(data)];\n}\n\nexport const getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Checks Whether two arrays have same content.\n *\n * @param {Array} arr1 - The first array.\n * @param {Array} arr2 - The 2nd array.\n * @return {boolean} Returns whether two array have same content.\n */\nexport function isArrEqual(arr1, arr2) {\n    if (!isArray(arr1) || !isArray(arr2)) {\n        return arr1 === arr2;\n    }\n\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * It is the default number format function for the measure field type.\n *\n * @param {any} val - The input value.\n * @return {number} Returns a number value.\n */\nexport function formatNumber(val) {\n    return val;\n}\n\n/**\n * Returns the detected data format.\n *\n * @param {any} data - The input data to be tested.\n * @return {string} Returns the data format name.\n */\nexport const detectDataFormat = (data) => {\n    if (isString(data)) {\n        return DataFormat.DSV_STR;\n    } else if (isArray(data) && isArray(data[0])) {\n        return DataFormat.DSV_ARR;\n    } else if (isArray(data) && (data.length === 0 || isObject(data[0]))) {\n        return DataFormat.FLAT_JSON;\n    }\n    return null;\n};\n","import { FieldType } from './enums';\nimport { getUniqueId } from './utils';\n\nconst fieldStore = {\n    data: {},\n\n    createNamespace (fieldArr, name) {\n        const dataId = name || getUniqueId();\n\n        this.data[dataId] = {\n            name: dataId,\n            fields: fieldArr,\n\n            fieldsObj () {\n                let fieldsObj = this._cachedFieldsObj;\n\n                if (!fieldsObj) {\n                    fieldsObj = this._cachedFieldsObj = {};\n                    this.fields.forEach((field) => {\n                        fieldsObj[field.name()] = field;\n                    });\n                }\n                return fieldsObj;\n            },\n            getMeasure () {\n                let measureFields = this._cachedMeasure;\n\n                if (!measureFields) {\n                    measureFields = this._cachedMeasure = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.MEASURE) {\n                            measureFields[field.name()] = field;\n                        }\n                    });\n                }\n                return measureFields;\n            },\n            getDimension () {\n                let dimensionFields = this._cachedDimension;\n\n                if (!this._cachedDimension) {\n                    dimensionFields = this._cachedDimension = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.DIMENSION) {\n                            dimensionFields[field.name()] = field;\n                        }\n                    });\n                }\n                return dimensionFields;\n            },\n        };\n        return this.data[dataId];\n    },\n};\n\nexport default fieldStore;\n","/**\n * The wrapper class on top of the primitive value of a field.\n *\n * @todo Need to have support for StringValue, NumberValue, DateTimeValue\n * and GeoValue. These types should expose predicate API mostly.\n */\nclass Value {\n\n  /**\n   * Creates new Value instance.\n   *\n   * @param {*} val - the primitive value from the field cell.\n   * @param {string | Field} field - The field from which the value belongs.\n   */\n    constructor (val, field) {\n        Object.defineProperty(this, '_value', {\n            enumerable: false,\n            configurable: false,\n            writable: false,\n            value: val\n        });\n\n        this.field = field;\n    }\n\n  /**\n   * Returns the field value.\n   *\n   * @return {*} Returns the current value.\n   */\n    get value () {\n        return this._value;\n    }\n\n  /**\n   * Converts to human readable string.\n   *\n   * @override\n   * @return {string} Returns a human readable string of the field value.\n   *\n   */\n    toString () {\n        return String(this.value);\n    }\n\n  /**\n   * Returns the value of the field.\n   *\n   * @override\n   * @return {*} Returns the field value.\n   */\n    valueOf () {\n        return this.value;\n    }\n}\n\nexport default Value;\n","/**\n * Iterates through the diffSet array and call the callback with the current\n * index.\n *\n * @param {string} rowDiffset - The row diffset string e.g. '0-4,6,10-13'.\n * @param {Function} callback - The callback function to be called with every index.\n */\nexport function rowDiffsetIterator (rowDiffset, callback) {\n    if (rowDiffset.length > 0) {\n        const rowDiffArr = rowDiffset.split(',');\n        rowDiffArr.forEach((diffStr) => {\n            const diffStsArr = diffStr.split('-');\n            const start = +(diffStsArr[0]);\n            const end = +(diffStsArr[1] || diffStsArr[0]);\n            if (end >= start) {\n                for (let i = start; i <= end; i += 1) {\n                    callback(i);\n                }\n            }\n        });\n    }\n}\n","/**\n * A parser to parser null, undefined, invalid and NIL values.\n *\n * @public\n * @class\n */\nclass InvalidAwareTypes {\n    /**\n     * Static method which gets/sets the invalid value registry.\n     *\n     * @public\n     * @param {Object} config - The custom configuration supplied by user.\n     * @return {Object} Returns the invalid values registry.\n     */\n    static invalidAwareVals (config) {\n        if (!config) {\n            return InvalidAwareTypes._invalidAwareValsMap;\n        }\n        return Object.assign(InvalidAwareTypes._invalidAwareValsMap, config);\n    }\n\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} value - The value of the invalid data type.\n     */\n    constructor (value) {\n        this._value = value;\n    }\n\n    /**\n     * Returns the current value of the instance.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    value () {\n        return this._value;\n    }\n\n    /**\n     * Returns the current value of the instance in string format.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    toString () {\n        return String(this._value);\n    }\n\n    static isInvalid(val) {\n        return (val instanceof InvalidAwareTypes) || !!InvalidAwareTypes.invalidAwareVals()[val];\n    }\n\n    static getInvalidType(val) {\n        return val instanceof InvalidAwareTypes ? val : InvalidAwareTypes.invalidAwareVals()[val];\n    }\n}\n\n/**\n * Enums for Invalid types.\n */\nInvalidAwareTypes.NULL = new InvalidAwareTypes('null');\nInvalidAwareTypes.NA = new InvalidAwareTypes('na');\nInvalidAwareTypes.NIL = new InvalidAwareTypes('nil');\n\n/**\n * Default Registry for mapping the invalid values.\n *\n * @private\n */\nInvalidAwareTypes._invalidAwareValsMap = {\n    invalid: InvalidAwareTypes.NA,\n    nil: InvalidAwareTypes.NIL,\n    null: InvalidAwareTypes.NULL,\n    undefined: InvalidAwareTypes.NA\n};\n\nexport default InvalidAwareTypes;\n","import { persistDerivation, persistAncestorDerivation } from '../helper';\nimport { DM_DERIVATIVES } from '../constants';\n\n/**\n * DataModel's opearators are exposed as composable functional operators as well as chainable operators. Chainable\n * operators are called on the instances of {@link Datamodel} and {@link Relation} class.\n *\n * Those same operators can be used as composable operators from `DataModel.Operators` namespace.\n *\n * All these operators have similar behaviour. All these operators when called with the argument returns a function\n * which expects a DataModel instance.\n *\n * @public\n * @module Operators\n * @namespace DataModel\n */\n\n/**\n * This is functional version of selection operator. {@link link_to_selection | Selection} is a row filtering operation.\n * It takes {@link SelectionPredicate | predicate} for filtering criteria and returns a function.\n * The returned function is called with the DataModel instance on which the action needs to be performed.\n *\n * {@link SelectionPredicate} is a function which returns a boolean value. For selection opearation the selection\n * function is called for each row of DataModel instance with the current row passed as argument.\n *\n * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n * of rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * [Warn] Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * [Error] `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @example\n * const select = DataModel.Operators.select;\n * usaCarsFn = select(fields => fields.Origin.value === 'USA');\n * usaCarsDm = usaCarsFn(dm);\n * console.log(usaCarsDm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {SelectionPredicate} selectFn - Predicate funciton which is called for each row with the current row\n *      ```\n *          function (row, i)  { ... }\n *      ```\n * @param {Object} [config] - The configuration object to control the inclusion exclusion of a row in resultant\n *      DataModel instance\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const select = (...args) => dm => dm.select(...args);\n\n/**\n * This is functional version of projection operator. {@link link_to_projection | Projection} is a column filtering\n * operation.It expects list of fields name and either include those or exclude those based on {@link FilteringMode} on\n * the  resultant variable.It returns a function which is called with the DataModel instance on which the action needs\n * to be performed.\n *\n * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n * @param {Object} [config] - An optional config to control the creation of new DataModel\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const project = (...args) => dm => dm.project(...args);\n\n/**\n * This is functional version of binnig operator. Binning happens on a measure field based on a binning configuration.\n * Binning in DataModel does not aggregate the number of rows present in DataModel instance after binning, it just adds\n * a new field with the binned value. Refer binning {@link example_of_binning | example} to have a intuition of what\n * binning is and the use case.\n *\n * Binning can be configured by\n * - providing custom bin configuration with non uniform buckets\n * - providing bin count\n * - providing each bin size\n *\n * When custom buckets are provided as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const buckets = {\n *      start: 30\n *      stops: [80, 100, 110]\n *  };\n *  const config = { buckets, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(dm);\n *\n * @text\n * When `binCount` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binCount: 5, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @text\n * When `binSize` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binSize: 200, name: 'binnedHorsepower' }\n *  const binnedDm = dataModel.bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {String} name Name of measure which will be used to create bin\n * @param {Object} config Config required for bin creation\n * @param {Array.<Number>} config.bucketObj.stops Defination of bucket ranges. Two subsequent number from arrays\n *      are picked and a range is created. The first number from range is inclusive and the second number from range\n *      is exclusive.\n * @param {Number} [config.bucketObj.startAt] Force the start of the bin from a particular number.\n *      If not mentioned, the start of the bin or the lower domain of the data if stops is not mentioned, else its\n *      the first value of the stop.\n * @param {Number} config.binSize Bucket size for each bin\n * @param {Number} config.binCount Number of bins which will be created\n * @param {String} config.name Name of the new binned field to be created\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const bin = (...args) => dm => dm.bin(...args);\n\n/**\n * This is functional version of `groupBy` operator.Groups the data using particular dimensions and by reducing\n * measures. It expects a list of dimensions using which it projects the datamodel and perform aggregations to reduce\n * the duplicate tuples. Refer this {@link link_to_one_example_with_group_by | document} to know the intuition behind\n * groupBy.\n *\n * DataModel by default provides definition of few {@link reducer | Reducers}.\n * {@link ReducerStore | User defined reducers} can also be registered.\n *\n * This is the chained implementation of `groupBy`.\n * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n *\n * @example\n * const groupBy = DataModel.Operators.groupBy;\n * const groupedFn = groupBy(['Year'], { horsepower: 'max' } );\n * groupedDM = groupByFn(dm);\n *\n * @public\n *\n * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n *      schema of the variable.\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const groupBy = (...args) => dm => dm.groupBy(...args);\n\n/**\n * Enables composing operators to run multiple operations and save group of operataion as named opration on a DataModel.\n * The resulting DataModel will be the result of all the operation provided. The operations provided will be executed in\n * a serial manner ie. result of one operation will be the input for the next operations (like pipe operator in unix).\n *\n * Suported operations in compose are\n * - `select`\n * - `project`\n * - `groupBy`\n * - `bin`\n * - `compose`\n *\n * @example\n * const compose = DataModel.Operators.compose;\n * const select = DataModel.Operators.select;\n * const project = DataModel.Operators.project;\n *\n * let composedFn = compose(\n *    select(fields => fields.netprofit.value <= 15),\n *    project(['netprofit', 'netsales']));\n *\n * const dataModel = new DataModel(data1, schema1);\n *\n * let composedDm = composedFn(dataModel);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<Operators>} operators: An array of operation that will be applied on the\n * datatable.\n *\n * @returns {DataModel} Instance of resultant DataModel\n */\nexport const compose = (...operations) =>\n    (dm, config = { saveChild: true }) => {\n        let currentDM = dm;\n        let firstChild;\n        const derivations = [];\n\n        operations.forEach((operation) => {\n            currentDM = operation(currentDM);\n            derivations.push(...currentDM._derivation);\n            if (!firstChild) {\n                firstChild = currentDM;\n            }\n        });\n\n        if (firstChild && firstChild !== currentDM) {\n            firstChild.dispose();\n        }\n\n        persistDerivation(currentDM, DM_DERIVATIVES.COMPOSE, null, derivations);\n        // reset all ancestorDerivation saved in-between compose\n        currentDM._ancestorDerivation = [];\n        persistAncestorDerivation(dm, currentDM);\n\n        if (config.saveChild) {\n            currentDM.setParent(dm);\n        } else {\n            currentDM.setParent(null);\n        }\n\n        return currentDM;\n    };\n","export { DataFormat, FilteringMode } from '../enums';\n/**\n * The event name for data propagation.\n */\nexport const PROPAGATION = 'propagation';\n\n/**\n * The name of the unique row id column in DataModel.\n */\nexport const ROW_ID = '__id__';\n\n/**\n * The enums for operation names performed on DataModel.\n */\nexport const DM_DERIVATIVES = {\n    SELECT: 'select',\n    PROJECT: 'project',\n    GROUPBY: 'group',\n    COMPOSE: 'compose',\n    CAL_VAR: 'calculatedVariable',\n    BIN: 'bin',\n    SORT: 'sort'\n};\n\nexport const JOINS = {\n    CROSS: 'cross',\n    LEFTOUTER: 'leftOuter',\n    RIGHTOUTER: 'rightOuter',\n    NATURAL: 'natural',\n    FULLOUTER: 'fullOuter'\n};\n\nexport const LOGICAL_OPERATORS = {\n    AND: 'and',\n    OR: 'or'\n};\n","/**\n * The helper function that returns an array of common schema\n * from two fieldStore instances.\n *\n * @param {FieldStore} fs1 - The first FieldStore instance.\n * @param {FieldStore} fs2 - The second FieldStore instance.\n * @return {Array} An array containing the common schema.\n */\nexport function getCommonSchema (fs1, fs2) {\n    const retArr = [];\n    const fs1Arr = [];\n    fs1.fields.forEach((field) => {\n        fs1Arr.push(field.schema().name);\n    });\n    fs2.fields.forEach((field) => {\n        if (fs1Arr.indexOf(field.schema().name) !== -1) {\n            retArr.push(field.schema().name);\n        }\n    });\n    return retArr;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { getCommonSchema } from './get-common-schema';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { JOINS } from '../constants';\nimport { prepareJoinData } from '../helper';\n/**\n * Default filter function for crossProduct.\n *\n * @return {boolean} Always returns true.\n */\nfunction defaultFilterFn() { return true; }\n\n/**\n * Implementation of cross product operation between two DataModel instances.\n * It internally creates the data and schema for the new DataModel.\n *\n * @param {DataModel} dataModel1 - The left DataModel instance.\n * @param {DataModel} dataModel2 - The right DataModel instance.\n * @param {Function} filterFn - The filter function which is used to filter the tuples.\n * @param {boolean} [replaceCommonSchema=false] - The flag if the common name schema should be there.\n * @return {DataModel} Returns The newly created DataModel instance from the crossProduct operation.\n */\nexport function crossProduct (dm1, dm2, filterFn, replaceCommonSchema = false, jointype = JOINS.CROSS) {\n    const schema = [];\n    const data = [];\n    const applicableFilterFn = filterFn || defaultFilterFn;\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreName = dm1FieldStore.name;\n    const dm2FieldStoreName = dm2FieldStore.name;\n    const name = `${dm1FieldStore.name}.${dm2FieldStore.name}`;\n    const commonSchemaList = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    if (dm1FieldStoreName === dm2FieldStoreName) {\n        throw new Error('DataModels must have different alias names');\n    }\n    // Here prepare the schema\n    dm1FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1 && !replaceCommonSchema) {\n            tmpSchema.name = `${dm1FieldStore.name}.${tmpSchema.name}`;\n        }\n        schema.push(tmpSchema);\n    });\n    dm2FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1) {\n            if (!replaceCommonSchema) {\n                tmpSchema.name = `${dm2FieldStore.name}.${tmpSchema.name}`;\n                schema.push(tmpSchema);\n            }\n        } else {\n            schema.push(tmpSchema);\n        }\n    });\n\n    // Here prepare Data\n    rowDiffsetIterator(dm1._rowDiffset, (i) => {\n        let rowAdded = false;\n        let rowPosition;\n        rowDiffsetIterator(dm2._rowDiffset, (ii) => {\n            const tuple = [];\n            const userArg = {};\n            userArg[dm1FieldStoreName] = {};\n            userArg[dm2FieldStoreName] = {};\n            dm1FieldStore.fields.forEach((field) => {\n                tuple.push(field.partialField.data[i]);\n                userArg[dm1FieldStoreName][field.name()] = field.partialField.data[i];\n            });\n            dm2FieldStore.fields.forEach((field) => {\n                if (!(commonSchemaList.indexOf(field.schema().name) !== -1 && replaceCommonSchema)) {\n                    tuple.push(field.partialField.data[ii]);\n                }\n                userArg[dm2FieldStoreName][field.name()] = field.partialField.data[ii];\n            });\n\n            let cachedStore = {};\n            let cloneProvider1 = () => dm1.detachedRoot();\n            let cloneProvider2 = () => dm2.detachedRoot();\n\n            const dm1Fields = prepareJoinData(userArg[dm1FieldStoreName]);\n            const dm2Fields = prepareJoinData(userArg[dm2FieldStoreName]);\n            if (applicableFilterFn(dm1Fields, dm2Fields, cloneProvider1, cloneProvider2, cachedStore)) {\n                const tupleObj = {};\n                tuple.forEach((cellVal, iii) => {\n                    tupleObj[schema[iii].name] = cellVal;\n                });\n                if (rowAdded && JOINS.CROSS !== jointype) {\n                    data[rowPosition] = tupleObj;\n                }\n                else {\n                    data.push(tupleObj);\n                    rowAdded = true;\n                    rowPosition = i;\n                }\n            } else if ((jointype === JOINS.LEFTOUTER || jointype === JOINS.RIGHTOUTER) && !rowAdded) {\n                const tupleObj = {};\n                let len = dm1FieldStore.fields.length - 1;\n                tuple.forEach((cellVal, iii) => {\n                    if (iii <= len) {\n                        tupleObj[schema[iii].name] = cellVal;\n                    }\n                    else {\n                        tupleObj[schema[iii].name] = null;\n                    }\n                });\n                rowAdded = true;\n                rowPosition = i;\n                data.push(tupleObj);\n            }\n        });\n    });\n\n    return new DataModel(data, schema, { name });\n}\n","/**\n * The default sort function.\n *\n * @param {*} a - The first value.\n * @param {*} b - The second value.\n * @return {number} Returns the comparison result e.g. 1 or 0 or -1.\n */\nfunction defSortFn (a, b) {\n    const a1 = `${a}`;\n    const b1 = `${b}`;\n    if (a1 < b1) {\n        return -1;\n    }\n    if (a1 > b1) {\n        return 1;\n    }\n    return 0;\n}\n\n/**\n * The helper function for merge sort which creates the sorted array\n * from the two halves of the input array.\n *\n * @param {Array} arr - The target array which needs to be merged.\n * @param {number} lo - The starting index of the first array half.\n * @param {number} mid - The ending index of the first array half.\n * @param {number} hi - The ending index of the second array half.\n * @param {Function} sortFn - The sort function.\n */\nfunction merge (arr, lo, mid, hi, sortFn) {\n    const mainArr = arr;\n    const auxArr = [];\n    for (let i = lo; i <= hi; i += 1) {\n        auxArr[i] = mainArr[i];\n    }\n    let a = lo;\n    let b = mid + 1;\n\n    for (let i = lo; i <= hi; i += 1) {\n        if (a > mid) {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        } else if (b > hi) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else if (sortFn(auxArr[a], auxArr[b]) <= 0) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        }\n    }\n}\n\n/**\n * The helper function for merge sort which would be called\n * recursively for sorting the array halves.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {number} lo - The starting index of the array half.\n * @param {number} hi - The ending index of the array half.\n * @param {Function} sortFn - The sort function.\n * @return {Array} Returns the target array itself.\n */\nfunction sort (arr, lo, hi, sortFn) {\n    if (hi === lo) { return arr; }\n\n    const mid = lo + Math.floor((hi - lo) / 2);\n    sort(arr, lo, mid, sortFn);\n    sort(arr, mid + 1, hi, sortFn);\n    merge(arr, lo, mid, hi, sortFn);\n\n    return arr;\n}\n\n/**\n * The implementation of merge sort.\n * It is used in DataModel for stable sorting as it is not sure\n * what the sorting algorithm used by browsers is stable or not.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {Function} [sortFn=defSortFn] - The sort function.\n * @return {Array} Returns the input array itself in sorted order.\n */\nexport function mergeSort (arr, sortFn = defSortFn) {\n    if (arr.length > 1) {\n        sort(arr, 0, arr.length - 1, sortFn);\n    }\n    return arr;\n}\n","import { DimensionSubtype, MeasureSubtype } from '../enums';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { mergeSort } from './merge-sort';\nimport { fieldInSchema } from '../helper';\nimport { isCallable, isArray, } from '../utils';\n/**\n * Generates the sorting functions to sort the data of a DataModel instance\n * according to the input data type.\n *\n * @param {string} dataType - The data type e.g. 'measure', 'datetime' etc.\n * @param {string} sortType - The sorting order i.e. 'asc' or 'desc'.\n * @param {integer} index - The index of the data which will be sorted.\n * @return {Function} Returns the the sorting function.\n */\nfunction getSortFn (dataType, sortType, index) {\n    let retFunc;\n    switch (dataType) {\n    case MeasureSubtype.CONTINUOUS:\n    case DimensionSubtype.TEMPORAL:\n        if (sortType === 'desc') {\n            retFunc = (a, b) => b[index] - a[index];\n        } else {\n            retFunc = (a, b) => a[index] - b[index];\n        }\n        break;\n    default:\n        retFunc = (a, b) => {\n            const a1 = `${a[index]}`;\n            const b1 = `${b[index]}`;\n            if (a1 < b1) {\n                return sortType === 'desc' ? 1 : -1;\n            }\n            if (a1 > b1) {\n                return sortType === 'desc' ? -1 : 1;\n            }\n            return 0;\n        };\n    }\n    return retFunc;\n}\n\n/**\n * Groups the data according to the specified target field.\n *\n * @param {Array} data - The input data array.\n * @param {number} fieldIndex - The target field index within schema array.\n * @return {Array} Returns an array containing the grouped data.\n */\nfunction groupData(data, fieldIndex) {\n    const hashMap = new Map();\n    const groupedData = [];\n\n    data.forEach((datum) => {\n        const fieldVal = datum[fieldIndex];\n        if (hashMap.has(fieldVal)) {\n            groupedData[hashMap.get(fieldVal)][1].push(datum);\n        } else {\n            groupedData.push([fieldVal, [datum]]);\n            hashMap.set(fieldVal, groupedData.length - 1);\n        }\n    });\n\n    return groupedData;\n}\n\n/**\n * Creates the argument value used for sorting function when sort is done\n * with another fields.\n *\n * @param {Array} groupedDatum - The grouped datum for a single dimension field value.\n * @param {Array} targetFields - An array of the sorting fields.\n * @param {Array} targetFieldDetails - An array of the sorting field details in schema.\n * @return {Object} Returns an object containing the value of sorting fields and the target field name.\n */\nfunction createSortingFnArg(groupedDatum, targetFields, targetFieldDetails) {\n    const arg = {\n        label: groupedDatum[0]\n    };\n\n    targetFields.reduce((acc, next, idx) => {\n        acc[next] = groupedDatum[1].map(datum => datum[targetFieldDetails[idx].index]);\n        return acc;\n    }, arg);\n\n    return arg;\n}\n\n/**\n * Sorts the data before return in dataBuilder.\n *\n * @param {Object} dataObj - An object containing the data and schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n */\nfunction sortData(dataObj, sortingDetails) {\n    const { data, schema } = dataObj;\n    let fieldName;\n    let sortMeta;\n    let fDetails;\n    let i = sortingDetails.length - 1;\n\n    for (; i >= 0; i--) {\n        fieldName = sortingDetails[i][0];\n        sortMeta = sortingDetails[i][1];\n        fDetails = fieldInSchema(schema, fieldName);\n\n        if (!fDetails) {\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n\n        if (isCallable(sortMeta)) {\n            // eslint-disable-next-line no-loop-func\n            mergeSort(data, (a, b) => sortMeta(a[fDetails.index], b[fDetails.index]));\n        } else if (isArray(sortMeta)) {\n            const groupedData = groupData(data, fDetails.index);\n            const sortingFn = sortMeta[sortMeta.length - 1];\n            const targetFields = sortMeta.slice(0, sortMeta.length - 1);\n            const targetFieldDetails = targetFields.map(f => fieldInSchema(schema, f));\n\n            groupedData.forEach((groupedDatum) => {\n                groupedDatum.push(createSortingFnArg(groupedDatum, targetFields, targetFieldDetails));\n            });\n\n            mergeSort(groupedData, (a, b) => {\n                const m = a[2];\n                const n = b[2];\n                return sortingFn(m, n);\n            });\n\n            // Empty the array\n            data.length = 0;\n            groupedData.forEach((datum) => {\n                data.push(...datum[1]);\n            });\n        } else {\n            sortMeta = String(sortMeta).toLowerCase() === 'desc' ? 'desc' : 'asc';\n            mergeSort(data, getSortFn(fDetails.type, sortMeta, fDetails.index));\n        }\n    }\n\n    dataObj.uids = [];\n    data.forEach((value) => {\n        dataObj.uids.push(value.pop());\n    });\n}\n\n\n/**\n * Builds the actual data array.\n *\n * @param {Array} fieldStore - An array of field.\n * @param {string} rowDiffset - A string consisting of which rows to be included eg. '0-2,4,6';\n * @param {string} colIdentifier - A string consisting of the details of which column\n * to be included eg 'date,sales,profit';\n * @param {Object} sortingDetails - An object containing the sorting details of the DataModel instance.\n * @param {Object} options - The options required to create the type of the data.\n * @return {Object} Returns an object containing the multidimensional array and the relative schema.\n */\nexport function dataBuilder (fieldStore, rowDiffset, colIdentifier, sortingDetails, options) {\n    const defOptions = {\n        addUid: false,\n        columnWise: false\n    };\n    options = Object.assign({}, defOptions, options);\n\n    const retObj = {\n        schema: [],\n        data: [],\n        uids: []\n    };\n    const addUid = options.addUid;\n    const reqSorting = sortingDetails && sortingDetails.length > 0;\n    // It stores the fields according to the colIdentifier argument\n    const tmpDataArr = [];\n    // Stores the fields according to the colIdentifier argument\n    const colIArr = colIdentifier.split(',');\n\n    colIArr.forEach((colName) => {\n        for (let i = 0; i < fieldStore.length; i += 1) {\n            if (fieldStore[i].name() === colName) {\n                tmpDataArr.push(fieldStore[i]);\n                break;\n            }\n        }\n    });\n\n    // Inserts the schema to the schema object\n    tmpDataArr.forEach((field) => {\n        /** @todo Need to use extend2 here otherwise user can overwrite the schema. */\n        retObj.schema.push(field.schema());\n    });\n\n    if (addUid) {\n        retObj.schema.push({\n            name: 'uid',\n            type: 'identifier'\n        });\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        retObj.data.push([]);\n        const insertInd = retObj.data.length - 1;\n        let start = 0;\n        tmpDataArr.forEach((field, ii) => {\n            retObj.data[insertInd][ii + start] = field.partialField.data[i];\n        });\n        if (addUid) {\n            retObj.data[insertInd][tmpDataArr.length] = i;\n        }\n        // Creates an array of unique identifiers for each row\n        retObj.uids.push(i);\n\n        // If sorting needed then there is the need to expose the index\n        // mapping from the old index to its new index\n        if (reqSorting) { retObj.data[insertInd].push(i); }\n    });\n\n    // Handles the sort functionality\n    if (reqSorting) {\n        sortData(retObj, sortingDetails);\n    }\n\n    if (options.columnWise) {\n        const tmpData = Array(...Array(retObj.schema.length)).map(() => []);\n        retObj.data.forEach((tuple) => {\n            tuple.forEach((data, i) => {\n                tmpData[i].push(data);\n            });\n        });\n        retObj.data = tmpData;\n    }\n\n    return retObj;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n\n/**\n * Performs the union operation between two dm instances.\n *\n * @todo Fix the conflicts between union and difference terminology here.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function difference (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n   // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     * @param {boolean} addData - If true only tuple will be added to the data.\n     */\n    function prepareDataHelper(dm, fieldsObj, addData) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                if (addData) { data.push(tuple); }\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj, false);\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj, true);\n\n    return new DataModel(data, schema, { name });\n}\n\n","import { isArray } from '../utils';\nimport InvalidAwareTypes from '../invalid-aware-types';\nimport { GROUP_BY_FUNCTIONS } from '../enums';\n\nconst { SUM, AVG, FIRST, LAST, COUNT, STD, MIN, MAX } = GROUP_BY_FUNCTIONS;\n\nfunction getFilteredValues(arr) {\n    return arr.filter(item => !(item instanceof InvalidAwareTypes));\n}\n/**\n * Reducer function that returns the sum of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the sum of the array.\n */\nfunction sum (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const filteredNumber = getFilteredValues(arr);\n        const totalSum = filteredNumber.length ?\n                            filteredNumber.reduce((acc, curr) => acc + curr, 0)\n                            : InvalidAwareTypes.NULL;\n        return totalSum;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that returns the average of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the mean value of the array.\n */\nfunction avg (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const totalSum = sum(arr);\n        const len = arr.length || 1;\n        return (Number.isNaN(totalSum) || totalSum instanceof InvalidAwareTypes) ?\n                 InvalidAwareTypes.NULL : totalSum / len;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the min value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the minimum value of the array.\n */\nfunction min (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.min(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the max value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the maximum value of the array.\n */\nfunction max (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.max(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the first value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the first value of the array.\n */\nfunction first (arr) {\n    return arr[0];\n}\n\n/**\n * Reducer function that gives the last value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the last value of the array.\n */\nfunction last (arr) {\n    return arr[arr.length - 1];\n}\n\n/**\n * Reducer function that gives the count value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the length of the array.\n */\nfunction count (arr) {\n    if (isArray(arr)) {\n        return arr.length;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Calculates the variance of the input array.\n *\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the variance of the input array.\n */\nfunction variance (arr) {\n    let mean = avg(arr);\n    return avg(arr.map(num => (num - mean) ** 2));\n}\n\n/**\n * Calculates the square root of the variance of the input array.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the square root of the variance.\n */\nfunction std (arr) {\n    return Math.sqrt(variance(arr));\n}\n\n\nconst fnList = {\n    [SUM]: sum,\n    [AVG]: avg,\n    [MIN]: min,\n    [MAX]: max,\n    [FIRST]: first,\n    [LAST]: last,\n    [COUNT]: count,\n    [STD]: std\n};\n\nconst defaultReducerName = SUM;\n\nexport {\n    defaultReducerName,\n    sum as defReducer,\n    fnList,\n};\n","import { defReducer, fnList } from '../operator';\n\n/**\n * A page level storage which stores, registers, unregisters reducers for all the datamodel instances. There is only one\n * reducer store available in a page. All the datamodel instances receive same instance of reducer store. DataModel\n * out of the box provides handful of {@link reducer | reducers} which can be used as reducer funciton.\n *\n * @public\n * @namespace DataModel\n */\nclass ReducerStore {\n    constructor () {\n        this.store = new Map();\n        this.store.set('defReducer', defReducer);\n\n        Object.entries(fnList).forEach((key) => {\n            this.store.set(key[0], key[1]);\n        });\n    }\n\n    /**\n     * Changes the `defaultReducer` globally. For all the fields which does not have `defAggFn` mentioned in schema, the\n     * value of `defaultReducer` is used for aggregation.\n     *\n     * @public\n     * @param {string} [reducer='sum'] - The name of the default reducer. It picks up the definition from store by doing\n     * name lookup. If no name is found then it takes `sum` as the default reducer.\n     * @return {ReducerStore} Returns instance of the singleton store in page.\n     */\n    defaultReducer (...params) {\n        if (!params.length) {\n            return this.store.get('defReducer');\n        }\n\n        let reducer = params[0];\n\n        if (typeof reducer === 'function') {\n            this.store.set('defReducer', reducer);\n        } else {\n            reducer = String(reducer);\n            if (Object.keys(fnList).indexOf(reducer) !== -1) {\n                this.store.set('defReducer', fnList[reducer]);\n            } else {\n                throw new Error(`Reducer ${reducer} not found in registry`);\n            }\n        }\n        return this;\n    }\n\n    /**\n     *\n     * Registers a {@link reducer | reducer}.\n     * A {@link reducer | reducer} has to be registered before it is used.\n     *\n     * @example\n     *  // find the mean squared value of a given set\n     *  const reducerStore = DataModel.Reducers();\n     *\n     *  reducers.register('meanSquared', (arr) => {\n     *      const squaredVal = arr.map(item => item * item);\n     *      let sum = 0;\n     *      for (let i = 0, l = squaredVal.length; i < l; i++) {\n     *          sum += squaredVal[i++];\n     *      }\n     *\n     *      return sum;\n     *  })\n     *\n     *  // datamodel (dm) is already prepared with cars.json\n     *  const dm1 = dm.groupBy(['origin'], {\n     *      accleration: 'meanSquared'\n     *  });\n     *\n     * @public\n     *\n     * @param {string} name formal name for a reducer. If the given name already exists in store it is overridden by new\n     *      definition.\n     * @param {Function} reducer definition of {@link reducer} function.\n     *\n     * @return {Function} function for unregistering the reducer.\n     */\n    register (name, reducer) {\n        if (typeof reducer !== 'function') {\n            throw new Error('Reducer should be a function');\n        }\n\n        name = String(name);\n        this.store.set(name, reducer);\n\n        return () => { this.__unregister(name); };\n    }\n\n    __unregister (name) {\n        if (this.store.has(name)) {\n            this.store.delete(name);\n        }\n    }\n\n    resolve (name) {\n        if (name instanceof Function) {\n            return name;\n        }\n        return this.store.get(name);\n    }\n}\n\nconst reducerStore = (function () {\n    let store = null;\n\n    function getStore () {\n        if (store === null) {\n            store = new ReducerStore();\n        }\n        return store;\n    }\n    return getStore();\n}());\n\nexport default reducerStore;\n","import { getCommonSchema } from './get-common-schema';\n\n/**\n * The filter function used in natural join.\n * It generates a function that will have the logic to join two\n * DataModel instances by the process of natural join.\n *\n * @param {DataModel} dm1 - The left DataModel instance.\n * @param {DataModel} dm2 - The right DataModel instance.\n * @return {Function} Returns a function that is used in cross-product operation.\n */\nexport function naturalJoinFilter (dm1, dm2) {\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    // const dm1FieldStoreName = dm1FieldStore.name;\n    // const dm2FieldStoreName = dm2FieldStore.name;\n    const commonSchemaArr = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    return (dm1Fields, dm2Fields) => {\n        let retainTuple = true;\n        commonSchemaArr.forEach((fieldName) => {\n            if (dm1Fields[fieldName].value ===\n                dm2Fields[fieldName].value && retainTuple) {\n                retainTuple = true;\n            } else {\n                retainTuple = false;\n            }\n        });\n        return retainTuple;\n    };\n}\n","import DataModel from '../export';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n/**\n * Performs the union operation between two dm instances.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function union (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n    // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     */\n    function prepareDataHelper (dm, fieldsObj) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                data.push(tuple);\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj);\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj);\n\n    return new DataModel(data, schema, { name });\n}\n","import { crossProduct } from './cross-product';\nimport { JOINS } from '../constants';\nimport { union } from './union';\n\n\nexport function leftOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel1, dataModel2, filterFn, false, JOINS.LEFTOUTER);\n}\n\nexport function rightOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel2, dataModel1, filterFn, false, JOINS.RIGHTOUTER);\n}\n\nexport function fullOuterJoin (dataModel1, dataModel2, filterFn) {\n    return union(leftOuterJoin(dataModel1, dataModel2, filterFn), rightOuterJoin(dataModel1, dataModel2, filterFn));\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\n\n/**\n * In {@link DataModel}, every tabular data consists of column, a column is stored as field.\n * Field contains all the data for a given column in an array.\n *\n * Each record consists of several fields; the fields of all records form the columns.\n * Examples of fields: name, gender, sex etc.\n *\n * In DataModel, each field can have multiple attributes which describes its data and behaviour.\n * A field can have two types of data: Measure and Dimension.\n *\n * A Dimension Field is the context on which a data is categorized and the measure is the numerical values that\n * quantify the data set.\n * In short a dimension is the lens through which you are looking at your measure data.\n *\n * Refer to {@link Schema} to get info about possible field attributes.\n *\n * @public\n * @class\n */\nexport default class Field {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        this.partialField = partialField;\n        this.rowDiffset = rowDiffset;\n    }\n\n    /**\n     * Generates the field type specific domain.\n     *\n     * @public\n     * @abstract\n     */\n    domain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the the field schema.\n     *\n     * @public\n     * @return {string} Returns the field schema.\n     */\n    schema () {\n        return this.partialField.schema;\n    }\n\n    /**\n     * Returns the name of the field.\n     *\n     * @public\n     * @return {string} Returns the name of the field.\n     */\n    name () {\n        return this.partialField.name;\n    }\n\n    /**\n     * Returns the type of the field.\n     *\n     * @public\n     * @return {string} Returns the type of the field.\n     */\n    type () {\n        return this.partialField.schema.type;\n    }\n\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return this.partialField.schema.subtype;\n    }\n\n    /**\n     * Returns the description of the field.\n     *\n     * @public\n     * @return {string} Returns the description of the field.\n     */\n    description () {\n        return this.partialField.schema.description;\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @public\n     * @return {string} Returns the display name of the field.\n     */\n    displayName () {\n        return this.partialField.schema.displayName || this.partialField.schema.name;\n    }\n\n    /**\n     * Returns the data associated with the field.\n     *\n     * @public\n     * @return {Array} Returns the data.\n     */\n    data () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            data.push(this.partialField.data[i]);\n        });\n        return data;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @abstract\n     */\n    formattedData () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import Field from '../field';\n\n/**\n * Represents dimension field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Dimension extends Field {\n    /**\n     * Returns the domain for the dimension field.\n     *\n     * @override\n     * @public\n     * @return {any} Returns the calculated domain.\n     */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @abstract\n     */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n     /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { DimensionSubtype } from '../../enums';\nimport Dimension from '../dimension';\n/**\n * Represents categorical field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Categorical extends Dimension {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return DimensionSubtype.CATEGORICAL;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n        return domain;\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport Dimension from '../dimension';\nimport { DateTimeFormatter } from '../../utils';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents temporal field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Temporal extends Dimension {\n     /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        super(partialField, rowDiffset);\n\n        this._cachedMinDiff = null;\n    }\n\n     /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be\n        // occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n\n        return domain;\n    }\n\n\n    /**\n     * Calculates the minimum consecutive difference from the associated field data.\n     *\n     * @public\n     * @return {number} Returns the minimum consecutive diff in milliseconds.\n     */\n    minimumConsecutiveDifference () {\n        if (this._cachedMinDiff) {\n            return this._cachedMinDiff;\n        }\n\n        const sortedData = this.data().filter(item => !(item instanceof InvalidAwareTypes)).sort((a, b) => a - b);\n        const arrLn = sortedData.length;\n        let minDiff = Number.POSITIVE_INFINITY;\n        let prevDatum;\n        let nextDatum;\n        let processedCount = 0;\n\n        for (let i = 1; i < arrLn; i++) {\n            prevDatum = sortedData[i - 1];\n            nextDatum = sortedData[i];\n\n            if (nextDatum === prevDatum) {\n                continue;\n            }\n\n            minDiff = Math.min(minDiff, nextDatum - sortedData[i - 1]);\n            processedCount++;\n        }\n\n        if (!processedCount) {\n            minDiff = null;\n        }\n        this._cachedMinDiff = minDiff;\n\n        return this._cachedMinDiff;\n    }\n\n    /**\n     * Returns the format specified in the input schema while creating field.\n     *\n     * @public\n     * @return {string} Returns the datetime format.\n     */\n    format () {\n        return this.partialField.schema.format;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum instanceof InvalidAwareTypes) {\n                data.push(datum);\n            } else {\n                data.push(DateTimeFormatter.formatAs(datum, this.format()));\n            }\n        });\n        return data;\n    }\n}\n\n","import Dimension from '../dimension';\n\n/**\n * Represents binned field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Binned extends Dimension {\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the last and first values of bins config array.\n     */\n    calculateDataDomain () {\n        const binsArr = this.partialField.schema.bins;\n        return [binsArr[0], binsArr[binsArr.length - 1]];\n    }\n\n    /**\n     * Returns the bins config provided while creating the field instance.\n     *\n     * @public\n     * @return {Array} Returns the bins array config.\n     */\n    bins () {\n        return this.partialField.schema.bins;\n    }\n}\n","import { formatNumber } from '../../utils';\nimport { defaultReducerName } from '../../operator/group-by-function';\nimport Field from '../field';\n\n/**\n * Represents measure field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Measure extends Field {\n  /**\n   * Returns the domain for the measure field.\n   *\n   * @override\n   * @public\n   * @return {any} Returns the calculated domain.\n   */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n  /**\n   * Returns the unit of the measure field.\n   *\n   * @public\n   * @return {string} Returns unit of the field.\n   */\n    unit () {\n        return this.partialField.schema.unit;\n    }\n\n  /**\n   * Returns the aggregation function name of the measure field.\n   *\n   * @public\n   * @return {string} Returns aggregation function name of the field.\n   */\n    defAggFn () {\n        return this.partialField.schema.defAggFn || defaultReducerName;\n    }\n\n  /**\n   * Returns the number format of the measure field.\n   *\n   * @public\n   * @return {Function} Returns number format of the field.\n   */\n    numberFormat () {\n        const { numberFormat } = this.partialField.schema;\n        return numberFormat instanceof Function ? numberFormat : formatNumber;\n    }\n\n  /**\n   * Calculates the corresponding field domain.\n   *\n   * @public\n   * @abstract\n   */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { MeasureSubtype } from '../../enums';\nimport Measure from '../measure';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents continuous field subtype.\n *\n * @public\n * @class\n * @extends Measure\n */\nexport default class Continuous extends Measure {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return MeasureSubtype.CONTINUOUS;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the min and max values.\n     */\n    calculateDataDomain () {\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum instanceof InvalidAwareTypes) {\n                return;\n            }\n\n            if (datum < min) {\n                min = datum;\n            }\n            if (datum > max) {\n                max = datum;\n            }\n        });\n\n        return [min, max];\n    }\n}\n","/**\n * A interface to represent a parser which is responsible to parse the field.\n *\n * @public\n * @interface\n */\nexport default class FieldParser {\n    /**\n     * Parses a single value of a field and return the sanitized form.\n     *\n     * @public\n     * @abstract\n     */\n    parse () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the categorical values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class CategoricalParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the stringified form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the stringified value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            result = String(val).trim();\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import { DateTimeFormatter } from '../../../utils';\nimport FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the temporal values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class TemporalParser extends FieldParser {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {Object} schema - The schema object for the corresponding field.\n     */\n    constructor (schema) {\n        super();\n        this.schema = schema;\n        this._dtf = new DateTimeFormatter(this.schema.format);\n    }\n\n    /**\n     * Parses a single value of a field and returns the millisecond value.\n     *\n     * @public\n     * @param {string|number} val - The value of the field.\n     * @return {number} Returns the millisecond value.\n     */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let nativeDate = this._dtf.getNativeDate(val);\n            result = nativeDate ? nativeDate.getTime() : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the binned values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class BinnedParser extends FieldParser {\n  /**\n   * Parses a single binned value of a field and returns the sanitized value.\n   *\n   * @public\n   * @param {string} val - The value of the field.\n   * @return {string} Returns the sanitized value.\n   */\n    parse (val) {\n        const regex = /^\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*-\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*$/;\n        val = String(val);\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let matched = val.match(regex);\n            result = matched ? `${Number.parseFloat(matched[1])}-${Number.parseFloat(matched[2])}`\n                             : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the continuous values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class ContinuousParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the number form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the number value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let parsedVal = parseFloat(val, 10);\n            result = Number.isNaN(parsedVal) ? InvalidAwareTypes.NA : parsedVal;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","/**\n * Stores the full data and the metadata of a field. It provides\n * a single source of data from which the future Field\n * instance can get a subset of it with a rowDiffset config.\n *\n * @class\n * @public\n */\nexport default class PartialField {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} name - The name of the field.\n     * @param {Array} data - The data array.\n     * @param {Object} schema - The schema object of the corresponding field.\n     * @param {FieldParser} parser - The parser instance corresponding to that field.\n     */\n    constructor (name, data, schema, parser) {\n        this.name = name;\n        this.schema = schema;\n        this.parser = parser;\n        this.data = this._sanitize(data);\n    }\n\n    /**\n     * Sanitizes the field data.\n     *\n     * @private\n     * @param {Array} data - The actual input data.\n     * @return {Array} Returns the sanitized data.\n     */\n    _sanitize (data) {\n        return data.map(datum => this.parser.parse(datum));\n    }\n}\n","import { FieldType, DimensionSubtype, MeasureSubtype } from './enums';\nimport {\n    Categorical,\n    Temporal,\n    Binned,\n    Continuous,\n    CategoricalParser,\n    TemporalParser,\n    BinnedParser,\n    ContinuousParser,\n    PartialField\n} from './fields';\n\n/**\n * Creates a field instance according to the provided data and schema.\n *\n * @param {Array} data - The field data array.\n * @param {Object} schema - The field schema object.\n * @return {Field} Returns the newly created field instance.\n */\nfunction createUnitField(data, schema) {\n    data = data || [];\n    let partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.TEMPORAL:\n            partialField = new PartialField(schema.name, data, schema, new TemporalParser(schema));\n            return new Temporal(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.BINNED:\n            partialField = new PartialField(schema.name, data, schema, new BinnedParser());\n            return new Binned(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        }\n    default:\n        partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n        return new Categorical(partialField, `0-${data.length - 1}`);\n    }\n}\n\n\n/**\n * Creates a field instance from partialField and rowDiffset.\n *\n * @param {PartialField} partialField - The corresponding partial field.\n * @param {string} rowDiffset - The data subset config.\n * @return {Field} Returns the newly created field instance.\n */\nexport function createUnitFieldFromPartial(partialField, rowDiffset) {\n    const { schema } = partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            return new Continuous(partialField, rowDiffset);\n        default:\n            return new Continuous(partialField, rowDiffset);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            return new Categorical(partialField, rowDiffset);\n        case DimensionSubtype.TEMPORAL:\n            return new Temporal(partialField, rowDiffset);\n        case DimensionSubtype.BINNED:\n            return new Binned(partialField, rowDiffset);\n        default:\n            return new Categorical(partialField, rowDiffset);\n        }\n    default:\n        return new Categorical(partialField, rowDiffset);\n    }\n}\n\n/**\n * Creates the field instances with input data and schema.\n *\n * @param {Array} dataColumn - The data array for fields.\n * @param {Array} schema - The schema array for fields.\n * @param {Array} headers - The array of header names.\n * @return {Array.<Field>} Returns an array of newly created field instances.\n */\nexport function createFields(dataColumn, schema, headers) {\n    const headersObj = {};\n\n    if (!(headers && headers.length)) {\n        headers = schema.map(item => item.name);\n    }\n\n    headers.forEach((header, i) => {\n        headersObj[header] = i;\n    });\n\n    return schema.map(item => createUnitField(dataColumn[headersObj[item.name]], item));\n}\n","import { DataFormat } from './enums';\n\nexport default {\n    dataFormat: DataFormat.AUTO\n};\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in DSV array to a manageable internal format.\n *\n * @param {Array.<Array>} arr - A 2D array containing of the DSV data.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv data is header or not.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    [\"a\", \"b\", \"c\"],\n *    [1, 2, 3],\n *    [4, 5, 6],\n *    [7, 8, 9]\n * ];\n */\nfunction DSVArr (arr, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    let header;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    if (options.firstRowHeader) {\n        // If header present then mutate the array.\n        // Do in-place mutation to save space.\n        header = arr.splice(0, 1)[0];\n    } else {\n        header = [];\n    }\n\n    arr.forEach(field => push(...field));\n\n    return [header, columns];\n}\n\nexport default DSVArr;\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;\n","import { dsvFormat as d3Dsv } from 'd3-dsv';\nimport DSVArr from './dsv-arr';\n\n/**\n * Parses and converts data formatted in DSV string to a manageable internal format.\n *\n * @todo Support to be given for https://tools.ietf.org/html/rfc4180.\n * @todo Sample implementation https://github.com/knrz/CSV.js/.\n *\n * @param {string} str - The input DSV string.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv string data is header or not.\n * @param {string} [options.fieldSeparator=\",\"] - The separator of two consecutive field.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = `\n * a,b,c\n * 1,2,3\n * 4,5,6\n * 7,8,9\n * `\n */\nfunction DSVStr (str, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n        fieldSeparator: ','\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    const dsv = d3Dsv(options.fieldSeparator);\n    return DSVArr(dsv.parseRows(str), options);\n}\n\nexport default DSVStr;\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in JSON to a manageable internal format.\n *\n * @param {Array.<Object>} arr - The input data formatted in JSON.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    {\n *      \"a\": 1,\n *      \"b\": 2,\n *      \"c\": 3\n *    },\n *    {\n *      \"a\": 4,\n *      \"b\": 5,\n *      \"c\": 6\n *    },\n *    {\n *      \"a\": 7,\n *      \"b\": 8,\n *      \"c\": 9\n *    }\n * ];\n */\nfunction FlatJSON (arr) {\n    const header = {};\n    let i = 0;\n    let insertionIndex;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    arr.forEach((item) => {\n        const fields = [];\n        for (let key in item) {\n            if (key in header) {\n                insertionIndex = header[key];\n            } else {\n                header[key] = i++;\n                insertionIndex = i - 1;\n            }\n            fields[insertionIndex] = item[key];\n        }\n        push(...fields);\n    });\n\n    return [Object.keys(header), columns];\n}\n\nexport default FlatJSON;\n","import FlatJSON from './flat-json';\nimport DSVArr from './dsv-arr';\nimport DSVStr from './dsv-str';\nimport { detectDataFormat } from '../utils';\n\n/**\n * Parses the input data and detect the format automatically.\n *\n * @param {string|Array} data - The input data.\n * @param {Object} options - An optional config specific to data format.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n */\nfunction Auto (data, options) {\n    const converters = { FlatJSON, DSVStr, DSVArr };\n    const dataFormat = detectDataFormat(data);\n\n    if (!dataFormat) {\n        throw new Error('Couldn\\'t detect the data format');\n    }\n\n    return converters[dataFormat](data, options);\n}\n\nexport default Auto;\n","import { FieldType, FilteringMode, DimensionSubtype, MeasureSubtype, DataFormat } from './enums';\nimport fieldStore from './field-store';\nimport Value from './value';\nimport {\n    rowDiffsetIterator\n} from './operator';\nimport { DM_DERIVATIVES, LOGICAL_OPERATORS } from './constants';\nimport { createFields, createUnitFieldFromPartial } from './field-creator';\nimport defaultConfig from './default-config';\nimport * as converter from './converter';\nimport { extend2, detectDataFormat } from './utils';\n\n/**\n * Prepares the selection data.\n */\nfunction prepareSelectionData (fields, i) {\n    const resp = {};\n    for (let field of fields) {\n        resp[field.name()] = new Value(field.partialField.data[i], field);\n    }\n    return resp;\n}\n\nexport function prepareJoinData (fields) {\n    const resp = {};\n    Object.keys(fields).forEach((key) => { resp[key] = new Value(fields[key], key); });\n    return resp;\n}\n\nexport const updateFields = ([rowDiffset, colIdentifier], partialFieldspace, fieldStoreName) => {\n    let collID = colIdentifier.length ? colIdentifier.split(',') : [];\n    let partialFieldMap = partialFieldspace.fieldsObj();\n    let newFields = collID.map(coll => createUnitFieldFromPartial(partialFieldMap[coll].partialField, rowDiffset));\n    return fieldStore.createNamespace(newFields, fieldStoreName);\n};\n\nexport const persistDerivation = (model, operation, config = {}, criteriaFn) => {\n    if (operation === DM_DERIVATIVES.COMPOSE) {\n        model._derivation.length = 0;\n        model._derivation.push(...criteriaFn);\n    } else {\n        model._derivation.push({\n            op: operation,\n            meta: config,\n            criteria: criteriaFn\n        });\n    }\n};\n\nexport const persistAncestorDerivation = (sourceDm, newDm) => {\n    newDm._ancestorDerivation.push(...sourceDm._ancestorDerivation, ...sourceDm._derivation);\n};\n\nexport const selectHelper = (rowDiffset, fields, selectFn, config, sourceDm) => {\n    const newRowDiffSet = [];\n    let lastInsertedValue = -1;\n    let { mode } = config;\n    let li;\n    let cachedStore = {};\n    let cloneProvider = () => sourceDm.detachedRoot();\n    const selectorHelperFn = index => selectFn(\n        prepareSelectionData(fields, index),\n        index,\n        cloneProvider,\n        cachedStore\n    );\n\n    let checker;\n    if (mode === FilteringMode.INVERSE) {\n        checker = index => !selectorHelperFn(index);\n    } else {\n        checker = index => selectorHelperFn(index);\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        if (checker(i)) {\n            if (lastInsertedValue !== -1 && i === (lastInsertedValue + 1)) {\n                li = newRowDiffSet.length - 1;\n                newRowDiffSet[li] = `${newRowDiffSet[li].split('-')[0]}-${i}`;\n            } else {\n                newRowDiffSet.push(`${i}`);\n            }\n            lastInsertedValue = i;\n        }\n    });\n    return newRowDiffSet.join(',');\n};\n\nexport const cloneWithAllFields = (model) => {\n    const clonedDm = model.clone(false);\n    const partialFieldspace = model.getPartialFieldspace();\n    clonedDm._colIdentifier = partialFieldspace.fields.map(f => f.name()).join(',');\n\n    // flush out cached namespace values on addition of new fields\n    partialFieldspace._cachedFieldsObj = null;\n    partialFieldspace._cachedDimension = null;\n    partialFieldspace._cachedMeasure = null;\n    clonedDm.__calculateFieldspace().calculateFieldsConfig();\n\n    return clonedDm;\n};\n\nexport const filterPropagationModel = (model, propModels, config = {}) => {\n    const operation = config.operation || LOGICAL_OPERATORS.AND;\n    const filterByMeasure = config.filterByMeasure || false;\n    let fns = [];\n    if (!propModels.length) {\n        fns = [() => false];\n    } else {\n        fns = propModels.map(propModel => ((dataModel) => {\n            const dataObj = dataModel.getData();\n            const schema = dataObj.schema;\n            const fieldsConfig = dataModel.getFieldsConfig();\n            const fieldsSpace = dataModel.getFieldspace().fieldsObj();\n            const data = dataObj.data;\n            const domain = Object.values(fieldsConfig).reduce((acc, v) => {\n                acc[v.def.name] = fieldsSpace[v.def.name].domain();\n                return acc;\n            }, {});\n\n            return (fields) => {\n                const include = !data.length ? false : data.some(row => schema.every((propField) => {\n                    if (!(propField.name in fields)) {\n                        return true;\n                    }\n                    const value = fields[propField.name].valueOf();\n                    if (filterByMeasure && propField.type === FieldType.MEASURE) {\n                        return value >= domain[propField.name][0] && value <= domain[propField.name][1];\n                    }\n\n                    if (propField.type !== FieldType.DIMENSION) {\n                        return true;\n                    }\n                    const idx = fieldsConfig[propField.name].index;\n                    return row[idx] === fields[propField.name].valueOf();\n                }));\n                return include;\n            };\n        })(propModel));\n    }\n\n    let filteredModel;\n    if (operation === LOGICAL_OPERATORS.AND) {\n        filteredModel = cloneWithAllFields(model).select(fields => fns.every(fn => fn(fields)), {\n            saveChild: false,\n            mode: FilteringMode.ALL\n        });\n    } else {\n        filteredModel = cloneWithAllFields(model).select(fields => fns.some(fn => fn(fields)), {\n            mode: FilteringMode.ALL,\n            saveChild: false\n        });\n    }\n\n    return filteredModel;\n};\n\nexport const cloneWithSelect = (sourceDm, selectFn, selectConfig, cloneConfig) => {\n    const cloned = sourceDm.clone(cloneConfig.saveChild);\n    const rowDiffset = selectHelper(\n        cloned._rowDiffset,\n        cloned.getPartialFieldspace().fields,\n        selectFn,\n        selectConfig,\n        sourceDm\n    );\n    cloned._rowDiffset = rowDiffset;\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n\n    persistDerivation(cloned, DM_DERIVATIVES.SELECT, { config: selectConfig }, selectFn);\n    persistAncestorDerivation(sourceDm, cloned);\n\n    return cloned;\n};\n\nexport const cloneWithProject = (sourceDm, projField, config, allFields) => {\n    const cloned = sourceDm.clone(config.saveChild);\n    let projectionSet = projField;\n    if (config.mode === FilteringMode.INVERSE) {\n        projectionSet = allFields.filter(fieldName => projField.indexOf(fieldName) === -1);\n    }\n    // cloned._colIdentifier = sourceDm._colIdentifier.split(',')\n    //                         .filter(coll => projectionSet.indexOf(coll) !== -1).join();\n    cloned._colIdentifier = projectionSet.join(',');\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n\n    persistDerivation(\n        cloned,\n        DM_DERIVATIVES.PROJECT,\n        { projField, config, actualProjField: projectionSet },\n        null\n    );\n    persistAncestorDerivation(sourceDm, cloned);\n\n    return cloned;\n};\n\nexport const sanitizeUnitSchema = (unitSchema) => {\n    // Do deep clone of the unit schema as the user might change it later.\n    unitSchema = extend2({}, unitSchema);\n    if (!unitSchema.type) {\n        unitSchema.type = FieldType.DIMENSION;\n    }\n\n    if (!unitSchema.subtype) {\n        switch (unitSchema.type) {\n        case FieldType.MEASURE:\n            unitSchema.subtype = MeasureSubtype.CONTINUOUS;\n            break;\n        default:\n        case FieldType.DIMENSION:\n            unitSchema.subtype = DimensionSubtype.CATEGORICAL;\n            break;\n        }\n    }\n\n    return unitSchema;\n};\n\nexport const sanitizeSchema = schema => schema.map(unitSchema => sanitizeUnitSchema(unitSchema));\n\nexport const resolveFieldName = (schema, dataHeader) => {\n    schema.forEach((unitSchema) => {\n        const fieldNameAs = unitSchema.as;\n        if (!fieldNameAs) { return; }\n\n        const idx = dataHeader.indexOf(unitSchema.name);\n        dataHeader[idx] = fieldNameAs;\n        unitSchema.name = fieldNameAs;\n        delete unitSchema.as;\n    });\n};\n\nexport const updateData = (relation, data, schema, options) => {\n    schema = sanitizeSchema(schema);\n    options = Object.assign(Object.assign({}, defaultConfig), options);\n    const converterFn = converter[options.dataFormat];\n\n    if (!(converterFn && typeof converterFn === 'function')) {\n        throw new Error(`No converter function found for ${options.dataFormat} format`);\n    }\n\n    const [header, formattedData] = converterFn(data, options);\n    resolveFieldName(schema, header);\n    const fieldArr = createFields(formattedData, schema, header);\n\n    // This will create a new fieldStore with the fields\n    const nameSpace = fieldStore.createNamespace(fieldArr, options.name);\n    relation._partialFieldspace = nameSpace;\n    // If data is provided create the default colIdentifier and rowDiffset\n    relation._rowDiffset = formattedData.length && formattedData[0].length ? `0-${formattedData[0].length - 1}` : '';\n    relation._colIdentifier = (schema.map(_ => _.name)).join();\n    relation._dataFormat = options.dataFormat === DataFormat.AUTO ? detectDataFormat(data) : options.dataFormat;\n    return relation;\n};\n\nexport const fieldInSchema = (schema, field) => {\n    let i = 0;\n\n    for (; i < schema.length; ++i) {\n        if (field === schema[i].name) {\n            return {\n                type: schema[i].subtype || schema[i].type,\n                index: i\n            };\n        }\n    }\n    return null;\n};\n\n\nexport const getDerivationArguments = (derivation) => {\n    let params = [];\n    let operation;\n    operation = derivation.op;\n    switch (operation) {\n    case DM_DERIVATIVES.SELECT:\n        params = [derivation.criteria];\n        break;\n    case DM_DERIVATIVES.PROJECT:\n        params = [derivation.meta.actualProjField];\n        break;\n    case DM_DERIVATIVES.GROUPBY:\n        operation = 'groupBy';\n        params = [derivation.meta.groupByString.split(','), derivation.criteria];\n        break;\n    default:\n        operation = null;\n    }\n\n    return {\n        operation,\n        params\n    };\n};\n\nconst applyExistingOperationOnModel = (propModel, dataModel) => {\n    const derivations = dataModel.getDerivations();\n    let selectionModel = propModel[0];\n    let rejectionModel = propModel[1];\n\n    derivations.forEach((derivation) => {\n        if (!derivation) {\n            return;\n        }\n\n        const { operation, params } = getDerivationArguments(derivation);\n        if (operation) {\n            selectionModel = selectionModel[operation](...params, {\n                saveChild: false\n            });\n            rejectionModel = rejectionModel[operation](...params, {\n                saveChild: false\n            });\n        }\n    });\n\n    return [selectionModel, rejectionModel];\n};\n\nconst getFilteredModel = (propModel, path) => {\n    for (let i = 0, len = path.length; i < len; i++) {\n        const model = path[i];\n        propModel = applyExistingOperationOnModel(propModel, model);\n    }\n    return propModel;\n};\n\nconst propagateIdentifiers = (dataModel, propModel, config = {}, propModelInf = {}) => {\n    const nonTraversingModel = propModelInf.nonTraversingModel;\n    const excludeModels = propModelInf.excludeModels || [];\n\n    if (dataModel === nonTraversingModel) {\n        return;\n    }\n\n    const propagate = excludeModels.length ? excludeModels.indexOf(dataModel) === -1 : true;\n\n    propagate && dataModel.handlePropagation(propModel, config);\n\n    const children = dataModel._children;\n    children.forEach((child) => {\n        let [selectionModel, rejectionModel] = applyExistingOperationOnModel(propModel, child);\n        propagateIdentifiers(child, [selectionModel, rejectionModel], config, propModelInf);\n    });\n};\n\nexport const getRootGroupByModel = (model) => {\n    while (model._parent && model._derivation.find(d => d.op !== DM_DERIVATIVES.GROUPBY)) {\n        model = model._parent;\n    }\n    return model;\n};\n\nexport const getRootDataModel = (model) => {\n    while (model._parent) {\n        model = model._parent;\n    }\n    return model;\n};\n\nexport const getPathToRootModel = (model, path = []) => {\n    while (model._parent) {\n        path.push(model);\n        model = model._parent;\n    }\n    return path;\n};\n\nexport const propagateToAllDataModels = (identifiers, rootModels, propagationInf, config) => {\n    let criteria;\n    let propModel;\n    const { propagationNameSpace, propagateToSource } = propagationInf;\n    const propagationSourceId = propagationInf.sourceId;\n    const propagateInterpolatedValues = config.propagateInterpolatedValues;\n    const filterFn = (entry) => {\n        const filter = config.filterFn || (() => true);\n        return filter(entry, config);\n    };\n\n    let criterias = [];\n\n    if (identifiers === null && config.persistent !== true) {\n        criterias = [{\n            criteria: []\n        }];\n    } else {\n        let actionCriterias = Object.values(propagationNameSpace.mutableActions);\n        if (propagateToSource !== false) {\n            actionCriterias = actionCriterias.filter(d => d.config.sourceId !== propagationSourceId);\n        }\n\n        const filteredCriteria = actionCriterias.filter(filterFn).map(action => action.config.criteria);\n\n        const excludeModels = [];\n\n        if (propagateToSource !== false) {\n            const sourceActionCriterias = Object.values(propagationNameSpace.mutableActions);\n\n            sourceActionCriterias.forEach((actionInf) => {\n                const actionConf = actionInf.config;\n                if (actionConf.applyOnSource === false && actionConf.action === config.action &&\n                        actionConf.sourceId !== propagationSourceId) {\n                    excludeModels.push(actionInf.model);\n                    criteria = sourceActionCriterias.filter(d => d !== actionInf).map(d => d.config.criteria);\n                    criteria.length && criterias.push({\n                        criteria,\n                        models: actionInf.model,\n                        path: getPathToRootModel(actionInf.model)\n                    });\n                }\n            });\n        }\n\n\n        criteria = [].concat(...[...filteredCriteria, identifiers]).filter(d => d !== null);\n        criterias.push({\n            criteria,\n            excludeModels: [...excludeModels, ...config.excludeModels || []]\n        });\n    }\n\n    const rootModel = rootModels.model;\n\n    const propConfig = Object.assign({\n        sourceIdentifiers: identifiers,\n        propagationSourceId\n    }, config);\n\n    const rootGroupByModel = rootModels.groupByModel;\n    if (propagateInterpolatedValues && rootGroupByModel) {\n        propModel = filterPropagationModel(rootGroupByModel, criteria, {\n            filterByMeasure: propagateInterpolatedValues\n        });\n        propagateIdentifiers(rootGroupByModel, propModel, propConfig);\n    }\n\n    criterias.forEach((inf) => {\n        const propagationModel = filterPropagationModel(rootModel, inf.criteria);\n        const path = inf.path;\n\n        if (path) {\n            const filteredModel = getFilteredModel(propagationModel, path.reverse());\n            inf.models.handlePropagation(filteredModel, propConfig);\n        } else {\n            propagateIdentifiers(rootModel, propagationModel, propConfig, {\n                excludeModels: inf.excludeModels,\n                nonTraversingModel: propagateInterpolatedValues && rootGroupByModel\n            });\n        }\n    });\n};\n\nexport const propagateImmutableActions = (propagationNameSpace, rootModels, propagationInf) => {\n    const immutableActions = propagationNameSpace.immutableActions;\n\n    for (const action in immutableActions) {\n        const actionInf = immutableActions[action];\n        const actionConf = actionInf.config;\n        const propagationSourceId = propagationInf.config.sourceId;\n        const filterImmutableAction = propagationInf.propConfig.filterImmutableAction ?\n            propagationInf.propConfig.filterImmutableAction(actionConf, propagationInf.config) : true;\n        if (actionConf.sourceId !== propagationSourceId && filterImmutableAction) {\n            const criteriaModel = actionConf.criteria;\n            propagateToAllDataModels(criteriaModel, rootModels, {\n                propagationNameSpace,\n                propagateToSource: false,\n                sourceId: propagationSourceId\n            }, actionConf);\n        }\n    }\n};\n\nexport const addToPropNamespace = (propagationNameSpace, config = {}, model) => {\n    let sourceNamespace;\n    const isMutableAction = config.isMutableAction;\n    const criteria = config.criteria;\n    const key = `${config.action}-${config.sourceId}`;\n\n    if (isMutableAction) {\n        sourceNamespace = propagationNameSpace.mutableActions;\n    } else {\n        sourceNamespace = propagationNameSpace.immutableActions;\n    }\n\n    if (criteria === null) {\n        delete sourceNamespace[key];\n    } else {\n        sourceNamespace[key] = {\n            model,\n            config\n        };\n    }\n\n    return this;\n};\n","import { FilteringMode } from './enums';\nimport { getUniqueId } from './utils';\nimport { updateFields, cloneWithSelect, cloneWithProject, updateData } from './helper';\nimport { crossProduct, difference, naturalJoinFilter, union } from './operator';\n\n/**\n * Relation provides the definitions of basic operators of relational algebra like *selection*, *projection*, *union*,\n * *difference* etc.\n *\n * It is extended by {@link DataModel} to inherit the functionalities of relational algebra concept.\n *\n * @class\n * @public\n * @module Relation\n * @namespace DataModel\n */\nclass Relation {\n\n    /**\n     * Creates a new Relation instance by providing underlying data and schema.\n     *\n     * @private\n     *\n     * @param {Object | string | Relation} data - The input tabular data in dsv or json format or\n     * an existing Relation instance object.\n     * @param {Array} schema - An array of data schema.\n     * @param {Object} [options] - The optional options.\n     */\n    constructor (...params) {\n        let source;\n\n        this._parent = null;\n        this._derivation = [];\n        this._ancestorDerivation = [];\n        this._children = [];\n\n        if (params.length === 1 && ((source = params[0]) instanceof Relation)) {\n            // parent datamodel was passed as part of source\n            this._colIdentifier = source._colIdentifier;\n            this._rowDiffset = source._rowDiffset;\n            this._dataFormat = source._dataFormat;\n            this._parent = source;\n            this._partialFieldspace = this._parent._partialFieldspace;\n            this._fieldStoreName = getUniqueId();\n            this.__calculateFieldspace().calculateFieldsConfig();\n        } else {\n            updateData(this, ...params);\n            this._fieldStoreName = this._partialFieldspace.name;\n            this.__calculateFieldspace().calculateFieldsConfig();\n            this._propagationNameSpace = {\n                mutableActions: {},\n                immutableActions: {}\n            };\n        }\n    }\n\n    /**\n     * Retrieves the {@link Schema | schema} details for every {@link Field | field} as an array.\n     *\n     * @public\n     *\n     * @return {Array.<Schema>} Array of fields schema.\n     *      ```\n     *      [\n     *          { name: 'Name', type: 'dimension' },\n     *          { name: 'Miles_per_Gallon', type: 'measure', numberFormat: (val) => `${val} miles / gallon` },\n     *          { name: 'Cylinder', type: 'dimension' },\n     *          { name: 'Displacement', type: 'measure', defAggFn: 'max' },\n     *          { name: 'HorsePower', type: 'measure', defAggFn: 'max' },\n     *          { name: 'Weight_in_lbs', type: 'measure', defAggFn: 'avg',  },\n     *          { name: 'Acceleration', type: 'measure', defAggFn: 'avg' },\n     *          { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *          { name: 'Origin' }\n     *      ]\n     *      ```\n     */\n    getSchema () {\n        return this.getFieldspace().fields.map(d => d.schema());\n    }\n\n    /**\n     * Returns the name of the {@link DataModel} instance. If no name was specified during {@link DataModel}\n     * initialization, then it returns a auto-generated name.\n     *\n     * @public\n     *\n     * @return {string} Name of the DataModel instance.\n     */\n    getName() {\n        return this._fieldStoreName;\n    }\n\n    getFieldspace () {\n        return this._fieldspace;\n    }\n\n    __calculateFieldspace () {\n        this._fieldspace = updateFields([this._rowDiffset, this._colIdentifier],\n             this.getPartialFieldspace(), this._fieldStoreName);\n        return this;\n    }\n\n    getPartialFieldspace () {\n        return this._partialFieldspace;\n    }\n\n    /**\n     * Performs {@link link_of_cross_product | cross-product} between two {@link DataModel} instances and returns a\n     * new {@link DataModel} instance containing the results. This operation is also called theta join.\n     *\n     * Cross product takes two set and create one set where each value of one set is paired with each value of another\n     * set.\n     *\n     * This method takes an optional predicate which filters the generated result rows. If the predicate returns true\n     * the combined row is included in the resulatant table.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.join(originDM)));\n     *\n     *  console.log(carsDM.join(originDM,\n     *      obj => obj.[originDM.getName()].Origin === obj.[carsDM.getName()].Origin));\n     *\n     * @text\n     * This is chained version of `join` operator. `join` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel to be joined with the current instance DataModel.\n     * @param {SelectionPredicate} filterFn - The predicate function that will filter the result of the crossProduct.\n     *\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    join (joinWith, filterFn) {\n        return crossProduct(this, joinWith, filterFn);\n    }\n\n    /**\n     * {@link natural_join | Natural join} is a special kind of cross-product join where filtering of rows are performed\n     * internally by resolving common fields are from both table and the rows with common value are included.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.naturalJoin(originDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel with which the current instance of DataModel on which the method is\n     *      called will be joined.\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    naturalJoin (joinWith) {\n        return crossProduct(this, joinWith, naturalJoinFilter(this, joinWith), true);\n    }\n\n    /**\n     * {@link link_to_union | Union} operation can be termed as vertical stacking of all rows from both the DataModel\n     * instances, provided that both of the {@link DataModel} instances should have same column names.\n     *\n     * @example\n     * console.log(EuropeanMakerDM.union(USAMakerDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} unionWith - DataModel instance for which union has to be applied with the instance on which\n     *      the method is called\n     *\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    union (unionWith) {\n        return union(this, unionWith);\n    }\n\n    /**\n     * {@link link_to_difference | Difference } operation only include rows which are present in the datamodel on which\n     * it was called but not on the one passed as argument.\n     *\n     * @example\n     * console.log(highPowerDM.difference(highExpensiveDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} differenceWith - DataModel instance for which difference has to be applied with the instance\n     *      on which the method is called\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    difference (differenceWith) {\n        return difference(this, differenceWith);\n    }\n\n    /**\n     * {@link link_to_selection | Selection} is a row filtering operation. It expects a predicate and an optional mode\n     * which control which all rows should be included in the resultant DataModel instance.\n     *\n     * {@link SelectionPredicate} is a function which returns a boolean value. For selection operation the selection\n     * function is called for each row of DataModel instance with the current row passed as argument.\n     *\n     * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n     * of rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resultant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  // with selection mode NORMAL:\n     *  const normDt = dt.select(fields => fields.Origin.value === \"USA\")\n     *  console.log(normDt));\n     *\n     * // with selection mode INVERSE:\n     * const inverDt = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.INVERSE })\n     * console.log(inverDt);\n     *\n     * // with selection mode ALL:\n     * const dtArr = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.ALL })\n     * // print the selected parts\n     * console.log(dtArr[0]);\n     * // print the inverted parts\n     * console.log(dtArr[1]);\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Function} selectFn - The predicate function which is called for each row with the current row.\n     * ```\n     *  function (row, i, cloneProvider, store)  { ... }\n     * ```\n     * @param {Object} config - The configuration object to control the inclusion exclusion of a row in resultant\n     * DataModel instance.\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection.\n     * @return {DataModel} Returns the new DataModel instance(s) after operation.\n     */\n    select (selectFn, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n\n        const cloneConfig = { saveChild: config.saveChild };\n        let oDm;\n\n        if (config.mode === FilteringMode.ALL) {\n            const selectDm = cloneWithSelect(\n                this,\n                selectFn,\n                { mode: FilteringMode.NORMAL },\n                cloneConfig\n            );\n            const rejectDm = cloneWithSelect(\n                this,\n                selectFn,\n                { mode: FilteringMode.INVERSE },\n                cloneConfig\n            );\n            oDm = [selectDm, rejectDm];\n        } else {\n            oDm = cloneWithSelect(\n                this,\n                selectFn,\n                config,\n                cloneConfig\n            );\n        }\n\n        return oDm;\n    }\n\n    /**\n     * Retrieves a boolean value if the current {@link DataModel} instance has data.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'CarName', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     * const data = [];\n     *\n     * const dt = new DataModel(data, schema);\n     * console.log(dt.isEmpty());\n     *\n     * @public\n     *\n     * @return {Boolean} True if the datamodel has no data, otherwise false.\n     */\n    isEmpty () {\n        return !this._rowDiffset.length || !this._colIdentifier.length;\n    }\n\n    /**\n     * Creates a clone from the current DataModel instance with child parent relationship.\n     *\n     * @private\n     * @param {boolean} [saveChild=true] - Whether the cloned instance would be recorded in the parent instance.\n     * @return {DataModel} - Returns the newly cloned DataModel instance.\n     */\n    clone (saveChild = true) {\n        const clonedDm = new this.constructor(this);\n        if (saveChild) {\n            clonedDm.setParent(this);\n        } else {\n            clonedDm.setParent(null);\n        }\n        return clonedDm;\n    }\n\n    /**\n     * {@link Projection} is filter column (field) operation. It expects list of fields' name and either include those\n     * or exclude those based on {@link FilteringMode} on the resultant variable.\n     *\n     * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n     * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resulatant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *\n     *  // with projection mode NORMAL:\n     *  const normDt = dt.project([\"Name\", \"HorsePower\"]);\n     *  console.log(normDt.getData());\n     *\n     *  // with projection mode INVERSE:\n     *  const inverDt = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.INVERSE })\n     *  console.log(inverDt.getData());\n     *\n     *  // with selection mode ALL:\n     *  const dtArr = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.ALL })\n     *  // print the normal parts\n     *  console.log(dtArr[0].getData());\n     *  // print the inverted parts\n     *  console.log(dtArr[1].getData());\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n     * @param {Object} [config] - An optional config to control the creation of new DataModel\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n     *\n     * @return {DataModel} Returns the new DataModel instance after operation.\n     */\n    project (projField, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n        const fieldConfig = this.getFieldsConfig();\n        const allFields = Object.keys(fieldConfig);\n        const { mode } = config;\n\n        let normalizedProjField = projField.reduce((acc, field) => {\n            if (field.constructor.name === 'RegExp') {\n                acc.push(...allFields.filter(fieldName => fieldName.search(field) !== -1));\n            } else if (field in fieldConfig) {\n                acc.push(field);\n            }\n            return acc;\n        }, []);\n\n        normalizedProjField = Array.from(new Set(normalizedProjField)).map(field => field.trim());\n        let dataModel;\n\n        if (mode === FilteringMode.ALL) {\n            let projectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.NORMAL,\n                saveChild: config.saveChild\n            }, allFields);\n            let rejectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.INVERSE,\n                saveChild: config.saveChild\n            }, allFields);\n            dataModel = [projectionClone, rejectionClone];\n        } else {\n            let projectionClone = cloneWithProject(this, normalizedProjField, config, allFields);\n            dataModel = projectionClone;\n        }\n\n        return dataModel;\n    }\n\n    getFieldsConfig () {\n        return this._fieldConfig;\n    }\n\n    calculateFieldsConfig () {\n        this._fieldConfig = this._fieldspace.fields.reduce((acc, fieldObj, i) => {\n            acc[fieldObj.name()] = {\n                index: i,\n                def: fieldObj.schema(),\n            };\n            return acc;\n        }, {});\n        return this;\n    }\n\n\n    /**\n     * Frees up the resources associated with the current DataModel instance and breaks all the links instance has in\n     * the DAG.\n     *\n     * @public\n     */\n    dispose () {\n        this._parent && this._parent.removeChild(this);\n        this._parent = null;\n        this._children.forEach((child) => {\n            child._parent = null;\n        });\n        this._children = [];\n    }\n\n    /**\n     * Removes the specified child {@link DataModel} from the child list of the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\")\n     * dt.removeChild(dt2);\n     *\n     * @private\n     *\n     * @param {DataModel} child - Delegates the parent to remove this child.\n     */\n    removeChild (child) {\n        let idx = this._children.findIndex(sibling => sibling === child);\n        idx !== -1 ? this._children.splice(idx, 1) : true;\n    }\n\n    /**\n     * Sets the specified {@link DataModel} as a parent for the current {@link DataModel} instance.\n     *\n     * @param {DataModel} parent - The datamodel instance which will act as parent.\n     */\n    setParent (parent) {\n        this._parent && this._parent.removeChild(this);\n        this._parent = parent;\n        parent && parent._children.push(this);\n    }\n\n    /**\n     * Returns the parent {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const parentDm = dt2.getParent();\n     *\n     * @return {DataModel} Returns the parent DataModel instance.\n     */\n    getParent () {\n        return this._parent;\n    }\n\n    /**\n     * Returns the immediate child {@link DataModel} instances.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const childDm1 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const childDm2 = dt.select(fields => fields.Origin.value === \"Japan\");\n     * const childDm3 = dt.groupBy([\"Origin\"]);\n     *\n     * @return {DataModel[]} Returns the immediate child DataModel instances.\n     */\n    getChildren () {\n        return this._children;\n    }\n\n    /**\n     * Returns the in-between operation meta data while creating the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const derivations = dt3.getDerivations();\n     *\n     * @return {Any[]} Returns the derivation meta data.\n     */\n    getDerivations () {\n        return this._derivation;\n    }\n\n    /**\n     * Returns the in-between operation meta data happened from root {@link DataModel} to current instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const ancDerivations = dt3.getAncestorDerivations();\n     *\n     * @return {Any[]} Returns the previous derivation meta data.\n     */\n    getAncestorDerivations () {\n        return this._ancestorDerivation;\n    }\n}\n\nexport default Relation;\n","/* eslint-disable default-case */\n\nimport { FieldType, DimensionSubtype, DataFormat } from './enums';\nimport {\n    persistDerivation,\n    persistAncestorDerivation,\n    getRootGroupByModel,\n    propagateToAllDataModels,\n    getRootDataModel,\n    propagateImmutableActions,\n    addToPropNamespace,\n    sanitizeUnitSchema\n} from './helper';\nimport { DM_DERIVATIVES, PROPAGATION } from './constants';\nimport {\n    dataBuilder,\n    rowDiffsetIterator,\n    groupBy\n} from './operator';\nimport { createBinnedFieldData } from './operator/bucket-creator';\nimport Relation from './relation';\nimport reducerStore from './utils/reducer-store';\nimport { createFields } from './field-creator';\nimport InvalidAwareTypes from './invalid-aware-types';\n\n/**\n * DataModel is an in-browser representation of tabular data. It supports\n * {@link https://en.wikipedia.org/wiki/Relational_algebra | relational algebra} operators as well as generic data\n * processing opearators.\n * DataModel extends {@link Relation} class which defines all the relational algebra opreators. DataModel gives\n * definition of generic data processing operators which are not relational algebra complient.\n *\n * @public\n * @class\n * @extends Relation\n * @memberof Datamodel\n */\nclass DataModel extends Relation {\n    /**\n     * Creates a new DataModel instance by providing data and schema. Data could be in the form of\n     * - Flat JSON\n     * - DSV String\n     * - 2D Array\n     *\n     * By default DataModel finds suitable adapter to serialize the data. DataModel also expects a\n     * {@link Schema | schema} for identifying the variables present in data.\n     *\n     * @constructor\n     * @example\n     * const data = loadData('cars.csv');\n     * const schema = [\n     *      { name: 'Name', type: 'dimension' },\n     *      { name: 'Miles_per_Gallon', type: 'measure', unit : 'cm', scale: '1000', numberformat: val => `${val}G`},\n     *      { name: 'Cylinders', type: 'dimension' },\n     *      { name: 'Displacement', type: 'measure' },\n     *      { name: 'Horsepower', type: 'measure' },\n     *      { name: 'Weight_in_lbs', type: 'measure' },\n     *      { name: 'Acceleration', type: 'measure' },\n     *      { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *      { name: 'Origin', type: 'dimension' }\n     * ];\n     * const dm = new DataModel(data, schema, { name: 'Cars' });\n     * table(dm);\n     *\n     * @public\n     *\n     * @param {Array.<Object> | string | Array.<Array>} data Input data in any of the mentioned formats\n     * @param {Array.<Schema>} schema Defination of the variables. Order of the variables in data and order of the\n     *      variables in schema has to be same.\n     * @param {object} [options] Optional arguments to specify more settings regarding the creation part\n     * @param {string} [options.name] Name of the datamodel instance. If no name is given an auto generated name is\n     *      assigned to the instance.\n     * @param {string} [options.fieldSeparator=','] specify field separator type if the data is of type dsv string.\n     */\n    constructor (...args) {\n        super(...args);\n\n        this._onPropagation = [];\n    }\n\n    /**\n     * Reducers are simple functions which reduces an array of numbers to a representative number of the set.\n     * Like an array of numbers `[10, 20, 5, 15]` can be reduced to `12.5` if average / mean reducer function is\n     * applied. All the measure fields in datamodel (variables in data) needs a reducer to handle aggregation.\n     *\n     * @public\n     *\n     * @return {ReducerStore} Singleton instance of {@link ReducerStore}.\n     */\n    static get Reducers () {\n        return reducerStore;\n    }\n\n    /**\n     * Configure null, undefined, invalid values in the source data\n     *\n     * @public\n     *\n     * @param {Object} [config] - Configuration to control how null, undefined and non-parsable values are\n     * represented in DataModel.\n     * @param {string} [config.undefined] - Define how an undefined value will be represented.\n     * @param {string} [config.null] - Define how a null value will be represented.\n     * @param {string} [config.invalid] - Define how a non-parsable value will be represented.\n     */\n    static configureInvalidAwareTypes (config) {\n        return InvalidAwareTypes.invalidAwareVals(config);\n    }\n\n    /**\n     * Retrieve the data attached to an instance in JSON format.\n     *\n     * @example\n     * // DataModel instance is already prepared and assigned to dm variable\n     *  const data = dm.getData({\n     *      order: 'column',\n     *      formatter: {\n     *          origin: (val) => val === 'European Union' ? 'EU' : val;\n     *      }\n     *  });\n     *  console.log(data);\n     *\n     * @public\n     *\n     * @param {Object} [options] Options to control how the raw data is to be returned.\n     * @param {string} [options.order='row'] Defines if data is retieved in row order or column order. Possible values\n     *      are `'rows'` and `'columns'`\n     * @param {Function} [options.formatter=null] Formats the output data. This expects an object, where the keys are\n     *      the name of the variable needs to be formatted. The formatter function is called for each row passing the\n     *      value of the cell for a particular row as arguments. The formatter is a function in the form of\n     *      `function (value, rowId, schema) => { ... }`\n     *      Know more about {@link Fomatter}.\n     *\n     * @return {Array} Returns a multidimensional array of the data with schema. The return format looks like\n     *      ```\n     *          {\n     *              data,\n     *              schema\n     *          }\n     *      ```\n     */\n    getData (options) {\n        const defOptions = {\n            order: 'row',\n            formatter: null,\n            withUid: false,\n            getAllFields: false,\n            sort: []\n        };\n        options = Object.assign({}, defOptions, options);\n        const fields = this.getPartialFieldspace().fields;\n\n        const dataGenerated = dataBuilder.call(\n            this,\n            this.getPartialFieldspace().fields,\n            this._rowDiffset,\n            options.getAllFields ? fields.map(d => d.name()).join() : this._colIdentifier,\n            options.sort,\n            {\n                columnWise: options.order === 'column',\n                addUid: !!options.withUid\n            }\n        );\n\n        if (!options.formatter) {\n            return dataGenerated;\n        }\n\n        const { formatter } = options;\n        const { data, schema, uids } = dataGenerated;\n        const fieldNames = schema.map((e => e.name));\n        const fmtFieldNames = Object.keys(formatter);\n        const fmtFieldIdx = fmtFieldNames.reduce((acc, next) => {\n            const idx = fieldNames.indexOf(next);\n            if (idx !== -1) {\n                acc.push([idx, formatter[next]]);\n            }\n            return acc;\n        }, []);\n\n        if (options.order === 'column') {\n            fmtFieldIdx.forEach((elem) => {\n                const fIdx = elem[0];\n                const fmtFn = elem[1];\n\n                data[fIdx].forEach((datum, datumIdx) => {\n                    data[fIdx][datumIdx] = fmtFn.call(\n                        undefined,\n                        datum,\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        } else {\n            data.forEach((datum, datumIdx) => {\n                fmtFieldIdx.forEach((elem) => {\n                    const fIdx = elem[0];\n                    const fmtFn = elem[1];\n\n                    datum[fIdx] = fmtFn.call(\n                        undefined,\n                        datum[fIdx],\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        }\n\n        return dataGenerated;\n    }\n\n    /**\n     * Groups the data using particular dimensions and by reducing measures. It expects a list of dimensions using which\n     * it projects the datamodel and perform aggregations to reduce the duplicate tuples. Refer this\n     * {@link link_to_one_example_with_group_by | document} to know the intuition behind groupBy.\n     *\n     * DataModel by default provides definition of few {@link reducer | Reducers}.\n     * {@link ReducerStore | User defined reducers} can also be registered.\n     *\n     * This is the chained implementation of `groupBy`.\n     * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n     *\n     * @example\n     * const groupedDM = dm.groupBy(['Year'], { horsepower: 'max' } );\n     * console.log(groupedDm);\n     *\n     * @public\n     *\n     * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n     * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n     *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n     *      schema of the variable.\n     *\n     * @return {DataModel} Returns a new DataModel instance after performing the groupby.\n     */\n    groupBy (fieldsArr, reducers = {}, config = { saveChild: true }) {\n        const groupByString = `${fieldsArr.join()}`;\n        let params = [this, fieldsArr, reducers];\n        const newDataModel = groupBy(...params);\n\n        persistDerivation(\n            newDataModel,\n            DM_DERIVATIVES.GROUPBY,\n            { fieldsArr, groupByString, defaultReducer: reducerStore.defaultReducer() },\n            reducers\n        );\n        persistAncestorDerivation(this, newDataModel);\n\n        if (config.saveChild) {\n            newDataModel.setParent(this);\n        } else {\n            newDataModel.setParent(null);\n        }\n\n        return newDataModel;\n    }\n\n    /**\n     * Performs sorting operation on the current {@link DataModel} instance according to the specified sorting details.\n     * Like every other operator it doesn't mutate the current DataModel instance on which it was called, instead\n     * returns a new DataModel instance containing the sorted data.\n     *\n     * DataModel support multi level sorting by listing the variables using which sorting needs to be performed and\n     * the type of sorting `ASC` or `DESC`.\n     *\n     * In the following example, data is sorted by `Origin` field in `DESC` order in first level followed by another\n     * level of sorting by `Acceleration` in `ASC` order.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * let sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\"] // Default value is ASC\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * // Sort with a custom sorting function\n     * sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\", (a, b) => a - b] // Custom sorting function\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @text\n     * DataModel also provides another sorting mechanism out of the box where sort is applied to a variable using\n     * another variable which determines the order.\n     * Like the above DataModel contains three fields `Origin`, `Name` and `Acceleration`. Now, the data in this\n     * model can be sorted by `Origin` field according to the average value of all `Acceleration` for a\n     * particular `Origin` value.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * const sortedDm = dm.sort([\n     *     ['Origin', ['Acceleration', (a, b) => avg(...a.Acceleration) - avg(...b.Acceleration)]]\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @public\n     *\n     * @param {Array.<Array>} sortingDetails - Sorting details based on which the sorting will be performed.\n     * @return {DataModel} Returns a new instance of DataModel with sorted data.\n     */\n    sort (sortingDetails, config = { saveChild: false }) {\n        const rawData = this.getData({\n            order: 'row',\n            sort: sortingDetails\n        });\n        const header = rawData.schema.map(field => field.name);\n        const dataInCSVArr = [header].concat(rawData.data);\n\n        const sortedDm = new this.constructor(dataInCSVArr, rawData.schema, { dataFormat: 'DSVArr' });\n\n        persistDerivation(sortedDm, DM_DERIVATIVES.SORT, config, sortingDetails);\n        persistAncestorDerivation(this, sortedDm);\n\n        if (config.saveChild) {\n            sortedDm.setParent(this);\n        } else {\n            sortedDm.setParent(null);\n        }\n\n        return sortedDm;\n    }\n\n    /**\n     * Performs the serialization operation on the current {@link DataModel} instance according to the specified data\n     * type. When an {@link DataModel} instance is created, it de-serializes the input data into its internal format,\n     * and during its serialization process, it converts its internal data format to the specified data type and returns\n     * that data regardless what type of data is used during the {@link DataModel} initialization.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance.\n     * const csvData = dm.serialize(DataModel.DataFormat.DSV_STR, { fieldSeparator: \",\" });\n     * console.log(csvData); // The csv formatted data.\n     *\n     * const jsonData = dm.serialize(DataModel.DataFormat.FLAT_JSON);\n     * console.log(jsonData); // The json data.\n     *\n     * @public\n     *\n     * @param {string} type - The data type name for serialization.\n     * @param {Object} options - The optional option object.\n     * @param {string} options.fieldSeparator - The field separator character for DSV data type.\n     * @return {Array|string} Returns the serialized data.\n     */\n    serialize (type, options) {\n        type = type || this._dataFormat;\n        options = Object.assign({}, { fieldSeparator: ',' }, options);\n\n        const fields = this.getFieldspace().fields;\n        const colData = fields.map(f => f.formattedData());\n        const rowsCount = colData[0].length;\n        let serializedData;\n        let rowIdx;\n        let colIdx;\n\n        if (type === DataFormat.FLAT_JSON) {\n            serializedData = [];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = {};\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row[fields[colIdx].name()] = colData[colIdx][rowIdx];\n                }\n                serializedData.push(row);\n            }\n        } else if (type === DataFormat.DSV_STR) {\n            serializedData = [fields.map(f => f.name()).join(options.fieldSeparator)];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row.join(options.fieldSeparator));\n            }\n            serializedData = serializedData.join('\\n');\n        } else if (type === DataFormat.DSV_ARR) {\n            serializedData = [fields.map(f => f.name())];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row);\n            }\n        } else {\n            throw new Error(`Data type ${type} is not supported`);\n        }\n\n        return serializedData;\n    }\n\n    addField (field) {\n        const fieldName = field.name();\n        this._colIdentifier += `,${fieldName}`;\n        const partialFieldspace = this._partialFieldspace;\n\n        if (!partialFieldspace.fieldsObj()[field.name()]) {\n            partialFieldspace.fields.push(field);\n        } else {\n            const fieldIndex = partialFieldspace.fields.findIndex(fieldinst => fieldinst.name() === fieldName);\n            fieldIndex >= 0 && (partialFieldspace.fields[fieldIndex] = field);\n        }\n\n        // flush out cached namespace values on addition of new fields\n        partialFieldspace._cachedFieldsObj = null;\n        partialFieldspace._cachedDimension = null;\n        partialFieldspace._cachedMeasure = null;\n\n        this.__calculateFieldspace().calculateFieldsConfig();\n        return this;\n    }\n\n    /**\n    * Creates a new variable calculated from existing variables. This method expects the definition of the newly created\n    * variable and a function which resolves the value of the new variable from existing variables.\n    *\n    * Can create a new measure based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const newDm = dataModel.calculateVariable({\n    *      name: 'powerToWeight',\n    *      type: 'measure'\n    *  }, ['horsepower', 'weight_in_lbs', (hp, weight) => hp / weight ]);\n    *\n    *\n    * Can create a new dimension based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const child = dataModel.calculateVariable(\n    *     {\n    *       name: 'Efficiency',\n    *       type: 'dimension'\n    *     }, ['horsepower', (hp) => {\n    *      if (hp < 80) { return 'low'; },\n    *      else if (hp < 120) { return 'moderate'; }\n    *      else { return 'high' }\n    *  }]);\n    *\n    * @public\n    *\n    * @param {Object} schema - The schema of newly defined variable.\n    * @param {Array.<string|function>} dependency - An array containing the dependency variable names and a resolver\n    * function as the last element.\n    * @param {Object} config - An optional config object.\n    * @param {boolean} [config.saveChild] - Whether the newly created DataModel will be a child.\n    * @param {boolean} [config.replaceVar] - Whether the newly created variable will replace the existing variable.\n    * @return {DataModel} Returns an instance of DataModel with the new field.\n    */\n    calculateVariable (schema, dependency, config) {\n        schema = sanitizeUnitSchema(schema);\n        config = Object.assign({}, { saveChild: true, replaceVar: false }, config);\n\n        const fieldsConfig = this.getFieldsConfig();\n        const depVars = dependency.slice(0, dependency.length - 1);\n        const retrieveFn = dependency[dependency.length - 1];\n\n        if (fieldsConfig[schema.name] && !config.replaceVar) {\n            throw new Error(`${schema.name} field already exists in datamodel`);\n        }\n\n        const depFieldIndices = depVars.map((field) => {\n            const fieldSpec = fieldsConfig[field];\n            if (!fieldSpec) {\n                // @todo dont throw error here, use warning in production mode\n                throw new Error(`${field} is not a valid column name.`);\n            }\n            return fieldSpec.index;\n        });\n\n        const clone = this.clone(config.saveChild);\n\n        const fs = clone.getFieldspace().fields;\n        const suppliedFields = depFieldIndices.map(idx => fs[idx]);\n\n        let cachedStore = {};\n        let cloneProvider = () => this.detachedRoot();\n\n        const computedValues = [];\n        rowDiffsetIterator(clone._rowDiffset, (i) => {\n            const fieldsData = suppliedFields.map(field => field.partialField.data[i]);\n            computedValues[i] = retrieveFn(...fieldsData, i, cloneProvider, cachedStore);\n        });\n        const [field] = createFields([computedValues], [schema], [schema.name]);\n        clone.addField(field);\n\n        persistDerivation(clone, DM_DERIVATIVES.CAL_VAR, { config: schema, fields: depVars }, retrieveFn);\n        persistAncestorDerivation(this, clone);\n\n        return clone;\n    }\n\n    /**\n     * Propagates changes across all the connected DataModel instances.\n     *\n     * @param {Array} identifiers - A list of identifiers that were interacted with.\n     * @param {Object} payload - The interaction specific details.\n     *\n     * @return {DataModel} DataModel instance.\n     */\n    propagate (identifiers, config = {}, addToNameSpace, propConfig = {}) {\n        const isMutableAction = config.isMutableAction;\n        const propagationSourceId = config.sourceId;\n        const payload = config.payload;\n        const rootModel = getRootDataModel(this);\n        const propagationNameSpace = rootModel._propagationNameSpace;\n        const rootGroupByModel = getRootGroupByModel(this);\n        const rootModels = {\n            groupByModel: rootGroupByModel,\n            model: rootModel\n        };\n\n        addToNameSpace && addToPropNamespace(propagationNameSpace, config, this);\n        propagateToAllDataModels(identifiers, rootModels, { propagationNameSpace, sourceId: propagationSourceId },\n            Object.assign({\n                payload\n            }, config));\n\n        if (isMutableAction) {\n            propagateImmutableActions(propagationNameSpace, rootModels, {\n                config,\n                propConfig\n            }, this);\n        }\n\n        return this;\n    }\n\n    /**\n     * Associates a callback with an event name.\n     *\n     * @param {string} eventName - The name of the event.\n     * @param {Function} callback - The callback to invoke.\n     * @return {DataModel} Returns this current DataModel instance itself.\n     */\n    on (eventName, callback) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation.push(callback);\n            break;\n        }\n        return this;\n    }\n\n    /**\n     * Unsubscribes the callbacks for the provided event name.\n     *\n     * @param {string} eventName - The name of the event to unsubscribe.\n     * @return {DataModel} Returns the current DataModel instance itself.\n     */\n    unsubscribe (eventName) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation = [];\n            break;\n\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to invoke the method associated with propagation.\n     *\n     * @param {Object} payload The interaction payload.\n     * @param {DataModel} identifiers The propagated DataModel.\n     * @memberof DataModel\n     */\n    handlePropagation (propModel, payload) {\n        let propListeners = this._onPropagation;\n        propListeners.forEach(fn => fn.call(this, propModel, payload));\n    }\n\n    /**\n     * Performs the binning operation on a measure field based on the binning configuration. Binning means discretizing\n     * values of a measure. Binning configuration contains an array; subsequent values from the array marks the boundary\n     * of buckets in [inclusive, exclusive) range format. This operation does not mutate the subject measure field,\n     * instead, it creates a new field (variable) of type dimension and subtype binned.\n     *\n     * Binning can be configured by\n     * - providing custom bin configuration with non-uniform buckets,\n     * - providing bins count,\n     * - providing each bin size,\n     *\n     * When custom `buckets` are provided as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', buckets: [30, 80, 100, 110] }\n     *  const binnedDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binsCount` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', binsCount: 5, start: 0, end: 100 }\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binSize` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHorsepower', binSize: 20, start: 5}\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @public\n     *\n     * @param {string} measureFieldName - The name of the target measure field.\n     * @param {Object} config - The config object.\n     * @param {string} [config.name] - The name of the new field which will be created.\n     * @param {string} [config.buckets] - An array containing the bucket ranges.\n     * @param {string} [config.binSize] - The size of each bin. It is ignored when buckets are given.\n     * @param {string} [config.binsCount] - The total number of bins to generate. It is ignored when buckets are given.\n     * @param {string} [config.start] - The start value of the bucket ranges. It is ignored when buckets are given.\n     * @param {string} [config.end] - The end value of the bucket ranges. It is ignored when buckets are given.\n     * @return {DataModel} Returns a new {@link DataModel} instance with the new field.\n     */\n    bin (measureFieldName, config) {\n        const fieldsConfig = this.getFieldsConfig();\n\n        if (!fieldsConfig[measureFieldName]) {\n            throw new Error(`Field ${measureFieldName} doesn't exist`);\n        }\n\n        const binFieldName = config.name || `${measureFieldName}_binned`;\n\n        if (fieldsConfig[binFieldName]) {\n            throw new Error(`Field ${binFieldName} already exists`);\n        }\n\n        const measureField = this.getFieldspace().fieldsObj()[measureFieldName];\n        const { binnedData, bins } = createBinnedFieldData(measureField, this._rowDiffset, config);\n\n        const binField = createFields([binnedData], [\n            {\n                name: binFieldName,\n                type: FieldType.DIMENSION,\n                subtype: DimensionSubtype.BINNED,\n                bins\n            }], [binFieldName])[0];\n\n        const clone = this.clone(config.saveChild);\n        clone.addField(binField);\n\n        persistDerivation(clone, DM_DERIVATIVES.BIN, { measureFieldName, config, binFieldName }, null);\n        persistAncestorDerivation(this, clone);\n\n        return clone;\n    }\n\n    /**\n     * Creates a new {@link DataModel} instance with completely detached root from current {@link DataModel} instance,\n     * the new {@link DataModel} instance has no parent-children relationship with the current one, but has same data as\n     * the current one.\n     * This API is useful when a completely different {@link DataModel} but with same data as the current instance is\n     * needed.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *  const detachedDm = dm.detachedRoot();\n     *\n     * // has different namespace\n     * console.log(dm.getPartialFieldspace().name);\n     * console.log(detachedDm.getPartialFieldspace().name);\n     *\n     * // has same data\n     * console.log(dm.getData());\n     * console.log(detachedDm.getData());\n     *\n     * @public\n     *\n     * @return {DataModel} Returns a detached {@link DataModel} instance.\n     */\n    detachedRoot () {\n        const data = this.serialize(DataFormat.FLAT_JSON);\n        const schema = this.getSchema();\n\n        return new DataModel(data, schema);\n    }\n}\n\nexport default DataModel;\n","import { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport DataModel from '../export';\nimport reducerStore from '../utils/reducer-store';\nimport { defaultReducerName } from './group-by-function';\nimport { FieldType } from '../enums';\n\n/**\n * This function sanitize the user given field and return a common Array structure field\n * list\n * @param  {DataModel} dataModel the dataModel operating on\n * @param  {Array} fieldArr  user input of field Array\n * @return {Array}           arrays of field name\n */\nfunction getFieldArr (dataModel, fieldArr) {\n    const retArr = [];\n    const fieldStore = dataModel.getFieldspace();\n    const dimensions = fieldStore.getDimension();\n\n    Object.entries(dimensions).forEach(([key]) => {\n        if (fieldArr && fieldArr.length) {\n            if (fieldArr.indexOf(key) !== -1) {\n                retArr.push(key);\n            }\n        } else {\n            retArr.push(key);\n        }\n    });\n\n    return retArr;\n}\n\n/**\n * This sanitize the reducer provide by the user and create a common type of object.\n * user can give function Also\n * @param  {DataModel} dataModel     dataModel to worked on\n * @param  {Object|function} [reducers={}] reducer provided by the users\n * @return {Object}               object containing reducer function for every measure\n */\nfunction getReducerObj (dataModel, reducers = {}) {\n    const retObj = {};\n    const fieldStore = dataModel.getFieldspace();\n    const measures = fieldStore.getMeasure();\n    const defReducer = reducerStore.defaultReducer();\n\n    Object.keys(measures).forEach((measureName) => {\n        if (typeof reducers[measureName] !== 'string') {\n            reducers[measureName] = measures[measureName].defAggFn();\n        }\n        const reducerFn = reducerStore.resolve(reducers[measureName]);\n        if (reducerFn) {\n            retObj[measureName] = reducerFn;\n        } else {\n            retObj[measureName] = defReducer;\n            reducers[measureName] = defaultReducerName;\n        }\n    });\n    return retObj;\n}\n\n/**\n * main function which perform the group-by operations which reduce the measures value is the\n * fields are common according to the reducer function provided\n * @param  {DataModel} dataModel the dataModel to worked\n * @param  {Array} fieldArr  fields according to which the groupby should be worked\n * @param  {Object|Function} reducers  reducers function\n * @param {DataModel} existingDataModel Existing datamodel instance\n * @return {DataModel} new dataModel with the group by\n */\nfunction groupBy (dataModel, fieldArr, reducers, existingDataModel) {\n    const sFieldArr = getFieldArr(dataModel, fieldArr);\n    const reducerObj = getReducerObj(dataModel, reducers);\n    const fieldStore = dataModel.getFieldspace();\n    const fieldStoreObj = fieldStore.fieldsObj();\n    const dbName = fieldStore.name;\n    const dimensionArr = [];\n    const measureArr = [];\n    const schema = [];\n    const hashMap = {};\n    const data = [];\n    let newDataModel;\n\n    // Prepare the schema\n    Object.entries(fieldStoreObj).forEach(([key, value]) => {\n        if (sFieldArr.indexOf(key) !== -1 || reducerObj[key]) {\n            schema.push(extend2({}, value.schema()));\n\n            switch (value.schema().type) {\n            case FieldType.MEASURE:\n                measureArr.push(key);\n                break;\n            default:\n            case FieldType.DIMENSION:\n                dimensionArr.push(key);\n            }\n        }\n    });\n    // Prepare the data\n    let rowCount = 0;\n    rowDiffsetIterator(dataModel._rowDiffset, (i) => {\n        let hash = '';\n        dimensionArr.forEach((_) => {\n            hash = `${hash}-${fieldStoreObj[_].partialField.data[i]}`;\n        });\n        if (hashMap[hash] === undefined) {\n            hashMap[hash] = rowCount;\n            data.push({});\n            dimensionArr.forEach((_) => {\n                data[rowCount][_] = fieldStoreObj[_].partialField.data[i];\n            });\n            measureArr.forEach((_) => {\n                data[rowCount][_] = [fieldStoreObj[_].partialField.data[i]];\n            });\n            rowCount += 1;\n        } else {\n            measureArr.forEach((_) => {\n                data[hashMap[hash]][_].push(fieldStoreObj[_].partialField.data[i]);\n            });\n        }\n    });\n\n    // reduction\n    let cachedStore = {};\n    let cloneProvider = () => dataModel.detachedRoot();\n    data.forEach((row) => {\n        const tuple = row;\n        measureArr.forEach((_) => {\n            tuple[_] = reducerObj[_](row[_], cloneProvider, cachedStore);\n        });\n    });\n    if (existingDataModel) {\n        existingDataModel.__calculateFieldspace();\n        newDataModel = existingDataModel;\n    }\n    else {\n        newDataModel = new DataModel(data, schema, { name: dbName });\n    }\n    return newDataModel;\n}\n\nexport { groupBy, getFieldArr, getReducerObj };\n","import { rowDiffsetIterator } from './row-diffset-iterator';\nimport InvalidAwareTypes from '../invalid-aware-types';\n\nconst generateBuckets = (binSize, start, end) => {\n    const buckets = [];\n    let next = start;\n\n    while (next < end) {\n        buckets.push(next);\n        next += binSize;\n    }\n    buckets.push(next);\n\n    return buckets;\n};\n\nconst findBucketRange = (bucketRanges, value) => {\n    let leftIdx = 0;\n    let rightIdx = bucketRanges.length - 1;\n    let midIdx;\n    let range;\n\n    // Here use binary search as the bucketRanges is a sorted array\n    while (leftIdx <= rightIdx) {\n        midIdx = leftIdx + Math.floor((rightIdx - leftIdx) / 2);\n        range = bucketRanges[midIdx];\n\n        if (value >= range.start && value < range.end) {\n            return range;\n        } else if (value >= range.end) {\n            leftIdx = midIdx + 1;\n        } else if (value < range.start) {\n            rightIdx = midIdx - 1;\n        }\n    }\n\n    return null;\n};\n\n /**\n  * Creates the bin data from input measure field and supplied configs.\n  *\n  * @param {Measure} measureField - The Measure field instance.\n  * @param {string} rowDiffset - The datamodel rowDiffset values.\n  * @param {Object} config - The config object.\n  * @return {Object} Returns the binned data and the corresponding bins.\n  */\nexport function createBinnedFieldData (measureField, rowDiffset, config) {\n    let { buckets, binsCount, binSize, start, end } = config;\n    const [dMin, dMax] = measureField.domain();\n\n    if (!buckets) {\n        start = (start !== 0 && (!start || start > dMin)) ? dMin : start;\n        end = (end !== 0 && (!end || end < dMax)) ? (dMax + 1) : end;\n\n        if (binsCount) {\n            binSize = Math.ceil(Math.abs(end - start) / binsCount);\n        }\n\n        buckets = generateBuckets(binSize, start, end);\n    }\n\n    if (buckets[0] > dMin) {\n        buckets.unshift(dMin);\n    }\n    if (buckets[buckets.length - 1] <= dMax) {\n        buckets.push(dMax + 1);\n    }\n\n    const bucketRanges = [];\n    for (let i = 0; i < buckets.length - 1; i++) {\n        bucketRanges.push({\n            start: buckets[i],\n            end: buckets[i + 1]\n        });\n    }\n\n    const binnedData = [];\n    rowDiffsetIterator(rowDiffset, (i) => {\n        const datum = measureField.partialField.data[i];\n        if (datum instanceof InvalidAwareTypes) {\n            binnedData.push(datum);\n            return;\n        }\n\n        const range = findBucketRange(bucketRanges, datum);\n        binnedData.push(`${range.start}-${range.end}`);\n    });\n\n    return { binnedData, bins: buckets };\n}\n","import { fnList } from '../operator/group-by-function';\n\nexport const { sum, avg, min, max, first, last, count, std: sd } = fnList;\n","import DataModel from './datamodel';\nimport {\n  compose,\n  bin,\n  select,\n  project,\n  groupby as groupBy,\n  calculateVariable,\n  sort,\n  crossProduct,\n  difference,\n  naturalJoin,\n  leftOuterJoin,\n  rightOuterJoin,\n  fullOuterJoin,\n  union\n} from './operator';\nimport * as Stats from './stats';\nimport * as enums from './enums';\nimport { DateTimeFormatter } from './utils';\nimport { DataFormat, FilteringMode, DM_DERIVATIVES } from './constants';\nimport InvalidAwareTypes from './invalid-aware-types';\nimport pkg from '../package.json';\n\nconst Operators = {\n    compose,\n    bin,\n    select,\n    project,\n    groupBy,\n    calculateVariable,\n    sort,\n    crossProduct,\n    difference,\n    naturalJoin,\n    leftOuterJoin,\n    rightOuterJoin,\n    fullOuterJoin,\n    union\n};\n\nconst version = pkg.version;\nObject.assign(DataModel, {\n    Operators,\n    Stats,\n    DM_DERIVATIVES,\n    DateTimeFormatter,\n    DataFormat,\n    FilteringMode,\n    InvalidAwareTypes,\n    version\n}, enums);\n\nexport default DataModel;\n","/**\n * Wrapper on calculateVariable() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const calculateVariable = (...args) => dm => dm.calculateVariable(...args);\n\n/**\n * Wrapper on sort() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const sort = (...args) => dm => dm.sort(...args);\n","import { crossProduct } from './cross-product';\nimport { naturalJoinFilter } from './natural-join-filter-function';\n\nexport function naturalJoin (dataModel1, dataModel2) {\n    return crossProduct(dataModel1, dataModel2, naturalJoinFilter(dataModel1, dataModel2), true);\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"hyperdis\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hyperdis\"] = factory();\n\telse\n\t\troot[\"hyperdis\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const makeEntry = (arr, sCon) => {\n    arr.forEach((elem) => {\n        if (elem === undefined || elem === null) {\n            return;\n        }\n        sCon[elem] = 1;\n    });\n};\n\nexport default class ForeignSet {\n    constructor (arr) {\n        this._set = {};\n        makeEntry(arr, this._set);\n    }\n\n    append (arr) {\n        makeEntry(arr, this._set);\n        return this;\n    }\n\n    toArray () {\n        return Object.keys(this._set);\n    }\n\n    static difference (set1, set2) {\n        let key;\n        const filteredKeys = [],\n            s1 = set1._set,\n            s2 = set2._set;\n        for (key in s1) {\n            if (!({}).hasOwnProperty.call(s1, key)) {\n                continue;\n            }\n            if (key in s2) {\n                continue;\n            }\n            filteredKeys.push(key);\n        }\n        return new ForeignSet(filteredKeys);\n    }\n}\n","/* global window */\n\nimport ForeignSet from './set';\n\nconst\n    isSimpleObject = (obj) => {\n        let token;\n        if (typeof obj === 'object') {\n            if (obj === null) { return false; }\n            token = Object.prototype.toString.call(obj);\n            if (token === '[object Object]') {\n                return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n            }\n        }\n        return false;\n    },\n    minMsThreshold = 16,\n    /* istanbul ignore next */win = typeof window === 'undefined' ? (this || {}) : window,\n    /* istanbul ignore next */ reqAnimFrame = win.requestAnimationFrame || win.webkitRequestAnimationFrame ||\n        win.mozRequestAnimationFrame || win.oRequestAnimationFrame ||\n        win.msRequestAnimationFrame ||\n        function (callback) {\n            setTimeout(callback, minMsThreshold);\n        },\n\n    getTimeBasedId = () => {\n        if (getTimeBasedId.__lastTime === new Date().getTime()) {\n            return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n        }\n\n        getTimeBasedId.__id = 0;\n        getTimeBasedId.__lastTime = new Date().getTime();\n        return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n    },\n    pullableRecent = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const\n                    hist = node.history,\n                    l = hist.length - 1;\n                return [hist[l - 1 < 0 ? 0 : l - 1], hist[l]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    pullableEnd = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const hist = node.history;\n                return [hist[0], hist[hist.length - 1]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    unique = fns => fns\n                    .reduce((store, fn) => {\n                // @warn function with side effect, it mutates the store passed during initialization\n                        if (fn.__id in store.map) {\n                            return store;\n                        }\n\n                        store.map[fn.__id] = 1;\n                        store.unique.push(fn);\n\n                        return store;\n                    }, { map: {}, unique: [] })\n                    .unique,\n    compose = fns => () => {\n        fns.forEach(fn => fn());\n    },\n    flat = (...params) => {\n        const res = [];\n        params.forEach(param => res.push(...param));\n        return res;\n    },\n    identityMap = arrays => arrays,\n    splitPathProp = (path) => {\n        const pathArr = path.split('.'),\n            len = pathArr.length;\n        return [pathArr.slice(0, len - 1), pathArr[len - 1]];\n    },\n    scheduler = (onFinishCallback) => {\n        let queue = [],\n            animationFrame = null;\n\n        onFinishCallback = onFinishCallback &&\n            typeof onFinishCallback === 'function' && onFinishCallback || (() => { });\n\n        return (listeners, payload) => {\n            [].push.apply(queue, listeners);\n            if (animationFrame === null) {\n                animationFrame = reqAnimFrame(() => {\n                    const tempQ = queue.slice(0);\n                    queue.length = 0;\n                    animationFrame = null;\n\n                    unique(tempQ).forEach(fn => fn());\n                    onFinishCallback(payload);\n                });\n            }\n        };\n    },\n    fetch = namedNode => (...params) => params.map((param) => {\n        const node = namedNode[param];\n        return {\n            name: node.name,\n            qualifiedName: node.qualifiedName,\n            value: node.seed\n        };\n    }),\n    fetchAggregator = (...params) => ({\n        dependencies: params.slice(0, params.length - 1),\n        fn: params[params.length - 1]\n    }),\n    getUpstreamNodes = (list) => {\n        let res = [];\n        const map = {};\n        list.forEach(node => map[node.qualifiedName] = -1);\n        function rec (arr) {\n            arr.forEach((node) => {\n                let qname,\n                    placedIndex,\n                    preArr,\n                    postArr;\n                if (!((qname = node.qualifiedName) in map)) {\n                    map[qname] = res.push(node) - 1;\n                } else {\n                    placedIndex = map[qname];\n                    if (placedIndex !== -1 && placedIndex !== res.length - 1) {\n                        // If not the last element, readjust the array so that the later dependency position is saved\n                        preArr = res.slice(0, placedIndex);\n                        postArr = res.slice(placedIndex + 1);\n                        res = preArr.concat(postArr);\n\n                        // reset the index in map\n                        postArr.forEach((elem, i) => map[elem.qualifiedName] = i + preArr.length);\n                        map[qname] = res.push(node) - 1;\n                    }\n                }\n                rec(node.outgoingEdges);\n            });\n        }\n        rec(list);\n        return res;\n    },\n    resolver = {\n        accumulate: (...params) => {\n            const resp = {};\n            params.forEach((nodeDetails) => {\n                Object.assign(resp, { [nodeDetails.name]: nodeDetails.value });\n            });\n            return resp;\n        },\n        identity: nodeDetails => nodeDetails.value\n    };\n\nfunction resolveDependencyOrder (node, resolved, resolveMap) {\n    let qname;\n    node.edges.forEach((neighbour) => {\n        resolveDependencyOrder(neighbour, resolved, resolveMap);\n    });\n\n    if (node.isRoot() || (qname = node.qualifiedName) in resolveMap) {\n        return;\n    }\n    resolved.push(node);\n    resolveMap[qname] = 1;\n}\n\nclass CustomResolver {\n    constructor (resolver) {\n        this.fn = resolver;\n        this.dep = [];\n    }\n\n    addDependencies(...dep) {\n        this.dep.push(...dep);\n        return this;\n    }\n\n    getDependencies () {\n        return this.dep;\n    }\n\n    get () {\n        return this.fn;\n    }\n}\n\nexport {\n    isSimpleObject,\n    scheduler,\n    compose,\n    flat,\n    identityMap,\n    pullableEnd,\n    pullableRecent,\n    unique,\n    splitPathProp,\n    resolver,\n    ForeignSet,\n    resolveDependencyOrder,\n    fetch,\n    fetchAggregator,\n    CustomResolver,\n    getUpstreamNodes\n};\n","export default class GraphNode {\n    constructor (name, qualifiedName, options) {\n        /* istanbul ignore next */options = options || {};\n        this.name = name;\n        this.qualifiedName = qualifiedName;\n        this.edges = [];\n        this.outgoingEdges = [];\n        this._seed = null;\n        this.requireResolve = true;\n        this.retriever = options.retriever;\n        this.history = [];\n        this.resolver = null;\n        this.electricEdges = [];\n    }\n\n    addDependencies (...dep) {\n        this.edges.push(...dep);\n        dep.forEach(entry => entry.outgoingEdges.push(this));\n        return this;\n    }\n\n    addElectricNode (node) {\n        this.electricEdges.push(node);\n        return this;\n    }\n\n    get seed () {\n        return this._seed;\n    }\n\n    set seed (value) {\n        this._seed = value;\n        this.requireResolve = true;\n        return this;\n    }\n\n    resolve () {\n        this.seed = this.resolver(...this.retrieveDetails());\n        this.history.push(this.seed);\n        this.requireResolve = false;\n        return this;\n    }\n\n    retrieveDetails () {\n        if (this.edges.length === 0) {\n            return [{\n                name: this.name,\n                qualifiedName: this.qualifiedName,\n                value: this.seed\n            }];\n        }\n        return this.retriever(...this.edges.map(edge => edge.qualifiedName));\n    }\n\n    repeatHead () {\n        const\n            history = this.history,\n            head = history[history.length - 1];\n        // @todo- Akash, write test case if history.length === 0 to pass code coverage\n        if (history.length === 0) {\n            return this;\n        }\n        history.push(head);\n        return this;\n    }\n\n    flush () {\n        const hist = this.history,\n            head = hist[hist.length - 1];\n        hist.length = 0;\n        hist.push(head);\n        return this;\n    }\n\n    isRoot () {\n        return this.name === null;\n    }\n}\n","import {\n    pullableRecent,\n    pullableEnd\n} from './utils';\n\nexport default class ElectricNode {\n    constructor () {\n        this.edges = [];\n        this.listeners = {\n            nextFrame: [],\n            currentFrame: []\n        };\n    }\n\n    addEdges (...nodes) {\n        this.edges.push(...nodes);\n        return this;\n    }\n\n    regListenerForCurrFrame (fn) {\n        const lstnrs = this.listeners.currentFrame;\n        let index = lstnrs.push(pullableRecent(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.currentFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    regListenerForNextFrame (fn) {\n        const lstnrs = this.listeners.nextFrame;\n        let index = lstnrs.push(pullableEnd(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.nextFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    hasNextFrameListener () {\n        return !!this.listeners.nextFrame.length;\n    }\n}\n","import {\n    isSimpleObject,\n    resolver,\n    // upstreamNodes,\n    flat,\n    resolveDependencyOrder,\n    getUpstreamNodes,\n    ForeignSet,\n    fetch,\n    CustomResolver,\n    scheduler\n} from './utils';\nimport Node from './graph-node';\nimport ElectricNode from './electric-node';\n\nexport default class Graph {\n    constructor () {\n        this.qualifiedNodeMap = {};\n        this.retriever = fetch(this.qualifiedNodeMap);\n        this.root = new Node(null, null, { retriever: this.retriever });\n        this.root.resolver = resolver.accumulate;\n\n        this._wholeSet = null;\n        this._propagate = true;\n        this.propagationOverride = {\n            currentFrameListeners: false,\n            nextFrameListeners: false\n        };\n\n        this._schedule = scheduler((payload) => {\n            let qname;\n            for (qname in payload.flushTarget) {\n                if (!({}).hasOwnProperty.call(this.qualifiedNodeMap, qname)) {\n                    return;\n                }\n                this.qualifiedNodeMap[qname].flush();\n            }\n        });\n    }\n\n    createNodesFrom (obj, mount) {\n        let val,\n            resolveReqList;\n        const qualifiedNodeMap = this.qualifiedNodeMap,\n            root = this.root,\n            retriever = this.retriever;\n\n        (function rec (objn, qualifiedName, history) {\n            let key,\n                qname,\n                perv,\n                node;\n\n            for (key in objn) {\n                if (!({}).hasOwnProperty.call(objn, key)) {\n                    continue;\n                }\n                qname = `${qualifiedName}${key}`;\n                node = new Node(key, qname, { retriever });\n                qualifiedNodeMap[qname] = node;\n\n                if ((perv = history.perv) !== undefined) {\n                    perv.addDependencies(node);\n                } else {\n                    // top most level entries\n                    root.addDependencies(node);\n                }\n\n                if (isSimpleObject(val = objn[key])) {\n                    rec(val, `${qualifiedName}${key}.`, { perv: node });\n                    node.resolver = resolver.accumulate;\n                } else if (val instanceof CustomResolver) {\n                    node.resolver = val.get();\n                    node.addDependencies(...val.getDependencies().map(qname => qualifiedNodeMap[qname]));\n                } else {\n                    node.resolver = resolver.identity;\n                    node.seed = val;\n                    // node.resolve();\n                }\n            }\n        }(obj, mount === null ? '' : `${mount}.`, {\n            perv: qualifiedNodeMap[mount]\n        }));\n\n        this._wholeSet = new ForeignSet(Object.keys(this.qualifiedNodeMap));\n\n        // Recalculate the model without firing the listeners\n        // @todo selective branch resolve. Currently resolve gets called even for a branch which was updated\n        resolveReqList = this.constructor.getResolvedList(root).concat(root).filter(node => node.requireResolve);\n        resolveReqList.forEach(node => node.resolve());\n        getUpstreamNodes(resolveReqList).forEach(node => node.resolve());\n        return this;\n    }\n\n    getNodeValue (prop) {\n        if (prop in this.qualifiedNodeMap) {\n            return this.qualifiedNodeMap[prop].seed;\n        }\n        return undefined;\n    }\n\n    createElectricNodeOf (props, fnSpec) {\n        const nodes = props.map(prop => this.qualifiedNodeMap[prop]),\n            eNode = new ElectricNode().addEdges(...nodes);\n\n        nodes.forEach(node => node.addElectricNode(eNode));\n        return eNode[`regListenerFor${fnSpec.type}`](fnSpec.fn);\n    }\n\n    update (...params) {\n        let changedSet,\n            upstreamNodes;\n        const\n            electricEdges = [],\n            nodes = params.map((entry) => {\n                entry[0].seed = entry[1];\n                return entry[0];\n            });\n        nodes.forEach(node => node.resolve());\n        electricEdges.push(...flat(...nodes.map(node => node.electricEdges)));\n        changedSet = new ForeignSet(nodes.map(node => node.qualifiedName));\n\n        if (!this._propagate) {\n            this.__execUniqueElectricEdges(electricEdges);\n            this._propagate = true;\n            return this;\n        }\n\n        upstreamNodes = getUpstreamNodes(nodes);\n        upstreamNodes.forEach(upstreamNode => upstreamNode.resolve());\n        changedSet.append(upstreamNodes.map(node => node.qualifiedName));\n        electricEdges.push(...flat(...upstreamNodes.map(node => node.electricEdges)));\n\n        this.__execUniqueElectricEdges(Array.from(new Set(electricEdges)), changedSet);\n        return this;\n    }\n\n    __execUniqueElectricEdges (electricEdges, changedSet) {\n        const\n            cfLstnrs = [], // current frame listeners\n            nfLstnrs = []; // next frame listeners\n        if (changedSet) {\n            const\n                differenceSet = ForeignSet.difference(this._wholeSet, changedSet),\n                entries = differenceSet.toArray();\n\n            entries.forEach(entry => this.qualifiedNodeMap[entry].repeatHead());\n        }\n\n        electricEdges.forEach((e) => {\n            cfLstnrs.push(...e.listeners.currentFrame);\n        });\n        electricEdges.forEach((e) => {\n            nfLstnrs.push(...e.listeners.nextFrame);\n        });\n\n        !this.propagationOverride.currentFrameListeners && cfLstnrs.forEach(fn => fn());\n        !this.propagationOverride.nextFrameListeners && this._schedule(nfLstnrs, { flushTarget: changedSet });\n        this.resetPropagationOverride();\n        return this;\n    }\n\n    resetNodeValue (...qnames) {\n        const nodes = qnames.map(qname => this.qualifiedNodeMap[qname]),\n            args = nodes.map(node => [node, node.seed]);\n        this.update(...args);\n        return this;\n    }\n\n    static getResolvedList (node) {\n        const resolved = [];\n        resolveDependencyOrder(node, resolved, {});\n        return resolved;\n    }\n\n    stopPropagation () {\n        this._propagate = false;\n        return this;\n    }\n\n    resetPropagationOverride () {\n        this.propagationOverride.currentFrameListeners = false;\n        this.propagationOverride.nextFrameListeners = false;\n        return this;\n    }\n\n    setPropagationOverride (key) {\n        this.propagationOverride[`${key}Listeners`] = true;\n        return this;\n    }\n\n    getNodeFromQualifiedName (qname) {\n        return this.qualifiedNodeMap[qname];\n    }\n}\n","import Graph from './graph';\nimport { CustomResolver, fetchAggregator } from './utils';\n\n/**\n * The container class for Hyperdis. Hyperdis is an enabler for observable object with few interesting features like,\n * calculated property, next frame and same frame listeners, multiple listeners etc with a dependency resolving system.\n * It internally uses a graph to hold the hierarchial relationship of a object. Model is merely a container which\n * ties all the components together.\n *\n * @todo Circular dependency detection is not present\n *\n * @example check src/index.spec.js\n * @class\n */\nclass Model {\n    constructor () {\n        this._graph = new Graph();\n        this._lockFlag = false;\n        this._reqQ = [];\n    }\n\n    /**\n     * Static method to create and init the model with an observable seed\n     *\n     * @param {Object} obj The target object which is required to be made observable\n     * @return {Model} instance of the observable object model\n     */\n    static create (obj) {\n        return new Model()._addPropInModel(null, obj);\n    }\n\n    /**\n     * Appends more observable property on the already observable instance. This mutates the original model.\n     *\n     * This function works in two mode. One being\n     * @param {String} mountPoint the property on which the new set of properties will be mounted. If its a nested\n     *                          property then the mountPoint has to be written such a way so it feels like you are\n     *                          accessing the object. If the mount point is not found then he obeservables are added in\n     *                          the root.\n     * @param {Object} The target object which is required to be made observable\n     *\n     * Another being\n     * @param {Object} The target object which is required to be made observable\n     *\n     * @return {Model} instance of the observable object model\n     */\n    append (...params) {\n        let mountPoint,\n            obj;\n\n        if (params.length === 1) {\n            mountPoint = null;\n            obj = params[0];\n        } else {\n            mountPoint = params[0];\n            obj = params[1];\n        }\n\n        this._addPropInModel(mountPoint, obj);\n        return this;\n    }\n\n    /**\n     * Creates a calculated variable from existing variable. This variable can't be updated from outside.\n     * @param {string} mountpoint property path on which the new variable will be placed\n     * @param {string} name name of the variable. If the variable could have hierarchy like `limits.start`\n     * @param {Function} fn funtion where the dependent variables are injected based on the dependency requirement\n     */\n    calculatedProp (...params) {\n        let calculationConfig,\n            customResolver,\n            varName,\n            mount,\n            fetchFn;\n\n        if (params.length > 2) {\n            mount = params[0];\n            varName = params[1];\n            fetchFn = params[2];\n        } else {\n            mount = null;\n            varName = params[0];\n            fetchFn = params[1];\n        }\n\n        calculationConfig = fetchFn(fetchAggregator);\n        customResolver = new CustomResolver(calculationConfig.fn);\n        customResolver.addDependencies(...calculationConfig.dependencies);\n\n        this._addPropInModel(mount, { [varName]: customResolver });\n        return this;\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    _addPropInModel (mountPoint, obj) {\n        this._graph.createNodesFrom(obj, mountPoint);\n        return this;\n    }\n\n    /**\n     * Register a listener in the current frame when a property or group of properties is changed.\n     *\n     * @example\n     * This function takes a single or group of property and handler which is called when any of the properties are\n     * changed.\n     * When a single property is changed the handler is called with two parameter, what was the old value of the state\n     * property and what is the new value.\n     * myState.on('range.start', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 9);\n     * // Output\n     * Value before prop change 1\n     * Value after prop change 9\n     *\n     * If a handler is registered on change of a property which has another state property as value, then the handler\n     * gets called whenever any state property connected to it gets changed\n     *\n     * myState.on('range', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 10);\n     * myState.prop('range.type.absolute', false);\n     *\n     * // Output\n     * Value before prop change\n     * range {\n     *      start: 9,\n     *      end: 5,\n     *      type: {\n     *          absolute: true\n     *      }\n     * }\n     * Value after prop change\n     * range: {\n     *      start: 10,\n     *      end: 5,\n     *      type: {\n     *          absolute: false\n     *      }\n     * }\n     * If a handler is registered with more than one property change then, the handler is called when any of the\n     * properties gets changed. In this cast the handler is called with more than one parameter: each for one state\n     * property which is registered for listening. Each parameter is of type array containing [oldValue, newValue]\n     *\n     * myState.on('range.start', 'range.end', (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * myState.prop('range.start', 12);\n     *\n     * // Output\n     * Start [10, 12]\n     * End [5, 5]\n     *\n     * myState.prop('range.end', 7);\n     *\n     * // Output\n     * Start [12, 12]\n     * End [5, 7]\n     *\n     * The on returns a function which is when called the listener registered gets unregistered\n     *\n     * let unsub = myState.on(['range.start', 'range.end'], (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * // Unsubscribe\n     * unsub()\n     *\n     * On takes an optional boolean value as the last parameter, which if passed as a true value the handler gets called\n     * during registration itself.\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    on (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed in the current stack frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'CurrFrame',\n                fn\n            });\n\n        if (instantCall) {\n            // Bar current next frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('nextFrame').resetNodeValue(...props);\n        }\n        return unsub;\n    }\n\n    /**\n     * Register a listener for the next frame when a property or group of properties is changed.\n     *\n     * @example\n     * See the examples for the on listener\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties. Here the oldvalue is last value of the last frame\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    next (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed at the tick of next animation frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'NextFrame',\n                fn\n            });\n\n        // @todo check support for this from the graph side\n        if (instantCall) {\n            // Bar current frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('currentFrame').resetNodeValue(...props);\n        }\n\n        return unsub;\n    }\n\n    /**\n     * Lock queues the request of property change and releases the change when unlock is called. This is helpful when\n     * multiple property is getting called and the model listeners are to be fired once at the end of update.\n     *\n     * @return {Model} instance of the model\n     */\n    lock () {\n        this._lockFlag = true;\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * Unlock unleashes the change done after the lock was called.\n\n     * @return {Model} instance of the model\n     */\n    unlock () {\n        this._lockFlag = false;\n        this.setProp(...this._reqQ);\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * This acts as getter and setter. If the function is called by passing only one argument, it retrieve the value\n     * associated with the property. If the same function is called using two parameters, first one being the property\n     * and second one being the value, then the value is set for the property and the handlers are called (if any)\n     * which got registered using the on function\n     *\n     * Getter\n     * @param {string} prop property path whose value to be retrieved\n     * @return {Object} value of the property at the time of call\n     *\n     * Setter\n     * @param {string} property property path whose value to be ser\n     * @return {Model} instance of the model\n     */\n    prop (...params) {\n        let prop,\n            val,\n            len;\n\n        switch (len = params.length) {\n        case 1:\n            prop = params[0];\n            break;\n\n        case 2:\n            prop = params[0];\n            val = params[1];\n            break;\n\n        default:\n            return this;\n        }\n\n        if (len === 2) {\n            this._lockFlag ? this._reqQ.push([prop, val]) : this.setProp([prop, val]);\n            return this;\n        }\n\n        return this._graph.getNodeValue(prop);\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    setProp (...props) {\n        // Filter out the calculated variables, so that it cant be changed from outside\n        // @todo if a node is not leafValue, and change is called, ignore it too\n        // props = props.filter(prop => !(VirtualObj.walkTill(prop[0].split('.'), this._vObj).leafValue()\n        //     instanceof CalculatedVar));\n\n        if (props.length === 0) {\n            return this;\n        }\n\n        this._graph.update(...props.map(prop => [this._graph.getNodeFromQualifiedName(prop[0]), prop[1]]));\n        return this;\n    }\n\n    /**\n     * Retrieves the graph representation of the object\n     * @return {Graph} instance of the graph associated to the model\n     */\n    graph () {\n        return this._graph;\n    }\n\n    /**\n     * Get serialized data from the model\n     *\n     * @return {Object} Serialized data\n     */\n    serialize () {\n        return this._graph.root.seed;\n    }\n}\n\nexport default Model;\n","import Model from './model';\n\nexport default Model;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar _containerManager = require('./container-manager');\n\nvar _containerManager2 = _interopRequireDefault(_containerManager);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    M = slLib.win.Math,\n    max = M.max,\n    round = M.round,\n    BLANK = '',\n    htmlSplCharSpace = { ' ': '&nbsp;' },\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\n/*\n * Create new instance of SmartLabelManager.\n *\n * SmartLabelManager controls the lifetime of the execution space where the text's metrics will be calculated.\n * This takes a string for a given style and returns the height, width.\n * If a bound box is defined it wraps the text and returns the wrapped height and width.\n * It allows to append ellipsis at the end if the text is truncated.\n *\n * @param {String | Number} id - Id of the instance. If the same id is passed, it disposes the old instance and\n *                              save the new one;\n * @param {String | HTMLElement} container - The id or the instance of the container where the intermediate dom\n *                              elements are to be attached. If not passed, it appends in div\n *\n * @param {Boolean} useEllipses - This decides if a ellipses to be appended if the text is truncated.\n * @param {Object} options - Control options\n *                          {\n *                              maxCacheLimit: No of letter to be cached. Default: 500.\n *                          }\n * @constructor\n */\nfunction SmartLabelManager(id, container, useEllipses, options) {\n    var wrapper,\n        prop,\n        max,\n        prevInstance,\n        isBrowserLess = false,\n        store = SmartLabelManager.store;\n\n    if (typeof id === 'undefined' || typeof id === 'object') {\n        return;\n    }\n\n    if (prevInstance = store[id]) {\n        prevInstance.dispose();\n    }\n\n    store[id] = this;\n    options = options || {};\n    options.maxCacheLimit = isFinite(max = options.maxCacheLimit) ? max : slLib.maxDefaultCacheLimit;\n\n    if (typeof container === 'string') {\n        container = doc.getElementById(container);\n    }\n\n    wrapper = slLib.createContainer(container);\n    wrapper.innerHTML = slLib.testStrAvg;\n\n    if (documentSupport.isHeadLess || !documentSupport.isIE && !wrapper.offsetHeight && !wrapper.offsetWidth) {\n        isBrowserLess = true;\n    }\n\n    wrapper.innerHTML = '';\n    for (prop in slLib.parentContainerStyle) {\n        wrapper.style[prop] = slLib.parentContainerStyle[prop];\n    }\n\n    this.id = id;\n    this.parentContainer = wrapper;\n\n    this._containerManager = new _containerManager2['default'](wrapper, isBrowserLess, 10);\n    this._showNoEllipses = !useEllipses;\n    this._init = true;\n    this.style = {};\n    this.options = options;\n\n    this.setStyle();\n}\n\n/*\n * getSmartText returns the text separated by <br/> whenever a break is necessary. This is to recgonize one\n * generalized format independent of the implementation (canvas based solution, svg based solution). This method\n * converts the output of getSmartText().text to array of lines if the text is wrapped. It sets a named property\n * `lines` on the object passed as parameter.\n *\n * @param {Object} smartlabel - the object returned by getSmartText based on which line arr which to be formed.\n *\n * @return {Object} - The same object which was passed in the arguments. Also a named property `lines` is set.\n */\nSmartLabelManager.textToLines = function (smartlabel) {\n    smartlabel = smartlabel || {};\n\n    if (!smartlabel.text) {\n        smartlabel.text = '';\n    } else if (typeof smartlabel.text !== 'string') {\n        smartlabel.text = smartlabel.text.toString();\n    }\n\n    smartlabel.lines = smartlabel.text.split(/\\n|<br\\s*?\\/?>/ig);\n    return smartlabel;\n};\n\n// Saves all the instance created so far\nSmartLabelManager.store = {};\n\n// Calculates space taken by a character with an approximation value which is calculated by repeating the\n// character by string length times.\nSmartLabelManager.prototype._calCharDimWithCache = function (text, calculateDifference, length) {\n    if (!this._init) {\n        return false;\n    }\n\n    var size,\n        csArr,\n        tw,\n        twi,\n        cachedStyle,\n        asymmetricDifference,\n        maxAdvancedCacheLimit = this.options.maxCacheLimit,\n        container = this._container,\n        style = this.style || {},\n        cache = this._advancedCache || (this._advancedCache = {}),\n        advancedCacheKey = this._advancedCacheKey || (this._advancedCacheKey = []),\n        cacheName = text + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK),\n        cacheInitName = text + 'init' + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK);\n\n    htmlSplCharSpace[text] && (text = htmlSplCharSpace[text]);\n\n    if (!calculateDifference) {\n        asymmetricDifference = 0;\n    } else {\n        if ((asymmetricDifference = cache[cacheInitName]) === undefined) {\n            container.innerHTML = text.repeat ? text.repeat(length) : Array(length + 1).join(text); // jshint ignore:line\n            tw = container.offsetWidth;\n\n            container.innerHTML = text;\n            twi = container.offsetWidth;\n\n            asymmetricDifference = cache[cacheInitName] = (tw - length * twi) / (length + 1);\n            advancedCacheKey.push(cacheInitName);\n            if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n                delete cache[advancedCacheKey.shift()];\n            }\n        }\n    }\n\n    if (cachedStyle = cache[cacheName]) {\n        csArr = cachedStyle.split(',');\n        return {\n            width: parseFloat(csArr[0], 10),\n            height: parseFloat(csArr[1], 10)\n        };\n    }\n\n    container.innerHTML = text;\n\n    size = {\n        height: container.offsetHeight,\n        width: container.offsetWidth + asymmetricDifference\n    };\n\n    cache[cacheName] = size.width + ',' + size.height;\n    advancedCacheKey.push(cacheName);\n    if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n        delete cache[advancedCacheKey.shift()];\n    }\n\n    return size;\n};\n\n// Provide function to calculate the height and width based on the environment and available support from dom.\nSmartLabelManager.prototype._getWidthFn = function () {\n    var contObj = this._containerObj,\n        container = this._container,\n        svgText = contObj.svgText;\n\n    if (svgText) {\n        return function (str) {\n            var bbox, width;\n\n            svgText.textContent = str;\n            bbox = svgText.getBBox();\n            width = bbox.width - SVG_BBOX_CORRECTION;\n            if (width < 1) {\n                width = bbox.width;\n            }\n\n            return width;\n        };\n    } else {\n        return function (str) {\n            container.innerHTML = str;\n            return container.offsetWidth;\n        };\n    }\n};\n\n/*\n * Sets the style based on which the text's metrics to be calculated.\n *\n * @param {Object} style - The style object which affects the text size\n *                      {\n *                          fontSize / 'font-size' : MUST BE FOLLOWED BY PX (10px, 11px)\n *                          fontFamily / 'font-family'\n *                          fontWeight / 'font-weight'\n *                          fontStyle / 'font-style'\n *                      }\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.setStyle = function (style) {\n    if (!this._init) {\n        return this;\n    }\n\n    var sCont;\n\n    if (style === this.style && !this._styleNotSet) {\n        return;\n    }\n\n    if (!style) {\n        style = this.style;\n    }\n\n    slLib.setLineHeight(style);\n    this.style = style;\n\n    this._containerObj = sCont = this._containerManager.get(style);\n\n    if (this._containerObj) {\n        this._container = sCont.node;\n        this._context = sCont.context;\n        this._cache = sCont.charCache;\n        this._lineHeight = sCont.lineHeight;\n        this._styleNotSet = false;\n    } else {\n        this._styleNotSet = true;\n    }\n\n    return this;\n};\n\n/*\n * Decides whether ellipses to be shown if the node is truncated\n *\n * @param {Boolean} useEllipses - decides if a ellipses to be appended if the text is truncated. Default: false\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.useEllipsesOnOverflow = function (useEllipses) {\n    if (!this._init) {\n        return this;\n    }\n    this._showNoEllipses = !useEllipses;\n    return this;\n};\n\n/*\n * Get wrapped or truncated text if a bound box is defined around it. The result text would be separated by <br/>\n * if wrapped\n *\n * @param {String} text - the subject text\n * @param {Number} maxWidth - width in px of the the bound box\n * @param {Number} maxHeight - height in px of the the bound box\n * @param {Boolean} noWrap - whether the text to be wrapped. Default false.\n *\n * @return {Object} - The metrics of the text bounded by the box\n *                  {\n *                      height : height of the wrapped text\n *                      width : width of the wrapped text\n *                      isTruncated : whether the text is truncated\n *                      maxHeight : Maximum height given\n *                      maxWidth : Maximum width given\n *                      oriText : Original text sent\n *                      oriTextHeight : Original text height\n *                      oriTextWidth : Original text width\n *                      text : SMART TEXT\n *                  }\n */\nSmartLabelManager.prototype.getSmartText = function (text, maxWidth, maxHeight, noWrap) {\n    if (!this._init) {\n        return false;\n    }\n\n    if (text === undefined || text === null) {\n        text = '';\n    } else if (typeof text !== 'string') {\n        text = text.toString();\n    }\n\n    var len,\n        trimStr,\n        tempArr,\n        tmpText,\n        maxWidthWithEll,\n        toolText,\n        oriWidth,\n        oriHeight,\n        newCharIndex,\n        nearestChar,\n        tempChar,\n        getWidth,\n        initialLeft,\n        initialTop,\n        getOriSizeImproveObj,\n        spanArr,\n        x,\n        y,\n        minWidth,\n        elem,\n        chr,\n        elemRightMostPoint,\n        elemLowestPoint,\n        lastBR,\n        removeFromIndex,\n        removeFromIndexForEllipses,\n        hasHTMLTag = false,\n        maxStrWidth = 0,\n        lastDash = -1,\n        lastSpace = -1,\n        lastIndexBroken = -1,\n        strWidth = 0,\n        strHeight = 0,\n        oriTextArr = [],\n        i = 0,\n        ellipsesStr = this._showNoEllipses ? '' : '...',\n        lineHeight = this._lineHeight,\n        context = this._context,\n        container = this._container,\n        sCont = this._containerObj,\n        ellipsesWidth = sCont.ellipsesWidth,\n        dotWidth = sCont.dotWidth,\n        characterArr = [],\n        dashIndex = -1,\n        spaceIndex = -1,\n        lastLineBreak = -1,\n        fastTrim = function fastTrim(str) {\n        str = str.replace(/^\\s\\s*/, '');\n        var ws = /\\s/,\n            i = str.length;\n        while (ws.test(str.charAt(i -= 1))) {/* jshint noempty:false */}\n        return str.slice(0, i + 1);\n    },\n        smartLabel = {\n        text: text,\n        maxWidth: maxWidth,\n        maxHeight: maxHeight,\n        width: null,\n        height: null,\n        oriTextWidth: null,\n        oriTextHeight: null,\n        oriText: text,\n        isTruncated: false\n    };\n\n    getWidth = this._getWidthFn();\n\n    // In some browsers, offsetheight of a single-line text is getting little (1 px) heigher value of the\n    // lineheight. As a result, smartLabel is unable to return single-line text.\n    // To fix this, increase the maxHeight a little amount. Hence maxHeight =  lineHeight * 1.2\n    if (maxHeight === lineHeight) {\n        maxHeight *= 1.2;\n    }\n\n    if (container) {\n        if (!documentSupport.isBrowserLess) {\n            hasHTMLTag = slLib.xmlTagRegEx.test(text);\n            if (!hasHTMLTag) {\n                // Due to support of <,> for xml we convert &lt;, &gt; to <,> respectively so to get the correct\n                // width it is required to convert the same before calculation for the new improve version of the\n                // get text width.\n                tmpText = text.replace(slLib.ltgtRegex, function (match) {\n                    return match === '&lt;' ? '<' : '>';\n                });\n                getOriSizeImproveObj = this.getOriSize(tmpText, true);\n\n                smartLabel.oriTextWidth = oriWidth = getOriSizeImproveObj.width;\n                smartLabel.oriTextHeight = oriHeight = getOriSizeImproveObj.height;\n            } else {\n                container.innerHTML = text;\n                smartLabel.oriTextWidth = oriWidth = container.offsetWidth;\n                smartLabel.oriTextHeight = oriHeight = container.offsetHeight;\n            }\n\n            if (oriHeight <= maxHeight && oriWidth <= maxWidth) {\n                smartLabel.width = smartLabel.oriTextWidth = oriWidth;\n                smartLabel.height = smartLabel.oriTextHeight = oriHeight;\n                return smartLabel;\n            }\n\n            if (lineHeight > maxHeight) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = 0;\n                smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            }\n        }\n\n        // Calculate width with ellipses\n        text = fastTrim(text).replace(/(\\s+)/g, ' ');\n        maxWidthWithEll = this._showNoEllipses ? maxWidth : maxWidth - ellipsesWidth;\n\n        if (!hasHTMLTag) {\n            oriTextArr = text.split('');\n            len = oriTextArr.length;\n            trimStr = '', tempArr = [];\n            tempChar = oriTextArr[0];\n\n            if (this._cache[tempChar]) {\n                minWidth = this._cache[tempChar].width;\n            } else {\n                minWidth = getWidth(tempChar);\n                this._cache[tempChar] = { width: minWidth };\n            }\n\n            if (maxWidthWithEll > minWidth) {\n                tempArr = text.substr(0, slLib.getNearestBreakIndex(text, maxWidthWithEll, this)).split('');\n                i = tempArr.length;\n            } else if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            } else if (ellipsesStr) {\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            strWidth = getWidth(tempArr.join(''));\n            strHeight = this._lineHeight;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                            smartLabel.tooltext = smartLabel.oriText;\n                            smartLabel.width = getWidth(smartLabel.text);\n                            smartLabel.height = this._lineHeight;\n                            return smartLabel;\n                        }\n                    }\n                }\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = strWidth;\n                smartLabel.height = this._lineHeight;\n                return smartLabel;\n            } else {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (tempChar === ' ' && !context) {\n                        tempChar = '&nbsp;';\n                    }\n\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            /** @todo use regular expressions for better performance. */\n                            lastSpace = text.substr(0, tempArr.length).lastIndexOf(' ');\n                            lastDash = text.substr(0, tempArr.length).lastIndexOf('-');\n                            if (lastSpace > lastIndexBroken) {\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                tempArr.splice(lastSpace, 1, '<br/>');\n                                lastIndexBroken = lastSpace;\n                                newCharIndex = lastSpace + 1;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === tempArr.length - 1) {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '<br/>-');\n                                } else {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '-<br/>');\n                                }\n                                lastIndexBroken = lastDash;\n                                newCharIndex = lastDash + 1;\n                            } else {\n                                tempArr.splice(tempArr.length - 1, 1, '<br/>' + oriTextArr[i]);\n                                lastLineBreak = tempArr.length - 2;\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastLineBreak + 1).join(''));\n                                lastIndexBroken = lastLineBreak;\n                                newCharIndex = i;\n                            }\n                            strHeight += this._lineHeight;\n                            if (strHeight > maxHeight) {\n                                smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                                smartLabel.tooltext = smartLabel.oriText;\n                                // The max width among all the lines will be the width of the string.\n                                smartLabel.width = maxWidth;\n                                smartLabel.height = strHeight - this._lineHeight;\n                                return smartLabel;\n                            } else {\n                                maxStrWidth = max(maxStrWidth, strWidth);\n                                trimStr = null;\n                                nearestChar = slLib.getNearestBreakIndex(text.substr(newCharIndex), maxWidthWithEll, this);\n                                strWidth = getWidth(text.substr(newCharIndex, nearestChar || 1));\n                                if (tempArr.length < newCharIndex + nearestChar) {\n                                    tempArr = tempArr.concat(text.substr(tempArr.length, newCharIndex + nearestChar - tempArr.length).split(''));\n                                    i = tempArr.length - 1;\n                                }\n                            }\n                        }\n                    }\n                }\n\n                maxStrWidth = max(maxStrWidth, strWidth);\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = maxStrWidth;\n                smartLabel.height = strHeight;\n                return smartLabel;\n            }\n        } else {\n            toolText = text.replace(slLib.spanAdditionRegx, '$2');\n            text = text.replace(slLib.spanAdditionRegx, slLib.spanAdditionReplacer);\n            text = text.replace(/(<br\\s*\\/*\\>)/g, '<span class=\"' + [slLib.classNameWithTag, ' ', slLib.classNameWithTagBR].join('') + '\">$1</span>');\n\n            container.innerHTML = text;\n\n            spanArr = container[documentSupport.childRetriverFn](documentSupport.childRetriverString);\n\n            for (x = 0, y = spanArr.length; x < y; x += 1) {\n                elem = spanArr[x];\n                //chech whether this span is temporary inserted span from it's class\n                if (documentSupport.noClassTesting || slLib.classNameReg.test(elem.className)) {\n                    chr = elem.innerHTML;\n                    if (chr !== '') {\n                        if (chr === ' ') {\n                            spaceIndex = characterArr.length;\n                        } else if (chr === '-') {\n                            dashIndex = characterArr.length;\n                        }\n\n                        characterArr.push({\n                            spaceIdx: spaceIndex,\n                            dashIdx: dashIndex,\n                            elem: elem\n                        });\n                        oriTextArr.push(chr);\n                    }\n                }\n            }\n\n            i = 0;\n            len = characterArr.length;\n            minWidth = characterArr[0].elem.offsetWidth;\n\n            if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n\n                return smartLabel;\n            } else if (minWidth > maxWidthWithEll && !this._showNoEllipses) {\n\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            initialLeft = characterArr[0].elem.offsetLeft;\n            initialTop = characterArr[0].elem.offsetTop;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n                        if (container.offsetWidth > maxWidth) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            } else {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemLowestPoint = elem.offsetHeight + (elem.offsetTop - initialTop);\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    lastBR = null;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n\n                        if (elemRightMostPoint > maxWidth) {\n                            lastSpace = characterArr[i].spaceIdx;\n                            lastDash = characterArr[i].dashIdx;\n                            if (lastSpace > lastIndexBroken) {\n                                characterArr[lastSpace].elem.innerHTML = '<br/>';\n                                lastIndexBroken = lastSpace;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === i) {\n                                    // in case the overflowing character itself is the '-'\n                                    characterArr[lastDash].elem.innerHTML = '<br/>-';\n                                } else {\n                                    characterArr[lastDash].elem.innerHTML = '-<br/>';\n                                }\n                                lastIndexBroken = lastDash;\n                            } else {\n                                elem.parentNode.insertBefore(lastBR = doc.createElement('br'), elem);\n                            }\n\n                            //check whether this break made current element outside the area height\n                            if (elem.offsetHeight + elem.offsetTop > maxHeight) {\n                                //remove the lastly inserted line break\n                                if (lastBR) {\n                                    lastBR.parentNode.removeChild(lastBR);\n                                } else if (lastIndexBroken === lastDash) {\n                                    characterArr[lastDash].elem.innerHTML = '-';\n                                } else {\n                                    characterArr[lastSpace].elem.innerHTML = ' ';\n                                }\n                                removeFromIndex = i;\n                                //break the looping condition\n                                i = len;\n                            } else {\n                                removeFromIndexForEllipses = null;\n                            }\n                        }\n                    } else {\n                        //check whether this break made current element outside the area height\n                        if (elemLowestPoint > maxHeight) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            }\n\n            if (removeFromIndex < len) {\n                //set the trancated property of the smartlabel\n                smartLabel.isTruncated = true;\n\n                /** @todo is this really needed? */\n                removeFromIndexForEllipses = removeFromIndexForEllipses ? removeFromIndexForEllipses : removeFromIndex;\n\n                for (i = len - 1; i >= removeFromIndexForEllipses; i -= 1) {\n                    elem = characterArr[i].elem;\n                    //chech whether this span is temporary inserted span from it's class\n                    elem.parentNode.removeChild(elem);\n                }\n\n                for (; i >= 0; i -= 1) {\n                    elem = characterArr[i].elem;\n                    if (slLib.classNameBrReg.test(elem.className)) {\n                        //chech whether this span is temporary inserted span from it's class\n                        elem.parentNode.removeChild(elem);\n                    } else {\n                        i = 0;\n                    }\n                }\n            }\n\n            //get the smart text\n            smartLabel.text = container.innerHTML.replace(slLib.spanRemovalRegx, '$1').replace(/\\&amp\\;/g, '&');\n            if (smartLabel.isTruncated) {\n                smartLabel.text += ellipsesStr;\n                smartLabel.tooltext = toolText;\n            }\n        }\n\n        smartLabel.height = container.offsetHeight;\n        smartLabel.width = container.offsetWidth;\n\n        return smartLabel;\n    } else {\n        smartLabel.error = new Error('Body Tag Missing!');\n        return smartLabel;\n    }\n};\n\n/*\n * Get the height and width of a text.\n *\n * @param {String} text - Text whose metrics to be measured\n * @param {Boolean} Optional detailedCalculationFlag - this flag if set it calculates per letter position\n *                          information and returns it. Ideally you dont need it unless you want to post process the\n *                          string. And its an EXPENSIVE OPERATION.\n *\n * @return {Object} - If detailedCalculationFlag is set to true the returned object would be\n *                  {\n *                      height: height of the text\n *                      width: width of the text\n *                      detailObj: detail calculation of letters in the format {lettername: width}\n *                  }\n *                  If detailedCalculationFlag is set to false the returned object wont have the detailObj prop.\n */\nSmartLabelManager.prototype.getOriSize = function (text, detailedCalculationFlag) {\n    if (!this._init) {\n        return false;\n    }\n\n    var textArr,\n        letter,\n        lSize,\n        i,\n        l,\n        cumulativeSize = 0,\n        height = 0,\n        indiSizeStore = {};\n\n    if (!detailedCalculationFlag) {\n        return this._calCharDimWithCache(text);\n    }\n\n    // Calculate the width of every letter with an approximation\n    textArr = text.split('');\n    for (i = 0, l = textArr.length; i < l; i++) {\n        letter = textArr[i];\n        lSize = this._calCharDimWithCache(letter, true, textArr.length);\n        height = max(height, lSize.height);\n        cumulativeSize += lSize.width;\n        indiSizeStore[letter] = lSize.width;\n    }\n\n    return {\n        width: round(cumulativeSize),\n        height: height,\n        detailObj: indiSizeStore\n    };\n};\n\n/*\n * Dispose the container and object allocated by the smartlabel\n */\nSmartLabelManager.prototype.dispose = function () {\n    if (!this._init) {\n        return this;\n    }\n\n    this._containerManager && this._containerManager.dispose && this._containerManager.dispose();\n\n    delete this._container;\n    delete this._context;\n    delete this._cache;\n    delete this._containerManager;\n    delete this._containerObj;\n    delete this.id;\n    delete this.style;\n    delete this.parentContainer;\n    delete this._showNoEllipses;\n\n    return this;\n};\n\nexports['default'] = SmartLabelManager;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\nvar lib = {\n\tinit: function init(win) {\n\t\tvar doc = win.document,\n\t\t    nav = win.navigator,\n\t\t    userAgent = nav.userAgent,\n\t\t    DIV = 'DIV',\n\t\t    ceil = Math.ceil,\n\t\t    floor = Math.floor,\n\t\t    containerInstanceCount = 0,\n\t\t    clsNameSpace = 'fusioncharts-smartlabel-',\n\t\t    containerClass = clsNameSpace + 'container',\n\t\t    classNameWithTag = clsNameSpace + 'tag',\n\t\t    classNameWithTagBR = clsNameSpace + 'br';\n\n\t\tlib = {\n\t\t\twin: win,\n\n\t\t\tcontainerClass: containerClass,\n\n\t\t\tclassNameWithTag: classNameWithTag,\n\n\t\t\tclassNameWithTagBR: classNameWithTagBR,\n\n\t\t\tmaxDefaultCacheLimit: 500,\n\n\t\t\tclassNameReg: new RegExp('\\b' + classNameWithTag + '\\b'),\n\n\t\t\tclassNameBrReg: new RegExp('\\b' + classNameWithTagBR + '\\b'),\n\n\t\t\tspanAdditionRegx: /(<[^<\\>]+?\\>)|(&(?:[a-z]+|#[0-9]+);|.)/ig,\n\n\t\t\tspanAdditionReplacer: '$1<span class=\"' + classNameWithTag + '\">$2</span>',\n\n\t\t\tspanRemovalRegx: new RegExp('\\\\<span[^\\\\>]+?' + classNameWithTag + '[^\\\\>]{0,}\\\\>(.*?)\\\\<\\\\/span\\\\>', 'ig'),\n\n\t\t\txmlTagRegEx: new RegExp('<[^>][^<]*[^>]+>', 'i'),\n\n\t\t\tltgtRegex: /&lt;|&gt;/g,\n\n\t\t\tbrReplaceRegex: /<br\\/>/ig,\n\n\t\t\ttestStrAvg: 'WgI',\n\n\t\t\t// This style is applied over the parent smartlabel container. The container is kept hidden from the viewport\n\t\t\tparentContainerStyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: '-9999em',\n\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\tpadding: '0px',\n\t\t\t\twidth: '1px',\n\t\t\t\theight: '1px',\n\t\t\t\toverflow: 'hidden'\n\t\t\t},\n\n\t\t\t// All the style which might affect the text metrics\n\t\t\tsupportedStyle: {\n\t\t\t\tfont: 'font',\n\t\t\t\tfontFamily: 'font-family',\n\t\t\t\t'font-family': 'font-family',\n\t\t\t\tfontWeight: 'font-weight',\n\t\t\t\t'font-weight': 'font-weight',\n\t\t\t\tfontSize: 'font-size',\n\t\t\t\t'font-size': 'font-size',\n\t\t\t\tlineHeight: 'line-height',\n\t\t\t\t'line-height': 'line-height',\n\t\t\t\tfontStyle: 'font-style',\n\t\t\t\t'font-style': 'font-style'\n\t\t\t},\n\n\t\t\t// Get the support list for html the document where the text calcution is to be done.\n\t\t\tgetDocumentSupport: function getDocumentSupport() {\n\t\t\t\tvar childRetriverFn, childRetriverString, noClassTesting;\n\n\t\t\t\tif (doc.getElementsByClassName) {\n\t\t\t\t\tchildRetriverFn = 'getElementsByClassName';\n\t\t\t\t\tchildRetriverString = classNameWithTag;\n\t\t\t\t\tnoClassTesting = true;\n\t\t\t\t} else {\n\t\t\t\t\tchildRetriverFn = 'getElementsByTagName';\n\t\t\t\t\tchildRetriverString = 'span';\n\t\t\t\t\tnoClassTesting = false;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tisIE: /msie/i.test(userAgent) && !win.opera,\n\t\t\t\t\thasSVG: Boolean(win.SVGAngle || doc.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1')),\n\t\t\t\t\tisHeadLess: new RegExp(' HtmlUnit').test(userAgent),\n\t\t\t\t\tisWebKit: new RegExp(' AppleWebKit/').test(userAgent),\n\t\t\t\t\tchildRetriverFn: childRetriverFn,\n\t\t\t\t\tchildRetriverString: childRetriverString,\n\t\t\t\t\tnoClassTesting: noClassTesting\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/*\n    * Create a html div element and attach it with a parent. All the subsequent operations are performed\n    * by upding this dom tree only.\n    *\n    * @param {HTMLElement} - The html element where the newly created div is to be attached. If not passed,\n    *                      the new div is appended on the body.\n    */\n\t\t\tcreateContainer: function createContainer(containerParent) {\n\t\t\t\tvar body, container;\n\n\t\t\t\tif (containerParent && (containerParent.offsetWidth || containerParent.offsetHeight)) {\n\t\t\t\t\tif (containerParent.appendChild) {\n\t\t\t\t\t\tcontainerParent.appendChild(container = doc.createElement(DIV));\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbody = doc.getElementsByTagName('body')[0];\n\n\t\t\t\t\tif (body && body.appendChild) {\n\t\t\t\t\t\tcontainer = doc.createElement(DIV);\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\tcontainerInstanceCount += 1;\n\t\t\t\t\t\tbody.appendChild(container);\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Finds a approximate position where the text is to be broken\n\t\t\tgetNearestBreakIndex: function getNearestBreakIndex(text, maxWidth, sl) {\n\t\t\t\tif (!text || !text.length) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tvar difference,\n\t\t\t\t    getWidth = sl._getWidthFn(),\n\t\t\t\t    charLen = 0,\n\t\t\t\t    increment = 0,\n\t\t\t\t    oriWidth = getWidth(text),\n\t\t\t\t    avgWidth = oriWidth / text.length;\n\n\t\t\t\tdifference = maxWidth;\n\t\t\t\tcharLen = ceil(maxWidth / avgWidth);\n\n\t\t\t\tif (oriWidth < maxWidth) {\n\t\t\t\t\treturn text.length - 1;\n\t\t\t\t}\n\n\t\t\t\tif (charLen > text.length) {\n\t\t\t\t\tdifference = maxWidth - oriWidth;\n\t\t\t\t\tcharLen = text.length;\n\t\t\t\t}\n\n\t\t\t\twhile (difference > 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twhile (difference < 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn charLen;\n\t\t\t},\n\n\t\t\t/*\n    * Determine lineheight of a text for a given style. It adds propery lineHeight to the style passed\n    *\n    * @param {Object} - The style based on which the text's metric needs to be calculated. The calculation happens\n    *                  based on fontSize property, if its not present a default font size is assumed.\n    *\n    * @return {Object} - The style that was passed with lineHeight as a named propery set on the object.\n    */\n\t\t\tsetLineHeight: function setLineHeight(styleObj) {\n\t\t\t\tvar fSize = styleObj.fontSize = styleObj.fontSize || '12px';\n\t\t\t\tstyleObj.lineHeight = styleObj.lineHeight || styleObj['line-height'] || parseInt(fSize, 10) * 1.2 + 'px';\n\t\t\t\treturn styleObj;\n\t\t\t}\n\t\t};\n\n\t\treturn lib;\n\t}\n};\n\nexports['default'] = lib;\nmodule.exports = exports['default'];","const Muze = require('./muze');\n\nmodule.exports = Muze.default ? Muze.default : Muze;\n","'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\nfunction ContainerManager(parentContainer, isBrowserLess, maxContainers) {\n    var svg;\n\n    maxContainers = maxContainers > 5 ? maxContainers : 5;\n    maxContainers = maxContainers < 20 ? maxContainers : 20;\n\n    this.maxContainers = maxContainers;\n    this.first = null;\n    this.last = null;\n    this.containers = {};\n    this.length = 0;\n    this.rootNode = parentContainer;\n\n    if (isBrowserLess) {\n        svg = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'xlink', 'http://www.w3.org/1999/xlink');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'height', '0');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'width', '0');\n        this.svgRoot = svg;\n        this.rootNode.appendChild(svg);\n    }\n}\n\nContainerManager.prototype.get = function (style) {\n    var diff,\n        key,\n        containerObj,\n        containers = this.containers,\n        len = this.length,\n        max = this.maxContainers,\n        keyStr = '';\n\n    for (key in slLib.supportedStyle) {\n        if (style[key] !== undefined) {\n            keyStr += slLib.supportedStyle[key] + ':' + style[key] + ';';\n        }\n    }\n\n    if (!keyStr) {\n        return false;\n    }\n\n    if (containerObj = containers[keyStr]) {\n        if (this.first !== containerObj) {\n            containerObj.prev && (containerObj.prev.next = containerObj.next);\n            containerObj.next && (containerObj.next.prev = containerObj.prev);\n            containerObj.next = this.first;\n            containerObj.next.prev = containerObj;\n            this.last === containerObj && (this.last = containerObj.prev);\n            containerObj.prev = null;\n            this.first = containerObj;\n        }\n    } else {\n        if (len >= max) {\n            diff = len - max + 1;\n            // +1 is to remove an extra entry to make space for the new container to be added.\n            while (diff--) {\n                this.removeContainer(this.last);\n            }\n        }\n        containerObj = this.addContainer(keyStr);\n    }\n\n    return containerObj;\n};\n\nContainerManager.prototype.addContainer = function (keyStr) {\n    var node, container;\n\n    this.containers[keyStr] = container = {\n        next: null,\n        prev: null,\n        node: null,\n        ellipsesWidth: 0,\n        lineHeight: 0,\n        dotWidth: 0,\n        avgCharWidth: 4,\n        keyStr: keyStr,\n        charCache: {}\n    };\n\n    // Since the container objects are arranged from most recent to least recent order, we need to add the new\n    // object at the beginning of the list.\n    container.next = this.first;\n    container.next && (container.next.prev = container);\n    this.first = container;\n    if (!this.last) {\n        this.last = container;\n    }\n    this.length += 1;\n\n    node = container.node = doc.createElement('div');\n    this.rootNode.appendChild(node);\n\n    if (documentSupport.isIE && !documentSupport.hasSVG) {\n        node.style.setAttribute('cssText', keyStr);\n    } else {\n        node.setAttribute('style', keyStr);\n    }\n\n    node.setAttribute('aria-hidden', 'true');\n    node.setAttribute('role', 'presentation');\n    node.style.display = 'inline-block';\n\n    node.innerHTML = slLib.testStrAvg; // A test string.\n    container.lineHeight = node.offsetHeight;\n    container.avgCharWidth = node.offsetWidth / 3;\n\n    if (documentSupport.isBrowserLess) {\n        node = container.svgText = doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n        node.setAttribute('style', keyStr);\n        this.svgRoot.appendChild(node);\n\n        node.textContent = slLib.testStrAvg; // A test string.\n        container.lineHeight = node.getBBox().height;\n        container.avgCharWidth = (node.getBBox().width - SVG_BBOX_CORRECTION) / 3;\n\n        node.textContent = '...';\n        container.ellipsesWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n        node.textContent = '.';\n        container.dotWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n    } else {\n        node.innerHTML = '...';\n        container.ellipsesWidth = node.offsetWidth;\n        node.innerHTML = '.';\n        container.dotWidth = node.offsetWidth;\n        node.innerHTML = '';\n    }\n\n    return container;\n};\n\nContainerManager.prototype.removeContainer = function (cObj) {\n    var keyStr = cObj.keyStr;\n\n    if (!keyStr || !this.length || !cObj) {\n        return;\n    }\n    this.length -= 1;\n\n    cObj.prev && (cObj.prev.next = cObj.next);\n    cObj.next && (cObj.next.prev = cObj.prev);\n    this.first === cObj && (this.first = cObj.next);\n    this.last === cObj && (this.last = cObj.prev);\n\n    cObj.node.parentNode.removeChild(cObj.node);\n\n    delete this.containers[keyStr];\n};\n\nContainerManager.prototype.dispose = function () {\n    var key,\n        containers = this.containers;\n\n    this.maxContainers = null;\n    for (key in containers) {\n        this.removeContainer(containers[key]);\n    }\n\n    this.rootNode.parentNode.removeChild(this.rootNode);\n\n    this.rootNode = null;\n    this.first = null;\n    this.last = null;\n};\n\nmodule.exports = ContainerManager;","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  scale.invertExtent = function(r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1, a, b, t,\n        hiIndex;\n    values.push(values[n] + this.step());\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo));\n    hiIndex = getClosestIndexOf(values, hi);\n    b = lo===hi ? a : Math.max(a, hiIndex - 1);\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    if (reverse) t = a, a = n - b, b = n - t; // map + swap\n    return (a > b) ? undefined : domain().slice(a, b+1);\n  };\n\n  scale.invert = function (r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1,\n        a,\n        t;\n\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo, 'left'));\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    return domain()[reverse ? n - a : a];\n  }\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n\nfunction getClosestIndexOf (arr, value, side) {\n  var low = 0,\n      arrLen = arr.length,\n      high = arrLen - 1,\n      highVal,\n      mid,\n      d1,\n      d2;\n\n  while (low < high) {\n      mid = Math.floor((low + high) / 2);\n      d1 = Math.abs(arr[mid] - value);\n      d2 = Math.abs(arr[mid + 1] - value);\n\n      if (d2 <= d1) {\n          low = mid + 1;\n      }\n      else {\n          high = mid;\n      }\n  }\n\n  if (!side) {\n      return high;\n  }\n\n  highVal = arr[high];\n  if (highVal === value) {\n      return high;\n  } else if (highVal > value) {\n      if (high === 0) { return high; }\n      return side === 'left'? high - 1 : high;\n  } else {\n      if (high === arr.length - 1) { return high; }\n      return side === 'left'? high : high + 1;\n  }\n}","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(date - date.getMilliseconds());\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationSecond} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration\";\n\nvar hour = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","export default function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n}\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"./colors\";\n\nexport default colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n","import colors from \"./colors\";\n\nexport default colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}\n","import colors from \"./colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export const UNIT_GLOBAL_NAMESPACE = 'app.units';\nexport const UNIT_LOCAL_NAMESPACE = 'local.units';\nexport const LAYER_LOCAL_NAMESPACE = 'local.layers';\nexport const LAYER_GLOBAL_NAMESPACE = 'app.layers';\nexport const GROUP_GLOBAL_NAMESPACE = 'app.group';\nexport const GROUP_LOCAL_NAMESPACE = 'local.group';\nexport const CANVAS_LOCAL_NAMESPACE = 'local.canvas';\nexport const CANVAS_GLOBAL_NAMESPACE = 'app.canvas';\n\n","const ReservedFields = {\n    ROW_ID: '__id__'\n};\n\nexport default ReservedFields;\n","const CommonProps = {\n    ACTION_INF: 'actionInf',\n    ON_LAYER_DRAW: 'onLayerDraw',\n    MATRIX_CREATED: 'matrixCreated'\n};\n\nexport default CommonProps;\n","export const COORD_TYPES = {\n    POLAR: 'polar',\n    CARTESIAN: 'cartesian'\n};\nexport const DATA_TYPE = {\n    FUNCTION: 'function',\n    STRING: 'string',\n    NUMBER: 'number',\n    BOOLEAN: 'Boolean'\n};\nexport const SORT_ORDER_ASCENDING = 'asc';\nexport const SORT_ORDER_DESCENDING = 'desc';\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickTransform = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"))\n        .style('transform', tickTransform);\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.tickTransform = function(_) {\n    return arguments.length ? (tickTransform = _, axis) : tickTransform;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {\n          var ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","export var slice = Array.prototype.slice;\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","const sortSelection = (dataObjects, updateData, sortFn) =>\n    (a, b) => {\n        const kA = a[0];\n        const kB = b[0];\n        return sortFn([a[0], dataObjects.get(kA), updateData.get(kA)], [kB, dataObjects.get(kB), updateData.get(kB)]);\n    };\n\n/**\n * This class represents a selection applied on a data array.\n *\n * @class Selection\n */\nclass Selection {\n    /**\n     * Creates an instance of Selection.\n     * @param {Array<DataObject>} data Array of DataObjects.\n     * @memberof Selection\n     */\n    constructor (idGetter) {\n        this._dataObjects = new Map();\n        this._updatedata = new Map();\n        this._mode = '';\n        this._enterdata = new Map();\n        this._exitdata = new Map();\n        this._idGetter = idGetter;\n    }\n\n    /**\n     * This method is used to supply seed data to a selection.\n     *\n     * @param {Array} newData Seed data to create the enter selection.\n     * @param {Functon | undefined } idGetter This function is used to uniqely identify a data entry.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    data (newData) {\n        const entryData = new Map();\n        const exitdata = new Map();\n        const tempMap = new Map();\n        const duplicateData = new Map();\n        const updatedData = this._updatedata;\n        const idGetter = this._idGetter;\n\n        newData.forEach((...params) => {\n            const key = idGetter ? idGetter(...params) : params[1];\n            if (!tempMap.has(key)) {\n                tempMap.set(key, params[0]);\n            } else {\n                duplicateData.push(key, params[0]);\n            }\n        });\n\n        let val;\n        // prepare enter data\n        let entries = tempMap.entries();\n        while (val = entries.next().value) {\n            if (!updatedData.has(val[0])) {\n                entryData.set(val[0], val[1]);\n            } else {\n                updatedData.set(val[0], val[1]);\n            }\n        }\n        // prepare exit data\n        entries = updatedData.entries();\n        while (val = entries.next().value) {\n            if (!tempMap.has(val[0])) {\n                exitdata.set(val[0], val[1]);\n            }\n        }\n\n        // put duplicate data to exit list\n        entries = duplicateData.entries();\n        while (val = entries.next().value) {\n            exitdata.set(val[0], val[1]);\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updatedata = updatedData;\n        newSelection._dataObjects = this._dataObjects;\n        newSelection._enterdata = entryData;\n        newSelection._exitdata = exitdata;\n\n        return newSelection;\n    }\n\n    /**\n     * Applies the supplied callback to each data element\n     * and returns a new selection.\n     *\n     * @param {Function} callback Callback to execute on each item.\n     * @return {Selection} New selection with data created using callback.\n     * @memberof Selection\n     */\n    append (callback) {\n        let currentData;\n        let val;\n        const dataObjects = new Map();\n        const data = new Map();\n\n        // select the data to create object\n        switch (this._mode) {\n        case 'enter':\n            currentData = this._enterdata;\n            break;\n        case 'exit':\n            currentData = this._exitdata;\n            break;\n        default:\n            currentData = this._updatedata;\n        }\n\n        const entries = currentData.entries();\n\n        while (val = entries.next().value) {\n            dataObjects.set(val[0], callback(val[1]));\n            data.set(val[0], val[1]);\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updatedata = data;\n        newSelection._dataObjects = dataObjects;\n        this._mode = '';\n\n        return newSelection;\n    }\n\n     /**\n     * This method returns an enter selection that\n     * allows or update operations.\n     *\n     * @return {Selection} Instance of enter selection.\n     * @memberof Selection\n     */\n    enter () {\n        this._mode = 'enter';\n        return this;\n    }\n\n    /**\n     * Returns a selection with exit data.\n     *\n     * @return {Selection} Instance of selection.\n     * @memberof Selection\n     */\n    exit () {\n        this._mode = 'exit';\n        return this;\n    }\n\n     /**\n     * This method merges the data of one selection with another.\n     *\n     * @param {Selection} selection Instance of selection.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    merge (target) {\n        const mergedObjects = new Map();\n        const mergedData = new Map();\n        let val;\n        let entries;\n\n        // merge Object and data present in this selection\n        entries = this._updatedata.entries();\n        while (val = entries.next().value) {\n            if (!this._exitdata.has(val[0])) {\n                mergedData.set(val[0], val[1]);\n                mergedObjects.set(val[0], this._dataObjects.get(val[0]));\n            }\n        }\n\n        // merge object from target selection\n        entries = target._updatedata.entries();\n        while (val = entries.next().value) {\n            if (!(mergedData.has(val[0]) || target._exitdata.has(val[0]))) {\n                mergedData.set(val[0], val[1]);\n                mergedObjects.set(val[0], target._dataObjects.get(val[0]));\n            }\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updatedata = mergedData;\n        newSelection._dataObjects = mergedObjects;\n\n        return newSelection;\n    }\n\n    each (fn) {\n        let val;\n        const entries = this._dataObjects.entries();\n\n        while (val = entries.next().value) {\n            fn(val[1], this._updatedata.get(val[0]), val[0]);\n        }\n    }\n\n    map (fn) {\n        const newdata = new Map();\n        let val;\n        const entries = this._dataObjects.entries();\n\n        while (val = entries.next().value) {\n            newdata.set(val[0], fn(val[1], this._updatedata.get(val[0]), val[0]));\n        }\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updatedata = this._updatedata;\n        newSelection._dataObjects = newdata;\n\n        return newSelection;\n    }\n\n    remove () {\n        let currentData;\n\n        switch (this._mode) {\n        case 'enter':\n            currentData = this._enterdata;\n            break;\n        case 'exit':\n            currentData = this._exitdata;\n            break;\n        default:\n            currentData = this._updatedata;\n        }\n\n        currentData.clear();\n\n        return this;\n    }\n\n    sort (sortFn) {\n        const updateData = this._updatedata;\n        const dataObjects = this._dataObjects;\n        const sortSel = sortSelection(dataObjects, updateData, sortFn);\n\n        this._updatedata = new Map([...updateData.entries()].sort(sortSel));\n        this._dataObjects = new Map([...dataObjects.entries()].sort(sortSel));\n        return this;\n    }\n\n    /**\n     *  Gets the object bound to a class\n     *\n     * @return {Object} current data set bound to the class\n     * @memberof Selection\n     */\n    getObjects () {\n        const objects = [];\n        let val;\n        const values = this._dataObjects.values();\n\n        while (val = values.next().value) {\n            objects.push(val);\n        }\n        return objects;\n    }\n\n}\n\nexport default Selection;\n","export const ORDER_ASCENDING = 'ascending';\nexport const ORDER_DESCENDING = 'descending';\nexport const ORDER_NONE = 'none';\nexport const OFFSET_DIVERGING = 'diverging';\nexport const OFFSET_NONE = 'none';\nexport const OFFSET_EXPAND = 'expand';\nexport const OFFSET_WIGGLE = 'wiggle';\n","/* global window, requestAnimationFrame, cancelAnimationFrame */\nimport { FieldType, DimensionSubtype, DateTimeFormatter, DM_DERIVATIVES, default as DataModel } from 'datamodel';\nimport {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom\n} from 'd3-axis';\nimport {\n    symbolCircle,\n    symbolCross,\n    symbolDiamond,\n    symbolSquare,\n    symbolStar,\n    symbolWye,\n    symbolTriangle,\n    symbol,\n    stack as d3Stack,\n    stackOffsetDiverging,\n    stackOrderNone,\n    stackOrderAscending,\n    stackOrderDescending,\n    stackOffsetNone,\n    stackOffsetExpand,\n    stackOffsetWiggle,\n    pie,\n    arc,\n    line,\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    area\n} from 'd3-shape';\nimport { scaleBand } from 'd3-scale';\nimport { nest } from 'd3-collection';\nimport {\n    interpolate,\n    interpolateRgb,\n    piecewise,\n    interpolateNumber,\n    interpolateHslLong\n} from 'd3-interpolate';\nimport {\n    easeCubic,\n    easeBounce,\n    easePoly,\n    easeBack,\n    easeCircle,\n    easeLinear,\n    easeElastic\n} from 'd3-ease';\nimport {\n   color,\n   rgb,\n   hsl\n} from 'd3-color';\nimport { voronoi } from 'd3-voronoi';\nimport Model from 'hyperdis';\nimport { dataSelect } from './DataSystem';\nimport { DATA_TYPE, SORT_ORDER_ASCENDING, SORT_ORDER_DESCENDING } from './enums';\nimport * as STACK_CONFIG from './enums/stack-config';\n\nconst { CATEGORICAL, TEMPORAL } = DimensionSubtype;\nconst { STRING, FUNCTION } = DATA_TYPE;\nconst { InvalidAwareTypes } = DataModel;\nconst HTMLElement = window.HTMLElement;\n\nconst isSimpleObject = (obj) => {\n    let token;\n    if (typeof obj === 'object') {\n        if (obj === null) { return false; }\n        token = Object.prototype.toString.call(obj);\n        if (token === '[object Object]') {\n            return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n        }\n    }\n    return false;\n};\n\n/**\n * Returns unique id\n * @return {string} Unique id string\n */\nconst\n    getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Deep copies an object and returns a new object.\n * @param {Object} o Object to clone\n * @return {Object} New Object.\n */\nconst clone = (o) => {\n    const output = {};\n    let v;\n    for (const key in o) {\n        if ({}.hasOwnProperty.call(o, key)) {\n            v = o[key];\n            output[key] = isSimpleObject(v) ? clone(v) : v;\n        }\n    }\n    return output;\n};\n\n/**\n* Checks the existence of keys in an object\n* @param {Array} keys Set of keys which are to be checked\n* @param {Object} obj whose keys are checked from the set of keys provided\n* @return {Object} Error if the keys are absent, or the object itself\n*/\nconst checkExistence = (keys, obj) => {\n    const nonExistentKeys = [];\n    keys.forEach((key) => {\n        if (key in obj) {\n            return;\n        }\n        nonExistentKeys.push(key);\n    });\n    return nonExistentKeys;\n};\n\nconst sanitizeIP = {\n    typeObj: (keys, obj) => {\n        if (typeof obj !== 'object') {\n            return Error('Argument type object expected');\n        }\n\n        const nonExistentKeys = checkExistence(keys, obj);\n        if (nonExistentKeys.length) {\n            return Error(`Missing keys from parameter ${nonExistentKeys.join(', ')}`);\n        }\n        return obj;\n    },\n\n    /* istanbul ignore next */ htmlElem: (elem) => {\n        if (!(elem instanceof HTMLElement)) {\n            return Error('HTMLElement required');\n        }\n        return elem;\n    }\n};\n\n/**\n * Gets the maximum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Maximum value\n */\nconst getMax = (data, field) => Math.max(...data.map(d => d[field]));\n\n/**\n * Gets the minimum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Minimum value\n */\nconst getMin = (data, field) => Math.min(...data.map(d => d[field]));\n\n/**\n * Gets the domain from the data based on the field name and type of field\n * @param  {Array.<Object> | Array.<Array>} data       Data Array\n * @param  {Array.<string>} fields    Array of fields from where the domain will be calculated\n * @param {string} fieldType Type of field - nominal, quantitiative, temporal.\n * @return {Array} Usually contains a min and max value if field is quantitative or\n * an array of values if field type is nominal or ordinal\n */\nconst getDomainFromData = (data, fields, fieldType) => {\n    let domain;\n    const domArr = [];\n    data = data[0] instanceof Array ? data : [data];\n    switch (fieldType) {\n    case CATEGORICAL:\n        domain = [].concat(...data.map(arr => arr.map(d => d[fields[0]]).filter(d => d !== undefined)));\n        break;\n    default:\n        for (let i = 0, len = data.length; i < len; i++) {\n            const arr = data[i];\n            const [field0, field1] = fields;\n            const arr0 = arr.filter(d => !isNaN(d[field0]));\n            const arr1 = arr.filter(d => !isNaN(d[field1]));\n            if (arr0.length || arr1.length) {\n                const firstMin = getMin(arr0, field0);\n                const secondMin = getMin(arr1, field1);\n                const firstMax = getMax(arr0, field0);\n                const secondMax = getMax(arr1, field1);\n                domArr.push([Math.min(firstMin, secondMin), Math.max(firstMax, secondMax)]);\n            }\n        }\n        domain = domArr.length ? [Math.min(...domArr.map(d => d[0])), Math.max(...domArr.map(d => d[1]))] : [];\n        break;\n    }\n    return domain;\n};\n\nconst sanitizeDomainWhenEqual = (domain) => {\n    if (domain[0] === domain[1]) {\n        domain[0] = domain[0] > 0 ? 0 : domain[0];\n        domain[1] = domain[1] > 0 ? domain[1] : 0;\n    }\n    return domain;\n};\n\n/**\n * Union Domain values\n * @param {Array.<Array>} domains Array of domain values\n * @param {string} fieldType type of field - dimension,measure or datetime.\n * @return {Array} Unioned domain of all domain values.\n */\nconst unionDomain = (domains, fieldType) => {\n    let domain = [];\n    domains = domains.filter(dom => dom && dom.length);\n    if (domains.length) {\n        if (fieldType === CATEGORICAL) {\n            domain = [].concat(...domains);\n        } else {\n            domain = [Math.min(...domains.map(d => d[0])), Math.max(...domains.map(d => d[1]))];\n        }\n    }\n\n    return domain;\n};\n\nconst symbolFns = {\n    circle: symbolCircle,\n    cross: symbolCross,\n    diamond: symbolDiamond,\n    square: symbolSquare,\n    star: symbolStar,\n    wye: symbolWye,\n    triangle: symbolTriangle\n};\n\nconst easeFns = {\n    cubic: easeCubic,\n    bounce: easeBounce,\n    linear: easeLinear,\n    elastic: easeElastic,\n    back: easeBack,\n    poly: easePoly,\n    circle: easeCircle\n};\n\n/**\n * Returns the maximum or minimum points of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @param {string} minOrMax minimum or maximum.\n * @return {Object} Minimum or maximum point.\n */\nconst getExtremePoint = (points, compareValue, minOrMax) => {\n    let extremePoint;\n    let point;\n    const len = points.length;\n    let minOrMaxVal = minOrMax === 'max' ? -Infinity : Infinity;\n    let val;\n\n    for (let i = 0; i < len; i++) {\n        point = points[i];\n        val = point[compareValue];\n        if (minOrMax === 'min' ? val < minOrMaxVal : val > minOrMaxVal) {\n            minOrMaxVal = val;\n            extremePoint = point;\n        }\n    }\n\n    return extremePoint;\n};\n\n/**\n * Returns the minimum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Minimum point.\n */\nconst getMinPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'min');\n\n/**\n * Returns the maximum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Maximum point.\n */\nconst getMaxPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'max');\n\n/**\n * Gets the index of the closest value of the given value from the array.\n * @param {Array} arr Array of values\n * @param {number} value Value from which the nearest value will be calculated.\n * @param {string} side side property.\n * @return {number} index of the closest value\n */\n/* istanbul ignore next */const getClosestIndexOf = (arr, value, side) => {\n    let low = 0;\n    const arrLen = arr.length;\n    let high = arrLen - 1;\n\n    let mid;\n    let d1;\n    let d2;\n\n    while (low < high) {\n        mid = Math.floor((low + high) / 2);\n        d1 = Math.abs(arr[mid] - value);\n        d2 = Math.abs(arr[mid + 1] - value);\n\n        if (d2 <= d1) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n\n    if (!side) {\n        return high;\n    }\n\n    const highVal = arr[high];\n    if (highVal === value) {\n        return high;\n    } else if (highVal > value) {\n        if (high === 0) { return high; }\n        return side === 'left' ? high - 1 : high;\n    }\n    if (high === arr.length - 1) { return high; }\n    return side === 'left' ? high : high + 1;\n};\n\nconst getNearestValue = (data, key) => {\n    const filterData = data.filter(d => typeof d === 'number');\n    return filterData[getClosestIndexOf(filterData, key)];\n};\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst getWindow = () => window;\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst reqAnimFrame = (() => requestAnimationFrame)();\n\nconst cancelAnimFrame = (() => cancelAnimationFrame)();\n\n/**\n * Capitalizes the first letter of the word\n * @param {string} text word\n * @return {string} Capitalized word\n */\nconst capitalizeFirst = (text) => {\n    text = text.toLowerCase();\n\n    return text.replace(/\\w\\S*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1));\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst unique = arr => ([...new Set(arr)]);\n\n/**\n * Gets the minimum difference between two consecutive numbers  in an array.\n * @param {Array} arr Array of numbers\n * @param {number} index index of the value\n * @return {number} minimum difference between values\n */\n/* istanbul ignore next */ const getMinDiff = (arr, index) => {\n    let diff;\n    let uniqueVals;\n    if (index !== undefined) {\n        uniqueVals = unique(arr.map(d => d[index]));\n    } else {\n        uniqueVals = unique(arr);\n    }\n    if (uniqueVals.length > 1) {\n        diff = Math.abs(uniqueVals[1] - uniqueVals[0]);\n        for (let i = 2, len = uniqueVals.length; i < len; i++) {\n            diff = Math.min(diff, Math.abs(uniqueVals[i] - uniqueVals[i - 1]));\n        }\n    } else {\n        diff = uniqueVals[0];\n    }\n\n    return diff;\n};\n\n/**\n * Returns the class name appended with a given id.\n * @param {string} cls class name\n * @param {string} id unique identifier\n * @param {string} prefix string needed to add before the classname\n * @return {string} qualified class name\n */\n/* istanbul ignore next */const getQualifiedClassName = (cls, id, prefix) => {\n    cls = cls.replace(/^\\.*/, '');\n    return [`${prefix}-${cls}`, `${prefix}-${cls}-${id}`];\n};\n\n/**\n * This method is used to set the default value for variables\n * without sullying the code with conditional statements.\n *\n * @export\n * @param {any} param The parameter to test.\n * @param {any} value The default value to assign.\n * @return {any} The value.\n */\n/* istanbul ignore next */ const defaultValue = (param, value) => {\n    if (typeof param === 'undefined' || (typeof param === 'object' && !param)) {\n        return value;\n    }\n    return param;\n};\n\n/**\n * DESCRIPTION TODO\n *\n * @export\n * @param {Object} graph graph whose dependency order has to be generated\n * @return {Object}\n */\nconst getDependencyOrder = (graph) => {\n    const dependencyOrder = [];\n    const visited = {};\n    const keys = Object.keys(graph);\n    /**\n     * DESCRIPTION TODO\n     *\n     * @export\n     * @param {Object} name\n     * @return {Object}\n     */\n    const visit = (name) => {\n        if (dependencyOrder.length === keys.length) {\n            return true;\n        }\n        visited[name] = true;\n        const edges = graph[name];\n        for (let e = 0; e < edges.length; e++) {\n            const dep = edges[e];\n            if (!visited[dep]) {\n                visit(dep);\n            }\n        }\n\n        dependencyOrder.push(name);\n        return false;\n    };\n\n    for (let i = 0; i < keys.length; i++) {\n        if (visit(keys[i], i)) break;\n    }\n\n    return dependencyOrder;\n};\n\n/**\n * Iterates over the properties of an object and applies the function\n *\n * @param {any} obj object to be iterated upon\n * @param {any} fn  function to be applied on it\n */\nconst objectIterator = (obj, fn) => {\n    for (const key in obj) {\n        if (Object.hasOwnProperty.call(obj, key)) {\n            fn(key, obj);\n        }\n    }\n};\n\n/**\n * This class creates a d3 voronoi for retrieving the nearest neighbour of any point from a set of two\n * dimensional points\n * @class Voronoi\n */\n/* istanbul ignore next */ class Voronoi {\n    /**\n     * Initialize the voronoi with the data given.\n     * @param {Array.<Object>} data Array of points.\n     */\n    constructor (data = []) {\n        this._voronoi = voronoi().x(d => d.x).y(d => d.y);\n        this.data(data);\n    }\n\n    /**\n     * Sets the data to voronoi\n     * @param {Array.<Object>} data Array of objects.\n     * @return {Voronoi} Instance of voronoi.\n     */\n    data (data) {\n        if (data) {\n            this._voronoiFn = this._voronoi(data);\n        }\n        return this;\n    }\n\n    /**\n     * Finds the closest point to the x and y position given.\n     * @param {number} x x value\n     * @param {number} y y value\n     * @param {number} radius search radius.\n     * @return {Object} Details of the nearest point.\n     */\n    find (x, y, radius) {\n        return this._voronoiFn.find(x, y, radius);\n    }\n}\n\nconst addListenerToNamespace = (namespaceInf, fn, context) => {\n    let key = namespaceInf.key;\n    const namespace = namespaceInf.namespace;\n    if (namespace) {\n        !context._listeners[namespace] && (context._listeners[namespace] = []);\n        if (!key) {\n            key = Object.keys(context._listeners[namespace]).length;\n        }\n        context._listeners[namespace][key] = fn;\n    } else {\n        key = Object.keys(context._listeners).length;\n        context._listeners[key] = fn;\n    }\n};\n\n/**\n *\n *\n * @param {*} obj\n * @param {*} fields\n *\n */\nconst getObjProp = (obj, ...fields) => {\n    if (obj === undefined || obj === null) {\n        return obj;\n    }\n    let retObj = obj;\n    for (let i = 0, len = fields.length; i < len; i++) {\n        retObj = retObj[fields[i]];\n        if (retObj === undefined || retObj === null) {\n            break;\n        }\n    }\n    return retObj;\n};\n\n/**\n * Methods to handle changes to table configuration and reactivity are handled by this\n * class.\n */\n/**\n *  Common store class\n *\n * @class Store\n */\nclass Store {\n    /**\n     * Creates an instance of Store.\n     * @param {Object} config The object to create the state store with.\n     * @memberof Store\n     */\n    constructor (config) {\n        // create reactive model\n        this.model = Model.create(config);\n        this._listeners = {};\n    }\n\n    /**\n     * This method returns a plain JSON object\n     * with all the fields in the state store.\n     *\n     * @return {Object} Serialized representation of state store.\n     * @memberof Store\n     */\n    serialize () {\n        return this.model.serialize();\n    }\n\n    /**\n     * This method is used to update the value of a property in the state store.\n     *\n     * @param {string} propName The name of the property.\n     * @param {number} value The new value of the property.\n     * @memberof Store\n     */\n    commit (propName, value) {\n        // check if appropriate enum has been used\n        this.model.prop(propName, value);\n    }\n\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */registerChangeListener (propNames, callBack, instantCall, namespaceInf = {}) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        const fn = this.model.next(props, callBack, instantCall);\n        addListenerToNamespace(namespaceInf, fn, this);\n        return this;\n    }\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */ registerImmediateListener (propNames, callBack, instantCall, namespaceInf = {}) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        const fn = this.model.on(props, callBack, instantCall);\n        addListenerToNamespace(namespaceInf, fn, this);\n        return this;\n    }\n    /**\n     * This method is used to get the name of the property\n     * from the state store.\n     *\n     * @param {string} propName The name of the field in state store.\n     * @return {any} The value of the field.\n     * @memberof Store\n     */\n    get (propName) {\n        return this.model.prop(propName);\n    }\n\n    /**\n     * This method is used to register a computed property that is computed every time\n     * the store value changes.\n     *\n     * @param {string} propName The name of the property to create.\n     * @param {Function} callBack The function to execute when depemdent props change.\n     * @memberof Store\n     */\n    computed (propName, callBack) {\n        return this.model.calculatedProp(propName, callBack);\n    }\n\n    append (propName, value) {\n        this.model.append(propName, value);\n        return this;\n    }\n\n    unsubscribeAll () {\n        Object.values(this._listeners).forEach(fn => fn());\n        return this;\n    }\n\n    unsubscribe (namespaceInf = {}) {\n        const { namespace, key } = namespaceInf;\n        const listeners = this._listeners[namespace];\n        if (key) {\n            const fn = getObjProp(listeners, key);\n            fn && fn();\n        } else {\n            Object.values(listeners).forEach(fn => fn());\n            this._listeners[namespace] = [];\n        }\n        return this;\n    }\n}\n\n/**\n * Sanitize an input number / string mixed number. Currently dot in the no is not supported.\n *\n * @param {number | string} val pure number or string mixed number\n * @return {number | null}  Number if it can be extracted. Otherwise null\n */\nconst intSanitizer = (val) => {\n    const arr = val.toString().match(/(\\d+)(px)*/g);\n    if (!arr) {\n        // If only characters are passed\n        return null;\n    }\n\n    return parseInt(arr[0], 10);\n};\n\n/**\n * Setter getter creator from config\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args. (Optional)\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @param {Object} holder an empty object on which the getters and setters will be mounted\n * @param {Object} options options config based on which the getters and setters are determined.\n * @param {Hyperdis} model optional model to attach the property. If not sent new moel is created.\n * @return {Array}\n */\nconst transactor = (holder, options, model, namespaceInf = {}) => {\n    let conf;\n    const store = model && model instanceof Model ? model : Model.create({});\n    const stateProps = {};\n    for (const prop in options) {\n        if ({}.hasOwnProperty.call(options, prop)) {\n            conf = options[prop];\n            const addAsMethod = conf.meta ? conf.meta.addAsMethod : true;\n            let nameSpaceProp;\n            const namespace = namespaceInf.namespace;\n            if (namespace) {\n                nameSpaceProp = `${namespace}.${prop}`;\n            } else {\n                nameSpaceProp = prop;\n            }\n\n            stateProps[prop] = conf.value;\n            if (addAsMethod !== false) {\n                holder[prop] = ((context, meta, nsProp) => (...params) => {\n                    let val;\n                    let compareTo;\n                    const paramsLen = params.length;\n                    const prevVal = store.prop(nsProp);\n                    if (paramsLen) {\n                        // If parameters are passed then it's a setter\n                        const spreadParams = meta && meta.spreadParams;\n                        val = params;\n                        const values = [];\n                        if (meta) {\n                            for (let i = 0; i < paramsLen; i++) {\n                                val = params[i];\n                                const sanitization = meta.sanitization && (spreadParams ? meta.sanitization[i] :\n                                    meta.sanitization);\n                                const typeCheck = meta.typeCheck && (spreadParams ? meta.typeCheck[i] : meta.typeCheck);\n                                if (sanitization && typeof sanitization === 'function') {\n                                    // Sanitize if required\n                                    val = sanitization(val, prevVal, holder);\n                                }\n\n                                if (typeCheck) {\n                                    // Checking if a setter is valid\n                                    if (typeof typeCheck === 'function') {\n                                        let typeExpected = meta.typeExpected;\n                                        if (typeExpected && spreadParams) {\n                                            typeExpected = typeExpected[i];\n                                        }\n                                        if (typeExpected) {\n                                            compareTo = typeExpected;\n                                        } else {\n                                            compareTo = true;\n                                        }\n\n                                        if (typeCheck(val) === compareTo) {\n                                            values.push(val);\n                                        }\n                                    } else if (typeof typeCheck === STRING) {\n                                        if (typeCheck === 'constructor') {\n                                            const typeExpected = spreadParams ? meta.typeExpected[i] :\n                                                meta.typeExpected;\n                                            if (val && (val.constructor.name === typeExpected)) {\n                                                values.push(val);\n                                            }\n                                        }\n                                    } else {\n                                        // context.prop(key, val);\n                                        values.push(val);\n                                    }\n                                } else {\n                                    values.push(val);\n                                }\n                            }\n                            const preset = meta.preset;\n                            const oldValues = context.prop(nsProp);\n                            preset && preset(values[0], holder);\n                            if (spreadParams) {\n                                oldValues.forEach((value, i) => {\n                                    if (values[i] === undefined) {\n                                        values[i] = value;\n                                    }\n                                });\n                            }\n                            values.length && context.prop(nsProp, spreadParams ? values : values[0]);\n                        } else {\n                            context.prop(nsProp, spreadParams ? val : val[0]);\n                        }\n                        return holder;\n                    }\n                // No parameters are passed hence its a getter\n                    return context.prop(nsProp);\n                })(store, conf.meta, nameSpaceProp);\n            }\n        }\n    }\n\n    if (namespaceInf.namespace === undefined) {\n        store.append(stateProps);\n    } else {\n        const namespace = namespaceInf.namespace;\n        store.append(namespace, stateProps);\n    }\n\n    return [holder, store];\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} props\n */\nconst generateGetterSetters = (context, props) => {\n    Object.entries(props).forEach((propInfo) => {\n        const prop = propInfo[0];\n        const typeChecker = propInfo[1].typeChecker;\n        const defVal = propInfo[1].defaultValue;\n        const sanitization = propInfo[1].sanitization;\n        const preset = propInfo[1].preset;\n        const prototype = context.constructor.prototype;\n        if (!(Object.hasOwnProperty.call(prototype, prop))) {\n            if (defVal) {\n                context[`_${prop}`] = defVal;\n            }\n            context[prop] = (...params) => {\n                if (params.length) {\n                    let value = params[0];\n                    if (sanitization) {\n                        value = sanitization(context, params[0]);\n                    }\n                    if (preset) {\n                        preset(context, value);\n                    }\n                    if (typeChecker && !typeChecker(value)) {\n                        return context[`_${prop}`];\n                    }\n                    context[`_${prop}`] = value;\n                    return context;\n                } return context[`_${prop}`];\n            };\n        }\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} prop\n */\nconst getArraySum = (arr, prop) => arr.reduce((total, elem) => {\n    total += prop ? elem[prop] : elem;\n    return total;\n}, 0);\n\n/**\n *\n *\n * @param {*} arr1\n * @param {*} arr2\n *\n */\nconst arraysEqual = (arr1, arr2) => {\n    if (arr1.length !== arr2.length) { return false; }\n    for (let i = arr1.length; i >= 0; i--) {\n        if (arr1[i] !== arr2[i]) { return false; }\n    }\n\n    return true;\n};\n\n/* eslint valid-typeof:0 */\n/**\n * Returns a validation function which can be used to validate variables against a type and value\n *\n * @param {any} type type of value that the object should have\n * @return {Object} validation function\n */\nconst isEqual = type => (oldVal, newVal) => {\n    if (type === 'Array') {\n        if (!oldVal) {\n            return false;\n        }\n        return arraysEqual(oldVal, newVal);\n    } else if (type === 'Object') {\n        return Object.is(oldVal, newVal);\n    } return oldVal === newVal;\n};\n\n/**\n * Description @todo\n *\n * @param {any} transactionModel @todo\n * @param {any} transactionEndpoint @todo\n * @param {any} transactionItems @todo\n * @return {any} @todo\n */\nconst enableChainedTransaction = (transactionModel, transactionEndpoint, transactionItems) =>\n    transactionItems.forEach(item => transactionModel.on(item, ([, newVal]) => transactionEndpoint[item](newVal)));\n\n/**\n * Chceks if the element is istanceof HTMLElement\n *\n * @param {Object} elem any JS Object\n */\nconst isHTMLElem = elem => elem instanceof HTMLElement;\n\nconst ERROR_MSG = {\n    INTERFACE_IMPL: 'Method not implemented'\n};\n\n/**\n * Merges the sink object in the source by recursively iterating through the object properties\n * @param {Object} source Source Object\n * @param {Object} sink Sink Object\n * @return {Object} Merged object\n */\nconst mergeRecursive = (source, sink) => {\n    for (const prop in sink) {\n        if (isSimpleObject(source[prop]) && isSimpleObject(sink[prop])) {\n            mergeRecursive(source[prop], sink[prop]);\n        } else if (sink[prop] instanceof Object && sink[prop].constructor === Object) {\n            source[prop] = {};\n            mergeRecursive(source[prop], sink[prop]);\n        } else {\n            source[prop] = sink[prop];\n        }\n    }\n    return source;\n};\n\n/**\n * Creates a selection set from a data set with corresponding attributes\n *\n * @export\n * @param {Selection} sel contains previous selection\n * @param {Object} appendObj Object to be appended\n * @param {Array} data Data based on which the selection is entered/updated/removed\n * @param {Object} [attrs={}] Attributes to be set on the data\n * @return {Selection} Merged selection\n */\nconst createSelection = (sel, appendObj, data, idFn) => {\n    let selection = sel || dataSelect(idFn);\n\n    selection = selection.data(data);\n\n    const enter = selection.enter().append(appendObj);\n    const mergedSelection = enter.merge(selection);\n\n    const exitSelection = selection.exit();\n    exitSelection.getObjects().forEach(inst => inst.remove());\n    exitSelection.remove();\n    return mergedSelection;\n};\n\nconst interpolateArray = (data, fitCount) => {\n    const linearInterpolate = function (before, after, atPoint) {\n        return before + (after - before) * atPoint;\n    };\n    const newData = [];\n    const springFactor = ((data.length - 1) / (fitCount - 1));\n    newData[0] = data[0]; // for new allocation\n    for (let i = 1; i < fitCount - 1; i++) {\n        const tmp = i * springFactor;\n        const before = (Math.floor(tmp)).toFixed();\n        const after = (Math.ceil(tmp)).toFixed();\n        const atPoint = tmp - before;\n        newData[i] = linearInterpolate(data[before], data[after], atPoint);\n    }\n    newData[fitCount - 1] = data[data.length - 1]; // for new allocation\n    return newData;\n};\n\n/**\n *\n *\n * @param {*} fn\n */\nconst nextFrame = (fn) => {\n    setTimeout(() => {\n        fn();\n    }, 0);\n};\n\n/**\n *\n *\n * @param {*} angle\n */\nconst angleToRadian = angle => angle * Math.PI / 180;\n\n/**\n *\n *\n * @param {*} newName\n * @param {*} oldName\n */\nconst replaceCSSPrefix = () => {\n    // @todo\n};\n\n/**\n * Gets the  interpolator function from d3 color\n *\n */\nconst interpolator = () => interpolate;\n\n/**\n * Gets the number interpolator from d3 color\n *\n */\nconst numberInterpolator = () => interpolateNumber;\n\n/**\n * Gets the rgb interpolator from d3 color\n *\n */\nconst colorInterpolator = () => interpolateRgb;\n\n/**\n * Gets the hsl interpolator from d3 color\n *\n */\nconst hslInterpolator = () => interpolateHslLong;\n\nconst transformColors = () => ({\n    color,\n    rgb,\n    hsl\n});\n\n/**\n * Gets the piecewise interpolator from d3 color\n *\n */\nconst piecewiseInterpolator = () => piecewise;\n\nfunction hue2rgb (p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n\n  /**\n   * Converts an HSL color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n   * Assumes h, s, and l are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  l       The lightness\n   * @return  Array           The RGB representation\n   */\nconst hslToRgb = (h, s, l, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    if (s === 0) {\n        r = g = b = l; // achromatic\n    } else {\n        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const p = 2 * l - q;\n\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\n  /**\n   * Converts an RGB color value to HSV. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes r, g, and b are contained in the set [0, 255] and\n   * returns h, s, and v in the set [0, 1].\n   *\n   * @param   Number  r       The red color value\n   * @param   Number  g       The green color value\n   * @param   Number  b       The blue color value\n   * @return  Array           The HSV representation\n   */\nconst rgbToHsv = (r, g, b, a = 1) => {\n    r = +r; g = +g; b = +b; a = +a;\n    r /= 255; g /= 255; b /= 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let h;\n    let s;\n    const l = (max + min) / 2;\n\n    if (max === min) {\n        h = s = 0; // achromatic\n    } else {\n        const d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n        case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n        case g: h = (b - r) / d + 2; break;\n        case b: h = (r - g) / d + 4; break;\n        default: break;\n        }\n        h /= 6;\n    }\n    return [h, s, l, a];\n};\n\n  /**\n   * Converts an HSV color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes h, s, and v are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  v       The value\n   * @return  Array           The RGB representation\n   */\nconst hsvToRgb = (h, s, v, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    const i = Math.floor(h * 6);\n    const f = h * 6 - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n    case 0: r = v; g = t; b = p; break;\n    case 1: r = q; g = v; b = p; break;\n    case 2: r = p; g = v; b = t; break;\n    case 3: r = p; g = q; b = v; break;\n    case 4: r = t; g = p; b = v; break;\n    case 5: r = v; g = p; b = q; break;\n    default: break;\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\nconst hexToHsv = (hex) => {\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    hex = hex.replace(shorthandRegex, (m, r, g, b) => r + r + g + g + b + b);\n\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? rgbToHsv(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) : '';\n};\n\nconst detectColor = (col) => {\n    const matchRgb = /rgb\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})\\)/;\n    const matchHsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g;\n\n    // Source :  https://gist.github.com/sethlopezme/d072b945969a3cc2cc11\n     // eslint-disable-next-line\n    const matchRgba = /rgba?\\(((25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,\\s*?){2}(25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,?\\s*([01]\\.?\\d*?)?\\)/;\n     // eslint-disable-next-line\n    const matchHsla = /^hsla\\((\\d.+),\\s*([\\d.]+)%,\\s*([\\d.]+)%,\\s*(\\d*(?:\\.\\d+)?)\\)$/;\n    const matchHex = /^#([0-9a-f]{3}){1,2}$/i;\n\n    if (matchRgb.test(col) || matchRgba.test(col)) {\n        return 'rgb';\n    } else if (matchHsl.test(col) || matchHsla.test(col)) {\n        return 'hsl';\n    } else if (matchHex.test(col)) {\n        return 'hex';\n    } return col;\n};\n\n/**\n *\n *\n * @param {*} model\n * @param {*} propModel\n *\n */\nconst filterPropagationModel = (model, propModel, measures) => {\n    const { data, schema } = propModel.getData();\n    let filteredModel;\n    if (schema.length) {\n        const fieldMap = model.getFieldsConfig();\n        filteredModel = model.select((fields) => {\n            const include = data.some(row => schema.every((propField, idx) => {\n                if (!measures && (!(propField.name in fieldMap) ||\n                        fieldMap[propField.name].def.type === FieldType.MEASURE)) {\n                    return true;\n                }\n                return row[idx] === fields[propField.name].valueOf();\n            }));\n            return include;\n        }, {\n            saveChild: false\n        });\n    } else {\n        filteredModel = propModel;\n    }\n\n    return filteredModel;\n};\n\nconst assembleModelFromIdentifiers = (model, identifiers) => {\n    let schema = [];\n    let data;\n    const fieldMap = model.getFieldsConfig();\n    if (identifiers.length) {\n        const fields = identifiers[0];\n        const len = fields.length;\n        for (let i = 0; i < len; i++) {\n            const field = fields[i];\n            const fieldObj = fieldMap[field] && Object.assign({}, fieldMap[field].def);\n            if (fieldObj) {\n                schema.push(Object.assign(fieldObj));\n            }\n        }\n\n        data = [];\n        const header = identifiers[0];\n        for (let i = 1; i < identifiers.length; i += 1) {\n            const vals = identifiers[i];\n            const temp = {};\n            vals.forEach((fieldVal, cIdx) => {\n                temp[header[cIdx]] = fieldVal;\n            });\n            data.push(temp);\n        }\n    } else {\n        data = [];\n        schema = [];\n    }\n\n    return new model.constructor(data, schema);\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} criteria\n *\n */\nconst getDataModelFromRange = (dataModel, criteria, mode) => {\n    if (criteria === null) {\n        return null;\n    }\n    const selFields = Object.keys(criteria);\n    const selFn = fields => selFields.every((field) => {\n        const val = fields[field].value;\n        const range = criteria[field][0] instanceof Array ? criteria[field][0] : criteria[field];\n        if (typeof range[0] === STRING) {\n            return range.find(d => d === val) !== undefined;\n        }\n        return range ? val >= range[0] && val <= range[1] : true;\n    });\n\n    return dataModel.select(selFn, {\n        saveChild: false,\n        mode\n    });\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} identifiers\n *\n */\nconst getDataModelFromIdentifiers = (dataModel, identifiers, mode) => {\n    let filteredDataModel;\n    if (identifiers instanceof Array) {\n        const fieldsConfig = dataModel.getFieldsConfig();\n\n        const dataArr = identifiers.slice(1, identifiers.length);\n        if (identifiers instanceof Function) {\n            filteredDataModel = identifiers(dataModel, {}, false);\n        } else if (identifiers instanceof Array && identifiers[0].length) {\n            const filteredSchema = identifiers[0].filter(d => d in fieldsConfig);\n            filteredDataModel = dataModel.select((fields) => {\n                let include = true;\n                filteredSchema.forEach((propField, idx) => {\n                    const value = fields[propField].valueOf();\n                    const index = dataArr.findIndex(d => d[idx] === value);\n                    include = include && index !== -1;\n                });\n                return include;\n            }, {\n                saveChild: false,\n                mode\n            });\n        } else {\n            filteredDataModel = dataModel.select(() => false, {\n                saveChild: false,\n                mode\n            });\n        }\n    } else {\n        filteredDataModel = getDataModelFromRange(dataModel, identifiers, mode);\n    }\n    return filteredDataModel;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} listenerMap\n */\nconst registerListeners = (context, listenerMap, ...params) => {\n    const propListenerMap = listenerMap(context, ...params);\n    for (const key in propListenerMap) {\n        if ({}.hasOwnProperty.call(propListenerMap, key)) {\n            const namespace = params[0];\n            let ns = null;\n            if (namespace) {\n                ns = namespace.local;\n            }\n            const mapObj = propListenerMap[key];\n            const propType = mapObj.type;\n            const props = mapObj.props;\n            const listenerFn = mapObj.listener;\n            context.store()[propType](props, listenerFn, false, {\n                namespace: ns\n            });\n        }\n    }\n};\n\nconst isValidValue = value => !isNaN(value) && value !== -Infinity && value !== Infinity;\n/**\n *\n *\n * @param {*} str\n *\n */\nconst escapeHTML = (str) => {\n    const htmlEscapes = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#x27;',\n        '/': '&#x2F;'\n    };\n    const htmlEscaper = /[&<>\"'/]/g;\n    return (`${str}`).replace(htmlEscaper, match => htmlEscapes[match]);\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst transposeArray = arr => arr[0].map((col, i) => arr.map(row => row[i]));\nconst toArray = arr => (arr instanceof Array ? arr : [arr]);\nconst extendsClass = (cls, extendsFrom, found) => {\n    if (!cls) {\n        return false;\n    }\n    const prototype = cls.prototype;\n    if (prototype instanceof extendsFrom) {\n        found = true;\n    } else {\n        found = extendsClass(prototype, extendsFrom, found);\n    }\n    return found;\n};\n\n/**\n *\n * @param {*} dm1\n * @param {*} dm2\n */\nconst concatModels = (dm1, dm2) => {\n    const dataObj1 = dm1.getData();\n    const dataObj2 = dm2.getData();\n    const data1 = dataObj1.data;\n    const data2 = dataObj2.data;\n    const schema1 = dataObj1.schema;\n    const schema2 = dataObj2.schema;\n    const tuples1 = {};\n    const tuples2 = {};\n    const commonTuples = {};\n    for (let i = 0; i < data1.length; i++) {\n        for (let ii = 0; ii < data2.length; ii++) {\n            const row1 = data1[i];\n            const row2 = data2[ii];\n            const dim1Values = row1.filter((d, idx) => schema1[idx].type === FieldType.DIMENSION);\n            const dim2Values = row2.filter((d, idx) => schema2[idx].type === FieldType.DIMENSION);\n            const allDimSame = dim1Values.every(value => dim2Values.indexOf(value) !== -1);\n            if (allDimSame) {\n                const key = dim1Values.join();\n                !commonTuples[key] && (commonTuples[key] = {});\n                row1.forEach((value, idx) => {\n                    commonTuples[key][schema1[idx].name] = value;\n                });\n                row2.forEach((value, idx) => {\n                    commonTuples[key][schema2[idx].name] = value;\n                });\n            } else {\n                const dm1Key = dim1Values.join();\n                const dm2Key = dim2Values.join();\n                if (!commonTuples[dm1Key] && !commonTuples[dm2Key]) {\n                    !tuples1[dm1Key] && (tuples1[dm1Key] = {});\n                    !tuples2[dm2Key] && (tuples2[dm2Key] = {});\n                    row1.forEach((value, idx) => {\n                        tuples1[dm1Key][schema1[idx].name] = value;\n                    });\n                    row2.forEach((value, idx) => {\n                        tuples2[dm2Key][schema2[idx].name] = value;\n                    });\n                }\n            }\n        }\n    }\n\n    const commonSchema = [...schema1, ...schema2.filter(s2 => schema1.findIndex(s1 => s1.name === s2.name) === -1)];\n    const data = [...Object.values(tuples1), ...Object.values(tuples2), ...Object.values(commonTuples)];\n    return [data, commonSchema];\n};\n\nconst getSymbol = type => symbol().type(symbolFns[type]);\n\nconst stackOrders = {\n    [STACK_CONFIG.ORDER_NONE]: stackOrderNone,\n    [STACK_CONFIG.ORDER_ASCENDING]: stackOrderAscending,\n    [STACK_CONFIG.ORDER_DESCENDING]: stackOrderDescending\n};\nconst stackOffsets = {\n    [STACK_CONFIG.OFFSET_DIVERGING]: stackOffsetDiverging,\n    [STACK_CONFIG.OFFSET_NONE]: stackOffsetNone,\n    [STACK_CONFIG.OFFSET_EXPAND]: stackOffsetExpand,\n    [STACK_CONFIG.OFFSET_WIGGLE]: stackOffsetWiggle\n};\n\n// eslint-disable-next-line require-jsdoc\nconst stack = params => d3Stack().keys(params.keys).offset(stackOffsets[params.offset])\n                .order(stackOrders[params.order])(params.data);\n\n/**\n * Groups the data into a hierarchical tree structure based on one or more fields.\n * @param { Object } params Configuration properties for nesting data\n * @param { Array.<Array> } params.data Data which needs to be grouped\n * @param { Array.<number> } params.keys Field indices by which the data will be grouped\n * @return { Array.<Object> } Grouped data array\n */\nconst nestCollection = (params) => {\n    const nestFn = nest();\n    params.keys.forEach(key => nestFn.key(d => d[key]));\n    return nestFn.entries(params.data);\n};\n\nconst pathInterpolators = {\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    stepAfter: curveStepAfter,\n    catmullRom: curveCatmullRom,\n    step: curveStep,\n    stepBefore: curveStepBefore,\n    linear: curveLinear\n};\n\nconst Symbols = {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom,\n    line,\n    area,\n    pie,\n    arc,\n    nest\n};\n\nconst Scales = {\n    band: scaleBand\n};\n\nconst getSmallestDiff = (points) => {\n    points = points.sort((a, b) => a - b);\n    let minDiff = points[1] - points[0];\n    for (let i = 2; i < points.length; i++) {\n        minDiff = Math.min(minDiff, points[i] - points[i - 1]);\n    }\n\n    return minDiff;\n};\n\nconst timeFormats = {\n    millisecond: '%A, %b %e, %H:%M:%S.%L',\n    second: '%A, %b %e, %H:%M:%S',\n    minute: '%A, %b %e, %H:%M',\n    hour: '%A, %b %e, %H:%M',\n    day: '%A, %b %e, %Y',\n    month: '%B %Y',\n    year: '%Y'\n};\n\nconst timeDurations = [\n    ['millisecond', 'second', 'minute', 'hour', 'day', 'month', 'year'],\n    [1, 1000, 60000, 3600000, 86400000, 2592000000, 31536000000]\n];\n\nconst getNearestInterval = (interval) => {\n    const index = getClosestIndexOf(timeDurations[1], interval);\n    return timeDurations[0][index];\n};\n\nconst formatTemporal = (value, interval) => {\n    const nearestInterval = getNearestInterval(interval);\n    return DateTimeFormatter.formatAs(value, timeFormats[nearestInterval]);\n};\n\nconst temporalFields = (dataModel) => {\n    const filteredFields = {};\n    Object.entries(dataModel.getFieldspace().getDimension()).forEach(([fieldName, fieldObj]) => {\n        if (fieldObj.subtype() === TEMPORAL) {\n            filteredFields[fieldName] = fieldObj;\n        }\n    });\n    return filteredFields;\n};\n\nconst require = (lookupWhat, lookupDetails) => ({\n    resolvable: (store) => {\n        const lookupTarget = store[lookupWhat];\n        const depArr = lookupDetails.slice(0, lookupDetails.length - 1);\n        const fn = lookupDetails[lookupDetails.length - 1]; // fn\n\n        const deps = depArr.map(str => lookupTarget[str]);\n        return {\n            fn: fn(...deps),\n            depArr\n        };\n    }\n});\n\nconst nextAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||\n    function (callback) {\n        setTimeout(callback, 16);\n    };\n\nconst getValueParser = config => (val) => {\n    if (val instanceof InvalidAwareTypes) {\n        return val in config ? config[val] : `${val}`;\n    }\n    return val;\n};\n\nconst retrieveNearestGroupByReducers = (dataModel, ...measureFieldNames) => {\n    const filteredReducers = {};\n    if (dataModel instanceof DataModel) {\n        const derivations = [...dataModel.getDerivations().reverse(), ...dataModel.getAncestorDerivations().reverse()];\n        const nearestReducers = defaultValue(\n            getObjProp(derivations.find(derv => derv.op === DM_DERIVATIVES.GROUPBY), 'criteria'), {});\n\n        const measures = dataModel.getFieldspace().getMeasure();\n        measureFieldNames = measureFieldNames.length ? measureFieldNames : Object.keys(measures);\n        measureFieldNames.forEach((measureName) => {\n            if (nearestReducers[measureName]) {\n                filteredReducers[measureName] = nearestReducers[measureName];\n            } else {\n                const measureField = measures[measureName];\n                if (measureField) {\n                    filteredReducers[measureName] = measureField.defAggFn();\n                }\n            }\n        });\n    }\n    return filteredReducers;\n};\n\nconst retrieveFieldDisplayName = (dm, fieldName) => dm.getFieldspace().fieldsObj()[fieldName].displayName();\n/**\n * Fetches the nearest sort operation details by traversing the chain of parent DataModels\n * @param {Object} dataModel Instance of DataModel\n *\n * @return {Array|null} sort criteria, null if no sort operation found\n */\nconst nearestSortingDetails = (dataModel) => {\n    const allDerivations = [...dataModel.getAncestorDerivations(), ...dataModel.getDerivations()];\n    const nearestSortDerivation = allDerivations.reverse().find(derivation => derivation.op === DM_DERIVATIVES.SORT);\n\n    return nearestSortDerivation ? nearestSortDerivation.criteria : null;\n};\n\n/**\n * Returns the sort function based on the type of field\n * @param {number|string} a first value\n * @param {number|string} b second value\n * @param {string} sortOrder Order by which field is to be sorted (asc or desc)\n * @param {string} subType Field subtype\n * @return {Function} Sort function\n */\nconst getAppropriateSortingFn = (a, b, sortOrder, subType) => {\n    if (typeof sortOrder === FUNCTION) {\n        return sortOrder(a, b);\n    }\n    if (subType === TEMPORAL) {\n        return sortOrder === SORT_ORDER_ASCENDING ? a - b : b - a;\n    }\n    return sortOrder === SORT_ORDER_ASCENDING ? a.localeCompare(b) : b.localeCompare(a);\n};\n\n/**\n * Sort field based on it's subtype and sorting order\n * @param {string} subType Field subtype\n * @param {string} sortOrder Order by which field is to be sorted (asc or desc)\n * @param {Array} firstVal First sort parameter\n * @param {number} secondVal Second sort parameter\n * @return {Function|null} Sorting function\n*/\nconst sortFieldByType = (subType, sortOrder, firstVal, secondVal) => {\n    const sortOrderType = typeof sortOrder;\n\n    if (sortOrderType !== STRING && sortOrderType !== FUNCTION) {\n        return null;\n    }\n    if (sortOrderType === STRING &&\n        sortOrder !== SORT_ORDER_ASCENDING &&\n        sortOrder !== SORT_ORDER_DESCENDING) {\n        return null;\n    }\n    if (subType === TEMPORAL || subType === CATEGORICAL) {\n        return getAppropriateSortingFn(firstVal, secondVal, sortOrder, subType);\n    }\n    return null;\n};\n\nexport {\n    getValueParser,\n    require,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    stack,\n    nestCollection,\n    getSymbol,\n    transformColors,\n    detectColor,\n    hexToHsv,\n    hslToRgb,\n    rgbToHsv,\n    hsvToRgb,\n    concatModels,\n    toArray,\n    angleToRadian,\n    escapeHTML,\n    generateGetterSetters,\n    getArraySum,\n    interpolator,\n    piecewiseInterpolator,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    colorInterpolator,\n    numberInterpolator,\n    ERROR_MSG,\n    reqAnimFrame,\n    nextAnimFrame,\n    filterPropagationModel,\n    transposeArray,\n    cancelAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    symbolFns,\n    easeFns,\n    clone,\n    isEqual,\n    interpolateArray,\n    getMinPoint,\n    defaultValue,\n    getMaxPoint,\n    getClosestIndexOf,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    Store,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    transactor,\n    enableChainedTransaction,\n    isHTMLElem,\n    isSimpleObject,\n    nextFrame,\n    registerListeners,\n    replaceCSSPrefix,\n    getObjProp,\n    extendsClass,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    hslInterpolator,\n    getSmallestDiff,\n    getNearestValue,\n    retrieveNearestGroupByReducers,\n    nearestSortingDetails,\n    createSelection,\n    formatTemporal,\n    temporalFields,\n    retrieveFieldDisplayName,\n    sanitizeDomainWhenEqual,\n    sortFieldByType\n};\n","export function linear(t) {\n  return +t;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","import Selection from './selection';\n/**\n * This function applies a selection operation on a data array.\n *\n * @export\n * @param {Array} [data=[]] The data array to be observed.\n * @return {Selection} Instance of a selection.\n */\nexport default function dataSelect (idFn) {\n    return new Selection(idFn);\n}\n\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","export default function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n}\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_join from \"./join\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  join: selection_join,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","export default function(onenter, onupdate, onexit) {\n  var enter = this.enter(), update = this, exit = this.exit();\n  enter = typeof onenter === \"function\" ? onenter(enter) : enter.append(onenter + \"\");\n  if (onupdate != null) update = onupdate(update);\n  if (onexit == null) exit.remove(); else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"cancel\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTED) throw new Error(\"too late; already running\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions.\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(node, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {set} from \"./schedule\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleNull(name, interpolate) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        string1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, string10 = string1);\n  };\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = style(this, name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        value1 = value(this),\n        string1 = value1 + \"\";\n    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction styleMaybeRemove(id, name) {\n  var on0, on1, listener0, key = \"style.\" + name, event = \"end.\" + key, remove;\n  return function() {\n    var schedule = set(this, id),\n        on = schedule.on,\n        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n      .styleTween(name, styleNull(name, i))\n      .on(\"end.style.\" + name, styleRemove(name))\n    : typeof value === \"function\" ? this\n      .styleTween(name, styleFunction(name, i, tweenValue(this, \"style.\" + name, value)))\n      .each(styleMaybeRemove(this._id, name))\n    : this\n      .styleTween(name, styleConstant(name, i, value), priority)\n      .on(\"end.style.\" + name, null);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\nimport transition_end from \"./end\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease,\n  end: transition_end\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttribute(name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttributeNS(fullname.space, fullname.local);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttribute(name);\n    string0 = this.getAttribute(name);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    string0 = this.getAttributeNS(fullname.space, fullname.local);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrInterpolate(name, i) {\n  return function(t) {\n    this.setAttribute(name, i(t));\n  };\n}\n\nfunction attrInterpolateNS(fullname, i) {\n  return function(t) {\n    this.setAttributeNS(fullname.space, fullname.local, i(t));\n  };\n}\n\nfunction attrTweenNS(fullname, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","function styleInterpolate(name, i, priority) {\n  return function(t) {\n    this.style.setProperty(name, i(t), priority);\n  };\n}\n\nfunction styleTween(name, value, priority) {\n  var t, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\n    return t;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {set} from \"./schedule\";\n\nexport default function() {\n  var on0, on1, that = this, id = that._id, size = that.size();\n  return new Promise(function(resolve, reject) {\n    var cancel = {value: reject},\n        end = {value: function() { if (--size === 0) resolve(); }};\n\n    that.each(function() {\n      var schedule = set(this, id),\n          on = schedule.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) {\n        on1 = (on0 = on).copy();\n        on1._.cancel.push(cancel);\n        on1._.interrupt.push(cancel);\n        on1._.end.push(end);\n      }\n\n      schedule.on = on1;\n    });\n  });\n}\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    schedule.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import { select, event as d3event, selection, clientPoint } from 'd3-selection';\nimport { drag as d3drag } from 'd3-drag';\nimport 'd3-transition';\nimport { mergeRecursive } from './common-utils';\n/**\n * This function takes a raw DOM element or\n * a string and returns a d3 selection of that element.\n *\n * @param {HTMLElement | string} element The element to wrap in d3 selection.\n * @return {Selection} Instance of d3 selection.\n */\nconst selectElement = element => select(element);\n\n/**\n * It creates a new d3 element on the parent element\n * @param  {Selection} parent Element to which the element is to be appended\n * @param  {Object} elemType Type of the new element\n * @param  {Array} data Data for the new element\n * @param  {Object} selector classname/id/tagname for the element\n * @return {HTMLElement} Newly Created Element\n */\nconst makeElement = (parent, elemType, data, selector, callbacks = {}, keyFn) => {\n    if ((parent instanceof HTMLElement || parent instanceof SVGElement)) {\n        parent = selectElement(parent);\n    }\n\n    const selectorVal = selector ? selector[0] : null;\n    let selectorType = null;\n    let actualSelector = null;\n    let element = null;\n    let enterSel = null;\n    let mergeSel = null;\n    let filter;\n    if (selectorVal) {\n        if (selectorVal === '#') {\n            selectorType = 'id';\n            actualSelector = selector;\n        } else {\n            selectorType = 'class';\n            actualSelector = selector[0] === '.' ? selector : `.${selector}`;\n        }\n    } else {\n        actualSelector = elemType;\n        filter = true;\n    }\n    element = parent.selectAll(actualSelector);\n\n    filter && (element = element.filter(function () {\n        return this.parentNode === parent.node();\n    }));\n    element = element.data(data, keyFn);\n\n    enterSel = element.enter()\n                            .append(elemType || 'div');\n    callbacks.enter && enterSel.each(function (...params) {\n        callbacks.enter(selectElement(this), ...params);\n    });\n\n    mergeSel = enterSel.merge(element);\n    callbacks.update && mergeSel.each(function (...params) {\n        callbacks.update(selectElement(this), ...params);\n    });\n    if (selectorType === 'class') {\n        mergeSel.classed(selectorVal === '.' ? selector.substring(1, selector.length) : selector, true);\n    } else if (selectorType === 'id') {\n        mergeSel.attr('id', selector.substring(1, selector.length));\n    }\n    const exitSel = element.exit();\n\n    if (callbacks.exit) {\n        exitSel.each(function (...params) {\n            callbacks.exit(selectElement(this), ...params);\n        });\n    } else {\n        exitSel.remove();\n    }\n    return mergeSel;\n};\n\n/**\n * This function applies styles to an element\n *  @param  {Object} elem Element Selection\n * @param  {Object} styleObj Style Object to be applied\n * @return {Element} Newly Created Element\n*/\nconst applyStyle = (elem, styleObj) => {\n    Object.entries(styleObj).forEach((d) => {\n        elem.style(d[0], d[1]);\n    }, this);\n    return elem;\n};\n\n/**\n * This function appends a dom element in another element.\n * @param {HTMLElement | SVGElement} element1 The element in which to append the second element\n * @param {HTMLElement | SVGElement} element2 The element which will be appended.\n */\nconst appendElement = (element1, element2) => {\n    element1.appendChild(element2);\n};\n\n/**\n * Sets the attributes to the element.\n * @param {HTMLElement | SVGElement} element Element on which attributes will be applied\n * @param {Object} attrs Attributes which need to be applied\n */\nconst setElementAttrs = (element, attrs) => {\n    for (const key in attrs) {\n        if ({}.hasOwnProperty.call(attrs, key)) {\n            element.attr(key, attrs[key]);\n        }\n    }\n};\n\n/**\n * Sets attributes in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which attrs will be applied\n * @param {Array.<Object>} attrs Array of attributes\n * @param {string} className className of elements to select.\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setAttrs = (element, attrs, className) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    className !== undefined ? element.selectAll(`.${className}`).each(function () {\n        setElementAttrs(select(this), attrs);\n    }) : setElementAttrs(element, attrs);\n    return element;\n};\n\n/**\n * Adds a css class to elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst addClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, true) :\n                elem.classed(className, true);\n    });\n};\n\n/**\n * Removes the css class from elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst removeClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, false) :\n                elem.classed(className, false);\n    });\n};\n\n/**\n * Sets styles in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which styles will be applied\n * @param {Array.<Object>} styles Array of style attributes\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setStyles = (element, styles) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            element.style(key, styles[key]);\n        }\n    }\n    return element;\n};\n\n/**\n * Creates svg or html elements by binding data to the selection.Removes extra elements\n * on exit.\n * @param {Object} params Parameter object\n * @param {SVGElement | HTMLElement} params.container Container element where all elements will be appended\n * @param {string} params.selector Selector by which elements will be selected from dom\n * @param {string} params.append Append tag\n * @param {Function} params.each Function which will be executed for each data point and element.\n */\nconst createElements = (params) => {\n    const container = select(params.container);\n    let data;\n    let sel;\n\n    data = params.data;\n    if (typeof data === 'number') {\n        data = Array(data).fill().map((d, i) => i);\n    }\n    sel = container.selectAll(params.selector).data(data);\n\n    sel = container.selectAll(params.selector).filter(function () {\n        return this.parentNode === container.node();\n    }).data(params.data);\n\n    const selectionMerge = sel.enter().append(params.append).merge(sel).each(function (d, i) {\n        params.each(d, select(this), i);\n    });\n\n    selectionMerge.attr('class', params.className || '');\n    sel.exit().remove();\n};\n\n/**\n * Clips an element with given measurement. Basically it is used to hide overflowing portions\n * of any element.\n * @param {SVGElement} container svg element which needs to be clipped.\n * @param {Object} measurement Dimensions of the clipped rectangle.\n * @param {string} id Unique id of the clip element\n */\nconst clipElement = (container, measurement, id) => {\n    const clipPathElement = makeElement(select(container), 'clipPath', [1], `#${id}`);\n    const clipPathRect = makeElement(clipPathElement, 'rect', [1]);\n    clipPathRect.attr('x', measurement.x)\n                    .attr('y', measurement.x)\n                    .attr('width', measurement.width)\n                    .attr('height', measurement.height);\n    clipPathElement.attr('clip-path', `url(#${id})`);\n};\n\n/**\n * Returns the element of the corresponding classname.\n * @param {HTMLElement | SVGElement} node html or svg node element.\n * @param {string} className css class to be applied.\n * @return {HTMLElement | SVGElement} html or svg element.\n */\nconst getElementsByClassName = (node, className) => select(node).selectAll(className).nodes();\n\n/**\n * Gets the mouse position relative to an svg type of element\n * @param {SVGElement} element Any svg element like rect, circle, etc.\n * @param {Event} event Event object.\n * @return {Object} x and y position relative to the container element passed.\n */\nconst getMousePos = (element, event) => {\n    const boundingClientRect = element.getBoundingClientRect();\n    return {\n        x: event.x - boundingClientRect.x,\n        y: event.y - boundingClientRect.y\n    };\n};\n\nconst getClientPoint = (...params) => {\n    const pos = clientPoint(...params);\n    return {\n        x: pos[0],\n        y: pos[1]\n    };\n};\n\n/** This function appends a dom element in another element.\n * @param {Object} tag The tag name of the element to append\n * @param {Object} mount Mount point fo the element\n * @return {Object} selection of the appended element\n */\nconst createElement = (tag, mount) => select(mount).append(tag).node();\n\n/**\n * Gets the d3 event function\n * @return {Object} d3 event\n */\nconst getEvent = () => d3event;\n\n/**\n * Gets the d3 drag function\n * @return {Object} d3 drag\n */\nconst getD3Drag = () => d3drag;\n\nconst getSmartComputedStyle = (group, css) => {\n    let textEl;\n    const testText = 'W';\n    const mandatoryStyle = {\n        'fill-opacity': 0\n    };\n    const className = typeof css === 'string' ? css : (css instanceof Array ? css.join(' ') : undefined);\n\n    if (group.node() instanceof HTMLElement) {\n        textEl = group.append('div').html(testText);\n    } else {\n        textEl = group.append('text').text(testText);\n    }\n\n    if (className) {\n        textEl.attr('class', className);\n    } else if (typeof css === 'object') {\n        delete css['fill-opacity'];\n        mergeRecursive(mandatoryStyle, css);\n    }\n\n    textEl.style(mandatoryStyle);\n    const computedStyle = window.getComputedStyle(textEl.node());\n    const styleForSmartLabel = {\n        fontSize: computedStyle.fontSize,\n        fontFamily: computedStyle.fontFamily,\n        fontWeight: computedStyle.fontWeight,\n        fontStyle: computedStyle.fontStyle\n    };\n\n    textEl.remove();\n\n    return styleForSmartLabel;\n};\n\nconst hasTouch = () => 'ontouchstart' in document.documentElement;\n\nexport {\n    hasTouch,\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint\n};\n","const events = [\n    'initialized',\n    'beforeupdate',\n    'updated',\n    'beforedraw',\n    'drawn',\n    'beforeremove',\n    'removed',\n    'animationend'\n];\n\nconst compositions = [\n    'canvas',\n    'unit',\n    'layer',\n    'axis',\n    'facet-headers',\n    'legend',\n    'caption'\n];\n\nconst EVENT_LIST = [];\n\ncompositions.forEach((composition) => {\n    events.forEach((event) => {\n        EVENT_LIST.push(`${composition}.${event}`);\n    });\n});\n\nexport default EVENT_LIST;\n","import EVENT_LIST from './event-list';\nimport { createPromise } from './helper';\n\n/**\n * At first call it accepts one function\n * calling it second time accepts notification object.\n * notification object then called with first accepted function\n *\n * @param {Function} resolveFn a promise's resolve function\n * @return {Function} a function to accept notification object\n */\nconst resolver = resolveFn => notification => resolveFn(notification);\n\n/**\n * Checks if the property string is present in the source object\n *\n * @param {Object} source source object whom you want to check the property\n * @param {string} property key name that need to be checked\n * @return {boolean} returns true if the property found in the source object\n */\nconst hasOwn = (source, property) => Object.prototype.hasOwnProperty.call(source, property);\n\n/**\n * LifeCycleManager which goes as a dependendecy to a muze\n * it accepts notification from the entire library throughout\n * the exeecution life\n *\n * @export\n * @class LifeCycleManager\n */\nexport default class LifeCycleManager {\n\n    /**\n     * Creates an instance of LifeCycleManager.\n     * @memberof LifeCycleManager\n     */\n    constructor () {\n        this._eventList = EVENT_LIST;\n        this._promises = new Map();\n        this._notifiers = {};\n        this._lifeCycles = {};\n        this._unreleasedLifeCycles = {};\n        this._boot();\n    }\n\n    /**\n     * Fills all the notifiers with resolver callback\n     *\n     * @memberof LifeCycleManager\n     */\n    _boot () {\n        this._notifiers = this._eventList.reduce((acc, name) => {\n            acc[name] = resolver;\n            return acc;\n        }, {});\n        this._preparePromises();\n    }\n\n    /**\n     * Public method which gives the promise corresponding\n     * to the event name\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    retrieve (eventName) {\n        return this._promises.get(eventName);\n    }\n\n    /**\n     * Creates a promise that will be passed to user's callback\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} a pending promise waiting for resolve to be called\n     * @memberof LifeCycleManager\n     */\n    _makeNotifierPromise (eventName) {\n        return new Promise((resolve) => {\n            this._notifiers[eventName] = resolver(resolve);\n        });\n    }\n\n    /**\n     * Prepares the promise map with pending promises\n     * all the promises are in a pending state where their's\n     * resolve function waiting to be called with notification object\n     * @memberof LifeCycleManager\n     */\n    _preparePromises () {\n        this._eventList.forEach((eventName) => {\n            const promise = this._makeNotifierPromise(eventName);\n            this._promises.set(eventName, promise);\n            createPromise(promise, eventName, this);\n        });\n    }\n\n    /**\n     * Resolves the promise with notification object\n     *\n     * @param {string} eventName name of the event in the system\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     *\n     * @memberof LifeCycleManager\n     */\n    _resolvePromise (eventName, notification) {\n        this._notifiers[eventName](notification);\n    }\n\n    /**\n     * Public method which is being called by different\n     * subcompoents of the system at different execution atages\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    notify (notification) {\n        // get the composition name from notification\n        // or from static formalName() method\n        const composition = notification.formalName || notification.client.constructor.formalName();\n        notification.formalName = composition;\n        this._releasePromisesFromCache();\n        this._notify(composition, notification);\n    }\n\n    /**\n     * Notify user the with promsie in a callback\n     * if callback not found then cache it\n     *\n     * @param {string} composition\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    _notify (composition, notification) {\n        const stage = notification.action;\n        const eventName = `${composition}.${stage}`;\n\n        // resolves promise with the notification object\n        this._resolvePromise(eventName, notification);\n\n        // get the promise from the promise map\n        const promise = this.retrieve(eventName);\n\n        if (this._lifeCycles[composition]) {\n            if (this._lifeCycles[composition][stage]) {\n                // if user given call back exists, then call with promise\n                this._callLifeCycleCallback(composition, stage, promise);\n            } else {\n                // otherwise cache the promise\n                this._cachePromise(composition, stage, promise);\n            }\n        } else {\n            this._cachePromise(composition, stage, promise);\n        }\n    }\n\n    /**\n     * Calls the user's callback with callback\n     *\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _callLifeCycleCallback (composition, stage, promise) {\n        const eventName = `${composition}.${stage}`;\n        this._lifeCycles[composition][stage](promise);\n        this._resetTargetPromise(eventName);\n    }\n\n    /**\n     * Try to clear the cached promsies once we have\n     * macthed callbacks from the user\n     *\n     * @memberof LifeCycleManager\n     */\n    _releasePromisesFromCache () {\n        const compositions = Object.keys(this._unreleasedLifeCycles);\n        compositions.forEach((composition) => {\n            const stages = Object.keys(this._unreleasedLifeCycles[composition]);\n            stages.forEach((stage) => {\n                if (this._lifeCycles[composition]) {\n                    if (this._lifeCycles[composition][stage]) {\n                        // take the promise from unreleased lifeCycles\n                        const promise = this._unreleasedLifeCycles[composition][stage];\n                        // call the user given callback with that promise\n                        this._callLifeCycleCallback(composition, stage, promise);\n                        // delete promise from unreleased lifeCycles\n                        delete this._unreleasedLifeCycles[composition][stage];\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * Cache the promise in the map. This cache\n     * then get consumed if we get user callbacks\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _cachePromise (composition, stage, promise) {\n        if (!hasOwn(this._unreleasedLifeCycles, composition)) {\n            this._unreleasedLifeCycles[composition] = {};\n        }\n\n        if (!hasOwn(this._unreleasedLifeCycles[composition], stage)) {\n            this._unreleasedLifeCycles[composition][stage] = {};\n        }\n        this._unreleasedLifeCycles[composition][stage] = promise;\n    }\n\n    /**\n     * It register's the callbacks gievn the user\n     *\n     * @param {Object} [lifeCycles={}] a object with list of callbacks\n     * @memberof LifeCycleManager\n     */\n    register (lifeCycles = {}) {\n        this._lifeCycles = lifeCycles;\n        // as we get all the callbacks, try to call them\n        // from unreleased promise map\n        this._releasePromisesFromCache();\n    }\n\n    /**\n     * Reset the promise into pending state\n     *\n     * @param {string} eventName name of the event happening\n     * @memberof LifeCycleManager\n     */\n    _resetTargetPromise (eventName) {\n        setTimeout(() => {\n            this._notifiers[eventName] = resolver;\n            this._promises.set(eventName, this._makeNotifierPromise(eventName));\n        }, 0);\n    }\n}\n","import LifeCycleManager from './lifecycle-manager';\n\nexport default LifeCycleManager;\n","/**\n * Creates a new promise when the given promise is resolved. This needs to be done so that after the lifecycle event\n * is completed, then again when the event gets completed, then a new promise gets resolved.\n *\n * @param {Promise} promise Instance of promise\n * @param {string} eventName name of event\n * @param {LifeCycleManager} context Instance of lifecyclemanager\n */\nexport const createPromise = (promise, eventName, context) => {\n    promise.then(() => {\n        const prm = context._makeNotifierPromise(eventName);\n        context._promises.set(eventName, prm);\n        createPromise(prm, eventName, context);\n    });\n};\n","import { default as DataModel } from 'datamodel';\nimport * as scales from './scales';\nimport * as colorSchemes from './color-schemes';\nimport * as STATE_NAMESPACES from './enums/namespace';\n\nconst InvalidAwareTypes = DataModel.InvalidAwareTypes;\n\nexport {\n    InvalidAwareTypes,\n    DataModel\n};\n\nexport {\n    ReservedFields,\n    CommonProps,\n    COORD_TYPES\n} from './enums';\n\nexport { STATE_NAMESPACES };\n\nexport {\n    scales,\n    colorSchemes\n};\n\nexport {\n    getNearestValue,\n    getValueParser,\n    transformColors,\n    detectColor,\n    hslToRgb,\n    rgbToHsv,\n    hexToHsv,\n    hsvToRgb,\n    escapeHTML,\n    angleToRadian,\n    generateGetterSetters,\n    getArraySum,\n    ERROR_MSG,\n    interpolator,\n    colorInterpolator,\n    numberInterpolator,\n    piecewiseInterpolator,\n    reqAnimFrame,\n    cancelAnimFrame,\n    nextAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    replaceCSSPrefix,\n    symbolFns,\n    defaultValue,\n    easeFns,\n    clone,\n    interpolateArray,\n    getMinPoint,\n    getMaxPoint,\n    getClosestIndexOf,\n    registerListeners,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    Store,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    transactor,\n    enableChainedTransaction,\n    isHTMLElem,\n    isEqual,\n    isSimpleObject,\n    nextFrame,\n    filterPropagationModel,\n    getObjProp,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    transposeArray,\n    toArray,\n    extendsClass,\n    concatModels,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    nestCollection,\n    stack,\n    getSymbol,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    hslInterpolator,\n    getSmallestDiff,\n    require,\n    formatTemporal,\n    nearestSortingDetails,\n    createSelection,\n    temporalFields,\n    retrieveNearestGroupByReducers,\n    retrieveFieldDisplayName,\n    sanitizeDomainWhenEqual,\n    sortFieldByType\n} from './common-utils';\n\nexport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint,\n    hasTouch\n} from './renderer-utils';\n\nexport {\n    timeMillisecond,\n    timeSecond,\n    timeMinute,\n    timeHour,\n    timeDay,\n    timeWeek,\n    timeMonth,\n    timeYear\n} from 'd3-time';\n\nexport { default as Smartlabel } from 'fusioncharts-smartlabel';\n\nexport { dataSelect } from './DataSystem';\n\nexport { default as LifeCycleManager } from './lifecycle-manager';\n\nexport {\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    DateTimeFormatter,\n    DM_DERIVATIVES,\n    GROUP_BY_FUNCTIONS\n} from 'datamodel';\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\nexport const LONGTOUCH = 'longtouch';\nexport const TOUCHDRAG = 'touchdrag';\nexport const ALL_ACTIONS = '*';\n","const SELECTION_NEW_ENTRY = 1;\nconst SELECTION_NEW_EXIT = -1;\nconst SELECTION_NULL = 0;\nconst SELECTION_OLD_ENTRY = 2;\nconst SELECTION_OLD_EXIT = -2;\n\nexport {\n    SELECTION_NEW_ENTRY,\n    SELECTION_NEW_EXIT,\n    SELECTION_NULL,\n    SELECTION_OLD_ENTRY,\n    SELECTION_OLD_EXIT\n};\n","import SelectionSet from './selection-set';\n\nexport default SelectionSet;\n","import {\n    SELECTION_NEW_ENTRY, SELECTION_NEW_EXIT, SELECTION_NULL, SELECTION_OLD_ENTRY, SELECTION_OLD_EXIT\n} from '../enums/selection';\n/* eslint-disable guard-for-in */\n\n/**\n * This component is used to keep track of the row tuples of the data which gets added and removed. This keeps\n * information of which rows are in previous and new entry set and previous and new exit set. This is initialized by\n * {@link Firebolt}.\n *\n * @public\n *\n * @class SelectionSet\n */\nclass SelectionSet {\n    /**\n     * Creates an instance of selection set\n     *\n     * @param {Array.<string>} completeSet Set of unique ids.\n     */\n    constructor (completeSet, _volatile) {\n        this.completeSet = completeSet;\n        this._set = completeSet.reduce((obj, key) => {\n            obj[key] = SELECTION_NULL;\n            return obj;\n        }, {});\n        this._volatile = _volatile;\n        this._completeSetCount = completeSet.length;\n        this._lockedSelection = {};\n        this._resetted = true;\n    }\n\n    /**\n     * Adds a set of ids to the selection set. This also moves the other rows to exit set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    add (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_ENTRY;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_ENTRY && set[key] !== SELECTION_OLD_ENTRY) {\n                set[key] = set[key] < 0 ? SELECTION_OLD_EXIT : SELECTION_NEW_EXIT;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Adds an array of ids to the old entry set.\n     *\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    update (ids) {\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_OLD_ENTRY;\n        });\n\n        return this;\n    }\n\n    /**\n     * Moves all ids which in new entry set  to old entry set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateEntry () {\n        const set = this._set;\n\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_ENTRY ? SELECTION_OLD_ENTRY : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Moves an array of ids which are in new exit set to old exit set.\n     *\n     * @public\n     *\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateExit () {\n        const set = this._set;\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_EXIT ? SELECTION_OLD_EXIT : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Removes an array of ids from the selection set. It also moves the remaining row ids to entry set.\n     *\n     * @public\n     * @param {Array.<string>} ids Array of unique ids\n     *\n     * @return {SelectionSet}  Instance of selection set\n     */\n    remove (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_EXIT;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_EXIT && set[key] !== SELECTION_OLD_EXIT) {\n                set[key] = set[key] === 0 ? SELECTION_NEW_ENTRY : SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n\n    getSets () {\n        const set = this._set;\n        const retObj = {\n            entrySet: [[], []],\n            exitSet: [[], []],\n            completeSet: []\n        };\n\n        for (const key in set) {\n            if (set[key] > 0) {\n                set[key] === SELECTION_OLD_ENTRY && retObj.entrySet[0].push(key);\n                set[key] === SELECTION_NEW_ENTRY && retObj.entrySet[1].push(key);\n            } else if (set[key] < 0) {\n                set[key] === SELECTION_OLD_EXIT && retObj.exitSet[0].push(key);\n                set[key] === SELECTION_NEW_EXIT && retObj.exitSet[1].push(key);\n            }\n            retObj.completeSet.push(key);\n        }\n\n        ['entrySet', 'exitSet'].forEach((type) => {\n            retObj[type] = retObj[type].map(e => e.map(Number));\n        });\n        retObj.completeSet = retObj.completeSet.map(Number);\n\n        return retObj;\n    }\n\n    /**\n     * Resets an array of ids in the selection set to initial state. It sets the value of every unique id value to\n     * null in the selection set which means they are neither in entry set nor in exit set. If no ids are passed,\n     * then it resets all the ids to null.\n     *\n     * @public\n     *\n     * @param {Array} ids Array of unique ids.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    reset (ids) {\n        const set = this._set;\n        if (ids) {\n            ids.forEach((i) => {\n                set[i] = SELECTION_NULL;\n            });\n        } else {\n            const lockedSel = this._lockedSelection;\n            for (const key in set) {\n                if (!(key in lockedSel)) {\n                    set[key] = SELECTION_NULL;\n                }\n            }\n        }\n        this._resetted = true;\n        return this;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     *\n     * @public\n     *\n     * @return {Array.<string>} Array of unique ids\n     */\n    getEntrySet () {\n        const set = this._set;\n        const addSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_ENTRY && addSet.push(key);\n        }\n\n        return addSet;\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in entry set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old entry set or new entry set\n     */\n    getExistingEntrySet (addSet) {\n        const set = this._set;\n        return addSet.filter(d => set[d] === SELECTION_NEW_ENTRY || set[d] === SELECTION_OLD_ENTRY);\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old exit set or new exit set\n     */\n    getExistingExitSet (removeSet) {\n        const set = this._set;\n        return removeSet.filter(d => set[d] === SELECTION_NEW_EXIT || set[d] === SELECTION_OLD_EXIT);\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldEntry () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_ENTRY && updateSet.push(key);\n        }\n        return updateSet;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldExit () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_EXIT && updateSet.push(key);\n        }\n\n        return updateSet;\n    }\n\n    /**\n     * Gets the array of ids which are in the exit set.\n     *\n     * @public\n     * @return {Array.<string>} Array of unique ids\n     */\n    getExitSet () {\n        const set = this._set;\n        const removeSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_EXIT && removeSet.push(key);\n        }\n        return removeSet;\n    }\n\n    /**\n     * Gets all the ids which are either in exit or entry set.\n     *\n     * @public\n     * @return {Array} Array of unique ids\n     */\n    getCompleteSet () {\n        const set = this._set;\n        const completeSet = [];\n\n        for (const key in set) {\n            completeSet.push(key);\n        }\n\n        return completeSet;\n    }\n\n    getCompleteSetCount () {\n        return this._completeSetCount;\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Swaps the add set and remove set in the selection set.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    toggle () {\n        const set = this._set;\n\n        for (const key in set) {\n            if (set[key] === SELECTION_NEW_ENTRY) {\n                set[key] = SELECTION_NEW_EXIT;\n            } else if (set[key] === SELECTION_NEW_EXIT) {\n                set[key] = SELECTION_NEW_ENTRY;\n            } else if (set[key] === SELECTION_OLD_ENTRY) {\n                set[key] = SELECTION_OLD_EXIT;\n            } else {\n                set[key] = SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n}\n\nexport default SelectionSet;\n","import { clone, retrieveNearestGroupByReducers } from 'muze-utils';\nimport * as SELECTION from '../enums/selection';\n\nexport const initializeSideEffects = (context, sideEffects) => {\n    const sideEffectsMap = context._sideEffects;\n    const config = context.config();\n    sideEffects = sideEffects instanceof Array ? sideEffects : Object.values(sideEffects);\n    sideEffects.forEach((SideEffect) => {\n        const formalName = SideEffect.formalName();\n        const sideEffectInstance = sideEffectsMap[formalName];\n        sideEffectsMap[formalName] = sideEffectInstance || new SideEffect(context);\n        const sideEffectConf = config[formalName];\n        sideEffectConf && sideEffectsMap[formalName].config(sideEffectConf);\n    });\n    return sideEffectsMap;\n};\n\nexport const initializeBehaviouralActions = (context, actions) => {\n    const dispatchableBehaviours = {};\n\n    actions = actions instanceof Array ? actions : Object.values(actions);\n    actions.forEach((Action) => {\n        dispatchableBehaviours[Action.formalName()] = new Action(context);\n    });\n    return dispatchableBehaviours;\n};\n\nexport const initializePhysicalActions = (context, actions) => {\n    const physicalActions = {};\n\n    for (const name in actions) {\n        if (!({}).hasOwnProperty.call(name, actions)) {\n            physicalActions[name] = actions[name](context);\n        }\n    }\n    return physicalActions;\n};\n\nexport const changeSideEffectAvailability = (context, fn, toEnable) => {\n    const sideEffects = context.sideEffects();\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            let change = true;\n            if (fn && fn(key) === false) {\n                change = false;\n            }\n            if (change) {\n                toEnable ? sideEffects[key].enable() : sideEffects[key].disable();\n            }\n        }\n    }\n};\n\nexport const getMergedSet = set => [...new Set([...set[0], ...set[1]])];\n\nexport const getSourceFields = (propagationInf, criteria = {}) => {\n    const sourceIdentifiers = propagationInf.sourceIdentifiers;\n    let sourceFields;\n    if (sourceIdentifiers) {\n        sourceFields = sourceIdentifiers.getSchema().map(d => d.name);\n    } else if (criteria instanceof Array) {\n        sourceFields = criteria[0];\n    } else {\n        sourceFields = Object.keys(criteria || {});\n    }\n    return sourceFields;\n};\n\nconst conditionsMap = {\n    newEntry: [SELECTION.SELECTION_NEW_ENTRY],\n    oldEntry: [SELECTION.SELECTION_OLD_ENTRY],\n    mergedEnter: [SELECTION.SELECTION_NEW_ENTRY, SELECTION.SELECTION_OLD_ENTRY],\n    newExit: [SELECTION.SELECTION_NEW_EXIT],\n    oldExit: [SELECTION.SELECTION_OLD_EXIT],\n    mergedExit: [SELECTION.SELECTION_NEW_EXIT, SELECTION.SELECTION_OLD_EXIT],\n    complete: []\n};\n\nexport const getModelFromSet = (type, model, set) => {\n    if (model) {\n        return model.select((fields, i) =>\n           (conditionsMap[type].some(condition => set[i] === condition)), {\n               saveChild: false\n           });\n    }\n    return null;\n};\n\nexport const getSetInfo = (type, set, config) => {\n    let model = null;\n    const filteredDataModel = config.filteredDataModel;\n    const selectionSet = config.selectionSet;\n    if (!config.propagationData) {\n        if (selectionSet.resetted()) {\n            model = null;\n        } else {\n            model = getModelFromSet(type, config.dataModel, config.selectionSet._set);\n        }\n    } else if (filteredDataModel) {\n        model = type === 'mergedEnter' ? filteredDataModel[0] : filteredDataModel[1];\n    }\n    return {\n        uids: set,\n        length: set.length,\n        model\n    };\n};\n\nexport const getSideEffects = (behaviour, behaviourEffectMap) => {\n    const sideEffects = [];\n    for (const key in behaviourEffectMap) {\n        const behaviours = key.split(',');\n        const found = behaviours.some(d => d === behaviour);\n        if (found) {\n            sideEffects.push({\n                effects: behaviourEffectMap[key],\n                behaviours\n            });\n        }\n    }\n    return sideEffects;\n};\n\nexport const unionSets = (context, behaviours) => {\n    let combinedSet = {};\n    const models = {\n        mergedEnter: null,\n        mergedExit: null\n    };\n    behaviours.forEach((behaviour) => {\n        const entryExitSet = context._entryExitSet[behaviour];\n        if (entryExitSet) {\n            combinedSet = Object.assign(combinedSet, clone(entryExitSet));\n            ['mergedEnter', 'mergedExit'].forEach((type) => {\n                const model = entryExitSet[type].model;\n                let existingModel = models[type];\n                let aggFns = retrieveNearestGroupByReducers(model);\n                if (!existingModel) {\n                    existingModel = models[type] = model;\n                } else if (`${model.getSchema().map(d => d.name).sort()}` ===\n                    `${existingModel.getSchema().map(d => d.name).sort()}`) {\n                    aggFns = Object.assign({}, retrieveNearestGroupByReducers(existingModel));\n                    existingModel = models[type] = model.union(existingModel);\n                } else {\n                    existingModel = model;\n                }\n                combinedSet[type].model = existingModel;\n                combinedSet[type].aggFns = aggFns;\n            });\n        }\n    });\n    return combinedSet;\n};\n","import {\n    mergeRecursive,\n    hasTouch,\n    filterPropagationModel,\n    FieldType,\n    selectElement,\n    isSimpleObject\n} from 'muze-utils';\nimport { ALL_ACTIONS } from './enums/actions';\nimport SelectionSet from './selection-set';\nimport {\n    initializeBehaviouralActions,\n    initializeSideEffects,\n    changeSideEffectAvailability,\n    initializePhysicalActions,\n    unionSets,\n    getSideEffects\n} from './helper';\n\n/**\n * This class is responsible for dispatching behavioural actions and side effects. It also keeps the information of\n * registered physical actions, behavioural actions and side effects. Also, it keeps the map of physical and behavioural\n * actions and behavioural actions and side effects. Whenever any behavioural action is dispatched, it also propagates\n * the rows which got affected to the other datamodels. This class is initialized by {@link VisualUnit} and legend to\n * manage it's interaction.\n *\n * @public\n * @class Firebolt\n * @module Firebolt\n */\nexport default class Firebolt {\n    constructor (context, actions, sideEffects, behaviourEffectMap) {\n        this.context = context;\n        this._sideEffectDefinitions = {};\n        this._sideEffects = {};\n        this._propagationInf = {};\n        this._actions = {\n            behavioural: {},\n            physical: {}\n        };\n        this._selectionSet = {};\n        this._volatileSelectionSet = {};\n        this._propagationFields = {};\n        this._sourceSideEffects = {\n            selectionBox: () => false\n        };\n        this._propagationBehaviourMap = {};\n        this._sourceBehaviours = {};\n        this._actionBehaviourMap = {};\n        this._config = {};\n        this._behaviourEffectMap = {};\n        this._entryExitSet = {};\n        this._actionHistory = {};\n        this._queuedSideEffects = {};\n\n        this.mapSideEffects(behaviourEffectMap);\n        this.registerBehaviouralActions(actions.behavioural);\n        this.registerSideEffects(sideEffects);\n        this.registerPhysicalBehaviouralMap(actions.physicalBehaviouralMap);\n        this.registerPhysicalActions(actions.physical);\n    }\n\n    config (...config) {\n        if (config.length) {\n            this._config = mergeRecursive(this._config, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    mapSideEffects (behEffectMap) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        for (const key in behEffectMap) {\n            if ({}.hasOwnProperty.call(behEffectMap, key)) {\n                const sideEffects = behEffectMap[key] || [];\n                let preventDefaultActions = false;\n                let effectNames;\n                if (isSimpleObject(sideEffects)) {\n                    effectNames = sideEffects.effects;\n                    preventDefaultActions = sideEffects.preventDefaultActions;\n                } else {\n                    effectNames = sideEffects;\n                }\n                !behaviourEffectMap[key] && (behaviourEffectMap[key] = []);\n                this._behaviourEffectMap[key] = [...new Set(preventDefaultActions ? effectNames :\n                    [...behaviourEffectMap[key], ...effectNames])];\n            }\n        }\n        return this;\n    }\n\n    registerBehaviouralActions (actions) {\n        const behaviours = initializeBehaviouralActions(this, actions);\n        this.prepareSelectionSets(behaviours);\n        Object.assign(this._actions.behavioural, behaviours);\n        return this;\n    }\n\n    prepareSelectionSets () {\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        this.initializeSideEffects();\n        return this;\n    }\n\n    applySideEffects (sideEffects, selectionSet, payload) {\n        const sideEffectStore = this.sideEffects();\n        const actionHistory = this._actionHistory;\n        const queuedSideEffects = this._queuedSideEffects;\n        sideEffects.forEach((sideEffect) => {\n            let options;\n            let name;\n            const effects = sideEffect.effects;\n            const behaviours = sideEffect.behaviours;\n            const combinedSet = unionSets(this, behaviours, selectionSet);\n            effects.forEach((effect) => {\n                if (typeof effect === 'object') {\n                    name = effect.name;\n                    options = effect.options;\n                } else {\n                    name = effect;\n                }\n\n                const sideEffectInstance = sideEffectStore[name];\n                if (sideEffectInstance.isEnabled()) {\n                    if (!sideEffectInstance.constructor.mutates() &&\n                        Object.values(actionHistory).some(d => d.isMutableAction)) {\n                        queuedSideEffects[`${name}-${behaviours.join()}`] = {\n                            name,\n                            params: [combinedSet, payload, options]\n                        };\n                    } else {\n                        this.dispatchSideEffect(name, combinedSet, payload, options);\n                    }\n                }\n            });\n        });\n        return this;\n    }\n\n    dispatchSideEffect (name, selectionSet, payload, options = {}) {\n        const sideEffectStore = this.sideEffects();\n        const sideEffect = sideEffectStore[name];\n        let disable = false;\n        if (options.filter && options.filter(sideEffect)) {\n            disable = true;\n        }\n        !disable && sideEffectStore[name].apply(selectionSet, payload, options);\n    }\n\n    registerPropagationBehaviourMap (map) {\n        this._propagationBehaviourMap = Object.assign(this._propagationBehaviourMap, map || {});\n        return this;\n    }\n\n    dispatchBehaviour (behaviour, payload, propagationInfo = {}) {\n        const propagate = propagationInfo.propagate !== undefined ? propagationInfo.propagate : true;\n        const behaviouralActions = this._actions.behavioural;\n        const action = behaviouralActions[behaviour];\n        const behaviourEffectMap = this._behaviourEffectMap;\n        const sideEffects = getSideEffects(behaviour, behaviourEffectMap);\n        this._propagationInf = propagationInfo;\n\n        if (action) {\n            const selectionSet = action.dispatch(payload);\n            const propagationSelectionSet = this.getPropagationSelectionSet(selectionSet);\n            this._entryExitSet[behaviour] = propagationSelectionSet;\n            const shouldApplySideEffects = this.shouldApplySideEffects(propagate);\n\n            if (propagate) {\n                this.propagate(behaviour, payload, selectionSet.find(d => d.sourceSelectionSet), sideEffects);\n            }\n            if (shouldApplySideEffects) {\n                const applicableSideEffects = this.getApplicableSideEffects(sideEffects, payload, propagationInfo);\n                this.applySideEffects(applicableSideEffects, propagationSelectionSet, payload);\n            }\n        }\n\n        return this;\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet.find(d => !d.sourceSelectionSet);\n    }\n\n    shouldApplySideEffects () {\n        return true;\n    }\n\n    changeBehaviourStateOnPropagation (behaviour, value) {\n        if (value instanceof Function) {\n            this._sourceBehaviours[behaviour] = value;\n        } else {\n            this._sourceBehaviours[behaviour] = () => value;\n        }\n        return this;\n    }\n\n    changeSideEffectStateOnPropagation (sideEffect, value) {\n        if (value instanceof Function) {\n            this._sourceSideEffects[sideEffect] = value;\n        } else {\n            this._sourceSideEffects[sideEffect] = () => value;\n        }\n    }\n\n    propagate () {\n        return this;\n    }\n\n    sideEffects (...sideEffects) {\n        if (sideEffects.length) {\n            this._sideEffects = sideEffects[0];\n            return this;\n        }\n        return this._sideEffects;\n    }\n\n    enableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, true);\n        return this;\n    }\n\n    disableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, false);\n        return this;\n    }\n\n    dissociateBehaviour (behaviour, physicalAction) {\n        const actionBehaviourMap = this._actionBehaviourMap;\n        for (const key in actionBehaviourMap) {\n            if (key === physicalAction) {\n                const behaviourMap = actionBehaviourMap[key];\n                behaviourMap.behaviours = behaviourMap.behaviours.filter(d => d !== behaviour);\n                this.mapActionsAndBehaviour(key);\n            }\n        }\n\n        return this;\n    }\n\n    dissociateSideEffect (sideEffect, behaviour) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        behaviourEffectMap[behaviour] = behaviourEffectMap[behaviour].filter(d => (d.name || d) !== sideEffect);\n        return this;\n    }\n\n    getApplicableSideEffects (sideEffects) {\n        return sideEffects;\n    }\n\n    attachPropagationListener (dataModel) {\n        dataModel.unsubscribe('propagation');\n        dataModel.on('propagation', this.onDataModelPropagation());\n        return this;\n    }\n\n    onDataModelPropagation () {\n        return (propValue) => {\n            const payload = propValue.payload;\n            const action = payload.action;\n\n            this.dispatchBehaviour(action, payload, {\n                propagate: false\n            });\n        };\n    }\n\n    createSelectionSet (uniqueIds, behaviouralActions) {\n        const behaviours = behaviouralActions || this._actions.behavioural;\n        const selectionSet = this._selectionSet;\n        const volatileSelectionSet = this._volatileSelectionSet;\n\n        for (const key in behaviours) {\n            if ({}.hasOwnProperty.call(behaviours, key)) {\n                selectionSet[key] = new SelectionSet(uniqueIds);\n                volatileSelectionSet[key] = new SelectionSet(uniqueIds, true);\n            }\n        }\n        this._volatileSelectionSet = volatileSelectionSet;\n        this.selectionSet(selectionSet);\n        return this;\n    }\n\n    selectionSet (...selectionSet) {\n        if (selectionSet.length) {\n            this._selectionSet = selectionSet[0];\n            return this;\n        }\n        return this._selectionSet;\n    }\n\n    initializeSideEffects () {\n        const sideEffectDefinitions = this._sideEffectDefinitions;\n        this.sideEffects(initializeSideEffects(this, sideEffectDefinitions));\n        return this;\n    }\n\n    registerPhysicalActions (actions) {\n        const initedActions = initializePhysicalActions(this, actions);\n        Object.assign(this._actions.physical, initedActions);\n        return this;\n    }\n\n    /**\n     * Allows to propagate the datamodel with only the supplied fields. When propagation is done, then the fields\n     * which are supplied for the specified behavioural action is propagated.\n     *\n     * @public\n     *\n     * @param {string} action Name of behavioural action. If '*' is specified, then for all behavioural actions it is\n     * applied.\n     * @param {Array} fields Array of field names which will be propagated.\n     * @param {boolean} append If true, then it is appended to the existing propagation data model fields else only\n     * those fields are projected from propagation data model and propagated.\n     *\n     * @return {Firebolt} Instance of firebolt\n     */\n    propagateWith (action, fields, append = false) {\n        const behaviouralActions = this._actions.behavioural;\n        if (fields.length) {\n            if (action === ALL_ACTIONS) {\n                for (const key in behaviouralActions) {\n                    this._propagationFields[key] = {\n                        fields,\n                        append\n                    };\n                }\n            } else {\n                this._propagationFields[action] = {\n                    fields,\n                    append\n                };\n            }\n            return this;\n        }\n        return this._propagationFields;\n    }\n\n    /**\n     * Map actions and behaviours\n     * @return {Firebolt} Firebolt instance\n     */\n    mapActionsAndBehaviour (phyAction) {\n        const initedPhysicalActions = this._actions.physical;\n        const map = this._actionBehaviourMap;\n\n        for (const action in map) {\n            if (!({}).hasOwnProperty.call(action, map) && action === (phyAction || action)) {\n                let target;\n                const mapObj = map[action];\n                target = mapObj.target;\n                const touch = mapObj.touch;\n                if (!target) {\n                    target = this.context.getDefaultTargetContainer();\n                }\n                const bind = hasTouch() ? touch === true || touch === undefined : !touch;\n                bind && this.bindActionWithBehaviour(initedPhysicalActions[action],\n                    target, mapObj.behaviours);\n            }\n        }\n        return this;\n    }\n\n    registerPhysicalBehaviouralMap (map) {\n        this._actionBehaviourMap = mergeRecursive(this._actionBehaviourMap, map);\n        return this;\n    }\n\n    /**\n     * Binds a target element with an action.\n     *\n     * @param {Function} action Action method\n     * @param {string} target Class name of element\n     * @param {Array} behaviourList Array of behaviours\n     * @return {FireBolt} Instance of firebolt\n     */\n    bindActionWithBehaviour (action, targets, behaviourList) {\n        if (typeof (targets) === 'string') {\n            targets = [targets];\n        }\n        targets.forEach((target) => {\n            const mount = this.context.mount();\n            const nodes = target.node instanceof Function ? target : selectElement(mount).selectAll(target);\n            if (!nodes.empty()) {\n                if (nodes instanceof Array) {\n                    nodes.forEach((node) => {\n                        action(selectElement(node), behaviourList);\n                    });\n                } else {\n                    action(nodes, behaviourList);\n                }\n            }\n        });\n        return this;\n    }\n\n    getPropagationInf () {\n        return this._propagationInf;\n    }\n\n    getAddSetFromCriteria (criteria, propagationInf = {}) {\n        const context = this.context;\n        const filteredDataModel = propagationInf.data ? propagationInf.data :\n            context.getDataModelFromIdentifiers(criteria, 'all');\n        const xFields = context.fields().x || [];\n        const yFields = context.fields().y || [];\n        const xMeasures = xFields.every(field => field.type() === FieldType.MEASURE);\n        const yMeasures = yFields.every(field => field.type() === FieldType.MEASURE);\n        return {\n            model: filteredDataModel,\n            uids: criteria === null ? null : (propagationInf.data ? filterPropagationModel(this.getFullData(),\n                propagationInf.data[0], xMeasures && yMeasures).getData().uids : filteredDataModel[0].getData().uids)\n        };\n    }\n\n    getSelectionSets (action) {\n        const sourceId = this.context.id();\n        const propagationInf = this._propagationInf || {};\n        const propagationSource = propagationInf.sourceId;\n        let applicableSelectionSets = [];\n        if (propagationSource !== sourceId) {\n            applicableSelectionSets = [this._volatileSelectionSet[action]];\n        }\n\n        if (propagationSource) {\n            applicableSelectionSets.push(this.selectionSet()[action]);\n        }\n        return applicableSelectionSets;\n    }\n\n    getFullData () {\n        return this.context.data();\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Returns the entry and exit set information of the specified behavioural action.\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of behavioural action.\n     *\n     * @return {Object} Entry exit set information.\n     */\n    getEntryExitSet (behaviour) {\n        return this._entryExitSet[behaviour];\n    }\n}\n","import { getSetInfo, getMergedSet, getSourceFields } from '../../helper';\n\n/**\n * This is the base class has all the common functionalities needed for all behavioural actions. Any other behavioural\n * action needs to extend this class.\n *\n * @public\n * @class GenericBehaviour\n * @module GenericBehaviour\n */\nexport default class GenericBehaviour {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n    }\n\n    /**\n     * Returns entry and exit set information. This method is called by firebolt when ```dispatchBehaviour``` is called\n     * dynamically or when any physical action is triggered on the chart.\n     *\n     * @param {Object} payload Payload information.\n     * @param {Object|Array} payload.criteria Identifiers of data interacted with.\n     *\n     * @return {Array} Entry and exit set information.\n     */\n    dispatch (payload) {\n        const criteria = payload.criteria;\n        const firebolt = this.firebolt;\n        const formalName = this.constructor.formalName();\n        const selectionSets = firebolt.getSelectionSets(formalName);\n        const {\n            model: filteredDataModel,\n            uids\n        } = this.firebolt.getAddSetFromCriteria(criteria, this.firebolt.getPropagationInf());\n        const entryExitSets = selectionSets.map((selectionSet) => {\n            this.setSelectionSet(uids, selectionSet);\n            return this.getEntryExitSet(selectionSet, filteredDataModel, payload);\n        });\n\n        return entryExitSets;\n    }\n\n    /**\n     * Updates the selection set by adding uids to the instance of {@link SelectionSet} or removing them.\n     * {@link SelectionSet} keeps the information of which rows are in the entry set and exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of row ids which got affected during interaction.\n     * @param {SelectionSet} selectionSet Instance of selection set.\n     *\n     * @return {GenericBehaviour} Instance of behaviour.\n     */\n    setSelectionSet () {\n        return this;\n    }\n\n    getEntryExitSet (selectionSet, filteredDataModel, payload) {\n        const {\n            entrySet,\n            exitSet,\n            completeSet\n        } = selectionSet.getSets();\n        const propagationInf = this.firebolt.getPropagationInf();\n        const dataModel = this.firebolt.getFullData();\n        const setConfig = {\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            dataModel,\n            filteredDataModel,\n            propagationData: propagationInf.data,\n            selectionSet\n        };\n\n        return {\n            entrySet: [getSetInfo('oldEntry', entrySet[0], setConfig),\n                getSetInfo('newEntry', entrySet[1], setConfig)],\n            exitSet: [getSetInfo('oldEntry', exitSet[0], setConfig),\n                getSetInfo('newExit', exitSet[1], setConfig)],\n            mergedEnter: getSetInfo('mergedEnter', getMergedSet(entrySet), setConfig),\n            mergedExit: getSetInfo('mergedExit', getMergedSet(exitSet), setConfig),\n            completeSet: getSetInfo('complete', completeSet, setConfig),\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            fields: getSourceFields(propagationInf, payload.criteria),\n            sourceSelectionSet: selectionSet._volatile === true\n        };\n    }\n\n    static mutates () {\n        return false;\n    }\n\n    enable () {\n        this._enabled = true;\n    }\n\n    disable () {\n        this._enabled = false;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n}\n\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class VolatileBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n                // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                    || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            selectionSet.updateExit();\n            const { entrySet } = selectionSet.getSets();\n            selectionSet.reset(getMergedSet(entrySet));\n            selectionSet.add(addSet);\n            selectionSet.update(existingAddSet);\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n    }\n}\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n","import VolatileBehaviour from './volatile';\nimport { HIGHLIGHT } from '../../enums/behaviours';\n\nexport default class HighlightBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return HIGHLIGHT;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport * as BEHAVIOURNAMES from '../../enums/behaviours';\n\n/**\n * This is the behaviour for brushing a region on the chart. It accepts a payload\n * which contains the x and y range of the data and other configuration. It will then\n * create a selection box from the range and select the points which fall within the range.\n */\nexport default class BrushBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return BEHAVIOURNAMES.BRUSH;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport { FILTER } from '../../enums/behaviours';\n\nexport default class FilterBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return FILTER;\n    }\n\n    static mutates () {\n        return true;\n    }\n}\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class PersistentBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            const propagationInf = this.firebolt.getPropagationInf();\n            // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            if (propagationInf.propagate === false) {\n                selectionSet.updateExit();\n                const { entrySet } = selectionSet.getSets();\n                selectionSet.reset(getMergedSet(entrySet));\n                selectionSet.add(addSet);\n                selectionSet.update(existingAddSet);\n            } else {\n                // existing add set\n                if (existingAddSet.length) {\n                    selectionSet.updateExit();\n                    selectionSet.remove(existingAddSet);\n                } else {\n                    selectionSet.updateEntry();\n                    selectionSet.add(addSet);\n                }\n                const { exitSet } = selectionSet.getSets();\n                const mergedExitSet = getMergedSet(exitSet);\n                const completeSetCount = selectionSet.getCompleteSet().length;\n                if (mergedExitSet.length === completeSetCount) {\n                    selectionSet.reset();\n                }\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n\n        return this;\n    }\n}\n","import PersistentBehaviour from './persistent';\nimport { SELECT } from '../../enums/behaviours';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return SELECT;\n    }\n}\n\n","import { DimensionSubtype, MeasureSubtype } from 'muze-utils';\n/**\n * Gets the drag action configuration\n * @param {VisualUnit} instance instance of visual unit\n * @param {Object} config x y positions\n * @return {Object} Payload of behaviour\n*/\n/* istanbul ignore next */ const getDragActionConfig = (sourceInfo, config, fieldsConfig) => {\n    if (!(sourceInfo.axes.x || sourceInfo.axes.y)) {\n        return {\n            criteria: null\n        };\n    }\n\n    const axes = sourceInfo.axes;\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const axisFields = sourceInfo.fields;\n    const xField = axisFields.x[0].getMembers()[0];\n    const yField = axisFields.y[0].getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n    const dimensions = {};\n    const stPos = config.startPos;\n    const endPos = config.endPos;\n\n    if (stPos.x === endPos.x && stPos.y === endPos.y) {\n        return {\n            criteria: null\n        };\n    }\n\n    const dragDim = xFieldType === MeasureSubtype.CONTINUOUS ? (yFieldType === MeasureSubtype.CONTINUOUS ?\n        ['x', 'y'] : ['y']) : ['x'];\n    const criteria = {};\n    const isXDimension = xFieldType === DimensionSubtype.CATEGORICAL;\n    const isYDimension = yFieldType === DimensionSubtype.CATEGORICAL;\n    const xRange = xAxis.invertExtent(stPos.x, endPos.x);\n    const yRange = yAxis.invertExtent(stPos.y, endPos.y);\n    const selectedDomains = {\n        x: stPos.x === endPos.x ? [] : (isXDimension ? xRange : xRange.sort((a, b) => a - b)),\n        y: stPos.y === endPos.y ? [] : (isYDimension ? yRange : yRange.sort((a, b) => a - b))\n    };\n    const rangeObj = {};\n\n    if (dragDim.length === 2) {\n        rangeObj[xField] = selectedDomains.x;\n        rangeObj[yField] = selectedDomains.y;\n        if (xField === yField) {\n            const xdom = selectedDomains.x;\n            const ydom = selectedDomains.y;\n            const min = xdom[0] > ydom[0] ? ydom : xdom;\n            const max = min === ydom ? xdom : ydom;\n            if (min[1] < max[0]) {\n                rangeObj[xField] = [];\n            } else {\n                rangeObj[xField] = [max[0], min[1] < max[1] ? min[1] : max[1]];\n            }\n            dimensions.x = [stPos.x, endPos.x];\n            dimensions.y = [stPos.y, endPos.y];\n        }\n    } else {\n        criteria[dragDim[0]] = selectedDomains[dragDim[0]] || [];\n\n        if (dragDim[0] === 'x') {\n            rangeObj[xField] = criteria.x;\n            if (xFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.x = (config.snap && stPos.x !== endPos.x) ? xAxis.getNearestRange(stPos.x, endPos.x) :\n                    [stPos.x, endPos.x];\n            }\n        } else {\n            rangeObj[yField] = criteria.y;\n            if (yFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.y = (config.snap && stPos.y !== endPos.y) ? yAxis.getNearestRange(stPos.y, endPos.y) :\n                    [stPos.y, endPos.y];\n            }\n        }\n    }\n\n    return {\n        criteria: rangeObj,\n        dimensions\n    };\n};\n\nexport default getDragActionConfig;\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './drag-action-config';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const attachDragEvent = (targetEl, behaviours, firebolt, touch) => {\n    let startPos = {};\n    let endPos = {};\n    let drawingInf;\n\n    const d3Drag = getD3Drag();\n    let touchStart;\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n        drawingInf = firebolt.context.getDrawingContext();\n        touchStart = new Date().getTime();\n    }).on('drag', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        if (touch && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos\n        }, firebolt.context.data().getFieldsConfig());\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }).on('end', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        const duration = new Date().getTime() - touchStart;\n\n        if (touch && duration > 100 && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos,\n            snap: true\n        }, firebolt.context.data().getFieldsConfig());\n        payload.dragEnd = true;\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }));\n};\n\n","import { getClientPoint, getEvent } from 'muze-utils';\nimport { CONSOLIDATED, FRAGMENTED } from '../../enums/constants';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} instance instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const context = firebolt.context;\n        const tooltipConf = context.config().interaction.tooltip;\n        const mode = tooltipConf.mode;\n        const pos = getClientPoint(context.getDrawingContext().svgContainer, event);\n        const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n            getAllPoints: mode === CONSOLIDATED || mode === FRAGMENTED,\n            data: args,\n            event\n        });\n        const payload = {\n            criteria: nearestPoint ? nearestPoint.id : null,\n            showInPosition: nearestPoint.showInPosition,\n            target: nearestPoint.target,\n            position: pos,\n            mode\n        };\n\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                            criteria: null\n                        }));\n                    });\n};\n\nexport default hover;\n","export const CLASSPREFIX = 'muze';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\n\n","import { getClientPoint } from 'muze-utils';\n\nexport const generatePayloadFromEvent = function (args, event, firebolt) {\n    const context = firebolt.context;\n    const pos = getClientPoint(context.getDrawingContext().svgContainer, event.touches ? event.touches[0] : event);\n    const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n        data: args,\n        event\n    });\n    return {\n        criteria: nearestPoint ? nearestPoint.id : null,\n        showInPosition: nearestPoint.showInPosition,\n        target: nearestPoint.target,\n        position: pos\n    };\n};\n","import { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport { longtouch } from './longtouch';\nimport { touchdrag } from './touch-drag';\nimport * as ACTIONNAMES from '../../enums/actions';\nimport click from './click';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click,\n    [ACTIONNAMES.LONGTOUCH]: longtouch,\n    [ACTIONNAMES.TOUCHDRAG]: touchdrag\n};\n\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt);\n};\n\nexport default drag;\n","/* global setTimeout */\nimport { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nexport const longtouch = firebolt => (targetEl, behaviours) => {\n    let event;\n    let touchEnd;\n    const dispatchBehaviour = function (args) {\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    touchEnd = false;\n    event = getEvent();\n    targetEl.on('touchstart', (args) => {\n        event = getEvent();\n        touchEnd = false;\n        setTimeout(() => {\n            if (!touchEnd) {\n                dispatchBehaviour(args);\n            } else {\n                behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                    criteria: null\n                }));\n            }\n        }, 100);\n    }).on('touchend', () => {\n        touchEnd = true;\n    });\n};\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const touchdrag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt, true);\n};\n\n","export const PROPS = {\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import GenericSideEffect from './generic-sideeffect';\n\nexport default GenericSideEffect;\n","import { mergeRecursive, getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { PROPS } from './props';\n\n/**\n * This is the base class of all side effects. It contains all common methods like setting configuration, disabling,\n * enabling side effect, etc. Every new side effect has to inherit this class or {@link SpawnableSideEffect} or\n * {@link SurrogateSideEffect} class. All side effects are initialized by firebolt. The instance of firebolt is\n * passed on initialization. The firebolt instance contains ```context``` which is the instance of visual unit with\n * which the firebolt is attached.\n *\n * @public\n * @class\n * @module GenericSideEffect\n */\nexport default class GenericSideEffect {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n        this._strategy = 'default';\n        this._config = {};\n        this._id = getUniqueId();\n        this._strategies = {};\n        generateGetterSetters(this, PROPS);\n        this.config(this.constructor.defaultConfig());\n    }\n\n    /**\n     * Returns the default configuration of the side effect.\n     *\n     * @public\n     * @return {Object} Default configuration of side effect.\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the formal name of a side effect. This method must be implemented by all side effects which changes\n     * or adds any element in the visualization.\n     *\n     * @return {string} Formal name of side effect.\n     */\n    static formalName () {\n        return 'generic';\n    }\n\n    static target () {\n        return 'all';\n    }\n\n    /**\n     * Returns true if the side effects mutates the data of chart.\n     *\n     * @public\n     *\n     * @return {boolean} If the side effect mutates the data of chart.\n     */\n    static mutates () {\n        return false;\n    }\n\n    /**\n     * Sets or gets the configuration of side effect.\n     *\n     * When setter,\n     * @param {Object} config Configuration of side effect.\n     * @return {GenericSideEffect} Side effect instance.\n     *\n     * When getter,\n     * @return {Object} Side effect configuration.\n     */\n    config (...params) {\n        if (params.length) {\n            this._config = mergeRecursive(this._config, params[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    disable () {\n        this._enabled = false;\n        return this;\n    }\n\n    enable () {\n        this._enabled = true;\n        return this;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n\n    /**\n     * Applies the interaction effect on the chart. This is where the implemntation of the side effect is defined.\n     *\n     * @param {Object} selectionSet Contains the entry and exit set of data which got affected during interaction.\n     * @param {Object} selectionSet.mergedEnter Combined previous entry and new entry set.\n     * @param {DataModel} selectionSet.mergedEnter.model Instance of data model containing all rows which got\n     * affected during interaction.\n     * @param {Array} selectionSet.mergedEnter.uids Ids of all rows which were affected during interaction.\n     * @param {Object} selectionSet.mergedExit Combined previous exit and new exit set.\n     * @param {DataModel} selectionSet.mergedExit.model Instance of data model containing rows which were not affected\n     * during interaction.\n     * @param {Array} selectionSet.mergedExit.uids Ids of all rows which were not affected during interaction.\n     * @param {Object} selectionSet.entrySet Entry set information.\n     * @param {Array} selectionSet.entrySet[0].uids All row ids which got affected during previous interaction.\n     * @param {Array} selectionSet.entrySet[1].uids All row ids which got affected during current interaction.\n     * @param {Array} selectionSet.exitSet[0].uids All row ids which were not affected during previous interaction.\n     * @param {Array} selectionSet.exitSet[1].uids All row ids which were not affected during current interaction.\n     * @param {Object} payload Payload information of the behavioural action on trigger of which this side effect\n     * is applied.\n     * @param {Object} options Optional information for side effect like strategy, etc.\n     */\n    apply () {\n        return this;\n    }\n\n    /**\n     * Adds a new strategy method for this side effect. The strategy method is implemented by side effect class.\n     *\n     * @param {string} name Name of the strategy.\n     * @param {Function} fn Strategy method.\n     *\n     * @return {GenericSideEffect} Instance of side effect.\n     */\n    setStrategy (name, fn) {\n        if (fn) {\n            this._strategies[name] = fn;\n        }\n        return this;\n    }\n}\n","import GenericSideEffect from './generic';\n\n/**\n * This class is inherited by all side effects which changes the look of any existing elements in the visualization.\n * For example, if a side effect wants to change the color of bar plots, then it is a surrogate side effect.\n *\n * To use this,\n * ```\n *      const SurrogateSideEffect = muze.SideEffects.standards.SurrogateSideEffect;\n *\n *      class BarColorChanger extends SurrogateSideEffect {\n *          static formalName () {\n *              return 'colorChanger';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n *\n * @module SurrogateSideEffect\n * @class\n * @extends GenericSideEffect\n */\nexport default class SurrogateSideEffect extends GenericSideEffect {\n    /**\n     * Applies or removes interaction styles from plot elements. An array of row ids needs to be passed\n     * which identifies the plot elements and applies styles to them.\n     *\n     * To apply the interaction style,\n     * ```\n     *      const entryRowIds = entrySet[0].uids;\n     *      const interactionStyle = [{\n     *          type: 'fill',\n     *          intensity: [0, 0, 15, 0] // hsla configuration\n     *      }];\n     *\n     *      this.applyInteractionStyle(entryRowIds, interactionStyle, 'brighten', true);\n     * ```\n     * @public\n     * @param {Array} set Array of row ids.\n     * @param {Array} config Style configuration.\n     * @param {Object} config[0] fill or stroke configuration.\n     * @param {string} config[0].type Type of style - fill or stroke.\n     * @param {Array} config[0].intensity hsla configuration.\n     * @param {string} interactionType Type of interaction. This is needed for storing the styles for\n     * each type of interaction in the plot elements.\n     * @param {boolean} apply Whether to apply or remove the interaction style.\n     *\n     * @return {SurrogateSideEffect} Instance of surrogate side effect.\n     */\n    applyInteractionStyle (set, config = {}, interactionType, apply) {\n        const layers = this.firebolt.context.layers();\n        layers.forEach(layer => layer.config().interactive !== false &&\n            layer.applyInteractionStyle(interactionType, set.uids, apply));\n        return this;\n    }\n}\n","import { makeElement } from 'muze-utils';\n\nimport GenericSideEffect from './generic';\n\n/**\n * Any side effect which will add any new element to the chart like drawing a rectangular box or any annotation over\n * the chart needs to inherit this class. This class has methods which returns the container where the dom elements\n * needs to be created.\n *\n * To use this,\n * ```\n *      const SpawnableSideEffect = muze.SideEffects.standards.SpawnableSideEffect;\n *\n *      class SelectionBox extends SpawnableSideEffect {\n *          static formalName () {\n *              return 'selectionBox';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n * @class\n * @extends GenericSideEffect\n * @module SpawnableSideEffect\n */\nexport default class SpawnableSideEffect extends GenericSideEffect {\n    /**\n     * Creates a html or svg element in the container.\n     *\n     * @public\n     * @param {SVGElement|HTMLElement} container Container where the dom element will be rendered.\n     * @param {string} elemType Type of dom element.\n     * @param {Array} data Array of objects with which the dom elements will be binded.\n     * @param {string} className class name of the element.\n     *\n     * @return {Selection} D3 Selection of the element.\n     */\n    createElement (container, elemType, data, className, callbacks) {\n        return makeElement(container, elemType, data, className, callbacks);\n    }\n\n    /**\n     * Returns the drawing information for side effect like svg container, dimensions of the visual unit.\n     *\n     * @public\n     * @return {Object} Drawing information for side effect.\n     * ```\n     *      sideEffectGroup: // svg container where the side effect needs to be appended.\n     *      svgContainer: // svg container of the {@link VisualUnit}.\n     *      htmlContainer: // html div container of the {@link VisualUnit}.\n     *      width: // Width of the {@link VisualUnit}\n     *      height: // Height of the {@link VisualUnit}\n     * ```\n     */\n    drawingContext (...drawingContext) {\n        if (drawingContext.length) {\n            this._drawingContext = drawingContext[0];\n            return this;\n        }\n        return this._drawingContext();\n    }\n\n    show () {\n        return this;\n    }\n\n    hide () {\n        return this;\n    }\n}\n","import { selectElement } from 'muze-utils';\n\nexport const getBoxDimensionsFromPayload = (payload, axes, axisFields) => {\n    let x1;\n    let x2;\n    let y1;\n    let y2;\n    let xRange;\n    let yRange;\n    let direction;\n    const criteria = payload.criteria;\n    const dimensions = payload.dimensions || {};\n    const xDim = dimensions.x;\n    const yDim = dimensions.y;\n\n    if (criteria === null) {\n        return null;\n    }\n\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const xLinear = xAxis.constructor.type() === 'linear';\n    const yLinear = yAxis.constructor.type() === 'linear';\n    const xField = `${axisFields.x[0]}`;\n    const yField = `${axisFields.y[0]}`;\n    const xCriteria = criteria[xField];\n    const yCriteria = criteria[yField];\n\n    if (xCriteria && xCriteria[0] instanceof Array) {\n        xRange = xCriteria[0];\n        yRange = xCriteria[1];\n    } else {\n        xRange = xCriteria || [];\n        yRange = yCriteria || [];\n    }\n    direction = xCriteria && yCriteria ? 'both' : (xCriteria ? 'vertical' : 'horizontal');\n    if (xRange && xRange.length) {\n        if ((yAxis.constructor.type() === 'band' && xLinear)) {\n            x1 = x2 = undefined;\n            direction = 'horizontal';\n        } else {\n            const domain = xAxis.domain();\n            const bandScale = xAxis.constructor.type() === 'band';\n            let x1Val;\n            let x2Val;\n            if (bandScale) {\n                let x1DomainIndex = domain.indexOf(xRange[0]);\n                let x2DomainIndex = domain.indexOf(xRange[xRange.length - 1]);\n                [x1DomainIndex, x2DomainIndex] = [x1DomainIndex, x2DomainIndex].sort((a, b) => a - b);\n                x1Val = domain[x1DomainIndex];\n                x2Val = domain[x2DomainIndex];\n            } else {\n                x1Val = xRange[0];\n                x2Val = xRange[xRange.length - 1];\n            }\n            x1 = xAxis.getScaleValue(x1Val);\n            x2 = xAxis.getScaleValue(x2Val);\n            x2 += bandScale ? xAxis.getUnitWidth() : 0;\n        }\n    } else {\n        x1 = x2 = undefined;\n    }\n    if (yRange && yRange.length) {\n        if ((xAxis.constructor.type() === 'band' && yLinear)) {\n            y1 = y2 = undefined;\n            direction = 'vertical';\n        } else {\n            const domain = yAxis.domain();\n            const bandScale = yAxis.constructor.type() === 'band';\n            let y1Val;\n            let y2Val;\n            if (bandScale) {\n                let y1DomainIndex = domain.indexOf(yRange[0]);\n                let y2DomainIndex = domain.indexOf(yRange[yRange.length - 1]);\n                [y1DomainIndex, y2DomainIndex] = [y1DomainIndex, y2DomainIndex].sort(((a, b) => b - a));\n                y1Val = domain[y1DomainIndex];\n                y2Val = domain[y2DomainIndex];\n            } else {\n                y1Val = yRange[0];\n                y2Val = yRange[yRange.length - 1];\n            }\n            y1 = yAxis.getScaleValue(y1Val);\n            y2 = yAxis.getScaleValue(y2Val);\n            y2 += yAxis.constructor.type() === 'band' ? yAxis.getUnitWidth() : 0;\n        }\n    } else {\n        y1 = y2 = undefined;\n    }\n\n    if ((yLinear && xLinear) || !payload.dragEnd) {\n        if (xDim) {\n            [x1, x2] = xDim;\n        }\n        if (yDim) {\n            [y1, y2] = yDim;\n        }\n    }\n\n    return {\n        dimension: {\n            x1,\n            x2,\n            y1,\n            y2\n        },\n        direction\n    };\n};\n\nexport const changeVisibility = (context, sideEffectGroup, visible) => {\n    const config = context.config();\n    const className = config.defClassName;\n    const classPrefix = config.classPrefix;\n    selectElement(sideEffectGroup).selectAll(`.${classPrefix}-${className}`)\n                    .style('display', visible ? 'block' : 'none');\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    isValidValue\n} from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport './styles.scss';\nimport SpawnableSideEffect from '../spawnable';\nimport { selectionBoxDrag } from '../../actions/physical/selection-box-drag';\nimport { getBoxDimensionsFromPayload, changeVisibility } from './helper';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\nclass SelectionBox extends SpawnableSideEffect {\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            defClassName: 'selection-box-group',\n            className: '',\n            classPrefix: CLASSPREFIX,\n            box: {\n                defClassName: 'selection-box',\n                className: ''\n            },\n            transition: {\n                duration: 200\n            }\n        };\n    }\n\n    static formalName () {\n        return 'selectionBox';\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     * @param {Object} dimension Dimensions of the selection box.\n     * @param {number} dimension.x1 Starting x position\n     * @param {number} dimension.x2 Ending x position\n     * @param {number} dimension.y1 Starting y position\n     * @param {number} dimension.y2 Ending y position\n     * @param {Object} conf Configuration needed to draw the selection box\n     * @param {number} unitWidth Width of the visual unit.\n     * @param {number} unitHeight Height of the visual unit.\n     */\n    apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const config = this._config;\n        const boxConf = config.box;\n        const firebolt = this.firebolt;\n        const drawingInf = this.drawingContext();\n        const mountPoint = drawingInf.sideEffectGroup;\n        const unitWidth = drawingInf.width;\n        const unitHeight = drawingInf.height;\n        const classPrefix = config.classPrefix;\n        const selectionGroupClassName = config.defClassName;\n\n        if (payload.criteria === null) {\n            this.hide(drawingInf);\n            return this;\n        }\n\n        const sourceInf = firebolt.context.getSourceInfo();\n        const { dimension, direction } = getBoxDimensionsFromPayload(payload, sourceInf.axes,\n            sourceInf.fields);\n        const transition = payload.dragEnd && config.transition;\n\n        if (direction === 'both' || direction === 'vertical') {\n            x = Math.min(dimension.x1, dimension.x2);\n            width = Math.abs(dimension.x2 - dimension.x1);\n        } else {\n            x = 0;\n            width = unitWidth;\n        }\n        if (direction === 'both' || direction === 'horizontal') {\n            y = Math.min(dimension.y1, dimension.y2);\n            height = Math.abs(dimension.y2 - dimension.y1);\n        } else {\n            height = unitHeight;\n            y = 0;\n        }\n        this.show(drawingInf);\n        // Create the data array for drawing the rectangle\n        const points = [\n            {\n                x,\n                y,\n                width,\n                height\n            }\n        ];\n        // Create the container group for selection box.\n        const selectionGroup = makeElement(selectElement(mountPoint), 'g', [1],\n            `.${classPrefix}-${selectionGroupClassName}`);\n        const sideEffect = this;\n        const selection = selectionGroup.selectAll('rect').data(points);\n        const selectionBox = selection.enter().append('rect')\n                        .each(function () {\n                            selectionBoxDrag(firebolt)(selectElement(this), ['brush'], sideEffect);\n                        })\n                        .merge(selection)\n                        .each(function (attrs) {\n                            let element = selectElement(this);\n                            transition && (element = element.transition().duration(transition.duration));\n                            for (const key in attrs) {\n                                if ({}.hasOwnProperty.call(attrs, key)) {\n                                    isValidValue(attrs[key]) && element.attr(key, attrs[key]);\n                                }\n                            }\n                        });\n        // Get the qualified class name for selection box rectangle\n        const boxClassName = getQualifiedClassName(boxConf.defClassName, this._id, classPrefix);\n        selectionBox.classed(boxClassName.join(' '), true);\n        selectionBox.classed(boxConf.className, true);\n\n        return this;\n    }\n\n    hide (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, false);\n    }\n\n    show (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, true);\n    }\n}\n\nexport default SelectionBox;\n\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './helpers/drag-action-config';\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let subject;\n    let drawingInf;\n    const context = firebolt.context;\n    const onDrag = (payload) => {\n        behaviours.forEach(action => firebolt.dispatchBehaviour(action, payload));\n    };\n    const d3Drag = getD3Drag();\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        drawingInf = context.getDrawingContext();\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        subject.x += event.dx;\n        subject.y += event.dy;\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                }\n            }, context.data().getFieldsConfig());\n            onDrag(payload);\n        }\n    }).on('end', () => {\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                },\n                snap: true\n            }, context.data().getFieldsConfig());\n            payload.dragEnd = true;\n            onDrag(payload);\n        }\n    }));\n};\n","export const CLASSPREFIX = 'muze';\nexport const ARROW_RIGHT = 'right';\nexport const ARROW_TOP = 'top';\nexport const ARROW_BOTTOM = 'bottom';\nexport const ARROW_LEFT = 'left';\nexport const TOOLTIP_LEFT = 'left';\nexport const TOOLTIP_RIGHT = 'right';\nexport const TOOLTIP_BOTTOM = 'bottom';\nexport const TOOLTIP_TOP = 'top';\nexport const INITIAL_STYLE = {\n    position: 'absolute',\n    width: 0,\n    height: 0\n};\n","import { CLASSPREFIX } from './constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'tooltip-box',\n    connectorClassName: 'tooltip-connectors',\n    className: '',\n    row: {\n        margin: 0\n    },\n    content: {\n        spacing: 5,\n        iconContainerSize: 10,\n        iconScale: 1,\n        iconShape: 'circle',\n        iconColor: '#ff0000',\n        rowMargin: '0px',\n        margin: 10,\n        separator: ':',\n        className: 'tooltip-content-container',\n        parentClassName: 'tooltip-content-parent-container'\n    },\n    arrow: {\n        size: 10,\n        disabled: false,\n        defClassName: 'tooltip-arrow',\n        className: '',\n        color: 'rgba(195,195,195,0.85)'\n    }\n};\n","import { getQualifiedClassName } from 'muze-utils';\nimport { TOOLTIP_LEFT, TOOLTIP_RIGHT, ARROW_RIGHT, ARROW_LEFT, TOOLTIP_BOTTOM } from './constants';\n\nexport const getArrowPos = (orient, dim, measurement, config) => {\n    let arrowPos;\n    const { x, y, boxHeight, boxWidth } = measurement;\n    const arrowDisabled = config.arrow.disabled;\n    const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n\n    if (orient === ARROW_LEFT || orient === ARROW_RIGHT) {\n        let start = 0;\n        let diff = boxHeight / 2;\n        const plotBottom = dim.y + dim.height;\n        const boxBottom = y + boxHeight;\n\n        if (dim.y > y) {\n            start = dim.y - y;\n            diff = (plotBottom >= boxBottom ? (boxBottom - dim.y) : dim.height) / 2;\n        } else if (boxBottom > plotBottom) {\n            diff = Math.abs(y - (dim.y + dim.height)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    } else {\n        let start = 0;\n        let diff = boxWidth / 2;\n        const plotRight = dim.x + dim.width;\n        const boxRight = x + boxWidth;\n\n        if (dim.x > x) {\n            start = dim.x - x;\n            diff = (plotRight >= boxRight ? (boxRight - dim.x) : dim.width) / 2;\n        } else if (boxRight > plotRight) {\n            diff = Math.abs(x - (dim.x + dim.width)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    }\n    return arrowPos;\n};\n\n/**\n * Places the arrow in the specified arrow position. It also applies appropriate arrow\n * class name to the arrow element.\n * @param {string} position Left, bottom or right position of the arrow;\n * @param {number} arrowPos position of arrow in pixels\n * @return {Tooltip} Instance of tooltip.\n */\nexport const placeArrow = (context, position, arrowPos) => {\n    const tooltipArrow = context._tooltipArrow;\n    const tooltipBackground = context._tooltipBackground;\n    const config = context._config;\n    const classPrefix = config.classPrefix;\n    const arrowConf = config.arrow;\n    const className = getQualifiedClassName(arrowConf.defClassName, context._id, config.classPrefix);\n\n    tooltipArrow.style('display', 'block');\n    tooltipArrow.attr('class', `${className.join(' ')}`);\n    if (position === TOOLTIP_LEFT || position === TOOLTIP_RIGHT) {\n        tooltipArrow.style('top', `${arrowPos}px`);\n        tooltipArrow.style('left', '');\n        tooltipBackground.style('top', `${arrowPos}px`);\n        tooltipBackground.style('left', '');\n    } else {\n        position === TOOLTIP_BOTTOM ? tooltipArrow.style('top', '100%') : tooltipArrow.style('top',\n            `-${arrowConf.size}px`);\n        tooltipArrow.style('left', `${arrowPos}px`);\n        position === TOOLTIP_BOTTOM ? tooltipBackground.style('top', '100%') : tooltipBackground.style('top',\n            `-${arrowConf.size + 3}px`);\n        tooltipBackground.style('left', `${arrowPos}px`);\n    }\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow`, true);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${context._arrowOrientation}`, false);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${position}`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${context._arrowOrientation}`, false);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${position}`, true);\n    return this;\n};\n\nexport const reorderContainers = (parentContainer, className) => {\n    parentContainer.selectAll(className).sort((a, b) => a - b);\n};\n","import {\n    selectElement,\n    mergeRecursive,\n    makeElement,\n    setAttrs,\n    setStyles,\n    getSymbol,\n    isSimpleObject\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class is used to manage the content of tooltip.\n */\nexport default class Content {\n    /**\n     * Creates an instance of content.\n     */\n    constructor () {\n        this._model = null;\n        this._formatter = null;\n        this._config = this.constructor.defaultConfig();\n    }\n   /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        const config = defaultConfig.content;\n        config.classPrefix = defaultConfig.classPrefix;\n        return config;\n    }\n\n    config (...c) {\n        if (c.length > 0) {\n            this._config = mergeRecursive(this._config, c[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Update model. The format contains presentation strategy which determines how to show the content.\n     * If no strategy is mentioned then default is to show key value pair\n    */\n    update (item) {\n        this._model = item.model;\n        this._formatter = item.formatter;\n        return this;\n    }\n\n    context (ctx) {\n        this._context = ctx;\n        return this;\n    }\n\n    render (mount) {\n        let data;\n        const config = this._config;\n        const iconContainerSize = config.iconContainerSize;\n        const formatter = this._formatter;\n        const rowMargin = config.rowMargin;\n        const model = this._model;\n\n        this._mount = mount;\n        if (model instanceof Array) {\n            data = model;\n        } else {\n            data = formatter(this._model, this.config(), this._context);\n        }\n\n        if (data instanceof Function) {\n            mount.html(data());\n        } else {\n            let content = data;\n            let displayFormat = 'default';\n\n            if (isSimpleObject(data)) {\n                content = data.content;\n                displayFormat = data.displayFormat;\n            }\n\n            const body = makeElement(mount, 'div', [displayFormat], `${config.classPrefix}-tooltip-content`, {},\n                d => d);\n\n            if (displayFormat === 'table') {\n                const table = makeElement(body, 'table', [1], `${config.classPrefix}-tooltip-table`);\n                const tbody = makeElement(table, 'tbody', [1], `${config.classPrefix}-tooltip-table-tbody`);\n                const rows = makeElement(tbody, 'tr', content, `${config.classPrefix}-tooltip-table-row`);\n                rows.each(function (d, i) {\n                    selectElement(this).classed(`${config.classPrefix}-tooltip-table-row-${i}`, true);\n                });\n                const cells = makeElement(rows, 'td', d => d, `${config.classPrefix}-tooltip-table-cell`);\n                cells.each(function (d) {\n                    selectElement(this).html(d);\n                });\n            } else {\n                const rows = makeElement(body, 'div', content, `${config.classPrefix}-tooltip-row`);\n                const cells = makeElement(rows, 'span', d => d, `${config.classPrefix}-tooltip-content`);\n                cells.attr('class', `${config.classPrefix}-tooltip-content`);\n                setStyles(rows, {\n                    margin: rowMargin\n                });\n                setStyles(cells, {\n                    display: 'inline-block',\n                    'margin-right': `${config.spacing}px`\n                });\n\n                cells.each(function (d) {\n                    const el = selectElement(this);\n                    el.html('');\n                    if (d instanceof Object) {\n                        if (d.type === 'icon') {\n                            const svg = makeElement(el, 'svg', [1]);\n                            const path = makeElement(svg, 'path', [1]);\n                            const shape = d.shape instanceof Function ? d.shape : getSymbol(d.shape);\n\n                            setAttrs(svg, {\n                                x: 0,\n                                y: 0,\n                                width: iconContainerSize,\n                                height: iconContainerSize\n                            });\n                            setAttrs(path, {\n                                d: shape.size(d.size)(),\n                                transform: `translate(${iconContainerSize / 2}, ${iconContainerSize / 2})`\n                            });\n                            setStyles(path, {\n                                fill: d.color\n                            });\n                            setStyles(svg, {\n                                width: `${iconContainerSize}px`,\n                                height: `${iconContainerSize}px`\n                            });\n                        } else {\n                            el.html(d.value);\n                            d.className && el.classed(d.className, true);\n                            setStyles(el, d.style);\n                        }\n                    } else {\n                        el.html(d);\n                    }\n                });\n            }\n        }\n        return this;\n    }\n\n    clear () {\n        this._model = null;\n        return this;\n    }\n}\n","import {\n    mergeRecursive,\n    getQualifiedClassName,\n    getUniqueId,\n    selectElement,\n    setStyles,\n    makeElement\n} from 'muze-utils';\nimport { ARROW_BOTTOM, ARROW_LEFT, ARROW_RIGHT, TOOLTIP_LEFT, TOOLTIP_RIGHT, TOOLTIP_BOTTOM, TOOLTIP_TOP,\n    INITIAL_STYLE } from './constants';\nimport { defaultConfig } from './default-config';\nimport { getArrowPos, placeArrow, reorderContainers } from './helper';\nimport './styles.scss';\nimport Content from './content';\n\n/**\n * This component is responsible for creating a tooltip element. It appends the tooltip\n * in the body element.\n * @class Tooltip\n */\nexport default class Tooltip {\n    /**\n     * Initializes the tooltip with the container element and configuration\n     * @param {HTMLElement} container container where the tooltip will be mounted.\n     * @param {string} className Class name of the tooltip.\n     */\n    constructor (htmlContainer, svgContainer) {\n        let connectorContainer = svgContainer;\n        this._id = getUniqueId();\n        this._config = {};\n        this.config({});\n        const tooltipConf = this._config;\n        const classPrefix = tooltipConf.classPrefix;\n        const contentClass = tooltipConf.content.parentClassName;\n        const container = makeElement(htmlContainer, 'div', [1], `${classPrefix}-tooltip-container`);\n        this._container = container;\n        this._tooltipContainer = container.append('div').style('position', 'absolute');\n        this._contentContainer = this._tooltipContainer.append('div').attr('class', `${classPrefix}-${contentClass}`);\n        this._tooltipBackground = this._tooltipContainer.append('div').style('position', 'relative');\n        this._tooltipArrow = this._tooltipContainer.append('div');\n\n        if (!svgContainer) {\n            connectorContainer = htmlContainer.append('svg').style('pointer-events', 'none');\n        }\n        this._contents = {};\n        this._tooltipConnectorContainer = selectElement(connectorContainer)\n            .append('g')\n            .attr('class', `${tooltipConf.classPrefix}-${tooltipConf.connectorClassName}`);\n        const id = this._id;\n        const defClassName = tooltipConf.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, id, tooltipConf.classPrefix);\n\n        setStyles(this._tooltipArrow, INITIAL_STYLE);\n        setStyles(this._tooltipBackground, INITIAL_STYLE);\n        this.addClass(qualifiedClassName.join(' '));\n        this.addClass(tooltipConf.className);\n        this.hide();\n    }\n\n    /**\n     * Sets the configuration of tooltip.\n     * @param {Object} config Configuration of tooltip\n     * @return {Tooltip} Instance of tooltip\n     */\n    config (...config) {\n        if (config.length > 0) {\n            const defConf = mergeRecursive({}, this.constructor.defaultConfig());\n            this._config = mergeRecursive(defConf, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n    /**\n     * Sets the class name of tooltip\n     * @param {string} className tooltip class name\n     * @return {Tooltip} Instance of tooltip.\n     */\n    addClass (className) {\n        this._tooltipContainer.classed(className, true);\n        return this;\n    }\n\n    context (...ctx) {\n        if (ctx.length) {\n            this._context = ctx[0];\n            return this;\n        }\n        return this._context;\n    }\n\n    content (name, data, contentConfig = {}) {\n        const config = this.config();\n        const { classPrefix } = config;\n        const contentClass = config.content.className;\n        const formatter = config.formatter;\n        const className = contentConfig.className || `${classPrefix}-${contentClass}-${name}`;\n        const content = this._contents[name] = this._contents[name] || new Content();\n        const container = makeElement(this._contentContainer, 'div', [contentConfig.order], className);\n        container.attr('class', `${classPrefix}-${contentClass} ${className}`);\n        reorderContainers(this._contentContainer, `.${classPrefix}-${contentClass}`);\n        const contentConf = config.content;\n        contentConfig.classPrefix = this._config.classPrefix;\n        content.config(contentConf);\n\n        if (data === null) {\n            content.clear();\n            container.remove();\n            delete this._contents[name];\n        } else {\n            content.update({\n                model: data,\n                formatter: contentConfig.formatter || formatter\n            });\n            content.context(this._context);\n            content.render(container);\n        }\n\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n        }\n        return this;\n    }\n\n    getContents () {\n        return Object.values(this._contents);\n    }\n\n    /**\n     * Positions the tooltip at the given x and y position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Tooltip} Instance of tooltip.\n     */\n    position (x, y, conf = {}) {\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n            return this;\n        }\n        this.show();\n        const target = this._target;\n        const repositionArrow = conf.repositionArrow;\n\n        if (target && repositionArrow) {\n            const node = this._tooltipContainer.node();\n            const config = this._config;\n            const arrowDisabled = config.arrow.disabled;\n            const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n            const arrowOrient = this._arrowOrientation;\n            const outsidePlot = arrowOrient === ARROW_LEFT || arrowOrient === ARROW_RIGHT ?\n                (y + node.offsetHeight - arrowWidth) < target.y || y > (target.y + target.height) :\n                (x + node.offsetWidth - arrowWidth) < target.x || x > (target.x + target.width);\n\n            if (!arrowDisabled) {\n                if (outsidePlot) {\n                    let path;\n                    this._tooltipArrow.style('display', 'none');\n                    this._tooltipBackground.style('display', 'none');\n                    this._tooltipConnectorContainer.style('display', 'block');\n                    const connector = this._tooltipConnectorContainer.selectAll('path').data([1]);\n                    const enter = connector.enter().append('path');\n                    if (arrowOrient === ARROW_LEFT) {\n                        path = `M ${x} ${y + node.offsetHeight / 2} L ${target.x + target.width}`\n                            + ` ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_RIGHT) {\n                        path = `M ${x + node.offsetWidth} ${y + node.offsetHeight / 2}`\n                                + ` L ${target.x} ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_BOTTOM) {\n                        path = `M ${x + node.offsetWidth / 2} ${y + node.offsetHeight}`\n                            + ` L ${target.x + target.width / 2} ${target.y}`;\n                    }\n                    enter.merge(connector).attr('d', path).style('display', 'block');\n                } else {\n                    const arrowPos = getArrowPos(arrowOrient, target, {\n                        x,\n                        y,\n                        boxHeight: node.offsetHeight,\n                        boxWidth: node.offsetWidth\n                    }, this._config);\n\n                    placeArrow(this, this._arrowOrientation, arrowPos);\n                    this._tooltipConnectorContainer.style('display', 'none');\n                }\n            }\n        }\n\n        const offset = this._offset || {\n            x: 0,\n            y: 0\n        };\n        this._tooltipContainer.style('left', `${offset.x + x}px`).style('top',\n            `${offset.y + y}px`);\n\n        return this;\n    }\n\n    /**\n     * Positions the tooltip relative to a rectangular box. It takes care of tooltip overflowing the\n     * boundaries.\n     * @param {Object} dim Dimensions of the plot.\n     */\n    positionRelativeTo (dim, tooltipConf = {}) {\n        let obj;\n        let orientation = tooltipConf.orientation;\n        this.show();\n        if (!dim) {\n            this.hide();\n            return this;\n        }\n\n        const extent = this._extent;\n        const node = this._tooltipContainer.node();\n\n        this._tooltipContainer.style('top', '0px')\n                        .style('left', '0px');\n        const offsetWidth = node.offsetWidth + 2;\n        const offsetHeight = node.offsetHeight + 2;\n        const config = this._config;\n        const offset = this._offset;\n        const arrowDisabled = config.arrow.disabled;\n        const arrowSize = arrowDisabled ? 0 : config.arrow.size;\n        const draw = tooltipConf.draw !== undefined ? tooltipConf.draw : true;\n        const topSpace = dim.y;\n        // When there is no space in right\n        const dimX = dim.x + dim.width + offset.x;\n        const rightSpace = extent.width - dimX;\n        const leftSpace = dim.x + offset.x - extent.x;\n        const positionTop = topSpace > (offsetHeight + arrowSize);\n        const positionRight = rightSpace >= offsetWidth + arrowSize;\n        const positionLeft = leftSpace >= offsetWidth + arrowSize;\n\n        const positionHorizontal = () => {\n            let position;\n            let x = dim.x + dim.width;\n            let y = dim.y;\n\n            if (positionRight) {\n                position = TOOLTIP_LEFT;\n                x += arrowSize;\n            } else if (positionLeft) {\n                x = dim.x - offsetWidth;\n                position = TOOLTIP_RIGHT;\n                x -= arrowSize;\n            } else {\n                position = 'left';\n                x += arrowSize;\n            }\n            if (dim.height < offsetHeight) {\n                y = Math.max(0, dim.y + dim.height / 2 - offsetHeight / 2);\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        const positionVertical = () => {\n            let position;\n            let y;\n            // Position tooltip at the center of plot\n            let x = dim.x - offsetWidth / 2 + dim.width / 2;\n\n            // Overflows to the right\n            if ((extent.width - (dim.x + offset.x)) < offsetWidth) {\n                x = extent.width - offsetWidth - offset.x;\n            } else if ((x + offset.x) < extent.x) { // Overflows to the left\n                x = extent.x;\n            }\n\n            if (positionTop) {\n                y = dim.y - offsetHeight - arrowSize;\n                position = TOOLTIP_BOTTOM;\n            } else {\n                y = dim.y + dim.height + arrowSize;\n                position = TOOLTIP_TOP;\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        this._target = dim;\n        if (!orientation) {\n            if (positionTop) {\n                orientation = 'vertical';\n            } else if (positionRight || positionLeft) {\n                orientation = 'horizontal';\n            } else {\n                orientation = 'vertical';\n            }\n        }\n\n        if (orientation === 'horizontal') {\n            obj = positionHorizontal();\n        } else if (orientation === 'vertical') {\n            obj = positionVertical();\n        }\n\n        this._position = {\n            x: obj.x,\n            y: obj.y\n        };\n\n        this._arrowPos = obj.arrowPos;\n        if (!arrowDisabled) {\n            placeArrow(this, obj.position, obj.arrowPos);\n        } else {\n            this._tooltipArrow.style('display', 'none');\n            this._tooltipBackground.style('display', 'none');\n        }\n        this._arrowOrientation = obj.position;\n        draw && this.position(obj.x, obj.y);\n        return this;\n    }\n\n    /**\n     * Hides the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    hide () {\n        this._tooltipContainer.style('display', 'none');\n        this._tooltipConnectorContainer.style('display', 'none');\n        return this;\n    }\n\n    /**\n     * Shows the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    show () {\n        this._tooltipContainer.style('display', 'block');\n        return this;\n    }\n\n    extent (extent) {\n        this._extent = extent;\n        return this;\n    }\n\n    offset (offset) {\n        this._offset = offset;\n        return this;\n    }\n\n    remove () {\n        this._tooltipContainer.remove();\n        this._tooltipBackground.remove();\n        this._tooltipConnectorContainer.remove();\n        return this;\n    }\n}\n","import {\n    FieldType,\n    GROUP_BY_FUNCTIONS,\n    formatTemporal,\n    DimensionSubtype,\n    MeasureSubtype,\n    DataModel,\n    defaultValue,\n    retrieveFieldDisplayName\n} from 'muze-utils';\n\nconst { SUM, COUNT } = GROUP_BY_FUNCTIONS;\nconst { InvalidAwareTypes } = DataModel;\n\nconst formatters = (formatter, interval, valueParser) => ({\n    [DimensionSubtype.TEMPORAL]: (value) => {\n        if (value instanceof InvalidAwareTypes) {\n            return valueParser(value);\n        }\n        return formatTemporal(value, interval);\n    },\n    [MeasureSubtype.CONTINUOUS]: value => (value instanceof InvalidAwareTypes ? valueParser(value) :\n        formatter(value.toFixed(2))),\n    [DimensionSubtype.CATEGORICAL]: value => valueParser(value)\n});\n\nconst getDefaultTooltipFormatterFn = (formatter, defaultFormatter) => defaultValue(formatter, defaultFormatter);\n\nconst getTabularData = (dataObj, context, defaultFormatter) => {\n    const rows = [];\n    const { data, schema, fieldspace } = dataObj;\n    rows.push(schema.map(d => d.name));\n    const { valueParser, timeDiffs } = context;\n    data.forEach((d) => {\n        const row = [];\n        schema.forEach((fieldObj, i) => {\n            const interval = fieldObj.subtype === DimensionSubtype.TEMPORAL ? timeDiffs[fieldObj.name] : 0;\n            const numberFormat = fieldObj.type === FieldType.MEASURE && fieldspace.fields[i].numberFormat();\n            const formatterFn = getDefaultTooltipFormatterFn(formatters(numberFormat,\n                interval, valueParser)[fieldObj.subtype], defaultFormatter);\n            const value = formatterFn(d[i]);\n            row.push(value);\n        });\n        rows.push(row);\n    });\n    return rows;\n};\n\nconst getRowContent = (fieldInf, context, dataInf, config) => {\n    let value;\n    let formattedValue;\n    let measureIndex;\n\n    const {\n        valueParser,\n        axes,\n        dimensionMeasureMap,\n        timeDiffs\n    } = context;\n    const { subtype: type, name: field } = fieldInf;\n\n    const { fieldsConfig, defFormatter, data, fieldspace } = dataInf;\n    const { separator, classPrefix } = config;\n    const dataLen = data.length;\n    const values = [];\n    const index = fieldsConfig[field].index;\n    const interval = fieldsConfig[field].def.subtype === DimensionSubtype.TEMPORAL ? timeDiffs[field] : 0;\n    const formatterFn = getDefaultTooltipFormatterFn(formatters(val => val, interval, valueParser)[type],\n        defFormatter);\n\n    let uniqueVals = type === MeasureSubtype.CONTINUOUS ? data.map(d => d[index]) :\n        [...new Set(data.map(d => d[index]))];\n    uniqueVals = uniqueVals.filter(d => d !== '');\n    const colorAxis = axes.color[0];\n    const shapeAxis = axes.shape[0];\n    const sizeAxis = axes.size[0];\n    const isRetinalField = (colorAxis || shapeAxis || sizeAxis) && dataLen > 1 &&\n            type !== MeasureSubtype.CONTINUOUS;\n\n    uniqueVals.forEach((val, i) => {\n        let key;\n        let associatedMeasures = dimensionMeasureMap[field];\n\n        if (associatedMeasures instanceof Array && dataLen > 1) {\n            associatedMeasures = associatedMeasures.filter(d => d in fieldsConfig);\n            key = val;\n            let icon = {\n                value: ''\n            };\n\n            if (isRetinalField) {\n                icon = {\n                    type: 'icon',\n                    color: colorAxis.getColor(val),\n                    shape: shapeAxis.getShape(val),\n                    size: sizeAxis.getSize(val) * config.iconScale\n                };\n            }\n            if (associatedMeasures.length > 1) {\n                const formattedKey = type === DimensionSubtype.TEMPORAL ? formatterFn(key, interval) : key;\n                values.push([icon, `${formattedKey}`]);\n                associatedMeasures.forEach((measure) => {\n                    measureIndex = fieldsConfig[measure].index;\n                    value = data[i][measureIndex];\n                    const numberFormat = fieldspace.fields[measureIndex].numberFormat();\n                    const measureFormatter = getDefaultTooltipFormatterFn(\n                        formatters(numberFormat, interval, valueParser)[MeasureSubtype.CONTINUOUS]);\n                    formattedValue = measureFormatter(value);\n                    values.push([{\n                        value: `${retrieveFieldDisplayName(context.data, measure)}${separator}`,\n                        style: {\n                            'margin-left': `${config.margin}px}`\n                        },\n                        className: `${classPrefix}-tooltip-key`\n                    }, {\n                        value: `${formattedValue}`,\n                        className: `${classPrefix}-tooltip-value`\n                    }]);\n                });\n            } else {\n                measureIndex = fieldsConfig[associatedMeasures[0]].index;\n                value = data[i][measureIndex];\n                const numberFormat = fieldspace.fields[measureIndex].numberFormat();\n                const measureFormatter = getDefaultTooltipFormatterFn(\n                    formatters(numberFormat, interval, valueParser)[MeasureSubtype.CONTINUOUS]);\n                formattedValue = measureFormatter(value);\n                const formattedKey = type === DimensionSubtype.TEMPORAL ? formatterFn(key, interval) : key;\n                values.push([\n                    icon,\n                    {\n                        value: `${formattedKey}`,\n                        className: `${classPrefix}-tooltip-key`\n                    },\n                    {\n                        value: `${formattedValue}`,\n                        className: `${classPrefix}-tooltip-value`\n                    }\n                ]);\n            }\n        } else {\n            key = field;\n            value = val;\n            formattedValue = formatterFn(value);\n            values.push([{\n                value: `${retrieveFieldDisplayName(context.data, key)}${separator}`,\n                className: `${config.classPrefix}-tooltip-key`\n            }, {\n                value: `${formattedValue}`,\n                className: `${config.classPrefix}-tooltip-value`\n            }]);\n        }\n    });\n    return values;\n};\n\nexport const buildTooltipData = (dataModel, config = {}, context) => {\n    let fieldValues = [];\n    const dataObj = dataModel.getData();\n    const data = dataObj.data;\n    const schema = dataObj.schema;\n    const fieldspace = dataModel.getFieldspace();\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const detailFields = context.detailFields || [];\n    const dimensions = schema.filter(d => d.type === FieldType.DIMENSION);\n    const measures = schema.filter(d => d.type === FieldType.MEASURE);\n    const containsDetailField = schema.find(d => detailFields.indexOf(d.name) !== -1);\n    const dataLen = data.length;\n    const {\n        valueParser,\n        dimensionMeasureMap\n    } = context;\n    const defFormatter = formatters(null, null, valueParser)[DimensionSubtype.CATEGORICAL];\n\n    if (dataLen > 1 && containsDetailField) {\n        fieldValues = getTabularData({\n            data,\n            schema,\n            fieldspace\n        }, context, defFormatter);\n    } else {\n        dimensions.forEach((item) => {\n            fieldValues = [...fieldValues, ...getRowContent(item, context, {\n                fieldsConfig,\n                data,\n                defFormatter,\n                fieldspace\n            }, config)];\n        });\n\n        const allMeasures = [...new Set(...Object.values(dimensionMeasureMap))];\n        const filteredMeasures = dataLen > 1 ? measures.filter(d => allMeasures.indexOf(d.name) === -1)\n            : measures;\n\n        filteredMeasures.forEach((item) => {\n            fieldValues = [...fieldValues, ...getRowContent(item, context, {\n                fieldsConfig,\n                data,\n                defFormatter,\n                fieldspace\n            }, config)];\n        });\n    }\n\n    return fieldValues;\n};\n\nexport const strategies = {\n    selectionSummary: (dm, config, context) => {\n        const { selectionSet } = context;\n        const aggFns = selectionSet.mergedEnter.aggFns;\n        const dataObj = dm.getData();\n        const measures = dataObj.schema.filter(d => d.type === FieldType.MEASURE);\n        const aggregatedModel = dm.groupBy([''], measures.reduce((acc, v) => {\n            acc[v.name] = aggFns[v.name] === COUNT ? SUM : aggFns[v.name];\n            return acc;\n        }, {\n            saveChild: false\n        }));\n        const fieldsConf = aggregatedModel.getFieldsConfig();\n        let values = [[{\n            value: `${dataObj.data.length}`,\n            style: {\n                'font-weight': 'bold'\n            }\n        }, 'Items Selected']];\n        const measureNames = measures.map(d => d.name);\n        measureNames.forEach((measure) => {\n            values.push([`(${aggFns[measure].toUpperCase()})`, `${retrieveFieldDisplayName(dm, measure)}`,\n                {\n                    value: `${aggregatedModel.getData().data[0][fieldsConf[measure].index].toFixed(2)}`,\n                    style: {\n                        'font-weight': 'bold'\n                    }\n                }]);\n        });\n        if (measureNames.length === 1) {\n            values = [[...values[0], ...values[1]]];\n        }\n        return values;\n    },\n    highlightSummary: (data, config, context) => {\n        const values = buildTooltipData(data, config, context);\n        return values;\n    }\n};\n","import { Tooltip as TooltipRenderer } from '@chartshq/muze-tooltip';\nimport { FieldType, mergeRecursive, defaultValue } from 'muze-utils';\nimport { spaceOutBoxes } from '../helper';\nimport { strategies } from './strategies';\nimport { FRAGMENTED } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nconst configResolvers = {\n    highlightSummary: (specificConf, config) => defaultValue(specificConf, config),\n    default: specificConf => defaultValue(specificConf, {})\n};\n\nconst sanitizeConfig = (config, context) => {\n    const strategyObj = context._strategies;\n    const sanitizedConf = Object.assign({}, config);\n    for (const key in strategyObj) {\n        sanitizedConf[key] = defaultValue(configResolvers[key], configResolvers.default)(config[key], config);\n    }\n    return sanitizedConf;\n};\n\nexport default class Tooltip extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._tooltips = {};\n        this._strategies = strategies;\n        this._strategy = 'highlightSummary';\n    }\n\n    static defaultConfig () {\n        return {\n            padding: 5,\n            offset: {\n                x: 0,\n                y: 0\n            },\n            highlightSummary: {\n                dataTransform: (dt, fields) => (fields ? dt.project(fields, { saveChild: false }) : dt\n                )\n            },\n            selectionSummary: {\n                dataTransform: (dt, fields) => {\n                    const fieldspace = dt.getFieldspace();\n                    const dimensions = Object.keys(fieldspace.getDimension());\n                    const measures = Object.keys(fieldspace.getMeasure());\n                    const projectedFields = defaultValue(fields, measures.length ? [measures[0]] : []);\n                    return dt.project([...dimensions, ...projectedFields], {\n                        saveChild: false\n                    });\n                }\n            }\n        };\n    }\n\n    static formalName () {\n        return 'tooltip';\n    }\n\n    config (...params) {\n        if (params.length) {\n            const config = this._config = mergeRecursive(this._config, sanitizeConfig(params[0], this));\n            const strategyObj = this._strategies;\n            for (const key in strategyObj) {\n                const formatter = config[key].formatter;\n                this.setStrategy(key, formatter);\n            }\n            return this;\n        }\n        return this._config;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        let totalHeight = 0;\n        let totalWidth = 0;\n        const dataModel = selectionSet.mergedEnter.model;\n        const context = this.firebolt.context;\n        const drawingInf = this.drawingContext();\n        if ((dataModel.isEmpty() || payload.criteria === null) || selectionSet.isSourceFieldPresent === false) {\n            this.hide(options, null);\n            return this;\n        }\n\n        const tooltips = this._tooltips;\n        const config = this.config();\n        const boundBox = {\n            width: drawingInf.width,\n            height: drawingInf.height\n        };\n        const showInPosition = payload.showInPosition;\n        const pad = config.padding;\n        const dataModels = [];\n        const fragmented = config.mode === FRAGMENTED;\n        const sourceInf = context.getSourceInfo();\n        const fields = sourceInf.fields;\n        const xFieldDim = fields.x[0] ? fields.x[0].type() === FieldType.DIMENSION : false;\n        const showVertically = !!xFieldDim;\n        const tooltipPos = payload.position;\n        const boxes = [];\n        const enter = {};\n        const uids = dataModel.getData().uids;\n        if (fragmented) {\n            dataModels.push(...uids.map(d => dataModel.select((fieldsArr, i) => i === d, {\n                saveChild: false\n            })));\n        } else {\n            dataModels.push(dataModel);\n        }\n\n        let target = payload.target;\n        let targetFields = [];\n        if (target) {\n            targetFields = target[0] || [];\n            const sourceFields = payload.sourceFields;\n            const indices = [];\n            for (let i = 0, len = targetFields.length; i < len; i++) {\n                if (sourceFields.indexOf(targetFields[i]) !== -1) {\n                    indices.push(i);\n                }\n            }\n            target = target.map(d => d.filter((v, i) => indices.indexOf(i) !== -1));\n        }\n\n        const plotDimensions = context.getPlotPointsFromIdentifiers(target || payload.criteria, {\n            getBBox: true\n        });\n\n        const strategy = defaultValue(options.strategy, this._strategy);\n        const strategyConf = config[strategy];\n        const { dataTransform, fields: projectFields } = strategyConf;\n        // Show tooltip for each datamodel\n        for (let i = 0; i < dataModels.length; i++) {\n            let plotDim = plotDimensions[i];\n            if (fragmented) {\n                const dimensions = dataModels[i].getData().schema.filter(d => d.type === FieldType.DIMENSION)\n                    .map(d => d.name);\n                plotDim = context.getPlotPointsFromIdentifiers(dataModels[i].project(dimensions), { getBBox: true });\n                plotDim = plotDim && plotDim[0];\n            }\n\n            const dt = dataTransform(dataModels[i], projectFields, this);\n\n            enter[i] = true;\n            const { parentContainer: layoutContainer, parentContainerDimensions } = drawingInf;\n            const layoutBoundBox = layoutContainer.getBoundingClientRect();\n            const unitBoundBox = drawingInf.htmlContainer.getBoundingClientRect();\n\n            const offsetLeft = unitBoundBox.left - layoutBoundBox.left;\n            const offsetTop = unitBoundBox.top - layoutBoundBox.top;\n            const tooltipInst = tooltips[i] = tooltips[i] || new TooltipRenderer(layoutContainer,\n                    drawingInf.svgContainer);\n\n            sourceInf.payload = payload;\n            sourceInf.firebolt = this.firebolt;\n            sourceInf.detailFields = context.detailFields();\n            sourceInf.timeDiffs = context.timeDiffsByField();\n            sourceInf.valueParser = context.valueParser();\n            sourceInf.selectionSet = selectionSet;\n            tooltipInst.context(sourceInf);\n            const strategyFn = strategies[strategy];\n            tooltipInst.content(strategy, dt, {\n                formatter: strategyFn,\n                order: options.order\n            })\n                            .config(this.config())\n                            .extent({\n                                x: 0,\n                                y: 0,\n                                width: parentContainerDimensions.width,\n                                height: parentContainerDimensions.height\n                            })\n                            .offset({\n                                x: offsetLeft + (config.offset.x || 0),\n                                y: offsetTop + (config.offset.y || 0)\n                            });\n\n            if (showInPosition) {\n                tooltipInst.position(tooltipPos.x + pad, tooltipPos.y + pad);\n            } else if (plotDim) {\n                tooltipInst.positionRelativeTo({\n                    x: plotDim.x,\n                    y: plotDim.y,\n                    width: plotDim.width || 0,\n                    height: plotDim.height || 0\n                }, {\n                    orientation: fragmented ?\n                        (showVertically ? 'horizontal' : 'vertical') : undefined\n                });\n            } else {\n                tooltipInst.hide();\n                break;\n            }\n\n            if (fragmented) {\n                const position = tooltipInst._position;\n                const tooltipBoundBox = tooltipInst._tooltipContainer.node().getBoundingClientRect();\n\n                totalHeight += tooltipBoundBox.height + pad;\n                totalWidth += tooltipBoundBox.width + pad;\n                if (showVertically ? totalHeight > drawingInf.height : totalWidth > drawingInf.width) {\n                    break;\n                }\n                boxes.push({\n                    x: position.x,\n                    y: position.y,\n                    width: tooltipBoundBox.width,\n                    height: tooltipBoundBox.height,\n                    tooltip: tooltipInst\n                });\n            }\n        }\n\n        for (const key in tooltips) {\n            if (!enter[key]) {\n                const tooltip = tooltips[key];\n                tooltip.content(payload.action, null);\n                if (!tooltip.getContents().length) {\n                    tooltip.remove();\n                    delete tooltips[key];\n                }\n            }\n        }\n        if (fragmented) {\n            spaceOutBoxes(boxes, boundBox, showVertically);\n            boxes.forEach(box => box.tooltip.position(box.x, box.y, {\n                repositionArrow: true\n            }));\n        }\n        return this;\n    }\n\n    hide (options) {\n        const tooltips = this._tooltips;\n        for (const key in tooltips) {\n            if ({}.hasOwnProperty.call(tooltips, key)) {\n                const strategy = options.strategy || this._strategy;\n                tooltips[key].content(strategy, null);\n                tooltips[key].hide();\n            }\n        }\n    }\n}\n","export const spaceOutBoxes = (boxes, extent, showVertically) => {\n    let y;\n    let height;\n    let x;\n    let width;\n    let i;\n    const pad = 5;\n    const len = boxes.length;\n    const spaceOutIfOverlap = (firstBox, secondBox, opposite) => {\n        x = firstBox.x;\n        width = firstBox.width;\n        y = firstBox.y;\n        height = firstBox.height;\n        const bottom = y + height;\n        const right = x + width;\n\n        if (showVertically) {\n            if (opposite ? y < (secondBox.y + secondBox.height) : bottom > secondBox.y) {\n                secondBox.y = opposite ? firstBox.y - secondBox.height - pad :\n                        bottom + pad;\n            }\n        } else if (opposite ? x < (secondBox.x + secondBox.width) : right > secondBox.x) {\n            secondBox.x = opposite ? firstBox.x - secondBox.width - pad :\n                    right + pad;\n        }\n    };\n\n    boxes.sort((a, b) => (showVertically ? a.y - b.y : a.x - b.x));\n    i = 0;\n\n    for (i = 0; i < len - 1; i++) {\n        spaceOutIfOverlap(boxes[i], boxes[i + 1]);\n    }\n\n    if ((boxes[i].y + boxes[i].height) > extent.height ||\n            (boxes[i].x + boxes[i].width) > extent.width) {\n        if (showVertically) {\n            boxes[i].y -= (boxes[i].height + boxes[i].y) - extent.height;\n        } else {\n            boxes[i].x -= (boxes[i].width + boxes[i].x) - extent.width;\n        }\n        for (i = len - 1; i > 0; i--) {\n            spaceOutIfOverlap(boxes[i], boxes[i - 1], true);\n        }\n    }\n    return boxes;\n}\n;\n","import { selectElement, FieldType } from 'muze-utils';\n\nimport './styles.scss';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nexport default class Crossline extends SpawnableSideEffect {\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-crossline-group`,\n            bandClass: `${CLASSPREFIX}-crossband`,\n            lineClass: `${CLASSPREFIX}-crossline`\n        };\n    }\n\n    static formalName () {\n        return 'crossline';\n    }\n\n    apply (selectionSet, payload) {\n        let height;\n        let bandWidth;\n        let px;\n        let width;\n        const {\n            className,\n            bandClass,\n            lineClass\n        } = this.config();\n        const dataModel = selectionSet.mergedEnter.model;\n        const drawingInf = this.drawingContext();\n        if (payload.criteria && dataModel && dataModel.isEmpty()) {\n            return this;\n        }\n        if (payload.criteria === null || !dataModel) {\n            this.hide();\n            return this;\n        }\n\n        const dataObj = dataModel.getData();\n        const sourceInf = this.firebolt.context.getSourceInfo();\n        const axes = sourceInf.axes;\n        const axisFields = sourceInf.fields;\n        const fields = selectionSet.fields;\n        const data = dataObj.data;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const svgContainer = drawingInf.sideEffectGroup;\n\n        const elemData = [];\n        fields.forEach((field) => {\n            const fieldIndex = fieldsConfig[field] && fieldsConfig[field].index;\n            const dataArr = data.map(d => d[fieldIndex]);\n            const axisIndex = [['x', 0], ['x', 1], ['y', 0], ['y', 1]].find((arr) => {\n                const fieldInst = axisFields[arr[0]][arr[1]];\n                return fieldInst && fieldInst.type() === FieldType.DIMENSION &&\n                    fieldInst.getMembers().indexOf(field) !== -1;\n            });\n            if (axisIndex !== undefined && data.length) {\n                const type = axisIndex[0];\n                const axis = axes[type][axisIndex[1]];\n                const value = dataArr[0];\n                bandWidth = axis.getUnitWidth() || 0;\n                px = axis.getScaleValue(value) + bandWidth / 2 + drawingInf.xOffset;\n                const layers = this.firebolt.context.layers();\n                const plotWidth = Math.max(...layers.map(layer => layer.getPlotSpan()[type]));\n                const pad = Math.max(...layers.map(layer => layer.getPlotPadding()[type]));\n                height = drawingInf.height;\n                width = drawingInf.width;\n                const startPx = px - plotWidth / 2 - pad / 2;\n                const endPx = px + plotWidth / 2 + pad / 2;\n                const dataPoint = {};\n                if (type === 'y') {\n                    dataPoint.d = `M 0 ${startPx} L 0 ${endPx} L ${width} ${endPx} L ${width} ${startPx} Z`;\n                } else {\n                    dataPoint.d = `M ${startPx} 0 L ${endPx} 0 L ${endPx} ${height} L ${startPx} ${height} Z`;\n                }\n                dataPoint.className = plotWidth ? bandClass : lineClass;\n                !isNaN(px) && elemData.push(dataPoint);\n            }\n        });\n        if (elemData.length) {\n            const parentGroup = this.createElement(svgContainer, 'g', [1], className);\n            const elem = this.createElement(parentGroup, 'path', elemData);\n            elem.attr('d', d => d.d).style('pointer-events', 'none')\n                            .attr('class', d => d.className);\n        }\n        return this;\n    }\n\n    hide () {\n        const className = this.config().className;\n        const drawingInf = this.drawingContext();\n        selectElement(drawingInf.sideEffectGroup).selectAll(`.${className}`).remove();\n    }\n}\n","const fadeFn = (set, context, strategy) => {\n    const {\n        mergedEnter,\n        mergedExit,\n        exitSet,\n        completeSet\n    } = set;\n\n    if (!mergedEnter.length && !mergedExit.length) {\n        context.applyInteractionStyle(completeSet, {}, strategy, false);\n    } else {\n        context.applyInteractionStyle(exitSet[1], {}, strategy, true);\n        context.applyInteractionStyle(mergedEnter, {}, strategy, false);\n    }\n};\n\nexport const strategies = {\n    fade: fadeFn,\n    focus: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'focus', false);\n        } else {\n            context.applyInteractionStyle(mergedExit, {}, 'focus', true);\n            context.applyInteractionStyle(mergedEnter, {}, 'focus', false);\n        }\n    },\n    highlight: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            entrySet,\n            exitSet,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'highlight', false);\n        } else {\n            context.applyInteractionStyle(entrySet[1], {}, 'highlight', true);\n            context.applyInteractionStyle(exitSet[1], {}, 'highlight', false);\n        }\n    }\n};\n","import SurrogateSideEffect from '../surrogate';\nimport { strategies } from './strategy';\n\nexport default class PlotHighlighter extends SurrogateSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategy = 'highlight';\n        this._strategies = strategies;\n    }\n\n    static formalName () {\n        return 'highlighter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        if (selectionSet.isSourceFieldPresent !== false) {\n            strategy(selectionSet, this, options.strategy || this._strategy);\n        }\n\n        return this;\n    }\n}\n","import SurrogateSideEffect from '../surrogate';\n\nexport default class FilterEffect extends SurrogateSideEffect {\n    static formalName () {\n        return 'filter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static mutates () {\n        return true;\n    }\n\n    apply (selectionSet, payload) {\n        const context = this.firebolt.context;\n        const entryModel = selectionSet.mergedEnter.model;\n        if (payload.criteria === null) {\n            context.clearCaching().resetData();\n        } else {\n            context.enableCaching().data(entryModel);\n        }\n        return this;\n    }\n}\n","import { DataModel, STATE_NAMESPACES, getObjProp } from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nconst addLayer = (layerDefs, layerRegistry, context, sideEffect) => {\n    const layers = [];\n    if (layerDefs) {\n        layerDefs.forEach((layerDef) => {\n            const mark = layerDef.mark;\n            const layerCls = layerRegistry[mark];\n            if (layerCls && layerCls.shouldDrawAnchors()) {\n                const depLayerEncoding = layerDef.def.encoding;\n                const encoding = {\n                    x: getObjProp(depLayerEncoding, 'x', 'field'),\n                    y: getObjProp(depLayerEncoding, 'y', 'field'),\n                    color: getObjProp(depLayerEncoding, 'color', 'field'),\n                    size: {\n                        field: getObjProp(depLayerEncoding, 'size', 'field'),\n                        value: sideEffect.defaultSizeValue()\n                    }\n                };\n                const name = `${layerDef.def.name}-${sideEffect.constructor.formalName()}`;\n                const layerObj = {\n                    instances: context.addLayer({\n                        name,\n                        mark: 'point',\n                        className: sideEffect.constructor.defaultConfig().className,\n                        encoding,\n                        transform: {\n                            type: 'identity'\n                        },\n                        transition: sideEffect.getTransitionConfig(),\n                        calculateDomain: false,\n                        source: dm => dm.select(() => false, {\n                            saveChild: false\n                        }),\n                        interactive: false,\n                        render: false\n                    }),\n                    linkedLayer: layerDef.def.name\n                };\n                layers.push(layerObj);\n            }\n        });\n    }\n    return layers;\n};\n\nexport default class AnchorEffect extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._layersMap = {};\n        this.addAnchorLayers();\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-anchors-group`\n        };\n    }\n\n    static formalName () {\n        return 'anchors';\n    }\n\n    addAnchorLayers () {\n        const context = this.firebolt.context;\n        const metaInf = context.metaInf();\n        const layerRegistry = context.registry().layerRegistry;\n        const layerDefsVal = context.layerDef();\n        context.store().registerImmediateListener(\n            `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}.layerDef`, ([, layerDefs]) => {\n                this._layers = addLayer(layerDefs, layerRegistry, context, this);\n            });\n        this._layers = addLayer(layerDefsVal, layerRegistry, context, this);\n        return this;\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n\n    /**\n     * Returns the default area value of the anchor point.\n     * @return { number } Default area value of anchor.\n     */\n    defaultSizeValue () {\n        return 100;\n    }\n\n    apply (selectionSet) {\n        const self = this;\n        const dataModel = selectionSet.mergedEnter.model;\n        if (selectionSet.isSourceFieldPresent !== false) {\n            const drawingInf = this.drawingContext();\n            const sideEffectGroup = drawingInf.sideEffectGroup;\n            const className = `${this.config().className}`;\n            const layers = this._layers;\n            const parentGroup = this.createElement(sideEffectGroup, 'g', [1], `${className}-container`);\n            const anchorGroups = this.createElement(parentGroup, 'g', Object.values(layers));\n            anchorGroups.each(function (layer) {\n                const instances = layer.instances;\n                const elems = self.createElement(this, 'g', instances, className);\n                const linkedLayer = self.firebolt.context.getLayerByName(layer.linkedLayer);\n                const [transformedData, schema] = linkedLayer.getTransformedDataFromIdentifiers(dataModel);\n                const transformedDataModel = new DataModel(transformedData, schema);\n                elems.each(function (d, i) {\n                    instances[i].data(transformedDataModel).mount(this);\n                });\n            });\n        }\n        return this;\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class PersistentAnchors extends AnchorEffect {\n    static formalName () {\n        return 'persistent-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-persistent-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class BrushAnchors extends AnchorEffect {\n    static formalName () {\n        return 'brush-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-brush-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import * as BEHAVIOURS from './enums/behaviours';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: ['selectionBox', {\n        name: 'highlighter',\n        options: {\n            strategy: 'fade'\n        }\n    }, 'brush-anchors'],\n    [`${BEHAVIOURS.BRUSH},${BEHAVIOURS.SELECT}`]: [{\n        name: 'tooltip',\n        options: {\n            strategy: 'selectionSummary',\n            order: 0,\n            filter: context => context.config().mode === 'fragmented'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'highlight'\n        }\n    }, 'crossline', {\n        name: 'tooltip',\n        options: {\n            order: 9999\n        }\n    }, 'anchors'],\n    [BEHAVIOURS.FILTER]: ['filter'],\n    [BEHAVIOURS.SELECT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'focus'\n        }\n    }, 'persistent-anchors']\n};\n","export const CLASSPREFIX = 'muze';\nexport const STACK = 'stack';\nexport const GROUP = 'group';\nexport const IDENTITY = 'identity';\nexport const ANGLE = 'angle';\nexport const RADIUS = 'radius';\nexport const SIZE = 'size';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const TEXT = 'text';\nexport const OUTER_RADIUS_VALUE = 'outerRadiusValue';\nexport const TEXT_ANCHOR_MIDDLE = 'middle';\nexport const ENCODING = {\n    X: 'x',\n    Y: 'y',\n    X0: 'x0',\n    Y0: 'y0',\n    RADIUS: 'radius',\n    RADIUS0: 'radius0',\n    ANGLE: 'angle',\n    ANGLE0: 'angle0'\n};\n\nexport const ASCENDING = 'asc';\n\nexport const AGG_FN_SUM = 'sum';\n\nexport const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { CLASSPREFIX, STACK } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-area',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: STACK\n    },\n    interaction: {\n\n    },\n    nearestPointThreshold: 10,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        y0: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * This is an interface class which any new layer class has to extend.\n *\n * @example\n * class BarLayer extends BaseLayer {\n *   update (params) {\n *       // super.update(params);\n *       // Update the bar layer\n *   }\n * }\n * @class\n */\nexport default class SimpleLayer {\n\n    formalName () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets or gets the dependencies.\n     * @param {Object} dependencies Dependencies needed by layer\n     * @return {BaseLayer} Instance of base layer.\n     */\n    dependencies () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the config of the layer\n     *\n     * @param {Object} config Configuration of layer\n     * @return {Object} configuration of layer\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Acts as a getter or setter function\n     * When setter\n     * Returns the datamodel of the layer\n     * @param { DataModel } dataModel instance of DataModel\n     * @return { DataModel } DataModel instance of the layer\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized schema of the layer\n     * @return {Object} Serialized schema\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the unique identifier of this layer\n     * @return {string} id of the layer\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n    /*\n     * This method resolves the x, y, x0 and y0 values from the transformed data.\n     * It also checks the type of transformed data for example, if it is a stacked data\n     * then it fetches the y and y0 values from the stacked data.\n     * @param {Array.<Array>} transformedData transformed data\n     * @param {Object} fieldMap field definitions\n     * @param {string} transformType type of transformed data - stack, group or identity.\n     * @return {Array.<Object>} Normalized data\n     * @private\n     */\n    normalizeTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of dataModel\n     * @param {Object} config configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     * @private\n     */\n    getTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a nominal field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @return {Array} Domain values array.\n     */\n    _calculateDomainFromData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, color, etc.\n     * @return {Object} Axis domains\n     */\n    getDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for getting nearest point\n     * @return {BaseLayer} Instance of base layer\n     */\n    getNearestPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for highlighting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    highlightPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for deselecting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    dehighlightPoint () {\n        return this;\n    }\n\n    linkLayerStore () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets the container element for the layer to be renderered.\n     * @param {SVGElement} mountPoint SVG element or group element.\n     */\n    mount () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n","import { COORD_TYPES } from 'muze-utils';\n\nconst { CARTESIAN } = COORD_TYPES;\nexport const props = {\n    axes: {},\n    mount: {},\n    measurement: {},\n    metaInf: {},\n    data: {},\n    config: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    coord: {\n        defaultValue: CARTESIAN\n    }\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { Symbols } from 'muze-utils';\nimport * as AxisOrientation from '../enums/axis-orientation';\n\n/**\n * @module Axis\n * This file exports constants that are used to reference axis orientations\n * in a consistent manner.\n */\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\n\n/**\n  * This object is used to associate the axis orientation with the d3 class\n  * used to represent that axis.\n  */\nexport const axisOrientationMap = {\n    [AxisOrientation.LEFT]: Symbols.axisLeft,\n    [AxisOrientation.BOTTOM]: Symbols.axisBottom,\n    [AxisOrientation.RIGHT]: Symbols.axisRight,\n    [AxisOrientation.TOP]: Symbols.axisTop\n};\n","/**\n * @module axis\n * This file exports constants used to reference scale type\n * consistently throughout the project.\n */\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const TIME = 'temporal';\nexport const COLOR = 'color';\nexport const ORDINAL = 'ordinal';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\nexport const LOG = 'log';\nexport const POW = 'pow';\nexport const IDENTITY = 'identity';\nexport const SEQUENTIAL = 'sequential';\nexport const THRESHOLD = 'threshold';\n","export const CLASSPREFIX = 'muze';\n\nexport const CONTINOUS = 'continous';\nexport const DISCRETE = 'discrete';\nexport const SEQUENTIAL = 'sequential';\nexport const ORDINAL = 'ordinal';\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const THRESHOLD = 'threshold';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\n\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\n\nexport const DOMAIN = 'domain';\nexport const HIDDEN = 'hidden';\nexport const NUMBER = 'number';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\n\nexport const RGB = 'rgb';\nexport const HEX = 'hex';\nexport const HSLA = 'hsla';\nexport const HSL = 'hsl';\n\nexport const DEFAULT_ANGLE_DOMAIN = [1];\nexport const MIN_NO_OF_TICKS = 2;\nexport const DEFAULT_NO_OF_TICKS = 10;\n\n","import { scales, colorSchemes } from 'muze-utils';\n\nimport {\n    SEQUENTIAL,\n    ORDINAL,\n    LINEAR,\n    CONTINOUS,\n    THRESHOLD,\n    QUANTIZE\n} from './enums/constants';\n\nimport * as ScaleType from './enums/scale-type';\n\nconst {\n    scaleLinear,\n    scaleThreshold,\n    scaleLog,\n    scalePow,\n    scaleIdentity,\n    scaleOrdinal,\n    scaleSequential,\n    scaleQuantize,\n    scaleQuantile,\n    schemeCategory10,\n    schemeCategory20,\n    schemeCategory20b,\n    scaleBand,\n    scaleTime\n} = scales;\nexport const scaleMap = {\n    [ScaleType.LINEAR]: scaleLinear,\n    [ScaleType.BAND]: scaleBand,\n    [ScaleType.QUANTIZE]: scaleQuantize,\n    [ScaleType.QUANTILE]: scaleQuantile,\n    [ScaleType.THRESHOLD]: scaleThreshold,\n    [ScaleType.SEQUENTIAL]: scaleSequential,\n    [ScaleType.LOG]: scaleLog,\n    [ScaleType.POW]: scalePow,\n    [ScaleType.IDENTITY]: scaleIdentity,\n    [ScaleType.TIME]: scaleTime,\n    [ScaleType.COLOR]: scaleLinear,\n    [ScaleType.ORDINAL]: scaleOrdinal\n};\nexport const SCHEMES = {\n    SCHEME1: schemeCategory10,\n    SCHEME2: schemeCategory20,\n    SCHEME3: schemeCategory20b\n};\n\n/**\n * Accepts a scheme in a string format and returns the scale from d3-scale-chromatic\n *\n * @export\n * @param {string} scheme a string representing the kind of scheme for the color axis\n * @return {Object} The corresponding scale from a scheme type from d3 chromatic scale\n */\nexport function getScheme (scheme) {\n    if (scheme[0] === 'i') {\n        return scaleSequential(colorSchemes[scheme]);\n    }\n    return scaleOrdinal(colorSchemes[scheme]);\n}\n\n/**\n *\n *\n * @export\n * @param {*} scheme\n *\n */\nexport function getSchemeType (scheme) {\n    let schemeType = '';\n    if (scheme && typeof (scheme) === 'string') {\n        schemeType = scheme[0] === 'i' ? SEQUENTIAL : ORDINAL;\n    } else {\n        schemeType = ORDINAL;\n    }\n    return schemeType;\n}\n\n/**\n * This function is used to create a scale that is assigned to\n * an instance of axis.\n *\n * @export\n * @param {Object} params the input parameters to create a Scale object\n * @param {string} params.type the type of scale\n * @param {Array} params.range the range of scale\n * @return {Object} instance of scale\n */\nexport function createScale (params) {\n    if (!params.type || !scaleMap[params.type]) {\n        throw new Error(`${params.type} is not a valid scale type`);\n    }\n    if (!Array.isArray(params.range)) {\n        throw new Error('range parameter must be an array');\n    }\n    let scaleFactory = null;\n    const range = params.range;\n    // @todo: do it using scale decorator\n    if (params.type === LINEAR && params.interpolator) {\n        scaleFactory = scaleMap[params.interpolator];\n        if (params.interpolator === ScaleType.POW) {\n            return scaleFactory().range(range).exponent(params.exponent);\n        } else if (params.interpolator === ScaleType.LOG) {\n            return scaleFactory().range(range).base([params.base]);\n        }\n    } else {\n        scaleFactory = scaleMap[params.type];\n    }\n\n    if (params.type === QUANTIZE) {\n        scaleFactory().nice();\n    }\n    return scaleFactory().range(range);\n}\n\n/**\n * This method is used to update the range of a scale\n * so that the core module can remain agnostic of the d3\n * scale api.\n *\n * @export\n * @param {Scale} scale Instance of d3 Scale.\n * @param {Array} range new range of the scale.\n * @return {Scale} Updated scale.\n */\nexport function updateScaleRange (scale, range) {\n    return scale.range(range);\n}\n\n/**\n *\n *\n * @export\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} steps\n *\n */\nexport function getScaleType (domainType, rangeType, steps) {\n    if (rangeType === CONTINOUS) {\n        return LINEAR;\n    }\n    if (domainType === CONTINOUS) {\n        if (steps instanceof Array) {\n            return THRESHOLD;\n        }\n        return QUANTIZE;\n    }\n    return ORDINAL;\n}\n","import { getUniqueId } from 'muze-utils';\nimport { CLASSPREFIX } from '../enums/constants';\n\n/**\n *\n *\n */\nexport const defaultConfig = {\n    id: getUniqueId(),\n    adjustRange: false,\n    axisName: {\n        defClassName: 'axis-name'\n    },\n    axisNamePadding: 12,\n    base: 10,\n    classPrefix: CLASSPREFIX,\n    className: `${CLASSPREFIX}-axis`,\n    exponent: 1,\n    interpolator: 'linear',\n    fixedBaseline: true,\n    labels: {\n        rotation: null,\n        smartTicks: null\n    },\n    orientation: 'left',\n    numberFormat: val => val,\n    padding: 0.3,\n    nice: true,\n    numberOfTicks: null,\n    rotate: false,\n    show: true,\n    showAxisName: true,\n    showInnerTicks: true,\n    showOuterTicks: true,\n    style: {},\n    type: 'linear',\n    tickFormat: null,\n    tickValues: null,\n    xOffset: 0,\n    yOffset: 0\n};\n\n","/**\n * This file exports functionality that is used to render axis.\n */\nimport { selectElement, makeElement, angleToRadian } from 'muze-utils';\nimport * as AxisOrientation from './enums/axis-orientation';\nimport { LINEAR, HIDDEN, BOTTOM, TOP } from './enums/constants';\n\n/**\n *\n *\n * @param {*} instance\n * @param {*} container\n * @param {*} labelManager\n * @param {*} config\n */\nconst rotateAxis = (instance, tickText, labelManager) => {\n    let rotation;\n    const axis = instance.axis();\n    const config = instance.config();\n    const renderConfig = instance.renderConfig();\n    const smartTicks = instance.smartTicks();\n    const scale = axis.scale();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n    const ticks = labelFunc();\n    const {\n        orientation,\n        fixedBaseline,\n        type\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n\n    rotation = labels.rotation;\n\n    const tickSize = instance.getTickSize();\n    tickText.each(function (d, index) {\n        let yShift;\n        let xShift;\n        let datum = smartTicks[index] ? smartTicks[index].text : d;\n\n        datum = datum.toString();\n\n        const tickLabelDim = labelManager.getOriSize(datum);\n\n        const width = tickLabelDim.width * 0.5;\n        const height = tickLabelDim.height * 0.5;\n\n        if (rotation < 0) {\n            rotation = 360 + rotation;\n        }\n\n        const quadrant = 4 - Math.floor(rotation / 90);\n        const rotationNormalizer = ((quadrant % 2 === 0) ? rotation : 180 * Math.ceil(rotation / 180) - rotation) % 180;\n\n        yShift = Math.sqrt(height ** 2 + width ** 2) * Math.sin(angleToRadian(rotationNormalizer));\n\n        if ((quadrant === 3 || quadrant === 2) && !(rotationNormalizer > 67.5 && rotationNormalizer <= 90)) {\n            yShift += height * 2;\n        }\n        xShift = width;\n\n        if (rotation === 90) {\n            xShift = height;\n        } else if (rotation === 270) {\n            xShift = -height;\n        } else {\n            xShift = 0;\n        }\n\n        if (orientation === AxisOrientation.TOP) {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift + xShift / 2 : xShift;\n            selectElement(this)\n                            .attr('transform', `translate(${-xShift + tickSize}\n                                ${-yShift - tickSize}) rotate(${rotation})`);\n        } else {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift - xShift / 2 : xShift;\n\n            selectElement(this)\n                            .attr('transform', `translate(${xShift - tickSize}\n                                ${yShift + tickSize}) rotate(${rotation})`);\n        }\n        selectElement(this).transition()\n                        .duration(1000).text(datum);\n    });\n    return tickText;\n};\n\n/**\n *\n *\n * @param {*} tickText\n * @param {*} axisInstance\n */\nconst changeTickOrientation = (selectContainer, axisInstance, tickSize) => {\n    const {\n        _smartTicks\n    } = axisInstance;\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const {\n        orientation,\n        classPrefix\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n    const {\n        rotation,\n        smartTicks: isSmartTicks\n    } = labels;\n\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.selectAll('tspan').remove();\n\n    // rotate labels if not enough space is available\n    if (rotation && (orientation === TOP || orientation === BOTTOM)) {\n        rotateAxis(axisInstance, tickText, labelManager);\n    } else if (!rotation && !isSmartTicks) {\n        tickText.attr('transform', '');\n    } else {\n        tickText.text('');\n        if (orientation === TOP || orientation === BOTTOM) {\n            tickText.attr('y', 0)\n                            .attr('x', 0)\n                            .attr('transform', '')\n                            .text('');\n            const tspan = makeElement(tickText, 'tspan', (d, i) => {\n                if (_smartTicks[i]) {\n                    return _smartTicks[i].lines;\n                } return [];\n            }, `${classPrefix}-smart-text`);\n\n            tspan.attr('dy', '0')\n                            .style('opacity', '0')\n\n                            .transition()\n                            .duration(1000)\n                            .on('end', axisInstance.registerAnimationDoneHook())\n                            .attr('dy', (d, i) => {\n                                if (orientation === BOTTOM || i !== 0) {\n                                    return _smartTicks[0].oriTextHeight;\n                                }\n                                return -_smartTicks[0].oriTextHeight * (_smartTicks[0].lines.length - 1) - tickSize;\n                            })\n                            .style('opacity', 1)\n                            .text(e => e)\n                            .attr('x', 0);\n        } else {\n            const tspan = makeElement(tickText, 'tspan', (d, i) => _smartTicks[i].lines, `${classPrefix}-smart-text`);\n            tspan.text(e => e);\n        }\n    }\n\n    return tickText;\n};\n\nconst setFixedBaseline = (axisInstance) => {\n    const {\n        fixedBaseline\n    } = axisInstance.config();\n    const {\n        showInnerTicks\n    } = axisInstance.renderConfig();\n    const domain = axisInstance.domain();\n    if (fixedBaseline && domain.length && showInnerTicks) {\n        axisInstance.setFixedBaseline();\n    }\n};\n\n/**\n *\n *\n * @param {*} textNode\n * @param {*} orientation\n * @param {*} measures\n */\nconst setAxisNamePos = (textNode, orientation, measures) => {\n    const {\n        axisNameHeight,\n        yOffset,\n        labelOffset,\n        availableSpace\n    } = measures;\n\n    switch (orientation) {\n    case AxisOrientation.LEFT:\n        textNode.attr('transform',\n            `translate(${-(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(-90)`);\n        break;\n    case AxisOrientation.RIGHT:\n        textNode.attr('transform',\n             `translate(${(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(90)`);\n        break;\n    case AxisOrientation.TOP:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${-availableSpace.height + axisNameHeight})`);\n        break;\n    case AxisOrientation.BOTTOM:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${availableSpace.height - axisNameHeight / 2})`);\n        break;\n    default:\n    }\n    return textNode;\n};\n\n/**\n * This method is used to render the axis inside an\n * svg container.\n *\n * @export\n * @param {Object} axisInstance the nput object required to render axis\n * @param {string} axisInstance.orientation the orientation of axis\n * @param {Object} axisInstance.scale instance of d3 scale\n * @param {SVGElement} axisInstance.container the container in which to render\n */\nexport function renderAxis (axisInstance) {\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const mount = axisInstance.mount();\n    const range = axisInstance.range();\n    const axis = axisInstance.axis();\n    const scale = axisInstance.scale();\n    const {\n        _axisNameStyle: axisNameStyle,\n        _tickLabelStyle: tickLabelStyle,\n        _tickFormatter: axisTickFormatter\n     } = axisInstance;\n    const {\n        orientation,\n        name,\n\n        axisNamePadding,\n        className,\n        id,\n        classPrefix\n     } = config;\n    const {\n        show,\n        xOffset,\n        yOffset,\n        showAxisName,\n        labels,\n        smartAxisName\n    } = renderConfig;\n\n    if (!show) {\n        return;\n    }\n\n    const tickSize = axisInstance.getTickSize();\n\n    const selectContainer = makeElement(selectElement(mount), 'g', [axisInstance], `${className}`, {},\n        key => key.config().id);\n\n    // Set style for tick labels\n    labelManager.setStyle(tickLabelStyle);\n\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    const ticks = axis.tickValues() || labelFunc();\n\n    axis.tickFormat(axisTickFormatter(ticks));\n\n    // Get range(length of range)\n    const availableSpace = Math.abs(range[0] - range[1]);\n\n    // Get width and height taken by axis labels\n    const labelProps = axisInstance.axisComponentDimensions().largestTickDimensions;\n\n    // Draw axis ticks\n    selectContainer.attr('transform', `translate(${xOffset},${yOffset})`);\n    setFixedBaseline(axisInstance);\n    if (labels.smartTicks === false || tickSize === 0) {\n        selectContainer.transition()\n                        .duration(1000)\n                        .on('end', axisInstance.registerAnimationDoneHook())\n                        .call(axis);\n    } else {\n        selectContainer.call(axis);\n    }\n    selectContainer.selectAll('.tick').classed(`${classPrefix}-ticks`, true);\n    selectContainer.selectAll('.tick line').classed(`${classPrefix}-tick-lines`, true);\n\n    // Set classes for ticks\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.classed(`${classPrefix}-ticks`, true)\n                    .classed(`${classPrefix}-ticks-${id}`, true);\n\n    changeTickOrientation(selectContainer, axisInstance, tickSize);\n\n    // Create axis name\n    const textNode = makeElement(selectContainer, 'text', [smartAxisName], `${classPrefix}-axis-name`)\n                    .attr('text-anchor', 'middle')\n                    .classed(`${classPrefix}-axis-name-${id}`, true)\n                    .text(d => d.text);\n\n    // Hide axis name if show is off\n    textNode.classed(HIDDEN, !showAxisName);\n\n    // render labels based on orientation of axis\n    const labelOffset = availableSpace / 2;\n\n    // Set style for axis name\n    labelManager.setStyle(axisNameStyle);\n    const axisNameSpace = labelManager.getOriSize(name);\n    const measures = {\n        labelProps,\n        tickSize,\n        axisNamePadding,\n        axisNameHeight: axisNameSpace.height,\n        axisNameWidth: axisNameSpace.width,\n        yOffset,\n        xOffset,\n        labelOffset,\n        availableSpace: axisInstance.availableSpace()\n    };\n    // Set position for axis name\n    setAxisNamePos(textNode, orientation, measures);\n}\n","import {\n    timeMillisecond,\n    timeSecond,\n    timeMinute,\n    timeHour,\n    timeDay,\n    timeWeek,\n    timeMonth,\n    timeYear\n} from 'muze-utils';\n\nconst durationSecond = 1000;\nconst durationMinute = durationSecond * 60;\nconst durationHour = durationMinute * 60;\nconst durationDay = durationHour * 24;\nconst durationWeek = durationDay * 7;\nconst durationMonth = durationDay * 30;\nconst durationYear = durationDay * 365;\n\n// Longest Word for each level based on which tick skipping is decided\nconst longestWord = {\n    month: 'September',\n    quarter: 'October',\n    halfYearly: 'July',\n    year: 9999,\n    day: 'September',\n    hour: '24 AM',\n    mintues: '60:60',\n    seconds: ':60',\n    week: 'Wed 31'\n};\n\n// These are the various levels of ticks that can be shown by Muze.\n// Each level is described as how frequently the ticks appear\n// The format is as follows:\n// [Frequency, Milliseconds, Name of Seconds, Tick Generator, Level Type]\nconst tickIntervals = [\n    [1, 1, 'milliseconds', timeMillisecond.every(1), 'seconds'],\n    [1, durationSecond, 'seconds', timeSecond.every(1), 'seconds'],\n    [5, 5 * durationSecond, 'five seconds', timeSecond.every(5), 'seconds'],\n    [10, 10 * durationSecond, 'ten seconds', timeSecond.every(10), 'seconds'],\n    [15, 15 * durationSecond, 'fifteen seconds', timeSecond.every(15), 'seconds'],\n    [30, 30 * durationSecond, 'thirty seconds', timeSecond.every(30), 'seconds'],\n    [1, durationMinute, 'minute', timeMinute.every(1), 'minutes'],\n    [5, 5 * durationMinute, 'five minutes', timeMinute.every(5), 'minutes'],\n    [10, 10 * durationMinute, 'ten minutes', timeMinute.every(10), 'minutes'],\n    [15, 15 * durationMinute, 'fifteen minutes', timeMinute.every(15), 'minutes'],\n    [30, 30 * durationMinute, 'thirty minutes', timeMinute.every(30), 'minutes'],\n    [1, durationHour, 'hour', timeHour.every(1), 'hour'],\n    [3, 3 * durationHour, 'three hours', timeHour.every(3), 'hour'],\n    [6, 6 * durationHour, 'six hours', timeHour.every(6), 'hour'],\n    [12, 12 * durationHour, 'twelve hours', timeHour.every(12), 'hour'],\n    [1, durationDay, 'daily', timeDay.every(1), 'day'],\n    [1, durationWeek, 'weekly', timeWeek.every(1), 'week'],\n    [1, durationMonth, 'monthly', timeMonth.every(1), 'week'],\n    [3, 3 * durationMonth, 'quaterly', timeMonth.every(3), 'quarter'],\n    [6, 6 * durationMonth, 'half yearly', timeMonth.every(6), 'halfYearly'],\n    [1, durationYear, 'yearly', timeYear.every(1), 'year'],\n    [2, 2 * durationYear, '2 year', timeYear.every(2), 'year'],\n    [3, 3 * durationYear, '3 year', timeYear.every(3), 'year'],\n    [5, 5 * durationYear, '5 year', timeYear.every(5), 'year'],\n    [10, 10 * durationYear, 'decade', timeYear.every(10), 'year'],\n    [100, 100 * durationYear, 'century', timeYear.every(100), 'year'],\n    [1000, 1000 * durationYear, 'millenium', timeYear.every(1000), 'year']\n];\n/**\n * Get the actual tick interval based on the available width, number of ticks\n * and the distance between two ticks\n *\n * @param {Object} context Axis Context\n * @param {number} noOfTicks Number of Ticks based on which interval is calculated\n * @return {number} The width for the tick interval\n */\nconst getActualTickInterval = (context, noOfTicks) => {\n    const minTickDistance = context._minTickDistance;\n    const minWidthBetweenTicks = minTickDistance.width;\n\n    const { width } = context.availableSpace();\n    const actualTickInterval = Math.floor(((width - (noOfTicks - 1) * (minWidthBetweenTicks)) / noOfTicks));\n\n    return actualTickInterval;\n};\n\n/**\n * Get the tick interval based on the current level of ticks. Levels are decided on\n * the number of ticks that are possible to show\n *\n * @param {Object} context Axis Context\n * @param {string} type Type of level (yearly, monthly, etc)\n * @return {number} The width for the tick interval\n */\nconst getTickIntervalBasedOnCurrentLevel = (context, type) => {\n    const labelManager = context._dependencies.labelManager;\n    const longestWordType = longestWord[type];\n    const measure = labelManager.getOriSize(longestWordType);\n\n    return measure.width;\n};\n\nconst getTickIntervalFnBasedOnNumberOfTicks = (interval, count, context) => {\n    let possibleTickLevelIndex = tickIntervals.length - 1;\n    let maxPossibleTicks = 1;\n    let tickIntervalLevelInfo = null;\n\n    // Decide possible tick level based on min tick width (with ellipses)\n    for (let i = tickIntervals.length - 1; i >= 0; i--) {\n        const tickIntervalInfo = tickIntervals[i];\n        const numOfPossibleTicks = Math.floor(interval / tickIntervalInfo[1]);\n        if (numOfPossibleTicks <= count) {\n            possibleTickLevelIndex = i;\n            maxPossibleTicks = numOfPossibleTicks;\n        }\n    }\n\n    tickIntervalLevelInfo = tickIntervals[possibleTickLevelIndex];\n\n    // Get actual tick interval based on the level of ticks generated\n    const actualTickInterval = getActualTickInterval(context, maxPossibleTicks);\n\n    // Maximum Possible tick Interval for a particular level based on a pre decided set of values\n    const maxTickInterval = getTickIntervalBasedOnCurrentLevel(context, tickIntervalLevelInfo[4]);\n\n    // Display the next level involving tick skipping if current level does not meet the requirement\n    // for displaying max tick\n    if (actualTickInterval < maxTickInterval && possibleTickLevelIndex < tickIntervals.length - 1) {\n        tickIntervalLevelInfo = tickIntervals[possibleTickLevelIndex + 1];\n    }\n    return tickIntervalLevelInfo[3];\n};\n\nexport const getSkippedTicks = (context, maxPossibleTicks) => {\n    let actualNumberOfTicks = maxPossibleTicks;\n    const domain = context.domain();\n    const minDiff = context._minDiff;\n    // Get the interval in ms from the domain\n    const millisecondInterval = domain[1] - domain[0];\n    // Get number of ticks based on the minimum difference in the data\n    const numOfTicksAccordingToMinDiff = Math.floor(millisecondInterval / minDiff);\n\n    // Show ticks according to min diff if possible\n    if (maxPossibleTicks >= numOfTicksAccordingToMinDiff) {\n        actualNumberOfTicks = numOfTicksAccordingToMinDiff;\n    }\n\n    return getTickIntervalFnBasedOnNumberOfTicks(millisecondInterval, actualNumberOfTicks, context);\n};\n","import { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { getSkippedTicks } from './skip-ticks';\nimport { TIME, LINEAR, BAND } from '../enums/scale-type';\n\nexport const applyTickSkipping = (context) => {\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minWidthBetweenTicks = minTickDistance.width;\n    const minTickWidth = minTickSpace.width;\n\n    const { width } = context.availableSpace();\n\n    const maxTicks = Math.floor((width + minWidthBetweenTicks) / (minTickWidth + minWidthBetweenTicks));\n\n    const ticks = context.scale().ticks(getSkippedTicks(context, maxTicks));\n\n    context.renderConfig({\n        tickValues: ticks\n    });\n};\n\nconst adjustHorizontalRange = (range, diff) => {\n    range[0] += diff;\n    range[1] -= diff;\n    return range;\n};\n\nconst adjustVerticalRange = (range, diff) => {\n    range[0] -= diff;\n    range[1] += diff;\n    return range;\n};\n\nconst rangeAdjustmentMap = {\n    [TOP]: adjustHorizontalRange,\n    [BOTTOM]: adjustHorizontalRange,\n    [LEFT]: adjustVerticalRange,\n    [RIGHT]: adjustVerticalRange\n};\n\nexport const setAxisRange = (context, type, rangeBounds, offset) => {\n    context.range(rangeBounds);\n    offset && context.renderConfig({ [`${type}Offset`]: offset });\n};\n\nconst getAxisOffset = (timeDiff, range, domain) => {\n    const avWidth = Math.abs(range[1] - range[0]);\n    const pvr = avWidth / (domain[1] - domain[0]);\n    const width = (pvr * timeDiff);\n    const bars = avWidth / width;\n    const barWidth = avWidth / (bars + 1);\n    const diff = avWidth - barWidth * bars;\n\n    return diff / 2;\n};\n\nexport const getAdjustedRange = (minDiff, range, domain, config) => {\n    const {\n        orientation,\n        adjustRange\n    } = config;\n    const diff = getAxisOffset(minDiff, range, domain);\n\n    if (adjustRange) {\n        return rangeAdjustmentMap[orientation](range, diff);\n    }\n    return range;\n};\n\nexport const spaceSetter = (context, spaceConfig) => {\n    let tickInterval;\n    let heightForTicks;\n    const config = context.config();\n    const {\n        width: availWidth,\n        height: availHeight,\n        padding\n    } = context.availableSpace();\n    const {\n        top,\n        left,\n        bottom,\n        right\n    } = padding;\n    const {\n        isOffset\n    } = spaceConfig;\n    const {\n        showAxisName,\n        labels\n    } = context.renderConfig();\n    const {\n        rotation\n    } = labels;\n    const {\n        fixedBaseline,\n        axisNamePadding,\n        tickValues\n    } = config;\n    const {\n        tickDimensions,\n        allTickDimensions,\n        axisNameDimensions,\n        tickSize\n    } = context.getAxisDimensions();\n    const {\n        height: tickDimHeight,\n        width: tickDimWidth\n    } = tickDimensions;\n\n    const namePadding = showAxisName ? axisNamePadding : 0;\n    const labelConfig = { smartTicks: true, rotation: labels.rotation };\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minDiff = context._minDiff;\n    const domain = context.domain();\n    const axisNameHeight = axisNameDimensions.height;\n    const minWidthBetweenTicks = minTickDistance.width;\n    const minTickWidth = minTickSpace.width;\n    const minTickHeight = minTickSpace.height;\n\n    return {\n        [TIME]: {\n            x: () => {\n                !tickValues && context.applyTickSkipping();\n                const noOfTicks = context.getTickValues().length;\n\n                // Get the Tick Interval\n                tickInterval = ((availWidth - (noOfTicks - 1) * (minWidthBetweenTicks)) / noOfTicks);\n\n                // Get height for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickWidth && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = labels.rotation === null ? -90 : rotation;\n                    // Remove ticks if not enough height\n                    if (tickInterval < minTickHeight) {\n                        heightForTicks = availHeight;\n                        tickInterval = minTickHeight;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n\n                const tickShifter = Math.min(tickInterval, tickDimWidth);\n                // set range for axis\n                setAxisRange(context, 'y', getAdjustedRange(minDiff, [tickShifter / 2,\n                    availWidth - left - right - tickShifter / 2], domain, config),\n                        isOffset ? availHeight : null);\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n\n                return labelConfig;\n            },\n            y: () => {\n                let widthForTicks = availWidth;\n                const tickShifter = tickDimHeight / 2;\n\n                setAxisRange(context, 'x', getAdjustedRange(minDiff,\n                    [availHeight - top - bottom - tickShifter, tickShifter], domain, config),\n                        isOffset ? availWidth : null);\n\n                if ((availWidth - axisNameHeight - namePadding) <= minWidthBetweenTicks) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        [BAND]: {\n            x: () => {\n                setAxisRange(context, 'y', [0, availWidth - left - right], isOffset ? availHeight : null);\n                const range = context.range();\n\n                // Get Tick Interval\n                tickInterval = ((range[1] - range[0]) / (tickValues || domain).length) - minWidthBetweenTicks * 2;\n\n                // Get height available for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickWidth && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = rotation === null ? -90 : rotation;\n                    labelConfig.smartTicks = false;\n\n                    // Ticks with overlapping height\n                    if (tickInterval < minTickHeight) {\n                        heightForTicks = 0;\n                        tickInterval = 0;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                        context.range([minTickHeight / 2, availWidth - minTickHeight / 2]);\n                    }\n                } else if (tickValues) {\n                    const interval = (availWidth / domain.length) - minWidthBetweenTicks;\n                    if (interval < minTickWidth) {\n                        context.range([minTickHeight / 2, availWidth - minTickHeight / 2]);\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false, showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n                return labelConfig;\n            },\n            y: () => {\n                setAxisRange(context, 'x', [availHeight - bottom, top], isOffset ? availWidth : null);\n\n                let widthForTicks = availWidth - axisNameHeight - tickSize - namePadding;\n                if (widthForTicks <= minWidthBetweenTicks) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        [LINEAR]: {\n            x: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimWidth / 2;\n\n                const baseline = fixedBaseline ? 0 : tickShifter;\n\n                setAxisRange(context, 'y', [baseline + left, availWidth - right - tickShifter],\n                    isOffset ? availHeight : null);\n\n                const range = context.range();\n\n                // Get Tick widths and available space\n                const totalTickWidth = allTickDimensions.length * (tickDimWidth + minWidthBetweenTicks);\n                const availableWidth = range[1] - range[0];\n\n                 // Rotate labels if not enough width\n                if (availableWidth < totalTickWidth && labels.rotation !== null) {\n                    if (availHeight - tickDimWidth - namePadding - tickSize > axisNameHeight) {\n                        labelConfig.rotation = null;\n                        context.renderConfig({\n                            showInnerTicks: true,\n                            showAxisName: true\n                        });\n                    } else {\n                        labelConfig.rotation = -90;\n                        context.renderConfig({\n                            showInnerTicks: true,\n                            showAxisName: false\n\n                        });\n                    }\n                }\n\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            },\n            y: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimensions.height / 2;\n                const baseline = fixedBaseline ? 1 : tickShifter;\n\n                setAxisRange(context, 'x', [availHeight - bottom - baseline, tickShifter + top],\n                    isOffset ? availWidth : null);\n\n                // Remove display of ticks if no space is left\n                if (availWidth < tickDimWidth + axisNameHeight + namePadding) {\n                    context.renderConfig({ showInnerTicks: false });\n                    if (availWidth < axisNameHeight) {\n                        context.renderConfig({ show: false });\n                    }\n                }\n                return labelConfig;\n            }\n        }\n    };\n};\n","import { defaultValue } from 'muze-utils';\nimport { TOP, LEFT, BOTTOM } from '../enums/axis-orientation';\nimport { MIN_NO_OF_TICKS, DEFAULT_NO_OF_TICKS } from '../enums/constants';\nimport { setAxisRange, getAdjustedRange } from './space-setter';\n\nexport const getRotatedSpaces = (rotation = 0, width, height) => {\n    let rotatedHeight = height;\n    let rotatedWidth = width;\n    if (rotation) {\n        const angle = ((rotation || 0) * Math.PI) / 180;\n        rotatedWidth = Math.abs(height * Math.sin(angle)) + Math.abs(width * Math.cos(angle));\n        rotatedHeight = Math.abs(width * Math.sin(angle)) + Math.abs(height * Math.cos(angle));\n    }\n    return { width: rotatedWidth, height: rotatedHeight };\n};\n\nexport const setOffset = (context) => {\n    let x = 0;\n    let y = 0;\n    const logicalSpace = context.logicalSpace();\n    const config = context.config();\n    const {\n        orientation,\n        xOffset,\n        yOffset\n    } = config;\n    if (orientation === LEFT) {\n        x = xOffset === undefined ? logicalSpace.width : xOffset;\n    }\n    if (orientation === TOP) {\n        y = yOffset === undefined ? logicalSpace.height : yOffset;\n    }\n    context.renderConfig({ xOffset: x, yOffset: y });\n};\n\nexport const getNumberOfTicks = (availableSpace, labelDim, axis, axisInstance) => {\n    let numberOfValues = 0;\n    let tickValues = [];\n    let { numberOfTicks } = axisInstance.config();\n    const ticks = axis.scale().ticks();\n    const tickLength = ticks.length;\n    const minTickDistance = axisInstance._minTickDistance.width;\n\n    numberOfValues = tickLength;\n\n    if (tickLength * (labelDim + minTickDistance) > availableSpace) {\n        numberOfValues = Math.floor(availableSpace / (labelDim + minTickDistance));\n    }\n\n    numberOfTicks = numberOfTicks || numberOfValues;\n    numberOfValues = Math.min(numberOfTicks, Math.max(MIN_NO_OF_TICKS, numberOfValues));\n\n    tickValues = axis.scale().ticks(numberOfValues);\n\n    if (tickValues.length > numberOfValues) {\n        tickValues = tickValues.filter((e, i) => i % 2 === 0);\n    }\n\n    if (numberOfValues === MIN_NO_OF_TICKS) {\n        tickValues = axis.scale().ticks(DEFAULT_NO_OF_TICKS);\n        tickValues = [tickValues[0], tickValues[tickValues.length - 1]];\n    }\n    return tickValues;\n};\n\nexport const getAxisComponentDimensions = (context) => {\n    let largestTick = '';\n    let largestTickDimensions = { width: 0, height: 0 };\n    let smartTick = {};\n    let axisTicks;\n    const allTickDimensions = [];\n    const scale = context.scale();\n    const { tickValues, showAxisName } = context.renderConfig();\n    const { name } = context.config();\n    const { labelManager } = context.dependencies();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    // set the style on the shared label manager instance\n    labelManager.setStyle(context._tickLabelStyle);\n\n    // get the values along the domain\n    axisTicks = tickValues || labelFunc();\n\n    // Get the tick labels\n    axisTicks = axisTicks.map((originalLabel, i) => {\n        const label = context.getFormattedText(originalLabel, i, axisTicks);\n\n    // convert to string for quant values\n        const tickDimensions = labelManager.getOriSize(label);\n\n    // Get spaces for all labels\n        allTickDimensions.push(tickDimensions);\n\n    // Getting largest label\n        if (tickDimensions.width > largestTickDimensions.width) {\n            largestTick = label;\n            smartTick = context.smartTicks() ? context.smartTicks()[i] : {};\n\n            largestTickDimensions = tickDimensions;\n            smartTick = smartTick || tickDimensions;\n        }\n        return label;\n    });\n\n    labelManager.setStyle(context._axisNameStyle);\n    const axisNameDimensions = showAxisName ? labelManager.getOriSize(name) : { width: 0, height: 0 };\n\n    return {\n        axisNameDimensions,\n        largestTick,\n        largestTickDimensions,\n        allTickDimensions,\n        axisTicks,\n        smartTick,\n        tickSize: context.getTickSize()\n    };\n};\n\nexport const computeAxisDimensions = (context) => {\n    let tickDimensions = {};\n    const { labels } = context.renderConfig();\n    const { smartTicks, rotation } = labels;\n    const {\n        largestTickDimensions,\n        axisTicks,\n        smartTick,\n        axisNameDimensions,\n        allTickDimensions,\n        tickSize\n    } = getAxisComponentDimensions(context);\n    const { height: labelHeight, width: labelWidth } = largestTickDimensions;\n\n    // get the domain of axis\n    const domain = context.domain();\n    // const angle = ((rotation || 0) * Math.PI) / 180;\n\n    if (domain.length === 0) {\n        return null;\n    }\n\n    if (smartTicks) {\n        tickDimensions = smartTick;\n    } else {\n        tickDimensions = { width: labelWidth, height: labelHeight };\n    }\n    tickDimensions = getRotatedSpaces(rotation, tickDimensions.width, tickDimensions.height);\n\n    if (tickSize === 0) {\n        tickDimensions = { width: 0, height: 0 };\n    }\n    return {\n        allTickDimensions,\n        tickSize,\n        tickDimensions,\n        axisNameDimensions,\n        largestTickDimensions,\n        axisTicks\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getHorizontalAxisSpace = (context, axisDimensions, range) => {\n    let width;\n    let height;\n    const domain = context.domain();\n    const minTickDistance = context._minTickDistance.width;\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    width = range && range.length ? range[1] - range[0] : ((tickDimWidth + minTickDistance) * 3);\n\n    height = 0;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        width = ((max - min) / Math.abs(minTickDiff)) * (tickDimWidth + context._minTickDistance.width);\n    }\n    if (!width || width === 0) {\n        height = Math.max(tickDimWidth, tickDimHeight);\n    } else {\n        height = tickDimHeight;\n    }\n\n    height += (showAxisName ? axisDimHeight + axisNamePadding : 0) + tickSize;\n\n    return {\n        width,\n        height\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getVerticalAxisSpace = (context, axisDimensions) => {\n    let height;\n    let width;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    height = 0;\n    width = tickDimWidth;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        height = ((max - min) / Math.abs(minTickDiff)) * tickDimHeight;\n    }\n    width += (showAxisName ? axisDimHeight : 0) + tickSize + axisNamePadding;\n\n    return {\n        height,\n        width\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateBandSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n\n    const { orientation } = context.config();\n    const { show } = context.renderConfig();\n    const { largestTickDimensions, axisTicks, allTickDimensions } = axisDimensions;\n    const { height: largestDimHeight } = largestTickDimensions;\n    const minTickWidth = context._minTickDistance.width;\n    if (orientation === TOP || orientation === BOTTOM) {\n        let {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n\n        if (!width || width === 0) {\n            width = allTickDimensions.reduce((t, n) =>\n                t + Math.min(n.width, n.height) + minTickWidth, 0);\n        }\n        if (show === false) {\n            height = 0;\n            width = 0;\n        }\n\n        return {\n            width,\n            height\n        };\n    }\n\n    let {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    if (!height || height === 0) {\n        height = axisTicks.length * (largestDimHeight + context._minTickDistance.height);\n    }\n    if (show === false) {\n        width = 0;\n    }\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateContinousSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n    const { orientation } = context.config();\n    const { show, showAxisName } = context.renderConfig();\n    const { axisNameDimensions } = axisDimensions;\n\n    if (show === false) {\n        return {\n            width: 0,\n            height: 0\n        };\n    }\n\n    const { width: axisNameWidth } = axisNameDimensions;\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        const {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n        const axisWidth = Math.max(width, axisNameWidth);\n\n        return {\n            width: axisWidth,\n            height\n        };\n    }\n    const {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    const effHeight = Math.max(height, showAxisName ? axisNameWidth : 0);\n\n    return {\n        width,\n        height: effHeight\n    };\n};\n\n/**\n * Overwrites domain with user defined domain (if present)\n * @param {Object} context reference to current axes\n * @param {Array} domain default domain\n *\n * @return {Array} domain\n */\nexport const getValidDomain = (context, domain) => {\n    const { domain: userDom } = context.config();\n\n    if (userDom) {\n        domain = userDom;\n    }\n\n    return defaultValue(domain, []);\n};\n\nexport const setContinousAxisDomain = (context, domain) => {\n    const { nice } = context.config();\n    const scale = context.scale.bind(context);\n\n    scale().domain(domain);\n    nice && scale().nice();\n    context._domain = scale().domain();\n};\n\n/**\n * Checks if any of the properties have changed between two objects\n * @param {Object} obj first object\n * @param {Object} obj1 second object\n * @param {Array} properties properties to be compared between two objects\n *\n * @return {Boolean} boolean value\n */\nexport const hasAxesConfigChanged = (obj = {}, obj1 = {}, properties) => {\n    if (!Object.keys(obj).length || !Object.keys(obj1).length) {\n        return false;\n    }\n    return properties.some(key => obj[key] !== obj1[key]);\n};\n\nexport const resetTickInterval = (context, domain) => {\n    const {\n        orientation,\n        isOffset\n    } = context.config();\n\n    const minDiff = context._minDiff;\n     // Set available space on interaction\n    if (context.range().length && (orientation === TOP || orientation === BOTTOM)) {\n        context.applyTickSkipping();\n        const {\n            largestTickDimensions\n        } = context.getAxisDimensions();\n\n        const noOfTicks = context.getTickValues().length;\n\n        const { width, height, padding } = context.availableSpace();\n        const {\n            left,\n            right\n        } = padding;\n        // Get the Tick Interval\n        const tickInterval = Math.min(largestTickDimensions.width,\n            ((width - (noOfTicks - 1) * (context._minTickDistance.width)) / noOfTicks));\n\n        context.maxTickSpaces({\n            width: tickInterval\n        });\n\n        const adjustedRange = getAdjustedRange(minDiff, [tickInterval / 2,\n            width - left - right - tickInterval / 2], domain, context.config());\n\n         // set range for axis\n        setAxisRange(context, 'y', adjustedRange, isOffset ? height : null);\n\n        context.setTickConfig();\n    }\n};\n\nexport const getSmartAxisName = (name, width, labelManager) => {\n    const oriSize = labelManager.getOriSize(name);\n\n    labelManager.useEllipsesOnOverflow(true);\n\n    return labelManager.getSmartText(name, width, oriSize.height, true);\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { hasAxesConfigChanged } from './helper';\n\nexport const PROPS = {\n    availableSpace: {},\n    axisDimensions: {},\n    axisComponentDimensions: {},\n    config: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._config || {});\n            const mockedOldConfig = mergeRecursive({}, oldConfig);\n            value = mergeRecursive(mockedOldConfig, value);\n\n            value.axisNamePadding = Math.max(value.axisNamePadding, 0);\n            const shouldAxesScaleUpdate = hasAxesConfigChanged(\n                value, oldConfig, ['interpolator', 'exponent', 'base', 'orientation']\n            );\n            const tickFormatter = context.sanitizeTickFormatter(value);\n\n            if (shouldAxesScaleUpdate) {\n                context._scale = context.createScale(value);\n                context._axis = context.createAxis(value);\n            }\n\n            context._tickFormatter = ticks => tickFormatter(ticks);\n\n            context.resetRenderConfig(value);\n            return value;\n        }\n    },\n    renderConfig: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._renderConfig || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    logicalSpace: {},\n    mount: {\n    },\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.logicalSpace(null);\n            return value;\n        }\n    },\n\n    smartTicks: {},\n    tickSize: {},\n    maxTickSpaces: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._maxTickSpaces || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import {\n    mergeRecursive,\n    getSmartComputedStyle,\n    selectElement,\n    generateGetterSetters,\n    getUniqueId\n} from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { defaultConfig } from './default-config';\nimport { renderAxis } from '../axis-renderer';\nimport { spaceSetter } from './space-setter';\nimport {\n    getAxisComponentDimensions,\n    computeAxisDimensions,\n    calculateContinousSpace,\n    setOffset,\n    getValidDomain,\n    getSmartAxisName\n} from './helper';\nimport { PROPS } from './props';\n\nexport default class SimpleAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @memberof SimpleAxis\n     */\n    constructor (config, dependencies) {\n        this._id = getUniqueId();\n\n        this._dependencies = dependencies;\n        this._mount = null;\n        this._range = [];\n        this._domain = [];\n        this._domainLock = false;\n        this._axisDimensions = {};\n        this._smartTicks = [];\n\n        const defCon = mergeRecursive({}, this.constructor.defaultConfig());\n        const simpleConfig = mergeRecursive(defCon, config);\n\n        const bodyElem = selectElement('body');\n        const classPrefix = simpleConfig.classPrefix;\n        this._tickLabelStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-ticks`);\n        this._axisNameStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-axis-name`);\n\n        dependencies.labelManager.setStyle(this._tickLabelStyle);\n        const dist = dependencies.labelManager.getOriSize('w');\n\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n        this._minTickSpace = dependencies.labelManager.getOriSize('www');\n\n        generateGetterSetters(this, PROPS);\n        this.config(simpleConfig);\n\n        this._scale = this.createScale(this._config);\n        this._axis = this.createAxis(this._config);\n        this._animationDonePromises = [];\n    }\n\n    /**\n     * Returns the default configuration of simple axis\n     *  @return {Object} default configurations\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    scale (...params) {\n        if (params.length) {\n            this._scale = params[0];\n            return this;\n        }\n        return this._scale;\n    }\n\n    resetDomain () {\n        this._domain = [];\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    axis (...params) {\n        if (params.length) {\n            this._axis = params[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            this.scale().domain(domainValue);\n            this._domain = this.scale().domain();\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    setAxisComponentDimensions () {\n        this.axisComponentDimensions(getAxisComponentDimensions(this));\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const scale = createScale({\n            padding,\n            interpolator,\n            exponent,\n            base,\n            range,\n            type: this.constructor.type()\n        });\n\n        return scale;\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat, numberFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(numberFormat(val), val, i, ticks);\n        }\n\n        return () => val => numberFormat(val);\n    }\n\n    resetRenderConfig (config) {\n        const {\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName,\n            xOffset,\n            yOffset,\n            tickValues,\n            smartAxisName\n        } = config;\n        this.renderConfig({\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName,\n            xOffset,\n            yOffset,\n            tickValues,\n            smartAxisName\n        });\n        return this;\n    }\n\n    resetLogicalSpace () {\n        this.logicalSpace(null);\n        this.range([]);\n\n        this.resetRenderConfig(this.config());\n    }\n\n    getFormattedText (text, index, axisTicks) {\n        const formatter = this._tickFormatter;\n\n        return formatter(axisTicks)(text, index);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const { orientation } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            const axis = axisClass(this.scale());\n            return axis;\n        }\n        return null;\n    }\n\n    setTickValues (tickValues) {\n        const renderConfig = this.renderConfig();\n        this.config({ ...renderConfig, tickValues });\n        this.tickValues = tickValues;\n        this.axis().tickValues(tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n        const type = this.constructor.type();\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset })[type].x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset })[type].y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.setSmartAxisName();\n        return this;\n    }\n\n    setSmartAxisName () {\n        const { orientation, name } = this.config();\n        const dimType = (orientation === TOP || orientation === BOTTOM) ? 'width' : 'height';\n        const widthDim = this.availableSpace()[dimType];\n        const labelManager = this.dependencies().labelManager;\n        labelManager.setStyle(this._axisNameStyle);\n        this.renderConfig({\n            smartAxisName: getSmartAxisName(name, widthDim, labelManager)\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        return this;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this.scale()(domainVal);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        return this.axis().tickSize();\n    }\n\n    /**\n     * Gets the space occupied by the parts of an axis\n     *\n     * @return {Object} object with details about sizes of the axis.\n     * @memberof SimpleAxis\n     */\n    getAxisDimensions (...params) {\n        this.axisDimensions(computeAxisDimensions(this, ...params));\n        return this.axisDimensions();\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateContinousSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    /**\n     * Returns the value from the domain when given a value from the range.\n     * @param {number} value Value from the range.\n     * @return {number} Value\n     */\n    invert (value) {\n        return this.scale().invert(value);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     *\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        return [v1, v2];\n    }\n\n    invertExtent (v1, v2) {\n        return [this.invert(v1), this.invert(v2)];\n    }\n\n    getMinTickDifference () {\n        return this.domain();\n    }\n\n    getFormattedTickValues (tickValues) {\n        return tickValues;\n    }\n\n    /**\n     * This method returns the width in pixels for one\n     * unit along the axis. It is only applicable to band scale\n     * and returns undefined for other scale type.\n     *\n     * @return {number} the width of one band along band scale axis\n     * @memberof SimpleAxis\n     */\n    getUnitWidth () {\n        return 0;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof SimpleAxis\n     */\n    serialize () {\n        return {\n            name: this.name,\n            type: this.type,\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to render the axis inside\n     * the supplied svg container.\n     *\n     * @param {SVGElement} svg the svg element in which to render the path\n     * @memberof SimpleAxis\n     */\n    /* istanbul ignore next */render () {\n        if (this.mount()) {\n            this.setTickConfig();\n            renderAxis(this);\n        }\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    remove () {\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    unsubscribe () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    isReverse () {\n        const range = this.range();\n        return range[0] > range[1];\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getPixelToValueRatio () {\n        const scale = this.scale();\n        const range = scale.range();\n        const domain = scale.domain();\n\n        return Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    }\n\n     /**\n     * Notifies when all animations/transitions of the axis are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n}\n\n","import { sanitizeDomainWhenEqual } from 'muze-utils';\nimport { scaleMap } from '../../scale-creator';\n\nexport default class LinearInterpolator {\n\n    createScale (config) {\n        const {\n            range\n        } = config;\n        const scaleFactory = scaleMap.linear;\n        this._scale = scaleFactory().range(range);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain.length) {\n            domain = sanitizeDomainWhenEqual(domain);\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LogInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            base\n        } = config;\n        const scaleFactory = scaleMap.log;\n        this._scale = scaleFactory().range(range).base(base);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        const scale = this._scale;\n        if (domainVal <= 0) {\n            return scale(scale.domain()[0]);\n        }\n\n        return scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain[0] <= 0) {\n            domain[0] = Math.max(1, domain[0]);\n        }\n        if (domain[1] <= 0) {\n            domain[1] = Math.max(1, domain[1]);\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class PowInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            exponent\n        } = config;\n        const scaleFactory = scaleMap.pow;\n        this._scale = scaleFactory().range(range).exponent(exponent);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        return domain;\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { LINEAR, LOG, POW } from '../enums/scale-type';\nimport { LogInterpolator, PowInterpolator, LinearInterpolator } from './interpolators';\nimport {\n    getNumberOfTicks,\n    getValidDomain,\n    setContinousAxisDomain\n} from './helper';\n\nexport const interpolatorMap = {\n    [LOG]: LogInterpolator,\n    [POW]: PowInterpolator,\n    [LINEAR]: LinearInterpolator\n};\n\nexport default class ContinousAxis extends SimpleAxis {\n    constructor (config, dependencies) {\n        config.tickFormat = config.tickFormat || (val => val);\n        super(config, dependencies);\n    }\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const InterpolatorCls = interpolatorMap[interpolator];\n\n        this._interpolator = new InterpolatorCls();\n        let scale = this._interpolator.createScale({\n            padding,\n            exponent,\n            base,\n            range\n        });\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ContinousAxis\n     */\n    static type () {\n        return LINEAR;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this._interpolator.getScaleValue(domainVal);\n    }\n /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n\n        return axis.tickSize();\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainVal = this._interpolator.sanitizeDomain(getValidDomain(this, domain[0]));\n            setContinousAxisDomain(this, domainVal);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (...params) {\n        super.setAvailableSpace(...params);\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} tickValues\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        const {\n            tickValues,\n            showInnerTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        if (!showInnerTicks) {\n            axis.tickValues([]);\n            return this;\n        }\n\n        if (tickValues) {\n            tickValues instanceof Array && this.axis().tickValues(tickValues);\n        }\n        const newTickValues = this.getTickValues();\n\n        axis.tickValues(newTickValues);\n        const smartLabel = this.dependencies().labelManager;\n        smartLabel.setStyle(this._tickLabelStyle);\n        const formatter = this._tickFormatter(newTickValues);\n        const smartTicks = newTickValues.map((val, i) => {\n            const text = formatter(val, i);\n            const tickSpace = smartLabel.getOriSize(text);\n\n            tickSpace.text = text;\n            return tickSpace;\n        });\n\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickValues () {\n        let labelDim = 0;\n        const {\n            orientation\n\n        } = this.config();\n        const {\n            tickValues\n        } = this.renderConfig();\n        const range = this.range();\n        const axis = this.axis();\n\n        const availableSpace = Math.abs(range[0] - range[1]);\n\n        const labelProps = this.axisComponentDimensions().largestTickDimensions;\n\n        if (tickValues) {\n            return tickValues;\n        }\n        labelDim = labelProps[orientation === BOTTOM || orientation === TOP ? 'width' : 'height'];\n\n        return getNumberOfTicks(availableSpace, labelDim, axis, this);\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.renderConfig().tickValues);\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline (tickText) {\n        const {\n            orientation\n        } = this.config();\n        const {\n            labels\n        } = this.renderConfig();\n\n        const {\n            rotation\n        } = labels;\n        const axis = this.axis();\n        const ticks = axis.tickValues();\n        const smartTicks = this.smartTicks();\n\n        if (smartTicks && smartTicks.length) {\n            const { width, height } = this.smartTicks()[0];\n\n            axis.tickTransform((d) => {\n                if (d === ticks[0]) {\n                    if ((orientation === LEFT || orientation === RIGHT)) {\n                        return `translate(0, -${(height) / 3}px)`;\n                    }\n\n                    if ((orientation === TOP || orientation === BOTTOM) && !rotation) {\n                        return `translate(${width / 2}px,  ${0}px)`;\n                    }\n                } return '';\n            });\n        }\n        return tickText;\n    }\n\n}\n","import SimpleAxis from './simple-axis';\nimport { BAND } from '../enums/scale-type';\nimport { calculateBandSpace, setOffset, getRotatedSpaces } from './helper';\n\nexport default class BandAxis extends SimpleAxis {\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BandAxis\n     */\n    static type () {\n        return BAND;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks = '';\n        let smartlabel;\n        const domain = this.domain();\n        const { labelManager } = this._dependencies;\n        const { padding } = this.config();\n        const { labels, tickValues } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        tickValues && this.axis().tickValues(tickValues);\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        // Update padding between plots\n        if (typeof padding === 'number') {\n            const paddingNormalized = Math.min(1, Math.max(0, padding));\n            this.scale().padding(paddingNormalized);\n        }\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    /**\n     *\n     *\n     * @memberof BandAxis\n     */\n    getTickValues () {\n        return this.axis().scale().domain();\n    }\n\n    formatTickValue (val) {\n        return this.valueParser()(val);\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(this.formatTickValue(val), val, i, ticks);\n        }\n        return () => val => this.formatTickValue(val);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    getUnitWidth () {\n        return this.scale().bandwidth();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        axis.tickSizeInner(showInnerTicks ? 6 : 0);\n        axis.tickSizeOuter(showOuterTicks ? 6 : 0);\n        return axis.tickSize();\n    }\n\n    invertExtent (v1, v2) {\n        return this.scale().invertExtent(v1, v2);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        const scale = this.scale();\n        const range = scale.range();\n        const reverse = range[0] > range[1];\n\n        const extent = this.invertExtent(v1, v2);\n        const p1 = scale(reverse ? extent[extent.length - 1] : extent[0]);\n        const p2 = scale(reverse ? extent[0] : extent[extent.length - 1]) + scale.bandwidth();\n        return [p1, p2];\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { TIME } from '../enums/scale-type';\nimport { calculateBandSpace, getRotatedSpaces, getValidDomain, setContinousAxisDomain, setOffset,\n    resetTickInterval } from './helper';\nimport { applyTickSkipping } from './space-setter';\n\n/**\n *\n *\n * @export\n * @class TimeAxis\n * @extends {SimpleAxis}\n */\nexport default class TimeAxis extends SimpleAxis {\n\n    constructor (...params) {\n        super(...params);\n        this._minDiff = Infinity;\n    }\n\n    /**\n     *\n     *\n     * @param {*} range\n     *\n     * @memberof TimeAxis\n     */\n    createScale (range) {\n        let scale = super.createScale(range);\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TimeAxis\n     */\n    static type () {\n        return TIME;\n    }\n\n    formatTickValue (val) {\n        return this.scale().tickFormat()(val);\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return (ticks) => {\n                const rawTicks = ticks.map(t => t.getTime());\n                return (val, i) => tickFormat(this.formatTickValue(val), val.getTime(), i, rawTicks);\n            };\n        }\n        return () => val => this.formatTickValue(val);\n    }\n\n     /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n        return super.getTickSize();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TimeAxis\n     */\n    getTickValues () {\n        return this.renderConfig().tickValues || this.scale().ticks();\n    }\n\n    /**\n     *\n     *\n     * @param {*} diff\n     *\n     * @memberof TimeAxis\n     */\n    minDiff (diff) {\n        this._minDiff = Math.min(this._minDiff, diff);\n        return this;\n    }\n\n    applyTickSkipping () {\n        applyTickSkipping(this);\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            setContinousAxisDomain(this, domainValue);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n\n            resetTickInterval(this, domainValue);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (...params) {\n        super.setAvailableSpace(...params);\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks;\n        let smartlabel;\n\n        const { labels, tickValues } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { labelManager } = this._dependencies;\n        const domain = this.getTickValues();\n\n        tickValues && this.axis().tickValues(tickValues);\n\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n\n        this.smartTicks(smartTicks);\n        return this;\n    }\n}\n","export const x11Colors = {\n    Pink: { hex: 'ffc0cb', rgb: '255,192,203' },\n    LightPink: { hex: 'ffb6c1', rgb: '255,182,193' },\n    HotPink: { hex: 'ff69b4', rgb: '255,105,180' },\n    DeepPink: { hex: 'ff1493', rgb: '255,20,147' },\n    PaleVioletRed: { hex: 'db7093', rgb: '219,112,147' },\n    MediumVioletRed: { hex: 'c71585', rgb: '199,21,133' },\n    LightSalmon: { hex: 'ffa07a', rgb: '255,160,122' },\n    Salmon: { hex: 'fa8072', rgb: '250,128,114' },\n    DarkSalmon: { hex: 'e9967a', rgb: '233,150,122' },\n    LightCoral: { hex: 'f08080', rgb: '240,128,128' },\n    IndianRed: { hex: 'cd5c5c', rgb: '205,92,92' },\n    Crimson: { hex: 'dc143c', rgb: '220,20,60' },\n    FireBrick: { hex: 'b22222', rgb: '178,34,34' },\n    DarkRed: { hex: '8b0000', rgb: '139,0,0' },\n    Red: { hex: 'ff0000', rgb: '255,0,0' },\n    OrangeRed: { hex: 'ff4500', rgb: '255,69,0' },\n    Tomato: { hex: 'ff6347', rgb: '255,99,71' },\n    Coral: { hex: 'ff7f50', rgb: '255,127,80' },\n    DarkOrange: { hex: 'ff8c00', rgb: '255,140,0' },\n    Orange: { hex: 'ffa500', rgb: '255,165,0' },\n    Gold: { hex: 'ffd700', rgb: '255,215,0' },\n    Yellow: { hex: 'ffff00', rgb: '255,255,0' },\n    LightYellow: { hex: 'ffffe0', rgb: '255,255,224' },\n    LemonChiffon: { hex: 'fffacd', rgb: '255,250,205' },\n    LightGoldenrodYellow: { hex: 'fafad2', rgb: '250,250,210' },\n    PapayaWhip: { hex: 'ffefd5', rgb: '255,239,213' },\n    Moccasin: { hex: 'ffe4b5', rgb: '255,228,181' },\n    PeachPuff: { hex: 'ffdab9', rgb: '255,218,185' },\n    PaleGoldenrod: { hex: 'eee8aa', rgb: '238,232,170' },\n    Khaki: { hex: 'f0e68c', rgb: '240,230,140' },\n    DarkKhaki: { hex: 'bdb76b', rgb: '189,183,107' },\n    Cornsilk: { hex: 'fff8dc', rgb: '255,248,220' },\n    BlanchedAlmond: { hex: 'ffebcd', rgb: '255,235,205' },\n    Bisque: { hex: 'ffe4c4', rgb: '255,228,196' },\n    NavajoWhite: { hex: 'ffdead', rgb: '255,222,173' },\n    Wheat: { hex: 'f5deb3', rgb: '245,222,179' },\n    BurlyWood: { hex: 'deb887', rgb: '222,184,135' },\n    Tan: { hex: 'd2b48c', rgb: '210,180,140' },\n    RosyBrown: { hex: 'bc8f8f', rgb: '188,143,143' },\n    SandyBrown: { hex: 'f4a460', rgb: '244,164,96' },\n    Goldenrod: { hex: 'daa520', rgb: '218,165,32' },\n    DarkGoldenrod: { hex: 'b8860b', rgb: '184,134,11' },\n    Peru: { hex: 'cd853f', rgb: '205,133,63' },\n    Chocolate: { hex: 'd2691e', rgb: '210,105,30' },\n    SaddleBrown: { hex: '8b4513', rgb: '139,69,19' },\n    Sienna: { hex: 'a0522d', rgb: '160,82,45' },\n    Brown: { hex: 'a52a2a', rgb: '165,42,42' },\n    Maroon: { hex: '800000', rgb: '128,0,0' },\n    DarkOliveGreen: { hex: '556b2f', rgb: '85,107,47' },\n    Olive: { hex: '808000', rgb: '128,128,0' },\n    OliveDrab: { hex: '6b8e23', rgb: '107,142,35' },\n    YellowGreen: { hex: '9acd32', rgb: '154,205,50' },\n    LimeGreen: { hex: '32cd32', rgb: '50,205,50' },\n    Lime: { hex: '00ff00', rgb: '0,255,0' },\n    LawnGreen: { hex: '7cfc00', rgb: '124,252,0' },\n    Chartreuse: { hex: '7fff00', rgb: '127,255,0' },\n    GreenYellow: { hex: 'adff2f', rgb: '173,255,47' },\n    SpringGreen: { hex: '00ff7f', rgb: '0,255,127' },\n    MediumSpringGreen: { hex: '00fa9a', rgb: '0,250,154' },\n    LightGreen: { hex: '90ee90', rgb: '144,238,144' },\n    PaleGreen: { hex: '98fb98', rgb: '152,251,152' },\n    DarkSeaGreen: { hex: '8fbc8f', rgb: '143,188,143' },\n    MediumSeaGreen: { hex: '3cb371', rgb: '60,179,113' },\n    SeaGreen: { hex: '2e8b57', rgb: '46,139,87' },\n    ForestGreen: { hex: '228b22', rgb: '34,139,34' },\n    Green: { hex: '008000', rgb: '0,128,0' },\n    DarkGreen: { hex: '006400', rgb: '0,100,0' },\n    MediumAquamarine: { hex: '66cdaa', rgb: '102,205,170' },\n    Aqua: { hex: '00ffff', rgb: '0,255,255' },\n    Cyan: { hex: '00ffff', rgb: '0,255,255' },\n    LightCyan: { hex: 'e0ffff', rgb: '224,255,255' },\n    PaleTurquoise: { hex: 'afeeee', rgb: '175,238,238' },\n    Aquamarine: { hex: '7fffd4', rgb: '127,255,212' },\n    Turquoise: { hex: '40e0d0', rgb: '64,224,208' },\n    MediumTurquoise: { hex: '48d1cc', rgb: '72,209,204' },\n    DarkTurquoise: { hex: '00ced1', rgb: '0,206,209' },\n    LightSeaGreen: { hex: '20b2aa', rgb: '32,178,170' },\n    CadetBlue: { hex: '5f9ea0', rgb: '95,158,160' },\n    DarkCyan: { hex: '008b8b', rgb: '0,139,139' },\n    Teal: { hex: '008080', rgb: '0,128,128' },\n    LightSteelBlue: { hex: 'b0c4de', rgb: '176,196,222' },\n    PowderBlue: { hex: 'b0e0e6', rgb: '176,224,230' },\n    LightBlue: { hex: 'add8e6', rgb: '173,216,230' },\n    SkyBlue: { hex: '87ceeb', rgb: '135,206,235' },\n    LightSkyBlue: { hex: '87cefa', rgb: '135,206,250' },\n    DeepSkyBlue: { hex: '00bfff', rgb: '0,191,255' },\n    DodgerBlue: { hex: '1e90ff', rgb: '30,144,255' },\n    CornflowerBlue: { hex: '6495ed', rgb: '100,149,237' },\n    SteelBlue: { hex: '4682b4', rgb: '70,130,180' },\n    RoyalBlue: { hex: '4169e1', rgb: '65,105,225' },\n    Blue: { hex: '0000ff', rgb: '0,0,255' },\n    MediumBlue: { hex: '0000cd', rgb: '0,0,205' },\n    DarkBlue: { hex: '00008b', rgb: '0,0,139' },\n    Navy: { hex: '000080', rgb: '0,0,128' },\n    MidnightBlue: { hex: '191970', rgb: '25,25,112' },\n    Lavender: { hex: 'e6e6fa', rgb: '230,230,250' },\n    Thistle: { hex: 'd8bfd8', rgb: '216,191,216' },\n    Plum: { hex: 'dda0dd', rgb: '221,160,221' },\n    Violet: { hex: 'ee82ee', rgb: '238,130,238' },\n    Orchid: { hex: 'da70d6', rgb: '218,112,214' },\n    Fuchsia: { hex: 'ff00ff', rgb: '255,0,255' },\n    Magenta: { hex: 'ff00ff', rgb: '255,0,255' },\n    MediumOrchid: { hex: 'ba55d3', rgb: '186,85,211' },\n    MediumPurple: { hex: '9370db', rgb: '147,112,219' },\n    BlueViolet: { hex: '8a2be2', rgb: '138,43,226' },\n    DarkViolet: { hex: '9400d3', rgb: '148,0,211' },\n    DarkOrchid: { hex: '9932cc', rgb: '153,50,204' },\n    DarkMagenta: { hex: '8b008b', rgb: '139,0,139' },\n    Purple: { hex: '800080', rgb: '128,0,128' },\n    Indigo: { hex: '4b0082', rgb: '75,0,130' },\n    DarkSlateBlue: { hex: '483d8b', rgb: '72,61,139' },\n    SlateBlue: { hex: '6a5acd', rgb: '106,90,205' },\n    MediumSlateBlue: { hex: '7b68ee', rgb: '123,104,238' },\n    White: { hex: 'ffffff', rgb: '255,255,255' },\n    Snow: { hex: 'fffafa', rgb: '255,250,250' },\n    Honeydew: { hex: 'f0fff0', rgb: '240,255,240' },\n    MintCream: { hex: 'f5fffa', rgb: '245,255,250' },\n    Azure: { hex: 'f0ffff', rgb: '240,255,255' },\n    AliceBlue: { hex: 'f0f8ff', rgb: '240,248,255' },\n    GhostWhite: { hex: 'f8f8ff', rgb: '248,248,255' },\n    WhiteSmoke: { hex: 'f5f5f5', rgb: '245,245,245' },\n    Seashell: { hex: 'fff5ee', rgb: '255,245,238' },\n    Beige: { hex: 'f5f5dc', rgb: '245,245,220' },\n    OldLace: { hex: 'fdf5e6', rgb: '253,245,230' },\n    FloralWhite: { hex: 'fffaf0', rgb: '255,250,240' },\n    Ivory: { hex: 'fffff0', rgb: '255,255,240' },\n    AntiqueWhite: { hex: 'faebd7', rgb: '250,235,215' },\n    Linen: { hex: 'faf0e6', rgb: '250,240,230' },\n    LavenderBlush: { hex: 'fff0f5', rgb: '255,240,245' },\n    MistyRose: { hex: 'ffe4e1', rgb: '255,228,225' },\n    Gainsboro: { hex: 'dcdcdc', rgb: '220,220,220' },\n    LightGray: { hex: 'd3d3d3', rgb: '211,211,211' },\n    Silver: { hex: 'c0c0c0', rgb: '192,192,192' },\n    DarkGrey: { hex: 'a9a9a9', rgb: '169,169,169' },\n    Grey: { hex: '808080', rgb: '128,128,128' },\n    DimGrey: { hex: '696969', rgb: '105,105,105' },\n    LightSlateGrey: { hex: '778899', rgb: '119,136,153' },\n    SlateGrey: { hex: '708090', rgb: '112,128,144' },\n    DarkSlateGrey: { hex: '2f4f4f', rgb: '47,79,79' },\n    Black: { hex: '000000', rgb: '0,0,0' }\n};\n","import {\n    LINEAR\n} from '../enums/constants';\n/**\n * Set of default colors\n */\nexport const palette = [\n    '#086bb6',\n    '#f37d45',\n    '#f5ce02',\n    '#67bda0',\n    '#c54e4e',\n    '#ae70af'\n];\n\nexport const DEFAULT_GRADIENT_COLOR = '#eaeaea';\n\nexport const DEFAULT_CONFIG = {\n    range: palette,\n    value: palette[0],\n    step: false,\n    stops: 5,\n    type: LINEAR\n};\n","import { mergeRecursive, detectColor, hexToHsv, rgbToHsv } from 'muze-utils';\nimport { x11Colors } from './color-maps';\nimport { palette, DEFAULT_GRADIENT_COLOR } from './defaults';\nimport { LINEAR, RGB, HEX, HSL, HSLA } from '../enums/constants';\n\nexport const getHslString = hslArr => `hsla(${hslArr[0] * 360},${hslArr[1] * 100}%,${hslArr[2] * 100}%,\\\n${hslArr[3] || 1})`;\n\nexport const convertToXllString = baseString => (baseString.split(' ') || [])\n                .reduce((x, e) => `${x}${e.charAt(0).toUpperCase()}${e.slice(1)}`, '');\n\nexport const getActualHslColor = (e, paletteColor) => {\n    let color = '';\n    if (typeof e === 'string') {\n        e = e.replace(/ /g, '');\n        e = e.toLowerCase();\n        if (detectColor(e) === HSL || detectColor(e) === HSLA) {\n            color = e.match(/(\\d+(\\.\\d+)?)/g);\n            color = [color[0] / 360, color[1] / 100, color[2] / 100, color[3] || 1];\n        } else if (detectColor(e) === HEX) {\n            color = hexToHsv(e);\n        } else if (detectColor(e) === RGB) {\n            const col = e.substring(e.indexOf('(') + 1, e.lastIndexOf(')')).split(/,\\s*/);\n            color = rgbToHsv(...col);\n        } else if (x11Colors[convertToXllString(e)]) {\n            color = rgbToHsv(...x11Colors[convertToXllString(e)].rgb.split(','));\n        }\n    } else if (!(e instanceof Array)) {\n        color = rgbToHsv(paletteColor);\n    } else {\n        color = e;\n    }\n    return color;\n};\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => {\n            const defCon = mergeRecursive({}, context.constructor.defaultConfig());\n            if (config.type === LINEAR) {\n                config.range = config.range || [defCon.range[0]];\n                config.range = config.range.length > 1 ? config.range : [DEFAULT_GRADIENT_COLOR, ...config.range];\n            }\n            const oldConfig = mergeRecursive(defCon, context.config());\n            const newConfig = mergeRecursive(oldConfig, config);\n\n            if (newConfig.range instanceof Array) {\n                newConfig.range = newConfig.range.map((e, i) => getActualHslColor(e, palette[i]));\n                newConfig.stops = config.stops || newConfig.range.length;\n            }\n            newConfig.value = getActualHslColor(newConfig.value, newConfig.value);\n            return newConfig;\n        }\n    },\n    domain: {},\n    scale: {},\n    uniqueValues: {}\n};\n","import { InvalidAwareTypes, getObjProp } from 'muze-utils';\n\nexport const treatNullMeasures = (domainVal, scaledVal, minDomainScaledVal) => {\n    if (domainVal instanceof InvalidAwareTypes) {\n        return minDomainScaledVal;\n    }\n    return scaledVal;\n};\n\nexport const resolveAxisConfig = (propVal, defaultVal, context) => {\n    const constructor = getObjProp(propVal, 'constructor');\n    switch (constructor) {\n    case Function:\n        return propVal(defaultVal, context);\n    case Array:\n        return propVal;\n    default:\n        return defaultVal;\n    }\n};\n","import { numberInterpolator, piecewiseInterpolator, hslInterpolator, sanitizeDomainWhenEqual } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, SEQUENTIAL, ORDINAL, QUANTILE } from '../enums/scale-type';\nimport { getHslString } from './props';\nimport { treatNullMeasures } from '../helper';\n\nconst getStops = (domain, stops) => {\n    let newStops = [];\n\n    if (stops instanceof Array) {\n        newStops = stops.slice().sort();\n        newStops = [...new Set([domain[0], ...stops, domain[1]])].sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i <= stops; i++) {\n            newStops[i] = interpolator(i / stops);\n        }\n    }\n\n    if (newStops[0] < domain[0]) {\n        newStops.shift();\n    }\n    return { domain, newStops };\n};\n\nconst rangeStops = (newStopsLength, range) => {\n    let newRange = [];\n    const maxRangeLength = Math.min(range.length, 18);\n\n    if (newStopsLength > maxRangeLength) {\n        const interpolator = piecewiseInterpolator()(hslInterpolator(), range.map(e => getHslString(e)));\n        for (let i = 0; i < newStopsLength; i++) {\n            newRange[i] = interpolator(i / (newStopsLength - 1));\n        }\n    } else {\n        newRange = range.slice(0, newStopsLength);\n    }\n    return { newRange };\n};\n\n/**\n*\n*\n* @param {*} domain\n*\n*/\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomainMeasure = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { domain, uniqueVals, scaleDomain: [0, 1], range };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain, nice: true, range };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} stops\n *\n */\nconst steppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, stops);\n    const { newRange } = rangeStops(newStops.length - 1, range);\n\n    return { uniqueVals, domain: newStops, nice: true, range: newRange };\n};\n\nconst continousSteppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(sanitizeDomainWhenEqual(domain), range.length - 1);\n    const hslRange = range.map(e => getHslString(e));\n    return { uniqueVals, domain: newStops, nice: true, range: hslRange };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst uniqueRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    return scale(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst indexedRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n\n    return treatNullMeasures(domainValue, scale(numVal), scale(0));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) => treatNullMeasures(domainValue, scale(domainValue),\n    scale(domain[0]));\n\n/**\n *\n *\n * @param {*} stops\n */\nconst strategies = () => ({\n    [`${CONTINOUS}-${CONTINOUS}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomain,\n        value: () => uniqueRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${ORDINAL}`]: {\n        scale: ORDINAL,\n        domainRange: () => normalDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}-${ORDINAL}`]: {\n        scale: LINEAR,\n        domainRange: () => continousSteppedDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${ORDINAL}`]: {\n        scale: QUANTILE,\n        domainRange: () => steppedDomain,\n        value: () => normalRange\n\n    }\n});\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} stops\n */\nexport const strategyGetter = (domainType, rangeType, schemeType) =>\n    strategies()[`${domainType}-${rangeType}-${schemeType || ''}`];\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters, rgbToHsv } from 'muze-utils';\nimport { createScale, getScheme, getSchemeType } from '../scale-creator';\nimport { CONTINOUS, DISCRETE, COLOR } from '../enums/constants';\nimport { strategyGetter } from './color-strategy';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { PROPS, getHslString, getActualHslColor } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ColorAxis {\n\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} config input parameters.\n    * @param {Object | undefined} params.range Type of color range.\n    * @param {string} params.name the label to show on axis.\n    * @param {string} params.type The type of scale to handle.\n    * @memberof ColorAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n        this.config(config);\n\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = (this._config.type === 'linear' && !this._config.step) ? CONTINOUS : DISCRETE;\n\n        this._schemeType = getSchemeType(this._config.range);\n\n        this._colorStrategy = this.setColorStrategy(this._domainType, this._rangeType, this._schemeType);\n        this._scale = this.createScale(this._colorStrategy);\n\n        this._id = getUniqueId();\n\n        this.updateDomain(config.domain);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return COLOR;\n    }\n\n    /**\n     *\n     *\n     * @param {*} colorStrategy\n     *\n     * @memberof ColorAxis\n     */\n    createScale (colorStrategy) {\n        const { range } = this.config();\n        if (range && typeof (range) === 'string') {\n            return getScheme(range);\n        }\n        return createScale({\n            type: colorStrategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setColorStrategy (domainType, rangeType, schemeType) {\n        return strategyGetter(domainType, rangeType, schemeType);\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getHslString (hslColorArray) {\n        return getHslString(hslColorArray);\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getColor (domainVal) {\n        return this.getHslString(this.getRawColor(domainVal));\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getRawColor (domainVal) {\n        if (this.domain() && domainVal !== undefined) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const color = this._colorStrategy.value(range)(domainVal, scale, this.domain(), this.uniqueValues());\n            if (color) {\n                if (typeof color === 'string') {\n                    const col = color.substring(color.indexOf('(') + 1, color.lastIndexOf(')')).split(/,\\s*/);\n                    return rgbToHsv(...col);\n                }\n                return [...color];\n            }\n        }\n        return [...this.config().value];\n    }\n\n    /**\n     *\n     *\n     * @param {*} [domain=[]]\n     *\n     * @memberof ColorAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const domainRangeFn = this._colorStrategy.domainRange();\n            const scaleInfo = domainRangeFn(domain, this.config().stops, range);\n\n            this.domain(scaleInfo.domain);\n            scaleInfo.range && this.scale().range(scaleInfo.range);\n            this.uniqueValues(scaleInfo.uniqueVals);\n            this.scale().domain(scaleInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            config: this.config()\n        };\n    }\n\n    transformColor (color, transformationArr) {\n        const h = color[0] * 360;\n        const s = color[1] * 100;\n        const l = color[2] * 100;\n        const a = color[3] || 1;\n        const newH = h + transformationArr[0];\n        const newS = s + transformationArr[1];\n        const newL = l + transformationArr[2];\n        const newA = a + transformationArr[3] || 0;\n\n        return { color: `hsla(${newH},${newS}%,${newL}%,${newA})`, hsla: [newH / 360, newS / 100, newL / 100, newA] };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n\n    getHslArray (color) {\n        return getActualHslColor(color);\n    }\n\n}\n","export const DEFAULT_CONFIG = {\n    value: 36,\n    range: [36, 1000]\n};\n","import { numberInterpolator, piecewiseInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, THRESHOLD } from '../enums/scale-type';\nimport { treatNullMeasures } from '../helper';\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} intervals\n *\n */\nconst steppedDomain = (domain, intervals) => {\n    let newIntervals = [];\n    if (intervals instanceof Array) {\n        newIntervals = intervals.slice().sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i < intervals; i++) {\n            newIntervals[i] = interpolator(i / (intervals - 1));\n        }\n    }\n    if (newIntervals[0] < domain[0]) {\n        newIntervals.shift();\n    }\n    const retDomain = newIntervals;\n    return { uniqueVals: newIntervals, domain: retDomain, nice: true };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst discreteRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n    const interpolator = numberInterpolator()(...scale.range());\n    return treatNullMeasures(domainValue, interpolator(numVal), interpolator(domain[0]));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst pieceWiseRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    const fn = piecewiseInterpolator()(numberInterpolator(), [...scale.range()]);\n    return fn(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) =>\n    treatNullMeasures(domainValue, scale(domainValue), scale(domain[0]));\n\n/**\n *\n *\n * @param {*} intervals\n */\nconst strategies = {\n    [`${DISCRETE}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: indexedDomain,\n        range: pieceWiseRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: normalDomain,\n        range: normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}`]: {\n        scale: THRESHOLD,\n        domain: steppedDomain,\n        range: discreteRange\n    }\n};\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} intervals\n */\nexport const strategyGetter = (domainType, rangeType) =>\n     strategies[`${domainType}-${rangeType}`];\n","export const PROPS = {\n    config: {},\n    domain: {\n        sanitization: (context, value) => {\n            context.scale().domain(value);\n            return value;\n        }\n    },\n    range: {},\n    scale: {},\n    uniqueValues: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SIZE, CONTINOUS, DISCRETE } from '../enums/constants';\nimport { strategyGetter } from './size-strategy';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class SizeAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @param {Object} config input parameters.\n     * @memberof SizeAxis\n     */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig(), config);\n        // @todo: Will use configuration override using scale decorator\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = CONTINOUS;\n\n        this._sizeStrategy = this.setStrategy(this._domainType, this._rangeType);\n        this._scale = this.createScale(this._sizeStrategy);\n        this._range = this._config.range;\n\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setStrategy (domainType, rangeType) {\n        return strategyGetter(domainType, rangeType);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SizeAxis\n     */\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SIZE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof SizeAxis\n     */\n    getSize (domainVal = 0) {\n        let sizeVal = 1;\n        const {\n            value\n        } = this.config();\n        const scale = this.scale();\n        const domain = this.domain() || [1, 1];\n\n        if (!scale || domain[0] === domain[1]) {\n            sizeVal = value;\n        } else {\n            return this._sizeStrategy.range(domainVal, scale, this.domain(), this.uniqueValues());\n        }\n        return sizeVal;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof SizeAxis\n     */\n    updateDomain (domain) {\n        if (domain) {\n            const domainFn = this._sizeStrategy.domain;\n\n            const domainInfo = domainFn(domain, this.config().intervals);\n\n            this.domain(domainInfo.domain);\n            this.uniqueValues(domainInfo.uniqueVals);\n\n            this.scale().domain(domainInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","export const DEFAULT_CONFIG = {\n    generator: null,\n    value: 'circle',\n    range: ['circle', 'diamond', 'star', 'cross', 'square', 'wye', 'triangle']\n};\n","export const PROPS = {\n    config: {},\n    domain: {},\n    scale: {},\n    uniqueValues: {},\n    generator: {}\n};\n\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, getSymbol, generateGetterSetters, mergeRecursive, InvalidAwareTypes } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SHAPE } from '../enums/constants';\nimport { shapeGenerator } from './helper';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ShapeAxis {\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} params input parameters.\n    * @param {Object | undefined} params.range Type of color scheme.\n    * @memberof ShapeAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(this._config, config);\n\n        this._scale = createScale({\n            type: 'ordinal',\n            range: this._config.range\n        });\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SHAPE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} value\n     *\n     * @memberof ShapeAxis\n     */\n    getShape (value) {\n        if (!this.scale() || !this.domain() || !value || value instanceof InvalidAwareTypes) {\n            return this.config().value;\n        }\n\n        if (this._generatedShapes) {\n            return this._generatedShapes[value];\n        }\n\n        const shapeType = this.scale()(value);\n        if (shapeType === 'string') {\n            return getSymbol(shapeType);\n        }\n\n        return shapeType;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof ShapeAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            this.uniqueValues(domain);\n            this.domain(domain);\n            this.scale().domain(domain);\n\n            if (this.config().generator) {\n                this._generatedShapes = shapeGenerator(domain, this.config().generator);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.config().range,\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","/**\n *\n *\n * @param {*} domain\n * @param {*} generatorFn\n *\n */\nexport const shapeGenerator = (domain, generatorFn) => {\n    const generatedShapes = {};\n    domain.forEach((value) => {\n        generatedShapes[value] = generatorFn(value);\n    });\n    return generatedShapes;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => mergeRecursive(context.config(), config),\n        preset: (context, config) => {\n            const { range, domain } = config;\n            range && context.range(range);\n            domain && context.domain(domain);\n        }\n    },\n    domain: {},\n    range: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, Symbols, mergeRecursive, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_ANGLE_DOMAIN } from '../enums/constants';\nimport { PROPS } from './props';\nimport { resolveAxisConfig } from '../helper';\n\nconst { pie } = Symbols;\n\nconst createAngleValues = (context) => {\n    const angleData = context._angleFn(context._domain);\n    angleData.forEach((v) => {\n        v.startAngle -= Math.PI / 2;\n        v.endAngle -= Math.PI / 2;\n    });\n    context._angleValues = angleData.reduce((values, d) => {\n        const key = d.data;\n        !values[key] && (values[key] = []);\n        values[key].push(d);\n        return values;\n    }, {});\n};\n\n/**\n* This class is used to instantiate a AngleAxis.\n* @class AngleAxis\n*/\nexport default class AngleAxis {\n\n    /**\n     * Creates an instance of AngleAxis.\n     * @param {Object} config input parameters.\n     * @memberof AngleAxis\n     */\n    constructor (config = {}) {\n        this._id = getUniqueId();\n        generateGetterSetters(this, PROPS);\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n        this.config(config);\n        this._range = [0, 360];\n        this._angleFn = pie()\n                .value(d => (typeof d === 'string' ? 1 : d))\n                .sortValues(null);\n        this._angleValues = {};\n    }\n\n    static defaultConfig () {\n        return {};\n    }\n\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    getScaleValue (domainVal) {\n        return this._angleValues[domainVal];\n    }\n\n    padAngle (angle) {\n        this._angleFn = this._angleFn.padAngle(angle);\n    }\n\n    domain (...domainVal) {\n        if (domainVal.length) {\n            const { domain: customDomain } = this.config();\n            const domain = domainVal[0].length ? domainVal[0] : DEFAULT_ANGLE_DOMAIN;\n            this._domain = resolveAxisConfig(customDomain, domain, this);\n            createAngleValues(this);\n            return this;\n        }\n        return this._domain;\n    }\n\n    range (...range) {\n        if (range.length) {\n            const { range: customRange } = this.config();\n            this._range = resolveAxisConfig(customRange, range[0], this);\n            const domain = this.domain();\n            const [startAngle, endAngle] = this._range;\n            this._angleFn\n                    .startAngle((startAngle / 180) * Math.PI)\n                    .endAngle(Math.PI * endAngle / 180);\n            if (domain && domain.length) {\n                createAngleValues(this);\n            }\n            return this;\n        }\n        return this._range;\n    }\n}\n","/**\n * This file exports constants that are used as enums in the\n *  crosstab group implementation.\n */\n/**\n * Width of the crosstab.\n */\nexport const X = 'x';\n/**\n * Width of the crosstab.\n */\nexport const Y = 'y';\n/**\n * Width of the crosstab.\n */\nexport const WIDTH = 'width';\n\n/**\n * Height of the crosstab.\n */\nexport const HEIGHT = 'height';\n\n/**\n * Field referring to object storing measurement configuration.\n */\nexport const MEASUREMENT = 'measurement';\n\n/**\n * Field referring to object storing configuration properties.\n */\nexport const CONFIG = 'config';\n\n/**\n * Width of visual unit in crosstab.\n */\nexport const MIN_UNIT_WIDTH = 'minUnitWidth';\n\n/**\n * Height of visual unit.\n */\nexport const MIN_UNIT_HEIGHT = 'minUnitHeight';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSIONS = 'dimensions';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURES = 'measures';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSION = 'dimension';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURE = 'measure';\n\n/**\n * Flag to specify if model should be pivoted.\n */\nexport const PIVOT = 'pivot';\n\n/**\n * Flag to specify format\n */\nexport const FORMAT = 'format';\n\n/**\n * Mount point where the variable will be hosted\n */\nexport const MOUNT = 'mount';\n\n/**\n * Data update flag\n */\nexport const HAS_DATA_UPDATED = 'hasDataUpdated';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROWS = 'rows';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMNS = 'columns';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COL = 'col';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROW = 'row';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMN = 'column';\n\n/**\n * Field referring to object storing color field\n */\nexport const COLOR = 'color';\n\n/**\n * Field referring to object storing shape field\n */\nexport const SHAPE = 'shape';\n\n/**\n * Field referring to object storing size field\n */\nexport const SIZE = 'size';\n\n/**\n * Field referring to object storing detail field\n */\nexport const DETAIL = 'detail';\n\n/**\n * Field referring to object storing set of layers\n */\nexport const LAYERS = 'layers';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const TRANSFORM = 'transform';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const ORDINAL = 'ordinal';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const LINEAR = 'linear';\n/**\n * Field referring to object storing the transforms\n */\nexport const LEFT = 'left';\n/**\n * Field referring to object storing the transforms\n */\nexport const RIGHT = 'right';\n/**\n * Field referring to object storing the transforms\n */\nexport const TOP = 'top';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTTOM = 'bottom';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const RETINAL = 'retinal';\n/**\n * Field referring to object storing the transforms\n */\nexport const CELL = 'cell';\n/**\n * Field referring to object storing the transforms\n */\nexport const X_AXES = 'xAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const Y_AXES = 'yAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const ENTRY_CELLS = 'entryCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const INITIALIZED = 'initialized';\n/**\n * Field referring to object storing the transforms\n */\nexport const EXIT_CELLS = 'exitCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const AXIS = 'axis';\n/**\n * Field referring to object storing the transforms\n */\nexport const UNIT = 'unit';\n/**\n * Field referring to object storing the transforms\n */\nexport const UPDATED = 'updated';\n/**\n * Field referring to object storing the transforms\n */\nexport const BEFORE_UPDATE = 'beforeupdate';\n/**\n * Field referring to object storing the transforms\n */\nexport const VALUE_MATRIX = 'valueMatrix';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET_HEADERS = 'facet-headers';\n/**\n * Field referring to object storing the transforms\n */\nexport const RADIUS = 'radius';\n/**\n * Field referring to object storing the transforms\n */\nexport const ANGLE = 'angle';\n\nexport const ANGLE0 = 'angle0';\n/**\n * Field referring to object storing the transforms\n */\nexport const ARC = 'arc';\n/**\n * Field referring to object storing the transforms\n */\nexport const CATEGORICAL = 'categorical';\n/**\n * Field referring to object storing the transforms\n */\nexport const TEMPORAL = 'temporal';\n/**\n * Field referring to object storing the transforms\n */\nexport const BAR = 'bar';\n/**\n * Field referring to object storing the transforms\n */\nexport const LINE = 'line';\n/**\n * Field referring to object storing the transforms\n */\nexport const POINT = 'point';\n/**\n * Field referring to object storing the transforms\n */\nexport const PRIMARY = 'Primary';\n/**\n * Field referring to object storing the transforms\n */\nexport const SECONDARY = 'Secondary';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTH = 'both';\n/**\n * Field referring to object storing the transforms\n */\nexport const INTERACTION = 'interaction';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_LINES = 'gridLines';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_BANDS = 'gridBands';\n/**\n * Field referring to object storing the transforms\n */\nexport const HEADER = 'header';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET = 'facet';\n/**\n * Ordering type\n */\nexport const ASCENDING = 'asc';\n/**\n * Ordering type\n */\nexport const DESCENDING = 'desc';\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, mergeRecursive, generateGetterSetters, sanitizeDomainWhenEqual } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { LINEAR } from '../../../visual-group/src/enums/constants';\nimport { PROPS } from './props';\nimport { resolveAxisConfig } from '../helper';\n\nconst adjustDomain = (context) => {\n    const minOuterRadius = context.config().minOuterRadius;\n    const domain = context._domain;\n    if (context._range.length) {\n        const scale = context._scale;\n        const value = scale.invert(minOuterRadius) - scale.invert(0);\n        context._domain = [domain[0] - value, domain[1]];\n        scale.domain(context._domain);\n    }\n};\n\n/**\n* This class is used to instantiate a RadiusAxis.\n* @class RadiusAxis\n*/\nexport default class RadiusAxis {\n\n    /**\n     * Creates an instance of RadiusAxis.\n     * @param {Object} config input parameters.\n     * @memberof RadiusAxis\n     */\n    constructor (config = {}) {\n        this._id = getUniqueId();\n        generateGetterSetters(this, PROPS);\n        this._range = [];\n        this._radiusFactor = 1;\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n        this.config(config);\n        this._scale = this.createScale({\n            scale: LINEAR\n        });\n    }\n\n    static defaultConfig () {\n        return {\n            padding: [0, 1],\n            minOuterRadius: 10\n        };\n    }\n\n    config (...params) {\n        if (params.length) {\n            const config = mergeRecursive(this.config(), params[0]);\n            this._config = config;\n            return this;\n        }\n        return this._config;\n    }\n\n    createScale (strategy) {\n        return createScale({\n            type: strategy.scale,\n            range: this.range()\n        });\n    }\n\n    domain (...domainVal) {\n        if (domainVal.length) {\n            const { domain: customDomain } = this.config();\n            let domain = resolveAxisConfig(customDomain, domainVal[0], this);\n            domain = sanitizeDomainWhenEqual(domain);\n            this._scale.domain(domain);\n            this._domain = domain;\n            adjustDomain(this);\n        }\n        return this._domain;\n    }\n\n    getInnerRadius (domainVal) {\n        if (domainVal === undefined) {\n            return this.range()[0];\n        }\n        return this._scale(domainVal);\n    }\n\n    getOuterRadius (domainVal) {\n        if (domainVal === undefined) {\n            return this.range()[1];\n        }\n        const radius = this._scale(domainVal) * this._radiusFactor;\n        return radius;\n    }\n\n    range (...range) {\n        if (range.length) {\n            const { padding, range: customRange } = this.config();\n            const sanitizedRange = range[0].map((v, i) => v + (i ? -padding[i] : padding[i]));\n            const rangeVal = resolveAxisConfig(customRange, sanitizedRange, this);\n            this._range = rangeVal;\n            this._scale.range(rangeVal);\n            adjustDomain(this);\n        }\n        return this._range;\n    }\n\n    setRadiusFactor (val) {\n        this._radiusFactor = val;\n        return this;\n    }\n}\n","import * as ScaleType from './enums/scale-type';\n\nconst DATA_TYPES = {\n    DIMENSION: 'dimension',\n    CATEGORICAL: 'categorical',\n    MEASURE: 'measure',\n    TEMPORAL: 'temporal'\n};\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    [DATA_TYPES.DIMENSION]: ScaleType.BAND,\n    [DATA_TYPES.MEASURE]: ScaleType.LINEAR,\n    [DATA_TYPES.TEMPORAL]: ScaleType.TIME\n};\n\n","import { nestCollection, InvalidAwareTypes } from 'muze-utils';\n\n/**\n * Create multiple datasets from a single dataset by grouping the data using\n * a dimensional field.\n * @param {Array} schema Name and type of fields are stored in schema\n * @param {Array} data Data array\n * @param {Object} config Configuration object\n * @return {Array} Grouped data array\n */\nexport default (schema, data, config) => {\n    const groupBy = config.groupBy instanceof Array ? config.groupBy : [config.groupBy];\n    const groupByIndices = groupBy.map(fieldName => schema.findIndex(d => d.name === fieldName));\n\n    if (groupByIndices.find(d => d === -1) !== undefined) {\n        throw new Error(`Groupby field ${groupBy} not found in schema`);\n    }\n\n    const groupedData = nestCollection({\n        keys: groupByIndices,\n        data\n    });\n\n    groupedData.forEach((d) => {\n        const key = d.key;\n        if (InvalidAwareTypes.isInvalid(key)) {\n            d.key = InvalidAwareTypes.getInvalidType(key);\n        }\n    });\n    return groupedData;\n};\n","/**\n * @module Transform\n * This file exports a function that is used to implement\n * the identity transform\n */\n /* eslint no-unused-vars: 0 */\n /**\n  * This function accepts data and returns the data unchanged.\n  * @param {Object} schema The schema.\n  * @param {Array} data The data array.\n  * @param {Object} config The config object.\n  * @return {Array} The unchanged data.\n  */\n function identityTransform (schema, data, config) {\n     return data;\n }\n\n export default identityTransform;\n","/**\n * @module Transform\n * This file exports the transform factory.\n */\nimport * as TransformType from '../enums/transform-type';\nimport identity from '../identity-transform';\nimport group from '../group-transform';\nimport stack from '../stack-transform';\n\n/* istanbul ignore next */\nconst transformMap = {\n    [TransformType.IDENTITY]: identity,\n    [TransformType.GROUP]: group,\n    [TransformType.STACK]: stack\n};\n\n/**\n * This function is used to retirn a transform associated\n * with the given type.\n *\n * @param {string} type The type of the transform.\n * @return {Function} The transform function.\n */\nfunction transformFactory (type) {\n    const transform = transformMap[type];\n    if (typeof transform !== 'function') {\n        throw new Error('Invalid transform type supplied.');\n    }\n    return transform;\n}\n\nexport default transformFactory;\n","/**\n * @module Transform\n * This module exports constants that are used to reference transforms in\n * a consistent manner throughout the project.\n */\n/* eslint one-var: 0 */\n export const IDENTITY = 'identity';\n export const GROUP = 'group';\n export const STACK = 'stack';\n export const FRACTURE = 'fracture';\n","import { stack } from 'muze-utils';\n\nimport group from '../group-transform';\n/*\n    Normalize the data to a form which can be given to d3 stack for stacking the data\n    ['Product', 'Sales', 'Region'],\n    0 ['A', 2000, 'North'],\n    1 ['A', 3000, 'South'],\n    2 ['B', 3000, 'South'],\n    3 ['B', 2000, 'North'],\n    4 ['C', 3000, 'South'],\n    5 ['C', 2000, 'North']\n            |\n            |\n    ['Product', 'North', 'South'],\n    ['A', 2000, 3000],\n    ['B', 2000, 3000],\n    ['C', 2000, 3000]\n*/\n// eslint-disable-next-line require-jsdoc\nconst normalizeData = (data, schema, valueField, uniqueField, groupBy) => {\n    const groupedData = group(schema, data, {\n        groupBy: uniqueField\n    });\n    const uniqueFieldIndex = schema.findIndex(d => d.name === uniqueField);\n    const valueFieldIndex = schema.findIndex(d => d.name === valueField);\n    const seriesKeyIndex = schema.findIndex(d => d.name === groupBy);\n    const seriesKeys = data.map(d => d[seriesKeyIndex]).filter((item, pos, arr) => arr.indexOf(item) === pos).sort();\n    const fieldNames = schema.reduce((acc, obj, i) => {\n        acc[i] = obj.name;\n        return acc;\n    }, {});\n    const dataArr = groupedData.map((arr) => {\n        const tuples = {};\n        const rowObj = arr.values.reduce((acc, row) => {\n            acc = row.reduce((obj, value, i) => {\n                if (i === seriesKeyIndex) {\n                    obj[value] = row[valueFieldIndex];\n                    tuples[value] = row;\n                } else if (i !== valueFieldIndex) {\n                    obj[fieldNames[i]] = value;\n                }\n                return obj;\n            }, acc);\n            return acc;\n        }, {});\n        rowObj._tuple = tuples;\n            // Set missing values field to zero value\n        seriesKeys.forEach((seriesKey) => {\n            if (rowObj[seriesKey] === undefined) {\n                rowObj[seriesKey] = 0;\n                const newArr = new Array(arr.values[0].length);\n                newArr[uniqueFieldIndex] = arr.key;\n                newArr[seriesKeyIndex] = seriesKey;\n                rowObj._tuple[seriesKey] = newArr;\n            }\n        });\n        return rowObj;\n    });\n\n    return {\n        data: dataArr,\n        keys: seriesKeys\n    };\n};\n/**\n * Generate a stacked representation of data\n * @param {Array} schema schema Array\n * @param {Array} data data array\n * @param {Object} config Configuration object\n * @return {Array} stacked data\n */\nexport default (schema, data, config) => {\n    const uniqueField = config.uniqueField;\n    const valueField = config.value;\n    const groupBy = config.groupBy;\n    const sort = config.sort || 'descending';\n    const normalizedData = normalizeData(data, schema, valueField, uniqueField, groupBy);\n    const keys = normalizedData.keys;\n    const map = {};\n    const orderBy = config.orderBy;\n    const orderIndex = schema.findIndex(d => d.name === orderBy);\n    const groupByIndex = schema.findIndex(d => d.name === groupBy);\n    if (orderIndex !== -1) {\n        keys.forEach((key) => {\n            const name = data.find(d => d[groupByIndex] === key);\n            map[key] = name[orderIndex];\n        });\n        normalizedData.keys.sort((a, b) => map[a].localeCompare(map[b]));\n    }\n\n    const stackData = stack({\n        keys: normalizedData.keys,\n        offset: config.offset || 'diverging',\n        order: sort,\n        data: normalizedData.data\n    });\n    stackData.forEach((seriesData) => {\n        seriesData.forEach((dataObj) => {\n            dataObj.data = dataObj.data._tuple[seriesData.key];\n        });\n    });\n    return stackData;\n};\n\n","import {\n    FieldType,\n    getDomainFromData,\n    setStyles,\n    easeFns,\n    selectElement,\n    DimensionSubtype,\n    STATE_NAMESPACES,\n    retrieveNearestGroupByReducers,\n    getObjProp,\n    COORD_TYPES\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { transformFactory } from '@chartshq/transform';\nimport { IDENTITY, STACK, GROUP, COLOR, SHAPE, SIZE, ENCODING, AGG_FN_SUM, ASCENDING, TEXT } from '../enums/constants';\n\nconst BAND = ScaleType.BAND;\nconst { POLAR, CARTESIAN } = COORD_TYPES;\n\nconst transfromColor = (colorAxis, datum, styleType, intensity) => {\n    datum.meta.stateColor[styleType] = datum.meta.stateColor[styleType] || datum.meta.originalColor;\n    const fillColorInfo = colorAxis.transformColor(datum.meta.stateColor[styleType], intensity);\n    datum.meta.stateColor[styleType] = fillColorInfo.hsla;\n\n    return fillColorInfo;\n};\n\nexport const applyInteractionStyle = (context, selectionSet, interactionStyles, config) => {\n    const elements = context.getPlotElementsFromSet(selectionSet);\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const apply = config.apply;\n    const interactionType = config.interactionType;\n    interactionStyles.forEach((style) => {\n        const styleType = style.type;\n        elements.style(styleType, ((d) => {\n            const { colorTransform, stateColor, originalColor } = d.meta;\n            colorTransform[interactionType] = colorTransform[interactionType] || {};\n            if (apply && !colorTransform[interactionType][styleType]) {\n                // fade selections\n                colorTransform[interactionType][styleType] = style.intensity;\n                const color = transfromColor(colorAxis, d, styleType, style.intensity).color;\n                return color;\n            }\n            if (!apply && colorTransform[interactionType][styleType]) {\n                 // unfade selections\n                colorTransform[interactionType][styleType] = null;\n                return transfromColor(colorAxis, d, styleType, style.intensity.map(e => -e)).color;\n            }\n            const [h, s, l, a] = stateColor[styleType] ? stateColor[styleType] : originalColor;\n            return `hsla(${h * 360},${s * 100}%,${l * 100}%, ${a || 1})`;\n        }));\n    });\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const fadeUnfadeSelection = (context, selectionSet, hasFaded, interaction) => {\n    const interactionConfig = { interaction, apply: hasFaded };\n    applyInteractionStyle(context, selectionSet, 'fade', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const focusUnfocusSelection = (context, selectionSet, isFocussed, interaction) => {\n    const interactionConfig = { interaction, apply: isFocussed };\n    applyInteractionStyle(context, selectionSet, 'focus', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} axes\n *\n */\nexport const getAxesScales = (axes) => {\n    const [xAxis, yAxis] = [ENCODING.X, ENCODING.Y].map(e => axes[e]);\n    const [xScale, yScale] = [xAxis, yAxis].map(e => e && e.scale());\n    return {\n        xAxis,\n        yAxis,\n        xScale,\n        yScale\n    };\n};\n\nexport const encodingFieldInfRetriever = {\n    [POLAR]: (encoding, fieldsConfig) => {\n        const encodingInf = {};\n        [ENCODING.RADIUS, ENCODING.RADIUS0, ENCODING.ANGLE, ENCODING.ANGLE0, COLOR, SHAPE, SIZE, TEXT]\n            .forEach((e) => {\n                const field = getObjProp(encoding, e, 'field');\n                encodingInf[`${e}Field`] = field;\n                encodingInf[`${e}FieldIndex`] = getObjProp(fieldsConfig, field, 'index');\n            });\n        return encodingInf;\n    },\n    [CARTESIAN]: (encoding, fieldsConfig) => {\n        const encodingInf = {};\n        [ENCODING.X, ENCODING.Y, ENCODING.X0, ENCODING.Y0, COLOR, SHAPE, SIZE, TEXT].forEach((e) => {\n            const field = getObjProp(encoding, e, 'field');\n            encodingInf[`${e}Field`] = field;\n            encodingInf[`${e}FieldIndex`] = getObjProp(fieldsConfig, field, 'index');\n            encodingInf[`${e}FieldType`] = getObjProp(fieldsConfig, field, 'def', 'type');\n            encodingInf[`${e}FieldSubType`] = getObjProp(fieldsConfig, field, 'def', 'subtype');\n        });\n\n        return encodingInf;\n    }\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} config\n * @param {*} transformType\n *\n */\nexport const transformData = (dataModel, config, transformType, encodingFieldInf) => {\n    const data = dataModel.getData({ withUid: true });\n    const schema = data.schema;\n    const transform = config.transform;\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = encodingFieldInf;\n    const uniqueField = xFieldType === FieldType.MEASURE ? yField : xField;\n\n    return transformFactory(transformType)(schema, data.data, {\n        groupBy: transform.groupBy,\n        uniqueField,\n        sort: transform.sort || 'none',\n        offset: transform.offset,\n        orderBy: transform.orderBy,\n        value: yFieldType === FieldType.MEASURE ? yField : xField\n    }, data.uids);\n};\n\nexport const getIndividualClassName = (d, i, data, context) => {\n    const className = context.config().individualClassName;\n    let classNameStr = '';\n    if (className instanceof Function) {\n        classNameStr = className(d, i, data, context);\n    }\n    return classNameStr;\n};\n\nconst dataNormalizers = {\n    [POLAR]: (transformedData, encodingFieldInf, fieldsConfig) => {\n        const {\n            radiusFieldIndex,\n            angleFieldIndex,\n            radius0FieldIndex,\n            angle0FieldIndex\n        } = encodingFieldInf;\n        const fieldsLen = Object.keys(fieldsConfig).length;\n\n        /**\n         * Returns normalized data from transformed data. It recursively traverses through\n         * the transformed data if there it is nested.\n         */\n        return transformedData.map(data => data.map((d) => {\n            const pointObj = {\n                radius: d[radiusFieldIndex],\n                angle: angleFieldIndex !== undefined ? d[angleFieldIndex] : 1,\n                radius0: d[radius0FieldIndex],\n                angle0: d[angle0FieldIndex]\n            };\n            [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                pointObj[enc] = d[encodingFieldInf[`${enc}FieldIndex`]];\n            });\n            pointObj.source = d;\n            pointObj.rowId = d[fieldsLen];\n            return pointObj;\n        })).filter(d => d.length);\n    },\n    [CARTESIAN]: (transformedData, encodingFieldInf, fieldsConfig, transformType) => {\n        const {\n            xFieldType,\n            xFieldIndex,\n            yFieldIndex,\n            x0FieldIndex,\n            y0FieldIndex\n        } = encodingFieldInf;\n        const fieldsLen = Object.keys(fieldsConfig).length;\n        /**\n         * Returns normalized data from transformed data. It recursively traverses through\n         * the transformed data if there it is nested.\n         */\n        return transformedData.map((data) => {\n            const values = transformType === GROUP ? data.values : data;\n            return values.map((d) => {\n                let pointObj = {};\n                let tuple;\n                if (transformType === STACK) {\n                    tuple = d.data || [];\n                    let y;\n                    let y0;\n                    let x;\n                    let x0;\n                    if (d[1] >= d[0]) {\n                        y = x0 = d[1];\n                        x = y0 = d[0];\n                    } else {\n                        y = x0 = d[0];\n                        x = y0 = d[1];\n                    }\n\n                    pointObj = xFieldType === FieldType.MEASURE ? {\n                        x,\n                        x0,\n                        y: tuple[yFieldIndex],\n                        y0: tuple[yFieldIndex]\n                    } : {\n                        x: tuple[xFieldIndex],\n                        x0: tuple[xFieldIndex],\n                        y,\n                        y0\n                    };\n                    pointObj.source = tuple;\n                    pointObj.rowId = tuple[fieldsLen];\n                    [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                        pointObj[enc] = tuple[encodingFieldInf[`${enc}FieldIndex`]];\n                    });\n                } else {\n                    pointObj = {\n                        x: d[xFieldIndex],\n                        y: d[yFieldIndex],\n                        x0: d[x0FieldIndex],\n                        y0: d[y0FieldIndex]\n                    };\n                    pointObj.source = d;\n                    pointObj.rowId = d[fieldsLen];\n                    [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                        pointObj[enc] = d[encodingFieldInf[`${enc}FieldIndex`]];\n                    });\n                }\n                return pointObj;\n            });\n        }).filter(d => d.length);\n    }\n};\n/*\n * This method resolves the x, y, x0 and y0 values from the transformed data.\n * It also checks the type of transformed data for example, if it is a stacked data\n * then it fetches the y and y0 values from the stacked data.\n * @param {Array.<Array>} transformedData transformed data\n * @param {Object} fieldsConfig field definitions\n * @param {string} transformType type of transformed data - stack, group or identity.\n * @return {Array.<Object>} Normalized data\n*/\nexport const getNormalizedData = (transformedData, context) => {\n    const transformType = context.transformType();\n    const transformedDataArr = transformType === IDENTITY ? [transformedData] : transformedData;\n    const encodingFieldInf = context.encodingFieldsInf();\n    const fieldsConfig = context.data().getFieldsConfig();\n    return dataNormalizers[context.coord()](transformedDataArr, encodingFieldInf, fieldsConfig, transformType);\n};\n\nexport const domainCalculator = {\n    [POLAR]: (data, layerInst) => {\n        const config = layerInst.config();\n        const { sort } = config;\n        let angleValues = data[0];\n        const radius0Field = getObjProp(config.encoding.radius0, 'field');\n        if (sort) {\n            angleValues = angleValues.sort((a, b) => (sort === ASCENDING ? a.radius - b.radius : b.radius - a.radius));\n        }\n        const radiusDomain = getDomainFromData(data, [ENCODING.RADIUS, radius0Field ?\n            ENCODING.RADIUS0 : ENCODING.RADIUS]);\n        return {\n            radius: radiusDomain,\n            angle: angleValues.map(d => d.angle),\n            angle0: angleValues.map(d => d.angle0)\n        };\n    },\n    [CARTESIAN]: (data, layerInst) => {\n        const transformType = layerInst.transformType();\n        const encodingFieldInf = layerInst.encodingFieldsInf();\n        const {\n            xFieldSubType,\n            yFieldSubType,\n            xField,\n            yField,\n            x0Field,\n            y0Field\n        } = encodingFieldInf;\n        const domains = {};\n        const yEnc = ENCODING.Y;\n        const xEnc = ENCODING.X;\n        if (xField) {\n            domains.x = getDomainFromData(data, x0Field || transformType === STACK ? [xEnc, ENCODING.X0] : [xEnc, xEnc],\n                xFieldSubType);\n        }\n        if (yField) {\n            domains.y = getDomainFromData(data, y0Field || transformType === STACK ? [ENCODING.Y0, ENCODING.Y] :\n                [yEnc, yEnc], yFieldSubType);\n        }\n\n        return domains;\n    }\n};\n\nexport const attachDataToVoronoi = (voronoi, points) => {\n    voronoi.data([].concat(...points).filter(d => d.rowId !== undefined).map((d) => {\n        const point = d.update;\n        return {\n            x: point.x,\n            y: point.y,\n            data: d\n        };\n    }));\n};\n\n/**\n *\n *\n * @param {*} target\n * @param {*} styles\n * @param {*} remove\n */\nexport const updateStyle = (target, styles, remove) => {\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            target.style(key, remove ? null : styles[key]);\n        }\n    }\n};\n\n/**\n *\n *\n * @param {*} mount\n * @param {*} context\n */\nexport const animateGroup = (mount, context) => {\n    let groupTransition;\n    let update;\n    const { transition, groupAnimateStyle } = context;\n    const { duration, effect, disabled } = transition;\n    if (groupAnimateStyle) {\n        setStyles(mount.node(), groupAnimateStyle.enter);\n        update = groupAnimateStyle.update;\n        if (!disabled) {\n            groupTransition = mount.transition()\n                .ease(easeFns[effect])\n                .duration(duration)\n                .on('end', function () {\n                    updateStyle(selectElement(this), update, true);\n                });\n        } else {\n            groupTransition = mount;\n        }\n        updateStyle(groupTransition, update);\n    }\n};\n\nexport const positionPoints = (context, points) => {\n    const positioner = context.encodingTransform();\n    if (positioner) {\n        return positioner(points, context, { smartLabel: context._dependencies.smartLabel });\n    }\n    return points;\n};\n\n/**\n  * Gets the width of each group. It gets the width from axis if it is available for\n  * example when the scale is nominal else it calculates the width from the\n  * range of the axis and number of data points.\n  *\n  * @param {SimpleAxis} axis instance of axis\n  * @param {number} minDiff Minimum difference between data points\n  * @return {number} width of each bar\n  * @private\n*/\nexport const getGroupSpan = (axis, minDiff) => {\n    let groupSpan;\n    const width = axis.getUnitWidth();\n    const scale = axis.scale();\n    const range = scale.range();\n    const domain = scale.domain();\n    !width ? groupSpan = (Math.abs(range[1] - range[0]) / Math.abs(domain[1] - domain[0])) * minDiff :\n        (groupSpan = width);\n\n    return groupSpan;\n};\n\nexport const getPlotMeasurement = (context, dimensionalValues) => {\n    const fieldInfo = context.encodingFieldsInf();\n    const axes = context.axes();\n    const transformType = context.transformType();\n    const config = context.config();\n    const bandScale = context._bandScale;\n\n    return ['x', 'y'].map((type) => {\n        let span = 0;\n        let groupSpan = 0;\n        let padding = 0;\n        let offsetValues = [];\n        if (fieldInfo[`${type}FieldType`] === FieldType.DIMENSION) {\n            let actualGroupWidth;\n            const isTemporal = fieldInfo[`${type}FieldSubType`] === DimensionSubtype.TEMPORAL;\n            const timeDiff = isTemporal ? context.dataProps().timeDiffs[type] : 0;\n            const axis = axes[type];\n            const pad = config[`pad${type.toUpperCase()}`];\n            const innerPadding = config.innerPadding;\n            const keys = dimensionalValues;\n            const scale = axis.scale();\n            groupSpan = getGroupSpan(axis, timeDiff);\n            const isAxisBandScale = axis.constructor.type() === BAND;\n            const axisPadding = axis.config().padding;\n            // If it is a grouped bar then the width of each bar in a grouping is retrieved from\n            // a band scale. The band scale will have range equal to width of one group of bars and\n            // the domain is set to series keys.\n            if (transformType === 'group') {\n                const groupPadding = isAxisBandScale ? 0 : axisPadding * groupSpan / 2;\n                bandScale.range([groupPadding, groupSpan - groupPadding]).domain(keys).paddingInner(innerPadding);\n                span = bandScale.bandwidth();\n                actualGroupWidth = groupSpan - (isAxisBandScale ? 0 : axisPadding * groupSpan);\n                offsetValues = keys.map(key => bandScale(key) - (isAxisBandScale ? 0 : (groupSpan / 2)));\n            } else if (pad !== undefined) {\n                let offset;\n                if (isAxisBandScale) {\n                    const step = scale.step();\n                    offset = scale.padding() * step;\n                    span = scale.bandwidth() + offset;\n                } else {\n                    span = groupSpan;\n                }\n                offsetValues = keys.map(() => (isAxisBandScale ? -(offset / 2) : -(span / 2)));\n            } else {\n                padding = isAxisBandScale ? 0 : axisPadding * groupSpan;\n                span = groupSpan - padding;\n                actualGroupWidth = span;\n                offsetValues = keys.map(() => (isAxisBandScale ? 0 : -(span / 2)));\n            }\n\n            groupSpan = actualGroupWidth;\n            padding = isAxisBandScale ? axisPadding * axis.scale().step() : axisPadding * groupSpan;\n        }\n\n        return {\n            span,\n            offsetValues,\n            groupSpan,\n            padding\n        };\n    });\n};\n\nexport const initializeGlobalState = (context) => {\n    const store = context.store();\n    const globalState = context.constructor.getState()[0];\n    const namespace = context.metaInf().namespace;\n    for (const prop in globalState) {\n        store.append(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${prop}`, {\n            [namespace]: null\n        });\n    }\n};\n\nexport const resolveInvalidTransformType = (context) => {\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n    const fieldsConfig = context.data().getFieldsConfig();\n    const groupByFieldMeasure = fieldsConfig[groupByField] && fieldsConfig[groupByField].def.type === FieldType.MEASURE;\n    if (!xField || !yField || groupByFieldMeasure || !groupByField || xFieldType === FieldType.DIMENSION &&\n        yFieldType === FieldType.DIMENSION) {\n        return IDENTITY;\n    }\n    return null;\n};\n\nexport const getValidTransform = context => resolveInvalidTransformType(context) || context.config().transform.type;\n\nexport const getValidTransformForAggFn = (context) => {\n    const resolvedInvalidTransformType = resolveInvalidTransformType(context);\n    if (resolvedInvalidTransformType) {\n        return resolvedInvalidTransformType;\n    }\n\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n    const isCustomTransformTypeProvided = !!getObjProp(context._customConfig, 'transform', 'type');\n    let transformType = context.config().transform.type;\n\n    if (!isCustomTransformTypeProvided && groupByField && xFieldType !== yFieldType) {\n        const measureField = xFieldType === FieldType.MEASURE ? xField : yField;\n        const { [measureField]: aggFn } = retrieveNearestGroupByReducers(context.data(), measureField);\n        transformType = aggFn === AGG_FN_SUM ? STACK : GROUP;\n    }\n\n    return transformType;\n};\n\nexport const getMarkId = (source, schema) => source.filter((val, i) => schema[i] &&\n    schema[i].type === FieldType.DIMENSION).join();\n\nexport const resolveEncodingValues = (data, i, dataArr, layerInst) => {\n    const transformedValues = {};\n    const values = data.values;\n    const encoding = layerInst.config().encoding;\n    for (const key in values) {\n        const value = getObjProp(encoding[key], 'value');\n        if (value instanceof Function) {\n            transformedValues[key] = value(values, i, dataArr, layerInst);\n        } else {\n            transformedValues[key] = values[key];\n        }\n    }\n    return transformedValues;\n};\n\nexport const getColorMetaInf = (color, colorAxis) => ({\n    originalColor: colorAxis.getHslArray(color),\n    stateColor: {},\n    colorTransform: {}\n});\n\nconst getCoordValue = (radius, trig, angle, offset) => radius * Math[trig](angle) + offset;\nconst coordValueGetter = (radius, angle, xOffset, yOffset) => ({\n    x: getCoordValue(radius, 'cos', angle, xOffset),\n    y: getCoordValue(radius, 'sin', angle, yOffset)\n});\nexport const toCartesianCoordinates = (points, measurement, rangePlot = false) => {\n    const xOffset = measurement.width / 2;\n    const yOffset = measurement.height / 2;\n    for (let i = 0, len = points.length; i < len; i++) {\n        const point = points[i];\n        const { angle, radius, radius0, angle0 } = point.update;\n        point.update = coordValueGetter(radius, angle, xOffset, yOffset);\n        if (rangePlot) {\n            const update = point.update = coordValueGetter(radius0, angle0, xOffset, yOffset);\n            const { x: x0, y: y0 } = coordValueGetter(radius, angle, xOffset, yOffset);\n            update.x0 = x0;\n            update.y0 = y0;\n        }\n    }\n    return points;\n};\n\nexport const sortData = (data, axes) => {\n    const { x: xAxis, y: yAxis } = axes;\n    const axisArr = [xAxis, yAxis];\n    for (let i = 0, len = axisArr.length; i < len; i++) {\n        const axis = axisArr[i];\n        if (axis.constructor.type() === BAND) {\n            const key = i ? 'y' : 'x';\n            const dom = axis.domain();\n            const indices = dom.reduce((acc, v, idx) => {\n                acc[v] = idx;\n                return acc;\n            }, {});\n            data.sort((a, b) => indices[a[key]] - indices[b[key]]);\n            break;\n        }\n    }\n    return data;\n};\n","import { CommonProps, STATE_NAMESPACES } from 'muze-utils';\nimport { encodingFieldInfRetriever } from '../helpers';\nimport * as PROPS from '../enums/props';\n\nconst renderLayer = (context) => {\n    const mount = context.mount();\n    if (mount) {\n        context.render(mount);\n        context.dependencies().throwback.commit(CommonProps.ON_LAYER_DRAW, true);\n    }\n};\n\nexport const listenerMap = (context, ns) => [\n    {\n        props: [`${ns.local}.${PROPS.DATA}`],\n        listener: ([, data]) => {\n            const config = context.config();\n            const encodingValue = config.encoding;\n            if (data && encodingValue) {\n                const fieldsConfig = data.getFieldsConfig();\n                const encodingFieldsInf = encodingFieldInfRetriever[context.coord()](encodingValue, fieldsConfig);\n                context.encodingFieldsInf(encodingFieldsInf);\n                context.resolveTransformType();\n                context._transformedData = context.getTransformedData(data, config,\n                    context.transformType(), encodingFieldsInf);\n                context._normalizedData = context.getNormalizedData(context._transformedData, fieldsConfig);\n                const domain = context.calculateDomainFromData(context._normalizedData, context.encodingFieldsInf(),\n                    context.data().getFieldsConfig());\n                context._domain = domain;\n                !context._updateLock && context.domain(domain);\n            }\n        },\n        type: 'registerImmediateListener'\n    },\n    {\n        props: [`${ns.local}.${PROPS.CONFIG}`],\n        listener: ([, config]) => {\n            const calculateDomain = config.calculateDomain;\n            const props = context.getRenderProps();\n            const store = context.store();\n            const namespaceInf = {\n                namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${context.metaInf().namespace}`,\n                key: 'renderListener'\n            };\n            store.unsubscribe(namespaceInf);\n            if (calculateDomain === false) {\n                props.push(`${ns.local}.${PROPS.DATA}`);\n            }\n            store.registerChangeListener(props,\n                () => {\n                    renderLayer(context);\n                }, false, namespaceInf);\n        },\n        type: 'registerImmediateListener'\n    }\n];\n\n","export const DATA = 'data';\nexport const CONFIG = 'config';\nexport const MEASUREMENT = 'measurement';\nexport const DOMAIN = 'domain';\nexport const MOUNT = 'mount';\n","import { mergeRecursive } from 'muze-utils';\nimport * as PROPS from '../enums/props';\n\nexport const defaultOptions = {\n    [PROPS.CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig, context) => {\n                context._customConfig = config;\n                const constructor = context.constructor;\n                const newConf = mergeRecursive({}, constructor.defaultConfig());\n\n                return constructor.defaultPolicy(newConf, config);\n            }\n        }\n    },\n    [PROPS.DATA]: {\n        value: null,\n        meta: {\n            preset: (data, context) => {\n                if (context._cacheEnabled) {\n                    context._cachedData.push(data);\n                } else {\n                    context._cachedData = [data];\n                }\n            }\n        }\n    }\n};\n","import {\n    getUniqueId,\n    mergeRecursive,\n    FieldType,\n    selectElement,\n    ReservedFields,\n    registerListeners,\n    transactor,\n    DataModel,\n    clone,\n    generateGetterSetters,\n    STATE_NAMESPACES,\n    COORD_TYPES\n} from 'muze-utils';\nimport { SimpleLayer } from '../simple-layer';\nimport * as PROPS from '../enums/props';\nimport { props } from './props';\nimport {\n    transformData,\n    getNormalizedData,\n    applyInteractionStyle,\n    initializeGlobalState,\n    getValidTransform,\n    domainCalculator\n} from '../helpers';\nimport { listenerMap } from './listener-map';\nimport { defaultOptions } from './default-options';\n\n/**\n * An abstract class which gives definition of common layer functionality like\n * - transforming data for various modes. Supported modes: identity, group and stack.\n * - calculating data domain\n * - linking dependent layers\n * - merging policy of configuration\n * - interaction sideffect helpers\n * - retrieving dom elements from data using id\n * - retrieving the physical dimensions of marks\n * - disposing layer\n *\n * Every layer has to extend base layer and give concrete definition.\n * This layer does not have any default visual. A new layer has to define the logic of `render` for rendering the\n * visuals\n *\n * @public\n * @class\n * @module BaseLayer\n */\nexport default class BaseLayer extends SimpleLayer {\n\n    /**\n     * Creates a layer using a configuration and data.\n     *\n     * @public\n     * @constructor\n     * @param {DataModel} data Instance of DataModel to be used. This DataModel instance serves as the data for a layer.\n     * @param {Object} axes Axes instances to be used for rendering the layer. Axes are used for mapping data from\n     *      value to px.\n     * @param {SimpleAxis} axes.x X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {SimpleAxis} axes.y X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {ColorAxis} axes.color Axis for coloring a layer using color interpolators\n     * @param {ShapeAxis} axes.shape Axis for providing a shape\n     * @param {SizeAxis} axes.size Axis for determining size of a mark using size interpolator\n     * @param {LayerConfig} config Configuration of the layer\n     * @param {Object} dependencies Dependencies of the layer\n     * @param {SmartLabel} dependencies.smartLabel Smartlabel singleton instance\n     */\n    constructor (data, axes, config, dependencies = {}) {\n        super();\n\n        generateGetterSetters(this, props);\n        this.data(data);\n        this.axes(axes);\n        this.config(config);\n        this.alias(this.constructor.formalName() + getUniqueId());\n        this.dependencies(dependencies);\n        this._points = [];\n        this._cachedData = [];\n        this._id = getUniqueId();\n        this._measurement = {};\n        this._animationDonePromises = [];\n        this._customConfig = null;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: {}\n            },\n            {\n                config: {},\n                data: {}\n            }\n        ];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            const metaInf = this.metaInf();\n            const localNs = `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${metaInf.namespace}`;\n            initializeGlobalState(this);\n            const store = this.store();\n            store.append(`${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}`, {\n                [metaInf.namespace]: null\n            });\n\n            transactor(this, defaultOptions, store.model, {\n                namespace: localNs\n            });\n            registerListeners(this, listenerMap, {\n                local: localNs,\n                global: STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE\n            }, {\n                unitRowIndex: metaInf.unitRowIndex,\n                unitColIndex: metaInf.unitColIndex\n            });\n            return this;\n        }\n        return this._store;\n    }\n\n    domain (...dom) {\n        const prop = `${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${this.metaInf().namespace}`;\n        if (dom.length) {\n            this.store().commit(prop, dom[0]);\n            return this;\n        }\n        return this.store().get(prop);\n    }\n\n    /**\n     * Creates a layer instance\n     * @return {BaseLayer} Instance of a layer\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Default configuration of the layer. This configuration gets merged to the user passed configuration using a\n     * plolicy. Base layer only returns part of configuraion, any layer overridding base layer should return its own\n     * configuration.\n     *\n     * @public\n     * @static\n     *\n     * @return {Object} Default configuration\n     */\n    static defaultConfig () {\n        return {\n            transform: {\n                type: 'identity'\n            }\n        };\n    }\n\n    /**\n     * Policy defines how user config gets merged to default config. The default policy here does a deep copy\n     * operation.\n     * Any policy which does more than deep copying should define the policy as a static member.\n     *\n     * @static\n     * @public\n     *\n     * @param {LayerConfig} conf Configuration with which the user config will be merged\n     * @param {LayerConfig} userConf Configuration given by the user\n     *\n     * @return {LayerConfig} Merged layer configuration\n     */\n    static defaultPolicy (conf, userConf) {\n        return mergeRecursive(conf, userConf);\n    }\n\n    /**\n     * Determines a name for a layer. This name of the layer is used in the input data to refer to this layer.\n     * ```\n     *  .layers([\n     *      mark: 'bar',\n     *      encoding: { ... }\n     *  ])\n     * ```\n     *\n     * @static\n     * @public\n     *\n     * @return {string} name of layer\n     */\n    static formalName () {\n        return 'base';\n    }\n\n    encodingFieldsInf (...fieldsInf) {\n        if (fieldsInf.length) {\n            this._encodingFieldsInf = fieldsInf[0];\n            return this;\n        }\n        return this._encodingFieldsInf;\n    }\n\n    encodingTransform (...encodingTransform) {\n        if (encodingTransform.length) {\n            this._encodingTransform = encodingTransform[0];\n            return this;\n        }\n        return this._encodingTransform;\n    }\n\n    /**\n     * Provides a alias for a layer. Like it's possible to have same layer (like bar) multiple times, but among multiple\n     * layers of same type if one layer has to be referred, alias is used. If no alias is given then `formalName` is set\n     * as the alias name.\n     *\n     *\n     * If used as setter\n     * @param  {string} alias Name of the alias\n     * @return {BaseLayer} Instance of current base layer\n     *\n     * If used as getter\n     * @return {string} Alias of the current layer\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            this._alias = params[0];\n            return this;\n        }\n        return this._alias || this.constructor.formalName();\n    }\n\n    dependencies (...params) {\n        if (params.length) {\n            this._dependencies = params[0];\n            return this;\n        }\n        return this._dependencies;\n    }\n\n    enableCaching () {\n        this._cacheEnabled = true;\n        return this;\n    }\n\n    clearCaching () {\n        this._cacheEnabled = false;\n        return this.data(this._cachedData[0]);\n    }\n\n    /**\n     * Serialize the schema. Merge config is used for serialization.\n     *\n     * @public\n     *\n     * @return {LayerConfig} Serialized schema\n     */\n    serialize () {\n        return this.config();\n    }\n\n    /**\n     * Returns the unique identifier of this layer. Id is auto generated during the creation proceess of a schema.\n     *\n     * @public\n     *\n     * @return {string} id of the layer\n     */\n    id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the transformed data based on given transform type.\n     * It first gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of DataModel\n     * @param {Object} config Configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     */\n    getTransformedData (dataModel, config, transformType, encodingFieldsInf) {\n        return transformData(dataModel, config, transformType, encodingFieldsInf);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a categorical field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @param {Object} fieldsConfig Configuration of fields\n     * @return {Array} Domain values array.\n     */\n    calculateDomainFromData (data) {\n        let domains = {};\n        const isEmpty = this.data().isEmpty();\n\n        if (!isEmpty) {\n            domains = domainCalculator[this.coord()](data, this);\n        }\n        return domains;\n    }\n\n    static shouldDrawAnchors () {\n        return false;\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getDataDomain (encodingType) {\n        const domains = this.store()\n            .get(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${this.metaInf().namespace}`);\n        return encodingType !== undefined ? domains[encodingType] || [] : domains;\n    }\n\n    /**\n     * Normalizes the transformed data and returns it.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getNormalizedData (transformedData) {\n        return getNormalizedData(transformedData, this);\n    }\n\n    /**\n     * Gets the nearest point closest to the given x and y coordinate. If no nearest point is found, then it returns\n     * null.\n     *\n     * @public\n     *\n     * @param {number} x X Coordinate.\n     * @param {number} y Y Coordinate.\n     *\n     * @return {Object} Information of the nearest point.\n     * ```\n     *      {\n     *          // id property contains the field names and their corresponding values in a 2d array. This is the data\n     *          // associated with the nearest point.\n     *          id: // Example data: [['Origin'], ['USA']],\n     *          dimensions: // Physical dimensions of the point.\n     *          layerId: // Id of the layer instance.\n     *      }\n     * ```\n     */\n    getNearestPoint () {\n        return null;\n    }\n\n    applyInteractionStyle (interactionType, selectionSet, apply, styles) {\n        const interactionConfig = this.config().interaction || {};\n\n        let interactionStyles = interactionConfig[interactionType];\n        interactionStyles = styles || interactionStyles;\n        if (interactionStyles) {\n            applyInteractionStyle(this, selectionSet, interactionStyles, {\n                apply,\n                interactionType\n            });\n        }\n    }\n\n    disableUpdate () {\n        this._updateLock = true;\n        return this;\n    }\n\n    enableUpdate () {\n        this._updateLock = false;\n        return this;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransform(this);\n    }\n\n    transformType () {\n        return this._transformType;\n    }\n\n    /**\n     * Renders the layer\n     * @return {BaseLayer} Instance of the layer.\n     */\n    render () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BaseLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Disposes the entire layer.\n     *\n     * @return {BaseLayer} Instance of layer.\n     */\n    remove () {\n        this.store().unsubscribe({\n            namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${this.metaInf().namespace}`\n        });\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     * Stores point in an object with key as the categorical value or temporal value\n     *\n     * @param {string} key categorical value or temporal value\n     * @param {Object} data Information of the data point\n     * @return {BarLayer} Instance of bar layer\n     */\n    cachePoint (key, data) {\n        if (key === null) {\n            return this;\n        }\n        const pointMap = this._pointMap;\n        !pointMap[key] && (pointMap[key] = []);\n        pointMap[key].push(data);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} dataProps\n     *\n     * @memberof BaseLayer\n     */\n    dataProps (...dataProps) {\n        if (dataProps.length) {\n            this._dataProps = dataProps[0];\n            return this;\n        }\n        return this._dataProps;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} id\n     *\n     * @memberof BaseLayer\n     */\n    getIdentifiersFromData (data) {\n        const schema = this.data().getData().schema;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const identifiers = [[], []];\n        const {\n                xFieldType,\n                yFieldType,\n                xField,\n                yField\n            } = this.encodingFieldsInf();\n\n        const [xMeasure, yMeasure] = [xFieldType, yFieldType].map(type => type === FieldType.MEASURE);\n        schema.forEach((d, i) => {\n            const name = d.name;\n            if (fieldsConfig[name].def.type === FieldType.DIMENSION) {\n                identifiers[0].push(name);\n                identifiers[1].push(data[i]);\n            }\n        });\n\n        if (xMeasure && yMeasure) {\n            const xMeasureIndex = fieldsConfig[xField].index;\n            const yMeasureIndex = fieldsConfig[yField].index;\n            identifiers[0].push(...[xField, yField]);\n            identifiers[1].push(...[data[xMeasureIndex], data[yMeasureIndex]]);\n        }\n        return identifiers;\n    }\n\n    hasPlotSpan () {\n        return false;\n    }\n\n    getPlotSpan () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    getPlotPadding () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    /**\n     * Returns the information of the marks corresponding to the supplied identifiers. Identifiers are a set of field\n     * names and their corresponding values in an array. It can also be an instance of datamodel.\n     *\n     * For example,\n     * ```\n     *  const identifiers = [\n     *      ['Origin', 'Cylinders'],\n     *      ['USA', '8']\n     *  ];\n     *  const points = barLayer.getPointsFromIdentifiers(identifiers);\n     * ```\n     * @public\n     * @param {Array|DataModel} identifiers Identifiers of the marks.\n     * @param {Object} config Optional configuration which describes how to get the information.\n     * @param {boolean} config.getAllAttrs If true, then returns all the information of the points, else returns only\n     * the positions of the points.\n     * @param {boolean} config.getBBox If true, then returns the bounding box of all the marks.\n     *\n     * @return {Array} Array of points contains\n     */\n    getPointsFromIdentifiers (identifiers, config = {}) {\n        const getAllAttrs = config.getAllAttrs;\n        const getBBox = config.getBBox;\n        if (!this.data()) {\n            return [];\n        }\n        let fieldNames;\n        let values;\n        if (identifiers instanceof DataModel) {\n            const dataObj = identifiers.getData();\n            fieldNames = dataObj.schema.map(d => d.name);\n            values = dataObj.data;\n        } else {\n            fieldNames = identifiers[0];\n            values = identifiers.slice(1, identifiers.length);\n        }\n\n        const points = this._points;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPoints = [].concat(...points).filter((point) => {\n            const { source, rowId } = point;\n\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === source[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === rowId) !== -1;\n                } return true;\n            });\n        });\n        return getAllAttrs ? filteredPoints : filteredPoints.map((d) => {\n            const obj = clone(d);\n            if (getBBox) {\n                const update = obj.update || obj;\n                if (obj.size !== undefined) {\n                    const sizeVal = Math.sqrt(obj.size / Math.PI) * 2;\n                    update.width = sizeVal;\n                    update.height = sizeVal;\n                    update.x -= sizeVal / 2;\n                    update.y -= sizeVal / 2;\n                } else {\n                    if (update.width === undefined) {\n                        update.width = 2;\n                    }\n                    if (update.height === undefined) {\n                        update.height = 2;\n                    }\n                }\n            }\n\n            return obj.update || obj;\n        }).sort((a, b) => a.y - b.y);\n    }\n\n    getTransformedDataFromIdentifiers (identifiers) {\n        const { data: identifierData, schema: identifierSchema } = identifiers.getData();\n        const normalizedData = this._normalizedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            yField,\n            xField,\n            yFieldType,\n            xFieldType\n        } = this.encodingFieldsInf();\n        let measureIndex;\n        let enc;\n        if (xFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[xField].index;\n            enc = 'x';\n        } else if (yFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[yField].index;\n            enc = 'y';\n        }\n\n        const transformedData = [];\n        normalizedData.forEach((dataArr) => {\n            dataArr.forEach((dataObj) => {\n                const tupleArr = dataObj.source;\n                const exist = identifierSchema.every((obj, i) =>\n                    identifierData.findIndex(d => tupleArr[fieldsConfig[obj.name].index] === d[i]) !== -1);\n                if (exist) {\n                    const transformedVal = dataObj[enc];\n                    const row = dataObj.source;\n                    const tuple = {};\n                    for (const key in fieldsConfig) {\n                        const index = fieldsConfig[key].index;\n                        tuple[key] = row[index];\n                        if (index === measureIndex) {\n                            tuple[key] = transformedVal;\n                        }\n                    }\n                    transformedData.push(tuple);\n                }\n            });\n        });\n\n        return [transformedData, this.data().getData().schema];\n    }\n\n    /**\n     * Returns the dom elements associated with the supplied set of row ids.\n     * Each element in the layer is mapped with a row of the datamodel. When given an array of row ids, it returns all\n     * the elements which is mapped with those row ids.\n     *\n     * @public\n     * @param {Array} set Array of row ids\n     *\n     * @return {Selection} D3 Selection of dom elements.\n     */\n    getPlotElementsFromSet (set) {\n        return selectElement(this.mount()).selectAll(this.elemType()).filter(data =>\n            (data ? set.indexOf(data.rowId) !== -1 : false));\n    }\n\n    /**\n     * Notifies when all animations/transitions of the layer are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n\n    getRenderProps () {\n        const metaInf = this.metaInf();\n        if (this.coord() === COORD_TYPES.POLAR) {\n            return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.radius`];\n        }\n        return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${metaInf.unitRowIndex}0`,\n            `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${metaInf.unitColIndex}0`];\n    }\n}\n","import {\n    selectElement,\n    makeElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\nimport { updateStyle } from '../../helpers';\n\nconst line = Symbols.line;\n\nconst filterFn = (d) => {\n    const { update } = d;\n    return update.y !== null && update.x !== null;\n};\n\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nexport const drawLine = (context) => {\n    let filteredPoints;\n    const { layer, container, points, interpolate, connectNullData, className, style, transition } = context;\n    const mount = selectElement(container).attr('class', className);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const linepath = line()\n                .curve(curveInterpolatorFn)\n                .x(d => d.update.x)\n                .y(d => d.update.y)\n                .defined(filterFn);\n\n    filteredPoints = points;\n    if (connectNullData) {\n        filteredPoints = points.filter(filterFn);\n    }\n\n    updateStyle(mount, style);\n    let element = makeElement(mount, 'path', points.length ? [points[0].className] : []);\n    element.attr('class', d => d);\n    if (!transition.disabled) {\n        element = element.transition()\n        .duration(transition.duration)\n        .on('end', layer.registerAnimationDoneHook());\n    }\n    element.attr('d', linepath(filteredPoints))\n                    .style('fill-opacity', 0);\n    return element;\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-line',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: 'group'\n    },\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    nearestPointThreshold: 20,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n\n","import {\n    Voronoi,\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    FieldType,\n    InvalidAwareTypes,\n    getObjProp\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawLine } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    animateGroup,\n    positionPoints,\n    getIndividualClassName,\n    getColorMetaInf,\n    resolveEncodingValues,\n    sortData\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to render straight or smoothed line paths. The mark type of this layer is ```line```.\n *\n * @public\n *\n * @class\n * @module LineLayer\n * @extends BaseLayer\n */\nexport default class LineLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of LineLayer.\n     * @param {*} args\n     * @memberof LineLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n    }\n\n    static formalName () {\n        return 'line';\n    }\n\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Default configuration of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField && !transform.groupBy) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     * Returns the draw method for line\n     * @return {Function} Draw method of line layer\n     */\n    getDrawFn () {\n        return drawLine;\n    }\n\n    static shouldDrawAnchors () {\n        return true;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @param {number} seriesIndex index of series\n     * @return {Array} Array of points\n     */\n    translatePoints (data) {\n        let points = [];\n        const axes = this.axes();\n        const xAxis = axes.x;\n        const yAxis = axes.y;\n        const colorAxis = axes.color;\n        const { xFieldType, yFieldType } = this.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        sortData(data, axes);\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y) + yAxis.getUnitWidth() / 2;\n            const color = colorAxis.getColor(d.color);\n\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    color\n                },\n                data: d\n            }, i, data, this);\n\n            const point = {\n                enter: {},\n                update: {\n                    x: d.x instanceof InvalidAwareTypes ? null : resolvedEncodings.x,\n                    y: d.y instanceof InvalidAwareTypes ? null : resolvedEncodings.y\n                },\n                style: {\n                    stroke: resolvedEncodings.color,\n                    'fill-opacity': 0\n                },\n                rowId: d.rowId,\n                source: d.source,\n                meta: getColorMetaInf(resolvedEncodings.color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n\n        points = points.filter((point) => {\n            const { update } = point;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n\n    /**\n     * Renders the line plot\n     * @param {SVGElement} container svg element\n     * @return {LineLayer} instance of line layer\n     */\n    render (container) {\n        let points;\n        let seriesClassName;\n        let style;\n\n        const config = this.config();\n        const {\n            encoding,\n            interpolate,\n            className,\n            defClassName,\n            transition\n        } = config;\n        const normalizedData = this._normalizedData;\n        const transformedData = this._transformedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const keys = transformedData.map(d => d.key);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n        const colorField = encoding.color.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n        this._points = [];\n        this._pointMap = {};\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        makeElement(container, 'g', normalizedData, null, {\n            enter: (group) => {\n                animateGroup(group, {\n                    transition,\n                    groupAnimateStyle: {\n                        enter: {\n                            'stroke-opacity': 0,\n                            'fill-opacity': this.getPathStyle()['fill-opacity']\n                        },\n                        update: {\n                            'stroke-opacity': encoding.strokeOpacity.value\n                        }\n                    }\n                });\n            },\n            update: (group, dataArr, i) => {\n                points = this.translatePoints(dataArr);\n                this._points.push(points);\n                seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n\n                let color;\n                const colorValFn = encoding.color.value;\n                const colorVal = points.find(d => d.source[colorFieldIndex] !== null &&\n                        d.source[colorFieldIndex] !== undefined);\n\n                if (colorValFn) {\n                    color = colorValFn(dataArr, i, normalizedData);\n                } else {\n                    color = axes.color.getColor(colorVal && colorVal.source[colorFieldIndex]);\n                }\n\n                style = this.getPathStyle(color);\n                this.getDrawFn()({\n                    layer: this,\n                    container: group.node(),\n                    interpolate,\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: style || {},\n                    connectNullData: config.connectNullData\n                });\n            }\n        }, d => d[0].source[colorFieldIndex] || d[0].rowId);\n\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            stroke: color,\n            'fill-opacity': '0'\n        };\n    }\n\n    /**\n     * Gets the nearest point closest to the given position\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point information\n     */\n    getNearestPoint (x, y, config) {\n        let searchRadius = config.searchRadius;\n        const data = this.data();\n\n        if (!data || (data && data.isEmpty())) {\n            return null;\n        }\n\n        searchRadius = searchRadius !== undefined ? searchRadius : this.config().nearestPointThreshold;\n        const point = this._voronoi.find(x, y, searchRadius);\n        const dimensions = getObjProp(point, 'data', 'data', 'update');\n\n        if (point) {\n            const { source, rowId } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(source, rowId);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: 2,\n                    height: 2\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import {\n    easeFns,\n    selectElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\n\nconst area = Symbols.area;\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nconst /* istanbul ignore next */ drawArea = (params) => {\n    let filteredPoints;\n    const { layer, container, points, style, transition, className, connectNullData, interpolate } = params;\n\n    const { effect: easeEffect, duration } = transition;\n    const mount = selectElement(container);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const selection = mount.selectAll('path').data(points.length ? [points[0].className] : []);\n    const [enterAreaPath, updateAreaPath] = ['enter', 'update'].map(e => area().curve(curveInterpolatorFn)\n                    .x(d => d[e].x)\n                    .y1(d => d[e].y)\n                    .y0(d => d[e].y0)\n                    .defined(d => d[e].y !== null\n            ));\n\n    filteredPoints = points;\n    mount.attr('class', className);\n    if (connectNullData) {\n        filteredPoints = points.filter(d => d.update.y !== null);\n    }\n    const selectionEnter = selection.enter().append('path').attr('d', enterAreaPath(filteredPoints));\n    selection.merge(selectionEnter).transition().ease(easeFns[easeEffect])\n                    .duration(duration)\n                    .on('end', layer.registerAnimationDoneHook())\n                    .attr('d', updateAreaPath(filteredPoints))\n                    .each(function (d) {\n                        const element = selectElement(this);\n                        element.attr('class', d);\n                        Object.keys(style).forEach(key => element.style(key, style[key]));\n                    });\n};\n\nexport default drawArea;\n","import { FieldType, InvalidAwareTypes } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { LineLayer } from '../line';\nimport drawArea from './renderer';\nimport './styles.scss';\nimport { STACK, ENCODING } from '../../enums/constants';\nimport {\n    getAxesScales,\n    positionPoints,\n    getIndividualClassName,\n    getValidTransformForAggFn,\n    getColorMetaInf,\n    resolveEncodingValues,\n    sortData\n} from '../../helpers';\n\n/**\n * Area layer renders a closed path. The mark type of this layer is ```area```. This layer can be used\n * to create stacked or multi-series areas and vertical range area plots by using the encoding properties.\n *\n * To create this layer using layer configuration from canvas,\n * ```\n *      canvas.layers([{\n *          mark: 'area',\n *          transform: {\n *              type: 'stack' // Produces a stacked area.\n *          }\n *      }]);\n * ```\n *\n * @public\n *\n * @class\n * @module AreaLayer\n * @extends LineLayer\n */\nexport default class AreaLayer extends LineLayer {\n    /** oation of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof AreaLayer\n     */\n    static formalName () {\n        return 'area';\n    }\n\n    /**\n     * Calculates the domain from data. It calls its parent class's method which is line layer\n     * to get the domain and overwrites the domain according to its need.\n     * @return {Array} Domain values\n     */\n    calculateDomainFromData (data, encodingFieldsInf, fieldsConfig) {\n        const domains = super.calculateDomainFromData(data, fieldsConfig);\n        [ENCODING.X, ENCODING.Y].forEach((type) => {\n            const { [`${type}FieldType`]: fieldType } = encodingFieldsInf;\n            if (fieldType === FieldType.MEASURE && domains[type] !== undefined) {\n                domains[type][0] = Math.min(domains[type][0], 0);\n                domains[type][1] = Math.max(0, domains[type][1]);\n            }\n        });\n        return domains;\n    }\n\n    /**\n     * Returns the drawing method of this layer\n     * @return {Function} Draw method\n     */\n    getDrawFn () {\n        return drawArea;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @return {Array} Array of points\n     */\n    translatePoints (data) {\n        let points = [];\n        const transformType = this.transformType();\n        const axes = this.axes();\n        const colorAxis = axes.color;\n        const config = this.config();\n        const fieldsConfig = this.data().getFieldsConfig();\n        const { xField, yField, y0Field } = this.encodingFieldsInf();\n        const {\n            xAxis,\n            yAxis\n       } = getAxesScales(axes);\n        const classNameFn = config.individualClassName;\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n        const minYVal = yAxis.domain()[0];\n        const basePos = minYVal < 0 ? yAxis.getScaleValue(0) : yAxis.getScaleValue(minYVal);\n        sortData(data, axes);\n        points = data.map((d, i) => {\n            let color;\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y);\n            const y0Px = (y0Field || transformType === STACK) ? yAxis.getScaleValue(d.y0) : basePos;\n            color = colorAxis.getColor(d.color);\n            const invalidY = d.y instanceof InvalidAwareTypes;\n            const invalidY0 = d.y0 instanceof InvalidAwareTypes;\n            const resolvedValues = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    y0: y0Px,\n                    color\n                },\n                data: d\n            }, i, data, this);\n            color = resolvedValues.color;\n            const point = {\n                enter: {\n                    x: xPx,\n                    y: invalidY ? null : basePos,\n                    y0: invalidY0 ? null : basePos\n                },\n                update: {\n                    x: xPx,\n                    y: invalidY ? null : resolvedValues.y,\n                    y0: invalidY0 ? null : resolvedValues.y0\n                },\n                source: d.source,\n                rowId: d.rowId,\n                className: classNameFn ? classNameFn(d, i, data, this) : '',\n                style: {\n                    fill: color\n                },\n                meta: getColorMetaInf(color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        points = points.filter((point) => {\n            const update = point.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            fill: color\n        };\n    }\n}\n\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-arc',\n    padding: { top: 1, bottom: 1, left: 1, right: 1 },\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    height: 100,\n    width: 100,\n    sort: '',\n    colors: ['#F44336', 'blue', 'green', 'yellow', 'orange', 'purple'],\n    transform: {\n        type: 'identity'\n    },\n    encoding: {\n        'stroke-width': {\n            value: '2px'\n        },\n        'stroke-linejoin': {\n            value: 'round'\n        },\n        angle: {\n            value: '1'\n        },\n        radius: {\n            value: '1'\n        },\n        opacity: {\n            value: '1'\n        },\n        color: {\n            value: '1'\n        },\n        shape: {\n            value: '1'\n        },\n        size: {\n            value: '1'\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 500\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-arc-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-arc-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-arc-selected`\n        }\n    }\n};\n\n","import {\n    makeElement,\n    selectElement,\n    getQualifiedClassName,\n    isSimpleObject,\n    Symbols,\n    FieldType,\n    ReservedFields\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { BaseLayer } from '../../base-layer';\nimport { getIndividualClassName, resolveEncodingValues, getColorMetaInf } from '../../helpers';\nimport { tweenPie, tweenExitPie, getPreviousPoint } from './arc-helper';\nimport './styles.scss';\n\nconst arc = Symbols.arc;\n\n/**\n * Arc Layer creates a plot with polar coordinates.\n *\n * @public\n *\n * @class\n * @module ArcLayer\n * @extends BaseLayer\n */\nexport default class ArcLayer extends BaseLayer {\n\n    constructor (data, axes, config, dependencies) {\n        super(data, axes, config, dependencies);\n        this._prevPieData = {};\n    }\n\n    /**\n     * returns the default configuration of the layer\n     *\n     * @static\n     * @return {Object} Default configuration for arc layer\n     * @memberof ArcLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'arc';\n    }\n\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     *\n     *\n     * @param {Object} x\n     * @param {Object} y\n     * @return {}\n     * @memberof ArcLayer\n     */\n    getNearestPoint (x, y, config = {}) {\n        const dataPoint = selectElement(config.event.target).data()[0];\n        if (isSimpleObject(dataPoint)) {\n            const { source, rowId } = dataPoint;\n            return {\n                id: this.getIdentifiersFromData(source, rowId),\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n\n    /**\n     *\n     *\n     * @param {*} set\n     *\n     * @memberof ArcLayer\n     */\n    getPlotElementsFromSet (set) {\n        return selectElement(this.mount()).selectAll(this.elemType()).filter(d => set.indexOf(d.rowId) !== -1);\n    }\n\n    translatePoints (data) {\n        const { angle, color: colorAxis, radius: radiusAxis } = this.axes();\n        const pieIndex = {};\n        const prevData = this._points[0] || [];\n        const points = [];\n        const angleV = {};\n\n        this._prevPieData = {};\n        prevData.forEach((e, index) => {\n            this._prevPieData[e.rowId] = [e, index];\n            pieIndex[e.index] = e;\n        });\n        data.forEach((d, i) => {\n            const angles = angle.getScaleValue(d.angle);\n            !angleV[d.angle] && (angleV[d.angle] = 0);\n            const { startAngle, endAngle } = angles[angleV[d.angle]++];\n            const uid = d.rowId;\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    radius: radiusAxis.getOuterRadius(d.radius),\n                    radius0: radiusAxis.getInnerRadius(d.radius0),\n                    color: colorAxis.getColor(d.color),\n                    angle0: startAngle,\n                    angle: endAngle,\n                    startAngle,\n                    endAngle,\n                    startAngle0: startAngle,\n                    endAngle0: endAngle\n                },\n                data: d\n            }, i, data, this);\n            const color = resolvedEncodings.color;\n            points.push({\n                source: d.source,\n                index: i,\n                enter: {},\n                update: {\n                    angle0: resolvedEncodings.angle0,\n                    angle: resolvedEncodings.angle,\n                    radius0: resolvedEncodings.radius0,\n                    radius: resolvedEncodings.radius\n                },\n                color,\n                meta: getColorMetaInf(resolvedEncodings.color, colorAxis),\n                rowId: uid,\n                _previousInfo: this._prevPieData[uid] ? this._prevPieData[uid][0] :\n                    getPreviousPoint(pieIndex, i, this)\n            });\n        });\n        return points;\n    }\n\n    /**\n     *\n     *\n     * @param {Object} container\n     * @return {}\n     * @memberof ArcLayer\n     */\n    render (container) {\n        const measurement = this.measurement();\n        const {\n            classPrefix,\n            defClassName,\n            cornerRadius,\n            padAngle,\n            padRadius,\n            transition\n       } = this.config();\n        const qualClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        // This returns a function that generates the arc path based on the datum provided\n        const path = this._arcFn = arc()\n                .cornerRadius(cornerRadius)\n                .startAngle(d => d.update.angle0 + Math.PI / 2)\n                .endAngle(d => d.update.angle + Math.PI / 2)\n                .padAngle(padAngle)\n                .padRadius(padRadius)\n                .outerRadius(d => d.update.radius)\n                .innerRadius(d => d.update.radius0);\n\n        this._points = this._normalizedData.map(arr => this.translatePoints(arr));\n\n        // Creating the group that holds all the arcs\n        const g = makeElement(selectElement(container), 'g', this._points, `${qualClassName[0]}-group`)\n                .classed(`${qualClassName[1]}-group`, true)\n                .attr('transform', `translate(${measurement.width / 2},\n                    ${measurement.height / 2})`);\n        const tween = (elem) => {\n            makeElement(elem, 'path', d => [d], `${qualClassName[0]}-path`)\n                            .style('fill', d => d.color)\n                            .transition()\n                            .duration(transition.duration)\n                            .on('end', this.registerAnimationDoneHook())\n                            .attrTween('d', (...params) => tweenPie(path, params))\n                            .attr('class', (d, i) => {\n                                const individualClass = getIndividualClassName(d, i, this._points, this);\n                                return `${qualClassName[0]}-path ${qualClassName[1]}-path-${d.index}\n                                    ${individualClass}`;\n                            });\n        };\n        const consecutiveExits = [];\n        let exitCounter = 0;\n        const tweenExit = (elem, d) => {\n            let exitArr = consecutiveExits[exitCounter];\n            const oldExitCounter = exitCounter;\n            if (!exitArr) {\n                exitArr = [{ elem, datum: d }];\n            } else if (exitArr[exitArr.length - 1].datum.index === d.index - 1) {\n                exitArr.push({ elem, datum: d });\n            } else {\n                exitCounter++;\n            }\n            consecutiveExits[oldExitCounter] = exitArr;\n        };\n        // Creating groups for all the arcs present individually\n        makeElement(g, 'g', d => d, `${qualClassName[0]}`,\n            {\n                update: tween,\n                exit: tweenExit\n            })\n                        .attr('class', (d, i) => `${qualClassName[0]} ${qualClassName[1]}-${i}`);\n        tweenExitPie(consecutiveExits, transition, path);\n        return this;\n    }\n\n    getPointsFromIdentifiers (identifiers) {\n        if (!this.data()) {\n            return [];\n        }\n        const fieldNames = identifiers[0];\n        const values = identifiers.slice(1, identifiers.length);\n        const pieSlices = selectElement(this.mount()).selectAll('path').data();\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPies = pieSlices.filter((tData) => {\n            const { source, rowId } = tData;\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === source[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === rowId) !== -1;\n                } return true;\n            });\n        });\n\n        const pieSliceInf = filteredPies[0];\n        if (pieSliceInf) {\n            const measurement = this.measurement();\n            const centroid = this._arcFn.centroid(pieSliceInf);\n            return [{\n                x: centroid[0] + measurement.width / 2,\n                y: centroid[1] + measurement.height / 2,\n                width: 2,\n                height: 2\n            }];\n        }\n        return [];\n    }\n}\n","import { getObjProp, interpolator, FieldType, selectElement } from 'muze-utils';\nimport { ANGLE, RADIUS, SIZE, COLOR } from '../../enums/constants';\n\nexport const getPreviousPoint = (prevData, currIndex, context) => {\n    const prevArc = prevData[currIndex - 1];\n    const nextArc = prevData[currIndex];\n    const [startAngle, endAngle] = context.axes().angle.range();\n    if (prevArc && nextArc) {\n        return {\n            update: {\n                angle0: getObjProp(prevArc, 'update', 'angle'),\n                angle: getObjProp(nextArc, 'update', 'angle0')\n            }\n        };\n    } else if (!nextArc) {\n        return {\n            update: {\n                angle0: (endAngle - 90) * Math.PI * 2 / 360,\n                angle: (endAngle - 90) * Math.PI * 2 / 360\n            }\n        };\n    }\n    return {\n        update: {\n            angle0: (startAngle - 90) * Math.PI * 2 / 360,\n            angle: (startAngle - 90) * Math.PI * 2 / 360\n        }\n    };\n};\n\nexport const tweenPie = (path, b) => {\n    const datum = b[0];\n    return function (t) {\n        return path(interpolator()(datum._previousInfo, datum)(t));\n    };\n};\n\nexport const tweenExitPie = (consecutiveExits, transition, path) => {\n    if (consecutiveExits.length > 0) {\n        consecutiveExits.forEach((consecutiveExitArr) => {\n            const startAngle = consecutiveExitArr[0].datum.update.angle0;\n            const endAngle = consecutiveExitArr[consecutiveExitArr.length - 1].datum.update.angle;\n            const mid = (Math.PI * 2 * startAngle) / ((Math.PI * 2) + startAngle - endAngle);\n\n            consecutiveExitArr.forEach((e) => {\n                const { elem, datum } = e;\n\n                elem.each(function () {\n                    const gElem = selectElement(this);\n                    gElem.selectAll('path')\n                                    .transition()\n                                    .duration(transition.duration)\n                                    .attrTween('d', () => function (t) {\n                                        return path(interpolator()(datum, {\n                                            update: {\n                                                angle0: mid,\n                                                angle: mid,\n                                                radius: datum.radius,\n                                                radius0: datum.radius0\n                                            }\n                                        })(t));\n                                    })\n                                    .remove();\n                    gElem.remove();\n                });\n            });\n        });\n    }\n};\n\nexport const getFieldIndices = (encoding, fieldsConfig) => {\n    const [angleField, radiusField, colorField, sizeField] = [ANGLE, RADIUS, COLOR, SIZE]\n            .map(e => encoding[e].field);\n    const [angleIndex, sizeIndex, radiusIndex] = [angleField, sizeField, radiusField]\n        .map((e) => {\n            const conf = fieldsConfig[e];\n            if (conf && conf.def.type === FieldType.MEASURE) {\n                return conf.index;\n            }\n            return null;\n        });\n    const colorIndex = getObjProp(fieldsConfig, colorField, 'index');\n    return {\n        angleIndex,\n        sizeIndex,\n        radiusIndex,\n        colorIndex\n    };\n};\n","import {\n    setAttrs,\n    setStyles,\n    selectElement,\n    makeElement,\n    getSmartComputedStyle\n} from 'muze-utils';\n\n/**\n * Draws svg text in the specified container.\n * @param {SVGElement} container Container where labels will be appended.\n * @param {Array.<Object>} data Data of the elements.\n * @return {Selection} d3 selection of the elements.\n */\nconst drawText = (container, data, config, smartLabel) => {\n    const selection = selectElement(container).selectAll('g').data(data);\n\n    const selectionMerge = selection.enter().append('g')\n        .each(function (dataObj) {\n            setAttrs(this, dataObj.enter);\n        })\n        .merge(selection);\n    const style = getSmartComputedStyle(selectElement(container), config.className);\n    const fontSize = parseInt(style.fontSize, 10);\n\n    smartLabel.setStyle(style);\n    selectionMerge.each(function (dataObj) {\n        const element = selectElement(this);\n        const { update, text, color, textanchor, style: textStyle } = dataObj;\n        const background = dataObj.background;\n        let backgroundVal;\n        if (backgroundVal = background.value) {\n            const backgroundPadding = background.padding;\n            let diff;\n            const { width, height } = smartLabel.getOriSize(dataObj.text);\n            const backgroundEl = makeElement(element, 'rect', [1]);\n\n            if (textanchor === 'end') {\n                diff = width;\n            } else if (textanchor === 'start') {\n                diff = 0;\n            } else {\n                diff = width / 2;\n            }\n\n            setAttrs(backgroundEl.node(), {\n                x: update.x - diff - backgroundPadding / 2,\n                y: update.y - fontSize - backgroundPadding / 2,\n                width: width + backgroundPadding,\n                height: height + backgroundPadding\n            });\n            background && setStyles(backgroundEl, {\n                background: backgroundVal\n            });\n        }\n        const textEl = makeElement(element, 'text', d => [d]).text(text);\n        const textNode = textEl.node();\n        textStyle && setStyles(textNode, textStyle);\n        color && setStyles(textNode, {\n            fill: color\n        });\n        dataObj.className && textEl.classed(dataObj.className, true);\n        setAttrs(textNode, update);\n        textEl.attr('text-anchor', textanchor);\n        textEl.attr('alignment-baseline', dataObj['alignment-baseline']);\n        textEl.attr('transform', `rotate(${dataObj.rotation} ${update.x} ${update.y})`);\n    });\n    selection.exit().remove();\n    return selection;\n};\n\nexport default drawText;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-text',\n    classPrefix: CLASSPREFIX,\n    className: '',\n    transform: {\n        type: 'identity'\n    },\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: {},\n        size: {},\n        radius: {},\n        angle: {},\n        text: {\n            value: '',\n            formatter: (val, i, data, context) => {\n                const valueParser = context.valueParser();\n                return valueParser(val);\n            },\n            background: {\n                padding: 10\n            }\n        },\n        rotation: {\n            value: 0\n        },\n        'alignment-baseline': {\n            value: 'middle'\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-text-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-text-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-text-selected`\n        }\n    }\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    setStyles,\n    createElements\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawText from './renderer';\nimport { defaultConfig } from './default-config';\nimport { positionPoints, getIndividualClassName, resolveEncodingValues, getColorMetaInf, toCartesianCoordinates }\n    from '../../helpers';\nimport { TEXT_ANCHOR_MIDDLE, ENCODING } from '../../enums/constants';\n\nimport './styles.scss';\n\nconst defaultEncoding = defaultConfig.encoding;\nconst alignmentBaseLine = defaultEncoding['alignment-baseline'].value;\nconst defRotation = defaultEncoding.rotation.value;\n\nconst pointTranslators = {\n    polar: (data, config, layerInst) => {\n        let points = [];\n        const axes = layerInst.axes();\n        const encoding = layerInst.config().encoding;\n        const textEncoding = encoding.text;\n        const { radius: radiusAxis, color: colorAxis, angle: angleAxis } = axes;\n        const { formatter: textFormatter } = textEncoding;\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const angleV = {};\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const source = d.source;\n            const text = d.text;\n\n            const color = colorAxis.getColor(d.color);\n            const radius = radiusAxis.getOuterRadius(d.radius);\n            const angles = angleAxis.getScaleValue(d.angle);\n            !angleV[d.angle] && (angleV[d.angle] = 0);\n            const { startAngle, endAngle } = angles[angleV[d.angle]++];\n\n            const angle = (startAngle + endAngle) / 2;\n            const resolvedVal = resolveEncodingValues({\n                values: {\n                    angle,\n                    radius,\n                    color,\n                    text,\n                    startAngle,\n                    endAngle,\n                    rotation: defRotation,\n                    'alignment-baseline': alignmentBaseLine\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    angle: resolvedVal.angle,\n                    radius: resolvedVal.radius\n                },\n                text: textFormatter ? textFormatter(text, i, data, layerInst) : resolvedVal.text,\n                color: resolvedVal.color,\n                rotation: resolvedVal.rotation,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, layerInst) : null,\n                    padding: backgroundPadding\n                },\n                'alignment-baseline': resolvedVal['alignment-baseline'],\n                meta: getColorMetaInf(resolvedVal.color, colorAxis),\n                style: {},\n                source,\n                rowId: d.rowId\n            };\n\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n\n        points = toCartesianCoordinates(positionPoints(layerInst, points), layerInst.measurement());\n\n        points = points.filter((d) => {\n            const update = d.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    },\n    cartesian: (data, config, layerInst) => {\n        let points = [];\n        const axes = layerInst.axes();\n        const colorAxis = axes.color;\n        const encoding = layerInst.config().encoding;\n        const textEncoding = encoding.text;\n        const { field: textField, value, formatter: textFormatter } = textEncoding;\n        const fieldsConfig = layerInst.data().getFieldsConfig();\n\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const textFieldIndex = textField ? fieldsConfig[textField] && fieldsConfig[textField].index : -1;\n        const xEnc = ENCODING.X;\n        const yEnc = ENCODING.Y;\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d.source;\n            const textValue = textField ? row[textFieldIndex] : value;\n\n            const [xPx, yPx] = [xEnc, yEnc].map(type => (axes[type] ? axes[type].getScaleValue(d[type]) +\n                    axes[type].getUnitWidth() / 2 : 0));\n\n            const color = colorAxis.getColor(d.color, colorAxis);\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    text: textValue,\n                    color,\n                    rotation: defRotation,\n                    'alignment-baseline': alignmentBaseLine\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    x: resolvedEncodings.x,\n                    y: resolvedEncodings.y\n                },\n                text: textFormatter(resolvedEncodings.text, i, data, layerInst),\n                color: resolvedEncodings.color,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, layerInst) : null,\n                    padding: backgroundPadding\n                },\n                'alignment-baseline': resolvedEncodings['alignment-baseline'],\n                rotation: resolvedEncodings.rotation,\n                meta: getColorMetaInf(resolvedEncodings.color, colorAxis),\n                style: {},\n                source: d.source,\n                rowId: d.rowId\n            };\n\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n\n        points = positionPoints(layerInst, points);\n        points = points.filter((d) => {\n            const update = d.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n};\n\n/**\n * This layer is used to create labels for each data point. It has an encoding property ```text```\n * which determines from which field's data the value of the label will be taken. The text encoding\n * property is necessary for the layer to render the text.The mark type of this layer is ```text```.\n *\n * @public\n *\n * @class\n * @module TextLayer\n * @extends BaseLayer\n */\nexport default class TextLayer extends BaseLayer {\n    /**\n     * Returns the default configuration of the text layer\n     * @return {Object} Default configuration of the text layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'text';\n    }\n\n    elemType () {\n        return 'text';\n    }\n\n    getPointTranslator (val) {\n        return pointTranslators[val];\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config = {}) {\n        return pointTranslators[this.coord()](data, config, this);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {textLayer} Instance of text layer\n     */\n    render (container) {\n        const config = this.config();\n        const normalizedData = this._normalizedData;\n        const className = config.className;\n        const qualifiedClassName = getQualifiedClassName(config.defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n\n        containerSelection.classed(`${qualifiedClassName.join(' ')} ${className}`, true);\n        createElements({\n            data: normalizedData,\n            append: 'g',\n            selector: 'g',\n            container,\n            each: (dataArr, group) => {\n                const node = group.node();\n                const points = this.translatePoints(dataArr, {}, this);\n                setStyles(node, {\n                    'text-anchor': TEXT_ANCHOR_MIDDLE\n                });\n                drawText(node, points, {\n                    className: qualifiedClassName[0]\n                }, this._dependencies.smartLabel);\n            }\n        });\n        return this;\n    }\n}\n","/* global Element, document  */\nimport {\n    makeElement,\n    selectElement,\n    easeFns,\n    objectIterator,\n    getSymbol\n} from 'muze-utils';\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, groupElement) {\n    const { shape, size, update } = d;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            createShape(d, groupElement);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        if (newShape.nodeName === 'path' || newShape.nodeName === 'image') {\n            shapeElement.attr('transform', `scale(${size / 100})`);\n        } else {\n            shapeElement.attr('height', size);\n            shapeElement.attr('width', size);\n        }\n        shapeElement.attr('x', -size / 2);\n        shapeElement.attr('y', -size / 2);\n        makeElement(groupElement, () => newShape, [1]);\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = getSymbol(shape).size(size)(update);\n        }\n        makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    } else {\n        d.shape = 'circle';\n        createShape(d, groupElement);\n    }\n};\n\n/**\n * Draws symbols using d3 symbol api\n * @param {Object} params Contains the svg container, points and other symbol related attributes.\n */\n/* istanbul ignore next */ const drawSymbols = (params) => {\n    const { layer, container, points, transition, className } = params;\n    const { duration, effect, disabled } = transition;\n    const mount = selectElement(container);\n\n    mount.attr('class', className);\n    return makeElement(mount, 'g', points, null, {\n        enter: (group, d) => {\n            const { enter } = d;\n            group.attr('transform', `translate(${enter.x},${enter.y})`);\n        },\n        update: (group, d) => {\n            createShape(d, group);\n            const { update, style } = d;\n            objectIterator(style, key => group.style(key, style[key]));\n            group.attr('class', className);\n            group.classed(d.className, true);\n            if (!disabled) {\n                group = group.transition()\n                    .duration(transition.duration)\n                    .on('end', layer.registerAnimationDoneHook());\n            }\n            group.attr('transform', `translate(${update.x},${update.y})`);\n        },\n        exit: (exitGroup) => {\n            if (!disabled) {\n                exitGroup.transition().ease(easeFns[effect])\n                .duration(duration)\n                .on('end', () => exitGroup.remove())\n                .style('fill-opacity', 0)\n                .style('stroke-opacity', 0);\n            } else {\n                exitGroup.remove();\n            }\n        }\n    }, params.keyFn);\n};\n\nexport default drawSymbols;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-point',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    defColorStyle: 'stroke',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -20, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }\n        ]\n    },\n    innerPadding: 0.1,\n    nearestPointThreshold: 10,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        size: {\n            value: 30\n        },\n        color: { },\n        shape: {\n            value: 'circle'\n        },\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    shapes: ['circle', 'cross', 'diamond', 'square', 'star', 'wye', 'triangle'],\n    sizes: [20, 30, 40, 50, 60, 70]\n};\n","import {\n    Voronoi,\n    selectElement,\n    getQualifiedClassName,\n    makeElement,\n    FieldType,\n    Scales\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawSymbols from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    positionPoints,\n    getPlotMeasurement,\n    getIndividualClassName,\n    getMarkId,\n    getColorMetaInf,\n    resolveEncodingValues\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to create various symbols for each data point. This is commonly used in\n * scatterplot visualizations. The mark type of this layer is ```point```.\n *\n * @public\n *\n * @class\n * @module PointLayer\n * @extends BaseLayer\n */\nexport default class PointLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of PointLayer.\n     * @param {*} args\n     * @memberof PointLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n        this._bandScale = Scales.band();\n    }\n\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Returns the default configuration of the point layer\n     * @return {Object} Default configuration of the point layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    static formalName () {\n        return 'point';\n    }\n\n    static drawFn () {\n        return drawSymbols;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config = {}) {\n        let points = [];\n        const encoding = this.config().encoding;\n        const axes = this.axes();\n        const {\n            x,\n            y\n        } = encoding;\n        const xField = x.field;\n        const yField = y.field;\n        const { size: sizeAxis, shape: shapeAxis } = axes;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const measurement = this.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const size = sizeAxis.getSize(d.size);\n            const shape = shapeAxis.getShape(d.shape);\n\n            let [xPx, yPx] = [ENCODING.X, ENCODING.Y].map((type) => {\n                const value = d[type] === null ? undefined : d[type];\n                const measure = type === ENCODING.X ? measurement.width : measurement.height;\n                return !encoding[type].field ? measure / 2 : axes[type].getScaleValue(value);\n            });\n\n            xPx += offsetX;\n            yPx += offsetY;\n\n            let color = colorAxis.getColor(d.color);\n\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    color,\n                    shape,\n                    size,\n                    data: d\n                },\n                data: d\n            }, i, data, this);\n            color = resolvedEncodings.color;\n            const style = {\n                fill: color,\n                stroke: color\n            };\n            const pos = {\n                x: resolvedEncodings.x,\n                y: resolvedEncodings.y\n            };\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: pos,\n                    update: pos,\n                    shape: resolvedEncodings.shape,\n                    size: Math.abs(resolvedEncodings.size),\n                    meta: getColorMetaInf(color, colorAxis),\n                    style,\n                    source: d.source,\n                    rowId: d.rowId\n                };\n                point.className = getIndividualClassName(d, i, data, this);\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container.\n     *\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {BarLayer} Instance of bar layer\n     */\n    render (container) {\n        let maxSize = 0;\n        let seriesClassName;\n        const config = this.config();\n        const keys = this._transformedData.map(d => d.key);\n        const { transition, className, defClassName, classPrefix } = config;\n        const normalizedData = this._normalizedData;\n        const containerSelection = selectElement(container);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        this._points = [];\n        this._pointMap = {};\n\n        containerSelection.classed(qualifiedClassName.join(' '), true).classed(className, true);\n\n        this._points = this.generateDataPoints(normalizedData, keys);\n        const schema = this.data().getSchema();\n        makeElement(container, 'g', this._points, null, {\n            update: (group, points) => {\n                maxSize = Math.max(maxSize, ...points.map(d => d.size));\n                seriesClassName = `${qualifiedClassName[0]}`;\n                this.constructor.drawFn()({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    interpolate: config.interpolate,\n                    className: seriesClassName,\n                    transition,\n                    keyFn: v => getMarkId(v.source, schema)\n                });\n            }\n        }, data => data[0].rowId);\n        this._maxSize = Math.sqrt(maxSize / Math.PI) * 2;\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    generateDataPoints (normalizedData, keys) {\n        const [widthMetrics, heightMetrics] = getPlotMeasurement(this, keys);\n        const offsetXValues = widthMetrics.offsetValues || [];\n        const offsetYValues = heightMetrics.offsetValues || [];\n        return normalizedData.map((dataArr, i) => {\n            const measurementConf = this.getMeasurementConfig(offsetXValues[i], offsetYValues[i], widthMetrics.span,\n                heightMetrics.span);\n            return this.translatePoints(dataArr, measurementConf);\n        }).filter(d => d.length);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0) + widthSpan / 2,\n                y: (offsetY || 0) + heightSpan / 2\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n\n    /**\n     * Gets the nearest point from a position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Point details\n     */\n    getNearestPoint (x, y) {\n        const distanceLimit = Math.max(this._maxSize, this.config().nearestPointThreshold);\n\n        if (!this.data()) {\n            return null;\n        }\n\n        const point = this._voronoi.find(x, y, distanceLimit);\n        const dimensions = point && point.data.data.update;\n        const radius = point ? Math.sqrt(point.data.data.size / Math.PI) : 0;\n\n        if (point) {\n            const { source, rowId } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(source, rowId);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: radius,\n                    height: radius\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import { makeElement, easeFns } from 'muze-utils';\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} datum\n * @param {*} index\n * @param {*} context\n */\nconst transitionBars = (layer, elem, datum, index, context) => {\n    const { transition } = context;\n    const { duration, disabled, effect } = transition;\n    const selection = elem;\n\n    const selTransition = disabled ? selection :\n        selection.transition()\n        .duration(duration)\n        .ease(easeFns[effect])\n        .on('end', layer.registerAnimationDoneHook());\n    const update = datum.update || datum;\n    const updateStyle = datum.style || {};\n    datum.className && selection.classed(datum.className, true);\n    Object.entries(update).forEach(attr => (!isNaN(attr[1]) && selTransition.attr(attr[0], attr[1])));\n    Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n};\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} d\n */\nconst barEnterFn = (elem, d) => {\n    const selection = elem;\n    const enter = d.enter || {};\n    Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n};\n\n/**\n * Draws rectangles by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Bar Selection\n */\n/* istanbul ignore next */ export const drawRects = (params) => {\n    const { layer, points, container, keyFn } = params;\n    const updateFns = {\n        enter (elem, d) { barEnterFn(elem, d); },\n        update (elem, d, i) { transitionBars(layer, elem, d, i, params); }\n    };\n    return makeElement(container, 'rect', points, null, updateFns, keyFn);\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-bar',\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transform: {\n        type: 'stack'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    innerPadding: 0.1,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        x0: {},\n        y0: {}\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-bar-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-bar-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-bar-selected`\n        }\n    }\n};\n\n","import { MeasureSubtype, DimensionSubtype } from 'muze-utils';\nimport { STACK } from '../../enums/constants';\nimport { positionPoints, getIndividualClassName, getColorMetaInf, resolveEncodingValues } from '../../helpers';\n\nconst positionRetriever = {\n    x: (xPx, isNegativeVal, barBasePos) => (isNegativeVal ? [xPx, barBasePos] : [barBasePos, xPx]),\n    y: (yPx, isNegativeVal, barBasePos) => (isNegativeVal ? [barBasePos, yPx] : [yPx, barBasePos])\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fieldInfo\n * @param {*} config\n * @param {*} data\n *\n */\nconst resolveDimByField = (type, axesInfo, config, data) => {\n    const spaceType = type === 'x' ? 'width' : 'height';\n    const [fieldType, axis] = [config[`${type}FieldType`], axesInfo[`${type}Axis`]];\n    const {\n        transformType,\n        sizeEncoding,\n        sizeConfig,\n        measurement\n    } = config;\n\n    const sizeValue = sizeEncoding.value;\n    let enter = 0;\n    let pos;\n    let space = 0;\n    let enterSpace = 0;\n    if (fieldType !== undefined) {\n        if (config[`${type}0Field`]) {\n            const minVal = data[type];\n            const maxVal = data[`${type}0`];\n            let min;\n            let max;\n            if (minVal === null || maxVal === null) {\n                return {\n                    enterSpace: undefined,\n                    enter: undefined,\n                    pos: undefined,\n                    space: undefined\n                };\n            } else if (fieldType === MeasureSubtype.CONTINUOUS || fieldType === DimensionSubtype.TEMPORAL) {\n                min = Math.min(minVal, maxVal);\n                max = Math.max(minVal, maxVal);\n            } else {\n                min = minVal;\n                max = maxVal;\n            }\n            const scales = type === 'x' ? [min, max] : [max, min];\n            pos = axis.getScaleValue(scales[0]) + axis.getUnitWidth() / 2;\n            space = Math.abs(axis.getScaleValue(scales[1]) - pos) + axis.getUnitWidth() / 2;\n\n            enter = pos;\n            enterSpace = 0;\n        } else if (fieldType === DimensionSubtype.CATEGORICAL || fieldType === DimensionSubtype.TEMPORAL) {\n            pos = axis.getScaleValue(data[type]) +\n                (sizeConfig[type === 'x' ? 'barWidthOffset' : 'barHeightOffset'] || 0);\n\n            space = sizeConfig[type === 'x' ? 'barWidth' : 'barHeight'];\n            if (sizeValue !== undefined) {\n                const diffPx = sizeValue * space;\n                space -= diffPx;\n                pos += diffPx / 2;\n            }\n            enter = pos;\n            enterSpace = space;\n        } else {\n            const minDomVal = axis.domain()[0];\n            const barBasePos = minDomVal < 0 ? axis.getScaleValue(0) : axis.getScaleValue(minDomVal);\n            pos = axis.getScaleValue(data[type]);\n            let endPos = axis.getScaleValue(data[`${type}0`]);\n\n            enterSpace = 0;\n            const isNegativeVal = data[type] < 0;\n            if (transformType !== STACK) {\n                [pos, endPos] = positionRetriever[type](pos, isNegativeVal, barBasePos);\n            }\n            space = Math.abs(pos - endPos);\n            enter = barBasePos;\n        }\n    } else {\n        pos = 0;\n        space = measurement[spaceType];\n    }\n\n    return {\n        enterSpace,\n        enter,\n        pos,\n        space\n    };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} config\n * @param {*} axes\n *\n */\nconst resolveDimensions = (data, config, axes) => {\n    const axesInfo = {\n        xAxis: axes.x,\n        yAxis: axes.y\n    };\n    const {\n        enterSpace: enterWidth,\n        enter: enterX,\n        pos: xPos,\n        space: width\n    } = resolveDimByField('x', axesInfo, config, data);\n\n    const {\n        enterSpace: enterHeight,\n        enter: enterY,\n        pos: yPos,\n        space: height\n    } = resolveDimByField('y', axesInfo, config, data);\n    return {\n        enter: {\n            x: enterX,\n            y: enterY,\n            width: enterWidth,\n            height: enterHeight\n        },\n        update: {\n            x: xPos,\n            y: yPos,\n            width,\n            height\n        }\n    };\n};\n\n/**\n * Generates an array of objects containing x, y, width and height of the bars from the data\n * @param  {Array.<Array>} data Data Array\n * @param  {Object} encoding  Config\n * @param  {Object} axes     Axes object\n * @param {Object} conf config object for point generation\n * @return {Array.<Object>}  Array of points\n */\nexport const getTranslatedPoints = (context, data, sizeConfig) => {\n    let points = [];\n    const encoding = context.config().encoding;\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const sizeEncoding = encoding.size || {};\n    const {\n            x0Field,\n            y0Field,\n            xFieldSubType,\n            yFieldSubType\n        } = context.encodingFieldsInf();\n    const measurement = context.measurement();\n    const isXDim = xFieldSubType === DimensionSubtype.CATEGORICAL || xFieldSubType === DimensionSubtype.TEMPORAL;\n    const isYDim = yFieldSubType === DimensionSubtype.CATEGORICAL || yFieldSubType === DimensionSubtype.TEMPORAL;\n    const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n    const transformType = context.transformType();\n\n    for (let i = 0, len = data.length; i < len; i++) {\n        const d = data[i];\n        const dimensions = resolveDimensions(d, {\n            xFieldType: xFieldSubType,\n            yFieldType: yFieldSubType,\n            x0Field,\n            y0Field,\n            transformType,\n            measurement,\n            sizeConfig,\n            sizeEncoding\n        }, axes);\n\n        let color = colorAxis.getColor(d.color);\n\n        const update = dimensions.update;\n        const resolvedEncodings = resolveEncodingValues({\n            values: {\n                x: update.x,\n                y: update.y,\n                width: update.width,\n                height: update.height,\n                color\n            },\n            data: d\n        }, i, data, context);\n        color = resolvedEncodings.color;\n        const { x, y, width, height } = resolvedEncodings;\n        if (!isNaN(x) && !isNaN(y) && d.rowId !== undefined) {\n            let point = null;\n            point = {\n                enter: dimensions.enter,\n                update: {\n                    x,\n                    y,\n                    width,\n                    height\n                },\n                source: d.source,\n                rowId: d.rowId,\n                style: {\n                    fill: color\n                },\n                meta: getColorMetaInf(color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, context);\n            points.push(point);\n            // Store each point in a hashmap with key as the dimensional or temporal field value\n            context.cachePoint(d[key], point);\n        }\n    }\n\n    points = positionPoints(context, points);\n    return points;\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    createElements,\n    clipElement,\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    Scales,\n    getNearestValue\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawRects } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getPlotMeasurement, getValidTransformForAggFn } from '../../helpers';\nimport './styles.scss';\nimport { getTranslatedPoints } from './bar-helper';\n\nconst MEASURE = FieldType.MEASURE;\nconst scaleBand = Scales.band;\n\n/**\n * Bar layer creates rectangle marks. The mark type of this layer is ```bar```. This layer can be used\n * to create stacked or grouped bars, range bars, heatmap plots and also reference bands by using\n * the encoding properties.\n *\n * @public\n *\n * @class\n * @module BarLayer\n * @extends BaseLayer\n */\nexport default class BarLayer extends BaseLayer {\n    /**\n     * Creates an instance of bar layer\n     */\n    constructor (...params) {\n        super(...params);\n        this._bandScale = scaleBand();\n        this._plotPadding = {\n            x: 0,\n            y: 0\n        };\n        this._plotSpan = {\n            x: 0,\n            y: 0\n        };\n        this._pointMap = {};\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BarLayer\n     */\n    elemType () {\n        return 'rect';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BarLayer\n     */\n    static formalName () {\n        return 'bar';\n    }\n\n    /**\n     * Returns the default configuration of the bar layer\n     * @return {Object} Default configuration of the bar layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     *\n     * @memberof BarLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const colorField = encoding.color.field;\n        const transform = config.transform;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} fieldsConfig\n     *\n     * @memberof BarLayer\n     */\n    calculateDomainFromData (data, encodingFieldInf, fieldsConfig) {\n        const domain = super.calculateDomainFromData(data, encodingFieldInf, fieldsConfig);\n        ['x', 'y'].forEach((d) => {\n            if (encodingFieldInf[`${d}FieldType`] === MEASURE && domain[d]) {\n                if (encodingFieldInf[`${d}0Field`]) {\n                    domain[d] = domain[d].sort((a, b) => a - b);\n                } else {\n                    domain[d][0] = Math.min(domain[d][0], 0);\n                    domain[d][1] = Math.max(0, domain[d][1]);\n                }\n            }\n        });\n        return domain;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the bars from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @param {Object} conf config object for point generation\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, sizeConfig) {\n        return getTranslatedPoints(this, data, sizeConfig);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGGroup} container SVGGroup where plot will be rendered.\n     * @return {BarLayer} Instance of bar layer.\n     */\n    render (container) {\n        const config = this.config();\n        const transition = config.transition;\n        const normalizedDataArr = this._normalizedData;\n        const transformedData = this._transformedData;\n        const keys = transformedData.map(d => d.key);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const height = axes.y && axes.y.scale().range()[0];\n        const width = axes.x && axes.x.scale().range()[1];\n        const defClassName = config.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const className = config.className;\n        const containerSelection = selectElement(container);\n        const dimensions = Object.values(fieldsConfig).filter(e => e.def.type === FieldType.DIMENSION)\n            .map(e => e.index);\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        clipElement(container, {\n            x: 0,\n            y: 0,\n            width,\n            height\n        }, `id-${this.id()}`);\n\n        this._points = this.generateDataPoints(normalizedDataArr, keys);\n\n        createElements({\n            data: this._points,\n            container,\n            selector: 'g',\n            append: 'g',\n            each: (points, group, i) => {\n                const seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n                group.style('display', 'block');\n                drawRects({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: {},\n                    keyFn: d => dimensions.map(key => d.source[key]).join('-')\n                });\n            }\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} normalizedData\n     * @param {*} keys\n     *\n     * @memberof BarLayer\n     */\n    generateDataPoints (normalizedData, keys) {\n        const [barWidthMetrics, barHeightMetrics] = getPlotMeasurement(this, keys);\n        const barWidthOffsets = barWidthMetrics.offsetValues || [];\n        const barHeightOffsets = barHeightMetrics.offsetValues || [];\n        this._plotSpan = {\n            x: barWidthMetrics.groupSpan || 0,\n            y: barHeightMetrics.groupSpan || 0\n        };\n        this._plotPadding = {\n            x: barWidthMetrics.padding || 0,\n            y: barHeightMetrics.padding || 0\n        };\n\n        this._pointMap = {};\n        return normalizedData.map((data, i) => this.translatePoints(data,\n            {\n                barWidth: barWidthMetrics.span,\n                barWidthOffset: barWidthOffsets[i] || 0,\n                barHeight: barHeightMetrics.span,\n                barHeightOffset: barHeightOffsets[i] || 0\n            }));\n    }\n\n    getPlotPadding () {\n        return this._plotPadding;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Gets the nearest point of the position passed.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point.\n     */\n    getNearestPoint (x, y) {\n        if (!this.data()) {\n            return null;\n        }\n        let axis;\n        let value;\n        let points;\n        let uniqueFieldType;\n        let uniqueFieldIndex;\n        let filterData;\n        let identifiers;\n        let pointFound = null;\n        const dataModel = this.data();\n        const dataObj = dataModel.getData();\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const axes = this.axes();\n        const data = dataObj.data;\n        const pointMap = this._pointMap;\n        const {\n                xField,\n                yField,\n                xFieldSubType,\n                yFieldSubType\n            } = this.encodingFieldsInf();\n\n        if (xFieldSubType === MeasureSubtype.CONTINUOUS) {\n            axis = axes.y;\n            value = axis.invert(y);\n            uniqueFieldIndex = fieldsConfig[yField].index;\n            uniqueFieldType = yFieldSubType;\n        } else {\n            axis = axes.x;\n            value = axis.invert(x);\n            uniqueFieldIndex = fieldsConfig[xField].index;\n            uniqueFieldType = xFieldSubType;\n        }\n\n        if (uniqueFieldType === DimensionSubtype.CATEGORICAL) {\n            points = pointMap[value];\n        }\n\n        if (uniqueFieldType === DimensionSubtype.TEMPORAL) {\n            filterData = [...new Set(data.map(d => d[uniqueFieldIndex]))];\n            value = getNearestValue(filterData, value);\n            points = pointMap[value];\n        }\n        const len = points && points.length;\n        points && points.sort((p1, p2) => p1.update.y - p2.update.y);\n        for (let i = 0; i < len; i++) {\n            const point = points[i];\n            const update = point.update;\n            if (x >= update.x && x <= (update.width + update.x) && y >= update.y && y <= (update.height + update.y)) {\n                pointFound = point;\n                break;\n            }\n            pointFound = null;\n        }\n\n        const values = pointFound && pointFound.source;\n        if (values) {\n            identifiers = this.getIdentifiersFromData(values, pointFound.rowId);\n        }\n        return pointFound ? {\n            dimensions: [pointFound.update],\n            id: identifiers,\n            layerId: this.id()\n        } : pointFound;\n    }\n\n    getPlotSpan () {\n        return this._plotSpan;\n    }\n\n    hasPlotSpan () {\n        return true;\n    }\n}\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-tick',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }]\n    },\n    innerPadding: 0.1,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    interpolate: 'linear',\n    encoding: {\n        color: { },\n        x: {},\n        y: {},\n        x0: {},\n        y0: {},\n        radius: {},\n        radius0: {},\n        angle: {},\n        angle0: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-tick-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-tick-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-tick-selected`\n        }\n    }\n};\n","import { selectElement, Symbols, pathInterpolators } from 'muze-utils';\n\nconst line = Symbols.line;\n\n/**\n * Draws ticks by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Ticks Selection\n */\nexport default /* istanbul ignore next */ (params) => {\n    const { points, container, keyFn, className, interpolate } = params;\n    const mount = selectElement(container);\n    const ticks = mount.selectAll('path').data(points, keyFn);\n    const ticksEnter = ticks.enter().append('path');\n\n    mount.attr('class', className || '');\n    ticksEnter.each(function (d) {\n        const selection = selectElement(this);\n        const enter = d.enter || {};\n        Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n    });\n\n    ticks.exit().remove();\n    return ticks.merge(ticksEnter)\n                    .each(function (d) {\n                        const selection = selectElement(this);\n                        const update = d.update;\n                        const updateStyle = d.style || {};\n                        const x0 = update.x0 !== undefined ? update.x0 : update.x;\n                        const y0 = update.y0 !== undefined ? update.y0 : update.y;\n                        const curveInterpolatorFn = pathInterpolators[interpolate];\n                        const linepath = line()\n                            .curve(curveInterpolatorFn)\n                            .x(e => e[0])\n                            .y(e => e[1]);\n                        d.className && selection.classed(d.className, true);\n                        selection.attr('d', linepath([[update.x, update.y], [x0, y0]]));\n                        Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n                    });\n};\n\n","import { FieldType } from 'muze-utils';\nimport { PointLayer } from '../point';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport drawTicks from './renderer';\nimport './styles.scss';\nimport { getAxesScales, positionPoints, getIndividualClassName,\n    getColorMetaInf, resolveEncodingValues, toCartesianCoordinates } from '../../helpers';\n\nconst pointTranslators = {\n    polar: (data, config = {}, layerInst) => {\n        const axes = layerInst.axes();\n        let points = [];\n        const { radius: radiusAxis, angle: angleAxis, angle0: angle0Axis } = axes;\n        const measurement = layerInst.measurement();\n\n        const colorAxis = axes.color;\n        const angleV = {};\n        const angle0V = {};\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const color = colorAxis.getColor(d.color);\n            const angles = angleAxis.getScaleValue(d.angle);\n            !angleV[d.angle] && (angleV[d.angle] = 0);\n            const { startAngle, endAngle } = angles[angleV[d.angle]++];\n            const angles0 = angle0Axis.getScaleValue(d.angle0);\n            !angle0V[d.angle0] && (angle0V[d.angle0] = 0);\n            const { startAngle: startAngle0, endAngle: endAngle0 } = angles0[angle0V[d.angle0]++];\n            const radius = radiusAxis.getOuterRadius(d.radius);\n            const angle = (startAngle + endAngle) / 2;\n            const angle0 = (startAngle0 + endAngle0) / 2;\n            const resolvedVal = resolveEncodingValues({\n                values: {\n                    radius,\n                    radius0: radiusAxis.getInnerRadius(d.radius0),\n                    color,\n                    angle,\n                    angle0,\n                    startAngle,\n                    endAngle,\n                    startAngle0,\n                    endAngle0\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    radius: resolvedVal.radius,\n                    radius0: resolvedVal.radius0,\n                    angle: resolvedVal.angle,\n                    angle0: resolvedVal.angle0\n                },\n                style: {\n                    stroke: resolvedVal.color\n                },\n                source: d.source,\n                rowId: d.rowId,\n                meta: getColorMetaInf(resolvedVal.color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n        points = toCartesianCoordinates(positionPoints(layerInst, points), measurement, true);\n        return points;\n    },\n    cartesian: (data, config = {}, layerInst) => {\n        const axes = layerInst.axes();\n        let points = [];\n        const {\n                xAxis,\n                yAxis\n            } = getAxesScales(axes);\n        const {\n                xField,\n                yField,\n                x0Field,\n                y0Field,\n                xFieldType,\n                yFieldType\n            } = layerInst.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const measurement = layerInst.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n        const { x: xSpan, y: ySpan } = config.span;\n        for (let i = 0, len = data.length; i < len; i++) {\n            let xPx;\n            let x0Px;\n            let y0Px;\n            let yPx;\n            const d = data[i];\n            const row = d.source;\n            if (xField) {\n                xPx = xAxis.getScaleValue(d.x) + offsetX;\n                x0Px = xPx + xSpan;\n            }\n\n            if (yField) {\n                yPx = yAxis.getScaleValue(d.y) + offsetY;\n                y0Px = yPx !== null ? yPx + ySpan : null;\n            }\n\n            if (!xField) {\n                xPx = 0;\n                x0Px = measurement.width;\n                if (!isNaN(yPx)) {\n                    yPx += ySpan / 2;\n                    y0Px = yPx;\n                }\n            }\n\n            if (!yField) {\n                yPx = 0;\n                y0Px = measurement.height;\n                x0Px = xPx += xSpan / 2;\n            }\n\n            if (x0Field) {\n                x0Px = xAxis.getScaleValue(d.x0) + xSpan;\n                yPx += ySpan / 2;\n                y0Px -= ySpan / 2;\n            }\n\n            if (y0Field) {\n                y0Px = yAxis.getScaleValue(d.y0) + ySpan;\n                xPx += xSpan / 2;\n                x0Px -= xSpan / 2;\n            }\n            const color = colorAxis.getColor(d.color);\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    x0: x0Px,\n                    y0: y0Px,\n                    color\n                },\n                data: d\n            }, i, data, layerInst);\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {},\n                    update: {\n                        x: resolvedEncodings.x,\n                        y: resolvedEncodings.y,\n                        x0: resolvedEncodings.x0,\n                        y0: resolvedEncodings.y0\n                    },\n                    style: {\n                        stroke: resolvedEncodings.color\n                    },\n                    source: row,\n                    rowId: d.rowId,\n                    meta: getColorMetaInf(resolvedEncodings.color, colorAxis)\n                };\n                point.className = getIndividualClassName(d, i, data, layerInst);\n                points.push(point);\n                layerInst.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(layerInst, points);\n        return points;\n    }\n};\n\n/**\n * This layer is used to create small lines. The orientation of the line is determined by the positional\n * encoding properties x0 and y0. The mark type of the layer is ```tick```.\n *\n * @public\n *\n * @class\n * @module TickLayer\n * @extends BaseLayer\n */\nexport default class TickLayer extends PointLayer {\n\n    /**\n     *\n     *\n     * @staticg\n     *\n     * @memberof TickLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static formalName () {\n        return 'tick';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static drawFn () {\n        return drawTicks;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TickLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config) {\n        return pointTranslators[this.coord()](data, config, this);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0),\n                y: (offsetY || 0)\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n}\n","export const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { isSimpleObject, mergeRecursive, getObjProp } from 'muze-utils';\n\nconst parseLayerDefinition = (sink, definition, layerDef, layerType) => {\n    for (const key in definition) {\n        if (Object.hasOwnProperty.call(definition, key)) {\n            let strs;\n            let propValue;\n            const def = definition[key];\n            if (isSimpleObject(def)) {\n                sink[key] = {};\n                parseLayerDefinition(sink[key], def, layerDef, layerType);\n            } else if (typeof def === 'string' && (strs = def.split('.')) && strs[0] === layerType) {\n                propValue = getObjProp(layerDef, ...strs.slice(1, strs.length));\n                if (propValue !== undefined) {\n                    sink[key] = propValue;\n                }\n            } else {\n                sink[key] = def;\n            }\n        }\n    }\n};\n\nconst sanitizeEncoding = (encoding) => {\n    // Create object for each encoding value if encoding value is a string\n    for (const key in encoding) {\n        if (typeof encoding[key] === 'string') {\n            encoding[key] = {\n                field: encoding[key]\n            };\n        }\n    }\n};\n\n/**\n * Layer Factory creates layers based on the layer type. All types of layers needs to register in\n * the layer factory. For getting a layer instance, getLayer method needs to invoked with the\n * layerType and other arguments. It also registers the definition of composite layers.\n *\n * @public\n *\n * @module LayerFactory\n */\nconst layerFactory = (() => {\n    const compositeLayers = {};\n    const factoryObj = {\n        setLayerRegistry: (reg) => {\n            factoryObj._layerRegistry = reg;\n        },\n        getSerializedConf: (mark, layerDef) => {\n            let serializedDefs;\n            const defs = compositeLayers[mark];\n            const newConf = mergeRecursive({}, layerDef);\n\n                // If it is a composite layer then resolve all the definitions of each unit layer\n            if (defs) {\n                serializedDefs = defs.map((unitLayerDef) => {\n                    const sDef = {};\n                    parseLayerDefinition(sDef, unitLayerDef, newConf, mark);\n                    sanitizeEncoding(sDef.encoding);\n                    return sDef;\n                });\n            } else {\n                const encoding = newConf.encoding;\n                // Create object for each encoding value if encoding value is a string\n                sanitizeEncoding(encoding);\n                serializedDefs = newConf;\n            }\n\n            return serializedDefs;\n        },\n        getLayerInstance: (layerDef, ...params) => {\n            const layerRegistry = factoryObj._layerRegistry;\n            layerDef = !(layerDef instanceof Array) ? [layerDef] : layerDef;\n            const instances = layerDef.map((layerObj) => {\n                const layerConstructor = layerRegistry[layerObj.mark];\n                return layerConstructor.create(...params);\n            });\n            return instances.length === 1 ? instances[0] : instances;\n        },\n        getLayerClass: mark => factoryObj._layerRegistry[mark],\n        /**\n         * Registers a new composite layer definition in the layer factory.\n         *\n         * @public\n         *\n         * @param {string} layerType Mark type of the new composite layer.\n         * @param {Array} layerDefs Layer definitions of the composite layer.\n         */\n        composeLayers: (layerType, layerDefs) => {\n            compositeLayers[layerType] = layerDefs;\n        },\n        sanitizeLayerConfig: (layerDef) => {\n            const newConf = mergeRecursive({}, layerDef);\n            sanitizeEncoding(newConf.encoding);\n            return newConf;\n        }\n    };\n    return factoryObj;\n})();\n\nexport default layerFactory;\n","import layerFactory from './layer-factory';\n\nexport default layerFactory;\n","import { AreaLayer } from './layers/area';\nimport { ArcLayer } from './layers/arc';\nimport { LineLayer } from './layers/line';\nimport { TextLayer } from './layers/text';\nimport { PointLayer } from './layers/point';\nimport { BarLayer } from './layers/bar';\nimport { BaseLayer } from './base-layer';\nimport * as LAYER_TYPES from './enums/layer-types';\nimport { TickLayer } from './layers/tick';\n\nexport const DEFAULT_LAYERS = {\n    [LAYER_TYPES.AREA_LAYER]: AreaLayer,\n    [LAYER_TYPES.ARC_LAYER]: ArcLayer,\n    [LAYER_TYPES.LINE_LAYER]: LineLayer,\n    [LAYER_TYPES.TEXT_LAYER]: TextLayer,\n    [LAYER_TYPES.POINT_LAYER]: PointLayer,\n    [LAYER_TYPES.TICK_LAYER]: TickLayer,\n    [LAYER_TYPES.BAR_LAYER]: BarLayer,\n    [LAYER_TYPES.BASE_LAYER]: BaseLayer\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Artboard.\n * Artboard merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module\n */\n\nexport default {\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * Interfaces for VisualGroup. Any new VisualGroup has to implement this class.\n * @class  SimpleGroup\n */\nclass SimpleGroup {\n\n    /**\n     * This method is used to set or get the DataModel instance.\n     *\n     * @param {DataModel | undefined} dataModel Instance of datamodel.\n\n     * @memberof  SimpleGroup\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to set or get the group specific configuration\n     * properties\n     *\n     * @param {Object | undefined} configObj The input configuration.\n     *                                or instance of visual group.\n     * @memberof  SimpleGroup\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to return a serialized representation of the\n     * instance's properties.\n     *\n     * @memberof  SimpleGroup\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to get or set the measurement object which houses\n     * layout properties like width and height.\n     *\n     * @param {Object  | undefined} mObj The measurement properties.\n     * @memberof  SimpleGroup\n     */\n    measurement () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n\nexport default SimpleGroup;\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n *\n *\n * @export\n * @class Variable\n */\nexport default class Variable {\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    type () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    toString () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n","import Variable from './variable';\n\n/**\n * This is a wrapper on top of multiple variables which are of same type but they are shown in the same axis.This is\n * required in case of range plots or ohlc plots where one plot is mapped to multiple measure fields. At that time,\n * we need to create a composed variable from multiple variables. This class just wraps them into one variable instance\n * and provides methods to get the type and other common functionalities which can be performed on a simple variable\n * instance.\n *\n * @public\n * @class ComposeVars\n */\nclass ComposedVars extends Variable {\n\n    /**\n     * Creates an instance of ComposeVars.\n     *\n     * @param {Array} vars Array of SimpleVars.\n     */\n    constructor (...vars) {\n        super();\n        this.vars(vars);\n    }\n\n    vars (...params) {\n        if (params.length) {\n            this._vars = params[0];\n            return this;\n        }\n        return this._vars;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this.vars().forEach(d => d.data(dm[0]));\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    /**\n     * Get all the field names from composed variable instance.\n     *\n     * @public\n     * @return {Array} Array of field names.\n     */\n    getMembers () {\n        const vars = this.vars();\n        return vars.map(member => member.getMembers()[0]);\n    }\n\n    /**\n     * Type of field associated with this composed variable.\n     *\n     * @return {string} Type of variable (Measure/Dimension).\n     */\n    type () {\n        return this.vars()[0].type();\n    }\n\n    toString () {\n        return this.vars().map(d => d.toString()).join(',');\n    }\n\n    /**\n     * Returns the number formatter function of the variable.\n     *\n     * @return {Function} Number formatter function of the variable.\n     */\n    numberFormat () {\n        return this.vars()[0].numberFormat();\n    }\n\n    format (values) {\n        return this.vars()[0].format(values);\n    }\n\n    /**\n     * Returns the subtype of the fields associated with this variable instance.\n     *\n     * @public\n     * @return {string} Subtype of the variable.\n     */\n    subtype () {\n        return this.vars()[0].subtype();\n    }\n\n    /**\n     * Returns the consecutive minimum difference of the field values.\n     *\n     * @public\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        return this.vars()[0].getMinDiff();\n    }\n\n    /**\n     * Returns the display name of the fields.\n     *\n     * @return {string} returns the display name.\n     */\n    displayName () {\n        return this.vars().map(d => d.displayName()).join(',');\n    }\n}\n\nexport default ComposedVars;\n","import { DateTimeFormatter, retrieveFieldDisplayName, DimensionSubtype } from 'muze-utils';\nimport Variable from './variable';\n\n/**\n * This is a wrapper on top of fields passed in rows or columns in canvas. This is used to get the type of field or\n * get min difference from the field values.\n *\n * @public\n * @class SimpleVariable\n */\nexport default class SimpleVariable extends Variable {\n\n    /**\n     * Creates an instance of simple variable instance.\n     *\n     * @param {string} name Field name.\n     */\n    constructor (name) {\n        super();\n        this.oneVar(name);\n    }\n\n    /**\n     * Gets the field name associated with this variable instance.\n     *\n     * @public\n     * @return {string} Name of the field.\n     */\n    oneVar (...oneV) {\n        if (oneV.length) {\n            this._oneVar = oneV[0];\n            return this;\n        }\n        return this._oneVar;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    toString () {\n        return this.oneVar();\n    }\n\n    /**\n     * Gets the number formatter function of this variable.\n     *\n     * @public\n     * @return {Function} Number formatter function.\n     */\n    numberFormat () {\n        if (this.type() === 'measure') {\n            const formatter = this.data().getFieldspace().getMeasure()[this.oneVar()];\n            return formatter.numberFormat();\n        } return val => val;\n    }\n\n    format (values) {\n        if (values && this.subtype() === 'temporal') {\n            const formatter = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            const dtFormat = new DateTimeFormatter(formatter);\n            values = values.map(e => dtFormat.getNativeDate(e));\n        }\n        return values;\n    }\n\n    /**\n     * Returns a formatter function which transforms the input value to its original form.\n     *\n     * @public\n     * @return {Function} Returns raw formatter function.\n     */\n    rawFormat () {\n        if (this.subtype() === DimensionSubtype.TEMPORAL) {\n            const dateFormat = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            return val => DateTimeFormatter.formatAs(val, dateFormat);\n        }\n        return val => val;\n    }\n\n    /**\n     * Return the field names associated with this variable instance.\n     *\n     * @public\n     * @return {Array} Array of fields.\n     */\n    getMembers () {\n        return [this.oneVar()];\n    }\n\n    /**\n     * Returns the type of the variable. Whether it is measure or dimension.\n     *\n     * @public\n     * @return {string} Type of variable.\n     */\n    type () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.type;\n    }\n\n    /**\n     * Returns the subtype of the variable. Subtype can be categorical or temporal. If no subtype is found, then it\n     * returns the type of the variable.\n     *\n     * @public\n     * @return {string} Subtype of variable.\n     */\n    subtype () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.subtype || fieldDef.type;\n    }\n\n    /**\n     * Returns the minimum consecutive difference between the data values of this variable.\n     *\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        const fieldSpace = this.data().getFieldspace();\n        return fieldSpace.fieldsObj()[this.oneVar()].minimumConsecutiveDifference();\n    }\n\n    /**\n     * Returns true if two variable instances are same.If both variable has the same field names, they are equal.\n     *\n     * @return {Boolean} Whether two variable instances are same.\n     */\n    equals (varInst) {\n        return this.oneVar() === varInst.oneVar();\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @return {string} returns the display name.\n     */\n    displayName () {\n        return retrieveFieldDisplayName(this.data(), this.oneVar());\n    }\n}\n","import { ComposedVars, SimpleVariable } from '../variable';\nimport { DIMENSION, COLUMNS, ROWS, TEMPORAL } from '../enums/constants';\n\n/**\n * Gets the list of fields in a sorted order by measurement and dimension\n *\n * @param {Array} fieldList List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields sorted by measurement and dimensions\n */\nconst orderFields = (fieldArray, type) => {\n    const dimensionArr = [[], []];\n    const measureArr = [[], []];\n    const temporalArr = [[], []];\n    const categoricalArr = [[], []];\n\n    fieldArray.forEach((fieldList, index) => {\n        fieldList.forEach((field) => {\n            if (field.type() === DIMENSION) {\n                dimensionArr[index].push(field);\n                field.subtype() === TEMPORAL ? temporalArr[index].push(field) : categoricalArr[index].push(field);\n            } else {\n                measureArr[index].push(field);\n            }\n        });\n    });\n\n    const numOfMeasures = measureArr[0].length + (measureArr[1] ? measureArr[1].length : 0);\n\n    // Single array of fields\n    if (!fieldArray[1]) {\n        // Push measures to bottom\n        measureArr[1] = type === COLUMNS ? measureArr[0] : [];\n        // Push measures to left\n        measureArr[0] = type !== COLUMNS ? measureArr[0] : [];\n        // Bottom and right dimensions empty\n        dimensionArr[1] = [];\n        // Left and top filled with dimensions\n        dimensionArr[0] = dimensionArr[0];\n        if (numOfMeasures === 0) {\n            const allDimensions = [...dimensionArr[0], ...dimensionArr[1]];\n            if (type === COLUMNS) {\n                dimensionArr[1] = allDimensions[allDimensions.length - 1] ? [allDimensions[allDimensions.length - 1]]\n                        : [];\n                allDimensions.splice(-1, 1);\n            } else {\n                dimensionArr[1] = [];\n            }\n            dimensionArr[0] = [...allDimensions];\n        }\n    }\n\n    if (dimensionArr[0].length && dimensionArr[1].length && numOfMeasures > 0) {\n        dimensionArr[0] = [...dimensionArr[0], ...dimensionArr[1]];\n        dimensionArr[1] = [];\n    }\n    return {\n        fields: dimensionArr.map((list, i) => (i === 1 ?\n            measureArr[i].concat(dimensionArr[i]) : dimensionArr[i].concat(measureArr[i]))),\n        dimensions: [...dimensionArr[0], ...dimensionArr[1]],\n        measures: [...measureArr[0], ...measureArr[1]],\n        temporal: [...temporalArr[0], ...temporalArr[1]],\n        categorical: [...categoricalArr[0], ...categoricalArr[1]]\n    };\n};\n\n/**\n * Gets the list of normalized fields\n *\n * @param {Array} fields List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields normalized by measurement and dimensions\n */\nconst normalizeFields = (config, type) => {\n    const fieldsArr = [];\n    const fields = config[type];\n\n    if (!(fields[0] instanceof Array)) {\n        fieldsArr[0] = fields;\n    } else {\n        fieldsArr[0] = fields[0] || [];\n        fieldsArr[1] = fields[1] || [];\n    }\n    return fieldsArr;\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} datamodel\n *\n */\nconst convertToVar = (datamodel, fields) => {\n    const vars = [];\n\n    fields && fields.forEach((field) => {\n        if (field instanceof ComposedVars) {\n            vars.push(field);\n            field.data(datamodel);\n        } else {\n            vars.push(new SimpleVariable(field).data(datamodel));\n        }\n    });\n    return vars;\n};\n\n/**\n *\n *\n * @param {*} rows\n * @param {*} columns\n * @param {*} datamodel\n *\n */\nexport const transformFields = (datamodel, config) => {\n    const [rowsInfo, columnsInfo] = [ROWS, COLUMNS].map((fields) => {\n        const normalizedFields = normalizeFields(config, fields);\n        const norFields = [convertToVar(datamodel, normalizedFields[0])];\n\n        if (normalizedFields[1]) {\n            norFields[1] = convertToVar(datamodel, normalizedFields[1]);\n        }\n        return orderFields(norFields, fields);\n    });\n    const {\n        fields: rows,\n        dimensions: rowDimensions,\n        measures: rowMeasures,\n        temporal: rowTemporalFields,\n        categorical: rowCategoricalFields\n    } = rowsInfo;\n    const {\n        fields: columns,\n        dimensions: columnDimensions,\n        measures: columnMeasures,\n        temporal: columnTemporalFields,\n        categorical: columnCategoricalFields\n    } = columnsInfo;\n    return {\n        rows,\n        rowDimensions,\n        rowMeasures,\n        rowTemporalFields,\n        rowCategoricalFields,\n        columns,\n        columnTemporalFields,\n        columnCategoricalFields,\n        columnDimensions,\n        columnMeasures\n    };\n};\n","import { ERROR_MSG, mergeRecursive } from 'muze-utils';\nimport { transformFields } from './field-sanitizer';\nimport { getHeaderAxisFrom } from '../group-helper/group-utils';\nimport { ROW, COLUMN } from '../enums/constants';\n\n/**\n *\n *\n * @export\n * @class VisualEncoder\n */\nexport default class VisualEncoder {\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    createAxis () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    setCommonDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    getLayerConfig () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    fieldInfo (...info) {\n        if (info.length) {\n            this._fieldInfo = mergeRecursive(this._fieldInfo || {}, info[0]);\n            return this;\n        }\n        return this._fieldInfo;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof VisualEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        this.fieldInfo(transformFields(datamodel, config));\n        return this.fieldInfo();\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    axisFrom (...params) {\n        if (params.length) {\n            this._axisFrom = params[0];\n            return this;\n        }\n        return this._axisFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    headerFrom (...params) {\n        if (params.length) {\n            this._headerFrom = params[0];\n            return this;\n        }\n        return this.__headerFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axisFrom\n     *\n     * @memberof CartesianEncoder\n     */\n    setAxisAndHeaders (axisFrom = {}, fields) {\n        const [rowHeader, rowAxis] = getHeaderAxisFrom(ROW, fields.rows, axisFrom);\n        const [colHeader, colAxis] = getHeaderAxisFrom(COLUMN, fields.columns, axisFrom);\n\n        this.axisFrom({\n            row: rowAxis,\n            column: colAxis\n        });\n        this.headerFrom({\n            row: rowHeader,\n            column: colHeader\n        });\n        return this;\n    }\n}\n","import { ContinousAxis, BandAxis, TimeAxis, ColorAxis, SizeAxis, ShapeAxis } from '@chartshq/muze-axis';\n\nexport const scaleMaps = {\n    linear: ContinousAxis,\n    band: BandAxis,\n    temporal: TimeAxis,\n    size: SizeAxis,\n    color: ColorAxis,\n    shape: ShapeAxis\n};\n","import { ScaleType } from '@chartshq/muze-axis';\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    dimension: ScaleType.BAND,\n    categorical: ScaleType.BAND,\n    temporal: ScaleType.TIME,\n    measure: ScaleType.LINEAR,\n    continuous: ScaleType.LINEAR\n};\n","import { mergeRecursive, getObjProp } from 'muze-utils';\nimport { AxisOrientation } from '@chartshq/muze-axis';\nimport { ENCODING } from '@chartshq/visual-layer';\nimport { scaleMaps } from '../enums/scale-maps';\nimport { getAxisType, getAxisKey } from '../group-helper';\nimport { dataTypeScaleMap } from '../data-type-scale-map';\nimport { CATEGORICAL, TEMPORAL, BAR, LINE, POINT, BOTH, Y, COLOR, SHAPE, SIZE, ANGLE0 } from '../enums/constants';\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst getAxisConfig = (axisInfo, field, axesCreators, indices, facetFields) => {\n    let axisOrientation;\n    const { index, axisIndex, axisType } = axisInfo;\n    const { config, position } = axesCreators;\n    const { rowIndex, columnIndex } = indices;\n    const rawUserAxisConfig = config.axes ? (config.axes[axisType] || {}) : {};\n\n    // Change config object to a function if not already one\n    const userAxisConfigFn = typeof rawUserAxisConfig !== 'function' ?\n    () => rawUserAxisConfig : rawUserAxisConfig;\n    const userAxisConfig = userAxisConfigFn(rowIndex, columnIndex, {\n        axisFields: field.getMembers(),\n        facetFields\n    });\n\n    // If current config does not specifes config for an axis, retain old config\n    if (!userAxisConfig) {\n        return {};\n    }\n\n    const {\n        LEFT,\n        RIGHT,\n        TOP,\n        BOTTOM\n    } = AxisOrientation;\n    const allOrientations = axisType === Y ? [LEFT, RIGHT] : [TOP, BOTTOM];\n\n    if (position === BOTH) {\n        axisOrientation = allOrientations[axisIndex];\n    } else {\n        axisOrientation = position;\n    }\n    const axisConfig = {\n        id: `${axisType}-${index}-${axisIndex}`,\n        name: field.displayName(),\n        field: field.toString(),\n        numberFormat: field.numberFormat(),\n        orientation: axisOrientation,\n        showAxisName: true,\n        show: true,\n        type: dataTypeScaleMap[field.subtype()]\n    };\n    userAxisConfig.tickValues = field.format(userAxisConfig.tickValues);\n    userAxisConfig.domain = field.format(userAxisConfig.domain);\n\n    return mergeRecursive(axisConfig, userAxisConfig);\n};\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst createSimpleAxis = (axisConfig, field, axesCreators) => {\n    const { labelManager } = axesCreators;\n    const Cls = scaleMaps[dataTypeScaleMap[field.subtype()]];\n    const simpleAxis = new Cls(axisConfig, { labelManager });\n    return simpleAxis;\n};\n\nexport const getAdjustedDomain = (max, min) => {\n    const y1ratio = max[0] / (max[0] - min[0]);\n    const y2ratio = max[1] / (max[1] - min[1]);\n\n    // adjust min/max values for positive negative values zero line etc\n    let allSameSign = false;\n\n    // if all numbers are positive set floor to zero\n    if (min[0] > 0 && min[1] > 0 && min[1] > 0 && max[1] > 0) {\n        allSameSign = true;\n        min[0] = 0;\n        min[1] = 0;\n    }\n\n    // if all numbers are negative set ceiling to zero\n    if (min[0] < 0 && min[1] < 0 && min[1] < 0 && max[1] < 0) {\n        allSameSign = true;\n        max[0] = 0;\n        max[1] = 0;\n    }\n\n    // align zero line if necessary\n    if (!allSameSign && y1ratio !== y2ratio) {\n        if (y1ratio < y2ratio) {\n                    // adjust min[1]\n            min[1] = min[0] / max[0] * max[1];\n        } else {\n                    // adjust min[0]\n            min[0] = min[1] / max[1] * max[0];\n        }\n    }\n    return [\n        [min[0], max[0]],\n        [min[1], max[1]]\n    ];\n};\n\n/**\n *\n *\n * @param {*} axisType\n * @param {*} fieldInfo\n * @param {*} axesCreators\n * @param {*} groupAxes\n *\n */\nexport const generateAxisFromMap = (axisType, fieldInfo, axesCreators, axesInfo, indices, facetFields) => {\n    let axisKey;\n    const { groupAxes, valueParser } = axesInfo;\n    const currentAxes = [];\n    const { fields, index } = fieldInfo;\n    const { cacheMaps } = axesCreators;\n    const map = cacheMaps[`${axisType}AxesMap`];\n\n    const commonAxisKey = getAxisKey(axisType, index);\n    fields.forEach((field, axisIndex) => {\n        axisKey = getAxisKey(axisType, index, axisIndex, dataTypeScaleMap[field.subtype()]);\n        const axisConfig = getAxisConfig({ index, axisIndex, axisType }, field, axesCreators, indices, facetFields);\n\n        let axis;\n        if (!map.has(axisKey)) {\n            axis = createSimpleAxis(axisConfig, field, axesCreators);\n        } else {\n            axis = map.get(axisKey);\n            axis._rotationLock = false;\n            axis.config(axisConfig);\n        }\n        axis.valueParser(valueParser);\n        currentAxes.push(axis);\n        map.set(axisKey, axis);\n    });\n\n    if (currentAxes.length) {\n        map.set(commonAxisKey, currentAxes);\n        groupAxes.add(commonAxisKey);\n    }\n\n    return currentAxes;\n};\n\nexport const sanitizeIndividualLayerConfig = (encodingConfigs, def) => {\n    [COLOR, SHAPE, SIZE].forEach((axis) => {\n        if (encodingConfigs[axis] && encodingConfigs[axis].field) {\n            def.forEach((conf) => {\n                conf.encoding = conf.encoding || {};\n                !conf.encoding[axis] && (conf.encoding[axis] = {});\n                conf.encoding[axis].field = encodingConfigs[axis].field;\n            });\n        }\n    });\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n    const xAxes = [];\n    const yAxes = [];\n\n    xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes.push(xAxis);\n    });\n    yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes.push(yAxis);\n    });\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n * return a default mark based on predefined set of rules of type and subtype of the fields\n *\n * @param {string} colFieldType dimension/measure - temporal/ordinal/nominal\n * @param {string} rowFieldType dimension/measure - temporal/ordinal/nominal\n * @return {Object} return mark type\n */\nexport const getDefaultMark = (colFieldType, rowFieldType) => {\n    let mark;\n\n    if (colFieldType === CATEGORICAL || rowFieldType === CATEGORICAL) {\n        mark = BAR;\n    } else if (colFieldType === TEMPORAL || rowFieldType === TEMPORAL) {\n        mark = LINE;\n    } else {\n        mark = POINT;\n    }\n\n    return mark;\n};\n\n/**\n *\n *\n * @param {*} axesCreators\n * @param {*} [fieldInfo=[]]\n *\n */\nexport const createRetinalAxis = (axesCreators, fieldProps = {}) => {\n    const { axisType, fieldsConfig } = axesCreators;\n    const field = fieldProps.field;\n    const axis = [];\n    const Cls = scaleMaps[axisType];\n\n    fieldProps.type = fieldProps.type ? fieldProps.type : getAxisType(fieldsConfig, field || null);\n    axis.push(new Cls(fieldProps));\n    return axis;\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} val\n *\n */\nexport const getIndex = (arr, val) => {\n    let i = 0;\n    let arrIndex = -1;\n\n    while (arrIndex === -1 && i < arr.length) {\n        if (arr[i].toString() === val.toString()) {\n            arrIndex = i;\n        }\n        i++;\n    }\n    return arrIndex;\n};\n\n/**\n *\n *\n * @param {*} colFields\n * @param {*} rowFields\n * @param {*} userLayerConfig\n *\n * @memberof CartesianEncoder\n */\nexport const getLayerConfFromFields = (colFields, rowFields, userLayerConfig) => userLayerConfig.filter((conf) => {\n    const userConf = conf instanceof Array ? conf : [conf];\n    const encodingArr = [].concat(...userConf.map(d => d.encoding).filter(d => d !== undefined));\n\n    if (!encodingArr.length) {\n        return true;\n    }\n\n    const xFields = [].concat(...encodingArr.map(d => [d.x && d.x.field, d.x0 && d.x0.field]))\n                .filter(d => d !== undefined && d !== null);\n    const yFields = [].concat(...encodingArr.map(d => [d.y && d.y.field, d.y0 && d.y0.field]))\n                .filter(d => d !== undefined && d !== null);\n\n    if (!xFields.length && !yFields.length) {\n        return true;\n    }\n\n    const colFieldExist = xFields.length ? xFields.every(d => colFields.indexOf(d) !== -1) : false;\n    const rowFieldExist = yFields.length ? yFields.every(d => rowFields.indexOf(d) !== -1) : false;\n    if (xFields.length && yFields.length) {\n        return colFieldExist && rowFieldExist;\n    }\n    return colFieldExist || rowFieldExist;\n});\n\nexport const resolveAxisConfig = (context, fieldInf, axisInfo) => {\n    const { rowIndex, columnIndex, axesObj } = axisInfo;\n    const { config, facetFields, resolver } = context;\n    const resolverAxes = resolver.axes();\n    const { RADIUS, ANGLE } = ENCODING;\n    [RADIUS, ANGLE, ANGLE0].forEach((enc) => {\n        const axesArr = resolverAxes[enc];\n        if (!axesArr[rowIndex]) {\n            axesArr[rowIndex] = [];\n        }\n        axesArr[rowIndex][columnIndex] = axesObj[enc];\n        const axisConfig = getObjProp(config.axes, enc) || {};\n\n        axesObj[enc].forEach((axis, i) => {\n            let userConfig = axisConfig;\n            if (axisConfig instanceof Function) {\n                userConfig = axisConfig(rowIndex, columnIndex, {\n                    axisFields: [fieldInf[enc][i]],\n                    facetFields\n                });\n            }\n            axis.config(userConfig);\n        });\n    });\n};\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    mergeRecursive,\n    STATE_NAMESPACES,\n    unionDomain,\n    COORD_TYPES,\n    toArray,\n    sortFieldByType\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport {\n    generateAxisFromMap,\n    getDefaultMark,\n    getIndex,\n    getLayerConfFromFields,\n    getAdjustedDomain,\n    sanitizeIndividualLayerConfig\n} from './encoder-helper';\nimport { retriveDomainFromData } from '../group-helper';\n\nimport { ROW, COLUMN, COL, LEFT, TOP, MEASURE, BOTH, X, Y } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\nconst CARTESIAN = COORD_TYPES.CARTESIAN;\n\n/**\n *\n *\n * @export\n * @class CartesianEncoder\n * @extends {VisualEncoder}\n */\nexport default class CartesianEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     *\n     * @memberof CartesianEncoder\n     */\n    static type () {\n        return CARTESIAN;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof CartesianEncoder\n     */\n    createAxis (axesCreators, fieldInfo, context) {\n        const geomCellAxes = {};\n        const {\n            axes\n        } = axesCreators;\n        const {\n            projections,\n            indices\n        } = fieldInfo;\n        const {\n            rowFields,\n            columnFields\n        } = projections;\n        const {\n             rowIndex,\n             columnIndex\n        } = indices;\n        const axisFields = [{\n            fields: rowFields,\n            index: rowIndex\n        }, {\n            fields: columnFields,\n            index: columnIndex\n        }];\n        const { resolver, facetFields, geomCell } = context;\n        const xAxes = axes.x || [];\n        const yAxes = axes.y || [];\n\n        [rowFields, columnFields].forEach((fields, i) => {\n            const type = i === 0 ? ROW : COLUMN;\n            const axis = i === 0 ? Y : X;\n\n            if (fields.length > 1) {\n                axesCreators.position = BOTH;\n            } else {\n                axesCreators.position = this.axisFrom()[type];\n            }\n            geomCellAxes[axis] = generateAxisFromMap(axis, axisFields[i], axesCreators, {\n                groupAxes: axis === X ? xAxes : yAxes,\n                valueParser: resolver.valueParser()\n            }, indices, facetFields);\n        });\n        geomCell.axes(geomCellAxes);\n        return geomCellAxes;\n    }\n\n    updateDomains (store, axes) {\n        const xAxes = axes.x;\n        const yAxes = axes.y;\n        store.model.lock();\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${0}${i}0`, xAxes[i][j].domain());\n            }\n        }\n        for (let i = 0; i < yAxes.length; i++) {\n            for (let j = 0; j < yAxes[i].length; j++) {\n                store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${i}${0}0`, yAxes[i][j].domain());\n                yAxes[i][j]._domainLock = false;\n            }\n        }\n\n        store.model.unlock();\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const resolver = context.resolver();\n        const units = resolver.units();\n        const domains = {\n            0: {},\n            1: {}\n        };\n        // const sortingDetails = nearestSortingDetails(context.getGroupByData());\n        const config = context.config();\n        const fieldsObj = {\n            0: {},\n            1: {}\n        };\n\n        for (let rIdx = 0, len = units.length; rIdx < len; rIdx++) {\n            const unitsArr = units[rIdx];\n            for (let cIdx = 0, len2 = unitsArr.length; cIdx < len2; cIdx++) {\n                const unit = unitsArr[cIdx];\n                const axisFields = unit.fields();\n                const encodingDomains = unit.getDataDomain();\n                ['x', 'y'].forEach((axisType, axisTypeIndex) => {\n                    const fieldArr = axisFields[axisType];\n                    fieldArr.forEach((field, axisIndex) => {\n                        const key = !axisTypeIndex ? `0${cIdx}${axisIndex}` : `${rIdx}0${axisIndex}`;\n                        const dom = encodingDomains[axisType];\n                        const typeOfField = field.subtype();\n                        fieldsObj[axisTypeIndex][key] = field;\n\n                        if (dom && Object.keys(dom).length !== 0) {\n                            domains[axisTypeIndex][key] = unionDomain([(domains[axisTypeIndex] &&\n                                domains[axisTypeIndex][key]) || [], dom[`${field}`]], typeOfField);\n                        }\n                    });\n                });\n            }\n        }\n\n        const { x: xAxes, y: yAxes } = resolver.axes();\n        store.model.lock();\n        [xAxes, yAxes].forEach((axesArr, axisType) => {\n            axesArr.forEach((axes, idx) => {\n                let key;\n                let domain = [];\n                let adjustedDomain = [];\n                const min = [];\n                const max = [];\n                const typeOfAxis = axes[0].constructor.type();\n\n                if (axes.length > 1 && typeOfAxis === ScaleType.LINEAR && axes[0].config().alignZeroLine) {\n                    axes.forEach((axis, i) => {\n                        key = !axisType ? `0${idx}${i}` : `${idx}0${i}`;\n                        domain = domains[axisType][key];\n                        min[i] = domain[0];\n                        max[i] = domain[1];\n                    });\n                    adjustedDomain = getAdjustedDomain(max, min);\n                } else if (typeOfAxis === ScaleType.BAND) {\n                    /* Sort categorical fields to ensure consistency across all rows\n                    only if field is categorical and is not explicitily sorted by user */\n                    key = !axisType ? `0${idx}0` : `${idx}00`;\n                    const currentFieldName = fieldsObj[axisType][key].oneVar();\n                    const sortingOrder = config.sort && config.sort[currentFieldName];\n                    const subType = fieldsObj[axisType][key].subtype();\n\n                    if (sortingOrder) {\n                        domains[axisType][key].sort((a, b) => sortFieldByType(subType, sortingOrder, a, b));\n                    }\n                }\n\n                axes.forEach((axis, index) => {\n                    key = !axisType ? `0${idx}${index}` : `${idx}0${index}`;\n                    domain = adjustedDomain[index] || domains[axisType][key];\n\n                    domain && axis.domain(domain);\n                    const type = !axisType ? 'x' : 'y';\n                    store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type}.${idx}${index}`, domain);\n                });\n            });\n        });\n        store.model.unlock();\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields, type) {\n        let facets = [];\n        let projections = [];\n        let counter = 0;\n        const primaryFacets = [];\n        const secondaryFacets = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n        const axisFrom = this.axisFrom();\n\n        for (let i = 0; i < primaryLen; i++) {\n            let projArr = [primaryFields[i]];\n            const primaryField = primaryFields[i];\n\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter];\n                if (secondaryField && secondaryField.type() === MEASURE) {\n                    counter++;\n                    projArr = [primaryField, secondaryField];\n                }\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n                primaryFacets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                    secondaryFacets.push(secondaryField);\n                }\n            }\n        }\n        if ((primaryFacets.length || secondaryFacets.length) && !projections.length) {\n            type = type === COL ? COLUMN : type;\n            if ((axisFrom[type] === LEFT || axisFrom[type] === TOP) && primaryFacets.length) {\n                const axisFromIndex = primaryFacets.length - 1;\n                const facet = primaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(secondaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    secondaryFacets.splice(existIndex, 1);\n                }\n                primaryFacets.splice(axisFromIndex, 1);\n            } else {\n                const axisFromIndex = 0;\n                const facet = secondaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(primaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    primaryFacets.splice(existIndex, 1);\n                }\n                secondaryFacets.splice(axisFromIndex, 1);\n            }\n        }\n\n        facets = [...primaryFacets, ...secondaryFacets];\n        facets = facets.filter((el, index, self) => index === self.findIndex(t => (t.toString() === el.toString())));\n        return {\n            facets,\n            projections\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof CartesianEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        return super.fieldSanitizer(datamodel, config);\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     *\n     * @memberof CartesianEncoder\n     */\n    getRetinalFieldsDomain (dataModels, encoding) {\n        const groupedModel = dataModels.groupedModel;\n        const domains = {};\n        for (const key in encoding) {\n            if ({}.hasOwnProperty.call(encoding, key)) {\n                const encodingObj = encoding[key];\n                const field = encodingObj.field;\n                if (!encodingObj.domain && field) {\n                    const domain = retriveDomainFromData(groupedModel, field);\n                    domains[field] = domain;\n                }\n            }\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     * @memberof CartesianEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n        // let currentLayerIndex = 0;\n        layerArray.length && layerArray.forEach((layer, i) => {\n            const def = layerFactory.sanitizeLayerConfig(layer);\n            def.order = i;\n            serializedLayers.push(def);\n        });\n        return serializedLayers;\n    }\n\n    sanitizeLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n        userLayerConfig.forEach((config) => {\n            const def = toArray(config.def);\n            sanitizeIndividualLayerConfig(encodingConfigs, def);\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof CartesianEncoder\n     */\n    getLayerConfig (fields, userLayerConfig, retinalConfig) {\n        const layerConfig = [];\n        const {\n            columnFields,\n            rowFields\n        } = fields;\n\n        // let currentLayerIndex = 0;\n        columnFields.forEach((colField) => {\n            const colFieldName = colField.toString();\n            rowFields.forEach((rowField) => {\n                let configs = [];\n                const rowFieldName = rowField.toString();\n                const encoding = {\n                    x: {\n                        field: colFieldName\n                    },\n                    y: {\n                        field: rowFieldName\n                    }\n                };\n                const rowFieldType = rowField.subtype();\n                const colFieldType = colField.subtype();\n                const mark = getDefaultMark(colFieldType, rowFieldType);\n\n                const defConfigs = [{\n                    mark,\n                    def: {\n                        mark,\n                        encoding\n                    }\n                }];\n\n                const layerConfigs = getLayerConfFromFields(colField.getMembers(),\n                    rowField.getMembers(), userLayerConfig || []);\n                if (layerConfigs.length) {\n                    configs = layerConfigs.map((layerConf) => {\n                        const mergedLayerConf = mergeRecursive(mergeRecursive({}, defConfigs[0].def), layerConf);\n                        const serializedLayerConfig = layerFactory.getSerializedConf(mergedLayerConf.mark,\n                            mergedLayerConf);\n                        return {\n                            mark: mergedLayerConf.mark,\n                            order: mergedLayerConf.order,\n                            def: serializedLayerConfig\n                        };\n                    });\n                } else {\n                    configs = defConfigs;\n                }\n\n                layerConfig.push(...configs);\n            });\n        });\n        return this.sanitizeLayerConfig(retinalConfig, layerConfig);\n    }\n}\n","import { AngleAxis, RadiusAxis } from '@chartshq/muze-axis';\nimport { layerFactory, ENCODING } from '@chartshq/visual-layer';\nimport {\n    mergeRecursive,\n    STATE_NAMESPACES,\n    GROUP_BY_FUNCTIONS,\n    COORD_TYPES,\n    toArray,\n    getObjProp,\n    defaultValue\n} from 'muze-utils';\nimport VisualEncoder from './visual-encoder';\nimport { SIZE, MEASURE, ARC, COLOR } from '../enums/constants';\nimport { sanitizeIndividualLayerConfig, resolveAxisConfig } from './encoder-helper';\nimport { SimpleVariable } from '../variable';\n\nconst POLAR = COORD_TYPES.POLAR;\nconst { RADIUS, ANGLE, ANGLE0 } = ENCODING;\n\nconst axesCls = {\n    [RADIUS]: RadiusAxis,\n    [ANGLE]: AngleAxis,\n    [ANGLE0]: AngleAxis\n};\n\nconst getSizeMultiplier = (sizeVal, sizeAxis) => {\n    const sizeAxisDomain = sizeAxis.domain();\n    const sizeMultiplier = sizeAxis.getSize(sizeVal) / (sizeAxisDomain ? sizeAxis.range()[1] : sizeAxis.config().value);\n    return sizeMultiplier;\n};\n\nconst setRadiusFactor = (context) => {\n    const data = context.data();\n    const sizeField = context.retinalFields().size.field;\n    const { radius, size } = context.axes();\n\n    if (sizeField && radius && radius.length) {\n        const sizeFieldIndex = data.getFieldsConfig()[sizeField].index;\n        const sizeVal = data.getData().data.reduce((acc, val) => acc + val[sizeFieldIndex], 1);\n        const sizeMultiplier = getSizeMultiplier(sizeVal, size[0]);\n        radius.forEach(axis => axis.setRadiusFactor(sizeMultiplier));\n    }\n};\n\n/**\n *\n *\n * @export\n * @class PolarEncoder\n * @extends {VisualEncoder}\n */\nexport default class PolarEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof PolarEncoder\n     */\n    createAxis (axesCreators, fieldInfo, context) {\n        const {\n            axes\n        } = axesCreators;\n        const geomCellAxes = axes;\n        const {\n            indices\n        } = fieldInfo;\n        const {\n            rowIndex,\n            columnIndex\n        } = indices;\n        // Dummy axes for polar, to create blank cells\n        const pieAxes = geomCellAxes.pie || [];\n\n        pieAxes[rowIndex] = pieAxes[rowIndex] || [];\n        pieAxes[rowIndex][columnIndex] = [];\n\n        const axesObj = {};\n        const { geomCell, resolver } = context;\n        const layers = resolver.matrixLayers();\n        const resolverAxes = resolver.axes();\n        const cellLayers = layers[rowIndex][columnIndex];\n        const fields = {\n            radius: {},\n            angle: {},\n            angle0: {}\n        };\n\n        cellLayers.forEach((layerConf) => {\n            const def = layerConf.def;\n            [ANGLE, ANGLE0, RADIUS].forEach((enc) => {\n                const field = getObjProp(def.encoding, enc, 'field');\n                field && (fields[enc][field] = 0);\n            });\n        });\n        const fieldInf = {};\n        const varInstances = {};\n\n        for (const encType in fields) {\n            fieldInf[encType] = Object.keys(fields[encType]);\n            axesObj[encType] = [];\n            varInstances[encType] = [];\n            fieldInf[encType].forEach((field, i) => {\n                varInstances[encType][i] = new SimpleVariable(field);\n                axesObj[encType][i] = new axesCls[encType]();\n            });\n            axesObj[encType][axesObj[encType].length] = new axesCls[encType]();\n        }\n        resolveAxisConfig(context, fieldInf, {\n            axesObj,\n            rowIndex,\n            columnIndex\n        });\n        geomCell.axes(axesObj)\n            .fields(Object.assign({}, varInstances, geomCell.fields()));\n        resolverAxes.pie = pieAxes;\n        return geomCellAxes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields) {\n        let counter = 0;\n        const facets = [];\n        const projections = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n\n        for (let i = 0; i < primaryLen; i++) {\n            const primaryField = primaryFields[i];\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter++];\n                const projArr = secondaryField ? [primaryField, secondaryField] : [primaryField];\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                }\n            }\n        }\n        return {\n            facets,\n            projections\n        };\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const domainProps = {\n            radius: [],\n            angle: [],\n            angle0: []\n        };\n        const axes = context.resolver().axes();\n        context.matrixInstance().value.each((cell, rIdx, cIdx) => {\n            const unit = cell.valueOf();\n            const unitDomains = unit.getDataDomain();\n            const fields = unit.fields();\n            setRadiusFactor(unit);\n            [RADIUS, ANGLE, ANGLE0].forEach((encType) => {\n                const encodingFields = fields[encType];\n                const domains = unitDomains[encType] || {};\n                encodingFields.forEach((field, i) => {\n                    !domainProps[encType][rIdx] && (domainProps[encType][rIdx] = []);\n                    !domainProps[encType][rIdx][cIdx] && (domainProps[encType][rIdx][cIdx] = []);\n                    domainProps[encType][rIdx][cIdx][i] = domains[`${field}`] || [];\n                });\n            });\n        });\n\n        for (const key in domainProps) {\n            const specificAxes = axes[key];\n            specificAxes.forEach((axesArr, rIdx) => {\n                axesArr.forEach((axisArr, cIdx) => {\n                    axisArr.forEach((axis, i) => {\n                        axis.domain(defaultValue(getObjProp(domainProps[key], rIdx, cIdx, i), []));\n                    });\n                });\n            });\n            store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${key}`, domainProps[key]);\n        }\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    setCommonDomain () {\n        // No domain to be set\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    static type () {\n        return POLAR;\n    }\n\n    layers (...layers) {\n        if (layers.length) {\n            this._layers = layers[0];\n            return this;\n        }\n        return this._layers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof PolarEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        let sanitizedRows = [[], []];\n        let sanitizedColumns = [[], []];\n        const fields = super.fieldSanitizer(datamodel, config);\n        const {\n            layers\n        } = config;\n        const {\n            rows,\n            columns\n        } = fields;\n        const layer = layers[0];\n        const encoding = layer.encoding;\n        const radius = encoding && encoding.radius ? encoding.radius.field : null;\n        const angle = encoding && encoding.angle ? encoding.angle.field : null;\n        const sanitizedFields = [sanitizedRows, sanitizedColumns];\n\n        [rows, columns].forEach((fieldType, typeIndex) => {\n            fieldType.forEach((fieldSet, i) => fieldSet.forEach((field) => {\n                if (field.toString() !== radius && field.toString() !== angle && field.type() !== MEASURE) {\n                    sanitizedFields[typeIndex][i].push(field);\n                }\n            }));\n        });\n        sanitizedColumns = [...new Set(sanitizedColumns)];\n        sanitizedRows = [...new Set(sanitizedRows)];\n        this.fieldInfo({ rows: sanitizedRows, columns: sanitizedColumns });\n        return this.fieldInfo();\n    }\n\n    getRetinalFieldsDomain (dataModels, encoding, facetFields, groupBy) {\n        let sizeField;\n        let colorField;\n        const fields = [];\n        const layers = this.layers();\n        const dataModel = dataModels.groupedModel;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const domains = {};\n        if (layers && layers[0]) {\n            const layer = layers[0];\n            const layerEncoding = layer.def.encoding || {};\n\n            [RADIUS, ANGLE, SIZE, COLOR].forEach((encType) => {\n                const field = layerEncoding[encType] ? layerEncoding[encType].field : '';\n                const measureField = fieldsConfig[field] && fieldsConfig[field].def.type === MEASURE;\n                if (encType === SIZE && measureField) {\n                    sizeField = field;\n                }\n                if (encType === COLOR) {\n                    colorField = field;\n                }\n                fieldsConfig[field] && !measureField && fields.push(field);\n            });\n        }\n\n        if (sizeField) {\n            domains[sizeField] = dataModel.groupBy(facetFields, {\n                [sizeField]: GROUP_BY_FUNCTIONS.SUM\n            }).getFieldspace().fieldsObj()[sizeField].domain();\n        }\n\n        if (colorField) {\n            const dm = dataModel.groupBy([...facetFields, ...fields], groupBy.measures);\n            domains[colorField] = dm.getFieldspace().fieldsObj()[colorField].domain();\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof PolarEncoder\n     */\n    getLayerConfig (fields, userLayerConfig, retinalConfig) {\n        let layerConfig = [];\n        const {\n                columnFields,\n                rowFields\n            } = fields;\n        const allFields = [...columnFields, ...rowFields];\n\n        allFields.forEach(() => {\n            const encoding = {};\n            let config = {\n                mark: ARC,\n                def: {\n                    encoding\n                }\n            };\n            if (userLayerConfig && userLayerConfig.length > 0) {\n                config = mergeRecursive(config, userLayerConfig[0]);\n            }\n            layerConfig.push(config);\n        });\n        if (layerConfig.length === 0) {\n            layerConfig = userLayerConfig;\n        }\n        const sanitizedConfig = this.sanitizeLayerConfig(retinalConfig, layerConfig);\n        this.layers(sanitizedConfig);\n        return sanitizedConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     *\n     * @memberof PolarEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n\n        layerArray.length && layerArray.forEach((layer) => {\n            const def = layerFactory.getSerializedConf(layer.mark, layer);\n            serializedLayers.push({\n                mark: layer.mark,\n                def\n            });\n        });\n        return serializedLayers;\n    }\n\n    sanitizeLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n\n        userLayerConfig.forEach((config) => {\n            const def = toArray(config.def);\n            sanitizeIndividualLayerConfig(encodingConfigs, def);\n            def.forEach((conf) => {\n                const encoding = conf.encoding || (conf.encoding = {});\n                !encoding.angle && (encoding.angle = {});\n                const angleField = getObjProp(encoding.angle, 'field');\n                const angle0Field = getObjProp(encoding.angle0, 'field');\n                if (!angleField) {\n                    Object.assign(encoding.angle, {\n                        field: encodingConfigs.color && encodingConfigs.color.field\n                    });\n                }\n                if (!angle0Field) {\n                    !encoding.angle0 && (encoding.angle0 = {});\n                    Object.assign(encoding.angle0, {\n                        field: encoding.angle.field\n                    });\n                }\n            });\n\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n}\n","import { createRetinalAxis } from './encoder-helper';\nimport { COLOR, SHAPE, SIZE } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class RetinalEncoder\n * @extends {VisualEncoder}\n */\nexport default class RetinalEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     *\n     * @memberof RetinalEncoder\n     */\n    createAxis (axesCreators) {\n        const { fieldsConfig, config } = axesCreators;\n        const newAxes = {};\n\n        [COLOR, SHAPE, SIZE].forEach((axisType) => {\n            newAxes[`${axisType}`] = createRetinalAxis({ axisType, fieldsConfig }, config[axisType]);\n        });\n        return newAxes;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof RetinalEncoder\n     */\n    static type () {\n        return 'retinal';\n    }\n\n    /**\n     *\n     *\n     * @param {*} context\n     *\n     * @memberof RetinalEncoder\n     */\n    setCommonDomain (context) {\n        const { domains, axes, encoding } = context;\n\n        Object.entries(encoding).forEach((enc) => {\n            if (enc[1] && enc[1].field) {\n                const encType = enc[0];\n                const field = enc[1].field;\n\n                if (field) {\n                    axes[encType].forEach((axis) => {\n                        const domain = domains[field];\n                        !enc[1].domain && axis.updateDomain(domain);\n                    });\n                }\n            }\n        });\n        return axes;\n    }\n}\n","import { Store, FieldType, COORD_TYPES, getObjProp, sortFieldByType } from 'muze-utils';\nimport { DATA_UPDATE_COUNTER } from '../enums/defaults';\nimport { Variable } from '../variable';\nimport { PolarEncoder, CartesianEncoder } from '../encoder';\nimport {\n    DIMENSION,\n    MEASURE,\n    ORDINAL,\n    LINEAR,\n    ROW,\n    COLUMN,\n    COL,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    COLOR,\n    SIZE,\n    TEMPORAL,\n    SHAPE,\n    INTERACTION,\n    GRID_LINES,\n    GRID_BANDS,\n    HEADER,\n    FACET,\n    X,\n    Y,\n    ARC,\n    RADIUS,\n    ANGLE\n} from '../enums/constants';\n\nconst POLAR = COORD_TYPES.POLAR;\n\n/**\n * Creates an instance of a store which contains the arguments to make the class reactive\n *\n * @return {Object} instance of store\n * @memberof VisualGroup\n */\nexport const initStore = () => new Store({\n    [DATA_UPDATE_COUNTER]: DATA_UPDATE_COUNTER\n});\n\n/**\n *\n *\n * @param {*} arr\n */\nexport const isDistributionEqual = arr => [...arr[0], ...arr[1]].reduce((isEqual, row) => {\n    const rowType = row.type();\n\n    if (rowType === MEASURE || rowType === TEMPORAL) {\n        isEqual = true;\n    }\n    return isEqual;\n}, false);\n\n/**\n *\n *\n */\nexport const initializeCacheMaps = () => ({\n    cellMap: new Map(),\n    xAxesMap: new Map(),\n    yAxesMap: new Map(),\n    entryCellMap: new Map(),\n    exitCellMap: new Map()\n});\n\n/**\n *\n *\n * @param {*} axisName\n * @param {*} id\n */\nexport const getAxisKey = (axisName, ...params) => `${axisName}-axis-${params.join('-')}`;\n\n/**\n *\n *\n * @param {*} rowId\n * @param {*} columnId\n */\nexport const getCellKey = (rowId, columnId) => `cell-${rowId}-${columnId}`;\n\n/**\n *\n *\n * @param {*} config\n *\n */\nexport const extractUnitConfig = (config) => {\n    const unitConfig = {};\n    const attrNames = [INTERACTION, GRID_LINES, GRID_BANDS];\n\n    attrNames.forEach((attr) => {\n        if (config[attr] !== undefined) {\n            unitConfig[attr] = config[attr];\n        }\n    });\n    return unitConfig;\n};\n\n/**\n *\n *\n * @param {*} headers\n * @param {*} index\n * @param {*} rowLength\n *\n * @memberof MatrixResolver\n */\nexport const getHeaderText = (headers, index, rowLength) => {\n    let header = '';\n\n    if (index === rowLength - 1 && headers.length > rowLength) {\n        for (let i = index; i < headers.length - 1; i++) {\n            header += `${headers[i].toString()} / `;\n        }\n        header += headers[headers.length - 1].toString();\n        return header;\n    } else if (headers[index]) {\n        return headers[index].toString();\n    }\n    return '';\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} fieldHeaders\n * @param {*} TextCell\n * @param {*} labelManager\n *\n */\nexport const headerCreator = (fields, fieldHeaders, TextCell, { classPrefix, labelManager }) => {\n    const headers = fields.length > 0 ? fields[0].map((cell, i) => new TextCell({\n        type: HEADER,\n        className: `${classPrefix}-grid-headers`\n    }, {\n        labelManager\n    }).source(getHeaderText(fieldHeaders, i, fields[0].length))\n                    .config({ show: cell.config().show })) : [];\n    return headers;\n};\n\n/**\n *\n *\n * @param {*} variable\n * @param {*} allFields\n *\n */\nexport const findInGroup = (variable, allFields) => {\n    let channel = null;\n\n    [COLOR, SIZE, SHAPE].forEach((e) => {\n        if (this.store.get(e) && variable === this.store.get(e)[0]) {\n            channel = e;\n        }\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    [ROW, COL].forEach((facetType) => {\n        allFields[`${facetType}Facets`].forEach((e) => {\n            if (e.toString() === variable) {\n                channel = { channel: FACET, type: facetType === COL ? COLUMN : ROW };\n            }\n        });\n    });\n\n    if (channel) {\n        return channel;\n    }\n\n    [ROW, COL].forEach((projType) => {\n        allFields[`${projType}Projections`].forEach((e) => {\n            e.forEach((m) => {\n                if (m.toString() === variable) {\n                    channel = projType === COL ? X : Y;\n                }\n            });\n        });\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    return null;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} field\n */\nexport const getAxisType = (fieldsConfig, field) => {\n    let fieldType = ORDINAL;\n\n    if (field && fieldsConfig[field].def.type !== DIMENSION) {\n        fieldType = LINEAR;\n    }\n    return fieldType;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} fieldName\n *\n */\nexport const retriveDomainFromData = (datamodel, fieldName) => {\n    const field = datamodel.getFieldspace().fields.find(d => d.name() === fieldName.toString());\n    return field.domain();\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    let xAxes = null;\n    let yAxes = null;\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n\n    xAxisSet && xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes = xAxes || [];\n        xAxes.push(xAxis);\n    });\n\n    yAxisSet && yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes = yAxes || [];\n        yAxes.push(yAxis);\n    });\n\n    return {\n        xAxes, yAxes\n    };\n};\n\nconst hasPolarEncodings = layerConf => layerConf.mark === ARC || [RADIUS, ANGLE].some(field =>\n        getObjProp(layerConf.encoding, field));\n\n/**\n *\n *\n * @param {*} layers\n *\n */\nexport const getEncoder = (layers) => {\n    let encoder = new CartesianEncoder();\n\n    if (layers.length) {\n        // Figuring out the kind of layers the group will have\n        encoder = layers.some(layerConf => hasPolarEncodings(layerConf)) ? new PolarEncoder() : encoder;\n    }\n    return encoder;\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} userAxisFromConfig\n *\n */\nexport const getHeaderAxisFrom = (type, fields, userAxisFromConfig) => {\n    let axisFrom = userAxisFromConfig[type];\n    let headerFrom = '';\n    const options = type === ROW ? [LEFT, RIGHT] : [BOTTOM, TOP];\n    const [firstField, secondField] = fields;\n    const firstFieldType = i => (firstField.length ? firstField[i].type() : null);\n    const secondFieldType = i => (secondField.length ? secondField[i].type() : null);\n\n    if (firstFieldType(firstField.length - 1) === DIMENSION && secondFieldType(0) === DIMENSION) {\n        headerFrom = axisFrom ? options[1 - options.indexOf(axisFrom)] : options[1];\n\n        if (type === COLUMN && (firstField[firstField.length - 1].toString() === secondField[0].toString())) {\n            axisFrom = TOP;\n        } else {\n            axisFrom = axisFrom || options[0];\n        }\n    } else if (secondFieldType(secondField.length - 1) === DIMENSION) {\n        headerFrom = type === ROW ? RIGHT : BOTTOM;\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else {\n        headerFrom = type === ROW ? LEFT : TOP;\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    if (firstFieldType(firstField.length - 1) === MEASURE && secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    } else if (secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else if (firstFieldType(firstField.length - 1) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    return [headerFrom, axisFrom];\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} layers\n *\n * @memberof MatrixResolver\n */\nexport const setFacetsAndProjections = (context, fieldInfo, encoder) => {\n    const {\n        fields,\n        type\n    } = fieldInfo;\n    const { facets, projections } = encoder.simpleEncoder.getFacetsAndProjections(fields, type);\n\n    context.facets({ [`${type}Facets`]: facets });\n    context.projections({ [`${type}Projections`]: projections });\n\n    return { facets, projections, fields };\n};\n\nconst getRowBorders = (left, right) => {\n    const borders = {};\n    borders.top = false;\n    borders.bottom = false;\n    if (left.length > 1 || right.length > 1) {\n        borders.top = true;\n        borders.bottom = true;\n    }\n    return borders;\n};\n\nconst getColumnsBorders = (top, bottom) => {\n    const borders = {};\n    borders.left = false;\n    borders.right = false;\n    if (top.length || bottom.length) {\n        if ((top[0] && top[0].length > 1) || (bottom[0] && bottom[0].length > 1)) {\n            borders.left = true;\n            borders.right = true;\n        }\n    }\n    return borders;\n};\n\nconst getValueBorders = (rows, columns) => {\n    const borders = { top: true, left: true, bottom: true, right: true };\n    const borderTypeRow = [LEFT, RIGHT];\n    const borderTypeCol = [TOP, BOTTOM];\n    rows.forEach((e, i) => {\n        if (e[0] && e[0].length) {\n            borders[borderTypeRow[i]] = true;\n        } else {\n            borders[borderTypeRow[i]] = false;\n        }\n    });\n    columns.forEach((e, i) => {\n        if (e.length) {\n            borders[borderTypeCol[i]] = true;\n        } else {\n            borders[borderTypeCol[i]] = false;\n        }\n    });\n\n    return borders;\n};\n\nexport const getBorders = (matrices, encoder) => {\n    let showRowBorders = { top: false, bottom: false };\n    let showColBorders = { left: false, right: false };\n    let showValueBorders = { top: false, bottom: false, left: false, right: false };\n    const {\n        rows,\n        columns,\n        values: valueMatrix\n    } = matrices;\n    const [leftRows, rightRows] = rows;\n    const [topColumns, bottomColumns] = columns;\n    const {\n        rowDimensions,\n        columnDimensions,\n        rowTemporalFields,\n        columnTemporalFields,\n        columnMeasures,\n        rowMeasures\n    } = encoder.fieldInfo();\n    const allDimensionLength = rowDimensions.length + columnDimensions.length;\n    const allMeasuresLength = rowMeasures.length + columnMeasures.length;\n    const allTemporalFieldsLength = rowTemporalFields.length + columnTemporalFields.length;\n\n    if (encoder.constructor.type() === POLAR) {\n        if (!allDimensionLength) {\n            return { showRowBorders, showColBorders, showValueBorders };\n        }\n    } else if (!allMeasuresLength && !allTemporalFieldsLength && allDimensionLength <= 2) {\n        return { showRowBorders, showColBorders, showValueBorders };\n    }\n\n    showRowBorders = getRowBorders(leftRows, rightRows);\n    showColBorders = getColumnsBorders(topColumns, bottomColumns);\n    showValueBorders = getValueBorders([leftRows, rightRows], [topColumns, bottomColumns]);\n\n    if (valueMatrix.length > 1) {\n        showValueBorders.top = true;\n        showValueBorders.bottom = true;\n    }\n    if (valueMatrix.length && valueMatrix[0].length > 1) {\n        showValueBorders.left = true;\n        showValueBorders.right = true;\n    }\n    return { showRowBorders, showColBorders, showValueBorders };\n};\n\nexport const getFieldsFromSuppliedLayers = (suppliedLayerConfig, fieldsConfig) => {\n    let fields = [];\n    const encodingArr = suppliedLayerConfig.map(conf => (conf.encoding || {}));\n    fields = [...fields, [].concat(...encodingArr.map(enc => Object.values(enc).map(d => d.field)))];\n    fields = fields.filter(field => fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n    return fields;\n};\n\nexport const extractFields = (facetsAndProjections, layerFields) => {\n    const fields = Object.values(facetsAndProjections).map((arr) => {\n        const flattenArray = [].concat(...arr);\n        return [].concat(...flattenArray.map((field) => {\n            if (field instanceof Variable) {\n                return field.getMembers();\n            }\n            return field;\n        }));\n    });\n    return [].concat(...fields, ...layerFields);\n};\n\n/**\n * This method sorts the facets fields inplace if field is of categorical type\n * @param {Object} facets Array of facets\n * @param {Array} keys Array of the facet field values\n * @param {Object} config configuration object\n */\nexport const sortFacetFields = (facets, keys, config) => {\n    /**\n     * Check if the facet sorted by the user is plotted\n     * If an incorrect field is sorted, return the keys as is\n     */\n    const fieldsSorted = Object.keys(config.sort);\n    const allFacetsFields = facets.map(facet => `${facet}`);\n    const validFacets = fieldsSorted.filter(field => allFacetsFields.includes(field));\n\n    validFacets.forEach((facetName) => {\n        const facetField = facets.find(facet => `${facet}` === facetName);\n        const facetSortOrder = config.sort[facetName];\n        const subType = facetField.subtype();\n        const index = facets.indexOf(facetField);\n\n        facetSortOrder && keys.sort((a, b) => sortFieldByType(subType, facetSortOrder, a[index], b[index]));\n    });\n};\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: false\n    },\n    [ACTIONS.HOVER]: {\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.LONGTOUCH]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: true\n    },\n    [ACTIONS.TOUCHDRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: true\n    },\n    [ACTIONS.CLICK]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: false\n    }\n};\n","import {\n    FieldType,\n    getDependencyOrder,\n    getObjProp,\n    defaultValue,\n    objectIterator,\n    unionDomain,\n    makeElement,\n    DimensionSubtype,\n    toArray,\n    MeasureSubtype,\n    getNearestValue\n} from 'muze-utils';\nimport { layerFactory, ENCODING } from '@chartshq/visual-layer';\n\nexport const getDimensionMeasureMap = (layers, fieldsConfig) => {\n    const retinalEncodingsAndMeasures = {};\n\n    layers.forEach((layer) => {\n        const {\n            colorField,\n            sizeField,\n            shapeField,\n            xField,\n            yField\n        } = layer.encodingFieldsInf();\n        const measures = [xField, yField].filter(field => fieldsConfig[field] && fieldsConfig[field].def.type ===\n            FieldType.MEASURE);\n        [colorField, sizeField, shapeField].forEach((field) => {\n            if (fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                !retinalEncodingsAndMeasures[field] && (retinalEncodingsAndMeasures[field] = []);\n                retinalEncodingsAndMeasures[field].push(...measures);\n            }\n        });\n    });\n\n    for (const key in retinalEncodingsAndMeasures) {\n        if ({}.hasOwnProperty.call(retinalEncodingsAndMeasures, key)) {\n            retinalEncodingsAndMeasures[key] = [...new Set(retinalEncodingsAndMeasures[key])];\n        }\n    }\n    return retinalEncodingsAndMeasures;\n};\n\nexport const transformDataModels = (transform, dataModel) => {\n    const dataModels = {};\n    for (const key in transform) {\n        if ({}.hasOwnProperty.call(transform, key)) {\n            const transformVal = transform[key];\n            dataModels[key] = transformVal(dataModel);\n        }\n    }\n\n    return dataModels;\n};\n\nexport const getLayerFromDef = (context, definition, existingLayer, namespaces) => {\n    let instances = existingLayer;\n    const dependencies = context._layerDeps;\n    const metaInf = context.metaInf();\n    if (!existingLayer) {\n        instances = layerFactory.getLayerInstance(definition);\n        toArray(instances).forEach((inst, i) => {\n            inst.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: namespaces[i]\n            });\n            inst.store(context.store());\n        });\n    }\n    const layers = {};\n    const instanceArr = toArray(instances);\n    definition = toArray(definition);\n    definition.reduce((acc, def, idx) => {\n        const instance = instanceArr[idx];\n        instance.coord(context.coord());\n        instance.config(def);\n        instance.valueParser(context.valueParser());\n        instance.dependencies(dependencies);\n        instance.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        if (def.name) {\n            instance.alias(def.name);\n        }\n        layers[instance.alias()] = instance;\n        return acc;\n    }, {});\n    return layers;\n};\n\nexport const resolveEncodingTransform = (layerInst, store) => {\n    const encodingTransform = layerInst.config().encodingTransform || {};\n    const resolvable = encodingTransform.resolvable;\n    let depArr = [];\n    if (resolvable) {\n        const resolved = resolvable(store);\n        depArr = resolved.depArr;\n        layerInst.encodingTransform(resolved.fn);\n    } else if (encodingTransform instanceof Function) {\n        layerInst.encodingTransform(encodingTransform);\n    }\n    return depArr;\n};\n\nexport const sanitizeLayerDef = (layerDefs) => {\n    const sanitizedDefs = [];\n    layerDefs.forEach((layerDef, i) => {\n        const def = layerDef.def;\n        const mark = layerDef.mark;\n        if (!def) {\n            const sConf = layerFactory.getSerializedConf(layerDef.mark, layerDef);\n            if (!sConf.name) {\n                sConf.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push({\n                mark: layerDef.mark,\n                def: sConf\n            });\n        } else {\n            if (!def.name) {\n                def.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push(layerDef);\n        }\n    });\n    return sanitizedDefs;\n};\n\nexport const attachDataToLayers = (layers, dm, transformedDataModels) => {\n    layers.forEach((layer) => {\n        const dataSource = layer.config().source;\n        const dataModel = dataSource instanceof Function ? dataSource(dm) :\n            (transformedDataModels[dataSource] || dm);\n        if (layer.data() !== dataModel) {\n            layer.data(dataModel);\n        }\n    });\n};\n\nexport const attachAxisToLayers = (axes, layers, layerAxisIndex) => {\n    layers.forEach((layer) => {\n        const layerId = layer.id();\n        const axesObj = {};\n\n        objectIterator(axes, (key) => {\n            const axisInf = layerAxisIndex[layerId];\n            if (axisInf) {\n                const axisArr = axes[key] || [];\n                const axisIndex = axisInf[key] >= 0 ? axisInf[key] : axisArr.length - 1;\n                axes[key] && (axesObj[key] = defaultValue(axes[key][axisIndex]));\n            }\n        });\n        Object.keys(axesObj).length && layer.axes(axesObj);\n    });\n};\n\nconst { X, Y, RADIUS, ANGLE, ANGLE0, RADIUS0 } = ENCODING;\n\nexport const getLayerAxisIndex = (layers, fields) => {\n    const layerAxisIndex = {};\n    layers.forEach((layer) => {\n        const { axis, encoding } = layer.config();\n        const id = layer.id();\n        [X, Y, ANGLE, ANGLE0, RADIUS].forEach((type) => {\n            let index;\n            const specificField = getObjProp(encoding, type, 'field');\n            const encodingField = type === RADIUS ? defaultValue(specificField, getObjProp(encoding, RADIUS0, 'field'))\n                : getObjProp(encoding, type, 'field');\n            const field = defaultValue(getObjProp(axis, type), encodingField);\n            if (fields[type] && fields[type].length) {\n                index = fields[type].findIndex(fieldInst => fieldInst.getMembers().indexOf(field) !== -1);\n            } else {\n                index = 0;\n            }\n            !layerAxisIndex[id] && (layerAxisIndex[id] = {});\n            layerAxisIndex[id][type] = index;\n        });\n    });\n    return layerAxisIndex;\n};\n\nconst getValidDomain = (domain, domain1, encodingType, fieldType) => {\n    if (encodingType === ANGLE || encodingType === ANGLE0) {\n        return domain.concat(domain1.filter(d => domain.indexOf(d) === -1));\n    }\n    return unionDomain([domain, domain1], fieldType);\n};\n\nexport const unionDomainFromLayers = (layers, axisFields, layerAxisIndex, fieldsConfig) => {\n    let domains = {};\n    layers = layers.filter(layer => layer.getDataDomain() !== null);\n    layers.forEach((layer) => {\n        let domainValues = {};\n        const config = layer.config();\n        // const encoding = config.encoding;\n        const layerDomain = layer.getDataDomain();\n        const layerId = layer.id();\n\n        if (layerDomain !== null && config.calculateDomain !== false) {\n            domainValues = Object.entries(layerDomain);\n            domains = domainValues.reduce((fieldDomain, domain) => {\n                const encodingType = domain[0];\n                const axisIndex = layerAxisIndex[layerId][encodingType];\n                const field = getObjProp(axisFields, encodingType, axisIndex);\n                !fieldDomain[encodingType] && (fieldDomain[encodingType] = {});\n                const encodingDomain = fieldDomain[encodingType];\n                if (field) {\n                    const fieldStr = `${field}`;\n                    encodingDomain[fieldStr] = encodingDomain[fieldStr] || [];\n                    encodingDomain[fieldStr] = getValidDomain(encodingDomain[fieldStr],\n                        domain[1], encodingType, fieldsConfig[field.getMembers()[0]].def.subtype);\n                }\n                return fieldDomain;\n            }, domains);\n        }\n    });\n    return domains;\n};\n\nexport const renderLayers = (context, container, layers, measurement) => {\n    context._lifeCycleManager.notify({ client: layers, action: 'beforedraw', formalName: 'layer' });\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const orderedLayers = context.layers().sort((a, b) => a.config().order - b.config().order);\n    const layerParentGroup = makeElement(container, 'g', [1], `${classPrefix}-layer-group`);\n    const layerDepOrder = getDependencyOrder(context._layerDepOrder);\n    const groups = {};\n    makeElement(layerParentGroup, 'g', orderedLayers, null, {\n        update: (group, layer) => {\n            groups[layer.alias()] = {\n                group,\n                layer\n            };\n        }\n    });\n    const layerSeq = layerDepOrder.map(name => groups[name]);\n    layerSeq.forEach((o) => {\n        const layer = o.layer;\n        const group = o.group;\n        layer.measurement(measurement);\n        layer.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        layer.config().render !== false && layer.mount(group.node());\n    });\n    return this;\n};\n\nexport const getNearestDimensionalValue = (context, position) => {\n    const fields = context.fields();\n    if (!fields.x.length || !fields.y.length) {\n        return null;\n    }\n    const data = context.data();\n    const axes = context.axes();\n    const fieldsConfig = data.getFieldsConfig();\n    const xField = getObjProp(fields, 'x', 0).getMembers()[0];\n    const yField = getObjProp(fields, 'y', 0).getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n\n    const entryVal = [['x', xFieldType, xField], ['y', yFieldType, yField]].find(entry =>\n        entry[1] === DimensionSubtype.CATEGORICAL || entry[1] === DimensionSubtype.TEMPORAL);\n\n    if (!entryVal || (xFieldType !== MeasureSubtype.CONTINUOUS && yFieldType !== MeasureSubtype.CONTINUOUS)) {\n        return null;\n    }\n    const field = entryVal[2];\n    const index = fieldsConfig[field].index;\n    let key = axes[entryVal[0]][0].invert(position[entryVal[0]]);\n    if (entryVal[1] === DimensionSubtype.TEMPORAL) {\n        const filterData = [...new Set(data.getData().data.map(d => d[index]))];\n        key = getNearestValue(filterData, key);\n    }\n\n    return key !== undefined ? [[field], [key]] : null;\n};\n\nexport const getLayersBy = (layers, searchBy, value) => layers.filter((layer) => {\n    const name = searchBy === 'type' ? layer.constructor.formalName() : layer.alias();\n    return name === value;\n});\n\nexport const removeLayersBy = (layers, searchBy, value) => {\n    layers.filter((inst) => {\n        const name = searchBy === 'type' ? inst.config().mark : inst.alias();\n        if (name === value) {\n            inst.remove();\n            return false;\n        }\n        return true;\n    });\n};\n\nexport const createSideEffectGroup = (container, className) => makeElement(container, 'g', [1], className).node();\n\nexport const createRenderPromise = (unit) => {\n    const renderedPromise = unit._renderedPromise;\n    renderedPromise.then(() => {\n        unit._renderedPromise = new Promise((resolve) => {\n            unit._renderedResolve = resolve;\n        });\n        createRenderPromise(unit);\n    });\n};\n\nexport const getRadiusRange = (width, height, config = {}) => {\n    const {\n        innerRadius,\n        outerRadius\n    } = config;\n\n    return [innerRadius || 0, outerRadius || Math.min(height,\n        width) / 2];\n};\n\nexport const setAxisRange = (context) => {\n    const axes = context.axes();\n    const { radius: radiusAxes } = axes;\n    if (radiusAxes) {\n        radiusAxes.forEach((axis) => {\n            axis.range(getRadiusRange(context.width(), context.height()));\n        });\n    }\n};\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const GRID_LINE_PARENT_GROUP_CLASS = 'grid-lines';\nexport const GRID_BAND_PARENT_GROUP_CLASS = 'grid-bands';\nexport const GRID_PARENT_GROUP = 'grid-parent-group';\nexport const BAND = 'band';\nexport const TICK = 'tick';\nexport const GRID_BAND = 'gridBands';\nexport const GRID_LINE = 'gridLines';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const RETINAL_FIELDS = 'retinalFields';\nexport const PARENT_ALIAS = 'parentAlias';\nexport const LAYERS = 'layers';\nexport const CACHED_DATA = 'cachedData';\nexport const STORE = 'store';\n","import { getObjProp, defaultValue, makeElement, DimensionSubtype, DataModel, createSelection } from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { layerFactory, LAYER_TYPES } from '@chartshq/visual-layer';\nimport {\n    GRID_BAND,\n    GRID_LINE,\n    GRID_BAND_PARENT_GROUP_CLASS,\n    GRID_LINE_PARENT_GROUP_CLASS,\n    GRID_PARENT_GROUP\n} from '../enums/constants';\n\nconst { BAR_LAYER, TICK_LAYER } = LAYER_TYPES;\n\nconst LINEAR = ScaleType.LINEAR;\n\nconst getLayerDefinition = (context, axes, type, orientation) => {\n    let encoding;\n    const config = context.config();\n    const { classPrefix, gridLines, gridBands } = config;\n    const gridLineColor = gridLines.color;\n    const zeroLineColor = gridLines.zeroLineColor;\n    const defClassName = type === GRID_BAND ? gridBands.defClassName : gridLines.defClassName;\n    const gridBandColor = gridBands[orientation].color;\n    const axis = axes[orientation][0];\n    const isLinearScale = axis.constructor.type() === LINEAR;\n\n    if (type === GRID_BAND && isLinearScale) {\n        encoding = {\n            [orientation]: `${orientation}value`,\n            [`${orientation}0`]: `${orientation}value0`\n        };\n    } else {\n        encoding = {\n            [orientation]: isLinearScale ? `${orientation}value` : `${orientation}dim`\n        };\n    }\n    encoding.color = {\n        value: (data, i) => {\n            const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n            if (type === GRID_BAND) {\n                return gridBandColor[i % 2];\n            }\n            return isNegativeDomain && data[orientation] === 0 ? zeroLineColor : gridLineColor;\n        }\n    };\n    const { color, shape, size } = context.axes();\n    return {\n        definition: {\n            defClassName: `${defClassName}-${orientation}`,\n            className: config.className,\n            name: orientation,\n            individualClassName: (data, i) => {\n                let className;\n                const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n                if (isNegativeDomain && data.y === 0 && type !== GRID_BAND) {\n                    className = `${classPrefix}-axis-zero-line`;\n                } else {\n                    className = `${classPrefix}-grid-${type}-${orientation}-${i % 2}`;\n                }\n                return className;\n            },\n            [`pad${orientation.toUpperCase()}`]: type === GRID_BAND ? 0 : undefined,\n            encoding\n        },\n        axes: {\n            [orientation]: axis,\n            color: color[0],\n            shape: shape[0],\n            size: size[0]\n        },\n        interactive: false\n    };\n};\n\nconst getDefaultVisibilty = (show, axis) => {\n    if (axis.constructor.type() === LINEAR) {\n        return show;\n    }\n    return false;\n};\n\nexport const getGridLayerDefinitions = (context, config, type) => ['x', 'y'].map((axisType) => {\n    const axes = context.axes();\n    if (!axes[axisType]) {\n        return null;\n    }\n    const show = defaultValue(config[axisType] && config[axisType].show,\n        getDefaultVisibilty(config.show, axes[axisType][0]));\n\n    return show ? getLayerDefinition(context, axes, type, axisType) : null;\n}).filter(d => d !== null);\n\nconst dimensionSubTypes = Object.values(DimensionSubtype).reduce((acc, v) => {\n    acc[v] = 1;\n    return acc;\n}, {});\nconst getValidSubtype = subtype => (!dimensionSubTypes[subtype] ? DimensionSubtype.CATEGORICAL : subtype);\n\nexport const getGridLayerData = (axes, fields, fieldsConfig) => {\n    const gridData = {};\n\n    ['x', 'y'].forEach((type) => {\n        let ticks = axes[type][0].getTickValues();\n        const subtype = getObjProp(fieldsConfig, getObjProp(fields, type, 0).getMembers()[0], 'def', 'subtype');\n        const jsonData = [];\n        const schema = [\n            {\n                name: 'yvalue',\n                type: 'measure'\n            }, {\n                name: 'xvalue',\n                type: 'measure'\n            },\n            {\n                name: 'yvalue0',\n                type: 'measure'\n            }, {\n                name: 'xvalue0',\n                type: 'measure'\n            }, {\n                name: 'xdim',\n                type: 'dimension',\n                subtype: getValidSubtype(subtype)\n            }, {\n                name: 'ydim',\n                type: 'dimension',\n                subtype: getValidSubtype(subtype)\n            }\n        ];\n        const len = Math.max(ticks.length);\n        ticks = subtype === DimensionSubtype.TEMPORAL ? ticks.map(d => d.getTime()) : ticks;\n        for (let i = 0; i < len; i += 1) {\n            jsonData.push({\n                [`${type}value`]: ticks[i],\n                [`${type}value0`]: ticks[i + 1],\n                [`${type}dim`]: ticks[i],\n                [`${type}dim`]: ticks[i]\n            });\n        }\n        gridData[type] = new DataModel(jsonData, schema);\n    });\n    return gridData;\n};\n\nexport const createGridLineLayer = (context) => {\n    const vuConf = context.config();\n    const metaInf = context.metaInf();\n    const store = context.store();\n    const timeDiffs = context._timeDiffs;\n    [GRID_BAND, GRID_LINE].forEach((type) => {\n        let mark;\n        let config;\n        if (type === GRID_BAND) {\n            mark = BAR_LAYER;\n            config = vuConf.gridBands;\n        } else {\n            mark = TICK_LAYER;\n            config = vuConf.gridLines;\n        }\n        const definitions = getGridLayerDefinitions(context, config, type);\n\n        const sel = `_${type}Selection`;\n        context[sel] = createSelection(context[sel], () => {\n            const inst = layerFactory.getLayerInstance({ mark });\n            inst.dependencies(context._layerDeps);\n            return inst;\n        }, definitions, atomicDef => atomicDef.definition.name);\n        context[sel].each((layer, atomicDef) => {\n            const definition = atomicDef.definition;\n            const name = definition.name;\n            const sConf = layerFactory.getSerializedConf(mark, definition);\n            const axesObj = atomicDef.axes;\n            layer.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: `${metaInf.namespace}${type}${name}`\n            })\n                .store(store)\n                .config(sConf)\n                .dataProps({\n                    timeDiffs\n                })\n                .axes(axesObj);\n        });\n        context[`_${type}`] = context[sel].getObjects();\n    });\n};\n\nexport const attachDataToGridLineLayers = (context) => {\n    const axes = context.axes();\n    const measurement = {\n        width: context.width(),\n        height: context.height()\n    };\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n    const gridLayerData = getGridLayerData(axes, context.fields(), context.data().getFieldsConfig());\n    [].concat(...gridBands, ...gridLines).forEach((inst) => {\n        inst.data(inst.axes().x ? gridLayerData.x : gridLayerData.y).measurement(measurement);\n    });\n};\n\nexport const renderGridLineLayers = (context, container) => {\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n\n    const gridLineParentGroup = makeElement(container, 'g', [1], `${classPrefix}-${GRID_PARENT_GROUP}`);\n    [[gridLines, `${classPrefix}-${GRID_LINE_PARENT_GROUP_CLASS}`],\n            [gridBands, `${classPrefix}-${GRID_BAND_PARENT_GROUP_CLASS}`]].forEach((entry) => {\n                const [instances, parentGroupClass] = entry;\n                const mountPoint = makeElement(gridLineParentGroup, 'g', [1], `.${parentGroupClass}`);\n                const className = `${parentGroupClass}-group`;\n                makeElement(mountPoint, 'g', instances, `.${className}`, {\n                    update: (group, instance) => {\n                        instance.dataProps({ timeDiffs: context._timeDiffs }).mount(group.node());\n                    }\n                });\n            });\n};\n","import { CLASSPREFIX, CONSOLIDATED } from './enums/constants';\n\n/**\n * Returns the default configuration of the visual unit\n * @return {Object} Default configuration of visual unit\n */\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'visual-unit',\n    className: '',\n    trackerClassName: 'visual-unit-tracker',\n    minOuterRadius: 10,\n    gridLines: {\n        defClassName: 'axis-grid-lines',\n        className: '',\n        show: true,\n        color: '#efefef',\n        zeroLineColor: '#b6b6b6'\n    },\n    gridBands: {\n        defClassName: 'axis-grid-bands',\n        className: '',\n        show: false,\n        y: {\n            color: ['#fff', '#fbfbfb']\n        },\n        x: {\n            color: ['#fff', '#f9f9f9']\n        }\n    },\n    arcLayerClassName: 'layer-arc',\n    interaction: {\n        tooltip: {\n            mode: CONSOLIDATED\n        }\n    },\n    sideEffectClassName: 'side-effect-container'\n};\n","import { mergeRecursive, DataModel } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { CONFIG, LAYERDEFS, TRANSFORM, DATA, LAYERS, TRANSFORMEDDATA } from './enums/reactive-props';\nimport { sanitizeLayerDef } from './helper';\n\nexport default {\n    [CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig) => (\n                mergeRecursive(oldConfig || mergeRecursive({}, defaultConfig), config)\n            )\n        }\n    },\n    [LAYERDEFS]: {\n        value: null,\n        meta: {\n            preset: layerDef => sanitizeLayerDef(layerDef)\n        }\n    },\n    [TRANSFORM]: {\n        value: null\n    },\n    [LAYERS]: {\n        value: null\n    },\n    [DATA]: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel,\n            preset: (data, context) => {\n                if (context._cache) {\n                    const cachedData = context.cachedData();\n                    context.cachedData([...cachedData, data]);\n                } else {\n                    const oldData = context.cachedData()[0];\n                    oldData && oldData.unsubscribe('propagation');\n                    context.cachedData([data]);\n                }\n            }\n        }\n    },\n    [TRANSFORMEDDATA]: {\n        value: null,\n        meta: {\n            addAsMethod: false\n        }\n    }\n};\n","export const CONFIG = 'config';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const MOUNT = 'mount';\nexport const TRANSFORM = 'transform';\nexport const TRANSFORMEDDATA = 'transformedData';\nexport const DATADOMAIN = 'dataDomain';\nexport const FIELDS = 'fields';\nexport const LAYERAXISINDEX = 'layerAxisIndex';\nexport const LAYERS = 'layers';\nexport const DOMAIN = 'domain';\n\n","import { STATE_NAMESPACES, temporalFields, getObjProp, defaultValue } from 'muze-utils';\nimport * as PROPS from './enums/reactive-props';\nimport {\n    transformDataModels,\n    getDimensionMeasureMap,\n    attachDataToLayers,\n    attachAxisToLayers,\n    unionDomainFromLayers\n} from './helper';\n\nimport { createGridLineLayer, attachDataToGridLineLayers } from './helper/grid-lines';\n\nconst removeExitLayers = (layerDefs, context) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    layerDefs.forEach((layerDef, i) => {\n        const id = defaultValue(layerDef.name, `${layerDef.mark}-${i}`);\n        markSet[id] = true;\n    });\n\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n};\n\nexport const calculateDomainListener = (context, namespace) => () => {\n    const domain = unionDomainFromLayers(context.layers(), context.fields(), context._layerAxisIndex,\n        context.data().getFieldsConfig());\n    context.store().commit(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${namespace}`, domain);\n};\n\nexport const listenerMap = (context, namespace, metaInf) => ([\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.CONFIG}`],\n        listener: ([, config]) => {\n            config && context.firebolt().config(config.interaction);\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.LAYERDEFS}`],\n        listener: ([, layerDefs]) => {\n            const fieldsVal = context.fields();\n            if (layerDefs && fieldsVal) {\n                removeExitLayers(layerDefs, context);\n                const axes = context.axes();\n                if (axes.x || axes.y) {\n                    const props = [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${metaInf.rowIndex}0`,\n                        `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${metaInf.colIndex}0`];\n                    const store = context.store();\n                    const listenerInf = {\n                        namespace: namespace.local,\n                        key: 'gridLineListener'\n                    };\n                    store.unsubscribe(listenerInf);\n                    store.registerChangeListener(props, () => {\n                        attachDataToGridLineLayers(context);\n                    }, false, listenerInf);\n                }\n\n                context.addLayer(layerDefs);\n                const adjustRange = context.layers().some(inst => inst.hasPlotSpan());\n                ['x', 'y'].forEach((type) => {\n                    const axisArr = defaultValue(getObjProp(context.axes(), type), []);\n                    axisArr.forEach((axis) => {\n                        axis.config({\n                            adjustRange\n                        });\n                    });\n                });\n                context._lifeCycleManager.notify({\n                    client: context.layers(),\n                    action: 'initialized',\n                    formalName: 'layer'\n                });\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.DATA}`],\n        listener: ([, dataModel]) => {\n            const axesObj = context.axes();\n            const timeDiffs = {};\n            const timeDiffsByField = {};\n\n            Object.entries(temporalFields(dataModel)).forEach(([fieldName, fieldObj]) => {\n                timeDiffsByField[fieldName] = fieldObj.minimumConsecutiveDifference();\n            });\n\n            Object.entries(context.fields()).forEach(([type, [field]]) => {\n                if (field) {\n                    const timeDiff = timeDiffsByField[`${field}`];\n                    if (timeDiff) {\n                        timeDiffs[type] = timeDiff;\n                        axesObj[type].forEach(axis => axis.minDiff(timeDiff));\n                    }\n                }\n            });\n\n            context._timeDiffsByField = timeDiffsByField;\n            context._timeDiffs = timeDiffs;\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.CONFIG}`],\n        listener: () => {\n            createGridLineLayer(context);\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.DATA}`,\n            `${namespace.local}.${PROPS.TRANSFORM}`],\n        listener: ([, dataModel], [, transform]) => {\n            if (dataModel) {\n                const dataModels = transformDataModels(transform, dataModel);\n                context.store().commit(`${namespace.local}.${PROPS.TRANSFORMEDDATA}`, dataModels);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.TRANSFORMEDDATA}`,\n            `${namespace.local}.${PROPS.LAYERS}`],\n        listener: ([, transformedData], [, layers]) => {\n            const layerAxisIndexVal = context._layerAxisIndex;\n            const axesVal = context.axes();\n            const dataModel = context.data();\n            if (transformedData && layers && axesVal && layerAxisIndexVal) {\n                context._lifeCycleManager.notify({ client: layers, action: 'beforeupdate', formalName: 'layer' });\n                const model = context.store().model;\n                layers.forEach(lyr => lyr.disableUpdate());\n                attachDataToLayers(layers, dataModel, transformedData);\n                model.lock();\n                layers.forEach((lyr) => {\n                    lyr.enableUpdate().domain(lyr._domain);\n                });\n                model.unlock();\n                context._dimensionMeasureMap = getDimensionMeasureMap(layers,\n                    dataModel.getFieldsConfig(), context.retinalFields());\n                attachAxisToLayers(axesVal, layers, layerAxisIndexVal);\n                context._lifeCycleManager.notify({ client: layers, action: 'updated', formalName: 'layer' });\n            }\n        }\n    }\n]);\n","import { FACET_BY_FIELDS, RETINAL_FIELDS, PARENT_ALIAS, LAYERS, CACHED_DATA } from './enums/constants';\n\nexport const PROPS = {\n    [FACET_BY_FIELDS]: {},\n    [RETINAL_FIELDS]: {},\n    [PARENT_ALIAS]: {},\n    [LAYERS]: {},\n    [CACHED_DATA]: {},\n    detailFields: {},\n    axes: {\n        defaultValue: {\n            x: [],\n            y: []\n        }\n    },\n    fields: {},\n    metaInf: {},\n    registry: {},\n    width: {},\n    height: {},\n    parentContainerInf: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    coord: {}\n};\n","import { CommonProps } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { DATA } from '../enums/reactive-props';\n\nexport const initSideEffects = (sideEffects, firebolt) => {\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            sideEffects[key] instanceof SpawnableSideEffect && sideEffects[key].drawingContext(() => {\n                const context = firebolt.context;\n                return context.getDrawingContext();\n            });\n            sideEffects[key].valueParser(firebolt.context.valueParser());\n        }\n    }\n};\n\nexport const clearActionHistory = (context) => {\n    const actionHistory = context._actionHistory;\n    for (const key in actionHistory) {\n        if (actionHistory[key].isMutableAction) {\n            delete context._actionHistory[key];\n        }\n    }\n};\n\nexport const dispatchQueuedSideEffects = (context) => {\n    const queuedSideEffects = context._queuedSideEffects;\n    Object.entries(queuedSideEffects).forEach((entry) => {\n        const sideEffect = entry[1];\n        context.dispatchSideEffect(sideEffect.name, ...sideEffect.params);\n    });\n    context._queuedSideEffects = {};\n};\n\nexport const registerListeners = (firebolt) => {\n    const context = firebolt.context;\n    const store = context.store();\n\n    store.registerImmediateListener([`local.units.${context.metaInf().namespace}.${DATA}`], (dataModel) => {\n        const dm = dataModel[1];\n\n        if (dm) {\n            firebolt.createSelectionSet(firebolt.context.data().getData().uids);\n            firebolt.initializeSideEffects();\n            const originalData = firebolt.context.cachedData()[0];\n            firebolt.attachPropagationListener(originalData);\n        }\n    });\n\n    store.registerChangeListener([`local.units.${context.metaInf().namespace}.${DATA}`], () => {\n        if (!firebolt.context.mount()) {\n            const originalData = firebolt.context.cachedData()[0];\n            originalData.unsubscribe('propagation');\n        }\n    });\n\n    context._layerDeps.throwback.registerChangeListener([CommonProps.ON_LAYER_DRAW],\n        ([, onlayerdraw]) => {\n            if (onlayerdraw) {\n                dispatchQueuedSideEffects(firebolt);\n                clearActionHistory(firebolt);\n            }\n        });\n};\n","import { DimensionSubtype } from 'muze-utils';\n\nconst getRangeFromData = (instance, selectionDataModel, propConfig) => {\n    let criteria;\n    const dataObj = selectionDataModel[0].getData();\n    const propCriteria = propConfig.payload.criteria;\n    const sourceIdentifiers = propConfig.sourceIdentifiers;\n    const schema = dataObj.schema;\n    const fieldMap = instance.data().getFieldsConfig();\n    const data = dataObj.data;\n    const isActionSourceSame = instance.id() === propConfig.sourceId;\n\n    if (isActionSourceSame) {\n        criteria = propCriteria;\n    } else {\n        criteria = (sourceIdentifiers !== null) ? schema.reduce((acc, obj, index) => {\n            let range;\n            const field = obj.name;\n            const fieldObj = fieldMap[field];\n            const type = fieldObj && (fieldObj.def.subtype ? fieldObj.def.subtype : fieldObj.def.type);\n            const isDimension = type === DimensionSubtype.CATEGORICAL;\n\n            if (!fieldObj) {\n                return acc;\n            }\n\n            if (!isDimension) {\n                range = [Math.min(...data.map(d => d[index])), Math.max(...data.map(d => d[index]))];\n            } else {\n                range = data.map(d => d[index]);\n            }\n            acc[field] = range;\n            return acc;\n        }, {}) : null;\n    }\n    return criteria;\n};\n\nexport const payloadGenerator = {\n    brush: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const criteria = getRangeFromData(instance, selectionDataModel, propConfig);\n        const payload = Object.assign({}, propPayload);\n        payload.criteria = criteria;\n        return payload;\n    },\n\n    __default: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const sourceIdentifiers = propConfig.sourceIdentifiers;\n        const dataObj = selectionDataModel[0].getData();\n        let schema = dataObj.schema;\n        const payload = Object.assign({}, propPayload);\n        schema = dataObj.schema;\n        const data = dataObj.data;\n        const sourceFields = schema.map(d => d.name);\n        payload.criteria = !sourceIdentifiers && selectionDataModel[0].isEmpty() ? null :\n            [sourceFields, ...data];\n        payload.sourceFields = sourceIdentifiers ? sourceIdentifiers.getSchema().map(d => d.name) : [];\n        return payload;\n    }\n};\n\n","import { isSimpleObject, FieldType, DataModel } from 'muze-utils';\n\nconst getModelWithFacetData = (dm, data) => {\n    const dataObj = dm.getData();\n    const schema1 = dataObj.schema;\n    const data1 = dataObj.data;\n    const jsonData = [];\n    const derivedSchema = data[0].map(d => ({\n        name: `${d}`,\n        type: FieldType.DIMENSION,\n        subtype: d.subtype()\n    }));\n    const dataAtFirstPos = data[1];\n\n    data1.forEach((d) => {\n        const tuple = {};\n        schema1.forEach((obj, i) => {\n            tuple[obj.name] = d[i];\n        });\n        derivedSchema.forEach((obj, i) => {\n            tuple[obj.name] = dataAtFirstPos[i];\n        });\n        jsonData.push(tuple);\n    });\n\n    return new DataModel(jsonData, [...schema1, ...derivedSchema]);\n};\n\nexport const propagateValues = (instance, action, config = {}) => {\n    let propagationData;\n    const payload = config.payload;\n    const selectionSet = config.selectionSet;\n    const propagationFieldInf = config.propagationFields[action] || {};\n    const propagationFields = propagationFieldInf.fields || [];\n    const append = propagationFieldInf.append;\n    const criteria = payload.criteria;\n    const context = instance.context;\n    const dataModel = context.cachedData()[0];\n    const sourceId = context.id();\n    const sideEfffects = instance.sideEffects();\n    const behaviourEffectMap = instance._behaviourEffectMap;\n    const mergedModel = selectionSet.mergedEnter.model;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    payload.sourceUnit = sourceId;\n    payload.action = action;\n    payload.sourceCanvas = context.parentAlias();\n    const propagationBehaviourMap = instance._propagationBehaviourMap;\n    const propagationBehaviour = propagationBehaviourMap[action] || action;\n\n    let propFields = [];\n    if (criteria === null) {\n        propagationData = null;\n    } else if (isSimpleObject(criteria)) {\n        propFields = Object.keys(criteria || {});\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    } else {\n        propFields = criteria[0];\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    }\n\n    const facetByFields = context.facetByFields();\n    if (propagationData !== null && propagationFields.length) {\n        const fields = propagationData.getData().schema.map(d => d.name);\n        propagationData = getModelWithFacetData(propagationData, facetByFields);\n        propFields = append ? [...fields, ...propagationFields] : propagationFields;\n        propagationData = propagationData.project(propFields);\n    }\n\n    let propagateInterpolatedValues = false;\n    if (propFields.length && propFields.every(field => fieldsConfig[field] &&\n        fieldsConfig[field].def.type === FieldType.MEASURE)) {\n        propagateInterpolatedValues = true;\n    }\n\n    const groupId = context.parentAlias();\n    payload.action = action;\n    const behaviourInstance = instance._actions.behavioural[propagationBehaviour];\n    const isMutableAction = behaviourInstance ? behaviourInstance.constructor.mutates() : false;\n\n    const filterFn = (entry, propagationConf) => {\n        const effects = behaviourEffectMap[entry.config.action];\n        const mutates = entry.config.groupId ?\n            effects.some(d => sideEfffects[d.name || d].constructor.mutates()) : true;\n        return entry.config.groupId !== propagationConf.groupId && mutates;\n    };\n\n    const sourceBehaviour = instance._actions.behavioural[action];\n    const mutates = sourceBehaviour ? sourceBehaviour.constructor.mutates() : false;\n    let propConfig = {\n        payload,\n        action,\n        criteria: propagationData,\n        isMutableAction: mutates,\n        propagateInterpolatedValues,\n        groupId,\n        sourceId: mutates ? groupId : sourceId,\n        filterFn,\n        enabled: (propConf, firebolt) => (action !== propagationBehaviour ?\n            propConf.payload.sourceCanvas === firebolt.context.parentAlias() : true)\n    };\n\n    dataModel.propagate(propagationData, propConfig, true);\n\n    if (action !== propagationBehaviour) {\n        propConfig = {\n            payload,\n            sourceId: isMutableAction ? groupId : sourceId,\n            criteria: propagationData,\n            isMutableAction,\n            propagateInterpolatedValues,\n            action: propagationBehaviour,\n            groupId,\n            applyOnSource: action === propagationBehaviour,\n            enabled: (propConf, firebolt) => propConf.payload.sourceCanvas !== firebolt.context.parentAlias(),\n            filterFn\n        };\n\n        dataModel.propagate(propagationData, propConfig, true, {\n            filterImmutableAction: (actionInf, propInf) => actionInf.groupId !== propInf.groupId\n        });\n    }\n};\n","import { FieldType } from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\nimport { registerListeners } from './helper';\nimport { payloadGenerator } from './payload-generator';\nimport { propagateValues } from './data-propagator';\n\n/**\n * This class manages the interactions of visual unit. It associates physical actions with\n * behavioural actions. It also propagates the behavioural actions to other datamodels.\n */\nexport default class UnitFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        registerListeners(this);\n    }\n\n    propagate (behaviour, payload, selectionSet, sideEffects) {\n        propagateValues(this, behaviour, {\n            payload,\n            selectionSet,\n            sideEffects,\n            propagationFields: this._propagationFields\n        });\n    }\n\n    getApplicableSideEffects (sideEffects, payload, propagationInf) {\n        const context = this.context;\n        const unitId = context.id();\n        const aliasName = context.parentAlias();\n        const propagationSourceCanvas = propagationInf.propPayload && propagationInf.propPayload.sourceCanvas;\n        const sourceUnitId = propagationInf.propPayload && propagationInf.propPayload.sourceUnit;\n        const sourceSideEffects = this._sourceSideEffects;\n        const sideEffectInstances = this.sideEffects();\n        const actionOnSource = sourceUnitId ? sourceUnitId === unitId : true;\n\n        const applicableSideEffects = payload.sideEffects ? [{\n            effects: payload.sideEffects,\n            behaviours: [payload.action]\n        }] : sideEffects;\n        applicableSideEffects.forEach((d) => {\n            let mappedEffects = d.effects;\n            mappedEffects = mappedEffects.filter((se) => {\n                const mutates = sideEffectInstances[se.name || se].constructor.mutates();\n                if (mutates && propagationInf.isMutableAction === false) {\n                    return false;\n                }\n                if (!actionOnSource && payload.criteria !== null) {\n                    const sideEffectChecker = sourceSideEffects[se.name || se];\n                    return sideEffectChecker ? sideEffectChecker(propagationInf.propPayload, context) : true;\n                }\n                if (propagationSourceCanvas === aliasName || actionOnSource) {\n                    return se.applyOnSource !== false;\n                }\n\n                return true;\n            });\n            d.effects = mappedEffects;\n        });\n        return applicableSideEffects;\n    }\n\n    shouldApplySideEffects (propagate) {\n        return propagate === false;\n    }\n\n    onDataModelPropagation () {\n        return (data, config) => {\n            let isSourceFieldPresent = true;\n            let isMutableAction = false;\n            const propPayload = config.payload;\n            const sourceIdentifiers = config.sourceIdentifiers;\n            const enabledFn = config.enabled;\n            const action = config.action;\n            const payloadFn = payloadGenerator[action] || payloadGenerator.__default;\n\n            if (sourceIdentifiers) {\n                const fieldsConfig = sourceIdentifiers.getFieldsConfig();\n                const sourceIdentifierFields = Object.keys(fieldsConfig);\n                const propFields = Object.keys(data[0].getFieldsConfig());\n                if (!Object.values(fieldsConfig).some(d => d.def.type === FieldType.MEASURE)) {\n                    isSourceFieldPresent = sourceIdentifierFields.some(d => propFields.indexOf(d) !== -1);\n                }\n            }\n\n            const payload = payloadFn(this.context, data, config);\n            const sourceBehaviours = this._sourceBehaviours;\n            const filterFn = sourceBehaviours[action] || sourceBehaviours['*'];\n            let enabled = true;\n\n            if (filterFn) {\n                enabled = filterFn(propPayload || {}, this.context);\n            }\n\n            if (enabledFn) {\n                enabled = enabledFn(config, this) && enabled !== false;\n            }\n\n            if (enabled) {\n                const effects = this._behaviourEffectMap[action];\n                const sideEffectInstances = this.sideEffects();\n                isMutableAction = config.groupId ?\n                    effects.some(d => sideEffectInstances[d.name || d].constructor.mutates()) : config.isMutableAction;\n\n                const propagationInf = {\n                    propagate: false,\n                    data,\n                    propPayload,\n                    sourceIdentifiers,\n                    persistent: false,\n                    isSourceFieldPresent,\n                    sourceId: config.propagationSourceId,\n                    isMutableAction: config.isMutableAction\n                };\n\n                this._actionHistory[action] = {\n                    payload,\n                    propagationInf,\n                    isMutableAction\n                };\n                this.dispatchBehaviour(action, payload, propagationInf);\n            }\n        };\n    }\n\n    prepareSelectionSets (behaviours) {\n        const data = this.context.data();\n        if (data) {\n            this.createSelectionSet(data.getData().uids, behaviours);\n        }\n        return this;\n    }\n\n    initializeSideEffects () {\n        if (this.context.data()) {\n            super.initializeSideEffects();\n        }\n        return this;\n    }\n\n    remove () {\n        this.context.cachedData()[0].unsubscribe('propagation');\n        return this;\n    }\n}\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    Store,\n    setAttrs,\n    getUniqueId,\n    getQualifiedClassName,\n    selectElement,\n    transactor,\n    makeElement,\n    registerListeners,\n    generateGetterSetters,\n    getDataModelFromIdentifiers,\n    isSimpleObject,\n    transposeArray,\n    CommonProps,\n    toArray,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { actionBehaviourMap } from './firebolt/action-behaviour-map';\nimport {\n    renderLayers,\n    getNearestDimensionalValue,\n    removeLayersBy,\n    getLayersBy,\n    getLayerFromDef,\n    getLayerAxisIndex,\n    sanitizeLayerDef,\n    createSideEffectGroup,\n    resolveEncodingTransform,\n    createRenderPromise,\n    setAxisRange\n} from './helper';\nimport { renderGridLineLayers } from './helper/grid-lines';\nimport localOptions from './local-options';\nimport { listenerMap, calculateDomainListener } from './listener-map';\nimport {\n    DOMAIN\n} from './enums/reactive-props';\nimport { PROPS } from './props';\nimport UnitFireBolt from './firebolt';\nimport { initSideEffects } from './firebolt/helper';\nimport './styles.scss';\n\nconst FORMAL_NAME = 'unit';\n\n/**\n * Visual Unit is hierarchical component created by {@link VisualGroup}. This component accepts layer definitions\n * and creates concrete layer instances from them, binds data and attaches axis to them. It also retreives the domain\n * from the layers and unions them and sets them on corresponding axis instances. This also creates the parent svg\n * groups for all the layers and delegates the rendering to all the layers.\n *\n * @public\n * @module VisualUnit\n * @class\n */\nexport default class VisualUnit {\n\n    /**\n     * Creates instance of visualization unit.\n     *\n     * @param {Object} registry  Component registry\n     * @param {Object} dependencies  Dependencies required by visual unit.\n     */\n    constructor (registry, dependencies) {\n        this._id = getUniqueId();\n        this._dependencies = dependencies;\n        this._layerDeps = {\n            throwback: new Store({\n                [CommonProps.ON_LAYER_DRAW]: false\n            }),\n            smartLabel: dependencies.smartLabel,\n            lifeCycleManager: dependencies.lifeCycleManager\n        };\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        createRenderPromise(this);\n        this._layerDeps.throwback.registerChangeListener([CommonProps.ON_LAYER_DRAW], () => {\n            this._renderedResolve();\n            this._lifeCycleManager.notify({ client: this.layers(), action: 'drawn', formalName: 'layer' });\n        });\n\n        this._lifeCycleManager = dependencies.lifeCycleManager;\n        this._layersMap = {};\n        this._gridLinesSelection = null;\n        this._gridBandsSelection = null;\n        this._gridLines = [];\n        this._gridBands = [];\n        this._layerNamespaces = {};\n        this._layerAxisIndex = {};\n        this._transformedDataModels = {};\n        layerFactory.setLayerRegistry(registry.layerRegistry);\n        generateGetterSetters(this, PROPS);\n        this.registry(registry);\n        this.cachedData([]);\n    }\n\n    static formalName () {\n        return FORMAL_NAME;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: {}\n            },\n            localOptions\n        ];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            const metaInf = this.metaInf();\n            this.store().append(`${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}`, {\n                [`${metaInf.namespace}`]: null\n            });\n            const localNs = `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`;\n            transactor(this, localOptions, this.store().model, {\n                namespace: localNs\n            });\n            registerListeners(this, listenerMap, {\n                local: localNs,\n                global: STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE\n            }, {\n                rowIndex: metaInf.rowIndex,\n                colIndex: metaInf.colIndex\n            });\n            this.firebolt(new UnitFireBolt(this, {\n                physical: physicalActions,\n                behavioural: behaviouralActions,\n                physicalBehaviouralMap: actionBehaviourMap\n            }, sideEffects, behaviourEffectMap));\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Static helper for creates a unit instance\n     *\n     * @param {Object} [id] optional unique identifier for a unit; , id is calculated internally\n     * @param {DataModel} data instance of datamodel\n     * @param {Array.<Layer>} layers layer configuration\n     * @param {Object} config configurtion for the visual unit\n     * @return {VisualUnit} Instance of a unit\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this visual unit. Firebolt dispatches the behavioural actions\n     * when any physical action happens on the elements of visual unit.\n     *\n     * @public\n     *\n     * @return {Firebolt} Instance of firebolt.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Returns the unique id of this visual unit.\n     *\n     * @public\n     * @return {string} Unique identifier.\n     */\n    id () {\n        return this._id;\n    }\n\n    lockModel () {\n        this._store.model.lock();\n        return this;\n    }\n\n    unlockModel () {\n        this._store.model.unlock();\n        return this;\n    }\n\n    timeDiffsByField (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._timeDiffsByField;\n    }\n\n    /**\n     * Renders the visual unit. It creates the layout and renders the axes and layers.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    render (container) {\n        const config = this.config();\n        const { className, defClassName, sideEffectClassName, classPrefix } = config;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const width = this.width();\n        const height = this.height();\n        const containerSelection = selectElement(container).style('position', 'relative');\n\n        this._rootSvg = makeElement(containerSelection, 'svg', [null], className)\n                        .style('width', `${width}px`).style('height', `${height}px`);\n\n        const node = this._rootSvg.node();\n        setAttrs(node, {\n            width,\n            height,\n            class: qualifiedClassName.join(' ')\n        });\n\n        setAxisRange(this);\n        renderGridLineLayers(this, node);\n        renderLayers(this, node, this.layers(), {\n            width,\n            height\n        });\n        this._sideEffectGroup = createSideEffectGroup(node, `${classPrefix}-${sideEffectClassName}`);\n        const firebolt = this.firebolt();\n        initSideEffects(firebolt.sideEffects(), firebolt);\n        return this;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Caches all the datamodels in an array from the next `data()` call on visual unit until `clearCaching()` or\n     * `resetData()` is called on it.\n     *\n     * @public\n     * @return {VisualUnit} Instance of visual unit.\n     */\n\n    enableCaching () {\n        this._cache = true;\n        return this;\n    }\n\n    /**\n     * Clears all the previous cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    clearCaching () {\n        this._cache = false;\n        this.cachedData([this.cachedData()[0]]);\n        return this;\n    }\n\n    /**\n     * Returns the drawing information from visual unit.Drawing context contains the dimensions of unit and the svg\n     * container of the visual unit.\n     *\n     * @public\n     *\n     * @return {Object} Drawing information.\n     *      ```\n     *          {\n     *              htmlContainer: // Html container of svg container of the visual unit\n     *              svgContainer: // Root svg container\n     *              width: // Width of the visual unit\n     *              height: // Height of the visual unit\n     *              sideEffectGroup: // Svg group for drawing side effect elements.\n     *              parentContainer: // Parent html container of the visual unit.\n     *              xOffset: // x offset space from the starting x position of the container,\n     *              yOffset: // y offset space from the starting y position of the container\n     *          }\n     *      ```\n     */\n    getDrawingContext () {\n        const rootSvg = this._rootSvg && this._rootSvg.node();\n        const width = this.width();\n        const height = this.height();\n        const { el, dimensions } = this.parentContainerInf();\n        return {\n            htmlContainer: this.mount(),\n            svgContainer: rootSvg,\n            width,\n            height,\n            sideEffectGroup: this._sideEffectGroup,\n            parentContainer: el,\n            parentContainerDimensions: dimensions,\n            xOffset: 0,\n            yOffset: 0\n        };\n    }\n\n    /**\n     * Returns the serialized configuration of visual unit.\n     *\n     * @return {Object} serialized configuration\n     */\n    serialize () {\n        return {\n            layers: this.layers().map(layer => layer.serialize()),\n            config: this.config(),\n            axes: this.axes().map(axis => axis.serialize())\n        };\n    }\n\n    mount (...mount) {\n        if (mount.length) {\n            this._mount = mount[0];\n            this.render(mount[0]);\n            this.firebolt().mapActionsAndBehaviour();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     * Adds a new layer to the visual unit. It takes a layer definition and creates layer instances from them. It does\n     * not render the layers. It returns the layer instances in an array. If the layer definition is a composite layer,\n     * then multiple layer instances will be returned in the array.\n     *\n     * To add a layer in the unit,\n     * ```\n     *      unit.addLayer({\n     *          name: 'bullet',\n     *          mark: 'bar',\n     *          encoding: {\n     *              x: 'Year',\n     *              y: 'Acceleration',\n     *              color: 'Origin'\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} layerDef Definition of new layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    addLayer (layerDefinition) {\n        const layerDefinitions = sanitizeLayerDef(toArray(layerDefinition));\n\n        const layersMap = this._layersMap;\n        const markSet = {};\n        const store = {\n            layers: {},\n            components: {\n                unit: this\n            }\n        };\n        let layerIndex = 0;\n        let startIndex = [].concat(...Object.values(this._layersMap)).length;\n        const metaInf = this.metaInf();\n        const props = this._layerNamespaces;\n        const layers = layerDefinitions.sort((a, b) => a.order - b.order).reduce((layersArr, layerDef) => {\n            const definition = layerDef.def;\n            const markId = definition.name;\n            const defArr = toArray(definition);\n            const namespaces = [];\n            defArr.forEach((def) => {\n                def.order = layerDef.order + layerIndex;\n                const namespace = `${metaInf.namespace}${startIndex}`;\n                if (!layersMap[markId]) {\n                    startIndex++;\n                    if (definition.calculateDomain !== false) {\n                        props[`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${DOMAIN}.${namespace}`] = true;\n                    }\n                }\n                namespaces.push(namespace);\n            });\n            layerIndex += defArr.length;\n            const instances = getLayerFromDef(this, definition, layersMap[markId], namespaces);\n            store.layers = Object.assign(store.layers, instances);\n            const instanceValues = Object.values(instances);\n            layersArr = layersArr.concat(...instanceValues);\n            layersMap[markId] = instanceValues;\n            markSet[markId] = markId;\n            return layersArr;\n        }, []);\n\n        store.unit = this;\n        const layerdeps = {};\n        const layersArr = [].concat(...Object.values(this._layersMap));\n        layersArr.forEach((layer) => {\n            const alias = layer.alias();\n            store.layers[alias] = layer;\n            layerdeps[alias] = [];\n        });\n        layers.forEach((layer) => {\n            const depArr = resolveEncodingTransform(layer, store);\n            layerdeps[layer.alias()] = depArr;\n        });\n\n        this._layerDepOrder = layerdeps;\n        this._layerAxisIndex = Object.assign(this._layerAxisIndex, getLayerAxisIndex(layers, this.fields()));\n        const stateStore = this.store();\n\n        stateStore.unsubscribe({\n            key: 'calculateDomainListener',\n            namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`\n        });\n        stateStore.registerImmediateListener(Object.keys(props), calculateDomainListener(this, metaInf.namespace),\n            false, {\n                key: 'calculateDomainListener',\n                namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`\n            });\n        this.layers(layersArr);\n        return layers;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    remove () {\n        const lifeCycleManager = this._dependencies.lifeCycleManager;\n        lifeCycleManager.notify({ client: this, action: 'beforeremove', formalName: 'unit' });\n        this.store().unsubscribe({\n            namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${this.metaInf().namespace}`\n        });\n        selectElement(this.mount()).remove();\n        this.firebolt().remove();\n        // Remove layers\n        lifeCycleManager.notify({ client: this.layers(), action: 'beforeremove', formalName: 'layer' });\n        this.layers().forEach(layer => layer.remove());\n        lifeCycleManager.notify({ client: this.layers(), action: 'removed', formalName: 'layer' });\n        lifeCycleManager.notify({ client: this, action: 'removed', formalName: 'unit' });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     *\n     * @memberof VisualUnit\n     */\n    getDataModelFromIdentifiers (identifiers, mode, parentModel) {\n        if (identifiers === null) {\n            return null;\n        }\n        const dataModel = parentModel || this.data();\n        return getDataModelFromIdentifiers(dataModel, identifiers, mode);\n    }\n\n    /**\n     * Resets the data of visual unit to original data model. It also clears the cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    resetData () {\n        this.data(this.cachedData()[0]);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getSourceInfo () {\n        return {\n            dimensionMeasureMap: this._dimensionMeasureMap,\n            fields: this.fields(),\n            data: this.data(),\n            axes: this.axes()\n        };\n    }\n\n    getDataDomain () {\n        return this.store().get(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain.${this.metaInf().namespace}`);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getDefaultTargetContainer () {\n        const { classPrefix, defClassName } = this.config();\n        return [`.${classPrefix}-${defClassName}`];\n    }\n\n    /**\n     * Returns an array of layer instances which matches the supplied mark type.\n     *\n     * @public\n     *\n     * @param {string} type Mark type of layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    getLayersByType (type) {\n        const layers = getLayersBy(this.layers(), 'type', type);\n        return layers;\n    }\n\n    /**\n     * Returns the layer instance which matches the supplied layer name. If no layer is found, then it returns\n     * undefined.\n     *\n     * @public\n     * @param {string} name Name of layer.\n     *\n     * @return {VisualUnit} Layer instance.\n     */\n    getLayerByName (name) {\n        const layers = getLayersBy(this.layers(), 'name', name);\n        return layers[0];\n    }\n\n    /**\n     * Returns the point located nearest to the supplied x and y position. It returns the unique identifiers of the\n     * point. This function also accepts an additional configuration `getAllPoints` inside `config` object in the third\n     * argument which if set to true, then it returns the identifiers of all the points which falls on the nearest\n     * x value or y value if any one of the field is a dimension. Additionally, a target property is also returned\n     * which contains the identifier of the nearest point. If no nearest point is found, then it returns identifier\n     * as null.\n     *\n     * @public\n     *\n     * @param {number} x X Position of the point from where nearest point is to be found.\n     * @param {number} y Y Position of the point from where nearest point is to be found.\n     * @param {Object} config Additional configuration options.\n     * @param {boolean} config.getAllPoints If true, then returns all the points nearest to the x value or y value if\n     * it is dimension.\n     * @param {Object} config.data Data associated with the nearest point.\n     * @return {Object} Nearest point information\n     * ```\n     *      {\n     *          id: [['Origin'], ['USA'], ['Japan']], // Identifiers of all the points closest to the x value.\n     *          target: [['Origin'], ['Japan']] // Identifier of the nearest point.\n     *      }\n     * ```\n     */\n    getNearestPoint (x, y, config) {\n        let pointObj = {\n            id: null\n        };\n        const dimValue = getNearestDimensionalValue(this, {\n            x,\n            y\n        });\n\n        if (dimValue !== null && config.getAllPoints) {\n            pointObj.id = dimValue;\n            const pointInf = this.getMarkInfFromLayers(x, y, config);\n            pointObj.target = pointInf && pointInf.id ? pointInf.id : pointObj.id;\n            return pointObj;\n        }\n\n        const markInf = this.getMarkInfFromLayers(x, y, config) || { id: null };\n        pointObj = Object.assign({}, markInf);\n\n        pointObj.target = markInf.id;\n        return pointObj;\n    }\n\n    getMarkInfFromLayers (x, y, args) {\n        const layers = this.layers();\n        const len = layers.length;\n        let point = null;\n        // Iterate through the layers array and fetch the nearest point from each layer. If a valid\n        // nearest point is found from any layer, then return that point.\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            const config = layer.config();\n            if (config.interactive !== false) {\n                point = layer.getNearestPoint(x, y, args);\n            }\n            if (point) {\n                return point;\n            }\n        }\n        return point;\n    }\n\n    /**\n     * Get the information of all the marks such as x, y position and size from supplied identifiers. It\n     * returns an array of points whose data matches the given identifiers.\n     *\n     * @public\n     *\n     * @param {Array|Object} identifiers Field names and their corresponding values.\n     * ```\n     * identifiers can be given in an array of array,\n     *      ['Origin', 'Name'], // Names of the fields supplied in first array\n     *      ['USA', 'ford'], // Data values of each field supplied in rest of the arrays.\n     *      ['Japan', 'ford']\n     * or in an object,\n     *      {\n     *          Origin: ['USA']\n     *      }\n     * ```\n     * @param {Object} config Optional configurations which decides which information of the mark will\n     * be retrieved.\n     * @param {boolean} [config.getAllAttrs = false] If true, then returns all the information of each mark.\n     * @param {boolean} [config.getBBox = false] If true, then returns the bounding box of each mark.\n     *\n     * @return {Array} Array of objects containing the information of each point.\n     * ```\n     * By default, the method returns the array of points in this structure,\n     *      [\n     *          {\n     *              x: 20,\n     *              y: 100,\n     *              width: 200,\n     *              height: 100\n     *          }\n     *      ]\n     * If 'config.getAllAttrs' is true, then it returns all the information of each mark,\n     *      [\n     *      // Positions of mark on initial state of transition.\n     *          enter: {\n     *              x: 0,\n     *              y: 0\n     *          },\n     *          // Final positions of the mark\n     *          update: {\n     *              x: 20,\n     *              y: 10\n     *          },\n     *          style: // css styles of each mark\n     *          source: [200, 'USA'] // Row information of each mark\n     *          id: 20 // Row id of each mark\n     *      ]\n     * ```\n     */\n    getPlotPointsFromIdentifiers (identifiers, config = {}) {\n        let points = [];\n        let parsedIdentifiers = identifiers;\n        if (identifiers === null) {\n            return [];\n        }\n        const layers = this.layers();\n        const len = layers.length;\n        if (isSimpleObject(identifiers)) {\n            parsedIdentifiers = [Object.keys(identifiers)];\n            parsedIdentifiers = [...parsedIdentifiers, ...transposeArray(Object.values(identifiers))];\n        }\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            if (layer.config().interactive !== false) {\n                points = [...points, ...layer.getPointsFromIdentifiers(parsedIdentifiers, config)];\n            }\n        }\n        return points;\n    }\n\n    /**\n     * Removes the layer instance which matches the supplied layer name.\n     *\n     * @public\n     * @param {string} name Name of layer\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayerByName (name) {\n        removeLayersBy('name', name);\n        return this;\n    }\n\n    /**\n     * Removes all the layer instances which matches the supplied mark type.\n     *\n     * @public\n     * @param {string} type Mark type of layer.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayersByType (type) {\n        removeLayersBy('type', type);\n        return this;\n    }\n}\n","import { DataModel } from 'muze-utils';\nimport { retriveDomainFromData, sortFacetFields } from './group-utils';\n\n/**\n * Gets name of fields form the variables\n *\n * @param {*} fields1\n * @param {*} [fields2=[]]\n *\n */\nconst getFieldNames = (fields1, fields2 = []) => [fields1, fields2].map(fields => fields.reduce((acc, d) => {\n    acc = [...acc, ...d.getMembers()];\n    return acc;\n}, []));\n\n/**\n * Creates a selected datamodel from a parent datamodel and a set of field names\n *\n * @param {Object} datamodel provided as input\n * @param {Array} fieldNames schema  names\n * @param {Array} fieldValues values of those schema names to be selected\n * @return {Object} creates a new selected datamodel\n */\nconst createSelectedDataModel = (datamodel, fieldNames, fieldValues) =>\n    datamodel.select(fields => fieldNames.every((field, k) => fields[field].value === fieldValues[k]));\n\n/**\n *\n *\n * @param {*} facets\n * @param {*} keyArray\n *\n */\nconst uniqueKeyGenerator = (keyArray, context, depth = 0, val = []) => {\n    const {\n        facets,\n        dataModel,\n        uniqueValues\n    } = context;\n\n    // Get unique keys for the next depth recursively if required\n    if (facets[depth + 1]) {\n        const field = facets[depth];\n        uniqueValues.forEach((value) => {\n            const newDm = dataModel.select(fields => fields[field].value === value);\n            const nextDepthUniqueValues = retriveDomainFromData(newDm, facets[depth + 1]);\n            const newContext = {\n                facets,\n                dataModel: newDm,\n                uniqueValues: nextDepthUniqueValues\n            };\n\n            uniqueKeyGenerator(keyArray, newContext, depth + 1, [...val, value]);\n        });\n    } else {\n        uniqueValues.forEach((value) => {\n            keyArray.push([...val, value]);\n        });\n    }\n};\n\n/**\n * projects row model based on the set of row and/or column and other projection fields\n *\n * @param {Object} datamodel provided as input\n * @return {Object} Projected datamodel\n */\nconst projectRows = (datamodel, projections) => {\n    const {\n        allColumnProjections,\n        rowProjections,\n        optionalProjections\n    } = projections;\n\n    if (rowProjections.length > 0) {\n        return rowProjections.map((projectFields) => {\n            const [projFieldNames, colProjFieldNames] = getFieldNames(projectFields, allColumnProjections);\n            return datamodel.project([...projFieldNames, ...colProjFieldNames, ...optionalProjections]);\n        });\n    }\n    return [datamodel];\n};\n\n/**\n * Adds the datamodels to current row index based on column fields\n *\n * @param {Array} context current context\n * @param {Array} valueCellCreator List of facets applied to the current datamodel\n */\nconst pushToMatrix = (context, valueCellCreator) => {\n    let cells = [];\n    const {\n        matrix,\n        datamodel,\n        facetInfo,\n        fieldInfo\n    } = context;\n    // Get projected fields for current row\n    const {\n        rowProjections,\n        colProjections,\n        optionalProjections\n    } = fieldInfo;\n    const {\n        rowIndex,\n        columnIndex\n    } = facetInfo;\n    const rowProj = rowProjections[(rowIndex) % rowProjections.length] || [];\n\n    // Get the cells for the matrix from the return function of the callback on the datamodel.\n    // callback function -> (datamodel, {projections, indices}, facets)\n    if (colProjections.length > 0) {\n        cells = colProjections.map((projectFields, projIdx) => {\n            const [colProjFieldNames, rowProjFieldNames] = getFieldNames(projectFields, rowProj);\n            const projectedDm = datamodel.project([...colProjFieldNames, ...rowProjFieldNames, ...optionalProjections]);\n            const projections = { rowFields: rowProj, columnFields: projectFields };\n            const indices = { rowIndex, columnIndex: columnIndex * colProjections.length + projIdx };\n\n            return valueCellCreator(projectedDm, { projections, indices }, facetInfo);\n        });\n    } else {\n        const projections = { rowFields: rowProj, columnFields: [] };\n        const indices = { rowIndex, columnIndex };\n\n        cells = [valueCellCreator(datamodel, { projections, indices }, facetInfo)];\n    }\n\n    matrix[rowIndex] = matrix[rowIndex] || [];\n    matrix[rowIndex].push(...cells);\n};\n\n/**\n * Formats row or columns keys with the provided formatter.\n *\n * @param {Array} keys - The collection of row or column keys.\n * @param {Array} formatterList - The list of corresponding formatter.\n */\nconst formatKeys = (keys, formatterList) => {\n    const formattedKeys = [];\n    keys.forEach((rKeys, rIdx) => {\n        formattedKeys[rIdx] = [];\n        rKeys.forEach((key, idx) => {\n            formattedKeys[rIdx][idx] = formatterList[idx](key);\n        });\n    });\n    return formattedKeys;\n};\n\n/**\n * Gets Matrixes for corresponding datamodel, facets and projections\n *\n * @param {Object} dataModel input datamodel\n * @param {Array} facetsAndProjections contains the set of facets and projections for the matrices\n * @param {Function} valueCellCreator Callback executed after datamodels are prepared after sel/proj\n * @param {Object} globalConfig global config\n *\n * @return {Object} set of matrices with the corresponding row and column keys\n */\nexport const getMatrixModel = (dataModel, facetsAndProjections, valueCellCreator, globalConfig) => {\n    let rowDataModels = [];\n    const rowKeys = [];\n    const columnKeys = [];\n    const allColumnProjections = [];\n    const matrix = [];\n    const facetInfo = [];\n\n    const fieldInfo = Object.assign({}, facetsAndProjections);\n    const {\n        rowFacets,\n        colFacets,\n        colProjections\n    } = fieldInfo;\n\n    colProjections.forEach((colProj) => {\n        allColumnProjections.push(...colProj);\n    });\n    fieldInfo.allColumnProjections = allColumnProjections;\n\n    // Performing row selection and projection\n    if (rowFacets.length > 0) {\n        // Get unique values for the root level of facet\n        const field = rowFacets[0].toString();\n        const firstLevelRowKeys = retriveDomainFromData(dataModel, field);\n\n        // Get unique keys in the form of an array of arrays for each row\n        uniqueKeyGenerator(rowKeys, { facets: rowFacets, dataModel, uniqueValues: firstLevelRowKeys });\n\n        sortFacetFields(rowFacets, rowKeys, globalConfig);\n\n        // Apply selection -> projection -> row datamodels\n        rowKeys.forEach((val) => {\n            // Create faceted datamodel\n            const [rowFacetFieldNames] = getFieldNames(rowFacets);\n            const selectedDataModel = createSelectedDataModel(dataModel, rowFacetFieldNames, val);\n\n            // Project the datamodel based on the number of projections (based on last levels)\n            const newProjectedDataModels = projectRows(selectedDataModel, fieldInfo);\n            rowDataModels.push(...newProjectedDataModels);\n\n            newProjectedDataModels.forEach(() => {\n                facetInfo.push([rowFacets, val]);\n            });\n        });\n    } else {\n        // No row facets, hence only row projection\n        rowDataModels.push(...projectRows(dataModel, fieldInfo));\n    }\n\n    // Maintaining set of row datamodels for column resolution\n    rowDataModels = rowDataModels.length > 0 ? rowDataModels : [[]];\n\n    // Performing column selection and projection\n    if (colFacets.length > 0) {\n        const colFacetNames = colFacets.map(d => `${d}`);\n        // Get unique values for the root level of facet\n        const field = colFacetNames[0];\n        const firstLevelColumnKeys = retriveDomainFromData(dataModel, field);\n\n        // Get unique keys to create faceted datamodels: this time for columns\n        uniqueKeyGenerator(columnKeys, {\n            facets: colFacetNames,\n            dataModel,\n            uniqueValues: firstLevelColumnKeys\n        });\n\n        sortFacetFields(colFacets, columnKeys, globalConfig);\n\n        // For each row in the datamodel, apply selection -> projection -> push the projection to matri\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            columnKeys.forEach((val, cIndex) => {\n                matrix[rIndex] = matrix[rIndex] || [];\n\n                // If datamodel is not present in current row, choose parent datamodel\n                const datamodel = dme instanceof DataModel ? dme : dataModel;\n\n                // Selection is made on the datamodel for the current row\n                const selectedDataModel = createSelectedDataModel(datamodel, colFacetNames, val);\n                const context = {\n                    matrix,\n                    datamodel: selectedDataModel,\n                    facetInfo: {\n                        rowFacets: facetInfo[rIndex],\n                        colFacets: [colFacets, val],\n                        rowIndex: rIndex,\n                        columnIndex: cIndex\n                    },\n                    fieldInfo\n                };\n                pushToMatrix(context, valueCellCreator);\n            });\n        });\n    } else {\n        // No column facets, hence only row projection\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            const context = {\n                matrix,\n                datamodel: dme || dataModel,\n                facetInfo: {\n                    rowFacets: facetInfo[rIndex],\n                    colFacets: [[], []],\n                    rowIndex: rIndex,\n                    columnIndex: 0\n                },\n                fieldInfo\n            };\n\n            pushToMatrix(context, valueCellCreator);\n        });\n    }\n\n    const formattedColKeys = formatKeys(columnKeys, colFacets.map(facetField => facetField.rawFormat()));\n    const formattedRowKeys = formatKeys(rowKeys, rowFacets.map(facetField => facetField.rawFormat()));\n\n    // Getting column keys\n    const transposedColKeys = formattedColKeys.length > 0 ? formattedColKeys[0].map((col, i) =>\n                    formattedColKeys.map(row => row[i])) : formattedColKeys;\n\n    return { matrix, rowKeys: formattedRowKeys, columnKeys: transposedColKeys };\n};\n","import { AxisOrientation } from '@chartshq/muze-axis';\nimport {\n    getObjProp,\n    FieldType,\n    STATE_NAMESPACES,\n    retrieveNearestGroupByReducers,\n    mergeRecursive,\n    createSelection,\n    DataModel\n} from 'muze-utils';\nimport { getMatrixModel } from './matrix-model';\nimport {\n    getCellKey,\n    isDistributionEqual,\n    mutateAxesFromMap,\n    getFieldsFromSuppliedLayers,\n    extractFields\n} from './group-utils';\nimport { ROW, ROWS, COLUMNS, COL, LEFT, RIGHT, TOP,\n    BOTTOM, PRIMARY, SECONDARY, X, Y, TEMPORAL } from '../enums/constants';\nimport { SimpleVariable } from '../variable';\n\n/**\n * Updates row and column cells with the geom cell corresponding to the facet keys\n *\n * @param {*} resolver\n * @param {*} facets\n */\nconst updateCells = (resolver, facets, geomCell) => {\n    [ROW, COL].forEach((field) => {\n        const cells = resolver[`${field}Cells`]();\n        const facetKey = facets[`${field}Facets`][1].join();\n\n        !cells[facetKey] && (cells[facetKey] = []);\n        cells[facetKey].push(geomCell);\n        resolver[`${field}Cells`](cells);\n    });\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} datamodel\n * @param {*} fieldInfo\n * @param {*} facets\n *\n */\nexport const createValueCells = (context, datamodel, fieldInfo, facets) => {\n    const {\n        projections,\n        indices\n    } = fieldInfo;\n    const {\n        rowFields,\n        columnFields\n    } = projections;\n    const {\n         rowIndex,\n         columnIndex\n    } = indices;\n    const {\n        suppliedLayers,\n        cell: GeomCell,\n        resolver,\n        config,\n        encoder,\n        detailFields\n    } = context;\n    const axes = resolver.axes();\n    const cacheMaps = resolver.cacheMaps();\n    const matrixLayers = resolver.matrixLayers();\n    const labelManager = resolver.dependencies().smartlabel;\n    const horizontalAxis = resolver.horizontalAxis();\n    const verticalAxis = resolver.verticalAxis();\n    const datamodelTransform = resolver.datamodelTransform();\n    const {\n        entryCellMap,\n        exitCellMap\n    } = cacheMaps;\n    const layerConfigArr = encoder.getLayerConfig({ columnFields, rowFields }, suppliedLayers || [],\n        context.retinalConfig);\n    const axesCreators = { config, labelManager, axes, cacheMaps };\n\n    fieldInfo.normalizedColumns = verticalAxis.fields;\n    fieldInfo.normalizedRows = horizontalAxis.fields;\n\n    const allFacets = [\n        [...facets.rowFacets[0], ...facets.colFacets[0]],\n        [...facets.rowFacets[1], ...facets.colFacets[1]]\n    ];\n    const facetFields = allFacets.slice();\n    facetFields[0] = facetFields[0].map(facetField => facetField.oneVar());\n\n    matrixLayers[rowIndex] = matrixLayers[rowIndex] ? matrixLayers[rowIndex] : [];\n    matrixLayers[rowIndex][columnIndex] = layerConfigArr;\n\n    // return from map if already there otherwise create and put in map\n    const geomCellKey = getCellKey(rowIndex, columnIndex);\n    const fields = {\n        y: rowFields,\n        x: columnFields\n    };\n\n    const geomCell = !exitCellMap.has(geomCellKey) ? new GeomCell() : exitCellMap.get(geomCellKey);\n\n    geomCell.data(datamodel)\n                    .fields(fields)\n                    .transform(datamodelTransform)\n                    .detailFields(detailFields)\n                    .facetByFields(allFacets);\n\n    encoder.createAxis(axesCreators, fieldInfo, Object.assign({}, context, { geomCell, facetFields }));\n    entryCellMap.set(geomCellKey, geomCell);\n    exitCellMap.delete(geomCellKey);\n\n    updateCells(resolver, facets, geomCell);\n\n    return entryCellMap.get(geomCellKey);\n};\n\nconst extractAxisIndex = id => getObjProp(id.match(/^[0-9]*?(?=-)/g), 0);\n\n/**\n * Creates axis cells based on the set of axes\n *\n * @param {Selection} selection Contains a selection of the axis units\n * @param {Array} axes Actual axis units\n * @param {number} axisIndex 0-> primary axis, 1-> secondary axis(when dual axis is made)\n * @param {Object} cells Contains a collection of the cells\n * @return {Object} return either set of axis/blank cells depending on the config\n */\nconst createAxisCells = (selection, axes, axisIndex, cells) =>\n    createSelection(selection, axis => axis, axes, (item, i) => i + item.reduce((e, n) => {\n        const id = n.id + axisIndex;\n        return `${e}-${id}`;\n    }, '')).map((currObj, axis) => {\n        if (axis && axis[axisIndex]) {\n            const axisInst = axis[axisIndex];\n            const { orientation, show } = axisInst.config();\n\n            return new cells.AxisCell().source(axisInst).config({\n                isOffset: orientation === AxisOrientation.LEFT || orientation === AxisOrientation.TOP,\n                show\n            });\n        }\n        return new cells.BlankCell().config({ show: false });\n    }).sort((a, b) => extractAxisIndex(a[0]) - extractAxisIndex(b[0]));\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @retur\n */\nconst axisPlaceholderGn = (context, selObj, cells) => {\n    const {\n        matrices\n    } = context;\n    const {\n        axesMatrix\n    } = matrices;\n\n    return (type, axisFrom) => {\n        const axes = axesMatrix[`${type}`];\n\n        if (axes && axes.length) {\n            if (type === X || type === Y) {\n                const fieldNames = type === Y ? ROWS : COLUMNS;\n\n                [PRIMARY, SECONDARY].forEach((fieldType, index) => {\n                    const selObjProp = `${fieldNames}${fieldType}`;\n                    let axisIndex = index;\n                    let axesForDraw = axes;\n                    if (axisFrom === RIGHT || axisFrom === BOTTOM) {\n                        axisIndex = 1 - axisIndex;\n                    }\n                    if (!getObjProp(axes, 0, axisIndex)) {\n                        axesForDraw = [];\n                    }\n                    selObj[selObjProp] = createAxisCells(selObj[selObjProp], axesForDraw, axisIndex, cells);\n                });\n            } else {\n                selObj.rowsPrimary = createAxisCells(selObj.rowPrime, axes.map(() => []), 0, cells);\n                selObj.rowsSecondary = createAxisCells(selObj.rowSec, axes.map(() => []), 0, cells);\n                selObj.columnsPrimary = createAxisCells(selObj.colPrime, axes[0], 0, cells);\n                selObj.columnsSecondary = createAxisCells(selObj.colSec, axes[0], 0, cells);\n            }\n        }\n        return selObj;\n    };\n};\n\n/**\n * Creates header cells based on the set of headers\n *\n * @param {Object} selection Contains a selection of the header units\n * @param {string} headers Contains a list of the headers\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} return either set of header cells depending on the config\n */\nconst createTextCells = (selection, headers, cells, labelManager) => createSelection(selection,\n        (label) => {\n            const textCell = new cells.TextCell({}, { labelManager });\n            textCell.source(label);\n            return textCell;\n        }, headers, (key, i) => key + i);\n\nconst extractFacetIndex = id => id.split('-').pop();\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @param {*} labelManager\n *\n */\nconst headerPlaceholderGn = (context, selectionObj, cells, labelManager) => {\n    const {\n        axis,\n        keys,\n        type,\n        facet\n    } = context;\n    const counter = axis.length / keys.length;\n    const selectionKeys = keys.length ? axis.map((d, i) => keys[Math.floor(i / counter)]) : [];\n\n    const selObjUpdater = createSelection(selectionObj[`${type}Headers`], keySet => keySet, selectionKeys,\n    (keySet, i) => `${keySet.join(',')}-${i}`)\n        .sort((a, b) => extractFacetIndex(a[0]) - extractFacetIndex(b[0]));\n\n    return selObjUpdater.map((keySet, data) => {\n        let textCells = createTextCells(null, data, cells, labelManager);\n        textCells = textCells.map((cell, k) => cell.source(k).config(facet));\n        return textCells;\n    });\n};\n\n/**\n * Creates a set of placeholders as a part of selection object\n *\n * @param {Array} normalizedOptions contains normalized rows and columns\n * @param {Array} matrices contains axis and value matrices\n * @param {aArrayny} projections contains set of row and column projections\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} Creates a set of placeholders as a part of selections\n */\nconst generatePlaceholders = (context, cells, labelManager) => {\n    let selectionObj;\n    const {\n        matrices,\n        fields,\n        facetsAndProjections,\n        selection,\n        facet,\n        encoders,\n        resolver\n    } = context;\n    const {\n        rows,\n        columns\n    } = fields;\n    const {\n        valuesMatrix\n    } = matrices;\n    const {\n        rowProjections,\n        colProjections\n    } = facetsAndProjections;\n    const {\n        rowKeys,\n        columnKeys\n    } = valuesMatrix;\n    const takeAxisFrom = encoders.simpleEncoder._axisFrom;\n    const takeHeaderFrom = encoders.simpleEncoder._headerFrom;\n\n    selectionObj = selection || {};\n\n    ['pie', X, Y].forEach((axis) => {\n        const axisFrom = axis === X ? takeAxisFrom.column : takeAxisFrom.row;\n        selectionObj = axisPlaceholderGn(context, selectionObj, cells)(axis, axisFrom);\n    });\n\n    const {\n        rowsPrimary,\n        rowsSecondary,\n        columnsPrimary,\n        columnsSecondary\n    } = selectionObj;\n\n    const rowAxis = rowsPrimary && rowsPrimary.getObjects().length ? rowsPrimary.getObjects() :\n        (rowsSecondary && rowsSecondary.getObjects().length ? rowsSecondary.getObjects() : []);\n    const colAxis = columnsPrimary && columnsPrimary.getObjects().length ? columnsPrimary.getObjects() :\n        (columnsSecondary && columnsSecondary.getObjects().length ? columnsSecondary.getObjects() : []);\n\n    const headerConfig = [\n        { type: LEFT, section: rows[0], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: RIGHT, section: rows[1], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: TOP, section: columns[0], axis: colAxis, headerFrom: takeHeaderFrom.column },\n        { type: BOTTOM, section: columns[1], axis: colAxis, headerFrom: takeHeaderFrom.column }\n    ];\n\n    headerConfig.forEach((config, index) => {\n        let keys;\n        let length;\n        const {\n            type,\n            section,\n            axis,\n            headerFrom\n        } = config;\n\n        if (index < 2) {\n            keys = rowKeys;\n            length = rowProjections.length > 0 ? rowProjections.length : 1;\n        } else {\n            keys = columnKeys;\n            length = colProjections.length > 0 ? colProjections.length : 1;\n        }\n        keys = keys.map(arr => arr.map(val => resolver.valueParser()(val)));\n        if (section.length && headerFrom === type && axis && keys.length) {\n            const hContext = { axis, length, type };\n            let headers = [];\n            if (index < 2) {\n                hContext.keys = keys;\n                hContext.facet = facet.rows;\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            } else {\n                hContext.facet = facet.columns;\n                hContext.keys = keys[0].map((key, i) => keys.map(e => e[i]));\n\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            }\n            selectionObj[`${type}Headers`] = headers;\n        } else {\n            selectionObj[`${type}Headers`] = null;\n        }\n    });\n    return selectionObj;\n};\n\n/**\n * Generates matrices\n *\n * @param {Object} config Configuration to generate matrices\n * @param {Array} matrices Matrices containing the set of visual units and axes units\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} contains a collection of matrices\n */\nexport const generateMatrices = (context, matrices, cells, labelManager) => {\n    const {\n        unitHeight,\n        unitWidth,\n        facetsAndProjections,\n        normalizedRows,\n        normalizedColumns,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n     } = context;\n    const placeholderContext = {\n        fields: {\n            rows: normalizedRows,\n            columns: normalizedColumns\n        },\n        matrices,\n        facetsAndProjections,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n    };\n    // Generate placeholders for all matrices\n    const selectionObj = generatePlaceholders(placeholderContext, cells, labelManager);\n    const {\n        columnsPrimary,\n        columnsSecondary,\n        rowsPrimary,\n        rowsSecondary,\n        leftHeaders,\n        topHeaders,\n        bottomHeaders,\n        rightHeaders\n    } = selectionObj;\n    const [rowPrime, rowSec, colPrime, colSec] = [rowsPrimary, rowsSecondary, columnsPrimary, columnsSecondary]\n        .map(d => (d ? d.getObjects() : []));\n    const [leftFacets, rightFacets] = [leftHeaders, rightHeaders]\n        .map(e => (e ? e.getObjects()\n                        .map(f => f.getObjects()) : []));\n    let rowPriority = rowSec.length ? 1 : -1;\n    rowPrime.length && rowPriority++;\n    let colPriority = colSec.length ? 1 : -1;\n    colPrime.length && colPriority++;\n\n    // Compute left matrix using left headers and the axes on the rows\n    let leftMatrix = leftFacets.length ? leftFacets.map((d, i) => {\n        rowPrime[i] = rowPrime[i] ? [rowPrime[i]] : [];\n        return [...d, ...rowPrime[i]];\n    }) : (rowPrime ? rowPrime.map(d => [d]) : []);\n\n    // Compute right matrix using right headers and the axes on the rows\n    const rightMatrix = rowSec.length ? rowSec.map((d, i) => [d, ...(rightFacets[i] || [])]) : (rightFacets.length ?\n        rightFacets.map(d => [...d]) : []);\n\n    const topMatrix = [];\n    if (topHeaders) {\n        const headers = topHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                topMatrix[i] = topMatrix[i] || [];\n                topMatrix[i].push(x);\n            });\n        });\n    }\n    // Compute top matrix using the top headers and axes on the columns\n    if (colPrime.length) {\n        topMatrix.push(colPrime);\n    }\n\n    // Bottom and right matrices are prepared using the user config.\n    let bottomMatrix = [];\n    if (colSec.length) {\n        bottomMatrix.push(colSec);\n    }\n    const currentBottomLength = bottomMatrix.length;\n    if (bottomHeaders) {\n        const headers = bottomHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                bottomMatrix[i + currentBottomLength] = bottomMatrix[i + currentBottomLength] || [];\n                bottomMatrix[i + currentBottomLength].push(x);\n            });\n        });\n    }\n\n    if (!leftMatrix.length && !rightMatrix.length) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        leftMatrix = [[cell]];\n    }\n\n    if (!topMatrix.length && (!bottomMatrix.length || !bottomMatrix[0].length)) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        bottomMatrix = [[cell]];\n    }\n\n    return {\n        rows: [leftMatrix, rightMatrix],\n        columns: [topMatrix, bottomMatrix],\n        selectionObj,\n        colPriority,\n        rowPriority\n    };\n};\n\nconst getAxisFields = (projections, fieldHolder = []) =>\n                            projections.reduce((acc, item) =>\n                                [...acc, ...item.reduce((ac, field) =>\n                                   (field instanceof SimpleVariable ? [...ac, field.oneVar()] : ac), [])], fieldHolder);\n\nconst sortDmTemporalFields = (resolver, datamodel) => {\n    let axisFields = [];\n    const projections = resolver.projections();\n    axisFields = getAxisFields(projections.rowProjections, getAxisFields(projections.colProjections));\n\n    const fieldConfig = datamodel.getFieldsConfig();\n    const temporalFields = axisFields.reduce((acc, field) =>\n        ((fieldConfig[field].def.subtype === TEMPORAL) ? [...acc, [field]] : acc), []);\n    return temporalFields.length ? datamodel.sort(temporalFields, { saveChild: true }) : datamodel;\n};\n\nconst transformDataModel = (dataModel, config, resolver) => {\n    let groupedModel;\n\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const resolvedData = resolver.data();\n    const { groupBy, suppliedLayers, facetsAndProjections } = config;\n\n    if (resolvedData instanceof DataModel) {\n        resolvedData.dispose();\n    }\n    groupedModel = dataModel.project(dataModel.getSchema().map(d => d.name));\n    resolver.data(groupedModel);\n    if (!groupBy.disabled) {\n        const fields = getFieldsFromSuppliedLayers(suppliedLayers, groupedModel.getFieldsConfig());\n        const allFields = extractFields(facetsAndProjections, fields);\n        const dimensions = allFields.filter(field =>\n            getObjProp(fieldsConfig, field, 'def', 'type') === FieldType.DIMENSION);\n        const aggregationFns = groupBy.measures;\n        const measureNames = Object.keys(groupedModel.getFieldspace().getMeasure());\n        const nearestAggFns = retrieveNearestGroupByReducers(groupedModel, ...measureNames);\n        const resolvedAggFns = mergeRecursive(nearestAggFns, aggregationFns);\n\n        groupedModel = groupedModel.groupBy(dimensions.length ? dimensions : [''], resolvedAggFns)\n                                            .project(allFields);\n    }\n    // sort temporal fields if any in the given rows and columns\n    groupedModel = sortDmTemporalFields(resolver, groupedModel);\n    return groupedModel;\n};\n\n/**\n * Computes matrices for a group\n *\n * @param {Object} datamodel on which the matrices are to be computed\n * @param {Object} config configuration of the matrices\n * @param {Object} layerRegistry contains the registered layers\n * @return {Object} conputed matrices\n * @memberof MatrixResolver\n */\nexport const computeMatrices = (context, config) => {\n    const {\n        resolver,\n        datamodel,\n        componentRegistry,\n        encoders\n    } = context;\n    const {\n            globalConfig,\n            selection,\n            transform\n        } = config;\n    const groupBy = globalConfig.autoGroupBy;\n    const { smartlabel: labelManager } = resolver.dependencies();\n    const fieldMap = datamodel.getFieldsConfig();\n    const layerConfig = resolver.layerConfig();\n    const registry = resolver.registry();\n    const { fields: normalizedRows } = resolver.horizontalAxis();\n    const { fields: normalizedColumns } = resolver.verticalAxis();\n    const otherEncodings = resolver.optionalProjections(config, layerConfig);\n    const facetsAndProjections = resolver.getAllFields();\n    const matrixGnContext = {\n        // Configuration to be passed to generate the  different matrices.\n        // A common config is used for both value matrices and other matrices\n        normalizedColumns,\n        normalizedRows,\n        facetsAndProjections,\n        layers: layerConfig,\n        fieldMap,\n        otherEncodings,\n        encoders,\n        facet: globalConfig.facet || {},\n        axisFrom: globalConfig.axisFrom || {},\n        selection,\n        resolver\n    };\n    const cells = {\n        GeomCell: resolver.getCellDef(registry.GeomCell),\n        AxisCell: resolver.getCellDef(registry.AxisCell),\n        BlankCell: resolver.getCellDef(registry.BlankCell),\n        TextCell: resolver.getCellDef(registry.TextCell)\n    };\n    const isRowSizeEqual = isDistributionEqual(normalizedRows);\n    const isColumnSizeEqual = isDistributionEqual(normalizedColumns);\n\n    resolver.colCells({});\n    resolver.rowCells({});\n    resolver.datamodelTransform(transform || {});\n\n    // Cell creation begins here\n    resolver.resetSimpleAxes();\n\n    const {\n        entryCellMap\n    } = resolver.cacheMaps();\n    const newCacheMap = {\n        exitCellMap: entryCellMap,\n        entryCellMap: new Map()\n    };\n\n    resolver.cacheMaps(newCacheMap);\n\n    const valueCellContext = {\n        config: globalConfig,\n        suppliedLayers: encoders.simpleEncoder.serializeLayerConfig(resolver.layerConfig()),\n        resolver,\n        cell: cells.GeomCell,\n        encoder: encoders.simpleEncoder,\n        newCacheMap,\n        detailFields: config.detail,\n        retinalConfig: {\n            color: config.color,\n            size: config.size,\n            shape: config.shape\n        }\n    };\n\n    const groupedModel = transformDataModel(datamodel, {\n        facetsAndProjections,\n        suppliedLayers: valueCellContext.suppliedLayers,\n        groupBy\n    }, resolver);\n\n    // return a callback function to create the cells from the matrix\n    const cellCreator = resolver.valueCellsCreator(valueCellContext);\n    // Creates value matrices from the datamodel and configs\n    const valueMatrixInfo = getMatrixModel(groupedModel, facetsAndProjections, cellCreator, globalConfig);\n\n    resolver.cacheMaps().exitCellMap.forEach((placeholder) => {\n        placeholder.remove();\n    });\n    resolver.cacheMaps().exitCellMap.clear();\n    resolver.valueMatrix(valueMatrixInfo.matrix);\n\n    const { xAxes, yAxes } = mutateAxesFromMap(resolver.cacheMaps(), resolver.axes());\n\n    resolver.axes({\n        x: xAxes,\n        y: yAxes\n    });\n    const store = resolver.store();\n\n    [xAxes, yAxes].forEach((axesArr, type) => {\n        const stateProps = {};\n        axesArr = axesArr || [];\n        axesArr.forEach((axes, idx) => {\n            axes.forEach((axis, axisIndex) => {\n                stateProps[`${idx}${axisIndex}`] = null;\n            });\n        });\n        store.append(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type ? 'y' : 'x'}`, stateProps);\n    });\n    resolver.createUnits(componentRegistry, config);\n\n    const matrices = {\n        valuesMatrix: valueMatrixInfo,\n        axesMatrix: resolver.axes()\n    };\n    // Create all matrices\n    const {\n        rows,\n        columns,\n        selectionObj,\n        rowPriority,\n        colPriority\n    } = generateMatrices(matrixGnContext, matrices, cells, labelManager);\n\n    resolver.rowMatrix(rows);\n    resolver.columnMatrix(columns);\n\n    return {\n        rows: resolver.rowMatrix(),\n        columns: resolver.columnMatrix(),\n        values: resolver.valueMatrix(),\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority: {\n            row: rowPriority,\n            col: colPriority\n        },\n        selection: selectionObj,\n        dataModels: {\n            groupedModel,\n            parentModel: datamodel\n        }\n    };\n};\n","export const RESOLVER_PROPS = {\n    dependencies: {},\n    units: {},\n    datamodelTransform: {},\n    layerConfig: {},\n    matrixLayers: {},\n    colCells: {},\n    rowCells: {},\n    rowMatrix: {},\n    columnMatrix: {},\n    valueMatrix: {},\n    encoder: {},\n    valueParser: {},\n    data: {}\n};\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { generateGetterSetters, STATE_NAMESPACES } from 'muze-utils';\nimport {\n     initializeCacheMaps,\n     headerCreator,\n     extractUnitConfig,\n     setFacetsAndProjections\n} from './group-utils';\nimport {\n     ROW, COL, LEFT, RIGHT, COLOR, SIZE, SHAPE, DETAIL, CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS, INITIALIZED,\n     AXIS, UNIT, BEFORE_UPDATE, UPDATED, VALUE_MATRIX, FACET_HEADERS\n} from '../enums/constants';\nimport { createValueCells, computeMatrices } from './cell-creator';\nimport { RESOLVER_PROPS } from './resolver-props';\n\n/**\n * Resolves the matrices from configuration provided\n *\n * @export\n * @class MatrixResolver\n */\nexport default class MatrixResolver {\n\n    /**\n     * Creates an instance of MatrixResolver.\n     * @param {Object} dependencies needed to run the resolver\n     * @memberof MatrixResolver\n     */\n    constructor (dependencies) {\n        this._registry = {};\n        this._layerConfig = [];\n        this._matrixLayers = [];\n        this._dependencies = dependencies;\n        this._rowMatrix = [];\n        this._columnMatrix = [];\n        this._valueMatrix = [];\n        this._facets = { rowFacets: [], colFacets: [] };\n        this._projections = { rowProjections: [], colProjections: [] };\n        this._datamodelTransform = {};\n        this._units = [];\n        this._cacheMaps = {};\n        this._axes = {\n            x: {},\n            y: {},\n            color: [],\n            size: [],\n            shape: [],\n            radius: [],\n            angle: [],\n            angle0: []\n        };\n        generateGetterSetters(this, RESOLVER_PROPS);\n        this.cacheMaps(initializeCacheMaps());\n    }\n\n    /**\n     * Set:  Registers placeholders, Get: return {Object} those placeholders\n     *\n     * @param {Object} placeholders cells that will construct the group\n     * @return {Object} Either current instance or the set of placeholders\n     * @memberof MatrixResolver\n     */\n    registry (...placeholders) {\n        if (placeholders.length) {\n            Object.entries(placeholders[0]).forEach((val) => {\n                this._registry[val[0]] = val[1];\n            });\n            return this;\n        }\n        return this._registry;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    cacheMaps (...maps) {\n        if (maps.length) {\n            [CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS].forEach((e) => {\n                this._cacheMaps[`${e}Map`] = maps[0][`${e}Map`] || this._cacheMaps[`${e}Map`];\n            });\n            return this;\n        }\n        return this._cacheMaps;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    axes (...axes) {\n        if (axes.length) {\n            this._axes = Object.assign({}, this._axes, axes[0]);\n            return this;\n        }\n        return this._axes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} facets\n     *\n     * @memberof MatrixResolver\n     */\n    facets (...facets) {\n        if (facets.length) {\n            Object.entries(facets[0]).forEach((e) => {\n                this._facets[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._facets;\n    }\n\n    /**\n     *\n     *\n     * @param {*} projections\n     *\n     * @memberof MatrixResolver\n     */\n    projections (...projections) {\n        if (projections.length) {\n            Object.entries(projections[0]).forEach((e) => {\n                this._projections[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._projections;\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @param {*} layerConfig\n     *\n     * @memberof MatrixResolver\n     */\n    optionalProjections (config, layerConfig) {\n        const otherEncodings = {};\n        const optionalProjections = [];\n        const otherEncodingTypes = [SIZE, COLOR, SHAPE];\n\n        otherEncodingTypes.forEach((type) => {\n            if (config[type] && config[type].field) {\n                const enc = config[type];\n                otherEncodings[type] = enc.field;\n                optionalProjections.push(enc.field);\n            }\n        });\n\n        if (config[DETAIL]) {\n            optionalProjections.push(...config.detail);\n        }\n\n        if (layerConfig.length) {\n            layerConfig.forEach((layer) => {\n                if (layer.encoding) {\n                    Object.values(layer.encoding).forEach((enc) => {\n                        if (enc && optionalProjections.indexOf(enc.field) === -1) {\n                            optionalProjections.push(enc.field ? enc.field : enc);\n                        }\n                    });\n                }\n            });\n        }\n        this.projections({ optionalProjections });\n        return otherEncodings;\n    }\n\n    /**\n     * return the normalized set of rows and facets and projections\n     *\n     * @param {Object} rows parameters needed to set horizontal axis consisiting of rows\n     * @return {Object} facets, projections and normalized rows\n     * @memberof MatrixResolver\n     */\n    horizontalAxis (rows, encoder) {\n        if (rows) {\n            this._horizontalAxis = setFacetsAndProjections(this, { type: ROW, fields: rows }, encoder);\n            return this;\n        }\n        return this._horizontalAxis;\n    }\n\n    /**\n     * return the normalized set of columns and facets and projections\n     *\n     * @param {Object} columns parameters needed to set vertical axis consisiting of columns\n     * @return {Object} facets, projections and normalized columns\n     * @memberof MatrixResolver\n     */\n    verticalAxis (columns, encoder) {\n        if (columns) {\n            this._verticalAxis = setFacetsAndProjections(this, { type: COL, fields: columns }, encoder);\n            return this;\n        }\n        return this._verticalAxis;\n    }\n\n    /**\n     * Gets the class definition of a particular cell type(if the particular type has been extended, that particular\n     * definition is returned)\n     *\n     * @param {Object} cell cell whose class definition is to be retrieved\n     * @return {Object} cell definition\n     * @memberof MatrixResolver\n     */\n    getCellDef (cell) {\n        const registry = this.registry();\n\n        Object.values(registry).forEach((e) => {\n            if (e.prototype instanceof cell) {\n                cell = e;\n            }\n        });\n        return cell;\n    }\n\n    /**\n     * return a visual cell creator along with its axis information to be injected to the datamodel creation\n     * function\n     *\n     * @param {Object} GeomCell Type of cell to be created\n     * @return {Object} Created cell\n     * @memberof MatrixResolver\n     */\n    valueCellsCreator (context) {\n        // reset matrix layers\n        this.matrixLayers([]);\n\n        return (datamodel, fieldInfo, facets) => createValueCells(context, datamodel, fieldInfo, facets);\n    }\n\n    /**\n     * Callback to be applied on each cell of a matrix of a particular type\n     *\n     * @param {string} matrixType type of matrix on which callback is to be applied\n     * @param {Function} callback function to be applied to each cell\n     * @memberof MatrixResolver\n     */\n    forEach (matrixType, callback) {\n        this[matrixType]().forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                callback(rIndex, cIndex, col);\n            });\n        });\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getAllFields () {\n        const retObj = this.projections();\n\n        Object.entries(this.facets()).forEach((e) => {\n            retObj[e[0]] = e[1];\n        });\n        return retObj;\n    }\n\n    /**\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    resetSimpleAxes () {\n        return this.axes({\n            x: new Set(),\n            y: new Set()\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} componentRegistry\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createUnits (componentRegistry, config) {\n        const {\n            globalConfig,\n            alias,\n            coord\n        } = config;\n        const {\n            layerRegistry,\n            sideEffectRegistry\n        } = componentRegistry;\n        const {\n            smartlabel: smartLabel,\n            lifeCycleManager\n        } = this.dependencies();\n        // Provide the source for the matrix\n        const units = [[]];\n        // Setting unit configuration\n        const unitConfig = extractUnitConfig(globalConfig || {});\n        const globalState = VisualUnit.getState()[0];\n        const globalStates = {};\n        const store = this.store();\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            let unit = el.source();\n            if (!unit) {\n                const namespace = `${i}${j}`;\n\n                unit = VisualUnit.create({\n                    layerRegistry,\n                    sideEffectRegistry\n                }, {\n                    smartLabel,\n                    lifeCycleManager\n                });\n                globalStates[namespace] = null;\n                unit.metaInf({\n                    rowIndex: i,\n                    colIndex: j,\n                    namespace\n                });\n                unit.store(store);\n                unit.coord(coord);\n                el.source(unit);\n            }\n            !units[i] && (units[i] = []);\n            units[i][j] = unit;\n            unit.parentAlias(alias)\n                .valueParser(this.valueParser())\n                .coord(coord);\n            el.config(unitConfig);\n        });\n\n        for (const key in globalState) {\n            store.append(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${key}`, globalStates);\n        }\n\n        lifeCycleManager.notify({ client: units, action: INITIALIZED, formalName: UNIT });\n        return this.units(units);\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    setDomains (config, datamodel, encoders) {\n        const {\n            color,\n            shape,\n            size,\n            globalConfig\n        } = config;\n        const groupBy = globalConfig.autoGroupBy;\n        const {\n            rowFacets,\n            colFacets\n        } = this.getAllFields();\n        const encoding = {\n            color,\n            shape,\n            size\n        };\n        const facetFields = [...rowFacets.map(e => e.toString()), ...colFacets.map(e => e.toString())];\n        const retContext = {\n            domains: encoders.simpleEncoder.getRetinalFieldsDomain(datamodel, encoding, facetFields, groupBy),\n            axes: this.axes(),\n            encoding\n        };\n        encoders.retinalEncoder.setCommonDomain(retContext);\n        return this;\n    }\n\n    resetFacetsAndProjections () {\n        this._facets = {};\n        this._projections = {};\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getRetinalAxes () {\n        const {\n            color,\n            shape,\n            size\n        } = this.axes();\n\n        return {\n            color: [...color],\n            shape: [...shape],\n            size: [...size]\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} type\n     *\n     * @memberof MatrixResolver\n     */\n    getSimpleAxes (type) {\n        return this.axes()[`${type}`];\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createRetinalAxes (fieldsConfig, config, encoders) {\n        const layerConfig = this.layerConfig();\n        this.optionalProjections(config, layerConfig);\n        const retinalAxes = encoders.retinalEncoder.createAxis({\n            fieldsConfig,\n            config,\n            axes: this.axes()\n        });\n        const {\n            lifeCycleManager\n        } = this.dependencies();\n\n        [COLOR, SHAPE, SIZE].forEach((e) => {\n            this.axes()[e] = retinalAxes[e];\n        });\n\n        lifeCycleManager.notify({ client: this.axes(), action: INITIALIZED, formalName: AXIS });\n        lifeCycleManager.notify({ client: this.units(), action: BEFORE_UPDATE, formalName: UNIT });\n\n        const units = [];\n        const matrixLayers = this.matrixLayers();\n\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            el.axes(Object.assign(el.axes(), retinalAxes));\n            el.source() && el.source().retinalFields(config);\n            el.layerDef(matrixLayers[i][j]);\n            el.updateModel();\n\n            units.push(el.source());\n        });\n\n        lifeCycleManager.notify({ client: units, action: UPDATED, formalName: UNIT });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} placeholders\n     * @param {*} fieldNames\n     *\n     * @memberof MatrixResolver\n     */\n    createHeaders (placeholders, fieldNames, config) {\n        let bottomLeft = [];\n        let bottomRight = [];\n        const {\n            rows,\n            columns\n        } = placeholders;\n        const {\n            smartlabel: labelManager,\n            lifeCycleManager\n        } = this.dependencies();\n        const {\n            showHeaders,\n            classPrefix\n        } = config;\n        const TextCell = this.getCellDef(this.registry().TextCell);\n        const BlankCell = this.getCellDef(this.registry().BlankCell);\n        const [leftRows, rightRows] = rows;\n        const [topCols, bottomCols] = columns;\n        const rowHeaders = fieldNames.rows;\n        const blankCellCreator = cell => new BlankCell().config({ show: cell.config().show });\n\n        // Headers and footers are created based on the rows. Thereafter, using the column information\n        // they are tabularized into the current structure\n        const headers = {\n            left: headerCreator(leftRows, rowHeaders[0], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager }),\n            right: headerCreator(rightRows, rowHeaders[1], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager })\n        };\n        const footers = {\n            left: leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : [],\n            right: rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []\n        };\n        const [topLeft, topRight] = [LEFT, RIGHT].map(type => topCols.map((col, i) => {\n            if (i === topCols.length - 1) {\n                return headers[type];\n            }\n            return footers[type];\n        }));\n\n        // Creating only bottom matrices if there is no information on the top\n        if (topCols.length === 0) {\n            [bottomLeft, bottomRight] = [LEFT, RIGHT].map(type => bottomCols.map((col, i) => {\n                if (i === 0) {\n                    return headers[type];\n                }\n                return footers[type];\n            }));\n        } else {\n            bottomLeft = bottomCols.map(() => (leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : []));\n            bottomRight = bottomCols.map(() => (rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []));\n        }\n\n        lifeCycleManager.notify({\n            client: [topLeft, topRight, bottomLeft, bottomRight],\n            action: INITIALIZED,\n            formalName: FACET_HEADERS\n        });\n\n        return { topLeft, topRight, bottomLeft, bottomRight };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @param {*} componentRegistry\n     * @param {*} encoders\n     *\n     * @memberof MatrixResolver\n     */\n    getMatrices (datamodel, config, componentRegistry, encoders) {\n        const context = {\n            datamodel,\n            componentRegistry,\n            encoders,\n            resolver: this\n        };\n\n        return computeMatrices(context, config);\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            return this;\n        }\n        return this._store;\n    }\n}\n","/**\n * This is a wrapper class over the matrix of cells which gets created in visual group. Visual Group creates left,\n * right, bottom and top and center matrices and wraps them using this class.\n *\n * @public\n * @class ValueMatrix\n */\nclass ValueMatrix {\n\n    /**\n     * Creates an instance of ValueMatrix.\n     *\n     * @param {Array} matrixArr Matrix array.\n     */\n    constructor (matrixArr) {\n        const instancesById = {};\n\n        this.matrix(matrixArr || []);\n        this.filter(() => true);\n\n        this.each((el, rIdx, cIdx) => {\n            const cellValue = el.valueOf();\n            if (cellValue && cellValue.id) {\n                const id = cellValue.id();\n                instancesById[id] = {\n                    instance: cellValue,\n                    rowIndex: rIdx,\n                    colIndex: cIdx\n                };\n            }\n        });\n\n        this.instancesById(instancesById);\n    }\n\n    instancesById (...id) {\n        if (id.length) {\n            this._instancesById = id[0];\n            return this;\n        }\n        return this._instancesById;\n    }\n\n    /**\n     * Returns the array of matrices contained in this instance.\n     *\n     * @public\n     * @return {Array} Array of matrices.\n     */\n    matrix (...matrix) {\n        if (matrix.length) {\n            this._matrix = matrix[0];\n            return this;\n        }\n        return this._matrix;\n    }\n\n    /**\n     * Sets a filter criteria. This filter criteria gets applied when each function is called.\n     *\n     * @public\n     * @param {Function} fn Filter function.\n     *\n     * @return {ValueMatrix} Instance of value matrix.\n     */\n    filter (...fn) {\n        if (fn.length) {\n            this._filterFn = fn[0];\n            return this;\n        }\n        return this._filterFn;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    width () {\n        let rowWidth = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowWidth = 0;\n            row.forEach((cell) => {\n                currentRowWidth += cell.getLogicalSpace().width;\n            });\n            rowWidth = Math.max(rowWidth, currentRowWidth);\n        });\n        return rowWidth;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    height () {\n        let rowHeight = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowHeight = 0;\n            row.forEach((cell) => {\n                currentRowHeight = Math.max(currentRowHeight, cell.getLogicalSpace().height);\n            });\n            rowHeight += currentRowHeight;\n        });\n        return rowHeight;\n    }\n\n    /**\n     * Iterates through the two dimensional matrix array and calls the given callback function with the cell instance,\n     * row index, column index and the matrix array.\n     *\n     * @param {Function} fn Callback function which will get called for every cell.\n     * @return {ValueMatrix} Instance of the value matrix.\n     */\n    each (fn) {\n        const matrix = this.matrix();\n        const filterFn = this.filter();\n\n        matrix.forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                if (filterFn(col)) {\n                    fn(col, rIndex, cIndex, matrix);\n                }\n            });\n        });\n        return this;\n    }\n\n    findPlaceHolderById (id) {\n        return this.instancesById()[id];\n    }\n}\n\nexport default ValueMatrix;\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { BaseLayer } from '@chartshq/visual-layer';\nimport { getEncoder, getBorders } from '../group-helper';\nimport { RetinalEncoder } from '../encoder';\nimport { registerDomainChangeListener, unsubscribeChangeListeners } from './change-listener';\nimport ValueMatrix from './value-matrix';\n\nexport const createUnitState = (context) => {\n    const [globalState] = VisualUnit.getState();\n    const store = context.store();\n    store.append(STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const initializeGlobalState = (context) => {\n    const globalState = context.constructor.getState()[0];\n    const store = context.store();\n    store.append(STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const createLayerState = (context) => {\n    const [globalState] = BaseLayer.getState();\n    context.store().append(STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE, globalState);\n};\n\nconst sanitizeRetinalConfig = (retinalConf) => {\n    const conf = {};\n    for (const key in retinalConf) {\n        const confValue = retinalConf[key];\n        if (typeof confValue === 'string' || !confValue) {\n            conf[key] = {\n                field: retinalConf[key]\n            };\n        } else {\n            conf[key] = confValue;\n        }\n    }\n    return conf;\n};\n\nexport const setMatrixInstances = (context, placeholder) => {\n    let {\n        values,\n        rows,\n        columns\n    } = placeholder;\n    values = values || [];\n    rows = rows || [];\n    columns = columns || [];\n    context._composition.matrices = {\n        value: new ValueMatrix(values),\n        left: new ValueMatrix(rows[0]),\n        right: new ValueMatrix(rows[1]),\n        top: new ValueMatrix(columns[0]),\n        bottom: new ValueMatrix(columns[1])\n    };\n\n    context._dependencies.throwback.commit(CommonProps.MATRIX_CREATED, true);\n    return context;\n};\n\nexport const createMatrices = (context) => {\n    const rows = context.rows();\n    const columns = context.columns();\n    const color = context.color();\n    const datamodel = context.data();\n    const size = context.size();\n    const detail = context.detail();\n    const layers = context.layers();\n    const transform = context.transform();\n    const config = context.config();\n    const shape = context.shape();\n\n    // Get the resolver for the matrices\n    const resolver = context.resolver();\n    resolver.store(context.store());\n    resolver.valueParser(context.valueParser());\n    // Prepare configuration for matrix preparation\n    let matrixConfig = {\n        selection: context.selection(),\n        alias: context.alias(),\n        globalConfig: config || {},\n        rows,\n        columns,\n        detail,\n        layers,\n        transform\n    };\n\n    unsubscribeChangeListeners(context);\n\n    const retinalConfig = sanitizeRetinalConfig({\n        color,\n        shape,\n        size\n    });\n\n    matrixConfig = Object.assign(matrixConfig, retinalConfig);\n    // Create the encoders for the group\n    const encoders = {};\n    encoders.retinalEncoder = new RetinalEncoder();\n    encoders.simpleEncoder = getEncoder(layers);\n    matrixConfig.coord = encoders.simpleEncoder.constructor.type();\n    resolver.encoder(encoders.simpleEncoder);\n\n    // Set the group type\n    context.groupType(encoders.simpleEncoder.constructor.type());\n\n    // Get sanitized fields as instances of the Vars Class\n    const fields = encoders.simpleEncoder.fieldSanitizer(datamodel, matrixConfig);\n    encoders.simpleEncoder.setAxisAndHeaders(config ? config.axisFrom : {}, fields);\n    // Setting layers for the code\n    layers && resolver.layerConfig(layers);\n    // Set the row and column axes\n    resolver.horizontalAxis(fields.rows, encoders).verticalAxis(fields.columns, encoders);\n    // Getting the placeholders\n    const placeholderInfo = resolver.getMatrices(datamodel, matrixConfig, context.registry(), encoders);\n    context._groupedDataModel = placeholderInfo.dataModels.groupedModel;\n    // Set the selection object\n    context.selection(placeholderInfo.selection);\n\n    // Create retinal axes\n    resolver.createRetinalAxes(placeholderInfo.dataModels.parentModel.getFieldsConfig(), retinalConfig,\n            encoders);\n\n    // Domains are evaluated for each of the axes for commonality\n    resolver.setDomains(matrixConfig, placeholderInfo.dataModels, encoders);\n\n    // Create matrix instances\n    setMatrixInstances(context, placeholderInfo);\n\n    // Prepare corner matrices\n    context.cornerMatrices(resolver.createHeaders(placeholderInfo, fields, config));\n\n    // Set placeholder information\n    context.placeholderInfo(placeholderInfo);\n\n    context._composition.axes = resolver.axes();\n    context.metaData({\n        border: getBorders(placeholderInfo, encoders.simpleEncoder)\n    });\n\n    resolver.encoder().unionUnitDomains(context);\n\n    registerDomainChangeListener(context);\n    return context;\n};\n","import { STATE_NAMESPACES } from 'muze-utils';\n\nexport const setupChangeListeners = (context) => {\n    const store = context.store();\n\n    store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x`], () => {\n        const groupAxes = context.resolver().axes();\n        groupAxes.x.forEach(axes => axes.forEach((axis) => {\n            axis.render();\n        }));\n    });\n\n    store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y`], () => {\n        const groupAxes = context.resolver().axes();\n        groupAxes.y.forEach(axes => axes.forEach((axis) => {\n            axis.render();\n        }));\n    });\n};\n\nexport const registerDomainChangeListener = (context) => {\n    const store = context.store();\n    store.registerChangeListener([`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`], () => {\n        context.resolver().encoder().unionUnitDomains(context);\n    }, false, {\n        namespace: 'group',\n        key: 'unionDomain'\n    });\n};\n\nexport const unsubscribeChangeListeners = (context) => {\n    context.store().unsubscribe({\n        namespace: 'group',\n        key: 'unionDomain'\n    });\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\nexport const PROPS = {\n    alias: {},\n    data: {},\n    cornerMatrices: {\n        defaultValue: {\n            topLeft: [],\n            topRight: [],\n            bottomLeft: [],\n            bottomRight: []\n        }\n    },\n    groupType: {},\n\n    metaData: {\n        defaultValue: {\n            border: {}\n        }\n    },\n    placeholderInfo: {\n        defaultValue: {}\n    },\n    resolver: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    registry: {\n        sanitization: (context, value) => {\n            if (context.resolver) {\n                context.resolver().registry(value.cellRegistry);\n            }\n            return value;\n        }\n    },\n    selection: {},\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { generateGetterSetters } from 'muze-utils';\nimport localOptions from './local-options';\nimport { SimpleGroup } from '../simple-group';\nimport {\n    MatrixResolver,\n    findInGroup\n} from '../group-helper';\nimport { createUnitState, initializeGlobalState, setMatrixInstances, createMatrices, createLayerState } from './helper';\nimport { setupChangeListeners } from './change-listener';\nimport { PROPS } from './props';\nimport {\n    CONFIG,\n    MOUNT,\n    RETINAL,\n    Y\n} from '../enums/constants';\n\n/**\n * VisualGroup is instantiated by canvas for creating {@link VisualUnit} and axes instances.It creates the\n * the matrix of visual units and axes. It also creates the layout instance which manages the allocation\n * of space of matrices.\n *\n * To get instance of visual group,\n * ```\n *      const visualGroup = canvas.composition().visualGroup;\n * ```\n * @public\n *\n * @class VisualGroup\n */\nclass VisualGroup extends SimpleGroup {\n\n    /**\n     * Creates an instance of VisualGroup. Requires dependencies and other registry options for placeholders\n     * and layers that create individual units.\n     *\n     * @param {Object} registry Key value pair of compostions for the group\n     * @param {Object} dependencies Dependencies needed to run the group\n     * @memberof VisualGroup\n     */\n    constructor (registry, dependencies) {\n        super();\n\n        const {\n            componentSubRegistry\n        } = registry;\n\n        this._dependencies = dependencies;\n        // Generate getter/setter methods for all properties of the class\n        // One can get each property by calling the method and can set it\n        // by passing paramaters for the same. Thus, one can chain setter\n        // getter methods.\n        generateGetterSetters(this, PROPS);\n        generateGetterSetters(this, localOptions);\n        // Populate the store with default values\n        // initialize group compositions\n        this._composition = {};\n        // store reference to data\n        this._data = [];\n        // store reference to mountpoint\n        this._mount = null;\n        // selection object that takes care of updating of components\n        this._selection = {};\n        // Create instance of matrix resolver\n        this.resolver(new MatrixResolver(this._dependencies));\n        // matrix instance store each of the matrices\n        setMatrixInstances(this, {});\n         // Getting indiviual registered items\n        this.registry({\n            layerRegistry: componentSubRegistry.layerRegistry.get(),\n            cellRegistry: componentSubRegistry.cellRegistry.get()\n        });\n    }\n\n    static getState () {\n        return [{\n            domain: {\n                x: {},\n                y: {},\n                radius: {},\n                angle: {},\n                angle0: {}\n            }\n        }, {}];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            initializeGlobalState(this);\n            createUnitState(this);\n            createLayerState(this);\n            // Register listeners\n            setupChangeListeners(this);\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Return the instances of matrices created by the visual group.\n     *\n     * @return {Object} Instance of matrices.\n     */\n    matrixInstance (...matrices) {\n        if (matrices.length) {\n            return this;\n        }\n        return this.composition().matrices;\n    }\n\n    /**\n     * Returns the composition of visual group.\n     *\n     * @public\n     *\n     * @return {Object} Composition of visual group. It contains instance of matrices {@link ValueMatrix}\n     * and instances of axis.\n     * ```\n     *          {\n     *              matrices: {\n     *                  value: // Instance of center value matrix.\n     *                  left: // Instance of left value matrix\n     *                  right: // Instance of right value matrix\n     *                  bottom: // Instance of bottom value matrix\n     *                  top: // Instance of top value matrix.\n     *              },\n     *              axes: {\n     *                  x: // Array of x axis.\n     *                  y: // Array of y axis\n     *                  color: // Array of color axis\n     *                  shape: // Array of shape axis\n     *                  size: // Array of size axis.\n     *              }\n     *          }\n     * ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    /**\n     * Locks the model to prevent change listeners to be triggered until unlocked\n     *\n     * @return {Object} Instance of class VisualGroup\n     * @memberof VisualGroup\n     */\n    lockModel () {\n        this.store().model.lock();\n        return this;\n    }\n\n    /**\n     * Unlocks the model so that all change listeners can be triggered\n     *\n     * @return {Object} Instance of class VisualGroup\n     */\n    unlockModel () {\n        this.store().model.unlock();\n        return this;\n    }\n\n    /**\n     * Returns the channel name of the variable. Channels are rows, columns, color, shape and size.\n     *\n     * @public\n     * @param {string} variable Name of the variable.\n     *\n     * @return {string} Name of the channel.\n     */\n    where (variable) {\n        return findInGroup(variable, this.resolver().getAllFields());\n    }\n\n    /**\n     * Gets the axis instances of the visual group based on the given axis type.\n     *\n     * @public\n     * @param {string} type Type of axis. X,Y or retinal axes.\n     *\n     * @return {Array} Array of axis instances.\n     */\n    getAxes (type) {\n        if (type === RETINAL) {\n            return this.resolver().getRetinalAxes();\n        }\n        return this.resolver().getSimpleAxes(type);\n    }\n\n    /**\n     * Returns the instances of cells based on the given type. Type can be given as `row' or `col`.\n     *\n     * @public\n     * @return {Array} Two dimensional array of cells.\n     */\n    getCells (type) {\n        return this.resolver()[`${type}Cells`]();\n    }\n\n    getFieldsFromChannel (channel) {\n        const {\n            rowProjections,\n            colProjections\n        } = this.resolver().getAllFields();\n        return channel === Y ? rowProjections : colProjections;\n    }\n\n    getCellsByFacetKey (facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey] || [];\n        return cells;\n    }\n\n    getAxesByFacetKey (axisType, facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey];\n        const axes = cells[0].valueOf().axes()[axisType] || [];\n\n        return axes;\n    }\n\n    /**\n     * This method is used to return a serialized representation of the instance's properties.\n     *\n     * @return {Object} Object with config proprties.\n     * @memberof VisualGroup\n     */\n    serialize () {\n        const store = this.store();\n\n        return {\n            [CONFIG]: store.get(CONFIG),\n            [MOUNT]: store.get(MOUNT)\n        };\n    }\n\n    /**\n     * Returns the grouped datamodel prepared by visual group. If there is no group by performed, then it returns the\n     * original data model passed to visual group.\n     *\n     * @return {DataModel} Grouped data model.\n     */\n    getGroupByData () {\n        return this._groupedDataModel;\n    }\n\n    createMatrices () {\n        createMatrices(this);\n    }\n}\n\nexport default VisualGroup;\n","import { PersistentBehaviour, SELECTION } from '@chartshq/muze-firebolt';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return 'select';\n    }\n\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            // new add set\n            const existingRemoveSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_OLD_EXIT\n                || selectionSet._set[d] === SELECTION.SELECTION_NEW_EXIT);\n                // existing add set\n            if (existingRemoveSet.length) {\n                selectionSet.updateEntry();\n                selectionSet.add(existingRemoveSet);\n            } else {\n                selectionSet.updateExit();\n                selectionSet.remove(addSet);\n            }\n            const { exitSet } = selectionSet.getSets();\n            const mergedExitSet = [...new Set(exitSet[1]), ...new Set(exitSet[0])];\n            const completeSetCount = selectionSet.getCompleteSet().length;\n            if (exitSet[1].length !== completeSetCount && mergedExitSet.length === completeSetCount) {\n                selectionSet.reset();\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n        return this;\n    }\n}\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nconst CLASSPREFIX = 'muze';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        target: `.${CLASSPREFIX}-gradient-rect`,\n        behaviours: [BEHAVIOURS.BRUSH]\n    },\n    [ACTIONS.HOVER]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.CLICK]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.SELECT]\n    }\n};\n\nexport const propagationBehaviourMap = {\n    [BEHAVIOURS.SELECT]: BEHAVIOURS.FILTER,\n    [BEHAVIOURS.BRUSH]: BEHAVIOURS.HIGHLIGHT\n};\n","import * as BEHAVIOURS from '../enums/behaviours';\nimport * as sideEffects from '../enums/side-effects';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: [sideEffects.SELECTIONBOX, {\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [sideEffects.Highlighter],\n    select: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }]\n};\n\nexport const propagationSideEffects = {\n    [BEHAVIOURS.BRUSH]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.SELECT]: ['filter']\n};\n\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n\n","export const SELECTIONBOX = 'selectionBox';\nexport const Highlighter = 'highlighter';\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const CONFIG = 'config';\nexport const DATAMODEL = 'dataModel';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const MAXWIDTH = 'max-width';\nexport const HEIGHT = 'height';\nexport const MOUNTPOINT = 'mountPoint';\nexport const GRIDLINEPARENTGROUPCLASS = 'grid-lines';\nexport const TRANSFORM = 'transform';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const DEFAULTCOLOR = '#F44336';\nexport const DEFAULTSIZE = 50;\nexport const DEFAULTSHAPE = 'circle';\nexport const STEP = 'step';\nexport const GRADIENT = 'gradient';\nexport const ORDINAL = 'ordinal';\nexport const SCALE_FUNCTIONS = {\n    size: 'getSize',\n    shape: 'getShape',\n    color: 'getColor'\n};\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const HORIZONTAL = 'horizontal';\nexport const VERTICAL = 'vertical';\nexport const CENTER = 'center';\nexport const VALUE = 'value';\nexport const PATH = 'path';\nexport const SHAPE = 'shape';\nexport const ICON = 'icon';\nexport const RECT = 'rect';\nexport const START = 'start';\nexport const UPPER = 'upper';\nexport const LOWER = 'lower';\nexport const END = 'end';\nexport const SIZE = 'size';\nexport const DISCRETE = 'discrete';\nexport const MEASURE = 'measure';\n\n","import { assembleModelFromIdentifiers, getDataModelFromRange } from 'muze-utils';\nimport { propagationBehaviourMap } from './action-behaviour-map';\nimport { propagationSideEffects } from './behaviour-effect-map';\nimport { STEP, GRADIENT, DISCRETE, MEASURE } from '../enums/constants';\n\nexport const propagate = (firebolt, action, selectionSet, config = {}) => {\n    let propagationData;\n    const type = firebolt.context.constructor.type();\n    const payload = config.payload;\n    const data = firebolt.context.data();\n    const metaData = firebolt.context.metaData();\n    const fieldType = metaData.getData().schema[0].type;\n\n    const propPayload = {};\n    const sourceId = firebolt.context._id;\n    propPayload.action = propagationBehaviourMap[action] || action;\n    propPayload.sideEffects = propagationSideEffects[action];\n    propPayload.sourceCanvas = firebolt.context.canvasAlias();\n    const isMutableAction = firebolt._actions.behavioural[propPayload.action].constructor.mutates();\n    if (payload.criteria === null) {\n        propagationData = null;\n    } else {\n        const entrySet = selectionSet.mergedEnter;\n        let values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.rawVal);\n        if (type === STEP || (type === DISCRETE && fieldType === MEASURE)) {\n            const field = Object.keys(payload.criteria || {})[0];\n            values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.range);\n            propagationData = values.length ? metaData.select((fields) => {\n                let check = false;\n                for (let i = 0; i < values.length; i++) {\n                    check = fields[field].value >= values[i][0] && fields[field].value <= values[i][1];\n                    if (check === true) {\n                        break;\n                    }\n                }\n                return check;\n            }, {\n                saveChild: false\n            }) : null;\n        } else if (type === GRADIENT) {\n            propagationData = getDataModelFromRange(metaData, payload.criteria);\n        } else if (values.length) {\n            propagationData = assembleModelFromIdentifiers(metaData, [payload.criteria[0], ...values.map(d => [d])]);\n        } else {\n            propPayload.criteria = null;\n            propagationData = metaData.select(() => true, {\n                saveChild: false\n            });\n        }\n    }\n\n    let propagateInterpolatedValues = false;\n\n    if (propagationData) {\n        const schema = propagationData.getSchema();\n        propagateInterpolatedValues = schema.every(d => d.type === MEASURE);\n    }\n\n    const propConfig = {\n        sourceId: `legend-${sourceId}`,\n        payload: propPayload,\n        criteria: propPayload.criteria === null ? null : propagationData,\n        isMutableAction,\n        propagateInterpolatedValues,\n        action: propPayload.action\n    };\n\n    metaData.propagate(propagationData, propConfig, true);\n};\n","import { Firebolt } from '@chartshq/muze-firebolt';\nimport { propagate } from './helper';\nimport { STEP, GRADIENT } from '../enums/constants';\n\n/**\n * This class manages the interactions of legend.\n * @export\n * @class LegendFireBolt\n * @extends {Firebolt}\n */\nexport class LegendFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this.initializeSideEffects();\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet[0];\n    }\n\n    propagate (behaviourName, payload, selectionSet) {\n        propagate(this, behaviourName, selectionSet, {\n            payload\n        });\n    }\n\n    getAddSetFromCriteria (criteria) {\n        let values;\n        let uniqueIds;\n        const type = this.context.constructor.type();\n\n        if (criteria === null) {\n            uniqueIds = null;\n        } else if (type === STEP) {\n            values = Object.values(criteria);\n            uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n        } else if (type === GRADIENT) {\n            uniqueIds = [];\n        } else {\n            values = criteria[1];\n            if (values) {\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.rawVal) !== -1).map(d => d.id);\n            } else {\n                values = Object.values(criteria);\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n            }\n        }\n        return {\n            uids: uniqueIds,\n            model: null\n        };\n    }\n\n    getFullData () {\n        return null;\n    }\n}\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\n/**\n * Adds dragging action to the target element.\n * @param {firebolt} firebolt firebolt\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let endPos = {};\n    let payload;\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const boundingBox = context.measurement().gradientDimensions;\n    const axisType = context.config().align === 'horizontal' ? 'x' : 'y';\n    const axisScale = context.axis().source().scale();\n    const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n    }).on('drag', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                    axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n            }\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }).on('end', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n        if (startPos[axisType] === endPos[axisType]) {\n            payload = {\n                criteria: {}\n            };\n        } else {\n            payload = {\n                criteria: {\n                    [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                        axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n                }\n            };\n        }\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }));\n};\n\nexport default drag;\n","import { getEvent } from 'muze-utils';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} Firebolt instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        const event = getEvent();\n                        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, {\n                            criteria: null\n                        }));\n                        event.stopPropagation();\n                    });\n};\n\nexport default hover;\n","/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nconst click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\n\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport click from './click';\nimport * as ACTIONNAMES from '../../enums/actions';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click\n};\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\n","import {\n    getMousePos,\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\nimport { HEIGHT, WIDTH, HORIZONTAL } from '../../enums/constants';\n\nconst getSelectionCriteria = (subject, axis, measures) => {\n    let criteria = [];\n    const {\n        axisScale,\n        axisType\n    } = axis;\n    const {\n        startPos,\n        endPos,\n        selectionBoxMeasure,\n        drawingInfMeasure,\n        offset\n    } = measures;\n    const subjectStartPoint = subject[axisType];\n\n    if (startPos[axisType] === endPos[axisType]) {\n        criteria = [];\n    } else if (subjectStartPoint + selectionBoxMeasure >= drawingInfMeasure + offset) {\n        criteria = [axisScale.invert(drawingInfMeasure + offset - selectionBoxMeasure),\n            axisScale.invert(drawingInfMeasure + offset)];\n    } else if (subjectStartPoint - offset < offset) {\n        criteria = [axisScale.invert(offset * 2), axisScale.invert(selectionBoxMeasure + offset * 2)];\n    } else {\n        criteria = [axisScale.invert(subjectStartPoint), axisScale.invert(subjectStartPoint + selectionBoxMeasure)];\n    }\n    axisType === 'x' ? criteria : criteria.reverse();\n    return criteria;\n};\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let payload;\n    const endPos = {};\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const axisScale = context.axis().source().scale();\n    const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n    const drawingInfMeasure = context.measurement().gradientDimensions[axisType === 'x' ?\n        WIDTH : HEIGHT];\n    const offset = axisScale.range()[axisType === 'x' ? 0 : 1];\n    const measures = {\n        drawingInfMeasure,\n        offset\n    };\n    let subject = {};\n\n    targetEl.call(d3Drag().on('start', function () {\n        const event = getEvent();\n        startPos = getMousePos(this, event.sourceEvent);\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n\n        subject.x += event.dx;\n        subject.y += event.dy;\n\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(subject, { axisScale, axisType }, measures);\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }).on('end', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(event, { axisScale, axisType }, measures);\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true,\n            config: {\n                transition: {\n                    duration: 200\n                }\n            }\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }));\n};\n\n","import { makeElement } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { CLASSPREFIX, HEIGHT, WIDTH, HORIZONTAL, RECT } from '../../../enums/constants';\nimport { SELECTIONBOX } from '../../../enums/side-effects';\nimport { selectionBoxDrag } from '../../physical/selection-box-drag';\nimport './styles.scss';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\n/* istanbul ignore next */ class SelectionBox extends SpawnableSideEffect {\n    static formalName () {\n        return SELECTIONBOX;\n    }\n\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            className: 'legend-selection-box',\n            classPrefix: CLASSPREFIX\n        };\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     */\n    /* istanbul ignore next */ apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const firebolt = this.firebolt;\n        const context = firebolt.context;\n        const config = this.config();\n        const axis = context.axis().source();\n        const className = `${config.classPrefix}-${config.className}`;\n\n        const domain = payload.criteria[firebolt.context.fieldName()];\n        const axisScale = axis.scale();\n        const range = domain ? [axis.getScaleValue(domain[0]), axis.getScaleValue(domain[1])] : [];\n\n        const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n\n        const gradientDimension = firebolt.context.measurement().gradientDimensions[axisType === 'x' ?\n            HEIGHT : WIDTH];\n\n        const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n        const legendGradContainer = context.getDrawingContext().svgContainer;\n        const legendSelGroup = makeElement(legendGradContainer, 'g', [1], `${config.classPrefix}-selection-box-group`);\n\n        if (firebolt.context.config().align === HORIZONTAL) {\n            x = range[0] - rangeShifter || 0;\n            y = 0;\n            width = range[1] - range[0] || 0;\n            height = gradientDimension;\n        } else {\n            x = 0;\n            y = range[1] - rangeShifter || 0;\n            height = range[0] - range[1] || 0;\n            width = gradientDimension;\n        }\n        const enterFn = function (el) {\n            selectionBoxDrag(firebolt)(el, ['brush']);\n        };\n        const selBox = makeElement(legendSelGroup, RECT, [{ domain, x, y, width, height }], className,\n            { enter: enterFn });\n        selBox.attr('y', y)\n                        .attr('x', x)\n                        .attr(WIDTH, width)\n                        .attr(HEIGHT, height);\n    }\n}\n\nexport default SelectionBox;\n\n","import { selectElement } from 'muze-utils';\n\nexport const strategies = (firebolt) => {\n    const context = firebolt.context;\n    const classed = (set, className, change) => {\n        const classPrefix = context.config().classPrefix;\n        selectElement(context.mount())\n                        .selectAll(`.${classPrefix}-legend-columns`)\n                        .filter(d => set.uids.indexOf(d.id) !== -1)\n                        .selectAll('div')\n                        .classed(className, change);\n    };\n\n    return {\n        fade: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-fadeout`, false);\n            } else {\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-fadeout`, true);\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-fadeout`, false);\n            }\n        },\n        brighten: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-brighten`, false);\n            } else {\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-brighten`, true);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n            }\n        }\n    };\n};\n","import { GenericSideEffect } from '@chartshq/muze-firebolt';\nimport { strategies } from './strategies';\nimport { Highlighter } from '../../../enums/side-effects';\n\nexport default class LegendHighlighter extends GenericSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategies = strategies(this.firebolt);\n        this._strategy = 'brighten';\n    }\n\n    static formalName () {\n        return Highlighter;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        strategy(selectionSet, this);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    data: {},\n    fieldName: {},\n    legendContainer: {},\n    measurement: {\n        sanitization: (context, value) => {\n            const measurement = mergeRecursive(context._measurement, value);\n            ['padding', 'border', 'margin'].forEach((space) => {\n                measurement[space] = Math.min(measurement[space] > 0 ? measurement[space] : 0,\n                     measurement.maxWidth * 0.1, measurement.maxHeight * 0.1);\n            });\n            return measurement;\n        }\n    },\n    logicalSpace: {},\n    metaData: {},\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.resetLogicalSpace();\n            context.store().commit('range', value);\n            return value;\n        }\n    },\n    scale: {},\n    smartTicks: {},\n    store: {},\n    title: {\n        sanitization: (context, value) => mergeRecursive(context._title || {}, value)\n    },\n    labelManager: {},\n    minTickDistance: {},\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import { getSymbol } from 'muze-utils';\nimport {\n    CENTER,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\nexport const ALIGN = {\n    HORIZONTAL: 'horizontal',\n    VERTICAL: 'vertical'\n};\n\nexport const DEFAULT_MEASUREMENT = {\n    height: 30,\n    width: 30,\n    maxWidth: Infinity,\n    maxHeight: Infinity,\n    padding: 2,\n    margin: 2,\n    border: 1\n};\n\nexport const LEGEND_TITLE = {\n    text: '',\n    orientation: (pos) => {\n        if (pos === LEFT || pos === RIGHT) {\n            return LEFT;\n        } return CENTER;\n    }\n};\n\nexport const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    borderStyle: 'solid',\n    borderColor: 'rgba(0,0,0,0)',\n    formatter: {\n        bounds: {\n            lower: 'less than',\n            upper: 'more than'\n        }\n    },\n    item: {\n        text: {\n            orientation: 'right',\n            width: 10,\n            formatter: (val, i, data, context) => context.valueParser()(val)\n        },\n        icon: {\n            className: 'legend-icon',\n            height: 20,\n            width: 20,\n            color: 'rgba(0,0,0,.5)',\n            type: 'square'\n        }\n    }\n};\n\n/**\n * Creates a map of pre defined icons\n *\n * @param {string} icon Accepts a icon name like 'square', 'cross', 'diamond' etc\n * @return {Object} icon object which can be used to draw the icons\n */\nexport const ICON_MAP = (icon) => {\n    if (icon && typeof (icon) === 'string') {\n        return getSymbol(icon);\n    } return icon;\n};\n","import { makeElement, numberInterpolator } from 'muze-utils';\n\nimport {\n    SCALE_FUNCTIONS,\n    WIDTH,\n    HEIGHT,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    MAXWIDTH\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} scale\n *\n */\nexport const getScaleInfo = (scale) => {\n    const scaleType = scale.constructor.type();\n    const domain = scale.uniqueValues();\n    const steps = scale.config().stops || 1;\n    const scaleFn = SCALE_FUNCTIONS[scaleType];\n\n    return { scaleType, domain, steps, scaleFn };\n};\n\n/**\n * Function to recompute the stops in array in case to left and right alignment of legend.\n *\n * @param  {string} param - parameter to measure\n * @param  {Object} requiredMeasure - required measure parameters\n * @param  {Object} availableMeasure - available meassure parameters\n * @param  {Array} domainForLegend - array\n * @param  {Object} smartLabelCalc - smartLabel Manager\n * @return {Array} - Array\n */\nconst getcomputedArray = (computationhelper, requiredMeasure, availableMeasure, domainForLegend) => {\n    // declaring Current and Next Tick Value variable\n    let currentTickValue;\n    let nextTickValue;\n    const upperBound = domainForLegend[domainForLegend.length - 1];\n    const param = computationhelper.measureParam;\n    const smartLabelCalc = computationhelper.smartLabelCalc;\n\n    // calculating pixel required per Tick Values\n    const pixelPerTick = (availableMeasure[param] / upperBound);\n\n    // checking if available max width is smaller than required width for legend.\n    if (availableMeasure[param] >= requiredMeasure[param]) {\n        return domainForLegend;\n    }\n\n    currentTickValue = (smartLabelCalc.getOriSize((domainForLegend[0]))[param]);\n    for (let i = 1; i < domainForLegend.length - 1; i++) {\n        nextTickValue = Math.floor((currentTickValue / pixelPerTick) + domainForLegend[i - 1]);\n        if (domainForLegend[i] < nextTickValue) {\n            domainForLegend.splice(i, 1);\n            i -= 1;\n        }\n        currentTickValue = (smartLabelCalc.getOriSize((domainForLegend[i]))[param]);\n    }\n    return domainForLegend;\n};\n\n/**\n * function to recompute the Stops Array provided to prevent the Overlapping of values\n * @param  {Array} domainForLegend - Stops Array\n * @param  {Object} scaleParams - Scale Parameters\n * @return {Array} - modified Stops Array\n */\nexport const getInterpolatedArrayData = (domainForLegend, scaleParams) => {\n    // defining param for height/width selector\n    let measureParam;\n\n    // declaring variable for required Width\n    let requiredWidth;\n\n    // declaring variable for required height\n    let requiredHeight;\n\n    // declaring the variable for upperbound\n    let upperBound = domainForLegend[domainForLegend.length - 1];\n\n    // Initializing Minimum Tick Difference Variable and checking if it's less than 1 or not\n    let minTickDiff = Math.ceil(domainForLegend[1] - domainForLegend[0]);\n\n    // calculating max tick difference\n    const maxTickDiff = Math.ceil(upperBound - domainForLegend[0]);\n\n    // gradient Alignment\n    const { alignment } = scaleParams;\n\n    // getting SmartLabel Manager to calculate tick Params\n    const smartLabelCalc = scaleParams.smartLabel;\n\n    // scale Measurements (i.e MaxWidth and MaxHeight available)\n    const availableSpace = scaleParams.measures;\n\n    // getting minimum Tick size (i.e height and width)\n    const minimumTickSize = scaleParams.minTickDistance;\n\n    // getting domain upperbound dimensions\n    const { height: tickDimHeight, width: tickDimWidth } = smartLabelCalc.getOriSize((upperBound));\n\n    /* Checking if UpperBound of Domain is Floating or Not.\n    In case of floating constricting it to 2 decimals after point. */\n    if (!Number.isInteger(upperBound)) {\n        upperBound = ((upperBound).toFixed(2));\n    }\n\n    // Calculating minimum tick difference\n    minTickDiff = minTickDiff < 1 ? 1 : minTickDiff;\n\n    // required width to render legend\n    requiredWidth = (Math.abs(maxTickDiff) / Math.abs(minTickDiff)) * (tickDimWidth + (minimumTickSize.width));\n\n    requiredWidth -= Math.abs(maxTickDiff);\n\n    // require height to render legend\n    requiredHeight = (Math.abs(maxTickDiff) / Math.abs(minTickDiff)) * tickDimHeight;\n\n    requiredHeight -= Math.abs(maxTickDiff);\n\n    // checking the alignment of legend\n    if (alignment === TOP || alignment === BOTTOM) {\n        measureParam = WIDTH;\n    } else {\n        measureParam = HEIGHT;\n    }\n\n    // calculating computed array\n    domainForLegend = getcomputedArray({\n        smartLabelCalc,\n        measureParam\n    }, {\n        height: requiredHeight,\n        width: requiredWidth\n    }, {\n        height: availableSpace.maxHeight,\n        width: availableSpace.maxWidth\n    }, domainForLegend);\n\n    return domainForLegend;\n};\n\n/**\n * function to recalculate steps on providing more number of stops than canvas can accomodate.\n * @param  {Array} domain - Array\n * @param  {Array} steps - Array\n * @param  {Object} scaleParams - Scale Parameters\n * @return {Array} - recalculated Step Array\n */\nexport const getInterpolatedData = (domain, steps, scaleParams) => {\n    // declaring recomputeSteps Variable\n    let recomputeSteps = 0;\n\n    const getTickMeasure = scaleParams.smartLabel;\n    const { maxWidth, maxHeight } = scaleParams.measures;\n    const { alignment } = scaleParams;\n    const domainForLegend = [];\n    const interpolatedFn = numberInterpolator()(domain[0], domain[1]);\n\n    // getting tick measure(i.e height and width)\n    const tickValue = getTickMeasure.getOriSize(domain[1].toFixed(2));\n\n    // To round the floating values to Integer and checking if value is 1.\n    steps = Math.round(steps);\n    steps = steps < 1 ? (steps + 1) : steps;\n\n    // checking alignment of the Axis\n    if (alignment === TOP || alignment === BOTTOM) {\n        recomputeSteps = Math.floor(maxWidth / (tickValue.width));\n    } else {\n        recomputeSteps = Math.floor(maxHeight / (tickValue.height));\n    }\n    steps = Math.min(steps, recomputeSteps);\n\n    // scaling the axis based on steps provided\n    for (let i = 0; i <= steps; i++) {\n        domainForLegend[i] = interpolatedFn(i / steps);\n    }\n    return domainForLegend;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} text\n * @param {*} measurement\n * @param {*} classPrefix\n */\nexport const titleCreator = (container, title, measurement, config) => {\n    const titleWidth = Math.min(measurement.maxWidth, measurement.width);\n\n    const titleContainer = makeElement(container, 'table', [1], `${config.classPrefix}-legend-title`)\n            .style(WIDTH, `${titleWidth}px`)\n            .style(HEIGHT, `${measurement.height}px`)\n            .style('border-bottom', `${measurement.border}px ${config.borderStyle} ${config.borderColor}`)\n            .style('text-align', title.orientation instanceof Function ?\n            title.orientation(config.position) : title.orientation);\n    return makeElement(titleContainer, 'td', [1], `${config.classPrefix}-legend-title-text`)\n                    .style(WIDTH, `${titleWidth}px`)\n                    .style(MAXWIDTH, `${titleWidth}px`)\n                    .style(HEIGHT, '100%')\n                    .style('line-height', 1)\n                    .style('padding', `${measurement.padding}px`)\n                    .text(title.text)\n                    .style('overflow-x', 'scroll')\n                    .node();\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getMaxMeasures = (data, prop, labelManager) => {\n    let maxHeight = -Infinity;\n    let maxWidth = -Infinity;\n\n    data.forEach((item) => {\n        const value = prop ? item[prop] : item;\n        const space = labelManager.getOriSize(value);\n        maxHeight = Math.max(space.height + 2, maxHeight);\n        maxWidth = Math.max(space.width + 2, maxWidth);\n    });\n\n    return { height: maxHeight, width: maxWidth };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getItemMeasures = (context, prop, formatter) => {\n    const space = [];\n    const data = context.data();\n    const labelManager = context._labelManager;\n\n    data.forEach((item, index) => {\n        const value = prop ? item[prop] : item;\n        const { height, width } = labelManager.getOriSize(formatter(value, index, data, context));\n        space[index] = { height: height + 1, width: width + 1 };\n    });\n    return space;\n};\n\n/**\n *\n *\n * @param {*} textOrientation\n * @param {*} effPadding\n * @param {*} titleSpace\n *\n * @memberof Legend\n */\nexport const computeItemSpaces = (config, measures, data) => {\n    let totalHeight = 0;\n    let totalWidth = 0;\n    let maxItemSpaces = {\n        width: 0, height: 0\n    };\n    const {\n        effPadding,\n        titleWidth,\n        labelSpaces,\n        titleHeight,\n        maxWidth\n    } = measures;\n    const {\n        item,\n        align\n    } = config;\n    const {\n        icon,\n        text\n    } = item;\n    const textOrientation = text.orientation;\n    const itemSpaces = [];\n    const iconSpaces = [];\n    let maxIconWidth = 0;\n    labelSpaces.forEach((labelSpace, i) => {\n        const itemSpace = { width: 0, height: 0 };\n        const iconSpace = { width: 0, height: 0 };\n        const datum = data[i] || {};\n            // Compute each legend item height/width\n        if (textOrientation === LEFT || textOrientation === RIGHT) {\n            // Get label, icon and item widths\n            labelSpace.width += effPadding;\n            iconSpace.width = (datum.size ? 2 * Math.sqrt(datum.size / Math.PI) : icon.width) + effPadding;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n            itemSpace.width = labelSpace.width + maxIconWidth;\n\n            // Get label, icon and item heights\n            labelSpace.height = Math.max(labelSpace.height, icon.height) + effPadding;\n            iconSpace.height = labelSpace.height;\n            itemSpace.height = labelSpace.height;\n        } else {\n            // Get label, icon and item widths\n            labelSpace.width = Math.max(labelSpace.width, datum.size ? 2 * Math.sqrt(datum.size / Math.PI)\n            : icon.width) + effPadding;\n            iconSpace.width = labelSpace.width;\n            itemSpace.width = labelSpace.width;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n\n            // Get label, icon and item heights\n            labelSpace.height += effPadding;\n            iconSpace.height = icon.height + effPadding;\n            itemSpace.height = labelSpace.height + iconSpace.height;\n        }\n        // Compute height and width of legend for each alignment\n        if (align === 'horizontal') {\n            totalHeight = Math.max(totalHeight, itemSpace.height);\n        } else {\n            totalHeight += itemSpace.height;\n            totalWidth = Math.max(totalWidth, itemSpace.width, titleWidth);\n        }\n        maxItemSpaces = {\n            width: Math.max(itemSpace.width, maxItemSpaces.width),\n            height: Math.max(itemSpace.height, maxItemSpaces.height)\n        };\n        itemSpaces.push(itemSpace);\n        iconSpaces.push(iconSpace);\n    });\n    itemSpaces.forEach((itemSpace, i) => {\n        if (align === 'horizontal') {\n            itemSpace.height = totalHeight;\n            iconSpaces[i].width = maxIconWidth;\n            if (textOrientation === LEFT || textOrientation === RIGHT) {\n                labelSpaces[i].height = totalHeight;\n                iconSpaces[i].height = totalHeight;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n            } else {\n                labelSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = maxIconWidth;\n                labelSpaces[i].width = maxIconWidth;\n            }\n            totalWidth = Math.max(totalWidth + itemSpaces[i].width);\n        } else {\n            itemSpace.width = Math.max(totalWidth, maxWidth);\n            if (textOrientation === TOP || textOrientation === BOTTOM) {\n                labelSpaces[i].width = totalWidth;\n                iconSpaces[i].width = totalWidth;\n                maxIconWidth = totalWidth;\n            } else {\n                const labelWidth = labelSpaces[i].width;\n                const newLabelWidth = (maxItemSpaces.width - maxIconWidth);\n                iconSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n                labelSpaces[i].width = Math.max(labelWidth, newLabelWidth);\n                totalWidth = Math.max(totalWidth, itemSpace.width);\n            }\n        }\n    });\n    totalWidth = Math.ceil(Math.max(totalWidth, titleWidth)) + effPadding;\n    totalHeight += titleHeight + effPadding;\n    totalHeight = Math.ceil(totalHeight);\n    return { totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth };\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} scaleInfo\n * @param {*} domainInfo\n *\n */\nexport const getDomainBounds = (type, scaleInfo, domainInfo) => {\n    const {\n        scaleFn,\n        scaleType,\n        scale\n    } = scaleInfo;\n    const {\n        domain,\n        domainBounds,\n        domainLeg,\n        steps\n    } = domainInfo;\n    const ele = domain[type === 'lower' ? 0 : domain.length - 1];\n    const step = steps[type === 'lower' ? 0 : steps.length - 1];\n\n    return {\n        [scaleType]: scaleType === 'size' ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n        value: domainBounds[type],\n        id: type === 'lower' ? 0 : domainLeg.length + 2,\n        range: [ele, step]\n    };\n};\n","import {\n    makeElement,\n    selectElement,\n    getUniqueId,\n    getSmartComputedStyle,\n    generateGetterSetters,\n    mergeRecursive\n} from 'muze-utils';\nimport { behaviouralActions } from '@chartshq/muze-firebolt';\nimport * as legendBehaviours from '../firebolt/behavioural';\n\nimport { LegendFireBolt } from '../firebolt/legend-firebolt';\nimport { actionBehaviourMap } from '../firebolt/action-behaviour-map';\nimport { physicalActions } from '../firebolt/physical';\nimport * as sideEffects from '../firebolt/side-effects';\nimport { behaviourEffectMap } from '../firebolt/behaviour-effect-map';\nimport { VALUE, PATH, RIGHT, LEFT, TOP, BOTTOM } from '../enums/constants';\nimport { PROPS } from './props';\nimport { DEFAULT_MEASUREMENT, DEFAULT_CONFIG, LEGEND_TITLE } from './defaults';\nimport { getItemMeasures, titleCreator, computeItemSpaces } from './legend-helper';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class SimpleLegend\n */\nexport default class SimpleLegend {\n\n    /**\n     * Creates an instance of Legend.\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @memberof Legend\n     */\n    constructor (dependencies) {\n        this._data = [];\n        this._metaData = [];\n        this._mount = null;\n        this._fieldName = null;\n        this._title = Object.assign({}, LEGEND_TITLE);\n        this._metaData = null;\n        this._labelManager = dependencies.labelManager;\n        this._cells = dependencies.cells;\n        this._id = getUniqueId();\n        this._measurement = Object.assign({}, this.constructor.defaultMeasurement());\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n\n        const dist = dependencies.labelManager.getOriSize('w');\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n\n        generateGetterSetters(this, PROPS);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'),\n            `${this.config().classPrefix}-legend-item-info`);\n\n        this._firebolt = new LegendFireBolt(this, {\n            behavioural: Object.assign({}, behaviouralActions, legendBehaviours),\n            physical: physicalActions,\n            physicalBehaviouralMap: actionBehaviourMap\n        }, sideEffects, behaviourEffectMap);\n    }\n\n    id () {\n        return this._id;\n    }\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new SimpleLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENT;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleLegend\n     */\n    firebolt (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return PATH;\n    }\n\n    canvasAlias (...alias) {\n        if (alias.length) {\n            this._canvasAlias = alias[0];\n            return this;\n        }\n        return this._canvasAlias;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    mount (...params) {\n        if (params.length) {\n            this._mount = params[0];\n            this.render();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces () {\n        const {\n            item,\n            classPrefix\n        } = this.config();\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n            `${classPrefix}-legend-item-info`));\n        return getItemMeasures(this, VALUE, item.text.formatter);\n    }\n\n    /**\n     * Sets the height and width of a legend based on provided max\n     * height and width and based on its contents\n     *\n     * @return {Instance} Current instance\n     * @memberof Legend\n     */\n    setLegendMeasures () {\n        const {\n            width,\n            height,\n            maxWidth,\n            maxHeight,\n            padding,\n            margin,\n            border\n        } = this.measurement();\n        const {\n            align\n        } = this.config();\n\n        // Effective padding, margin and padding\n        const effPadding = padding * 2;\n        const effBorder = border * 2;\n        const effMargin = margin * 2;\n\n        this.data(this.dataFromScale());\n        // Get space occupied by title\n        const titleSpace = this.getTitleSpace();\n        const titleHeight = titleSpace.height > 0 ? titleSpace.height + effPadding : 0;\n        const titleWidth = titleSpace.width + effPadding;\n\n        // Get space occupied by labels\n        const labelSpaces = this.getLabelSpaces(effPadding, align);\n        const {\n            totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth\n        } = computeItemSpaces(this.config(),\n        { effPadding, titleWidth, labelSpaces, titleHeight, maxWidth, maxHeight }, this.data());\n\n        this.measurement({\n            width: Math.max(totalWidth, width) + effMargin + effBorder,\n            height: Math.max(totalHeight, height) + effMargin + effBorder,\n            labelSpaces,\n            iconSpaces,\n            itemSpaces,\n            maxItemSpaces,\n            maxIconWidth,\n            titleSpaces: {\n                width: Math.min(maxWidth, this.measurement().width) - effMargin - effBorder,\n                height: titleHeight\n            }\n        });\n        return this;\n    }\n\n    /**\n     * Returns the space occupied by the legend title\n     *\n     * @return {Object} Space occupied by title\n     * @memberof Legend\n     */\n    getTitleSpace () {\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n                                                `${this.config().classPrefix}-legend-title`));\n        return this._labelManager.getOriSize(this.title().text ? this.title().text : '');\n    }\n\n    /**\n     * Creates the title for the legend\n     *\n     * @param {DOM} container Container made for the title\n     * @return {Selection} Title and it's node\n     * @memberof Legend\n     */\n    renderTitle (container) {\n        const { titleSpaces, border, padding, width, maxWidth } = this.measurement();\n        const { borderStyle, borderColor } = this.config();\n        return titleCreator(container, this.title(), {\n            height: titleSpaces.height,\n            width,\n            maxWidth,\n            border,\n            padding,\n            borderStyle,\n            borderColor\n        }, this.config());\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const {\n            classPrefix,\n            borderStyle,\n            borderColor,\n            position\n        } = this.config();\n        const {\n            maxWidth,\n            maxHeight,\n            width,\n            height,\n            margin,\n            border\n        } = this.measurement();\n        const legendContainer = makeElement(selectElement(this.mount()), 'div', [1], `${classPrefix}-legend-box`);\n        let marginPosition;\n        switch (position) {\n        case TOP:\n            marginPosition = `margin-${BOTTOM}`;\n            break;\n        case LEFT:\n            marginPosition = `margin-${RIGHT}`;\n            break;\n        case BOTTOM:\n            marginPosition = `margin-${TOP}`;\n            break;\n        default:\n            marginPosition = `margin-${LEFT}`;\n        }\n        legendContainer.classed(`${classPrefix}-legend-box-${this._id}`, true);\n        legendContainer.style('float', 'left');\n        // set height and width\n        legendContainer.style('width', `${Math.min(maxWidth, width) - margin * 2}px`)\n                        .style('height', `${Math.min(maxHeight, height) - margin * 2}px`)\n                        .style(`${marginPosition}`, `${margin}px`)\n                        .style('border', `${border}px ${borderStyle} ${borderColor}`);\n        this.legendContainer(legendContainer.node());\n\n        // create title\n        this.renderTitle(legendContainer);\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n  /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        const type = this.metaData().getData().schema[0].type;\n        if (type === 'measure') {\n            return {\n                [fieldName]: data.range\n            };\n        }\n        return [[fieldName], [data.rawVal]];\n    }\n}\n","import {\n    LEFT,\n    RIGHT,\n    START,\n    END,\n    TOP,\n    BOTTOM,\n    HORIZONTAL,\n    VERTICAL,\n    CENTER,\n    SHAPE,\n    VALUE\n} from '../enums/constants';\n\nconst legendOrientation = {\n    [HORIZONTAL]: {\n        datasets: data => ({\n            row: [1],\n            column: data\n        }),\n        itemContainerMeasures: (measurement) => {\n            const {\n                itemSpaces,\n                width\n            } = measurement;\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                },\n                column: {\n                    width: (d, i) => `${itemSpaces[i].width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, height } = measurement;\n            return {\n                iconHeight: height,\n                iconWidth: maxItemSpaces.width,\n                stepPadding: {\n                    horizontal: true,\n                    vertical: false\n                }\n            };\n        }\n    },\n    [VERTICAL]: {\n        datasets: data => ({\n            row: data,\n            column: d => [d]\n        }),\n        itemContainerMeasures: (measurement, config) => {\n            const {\n                width\n            } = measurement;\n            const { padding } = config;\n\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${padding}px`\n                },\n                column: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, width } = measurement;\n            return {\n                iconHeight: maxItemSpaces.height,\n                iconWidth: width,\n                stepPadding: {\n                    horizontal: false,\n                    vertical: true\n                }\n            };\n        }\n    }\n};\n\nexport const positionConfig = {\n    [LEFT]: legendOrientation[VERTICAL],\n    [RIGHT]: legendOrientation[VERTICAL],\n    [TOP]: legendOrientation[HORIZONTAL],\n    [BOTTOM]: legendOrientation[HORIZONTAL]\n};\n\nexport const alignmentMap = {\n    [LEFT]: END,\n    [RIGHT]: START,\n    [TOP]: CENTER,\n    [BOTTOM]: CENTER\n};\n\n// Reverses data for step legend\nexport const stepData = data => ({\n    [LEFT]: data.reverse(),\n    [RIGHT]: data.reverse(),\n    [TOP]: data,\n    [BOTTOM]: data\n});\n\n// Changes the item layout based on the position of the text\nexport const itemStack = {\n    [LEFT]: [VALUE, SHAPE],\n    [RIGHT]: [SHAPE, VALUE],\n    [TOP]: [VALUE, SHAPE],\n    [BOTTOM]: [SHAPE, VALUE]\n};\n","import { makeElement, selectElement, applyStyle } from 'muze-utils';\nimport { ICON_MAP } from './defaults';\nimport { positionConfig, alignmentMap, itemStack } from './position-config';\nimport {\n    WIDTH,\n    HEIGHT,\n    CENTER,\n    VALUE,\n    RECT,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} legendInstance\n * @param {*} align\n *\n */\nexport const getItemContainers = (container, data, legendInstance) => {\n    const measurement = legendInstance.measurement();\n    const config = legendInstance.config();\n    const {\n        itemSpaces\n    } = measurement;\n    const {\n        classPrefix,\n        position\n    } = config;\n    const positionObj = positionConfig[position];\n    const datasets = positionObj.datasets(data);\n    const measures = positionObj.itemContainerMeasures(measurement, config);\n\n    const rows = makeElement(container, 'div', datasets.row, `${classPrefix}-legend-row`);\n    rows.style(HEIGHT, (d, i) => `${itemSpaces[i].height}px`);\n    rows.style(WIDTH, measures.row.width);\n    rows.style('padding', measures.row.padding);\n\n    const columns = makeElement(rows, 'div', datasets.column, `${classPrefix}-legend-columns`);\n    columns.style(WIDTH, measures.column.width);\n    columns.style('padding', measures.column.padding);\n\n    return columns;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} classPrefix\n * @param {*} data\n *\n * @memberof DiscreteLegend\n */\nexport const createLegendSkeleton = (context, container, classPrefix, data) => {\n    let gradWidth = 0;\n    let gradHeight = 0;\n    let maxGradHeight = 0;\n    let maxGradWidth = 0;\n    const measurement = context.measurement();\n    const {\n            margin,\n            border,\n            titleSpaces,\n            width,\n            height,\n            maxWidth,\n            maxHeight\n        } = measurement;\n\n    gradHeight = height - (titleSpaces.height + 2 * margin + 2 * border);\n    gradWidth = width - (margin * 2 + border * 2);\n\n    maxGradHeight = maxHeight - (titleSpaces.height + margin * 2 + border * 2);\n    maxGradWidth = maxWidth - (margin * 2 + border * 2);\n\n    let legendBody = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    legendBody.select(`.${classPrefix}-legend-overflow`).remove();\n        // Create a div with scroll when overflow\n    if (maxGradWidth && maxGradWidth < gradWidth) {\n        legendBody = legendBody.style(WIDTH, `${maxGradWidth}px`).style('overflow-x', 'scroll');\n    }\n        // Create a div with scroll when overflow\n    if (maxGradHeight && maxGradHeight < gradHeight) {\n        legendBody.style(HEIGHT, `${maxGradHeight}px`).style('overflow-y', 'scroll');\n    }\n\n    legendBody = makeElement(legendBody, 'div', [1], `${classPrefix}-legend-overflow`);\n\n    legendBody.style(WIDTH, `${gradWidth}px`);\n    legendBody.style(HEIGHT, `${gradHeight}px`);\n\n    const legendItem = getItemContainers(legendBody, data, context);\n    return { legendItem };\n};\n\n/**\n * Creates legend item based on alignment and text orientation\n *\n * @param {Selection} container Point where items are to be mounted\n * @return {Instance} Current instance\n * @memberof Legend\n */\nexport const createItemSkeleton = (context, container) => {\n    const {\n        classPrefix,\n        item\n    } = context.config();\n    const textOrientation = item.text.orientation;\n\n    const stack = itemStack[textOrientation];\n    const itemSkeleton = makeElement(container, 'div', (d, i) => stack.map(e => [e, d[e], d.color, d.size,\n        d.value, context.fieldName(), i]), `${classPrefix}-legend-item-info`);\n\n    const alignClass = alignmentMap[textOrientation];\n\n    itemSkeleton.classed(alignClass, true);\n    return { itemSkeleton };\n};\n\n/**\n *\n *\n * @param {*} measureType\n * @param {*} stepColorCheck\n */\nexport const applyItemStyle = (item, measureType, stepColorCheck, context) => {\n    const {\n        padding,\n        labelSpaces,\n        iconSpaces,\n        maxIconWidth\n    } = context.measurement();\n    const diff = stepColorCheck ? -padding * 2 : 0;\n\n    if (item[0] === VALUE) {\n        return `${labelSpaces[item[6]][measureType]}px`;\n    }\n    return `${measureType === 'width' && !stepColorCheck ? maxIconWidth : iconSpaces[item[6]][measureType] - diff}px`;\n};\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, elem, defaultIcon, width, height) {\n    const groupElement = elem;\n    // const { shape, size, update } = d;\n    const size = d[3] || Math.min(width, height) * Math.PI;\n    const shape = d[1] || defaultIcon;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            return createShape(d, elem);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        shapeElement.attr('transform', `scale(${size / 100})`);\n        return selectElement(groupElement.node().appendChild(newShape));\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = ICON_MAP(shape).size(size)();\n        }\n        return makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    }\n    d[1] = 'circle';\n    return createShape(d, elem, 'circle');\n};\n\n/**\n * Returns the icon of the legend item\n *\n * @param {Object} datum Data property attached to the item\n * @param {number} width width of the item\n * @param {number} height height of the item\n * @return {Object|string} returns the path string or the string name of the icon\n * @memberof Legend\n */\nexport const getLegendIcon = (datum, width, height, defaultIcon) => {\n    const icon = ICON_MAP(datum[1]);\n\n    if (icon) {\n        return icon.size(datum[3] || Math.min(width, height) * Math.PI);\n    }\n    return ICON_MAP(datum[3] ? 'circle' : defaultIcon).size(datum[3] || Math.min(width, height) * Math.PI);\n};\n\n/**\n *\n *\n */\nexport const renderIcon = (icon, container, datum, context) => {\n    const {\n        classPrefix,\n        iconHeight,\n        iconWidth,\n        maxIconWidth,\n        padding,\n        color\n    } = context;\n    const svg = makeElement(container, 'svg', f => [f], `${classPrefix}-legend-icon-svg`)\n    .attr(WIDTH, maxIconWidth)\n    .attr(HEIGHT, iconHeight)\n    .style(WIDTH, `${maxIconWidth}px`)\n    .style(HEIGHT, `${iconHeight}px`);\n\n    if (icon !== RECT) {\n        const group = makeElement(svg, 'g', [datum[1]], `${classPrefix}-legend-icon`);\n        createShape(datum, group, datum[3] ? 'circle' : 'square', iconWidth, iconHeight)\n                        .attr('transform', `translate(${maxIconWidth / 2 - padding} ${iconHeight / 2})`)\n                        .attr('fill', datum[2] || color);\n    } else {\n        makeElement(svg, RECT, [datum[1]], `${classPrefix}-legend-icon`)\n                        .attr('x', 0)\n                        .attr('y', 0)\n                        .attr(WIDTH, maxIconWidth)\n                        .attr(HEIGHT, iconHeight)\n                        .attr('fill', datum[2] || color);\n    }\n};\n\n/**\n * Renders the items in the legend i.e, icon and text\n *\n * @param {DOM} container Point where item is to be mounted\n * @memberof Legend\n */\nexport const renderDiscreteItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n           item,\n           classPrefix\n    } = context.config();\n    const {\n        maxIconWidth,\n        padding\n    } = context.measurement();\n    const {\n            width: iconWidth,\n            height: iconHeight,\n            color,\n            className\n        } = item.icon;\n\n    const textOrientation = item.text.orientation;\n    const formatter = item.text.formatter;\n\n    labelManager.useEllipsesOnOverflow(true);\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, false, context),\n        height: d => applyItemStyle(d, HEIGHT, false, context),\n        'text-align': CENTER,\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context))\n                            .style(`padding-${textOrientation === RIGHT ? LEFT : RIGHT}`, '0px');\n        } else {\n            // const icon = getLegendIcon(d, iconWidth, iconHeight, type);\n            selectElement(this).classed(`${classPrefix}-${className}`, true);\n            selectElement(this).classed(`${classPrefix}-${className}-${i}`, true);\n            renderIcon('circle', selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                // iconWidth: 2 * Math.sqrt(d[3] / Math.PI) || iconWidth,\n                iconHeight,\n                maxIconWidth,\n                padding,\n                color\n            });\n        }\n    });\n};\n\n/**\n* Renders the items in the legend i.e, icon and text\n*\n* @param {DOM} container Point where item is to be mounted\n* @memberof Legend\n*/\nexport const renderStepItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n      item,\n      position,\n      classPrefix\n   } = context.config();\n    const {\n      maxItemSpaces,\n      maxIconWidth,\n      padding\n   } = context.measurement();\n    const {\n       width,\n       height,\n       color\n   } = item.icon;\n    const {\n        formatter\n   } = item.text;\n\n    labelManager.useEllipsesOnOverflow(true);\n    const { iconHeight, iconWidth, stepPadding } = positionConfig[position].getStepSpacesInfo({\n        maxItemSpaces, height, width\n    });\n\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, stepPadding.horizontal, context),\n        height: d => applyItemStyle(d, HEIGHT, stepPadding.vertical, context),\n        'text-align': 'center',\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context));\n        } else {\n            renderIcon(RECT, selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                iconHeight,\n                maxIconWidth,\n                color\n            });\n        }\n    });\n};\n","import {\n    FieldType,\n    DimensionSubtype,\n    formatTemporal\n} from 'muze-utils';\nimport SimpleLegend from './simple-legend';\nimport { DISCRETE, LEFT, SIZE } from '../enums/constants';\nimport { getScaleInfo } from './legend-helper';\nimport { createLegendSkeleton, createItemSkeleton, renderDiscreteItem } from './renderer';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class DiscreteLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new DiscreteLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof DiscreteLegend\n     */\n    static type () {\n        return DISCRETE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof DiscreteLegend\n     */\n    dataFromScale () {\n        const scale = this.scale();\n        const { scaleType, domain, scaleFn } = getScaleInfo(scale);\n        let domainForLegend = [...new Set(domain)];\n        const field = this.metaData().getFieldspace().fields[0];\n        const { type, subtype } = field.schema();\n\n        domainForLegend = domainForLegend.map((ele, i) => {\n            let value = 0;\n            let range = 0;\n            const rawVal = domainForLegend[i];\n            if (type === FieldType.MEASURE) {\n                value = (+domainForLegend[i]).toFixed(0);\n                const nextVal = domainForLegend[i + 1] ? +domainForLegend[i + 1] : +value;\n                range = [value, nextVal.toFixed(0)];\n            } else {\n                let domainVal = rawVal;\n                if (subtype === DimensionSubtype.TEMPORAL) {\n                    domainVal = formatTemporal(domainForLegend[i], field.minimumConsecutiveDifference());\n                }\n                value = domainVal;\n                range = [domainVal];\n            }\n            return {\n                [scaleType]: scale[scaleFn](ele),\n                value,\n                id: i,\n                range,\n                rawVal\n            };\n        }).filter(d => d.value !== null);\n\n        domainForLegend = scaleType === SIZE ? domainForLegend.sort((a, b) => a[scaleType] - b[scaleType])\n            : domainForLegend;\n        return domainForLegend;\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const data = this.data();\n        const { classPrefix } = this.config();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n        renderDiscreteItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n}\n","import { makeElement, applyStyle } from 'muze-utils';\nimport { ContinousAxis } from '@chartshq/muze-axis';\nimport { BOTTOM, RIGHT } from '../enums/constants';\nimport { ALIGN } from './defaults';\nimport '../styles.scss';\n\n/**\n *\n *\n * @param {*} data\n *\n */\nexport const getGradientDomain = (data) => {\n    if (typeof data[0].value === 'number') {\n        return data.reduce((accumulator, currentValue) =>\n            [Math.min(currentValue.value, accumulator[0]), Math.max(currentValue.value, accumulator[1])],\n                [Number.MAX_VALUE, Number.MIN_VALUE]);\n    }\n    return data.map(e => e.value);\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} domain\n *\n */\nexport const makeLinearGradient = (container, data, domain) => {\n    const defs = makeElement(container, 'defs', [1]);\n    const linearGradient = makeElement(defs, 'linearGradient', [1])\n                .attr('id', 'linear-gradient')\n                .attr('x1', '0%')\n                .attr('y2', '0%');\n\n    makeElement(linearGradient, 'stop', data, 'stop-gradient')\n                    .attr('offset', d => `${(d.value - domain[0]) * 100 / (domain[1] - domain[0]) || 1}%`)\n                    .attr('stop-color', d => d.color);\n    return linearGradient;\n};\n\n/**\n * Creates an axis cell with a linear axis for computing space and\n * creating gradient legend\n *\n * @return {AxisCell} Instance of Axis Cell for the gradient axis\n * @memberof Legend\n */\nexport const createAxis = (context) => {\n    const data = context.data();\n    const { align } = context.config();\n    const AxisCell = context._cells.AxisCell;\n    const newAxis = new ContinousAxis({\n        id: `legend-${context._id}`,\n        orientation: align === ALIGN.VERTICAL ? RIGHT : BOTTOM,\n        style: context._computedStyle,\n        nice: false,\n        showAxisName: false,\n        tickValues: data.map(d => d.value),\n        fixedBaseline: false,\n        labels: {\n            rotation: null\n        }\n    }, { labelManager: context._labelManager });\n\n    newAxis.domain(getGradientDomain(data));\n    newAxis.range([1, 1]);\n    return new AxisCell().source(newAxis).config({\n        margin: { left: 0, bottom: 0, top: 0, right: 0 }\n    });\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} classPrefix\n *\n * @memberof GradientLegend\n */\nconst createLegendSkeleton = (container, classPrefix, data) => {\n    const domain = getGradientDomain(data);\n    const legendContainer = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    const legendGradSvg = makeElement(legendContainer, 'svg', [1], `${classPrefix}-gradient`);\n    const legendGradCont = makeElement(legendGradSvg, 'g', [1], `${classPrefix}-gradient-group`);\n    const linearGradient = makeLinearGradient(legendGradSvg, data, domain);\n    const legendRect = makeElement(legendGradCont, 'rect', [1], `${classPrefix}-gradient-rect`);\n\n    return {\n        legendContainer,\n        legendGradCont,\n        legendGradSvg,\n        linearGradient,\n        legendRect\n    };\n};\n\n/**\n * Renders the axis for the gradient\n *\n * @param {Selection} container Point where axis is to be mounted\n * @param {number} height Height for axis\n * @param {number} width Width for axis\n * @memberof Legend\n */\nexport const renderAxis = (context, container, height, width) => {\n    const axis = context.axis();\n\n    axis.setAvailableSpace(width, height);\n    axis.render(container.node());\n    axis.source().render();\n};\n\n/**\n * Renders gradient legends\n *\n * @param {Selection} container Point where the legend is to be appended\n * @memberof GradientLegend\n */\nexport const renderGradient = (context, container) => {\n    let gradHeight = 0;\n    let gradWidth = 0;\n    const {\n        align,\n        classPrefix,\n        item\n    } = context.config();\n    const data = context.data();\n    // Create the skeleton for the legend\n    const {\n        legendContainer,\n        legendGradSvg,\n        legendGradCont,\n        linearGradient,\n        legendRect\n    } = createLegendSkeleton(container, classPrefix, data);\n    const labelDim = context.axis().source().getAxisDimensions().tickDimensions;\n    const {\n        padding,\n        margin,\n        border,\n        titleSpaces,\n        maxItemSpaces,\n        maxHeight,\n        maxWidth,\n        height,\n        width\n    } = context.measurement();\n    const gradientDimensions = {};\n\n    gradHeight = Math.floor(Math.min(height, maxHeight) - (titleSpaces.height + 2 * margin + 2 * border));\n    gradWidth = Math.floor(Math.min(width, maxWidth) - (margin * 2 + border * 2));\n\n    if (align === ALIGN.HORIZONTAL) {\n        gradientDimensions.height = item.icon.height;\n        gradientDimensions.width = gradWidth - 2 * padding - labelDim.width / 2;\n        linearGradient.attr('x2', '100%').attr('y1', '0%');\n        legendGradCont.attr('transform', `translate( ${labelDim.width / 2} 0)`);\n        renderAxis(context, legendContainer, gradHeight - item.icon.height - padding, gradWidth - 2 * padding - 1);\n\n        applyStyle(legendContainer, {\n            height: `${maxItemSpaces.height + border + padding}px`,\n            width: `${Math.min(width, maxWidth)}px`,\n            padding: `${padding}px`\n        });\n\n        legendRect.attr('height', gradientDimensions.height);\n        legendRect.attr('width', gradientDimensions.width - labelDim.width / 2);\n    } else {\n        gradientDimensions.height = gradHeight - 2 * padding - labelDim.height / 2;\n        gradientDimensions.width = item.icon.width;\n        linearGradient.attr('x2', '0%').attr('y1', '100%');\n        legendGradCont.attr('transform', `translate(0 ${labelDim.height / 2})`);\n        renderAxis(context, legendContainer, gradHeight - 2 * padding - 1, gradWidth - item.icon.width - padding * 2);\n\n        applyStyle(legendContainer, {\n            height: `${Math.min(height, maxHeight)}px`,\n            width: `${maxWidth}px`,\n            padding: `${padding}px`\n        });\n        legendRect.attr('height', gradientDimensions.height - labelDim.height / 2);\n        legendRect.attr('width', gradientDimensions.width);\n    }\n\n    // Apply Styles to the legend plot area\n    applyStyle(legendGradSvg, {\n        height: `${gradientDimensions.height}px`,\n        width: `${gradientDimensions.width}px`\n    });\n\n        // Apply styles to the legend rect\n    applyStyle(legendRect, {\n        fill: 'url(#linear-gradient)'\n    });\n    legendGradSvg.attr('height', gradientDimensions.height);\n    legendGradSvg.attr('width', gradientDimensions.width);\n\n    context.measurement({\n        gradientDimensions\n    });\n    context._legendGradientSvg = legendGradSvg;\n    return context;\n};\n","import SimpleLegend from './simple-legend';\nimport { getScaleInfo, getInterpolatedData, getInterpolatedArrayData } from './legend-helper';\nimport { GRADIENT, LEFT, SIZE } from '../enums/constants';\nimport { renderGradient, createAxis } from './gradient-helper';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class GradientLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new GradientLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof GradientLegend\n     */\n    static type () {\n        return GRADIENT;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axis\n     *\n     * @memberof GradientLegend\n     */\n    axis (...axis) {\n        if (axis.length) {\n            this._axis = axis[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof GradientLegend\n     */\n    dataFromScale () {\n        let domainForLegend = [];\n        const scale = this.scale();\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        // defining scaleParams\n        const scaleParams = {\n            smartLabel: this.labelManager(),\n            measures: this.measurement(),\n            alignment: this.config().position,\n            minTickDistance: this.minTickDistance()\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainForLegend[0] = domain[0];\n            }\n            domainForLegend = [...domainForLegend, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainForLegend.push(domain[1]);\n            }\n            // Sorting the domain Array\n            domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n            domainForLegend = getInterpolatedArrayData(domainForLegend, scaleParams);\n        } else {\n            domainForLegend = getInterpolatedData(domain, steps - 1, scaleParams);\n        }\n        domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n        return domainForLegend.map((ele, i) => {\n            const value = domainForLegend[i];\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor()\n                    : scale[scaleFn](Math.floor(ele)),\n                value: +value.toFixed(2),\n                id: i\n            };\n        }).filter(d => d.value !== null);\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        const axis = createAxis(this);\n        const axisSpace = axis.getLogicalSpace();\n        const space = { width: axisSpace.width - effPadding, height: axisSpace.height - effPadding };\n        const axisDomainLength = axis.source().domain().length;\n        const labelSpaces = new Array(axisDomainLength).fill(space);\n\n        this.axis(axis);\n        return labelSpaces;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof GradientLegend\n     */\n    getDrawingContext () {\n        return {\n            svgContainer: this._legendGradientSvg\n        };\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        renderGradient(this, legendContainer);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof SimpleLegend\n     */\n    getCriteriaFromData (data) {\n        return [[this.fieldName()], [data.value]];\n    }\n}\n","import SimpleLegend from './simple-legend';\nimport {\n    getScaleInfo,\n    getInterpolatedData,\n    getDomainBounds\n} from './legend-helper';\nimport {\n    createLegendSkeleton,\n    createItemSkeleton,\n    renderStepItem\n} from './renderer';\nimport { STEP, RECT, LEFT, SIZE, UPPER, LOWER } from '../enums/constants';\nimport { stepData } from './position-config';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class StepLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new StepLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof StepLegend\n     */\n    static type () {\n        return STEP;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof StepLegend\n     */\n    dataFromScale () {\n        let domainLeg = [];\n        const scale = this.scale();\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        const { formatter } = this.config();\n        const domainBounds = {\n            lower: null, upper: null\n        };\n\n        // defining scaleParams\n        const scaleParams = {\n            smartLabel: this.labelManager(),\n            measures: this.measurement(),\n            alignment: this.config().position,\n            minTickDistance: this.minTickDistance()\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainBounds.lower = [`${formatter.bounds.lower} ${steps[0]}`];\n            }\n            domainLeg = [...domainLeg, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainBounds.upper = [`${formatter.bounds.upper} ${steps[steps.length - 1]}`];\n            }\n        } else {\n            domainLeg = getInterpolatedData(domain, steps, scaleParams);\n        }\n\n        domainLeg = [...new Set(domainLeg)].sort((a, b) => a - b);\n        domainLeg = domainLeg.map((ele, i) => {\n            let value = null;\n            if (i < domainLeg.length - 1) {\n                value = `${(ele.toFixed(1))} - ${(+domainLeg[i + 1].toFixed(1))}`;\n            } else if (domainLeg.length === 1) {\n                value = ele.toFixed(1);\n            }\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n                value,\n                id: i + 1,\n                range: [ele, domainLeg[i + 1]]\n            };\n        }).filter(d => d.value !== null);\n\n        if (domainBounds.lower) {\n            const lowerBounds = getDomainBounds(LOWER, { scale, scaleFn, scaleType },\n                { domain, steps, domainBounds });\n            domainLeg = [lowerBounds, ...domainLeg];\n        }\n        if (domainBounds.upper) {\n            const upperBounds = getDomainBounds(UPPER, { scale, scaleFn, scaleType },\n            { domain, steps, domainBounds, domainLeg });\n            domainLeg = [...domainLeg, upperBounds];\n        }\n\n        return domainLeg;\n    }\n\n     /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding, align) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        return super.getLabelSpaces(effPadding, align);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return RECT;\n    }\n\n     /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const { classPrefix, position } = this.config();\n        const data = stepData(this.data())[position];\n\n        const legendContainer = super.render(this.mount());\n\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n\n        renderStepItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        return {\n            [fieldName]: data.range\n        };\n    }\n}\n","import { GradientLegend, DiscreteLegend, StepLegend } from '@chartshq/muze-legend';\n\n/**\n * Contants to be used as attr\n */\nexport const ROWS = 'rows';\nexport const COLUMNS = 'columns';\nexport const DATA = 'data';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\nexport const DETAIL = 'detail';\nexport const LAYERS = 'layers';\nexport const TRANSFORM = 'transform';\nexport const INITIALIZED = 'isInitialized';\nexport const SOURCE = 'source';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const PADDING = 'padding';\nexport const BORDER = 'border';\nexport const MARGIN = 'margin';\nexport const CONFIG = 'config';\nexport const MOUNT = 'mount';\nexport const CANVAS_UPDATED = 'canvasUpdated';\nexport const CLASSPREFIX = 'classPrefix';\nexport const POLICIES = '_policies';\nexport const LEGEND = 'legend';\nexport const TITLE = 'title';\nexport const SUB_TITLE = 'subtitle';\nexport const RESOLVE = 'resolve';\nexport const DISCRETE = 'discrete';\nexport const STEP_COLOR = 'step-color';\nexport const GRADIENT = 'gradient';\nexport const LINEAR = 'linear';\nexport const ORDINAL = 'ordinal';\nexport const MUZE_PREFIX = 'muze';\n\nexport const TITLE_TEMPLATE_NOT_ALLOWED_TAGS = [\n    'script',\n    'style'\n];\n\nexport const LEGEND_TYPE_MAP = {\n    [`${ORDINAL}-${true}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${COLOR}`]: StepLegend,\n    [`${LINEAR}-${false}-${COLOR}`]: GradientLegend\n};\n\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const GROUP = 'group';\nexport const LAYOUT = 'layout';\nexport const RETINAL = 'retinal';\nexport const DIMENSION = 'dimension';\nexport const MEASURE = 'measure';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\nexport const HORIZONTAL_CENTER = 'h-center';\nexport const VERTICAL_CENTER = 'v-center';\nexport const HIDDEN = 'hidden';\nexport const OVERFLOW = 'overflow';\nexport const OVERFLOW_X = 'overflow-x';\nexport const OVERFLOW_Y = 'overflow-y';\nexport const AUTO = 'auto';\nexport const VISIBLE = 'visible';\nexport const VERTICAL_SCROLL_BAR = 'verticalScrollBar';\nexport const HORIZONTAL_SCROLL_BAR = 'horizontalScrollBar';\nexport const GRID = 'grid';\n","import { ComposedVars, SimpleVariable } from '@chartshq/visual-group';\nimport { TITLE_TEMPLATE_NOT_ALLOWED_TAGS } from './constants';\n\n/**\n * This method creates a new composed variable instance from multiple variables. This is required when we have multiple\n * variables on a single axis and the union of domain of all the variables needs to be set on the axis.\n *\n * To create a new composed variable from multiple fields,\n * ```\n *  const sharedVar = share('open', 'high', 'low', 'close');\n *  canvas.rows([sharedVar])\n *      .columns(['date']);\n * ```\n *\n * @module Operators\n * @public\n * @function share\n * @param {Array} vars Variable names.\n *\n * @return {ComposedVars} Instance of composed variable\n */\nexport const share = (...vars) => new ComposedVars(...vars.map(variable => new SimpleVariable(variable)));\n\n/**\n *\n *\n * @param {*} node\n *\n */\nfunction treeShakeNode (node) {\n    if (node.nodeType !== Node.ELEMENT_NODE) { return; }\n\n    if (TITLE_TEMPLATE_NOT_ALLOWED_TAGS.indexOf(node.tagName.toLowerCase()) !== -1) {\n        node.parentNode.removeChild(node);\n    } else {\n        for (const childNode of node.childNodes) {\n            treeShakeNode(childNode);\n        }\n    }\n}\n\n/**\n * A string template tagged function which sanitizes input html formatted string according to the allowed html tags.\n * This is used to render html in canvas components like title and tooltip.\n *\n * To render html in canvas components,\n * ```\n *     canvas.title(html`<span style=font-size:20px;>TITLE</span>`);\n * ```\n *\n * @public\n * @module Operators\n * @function html\n * @param {Array.<string>} strings - The string parts of the template.\n * @param {Array} exps - The list of evaluated expression values.\n *\n * @return {Function} Returns a function which returns the sanitized html string.\n */\nexport function html (strings, ...exps) {\n    let htmlCode = '';\n    const expLn = exps.length;\n    let i = 0;\n\n    for (; i < expLn; ++i) {\n        htmlCode += strings[i] + exps[i];\n    }\n    htmlCode += strings[i];\n\n    const frag = document.createDocumentFragment();\n    const wrapper = document.createElement('div');\n\n    frag.appendChild(wrapper);\n    wrapper.innerHTML = htmlCode;\n\n    treeShakeNode(wrapper);\n    const { innerHTML } = wrapper;\n\n    return () => innerHTML;\n}\n","import { mergeRecursive, CommonProps } from 'muze-utils';\n\nconst defaultPolicy = (registrableComponents) => {\n    const aliases = registrableComponents.map(comp => comp.alias());\n    return {\n        behaviours: {\n            '*': (propagationPayload) => {\n                const propagationCanvas = propagationPayload.sourceCanvas;\n                return propagationCanvas ? aliases.indexOf(propagationCanvas) !== -1 : true;\n            }\n        }\n    };\n};\n\nconst listenerFn = (canvas, fn) => () => {\n    const valueMatrix = canvas.composition().visualGroup.matrixInstance().value;\n    valueMatrix.each(cell => fn(cell.valueOf().firebolt()));\n};\n\nconst canvasIterator = (canvases, iteratorFn, cFn) => {\n    canvases.forEach((canvas) => {\n        const matrix = canvas.composition().visualGroup.matrixInstance().value;\n        matrix.each(cell => iteratorFn(cell.valueOf().firebolt()));\n        cFn && cFn(canvas);\n        // Also register actions on canvas update\n        const throwback = canvas._throwback;\n\n        throwback.registerImmediateListener([CommonProps.MATRIX_CREATED],\n            listenerFn(canvas, iteratorFn));\n    });\n};\n\n/**\n * This class is initiated only once in lifecycle and is reponsible for regisration of physical and behavioural\n * actions and side effects and the mapping between them.\n *\n * To get the instance of action model\n * ```\n *  const ActionModel = muze.ActionModel;\n * ```\n *\n * @public\n * @module ActionModel\n */\nclass ActionModel {\n    constructor () {\n        this._registrableComponents = [];\n    }\n\n    /**\n     * Takes an array of canvases on which the physical and behavioural actions will get registered.\n     *\n     * @public\n     * @param  {Canvas} components Array of canvases\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    for (...components) {\n        this._registrableComponents = components;\n        return this;\n    }\n\n    /**\n     * Registers physical actions on the canvases. It takes an object with key as the name of action and value having\n     * the definition of the action.\n     *\n     * To register a {@link PhysicalAction},\n     * ```\n     *  const ActionModel = muze.ActionModel;\n     *  ActionModel\n     *       // Physical actions will be registered on these canvases.\n     *      .for(canvas)\n     *      .registerPhysicalActions({\n     *          // Key is the name of physical action.\n     *          ctrlClick: (firebolt) => (targetEl, behaviours) => {\n     *              targetEl.on('click', function (data) {\n     *                  const event = utils.getEvent();\n     *                  const pos = utils.getClientPoint(event, this);\n     *                  // Get the data point nearest to the mouse position.\n     *                  const nearestPoint = firebolt.context.getNearestPoint(pos, {\n     *                      data\n     *                  });\n     *                  // Prepare the payload\n     *                  const payload = {\n     *                      criteria: nearestPoint.id\n     *                  };\n     *                  behaviours.forEach((behaviour) => firebolt.dispatchBehaviour(behaviour, payload));\n     *              });\n     *          }\n     *      });\n     * ```\n     * @public\n     *\n     * @param {Object} action Names of physical actions and their definitions.\n     *\n     * @return {ActionModel} Instance of the action model.\n     */\n    registerPhysicalActions (action) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalActions(action);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalActions(action);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers behavioural actions on the canvases. It takes definitions of the behavioural actions and registers\n     * them on the canvases. Every behavioural action must inherit the {@link GenericBehaviour} class.\n     *\n     * To register a behavioural action\n     * ```\n     *  // Define a new behavioural action\n     *  class SingleSelectBehaviour extends GenericBehaviour {\n     *      static formalName () {\n     *          return 'singleSelect';\n     *      }\n     *\n     *      setSelectionSet (addSet, selectionSet) {\n     *          if (addSet === null) {\n     *              selectionSet.reset();\n     *          } else if (addSet.length) {\n     *              const existingAddSet = selectionSet.getExistingEntrySet(addSet);\n     *              if (existingAddSet.length){\n     *                  selectionSet.reset();\n     *              } else {\n     *               selectionSet.add(addSet);\n     *              }\n     *          } else {\n     *              selectionSet.reset();\n     *          }\n     *      }\n     * }\n     * muze.ActionModel.registerBehaviouralActions(SingleSelectBehaviour);\n     * ```\n     *\n     * @public\n     *\n     * @param {GenericBehaviour} actions Definition of behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerBehaviouralActions (...actions) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerBehaviouralActions(actions);\n        }, (canvas) => {\n            canvas.firebolt().registerBehaviouralActions(actions);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of physical and behavioural actions. This mapping is used to establish which behavioural\n     * actions should be dispatched on any triggering of physical actions.\n     *\n     * To map physical actions with behavioural actions,\n     * ```\n     *  muze.ActionModel.registerPhysicalBehaviouralMap({\n     *      ctrlClick: {\n     *          behaviours: ['select'] // This array must be the formal names of the behavioural actions.\n     *      }\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Contains the physical and behavioural action map.\n     * ```\n     *   {\n     *      // Name of the physical action\n     *      click: {\n     *          // Target element selector. This is an optional field. If not passed, then by default takes the\n     *          // container element of visual unit.\n     *          target: '.muze-layers-area path',\n     *          // Behaviours which should be dispatched on triggering of the mapped physical action.\n     *          behaviours: ['select']\n     *      }\n     *   }\n     * ```\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPhysicalBehaviouralMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalBehaviouralMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalBehaviouralMap(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers what behaviour to propagate on dispatch of a certain behavioural action. By default, when any\n     * behavioural action is dispatched, then the same behavioural action gets propagated to all the other canvases.\n     * This can be changed using this api.\n     *\n     * To register what behaviour should be propagated on dispatch of any behavioural action,\n     * ```\n     *  ActionModel.for(canvas1, canvas2).registerPropagationBehaviourMap({\n     *      select: 'filter',\n     *      brush: 'filter'\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Propagation behaviour map.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPropagationBehaviourMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPropagationBehaviourMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPropagationBehaviourMap(map);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of side effects and behavioural actions. It takes an object which contains key as the\n     * name of behavioural action and the side effects which will be linked to it.\n     *\n     * To map side effects to select behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: ['infoBox'] // This array must be the formal names of the side effects\n     *  });\n     * ```\n     *\n     * To map side effects to select behaviour, but disable all the default side effects attached with this behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: {\n     *          effects: ['infoBox'],\n     *          preventDefaultActions: true\n     *      }\n     *  });\n     * @public\n     * @param {Object} map Mapping of behavioural actions and side effects.\n     * ```\n     *     {\n     *          select: ['infoBox']\n     *     }\n     * ```\n     * @return {ActionModel} Instance of action model.\n     */\n    mapSideEffects (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.mapSideEffects(map);\n        }, (canvas) => {\n            canvas.firebolt().mapSideEffects(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers the side effects on the registered canvases. It takes definitions of side effects and registers them\n     * on the canvases. Every side effect must inherit the base class {@link GenericSideEffect} or\n     * {@link SpawnableSideEffect} or {@link SurrogateSideEffect} class.\n     *\n     * ```\n     * // Define a custom side effect\n     *  class InfoBox extends SpawnableSideEffect {\n     *      static formalName () {\n     *          return 'infoBox';\n     *      }\n     *\n     *      apply (selectionSet) {\n     *      }\n     *  }\n     *  muze.ActionModel.registerSideEffects(InfoBox);\n     * ```\n     * @public\n     * @param  {GenericSideEffect} sideEffects Definition of side effects.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerSideEffects (...sideEffects) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerSideEffects(sideEffects);\n        }, (canvas) => {\n            canvas.firebolt().registerSideEffects(sideEffects);\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between behavioural actions and physical actions. It takes an array of behavioural action\n     * and it's physical action.\n     *\n     * To dissociate behavioural actions from physical actions\n     * ```\n     *  muze.ActionModel.dissociateBehaviour(['select', 'click'], ['highlight', 'hover']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of behavioural action and physical action.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateBehaviour (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateBehaviour(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateBehaviour(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between side effects and behavioural actions. It takes an array of formal names of the side\n     * effects and it's linked behavioural action.\n     *\n     * To dissociate side effects from behavioural actions\n     * ```\n     *  muze.ActionModel.dissociateSideEffect(['crossline', 'highlight'], ['selectionBox', 'brush']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of side effects and behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateSideEffect (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateSideEffect(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateSideEffect(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * By default cross interactivity is disabled between canvases. This enables cross interaction between the canvases\n     * so that any action happening in one canvas gets dispatched on other canvases as well. An optional policy can also\n     * be passed in this method. The policy can be used to control on which canvases the behavioural actions and\n     * side effects gets dispatched.\n     *\n     * To just enable cross interactivity between two canvases,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity();\n     * ```\n     *\n     * To enable cross interactivity but enable any behavioural action only when it is triggered from canvas1.\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          behaviours: {\n     *              // Here * stands for any behavioural action name. We can also give any name of behavioural action\n     *              // in place of this.\n     *              '*': (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     *\n     * To enable cross interactivity but enable tooltip effect if the action is propagated from canvas1,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          sideEffects: {\n     *              tooltip: (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} policy Policy definition.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    enableCrossInteractivity (policy = {}) {\n        const registrableComponents = this._registrableComponents;\n        const mergedPolicy = mergeRecursive(mergeRecursive({}, defaultPolicy(registrableComponents)), policy);\n\n        registrableComponents.forEach((canvas) => {\n            canvas.firebolt().crossInteractionPolicy(mergedPolicy);\n        });\n\n        return this;\n    }\n}\n\nexport const actionModel = (() => new ActionModel())();\n","import { MUZE_PREFIX } from '../constants';\n\nexport const TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 4,\n    className: `${MUZE_PREFIX}-title-container`\n};\n\nexport const SUB_TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 16,\n    maxLines: 2,\n    className: `${MUZE_PREFIX}-subtitle-container`\n};\n\nexport const GRID = 'grid';\n\nexport const CANVAS = 'canvas';\n\nexport const LAYOUT_ALIGN = {\n    TOP: 'top',\n    LEFT: 'left',\n    RIGHT: 'right',\n    BOTTOM: 'bottom'\n};\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    ROWS,\n    COLUMNS,\n    COLOR,\n    SHAPE,\n    SIZE,\n    DETAIL,\n    LAYERS,\n    TRANSFORM,\n    TITLE,\n    SUB_TITLE\n} from '../constants';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG } from './defaults';\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Canvas.\n * Canvas merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module LocalOptions\n */\n\nexport const localOptions = {\n    [ROWS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLUMNS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLOR]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SHAPE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SIZE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [DETAIL]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n\n    [LAYERS]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [TRANSFORM]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object'\n        }\n    }\n};\n\nexport const canvasOptions = {\n    [TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(title) => {\n                if (typeof title === 'string' || !title) {\n                    const t = () => title;\n                    return t;\n                }\n                return title;\n            }, (titleConfig) => {\n                const defConfig = mergeRecursive({}, TITLE_CONFIG);\n                return mergeRecursive(defConfig, titleConfig);\n            }]\n        }\n    },\n    [SUB_TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(subtitle) => {\n                if (typeof subtitle === 'string' || !subtitle) {\n                    const sub = () => subtitle;\n                    return sub;\n                }\n                return subtitle;\n            }, (subtitleConfig) => {\n                const defConfig = mergeRecursive({}, SUB_TITLE_CONFIG);\n                return mergeRecursive(defConfig, subtitleConfig);\n            }]\n        }\n    }\n};\n","export default class LayoutComponent {\n    constructor (name, dimensions, seed) {\n        this._seed = seed;\n        this._boundBox = {\n            height: dimensions.height,\n            width: dimensions.width,\n            top: null,\n            left: null\n        };\n        this._renderAt = null;\n        this._alignWith = null;\n        this._alignment = null;\n        this._target = null;\n        this._position = null;\n        this._componentName = name;\n        this._className = null;\n    }\n\n    getLogicalSpace () {\n        throw new Error('getLogicalSpace is not defined');\n    }\n\n    setSpatialConfig () {\n        throw new Error('setSpatialSpace is not defined');\n    }\n\n    name (param) {\n        if (param) {\n            this._componentName = param;\n        }\n        return this._componentName;\n    }\n\n    target (param) {\n        if (param) {\n            this._target = param;\n        }\n        return this._target;\n    }\n\n    position (param) {\n        if (param) {\n            this._position = param;\n        }\n        return this._position;\n    }\n\n    alignment (param) {\n        if (param) {\n            this._alignment = param;\n        }\n        return this._alignment;\n    }\n\n    alignWith (param) {\n        if (param) {\n            this._alignWith = param;\n        }\n        return this._alignWith;\n    }\n\n    renderAt (param) {\n        if (param) {\n            this._renderAt = param;\n        }\n        return this._renderAt;\n    }\n\n    boundBox (param) {\n        if (param) {\n            Object.assign(this._boundBox, param);\n        }\n        return this._boundBox;\n    }\n\n    className (param) {\n        if (param) {\n            this._className = param;\n        }\n        return this._className;\n    }\n\n    draw () {\n        throw new Error('draw is not defined');\n    }\n  }\n\n","import LayoutComponent from './layoutComponent';\n\nclass DummyComponent extends LayoutComponent {\n    getLogicalSpace () {\n        return {\n            width: this.boundBox().width,\n            height: this.boundBox().height\n        };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n        return this;\n    }\n\n    draw () {\n        if (!this.component) {\n            throw new Error(`Component not set for ${this.componentName}`);\n        }\n        this.component.mount(document.getElementById(this.renderAt)); // Change the draw method to component draw\n        return this;\n    }\n}\n\nexport default DummyComponent;\n","export const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    interaction: {\n        sideEffect: 'individual'\n    },\n    pagination: 'scroll',\n    scrollBar: {\n        thickness: 10,\n        speed: 2,\n        vertical: {\n            align: 'right'\n        },\n        horizontal: {\n            align: 'bottom'\n        }\n    },\n    legend: {\n        position: 'right',\n        color: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        shape: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        size: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        }\n    },\n    showHeaders: false,\n    minWidth: 100,\n    minHeight: 100,\n    facet: {\n        rows: {\n            minCharacters: 3\n        },\n        columns: {\n            maxLines: 2,\n            verticalAlign: 'middle',\n            minCharacters: 1\n        }\n    },\n    border: {\n        style: 'solid',\n        color: '#d6d6d6',\n        width: 2,\n        collapse: true,\n        spacing: 0\n    },\n    autoGroupBy: {\n        disabled: false\n    },\n    invalidValues: {},\n    sort: {}\n};\n","import { DEFAULT_CONFIG } from '../../../../muze/src/defaults';\n\nconst DEFAULT_WIDTH = 600;\nconst DEFAULT_HEIGHT = 400;\nconst DEFAULT_CLASS_NAME = `${DEFAULT_CONFIG.classPrefix}-layout-container-component`;\nconst NODE_PREFIX = `${DEFAULT_CONFIG.classPrefix}-layout-container`;\n\nexport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT,\n  DEFAULT_CLASS_NAME,\n  NODE_PREFIX\n};\n","export default class DefinitionModel {\n    constructor (config) {\n        this._host = config.host || null;\n        this._cut = config.cut || null;\n        this._ratioWeight = config.ratioWeight === 0 ? 0 : config.ratioWeight || 1;\n        this._preferred = config.preferred || false;\n        this._lanes = config.lanes || [];\n        this._remainingHeight = 0;\n        this._remainingWidth = 0;\n    }\n\n    host (host) {\n        if (host) {\n            this._host = host;\n        }\n        return this._host;\n    }\n\n    preferred (preferred) {\n        if (preferred) {\n            this._preferred = preferred;\n        }\n        return this._preferred;\n    }\n\n    cut (cut) {\n        if (cut) {\n            this._cut = cut;\n        }\n        return this._cut;\n    }\n\n    ratioWeight (ratioWeight) {\n        if (ratioWeight) {\n            this._ratioWeight = ratioWeight;\n        }\n        return this._ratioWeight;\n    }\n\n    lanes (lanes) {\n        if (lanes) {\n            this._lanes = lanes;\n        }\n        return this._lanes;\n    }\n\n    remainingHeight (remainingHeight) {\n        if (remainingHeight) {\n            this._remainingHeight = remainingHeight;\n        }\n        return this._remainingHeight;\n    }\n\n    remainingWidth (remainingWidth) {\n        if (remainingWidth) {\n            this._remainingWidth = remainingWidth;\n        }\n        return this._remainingWidth;\n    }\n}\n","import { NODE_PREFIX } from '../../constants/defaults';\nimport DefinitionModel from '../definition-manager/definitionModel';\nimport DummyComponent from '../../layout-component/dummy-component';\n/**\n * Compares two strings in lowercase\n *\n * @export\n * @param {string} value the value to be compared\n * @param {string} compareTo whom the value would be compared\n * @return {boolean} true if values are equal\n */\nexport function isEqual (value, compareTo) {\n    if (typeof value !== 'string' || typeof compareTo !== 'string') {\n        throw new TypeError('value and compareTo must be string');\n    }\n    return value.toLowerCase() === compareTo.toLowerCase();\n}\n\nexport const getNodeId = (() => {\n    let _uid = 0;\n    return () => `${NODE_PREFIX}-${++_uid}`;\n})();\n\nexport function yExtraSpace (node) {\n    let smallestHeight = 0;\n    if (node.getCutType() === 'v') {\n        smallestHeight = smallestExtraHeightHorizontally(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'h') {\n        node.children().forEach((child) => {\n            smallestHeight += yExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerHeight = node.boundBox().height;\n        const hostHeight = node.model().host().getLogicalSpace().height;\n\n        smallestHeight = containerHeight - hostHeight;\n        if (smallestHeight < 0) {\n            smallestHeight = 0;\n        }\n    } else {\n        smallestHeight = 0;\n    }\n    return smallestHeight;\n}\n\nexport function smallestExtraHeightHorizontally (node) {\n    let smallestHeight = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const h = yExtraSpace(child);\n        if (h < smallestHeight) {\n            smallestHeight = h;\n        }\n    });\n    return smallestHeight;\n}\n\nexport function xExtraSpace (node) {\n    let smallestWidth = 0;\n    if (node.getCutType() === 'h') {\n        smallestWidth = smallestExtraWidthVertically(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'v') {\n        node.children().forEach((child) => {\n            smallestWidth += xExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerWidth = node.boundBox().width;\n        const hostWidth = node.model().host().getLogicalSpace().width;\n        smallestWidth = containerWidth - hostWidth;\n        if (smallestWidth < 0) {\n            smallestWidth = 0;\n        }\n    } else {\n        smallestWidth = 0;\n    }\n    return smallestWidth;\n}\n\nexport function smallestExtraWidthVertically (node) {\n    let smallestWidth = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const w = xExtraSpace(child);\n        if (w < smallestWidth) {\n            smallestWidth = w;\n        }\n    });\n    return smallestWidth;\n}\n\nexport function determineBoundBox (bb, i, arr, instance) {\n    if (i) {\n    // if not first sibling, take boundbox from previous sibling\n        const lastSibling = arr[i - 1];\n        const { top: _top, left: _left, height: _height, width: _width } = lastSibling.boundBox();\n        return {\n            width: bb.width,\n            height: bb.height,\n\n            top: instance.parentCut() === 'h'\n        ? _top + _height : _top,\n\n            left: instance.parentCut() === 'h'\n        ? _left : _left + _width\n        };\n    }\n  // if first sibling, take boundbox from parent\n    const { top: _top, left: _left } = instance.parent().boundBox();\n    return {\n        width: bb.width,\n        height: bb.height,\n        top: _top,\n        left: _left\n    };\n}\n\n// prepares the targetComponent Map for target Mapping ie. where a component should lie\nexport function prepareTargetComponentMap (context) {\n    context.targetComponentMap(new Map());\n    context.componentMap().forEach((value) => {\n        if (context.targetComponentMap().has(value.target())) {\n            context.targetComponentMap().get(value.target()).push(value);\n        } else {\n            const temp = [];\n            temp.push(value);\n            context.targetComponentMap().set(value.target(), temp);\n        }\n    });\n}\n\nexport function getComponent (canvasComponent, componentName) {\n    const comp = canvasComponent.find(component => component.name() === componentName);\n    return (comp && comp !== -1) ? comp : null;\n}\nexport function createPlaceHolderComponent (height, width, position) {\n    const comp = new DummyComponent(0, { height, width });\n    comp.name('placeHolder');\n    comp.position(position);\n    return comp;\n}\n\nexport function placeComponent (definitionModel, component, isPreferred = false, isGridComponent = false) {\n    let cut = '';\n    let componentRatioWidth = 1;\n    let leftOvercomponentRationWidth = 1;\n    let leftHeight = 0;\n    let leftWidth = 0;\n\n    if (!component) {\n        return { first: definitionModel, second: definitionModel };\n    }\n\n    const { height: componentHeight, width: componentWidth } = component.getLogicalSpace();\n    const position = component.position();\n    if (position === 'top' || position === 'bottom') {\n        cut = 'h';\n        componentRatioWidth = componentHeight / definitionModel.remainingHeight();\n        leftHeight = definitionModel.remainingHeight() - componentHeight;\n        leftWidth = definitionModel.remainingWidth();\n    } else {\n        cut = 'v';\n        componentRatioWidth = componentWidth / definitionModel.remainingWidth();\n        leftWidth = definitionModel.remainingWidth() - componentWidth;\n        leftHeight = definitionModel.remainingHeight();\n    }\n    leftOvercomponentRationWidth = 1 - componentRatioWidth;\n\n// update parentModel\n    definitionModel.cut(cut);\n    const firstLaneConfig = {\n        host: component.name(),\n        cut: null,\n        ratioWeight: componentRatioWidth,\n        preferred: isGridComponent ? false : isPreferred,\n        lanes: []\n    };\n    const firstLane = new DefinitionModel(firstLaneConfig);\n    firstLane.remainingHeight(componentHeight);\n    firstLane.remainingWidth(componentWidth);\n\n    const secondLaneConfig = {\n        host: null,\n        cut: null,\n        ratioWeight: leftOvercomponentRationWidth,\n        preferred: isGridComponent ? false : !isPreferred,\n        lanes: []\n    };\n    const secondLane = new DefinitionModel(secondLaneConfig);\n    secondLane.remainingHeight(leftHeight);\n    secondLane.remainingWidth(leftWidth);\n    if (isPreferred) {\n        definitionModel.lanes([firstLane]);\n    } else if (position === 'top' || position === 'left') {\n        definitionModel.lanes([firstLane, secondLane]);\n    } else {\n        definitionModel.lanes([secondLane, firstLane]);\n    }\n    return { first: firstLane, second: secondLane };\n}\n\nexport function placeGridComponent (definitionModel, gridComponents) {\n    let tempDefModel = definitionModel;\n    const rows = gridComponents.length;\n    const column = rows ? gridComponents[0].length : 0;\n    const height = gridComponents.reduce((acc, val) => (acc + val[0].getLogicalSpace().height), 0);\n\n    for (let i = 0; i < column; i++) {\n        const iscolumnPreffered = i === column - 1;\n        const columnPlaceHolderComponent = createPlaceHolderComponent(height,\n                                                    gridComponents[0][i].getLogicalSpace().width, 'left');\n        const { first, second } = placeComponent(tempDefModel, columnPlaceHolderComponent, iscolumnPreffered);\n        tempDefModel = first;\n        for (let j = 0; j < rows; j++) {\n            const rowpreffred = j === (rows - 1);\n            tempDefModel = placeComponent(tempDefModel, gridComponents[j][i], rowpreffred, true).second;\n        }\n        tempDefModel = second;\n    }\n    return tempDefModel;\n}\n\nexport function negotiateDimension (node) {\n    let preferred;\n    let cumultiveExtraSpaceAmt = 0;\n    let alteredDim;\n    let nonAlteredDim;\n\n    const childrenLength = node.children().length;\n\n    for (let index = 0; index < childrenLength; index++) {\n        let fn;\n        let extraSpaceAmt;\n        const child = node.children()[index];\n\n        if (child.parentCut() === 'h') {\n            fn = yExtraSpace;\n            alteredDim = 'height';\n            nonAlteredDim = 'width';\n        } else {\n            fn = xExtraSpace;\n            alteredDim = 'width';\n            nonAlteredDim = 'height';\n        }\n  // if vertical then get extra height from other node and push it to the preferred node.\n  // for horizontal cut the same thing is to be done with width\n        if (child.isPreferred()) {\n    // push extra space in sink. Execute it when all non preferred space are computed.\n            preferred = child;\n\n            continue; // eslint-disable-line no-continue\n        }\n  // reduce own height and save it in a var\n        cumultiveExtraSpaceAmt += (extraSpaceAmt = fn(child));\n        child.boundBox()[alteredDim] -= extraSpaceAmt;\n  // update nonaltered dim from parent for any change which happened during negotiation\n        child.boundBox()[nonAlteredDim] = child.parent().boundBox()[nonAlteredDim];\n\n        negotiateDimension(child);\n    }\n\n    if (preferred) {\n        preferred.boundBox()[alteredDim] += cumultiveExtraSpaceAmt;\n        preferred.boundBox()[nonAlteredDim] = preferred.parent().boundBox()[nonAlteredDim];\n        negotiateDimension(preferred);\n    }\n}\n\nexport function computePosition (node) {\n    node.children().forEach((child, i, children) => {\n        const boundBox = determineBoundBox(child.boundBox(), i, children, child);\n        child.boundBox(boundBox);\n        computePosition(child);\n    });\n}\n\nexport function allocateBoundingBox (node) {\n    const totalWeight = node.children()\n                            .map(child => child.model().ratioWeight())\n                            .reduce((carry, val) => carry + val, 0);\n\n    node.children().forEach((child, i, children) => {\n        const lastSibling = children[i - 1];\n        const ratio = child.model().ratioWeight() / totalWeight;\n\n        if (child.parentCut() === 'h') {\n            child.boundBox({\n                top: i ? lastSibling.boundBox().top + lastSibling.boundBox().height : 0,\n                left: child.parent().boundBox().left,\n                height: child.parent().boundBox().height * ratio,\n                width: child.parent().boundBox().width\n            });\n        } else {\n            child.boundBox({\n                top: child.parent().boundBox().top,\n                left: i ? lastSibling.boundBox().left + lastSibling.boundBox().width : 0,\n                height: child.parent().boundBox().height,\n                width: child.parent().boundBox().width * ratio\n            });\n        }\n        allocateBoundingBox(child);\n    });\n}\n\n","import { getNodeId } from '../helper';\nimport { LayoutComponent } from '../../layout-component';\n\nclass Node {\n    constructor (data) {\n        this._model = data;\n        this._parent = null;\n        this._children = [];\n        this._parentCut = null;\n        this._boundBox = {\n            top: null,\n            left: null,\n            height: null,\n            width: null\n        };\n\n        this._id = this._model.host() instanceof LayoutComponent && this._model.host().renderAt() ?\n                    this._model.host().renderAt() :\n                    getNodeId();\n    }\n\n    addChildren (entries) {\n        this._children.push(...entries);\n        entries.forEach((e) => { e.parent(this); });\n    }\n\n    isRoot () {\n        return this._parent === null;\n    }\n\n    isLeaf () {\n        return !this._children.length;\n    }\n\n    getCutType () {\n        return this._model.cut();\n    }\n\n    isPreferred () {\n        return !!this._model.preferred();\n    }\n\n    children (children) {\n        if (children) {\n            this._children = children;\n        }\n        return this._children;\n    }\n\n    parent (parent) {\n        if (parent) {\n            this._parent = parent;\n        }\n        return this._parent;\n    }\n\n    parentCut (parentCut) {\n        if (parentCut) {\n            this._parentCut = parentCut;\n        }\n        return this._parentCut;\n    }\n\n    id (id) {\n        if (id) {\n            this._id = id;\n        }\n        return this._id;\n    }\n\n    model (model) {\n        if (model) {\n            this._model = model;\n        }\n        return this._model;\n    }\n\n    boundBox (bound) {\n        if (bound) {\n            this._boundBox = {\n                top: bound.top,\n                left: bound.left,\n                height: bound.height,\n                width: bound.width\n            };\n        }\n        return this._boundBox;\n    }\n  /**\n     * function to search a node and update it with the config provided.\n     * @param  {Object} nodeconfig\n     */\n    updateNode (nodeconfig) {\n        if (this._id === nodeconfig._id) {\n            this._model.cut(nodeconfig.cut);\n            this._model.ratioWeight(nodeconfig.ratioWeight);\n        } else {\n            this._children.forEach((node) => {\n                if (node._id === nodeconfig._id) {\n                    node.model.cut(nodeconfig.cut);\n                    node.model.ratioWeight(nodeconfig.ratioWeight);\n                    return;\n                }\n                this.searchNode(node, nodeconfig);\n            });\n        }\n    }\n\n  // Recursive function to search a node\n    searchNode (node, nodeconfig) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeconfig._id) {\n                childNode.model().cut(nodeconfig.cut);\n                childNode.model().ratioWeight(nodeconfig.ratioWeight);\n            } else {\n                this.searchNode(childNode, nodeconfig);\n            }\n        });\n    }\n\n  /**\n     * function to delete a node from tree Structure.\n     * @param  {String} nodeId - node Id of the Node\n     */\n    delete (nodeId) {\n        this._children.forEach((node) => {\n            if (node.id() === nodeId) {\n                const index = this._children.indexOf(node);\n                this._model.lanes().splice(index, 1);\n            }\n            this.deleteSearchNode(node, nodeId);\n        });\n    }\n\n  // Recursive function to search a node\n    deleteSearchNode (node, nodeId) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeId) {\n                const index = node.children().indexOf(childNode);\n                node.model().lanes().splice(index, 1);\n            } else {\n                this.deleteSearchNode(childNode, nodeId);\n            }\n        });\n    }\n}\n\nexport default Node;\n","import Node from '../tree';\nimport {\n    allocateBoundingBox,\n    negotiateDimension,\n    computePosition\n} from '../helper';\n\nexport default class LayoutModel {\n    constructor (measurements, config) {\n        this._measurements = measurements;\n        this._config = config;\n        this._root = this.createTree(this._config, null);\n        this.setBoundBox();\n    }\n\n    createTree (config, parent) {\n        const node = new Node(config);\n        if (parent) {\n            node.parentCut(parent.getCutType());\n            parent.addChildren([node]);\n        } else {\n            this._root = node;\n        }\n        for (const lane of config.lanes()) {\n            this.createTree(lane, node);\n        }\n\n        return this._root;\n    }\n\n    setBoundBox () {\n        this._root.boundBox({\n            top: 0,\n            left: 0,\n            width: this._measurements.width,\n            height: this._measurements.height\n        });\n        allocateBoundingBox(this._root);\n    }\n\n    setHostPosition (node) {\n        node.children().forEach((child) => {\n            LayoutModel.setHostSpatialConfig(child);\n            this.setHostPosition(child);\n        });\n    }\n\n    static setHostSpatialConfig (node) {\n        const bb = node.boundBox();\n        const host = node.model().host();\n        if (host && host.setSpatialConfig) {\n            const conf = {\n                x: bb.left,\n                y: bb.top,\n                width: bb.width,\n                height: bb.height,\n                renderAt: node.id()\n            };\n            host.setSpatialConfig(conf);\n        }\n    }\n\n    negotiate () {\n        negotiateDimension(this._root);\n        computePosition(this._root);\n        return this;\n    }\n\n    broadcast () {\n        this.setHostPosition(this._root);\n        return this;\n    }\n\n    tree () {\n        return this._root;\n    }\n}\n","/* eslint no-undef: \"off\" */\n/* eslint default-case: \"off\" */\nexport class Utils {\n    static isDOMElement (element) {\n        return element instanceof Element;\n    }\n\n    static getID (element) {\n        return element.id;\n    }\n\n    static getElement (id) {\n        return document.getElementById(id);\n    }\n\n    static findContainer (data) {\n        return data.filter(coordinate => coordinate.parent == null)[0];\n    }\n  /**\n   * static method to remove the div\n   * @param  {} divId - div ID to be removed.\n   */\n    static removeDiv (divId) {\n        if (document.getElementById(divId) !== null) { document.getElementById(divId).remove(); }\n    }\n}\n","import { DEFAULT_CLASS_NAME } from '../constants/defaults';\nimport { LayoutComponent } from '../layout-component';\n\nexport default class DataPoint {\n    constructor (node) {\n        this._node = node;\n        this._className = node.model().host() instanceof LayoutComponent ?\n                            node.model().host().className() : DEFAULT_CLASS_NAME;\n    }\n\n    node () {\n        return this._node;\n    }\n\n    hasHost () {\n        return this._node.model().host() instanceof LayoutComponent;\n    }\n\n    className () {\n        return this._className || DEFAULT_CLASS_NAME;\n    }\n}\n","import { getnodePoints } from './helper';\n\nexport class DataParser {\n    constructor (data) {\n        this._data = data;\n    }\n\n    defaultDataPointLogic () {\n        const nodepoints = [];\n        getnodePoints(this._data, nodepoints);\n        return nodepoints;\n    }\n\n}\n","import DataPoint from './data-point';\n\nexport const getnodePoints = (node, nodepoints) => {\n    const datapoint = new DataPoint(node);\n    nodepoints.push(datapoint);\n    node.children().forEach((child) => {\n        getnodePoints(child, nodepoints);\n    });\n};\n","import { DataParser } from './data-parser';\n\nexport class HTMLDataAdapter extends DataParser {\n    getCoordinates () {\n        return super.defaultDataPointLogic();\n    }\n}\n","export class Renderer {\n\n    initRenderer (node, tree) {\n        node.__logicalTree = tree;\n    }\n}\n","import { HTMLDataAdapter } from '../data-adapters/html-data';\nimport { Utils } from '../utils';\nimport { Renderer } from './renderer';\n\nexport class HTMLRenderer extends Renderer {\n    constructor (data) {\n        super();\n        this._data = data;\n        this._coordinates = new HTMLDataAdapter(this._data).getCoordinates();\n    }\n\n    createhtml (mount, className) {\n        const mainDiv = mount;\n        super.initRenderer(mainDiv, this._data); // Initialise node with layout id\n        this.parentDiv = this.createAndCustomiseParent(className);\n        this._coordinates.forEach((node) => {\n            if (node.hasHost()) {\n                const host = node.node();\n                this.parentDiv.appendChild(this.createAndPositionDiv({ ...host.boundBox(),\n                    id: host.id(),\n                    className: node.className() }));\n            }\n        });\n        mainDiv.appendChild(this.parentDiv);\n    }\n\n    createAndPositionDiv (config) {\n        const { top, left, height, width, className, id } = config;\n        const existingDiv = document.getElementById(id);\n        const div = existingDiv || document.createElement('div');\n        div.style.position = 'absolute';\n        div.style.left = `${left}px`;\n        div.style.top = `${top}px`;\n        div.style.height = `${height}px`;\n        div.style.width = `${width}px`;\n        div.id = id;\n        div.className = className;\n        return div;\n    }\n\n    createAndCustomiseParent (className) {\n        const container = Utils.findContainer(this._coordinates);\n        const host = container.node();\n        const parentDiv = this.createAndPositionDiv({ ...host.boundBox(),\n            id: host.id(),\n            className: container.className() });\n        parentDiv.className = className;\n        parentDiv.style.position = 'relative';\n        return parentDiv;\n    }\n\n    coordinates () {\n        return this._coordinates;\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport { HTMLRenderer } from '../renderers/html-renderer';\nimport { LayoutComponent } from '../layout-component';\n\nexport const getChildNode = (context, config) =>\n                        context.renderer().createAndPositionDiv(config);\n\nexport const findNode = (context, nodeID) =>\n                        context.renderer().coordinates().find(point => point.node().id() === nodeID);\n\nexport const renderHTML = (context) => {\n    context.renderer(new HTMLRenderer(context.data()));\n    context.renderer().createhtml(context.mount(), context.className());\n};\n\nexport const drawLayout = (context) => {\n    switch (context.renderer()) {\n    case 'html' :\n        renderHTML(context);\n        break;\n    default:\n        renderHTML(context);\n    }\n};\n\nexport const drawComponent = (componentData) => {\n    componentData.children().forEach((node) => {\n        const host = node.model().host();\n        if (host instanceof LayoutComponent) {\n            host.draw();\n        }\n        drawComponent(node);\n    });\n};\n\nexport const removeElement = (elemID) => {\n    if (elemID) {\n        selectElement(`#${elemID}`).remove();\n    }\n};\n\nexport const resolveAligment = (context, componentData) => {\n    componentData.children().forEach((component) => {\n        const host = component.model().host();\n        if (host instanceof LayoutComponent && host.alignWith()) {\n            let newNodeConfig = {};\n            const point = findNode(context, component.id()).node();\n            const node = point.boundBox();\n            const refNode = findNode(context, context.componentMap().get(host.alignWith()).renderAt())\n                                .node()\n                                .boundBox();\n            switch (host.alignment()) {\n            case 'left':\n                newNodeConfig = {\n                    top: node.top,\n                    left: refNode.left,\n                    height: node.height,\n                    width: Math.abs(node.width - Math.abs(refNode.left - node.left))\n                };\n                break;\n\n            case 'right':\n                newNodeConfig = {\n                    top: node.top,\n                    left: node.left,\n                    height: node.height,\n                    width: Math.abs(node.width - Math.abs(node.left + node.width - (refNode.left + refNode.width)))\n                };\n                break;\n\n            case 'top':\n                newNodeConfig = {\n                    top: refNode.top,\n                    left: node.left,\n                    height: Math.abs(node.height - Math.abs(refNode.top - node.top)),\n                    width: node.width\n                };\n                break;\n\n            case 'bottom':\n                newNodeConfig = {\n                    top: node.top,\n                    left: node.left,\n                    height: Math.abs(node.top - refNode.top + refNode.height),\n                    width: node.width\n                };\n                break;\n\n            case 'h-center':\n                newNodeConfig = {\n                    top: node.top,\n                    left: refNode.left,\n                    height: node.height,\n                    width: refNode.width\n                };\n                break;\n\n            case 'v-center':\n                newNodeConfig = {\n                    top: refNode.top,\n                    left: node.left,\n                    height: refNode.top,\n                    width: node.width\n                };\n                break;\n            default:\n                break;\n            }\n    // check if model in parent component\n            Object.assign(newNodeConfig, { id: point.id(), className: host.className() });\n            context.renderer().createAndPositionDiv(newNodeConfig);\n            context.componentMap().get(host.name()).setSpatialConfig({\n                x: newNodeConfig.left,\n                y: newNodeConfig.top,\n                height: newNodeConfig.height,\n                width: newNodeConfig.width\n\n            });\n        }\n        resolveAligment(context, component);\n    });\n};\n","import { Utils } from '../utils';\nimport { drawLayout, resolveAligment, drawComponent } from './helper';\n\nexport class DrawingManager {\n    constructor (data, renderer, container) {\n        this._data = data.tree;\n        this._componentMap = data.componentMap;\n        this._layoutClassName = data.layoutClassName;\n        this._renderer = renderer;\n        this._mount = Utils.isDOMElement(container) ? container : Utils.getElement(container);\n    }\n\n    draw () {\n        drawLayout(this);\n        resolveAligment(this, this._data);\n        drawComponent(this._data);\n        return this;\n    }\n\n    data (data) {\n        if (data) {\n            this._data = data;\n        }\n        return this._data;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    className (param) {\n        if (param) {\n            this._layoutClassName = param;\n        }\n        return this._layoutClassName;\n    }\n\n    renderer (param) {\n        if (param) {\n            this._renderer = param;\n        }\n        return this._renderer;\n    }\n\n    mount (param) {\n        if (param) {\n            this._mount = param;\n        }\n        return this._mount;\n    }\n}\n","import DefinitionModel from './definitionModel';\nimport { prepareTargetComponentMap, getComponent, placeComponent, placeGridComponent } from '../helper';\n\nexport default class DefinitionManager {\n    constructor (componentMap, sequence, totalHeight, totalWidth) {\n        this._componentMap = componentMap;\n        this._prioritySequence = sequence;\n        this._totalHeight = totalHeight;\n        this._totalWidth = totalWidth;\n        this._targetComponentMap = null;\n    }\n\n    // create the config model\n    generateConfigModel () {\n        prepareTargetComponentMap(this);\n        const canvasComponent = this._targetComponentMap.get('canvas');\n        const definitionModel = new DefinitionModel({});\n        let tempDefModel = definitionModel;\n        definitionModel.remainingHeight(this._totalHeight);\n        definitionModel.remainingWidth(this._totalWidth);\n\n        let componentRef = null;\n\n        this._prioritySequence.forEach((name) => {\n            componentRef = getComponent(canvasComponent, name);\n            if (name !== 'grid') {\n                tempDefModel = placeComponent(tempDefModel, componentRef).second;\n            } else {\n                tempDefModel = placeGridComponent(tempDefModel, componentRef.component);\n            }\n        });\n        return definitionModel;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    targetComponentMap (param) {\n        if (param) {\n            this._targetComponentMap = param;\n        }\n        return this._targetComponentMap;\n    }\n}\n","import { sanitizeConfig } from './helper';\n\nexport class LayoutDef {\n    constructor () {\n        this._componentMap = new Map();\n        this._layoutDefinition = null;\n    }\n\n    addComponent (component) {\n        this._componentMap.set(component.name(), component);\n    }\n\n    layoutDefinition (def) {\n        if (def) {\n            this._layoutDefinition = def;\n        }\n        return this._layoutDefinition;\n    }\n\n    addMultipleComponent (componentArray) {\n        componentArray.forEach((comp) => {\n            this.addComponent(comp);\n        });\n    }\n\n    sanitizedDefinition () {\n        sanitizeConfig(this, this._layoutDefinition);\n        return this.layoutDefinition();\n    }\n\n    componentMap () {\n        return this._componentMap;\n    }\n    resetComponentMap () {\n        this._componentMap.clear();\n    }\n}\n","import DefinitionManager from '../layout-definition/definition-manager';\n\nexport function sanitizeConfig (context, hostObj) {\n    const hostID = hostObj.host();\n    if (hostObj.lanes() && hostObj.lanes().length) {\n        hostObj.lanes().forEach(childHost => sanitizeConfig(context, childHost));\n    }\n    if (hostID != null && typeof (hostID) === 'string') {\n        if (context.componentMap().get(hostID) !== undefined) {\n            hostObj.host(context.componentMap().get(hostID));\n        }\n    }\n}\n\nexport function calLayOutDef (context) {\n    const { height, width } = context.dimension();\n    const defManager = new DefinitionManager(context.layoutDef().componentMap(),\n                                              context.prioritySequence(),\n                                              height,\n                                              width);\n    const genLayoutdef = defManager.generateConfigModel();\n    return genLayoutdef;\n}\n","import {\n  LayoutModel\n} from '../layout-definition';\n\nimport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT\n} from '../constants/defaults';\n\nimport { DrawingManager } from '../drawing-manager';\nimport { removeElement } from '../drawing-manager/helper';\nimport { Utils } from '../utils';\nimport { LayoutDef } from './layout-def';\nimport { calLayOutDef } from './helper';\n\nexport default class LayoutManager {\n    constructor (conf) {\n        this._renderAt = conf.renderAt;\n        this._layoutClassName = conf.className;\n        this._dimension = {\n            width: conf.width || DEFAULT_WIDTH,\n            height: conf.height || DEFAULT_HEIGHT\n        };\n\n        this._skeletonType = conf.skeletonType || 'html';\n        this._layoutDefinition = null;\n        this._layoutDef = new LayoutDef();\n        this._drawingManager = null;\n        this._prioritySequence = [];\n        this.tree = null;\n        this._rootNodeID = null;\n    }\n\n    layoutDef (param) {\n        if (param) {\n            this._layoutDef = param;\n        }\n        return this._layoutDef;\n    }\n\n    prioritySequence (param) {\n        if (param) {\n            this._prioritySequence = param;\n        }\n        return this._prioritySequence;\n    }\n\n    dimension (param) {\n        if (param) {\n            Object.assign(this._dimension, param);\n        }\n        return this._dimension;\n    }\n\n    addComponent (component) {\n        this._layoutDef.addComponent(component);\n    }\n\n    addMultipleComponent (componentArray) {\n        this._layoutDef.addMultipleComponent(componentArray);\n    }\n\n    resetNode (node) {\n        if (this.con) {\n            this.con.resetNode(node);\n        }\n    }\n\n  /**\n   * function to update the node and rerender the layout.\n   * @param  {} config - node configuration to change.\n   */\n    updateNode (config) {\n        this.tree.updateNode(config);\n        this._layoutDefinition = this.tree.model;\n        this.compute();\n    }\n\n    compute () {\n        //----\n        if (Utils.isDOMElement(this._renderAt)) {\n            this._renderAt._layout = this;\n        } else {\n            document.getElementById(this._renderAt)._layout = this;\n        }\n        //-----\n        this._layoutDefinition = calLayOutDef(this);\n        this._layoutDef.layoutDefinition(this._layoutDefinition);\n        this._layoutDefinition = this._layoutDef.sanitizedDefinition();\n        this._layout = new LayoutModel({\n            width: this._dimension.width,\n            height: this._dimension.height\n        },\n            this._layoutDefinition);\n        this.tree = this._layout.negotiate().tree();\n        this._layout.broadcast();\n        this._drawingManager = new DrawingManager({\n            tree: this.tree,\n            componentMap: this._layoutDef.componentMap(),\n            layoutClassName: this._layoutClassName\n        }, this._skeletonType, this._renderAt);\n\n        if (this._rootNodeID) {\n            this.tree.id(this._rootNodeID);\n        } else {\n            this._rootNodeID = this.tree.id();\n        }\n    // this will draw all the components by calling their draw method\n        this._drawingManager.draw();\n    }\n\n    getRootNodeId () {\n        return this._rootNodeID;\n    }\n\n  /**\n  * This function takes the LayoutComponents and Register them in component store\n  * @param {Array<LayoutComponent>} layoutComponents\n  */\n    registerComponents (layoutComponents) {\n        this._prioritySequence.length = 0;\n        this._layoutDef.resetComponentMap();\n        layoutComponents.forEach((container) => {\n            if (container) {\n                this._prioritySequence.push(container.name());\n                this.addComponent(container);\n                if (container.name() === 'grid') {\n                    container.component.forEach((componentArr) => {\n                        componentArr.forEach((compo) => {\n                            this.addComponent(compo);\n                        });\n                    });\n                }\n            }\n        });\n        return this;\n    }\n\n    getComponent (componentName) {\n        return this._layoutDef.componentMap().get(componentName);\n    }\n\n    removeComponent (id) {\n        return removeElement(id);\n    }\n\n    renderAt (mount) {\n        if (mount) {\n            this._renderAt = mount;\n        }\n        return this._renderAt;\n    }\n}\n","import { isEqual, STATE_NAMESPACES, selectElement, getValueParser } from 'muze-utils';\nimport { VisualGroup } from '@chartshq/visual-group';\nimport { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, DATA, CONFIG }\n    from '../constants';\nimport { canvasOptions } from './local-options';\nimport { LayoutManager } from '../../../layout/src/tree-layout';\n\n/**\n * Instantiate high level components. Canvas knows what all high level component it has.\n * @nice-to-have dynamic high level components.\n *  - Is it even required ?\n *  - Reactive to source (canvas) streaming ?\n * @param {*} context Canvas instance\n * @return {Object.<Array>} Arrays of Title, visualGroup, Legend\n */\nexport const initCanvas = (context) => {\n    const reg = context._registry.components;\n\n    return [new reg.VisualGroup(context._registry, Object.assign({\n        throwback: context._throwback\n    }, context.dependencies()))];\n};\n\nexport const fixScrollBarConfig = (config) => {\n    config.scrollBar.thickness = Math.min(50, Math.max(10, config.scrollBar.thickness));\n    return config;\n};\n\nexport const setLayoutInfForUnits = (context) => {\n    const layoutManager = context._layoutManager;\n    const boundBox = layoutManager.getComponent('grid').getBoundBox();\n    const valueMatrix = context.composition().visualGroup.matrixInstance().value;\n    const parentContainer = selectElement(`#${layoutManager.getRootNodeId()}`).node();\n    valueMatrix.each((cell) => {\n        cell.valueOf().parentContainerInf({\n            el: parentContainer,\n            dimensions: boundBox\n        });\n    });\n};\n\n/**\n *\n *\n * @memberof Canvas\n */\nexport const dispatchProps = (context) => {\n    const lifeCycleManager = context.dependencies().lifeCycleManager;\n    lifeCycleManager.notify({ client: context, action: 'beforeupdate' });\n    const visualGroup = context.composition().visualGroup;\n\n    const allOptions = context._allOptions;\n    for (const key in allOptions) {\n        const value = context[key]();\n        if (value !== null) {\n            visualGroup[key] && visualGroup[key](value);\n        }\n    }\n    const { invalidValues } = context.config();\n\n    visualGroup.valueParser(getValueParser(invalidValues));\n    visualGroup.createMatrices();\n    context._cachedProps = {};\n    lifeCycleManager.notify({ client: context, action: 'initialized' });\n    lifeCycleManager.notify({ client: context, action: 'updated' });\n};\n\nconst equalityChecker = (props, params) => {\n    let checker = () => false;\n    return !props.every((option, i) => {\n        switch (option) {\n        case ROWS:\n        case COLUMNS:\n        case DETAIL:\n            checker = isEqual('Array');\n            break;\n\n        case SHAPE:\n        case SIZE:\n        case COLOR:\n        case DATA:\n        case CONFIG:\n            checker = isEqual('Object');\n            break;\n        default:\n            checker = () => true;\n            break;\n        }\n        const oldVal = params[i][0];\n        const newVal = params[i][1];\n\n        return checker(oldVal, newVal);\n    });\n};\n\nconst updateChecker = (props, params) => props.every((option, i) => {\n    const val = params[i][1];\n    switch (option) {\n    case ROWS:\n    case COLUMNS:\n        return val !== null;\n\n    case DATA:\n        return val && !val.isEmpty();\n\n    default:\n        return true;\n\n    }\n});\n\nexport const notifyAnimationEnd = (context) => {\n    const centerMatrix = context.layout().viewInfo().viewMatricesInfo.matrices.center[1] || [];\n    const promises = [];\n    centerMatrix.forEach((cellArr) => {\n        cellArr.forEach((cell) => {\n            promises.push(cell.valueOf().done());\n        });\n    });\n    const lifeCycleManager = context.lifeCycle();\n    if (promises.length) {\n        Promise.all(promises).then(() => {\n            // Update life cycle\n            lifeCycleManager.notify({ client: context, action: 'drawn' });\n            const animDonePromises = [];\n\n            centerMatrix.forEach((cellArr) => {\n                cellArr.forEach((cell) => {\n                    cell.valueOf().layers().forEach((layer) => {\n                        animDonePromises.push(layer.animationDone());\n                    });\n                });\n            });\n\n            [context.xAxes(), context.yAxes()].forEach((axisArr) => {\n                axisArr = axisArr || [];\n                axisArr.forEach((axes) => {\n                    axes.forEach((axisInst) => {\n                        animDonePromises.push(axisInst.animationDone());\n                    });\n                });\n            });\n\n            Promise.all(animDonePromises).then(() => {\n                lifeCycleManager.notify({ client: context, action: 'animationend' });\n            });\n        });\n    } else {\n        lifeCycleManager.notify({ client: context, action: 'animationend' });\n    }\n};\n\nexport const setupChangeListener = (context) => {\n    const store = context._store;\n\n    const allOptions = Object.keys(context._allOptions);\n    const props = [...allOptions, ...Object.keys(canvasOptions)];\n    const nameSpaceProps = [...allOptions, ...Object.keys(canvasOptions)].map(prop =>\n        `${STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE}.${prop}`);\n    store.registerChangeListener(nameSpaceProps, (...params) => {\n        let updateProps = equalityChecker(props, params);\n        updateProps = updateChecker(props, params);\n\n        // inform attached board to rerender\n        if (updateProps && context.mount()) {\n            dispatchProps(context);\n            context.render();\n        }\n        notifyAnimationEnd(context);\n    }, true);\n};\n\nexport const applyInteractionPolicy = (firebolt) => {\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    if (visualGroup) {\n        const valueMatrix = visualGroup.matrixInstance().value;\n        const interactionPolicy = firebolt._interactionPolicy;\n        interactionPolicy(valueMatrix, firebolt);\n        const crossInteractionPolicy = firebolt._crossInteractionPolicy;\n        const behaviours = crossInteractionPolicy.behaviours;\n        const sideEffects = crossInteractionPolicy.sideEffects;\n        valueMatrix.each((cell) => {\n            const unitFireBolt = cell.valueOf().firebolt();\n            for (const key in behaviours) {\n                unitFireBolt.changeBehaviourStateOnPropagation(key, behaviours[key]);\n            }\n            for (const key in sideEffects) {\n                unitFireBolt.changeSideEffectStateOnPropagation(key, sideEffects[key]);\n            }\n        });\n    }\n};\n\n/**\n * Sets the rotation for all x axes if any axis has the rotation config set in the\n * entire view\n *\n * @param {Array} columns Column cells that contain the axes cells\n */\nexport const setLabelRotationForAxes = (context) => {\n    let rotation = 0;\n\n    const xAxes = context.xAxes() || [];\n\n    (() => {\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                const rotationVal = xAxes[i][j].renderConfig().labels.rotation;\n                if (rotationVal && rotationVal !== 0) {\n                    rotation = rotationVal;\n                    return;\n                }\n            }\n        }\n    })();\n\n    if (rotation) {\n        xAxes.forEach((axes) => {\n            axes.forEach((axis) => {\n                axis.renderConfig({ labels: { rotation } });\n                axis.smartTicks(axis.setTickConfig());\n            });\n        });\n    }\n};\n\nexport const createGroupState = (context) => {\n    const [globalState, localState] = VisualGroup.getState();\n    const store = context._store;\n    store.append('app.group', globalState);\n    store.append('local.group', localState);\n};\n\nexport const removeChild = (mount) => {\n    while (mount.firstChild) {\n        mount.removeChild(mount.firstChild);\n    }\n};\n\nexport const createLayoutManager = () => {\n    const layoutManager = new LayoutManager({\n        className: 'muze-group-container'\n    });\n    return layoutManager;\n};\n","/**\n * This is the global options semantics based on which setters getters are created and reactivity is initiated.\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n * @module GlobalOptions\n */\n\nimport { intSanitizer, mergeRecursive, DataModel } from 'muze-utils';\nimport { fixScrollBarConfig } from './canvas/helper';\nimport { DEFAULT_CONFIG } from './defaults';\n\nexport default {\n    data: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel\n        }\n    },\n    width: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    height: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitWidth: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitHeight: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    config: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config, oldConfig) => {\n                // Reset the configuration when null is passed\n                const oldConf = mergeRecursive({}, config === null ? {} : oldConfig);\n                const defConfig = mergeRecursive(oldConf, DEFAULT_CONFIG);\n                let newConf = mergeRecursive(defConfig, config);\n                newConf = fixScrollBarConfig(newConf);\n\n                return newConf;\n            }\n\n        }\n    }\n};\n","/**\n * This file exports constants that will be used to\n * create the state store of the table layout.\n */\n/**\n * The index of top, bottom and center in the matrix\n */\nexport const VIEW_INDEX = {\n    top: 0,\n    center: 1,\n    bottom: 2\n};\n\nexport const ROW_MATRIX_INDEX = {\n    0: 'top',\n    1: 'center',\n    2: 'bottom'\n};\n\nexport const COLUMN_MATRIX_INDEX = {\n    0: 'left',\n    1: 'middle',\n    2: 'right'\n};\n\n/**\n * The width of the grid suppied by the user.\n */\nexport const GRID_WIDTH = 'width';\n\n/**\n * The height of the grid supplied by the user.\n */\nexport const GRID_HEIGHT = 'height';\n\n/**\n  * The border for the grid\n  */\nexport const BORDER = 'border';\n\n /**\n  *  The index of the first visible row in view matrix.\n  */\nexport const ROW_POINTER = 'rowPointer';\n\n/**\n * The index of the first visible column in the view matrix.\n */\nexport const COLUMN_POINTER = 'columnPointer';\n\n/**\n * Flag to specify whether row sizes should be equal.\n */\nexport const ROW_SIZE_IS_EQUAL = 'isRowSizeEqual';\n\n/**\n * Flag to specify whether column sizes are equal.\n */\nexport const COLUMN_SIZE_IS_EQUAL = 'isColumnSizeEqual';\n\n/**\n * Field to store an array an of the widths of visible columns.\n * @computed\n */\nexport const COLUMN_WIDTHS = 'visibleColumnWidths';\n\n/**\n * Field to store an array of heights of visible rows.\n * @computed\n */\nexport const ROW_HEIGHTS = 'visibleRowHeights';\n\n/**\n * Field to store the width of the left matrix.\n * @computed\n */\nexport const LEFT_MATRIX_WIDTH = 'leftMatrixWidth';\n\n/**\n * Field to store the width of the right matrix.\n * @computed\n */\nexport const RIGHT_MATRIX_WIDTH = 'rightMatrixWidth';\n\n/**\n * Field to store the height of the top matrix.\n * @computed\n */\nexport const TOP_MATRIX_HEIGHT = 'topMatrixHeight';\n\n/**\n * Field to store the height of the bottom matrix.\n * @computed\n */\nexport const BOTTOM_MATRIX_HEIGHT = 'bottomMatrixHeight';\n\n/**\n * The dom element to render the layout inside.\n */\nexport const MOUNT_POINT = 'mount';\n\n/**\n * The id attribute of the left table element.\n */\nexport const LEFT_TABLE_ID = 'grid-left';\n\n/**\n * The id attribute of the right table element.\n */\nexport const RIGHT_TABLE_ID = 'grid-right';\n\n/**\n * The id attribute of the top table.\n */\nexport const TOP_TABLE_ID = 'grid-top';\n\n/**\n * The id attribute of the bottom table.\n */\nexport const BOTTOM_TABLE_ID = 'grid-bottom';\n\n/**\n * The id attribute of the center table.\n */\nexport const CENTER_TABLE_ID = 'grid-center';\n\n/**\n * The id attribute of the top div.\n */\nexport const TOP_DIV_ID = 'muze-div-top';\n\n/**\n * The id attribute of the bottom div.\n */\nexport const BOTTOM_DIV_ID = 'muze-div-bottom';\n\n/**\n * The id attribute of the center div.\n */\nexport const CENTER_DIV_ID = 'muze-div-center';\n\n/**\n * Field that indicates if the row configuration has changed\n */\nexport const HAVE_ROWS_CHANGED = 'haveRowsChanged';\n\n/**\n * Field that indicates if the column configuration has changed\n */\nexport const HAVE_COLUMNS_CHANGED = 'haveColumnsChanged';\n\n/**\n * Field that indicates if the values configuration for the center matrix has changed\n */\nexport const HAVE_VALUES_CHANGED = 'haveValuesChanged';\n\n/**\n * Field that indicates the width of row matrix\n */\nexport const ROW_MATRIX_WIDTH = 'rowMatrixWidth';\n\n/**\n * Field that indicates the height of row matrix\n */\nexport const COLUMN_MATRIX_HEIGHT = 'columnMatrixHeight';\n\n/**\n * Field that indicates the unit width of layout\n */\nexport const UNIT_WIDTH = 'unitWidth';\n\n/**\n * Field that indicates the unit height of layout\n */\nexport const UNIT_HEIGHT = 'unitHeight';\n\n/**\n * Field that indicates the style object\n */\nexport const STYLE = 'style';\n\n/**\n * Field that indicates the color configuration\n */\nexport const COLOR = 'color';\n\n/**\n * Field that indicates width\n */\nexport const WIDTH = 'width';\n\n/**\n * Field that indicates collpase property for border\n */\nexport const COLLAPSE = 'collapse';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SPACING = 'spacing';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const DISTRIBUTION = 'distribution';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const GUTTERSPACE = 'gutterSpace';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const BREAK_PAGE = 'breakPage';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_ROW_BORDERS = 'showRowBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_COL_BORDERS = 'showColBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_VALUE_BORDERS = 'showValueBorders';\n\nexport const HEIGHT = 'height';\nexport const COLUMN = 'column';\nexport const ROW = 'row';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const CENTER = 'center';\nexport const CLICK = 'click';\nexport const ROW_LEFT = 'rowLeft';\nexport const ROW_RIGHT = 'rowRight';\nexport const COLUMN_BOTTOM = 'colBottom';\nexport const COLUMN_TOP = 'colTop';\nexport const AUTO = 'auto';\nexport const ROW_SPAN = 'rowSpan';\nexport const COL_SPAN = 'colSpan';\nexport const ROW_ROOT = 'rowRoot';\nexport const COLUMN_ROOT = 'columnRoot';\nexport const PRIMARY = 'primary';\nexport const SECONDARY = 'secondary';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n\nexport const PAGINATION = 'pagination';\nexport const BUFFER = 'buffer';\nexport const HOLISTIC = 'holistic';\nexport const SCROLL = 'scroll';\nexport const MIDDLE = 'middle';\nexport const NO_BORDERS = null;\n\nexport const MAX_WIDTH_AVAIL_FOR_COL_MATRIX = 'maxWidthAvailableForColumnMatrix';\nexport const COLUMN_MATRIX = 'columnMatrix';\nexport const MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX = 'maxHeightAvailableForRowMatrix';\nexport const ROW_MATRIX = 'rowMatrix';\n","import { sanitizeIP, mergeRecursive } from 'muze-utils';\nimport { TOP, CENTER, BOTTOM } from '../enums/constants';\n\n/*\n * This is the abstract implementation of the root layout. This takes care of common work which all the layouts\n * has to handle. The common work includes sanitizaion of inputs, update, rerender, dispose etc. This class can't be\n * used directly (as ofcourse this is an abstract implementaiton), the class which is implementing it has to implement\n * the necessary methods and gives its on visual.\n */\n\n/**\n * This class is used to create a generic layout. It can be extended to create layouts\n * of different types\n * @class GenericLayout\n */\nexport default class GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config configuration to be given for the layout\n     * @param {Object} dependencies external dependencies.\n     *\n     * @memberof GenericLayout\n     *\n     */\n    constructor (mountPoint, measurement, config, dependencies) {\n        this._config = {};\n        this._measurement = {};\n        this._matrices = [];\n        // External dependencies to be included for the layout. This includes the ext global dependencies like\n        // smartlabel which has one single implementation of throughout the page or per isntance\n        this._dependencies = dependencies;\n\n        this.measurement(measurement);\n        this.mountPoint(mountPoint);\n        this.config(config);\n    }\n\n    /**\n     * Returns an object which is used to recreate the layout.\n     * @return {Object} the serialized components\n     */\n    serialize () {\n        return {\n            measurement: this.measurement(),\n            config: this.config(),\n            matrices: this.matrices()\n        };\n    }\n\n     /**\n     * Sets/Gets the config for the layout\n     * @param {Object} config configuration for the layout\n     * @return {Layout|Object} Gets the Config/ Returns this instance when set\n     */\n    config (config) {\n        if (config) {\n            this._config = mergeRecursive(this._config || {}, config);\n            this._config.border.width = Math.max(0, this._config.border.width);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Sets/Gets the measurement for the layout\n     * @param {Object} measurement measurement for the layout\n     * @return {Layout|Object} Gets the measurement/ Returns this instance when set\n     */\n    measurement (measurement) {\n        if (measurement) {\n            this._measurement = mergeRecursive(this._measurement || {}, measurement);\n\n            return this;\n        }\n        return this._measurement;\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     * @param {Object} matrices matrices for the layout\n     * @return {Layout|Object} Gets the matrices/ Returns this instance when set\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = sanitizeIP.typeObj([TOP, CENTER, BOTTOM], matrices);\n\n            return this;\n        }\n        return this._matrices;\n    }\n\n    /**\n     * Sets/Gets the matrix for row\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    rowMatrix (matrix) {\n        if (matrix) {\n            this._rowMatrix = matrix;\n            return this;\n        }\n        return this._rowMatrix;\n    }\n\n    /**\n     * Sets/Gets the matrix for columns\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    columnMatrix (matrix) {\n        if (matrix) {\n            this._columnMatrix = matrix;\n            return this;\n        }\n        return this._columnMatrix;\n    }\n\n   /**\n     * Sets/Gets the matrix for value\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    centerMatrix (matrix) {\n        if (matrix) {\n            this._centerMatrix = matrix;\n            return this;\n        }\n        return this._centerMatrix;\n    }\n\n    /**\n     * Sets/Gets the mountPoint for the layout\n     * @param {Object} mountPoint mountPoint for the layout\n     * @return {Layout|Object} Gets the mountPoint/ Returns this instance when set\n     */\n    mountPoint (mountPoint) {\n        if (mountPoint) {\n            this._mountPoint = mountPoint;\n\n            return this;\n        }\n        return this._mountPoint;\n    }\n}\n","import * as FieldNames from '../enums/constants';\n\n/**\n * Default configuration of the layout\n * @return {Object} returns the default configuration\n */\nexport const DEFAULT_CONFIGURATION = {\n    [FieldNames.BORDER]: {\n        [FieldNames.STYLE]: 'solid',\n        [FieldNames.COLOR]: '#d6d6d6',\n        [FieldNames.WIDTH]: 2,\n        [FieldNames.COLLAPSE]: true,\n        [FieldNames.SPACING]: 0\n    },\n    [FieldNames.PAGINATION]: 'scroll',\n    [FieldNames.BUFFER]: 20,\n    [FieldNames.GUTTERSPACE]: { rows: [], columns: [] },\n    [FieldNames.DISTRIBUTION]: { rows: [], columns: [] },\n    [FieldNames.BREAK_PAGE]: { rows: [], columns: [] },\n    [FieldNames.ROW_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_POINTER]: 0,\n    [FieldNames.ROW_POINTER]: 0\n};\n\n/**\n * Default measurements for the layout\n * @return {Object} returns the default measurements\n */\nexport const DEFAULT_MEASUREMENTS = {\n    [FieldNames.GRID_WIDTH]: 100,\n    [FieldNames.GRID_HEIGHT]: 100,\n    [FieldNames.UNIT_WIDTH]: 100,\n    [FieldNames.UNIT_HEIGHT]: 100\n};\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n","/**\n * This file exports utility functions that are used across the layout module\n */\nimport { Symbols } from 'muze-utils';\nimport { PRIMARY, SECONDARY, HEIGHT, WIDTH } from '../enums/constants';\n\nconst nest = Symbols.nest;\n/**\n *\n *\n * @param {*} isTransposed\n *\n */\nconst getMeasureInfo = (isTransposed) => {\n    if (isTransposed) {\n        return {\n            firstMeasure: HEIGHT,\n            secondMeasure: WIDTH\n        };\n    }\n    return {\n        firstMeasure: WIDTH,\n        secondMeasure: HEIGHT\n    };\n};\n\n/**\n *\n *\n * @param {*} i\n * @param {*} page\n *\n */\nconst findInPage = (i, page) => {\n    let count = 0;\n    for (const x in page) {\n        if (i < page[x]) {\n            count = x;\n            break;\n        }\n    }\n    return count;\n};\n\n/**\n * Creates a single matrix from two matrices\n *\n * @param {Array<Array>} matrix Input matrix\n * @return {Array<Array>} Joined matrix\n * @memberof VisualMatrix\n */\nexport const combineMatrices = (matrix, config) => {\n    const { isTransposed } = config;\n    let joinedMatrix = matrix[0].length > 0 ? matrix[0] : matrix[1];\n    if (isTransposed) {\n        joinedMatrix = matrix[0].length > 0 ? [...matrix[0]] : [];\n        joinedMatrix = matrix[1].length > 0 ? [...joinedMatrix, ...matrix[1]] : joinedMatrix;\n    } else {\n        joinedMatrix = joinedMatrix.map((row, rowIndex) => {\n            let rowData = [];\n            if (matrix[0].length > 0) {\n                rowData = [...matrix[0][rowIndex]];\n            }\n            if (matrix[1].length > 0) {\n                rowData = [...rowData, ...matrix[1][rowIndex]];\n            }\n            return rowData;\n        });\n    }\n    return joinedMatrix;\n};\n\n/**\n * Creates a hirachical tree from the context\n *\n * @param {Object} context context for creating tree\n * @return {Object} nested tree\n */\nexport const createTree = (context) => {\n    let matrixTree = {};\n    let lastLevelKey = 0;\n    let facet = PRIMARY;\n    const nestFn = nest();\n    const keys = [];\n    const layoutMatrix = context._layoutMatrix;\n    const primaryMatrix = context.primaryMatrix();\n    const secondaryMatrix = context.secondaryMatrix();\n    const { isTransposed, breakPage } = context.config();\n\n    if (!isTransposed) {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix[0].length - 1; i++) {\n                keys.push(i);\n            }\n            keys.push(primaryMatrix[0].length - 1);\n            if (facet === SECONDARY || secondaryMatrix.length === 0) {\n                lastLevelKey = primaryMatrix[0].length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const keyLength = primaryMatrix.length > 0 ? primaryMatrix[0].length : 0;\n            for (let i = secondaryMatrix[0].length - 1; i > 0; i--) {\n                keys.push(i + keyLength);\n            }\n            keys.push(keyLength);\n\n            if (facet === PRIMARY) {\n                lastLevelKey = keyLength;\n            }\n        } else {\n            lastLevelKey = primaryMatrix.length > 0 ? primaryMatrix[0].length - 1 : 0;\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        matrixTree = nestFn.entries(layoutMatrix);\n    } else {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix.length - 1; i++) {\n                keys.push(i);\n            }\n            // if (facet === PRIMARY) {\n            keys.push(primaryMatrix.length - 1);\n            // } else {\n            if (facet === SECONDARY) {\n                lastLevelKey = primaryMatrix.length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const primaryMatrixLength = primaryMatrix.length;\n            for (let i = secondaryMatrix.length - 1; i > 0; i--) {\n                keys.push(i + primaryMatrixLength);\n            }\n            // if (facet === SECONDARY) {\n            keys.push(primaryMatrixLength);\n            // }\n            if (facet === PRIMARY) {\n                lastLevelKey = primaryMatrixLength;\n            }\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        let newMatrix = [];\n        newMatrix = layoutMatrix[0].map((col, colIndex) => layoutMatrix.map(row => row[colIndex]));\n        matrixTree = nestFn.entries(newMatrix);\n    }\n    return { tree: matrixTree, lastLevelKey };\n};\n\n/**\n * Gives the min measues\n *\n * @param {boolean} isTransposed is column matrix\n * @param {Object} unitMeasures min measures to be given to cells\n * @return {Object} dimension min cell\n */\nexport const getMinMeasures = (isTransposed, unitMeasures) => {\n    if (!isTransposed) {\n        return {\n            height: unitMeasures.height,\n            width: 0\n        };\n    }\n    return {\n        height: 0,\n        width: unitMeasures.width\n    };\n};\n\n/**\n * Get the logical space from the tree\n *\n * @param {Node} item tree to be calculated\n * @param {number} measures width and height\n * @param {Array} minMeasures min measures for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} dimension\n */\nexport const getLogicalSpace = (item, measures, minMeasures, maxMeasure = []) => {\n    const { firstMeasure, secondMeasure } = measures;\n    let firstMeasureValue = 0;\n    let secondMeasureValue = 0;\n    item.values.forEach((valueArray) => {\n        let fMeasure = 0;\n        let sMeasure = 0;\n        valueArray.forEach((placeholder, colIndex) => {\n            placeholder.setAvailableSpace();\n            const space = placeholder.getLogicalSpace();\n            const minSecondMeasure = placeholder.getMinMeasures(minMeasures[secondMeasure]);\n\n            sMeasure = Math.max(sMeasure, +space[secondMeasure], minSecondMeasure);\n            maxMeasure[colIndex] = Math.max(maxMeasure[colIndex] || 0, space[firstMeasure]);\n            fMeasure += +maxMeasure[colIndex];\n        });\n        secondMeasureValue += sMeasure;\n        firstMeasureValue = Math.max(firstMeasureValue, fMeasure);\n        item.space = {\n            [secondMeasure]: Math.ceil(secondMeasureValue),\n            [firstMeasure]: Math.ceil(firstMeasureValue)\n        };\n    });\n    return {\n        [secondMeasure]: secondMeasureValue,\n        [firstMeasure]: firstMeasureValue\n    };\n};\n\n/**\n * Computes the logical spcae taken by the matrix tree\n *\n * @param {*} [item={}] tree to be viewed\n * @param {boolean} [isTransposed=false] is column matrix\n * @param {*} unitMeasures min measues for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} logical space taken\n */\nexport const computeLogicalSpace = (item = {}, config, maxMeasures) => {\n    const { isTransposed = false, unitMeasures } = config;\n    const { firstMeasure, secondMeasure } = getMeasureInfo(isTransposed);\n    const { values } = item;\n    const minMeasures = getMinMeasures(isTransposed, unitMeasures);\n\n    if (values[0].key) {\n        const logicalSpace = { [firstMeasure]: 0, [secondMeasure]: 0 };\n\n        values.forEach((valueItem) => {\n            // Compute logical space for lowest level\n            const space = computeLogicalSpace(valueItem, config, maxMeasures);\n            // Set logical space for first measure\n            logicalSpace[firstMeasure] = Math.max(logicalSpace[firstMeasure], space[firstMeasure],\n                minMeasures[firstMeasure]);\n\n            // Set logical space for second measure\n            logicalSpace[secondMeasure] += +space[secondMeasure];\n        });\n        item.space = logicalSpace;\n        return logicalSpace;\n    }\n\n    return getLogicalSpace(item, { firstMeasure, secondMeasure }, minMeasures, maxMeasures);\n};\n\n/**\n * Gives the space taken by a row\n *\n * @param {Array} row matrix array of rows\n * @return {Object} dimension of the row\n */\nexport const spaceTakenByRow = (row) => {\n    let height = 0;\n    let width = 0;\n    row.forEach((col) => {\n        const spaces = col.getLogicalSpace();\n        height = Math.max(height, spaces.height);\n        width += spaces.width;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Gives the space taken by a column\n *\n * @param {Array<Array>} matrix column matrix\n * @param {number} colIndex column index\n * @return {Object} dimension of the column\n */\nexport const spaceTakenByColumn = (matrix, colIndex) => {\n    let height = 0;\n    let width = 0;\n    matrix.forEach((row) => {\n        const col = row[colIndex];\n        const spaces = col.getLogicalSpace();\n        width = Math.max(width, spaces.width);\n        height += spaces.height;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Creates different level matrices\n *\n * @param {Object} item matrix tree\n * @param {boolean} isTransposed is column matrix\n * @return {Object} matrix of each level\n */\nexport const createMatrixEachLevel = (item, isTransposed) => {\n    if (item.values[0].key) {\n        const arr = [];\n        item.values.forEach((child) => {\n            if (!isTransposed) {\n                arr.push(...createMatrixEachLevel(child, isTransposed));\n            } else {\n                const eachLevel = createMatrixEachLevel(child, isTransposed);\n                eachLevel.forEach((e, i) => {\n                    arr[i] = arr[i] || [];\n                    arr[i].push(...e);\n                });\n            }\n        });\n        item.matrix = arr;\n        return arr;\n    }\n    if (!isTransposed) {\n        item.matrix = item.values;\n    } else {\n        item.matrix = item.values[0].map((col, colIndex) => item.values.map(row => row[colIndex]));\n    }\n    return item.matrix;\n};\n\n/**\n * Breaks the matrix into two part\n *\n * @param {Array<Array>} matrix input matrix\n * @param {boolean} isTransposed is column matrix\n * @param {number} breakPointer point in matrix where it is to be broken\n * @return {Array} two broken matrix\n */\nexport const breakMatrix = (matrix, isTransposed, breakPointer) => {\n    const primaryMatrix = [];\n    const secondaryMatrix = [];\n    if (isTransposed) {\n        matrix.forEach((row, rowIndex) => {\n            if (rowIndex >= breakPointer) {\n                secondaryMatrix.push(row);\n            } else {\n                primaryMatrix.push(row);\n            }\n        });\n    } else {\n        matrix.forEach((row, rowIndex) => {\n            row.forEach((column, columnIndex) => {\n                if (columnIndex >= breakPointer) {\n                    secondaryMatrix[rowIndex] = secondaryMatrix[rowIndex] || [];\n                    secondaryMatrix[rowIndex].push(column);\n                } else {\n                    primaryMatrix[rowIndex] = primaryMatrix[rowIndex] || [];\n                    primaryMatrix[rowIndex].push(column);\n                }\n            });\n        });\n    }\n    return [primaryMatrix, secondaryMatrix];\n};\n\n/**\n * Distributed width returned\n *\n * @param {Object} context context for the width distibution\n * @return {number} distributed widths\n */\nexport const getDistributedWidth = (context, layoutConfig) => {\n    const {\n        availableWidth,\n        width,\n        row\n    } = context;\n    const {\n        isDistributionEqual,\n        isTransposed,\n        distribution\n    } = layoutConfig;\n    let distSum = 0;\n    if (distribution && distribution[0]) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    return row.map((col, colIndex) => {\n        const space = col.getLogicalSpace().width;\n        let distWidth = (space + (availableWidth - width) * (space / width));\n        if (isTransposed) {\n            if (distribution.length > 0) {\n                distWidth = (availableWidth * distribution[colIndex] / distSum);\n            } else if (isDistributionEqual || width === 0) {\n                const rowLen = row.length;\n                distWidth = (availableWidth / rowLen);\n            }\n        }\n        return Math.floor(distWidth);\n    });\n};\n\n/**\n * Distributeed heights returned\n *\n * @param {Object} context input for the height distribution\n * @return {Object} distribured heights\n */\nexport const getDistributedHeight = (context) => {\n    let distSum = 0;\n    let gutterSum = 0;\n    let heightWithoutGutter = 0;\n    const {\n        isTransposed,\n        distribution,\n        availableHeight,\n        height,\n        isDistributionEqual,\n        gutter,\n        matrix,\n        cIdx\n    } = context;\n\n    if (distribution && distribution[0] !== undefined) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    if (gutter && gutter[0] !== undefined) {\n        gutterSum = gutter.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    heightWithoutGutter = availableHeight - Math.floor(availableHeight * gutterSum);\n\n    const colLen = matrix.length;\n    return matrix.map((row, rIdx) => {\n        const col = row[cIdx];\n        const space = col.getLogicalSpace().height;\n        let distHeight = (space + (heightWithoutGutter - height) * (space / height));\n\n        if (!isTransposed) {\n            if (distribution.length > 0 && colLen === distribution.length) {\n                distHeight = (heightWithoutGutter * distribution[rIdx] / distSum);\n            } else if (isDistributionEqual || context.height === 0) {\n                distHeight = (heightWithoutGutter / colLen);\n            }\n        }\n        return Math.floor(distHeight);\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} beg\n * @param {*} end\n */\nexport const extraCellsRemover = (arr, beg, end) => arr.slice(beg, -end);\n\n/**\n * Creates matrix instancess\n *\n * @param {Array} [arr=[]] mutated arry\n * @param {number} depth depth of the tree\n * @param {Array} matrixInfo Details about the matrix(tree, etc) to be inserted\n * @param {boolean} layout Instance of layout\n */\nexport const createMatrixInstances = (arr = [], depth, matrixInfo, layout) => {\n    const breakPointer = layout._breakPointer;\n    const config = layout.config();\n    const {\n        isTransposed\n    } = config;\n    const {\n        tree,\n        layoutMatrix\n    } = matrixInfo;\n\n    if (depth === 0) {\n        const brokenMatrix = breakMatrix(tree.matrix, isTransposed, breakPointer);\n        arr.push({\n            matrix: tree.matrix,\n            primaryMatrix: brokenMatrix[0],\n            secondaryMatrix: brokenMatrix[1],\n            space: tree.space\n        });\n        return arr;\n    }\n    const nextLevel = depth - 1;\n    tree.values.forEach((e) => {\n        createMatrixInstances(arr, nextLevel, {\n            tree: e,\n            layoutMatrix\n        }, layout);\n    });\n    return arr;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    maxMeasures: {},\n    availableSpace: {},\n    logicalSpace: {}\n};\n","import { PRIMARY } from '../enums/constants';\n/**\n *\n *\n */\nexport const defaultConfig = {\n    distribution: [],\n    classPrefix: 'muze',\n    isDistributionEqual: true,\n    unitMeasures: {\n        height: 100,\n        width: 100,\n        border: 1\n    },\n    isTransposed: false,\n    facet: PRIMARY,\n    extraCellLengths: []\n};\n","import { mergeRecursive, generateGetterSetters, ERROR_MSG } from 'muze-utils';\nimport {\n    createTree,\n    combineMatrices,\n    createMatrixInstances\n  } from '../utils';\nimport { PROPS } from './props';\nimport { HEIGHT, WIDTH } from '../enums/constants';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        // Prepare matrices\n        this._lastLevelKey = 0;\n        this._primaryMatrix = matrix[0] || [];\n        this._secondaryMatrix = matrix[1] || [];\n        this._maxMeasures = [];\n        this._availableSpace = {};\n\n        // Store the config\n        generateGetterSetters(this, PROPS);\n        const defCon = Object.assign({}, this.constructor.defaultConfig());\n        this.config(mergeRecursive(defCon, config));\n\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n    }\n\n     /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    computeViewableSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getPriorityDistribution () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @returns\n     * @memberof VisualMatrix\n     */\n    primaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._primaryMatrix;\n    }\n\n    secondaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._secondaryMatrix;\n    }\n\n    tree (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._tree;\n    }\n\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    createTree () {\n        const { tree, lastLevelKey } = createTree(this);\n        this._lastLevelKey = lastLevelKey;\n        return tree;\n    }\n\n    /**\n     * Returns the space taken by visual matrix\n     *\n     * @return {Object} space taken by the matrix\n     * @memberof VisualMatrix\n     */\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    /**\n     * Sets the provied space to the visual matrix\n     *\n     * @param {number} width width provided\n     * @param {number} height height provided\n     * @memberof VisualMatrix\n     */\n    setAvailableSpace (width, height) {\n        this.availableSpace({ width, height });\n        const tree = this.tree();\n        const heightMeasures = this.populateMaxMeasures(HEIGHT, tree);\n        const widthMeasures = this.populateMaxMeasures(WIDTH, tree);\n        const depth = this.calculateDepth(widthMeasures, heightMeasures);\n\n        this.viewableMatrix = this.createViewPortMatrix(depth);\n        this.viewableMeasures = this.redistributeSpaces(width, height);\n        return this;\n    }\n\n    /**\n     * Populate the max measures in the array\n     *\n     * @param {Array} measures array to be filled with max measures\n     * @param {Object} matrixTree matrix tree of visual matrix\n     * @param {number} measure width or height\n     * @param {number} [depth=0] depth of the tree that to be calculated\n     * @memberof VisualMatrix\n     */\n    populateMaxMeasures (type, matrixTree, depth = 0, measures = []) {\n        measures[depth] = Math.max(measures[depth] || 0, matrixTree.space[type]);\n        if (matrixTree.values) {\n            const childDepth = depth + 1;\n            matrixTree.values.forEach((child) => {\n                if (child.space) {\n                    measures = this.populateMaxMeasures(type, child, childDepth, measures);\n                }\n            });\n        }\n        return measures;\n    }\n\n    /**\n     * Gets the viewable measures for the current viewable matrix\n     *\n     * @return {Object} Set of viewable measures\n     * @memberof VisualMatrix\n     */\n    getViewableSpaces () {\n        return this.viewableMeasures;\n    }\n\n    /**\n     * Returns the matrix that can be viewed in the current viewport\n     *\n     * @return {Array} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    getViewableMatrices () {\n        return this.viewableMatrix;\n    }\n\n    /**\n     * Creates the viewport that can be viewed together\n     *\n     * @param {number} depth maxDepth that can be viewed in the viewport\n     * @return {Array<Object>} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    createViewPortMatrix (depth) {\n        const arr = [];\n        createMatrixInstances(arr, depth, this.removeExtraCells(), this);\n        return arr;\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    combineMatrices,\n    spaceTakenByColumn,\n    getDistributedHeight,\n    computeLogicalSpace,\n    createMatrixEachLevel\n  } from '../utils';\nimport { ROW_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class RowVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = (matrix[0].length > 0 ? matrix[0][0].length : 0);\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n\n        // Create Tree\n        this._tree = {\n            key: ROW_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, false);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height\n        } = measures;\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i };\n            const { widths, rowHeights, columnWidths } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = [height, height];\n            const columnMeasures = widths;\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n        tree.matrix = extraCellsRemover(tree.matrix, begCellLen, endCellLen);\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        let remainingAvailWidth;\n        let remainingWidth;\n        let cWidths = [];\n        let conditions = [];\n        let maxPrioritySpace = 0;\n        const {\n            matrix,\n            width: availableWidth,\n            maxMeasures: maxWidths,\n            maxWidth: currentWidth,\n            height\n        } = measures;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length ? this.primaryMatrix()[0].length : 0;\n\n        const dist = [];\n\n        remainingAvailWidth = availableWidth;\n        remainingWidth = currentWidth;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            // divider = Math.min(2, matrixLen);\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            // divider = Math.min(1, matrixLen);\n        }\n        conditions.forEach((i) => {\n            dist[i] = maxWidths[i];\n            maxPrioritySpace += maxWidths[i];\n            remainingAvailWidth -= dist[i];\n            remainingWidth -= dist[i];\n        });\n        matrix[0].forEach((e, i) => {\n            if (conditions.indexOf(i) === -1) {\n                dist[i] = remainingAvailWidth * (maxWidths[i] / remainingWidth);\n            }\n        });\n        matrix.forEach(row => row.forEach((col, cIdx) => {\n            if (conditions.indexOf(cIdx) === -1) {\n                col.setAvailableSpace(dist[cIdx], height);\n\n                cWidths[cIdx] = Math.max(cWidths[cIdx] || 0, Math.floor(col.getLogicalSpace().width));\n            } else {\n                cWidths[cIdx] = 0;\n            }\n        }));\n\n        const prioritySpace = availableWidth - cWidths.reduce((t, n) => t + n);\n        if (prioritySpace < 0) {\n            cWidths = cWidths.map(() => 0);\n        } else {\n            conditions.forEach((i) => {\n                cWidths[i] = Math.floor(prioritySpace * (dist[i] / maxPrioritySpace || 1));\n            });\n        }\n        return cWidths;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures, heightMeasures) {\n        let i;\n        const { height } = this.availableSpace();\n\n        for (i = 0; i < heightMeasures.length; i++) {\n            if (heightMeasures[i] <= height) break;\n        }\n\n        return Math.min(widthMeasures.length - 1, i);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n        const maxMeasures = this.maxMeasures();\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        const logicalWidths = this.getPriorityDistribution({\n            matrix: this._layoutMatrix,\n            maxWidth,\n            maxMeasures,\n            width,\n            height\n        });\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths, logicalWidths };\n            const measures = this.redistributeViewSpaces(options);\n            maxWidths = measures.maxWidths;\n            maxHeights = measures.maxHeights;\n        });\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let cWidths = [];\n        let rHeights = [];\n        let mHeight = 0;\n        const maxMeasures = this.maxMeasures();\n\n        const {\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        } = this.config();\n        const { matrix, height, maxHeights, maxWidths, logicalWidths } = measures;\n        mHeight = spaceTakenByColumn(matrix, this._lastLevelKey).height;\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        measures.maxMeasures = maxMeasures;\n        measures.maxWidth = maxWidth;\n        if (maxWidth > 0) {\n            cWidths = logicalWidths;\n        } else {\n            cWidths = maxMeasures.map(() => 0);\n        }\n        rHeights = getDistributedHeight({\n            matrix,\n            cIdx: this._lastLevelKey,\n            height: mHeight,\n            availableHeight: height,\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        });\n        if (maxWidths.length > 0) {\n            cWidths = cWidths.map((e, i) => Math.max(e, maxWidths[0][i] || 0));\n        }\n        maxWidths.push(cWidths);\n        for (let x = 0; x < maxWidths.length; x++) {\n            maxWidths[x] = cWidths;\n        }\n        maxHeights.push(rHeights);\n        return { maxWidths, maxHeights };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = maxHeights[matrixIndex][rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth, colHeight - borderWidth);\n\n                if (rIdx === 0 && cIdx < breakPointer) {\n                    columnWidths[0][cIdx] = colWidth;\n                    widths[0] = (widths[0] || 0) + colWidth;\n                } else if (rIdx === 0 && cIdx >= breakPointer) {\n                    columnWidths[1][cIdx - breakPointer] = colWidth;\n                    widths[1] = (widths[1] || 0) + colWidth;\n                }\n                if (cIdx === this._lastLevelKey) {\n                    rowHeights[0][rIdx] = colHeight;\n                    rowHeights[1][rIdx] = colHeight;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    getDistributedWidth,\n    spaceTakenByRow,\n    createMatrixEachLevel,\n    computeLogicalSpace\n  } from '../utils';\nimport { COLUMN_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class ColumnVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = matrix[0].length;\n\n        // Create Tree\n        this._tree = {\n            key: COLUMN_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, true);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height,\n            width\n        } = measures;\n\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i, height };\n            const {\n                heights,\n                rowHeights,\n                columnWidths\n            } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = heights;\n            const columnMeasures = [width, width];\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n\n        tree.matrix = tree.matrix.map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        const {\n            height,\n            maxHeights\n        } = measures;\n        let remainingHeight = height;\n        let heightDist = [];\n        let conditions = [];\n        let divider = 2;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            divider = 2;\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            divider = 1;\n        }\n        maxHeights.forEach((heights, index) => {\n            if (conditions.indexOf(index) === -1) {\n                heightDist[index] = heights;\n                remainingHeight -= heights;\n            }\n        });\n        if (remainingHeight < 0) {\n            heightDist = heightDist.map(() => 0);\n        } else {\n            conditions.forEach((condition) => {\n                heightDist[condition] = Math.min(maxHeights[condition], (remainingHeight) / divider);\n            });\n        }\n        return heightDist;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures) {\n        let j;\n        const { width } = this.availableSpace();\n\n        for (j = 0; j < widthMeasures.length; j++) {\n            if (widthMeasures[j] <= width) break;\n        }\n        return Math.min(widthMeasures.length - 1, j);\n    }\n\n     /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths };\n            const maxMeasures = this.redistributeViewSpaces(options);\n            maxWidths = maxMeasures.maxWidths;\n            maxHeights = maxMeasures.maxHeights;\n        });\n\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space column wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let rHeights = [];\n        const {\n            matrix,\n            width,\n            maxHeights,\n            maxWidths\n        } = measures;\n        const borderWidth = this.config().unitMeasures.border;\n\n        const mWidth = spaceTakenByRow(matrix[this._lastLevelKey]).width;\n        const cWidths = getDistributedWidth({\n            row: matrix[this._lastLevelKey],\n            width: mWidth,\n            availableWidth: width\n        }, this.config());\n\n        matrix.forEach((row, rIdx) => row.forEach((col, cIdx) => {\n            const oldLogicalSpace = col.getLogicalSpace();\n\n            col.setAvailableSpace(cWidths[cIdx] - borderWidth, oldLogicalSpace.height);\n            rHeights[rIdx] = Math.max(rHeights[rIdx] || 0, Math.floor(col.getLogicalSpace().height));\n        }));\n        if (maxHeights.length > 0) {\n            rHeights = rHeights.map((e, i) => Math.max(e, maxHeights[0][i]));\n        }\n        maxHeights.push(rHeights);\n        for (let x = 0; x < maxHeights.length; x++) {\n            maxHeights[x] = rHeights;\n        }\n        maxWidths.push(cWidths);\n        return { maxHeights, maxWidths };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, height, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        const heightDistribution = this.getPriorityDistribution({ height, maxHeights: maxHeights[0] || [] });\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = heightDistribution[rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth - borderWidth, colHeight);\n\n                if (cIdx === 0 && rIdx < breakPointer) {\n                    rowHeights[0][rIdx] = colHeight;\n                    heights[0] = (heights[0] || 0) + colHeight;\n                } else if (cIdx === 0 && rIdx >= breakPointer) {\n                    rowHeights[1][rIdx - breakPointer] = colHeight;\n                    heights[1] = (heights[1] || 0) + colHeight;\n                }\n                if (rIdx === this._lastLevelKey) {\n                    columnWidths[0][cIdx] = colWidth;\n                    columnWidths[1][cIdx] = colWidth;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import {\n    HEIGHT, WIDTH, COLUMN, ROW, HORIZONTAL, VERTICAL, HOLISTIC,\n    MAX_WIDTH_AVAIL_FOR_COL_MATRIX, COLUMN_MATRIX, MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX, ROW_MATRIX, SCROLL\n} from '../enums/constants';\n\n/**\n * Gets measurement for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @return {Object} Logical height/width of the matrix\n */\nexport function getMatrixMeasurement (matrix, type) {\n    if (matrix) {\n        return matrix.getLogicalSpace()[type];\n    }\n    return 0;\n}\n\n/**\n * Sets available space for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @param {number} value Value of measurement\n */\nexport function setMatrixMeasurement (matrix, type, value) {\n    if (matrix) {\n        const spaces = matrix.getLogicalSpace();\n        if (value && spaces[type] !== value) {\n            type === HEIGHT ? matrix.setAvailableSpace(spaces.width, value) :\n                matrix.setAvailableSpace(value, spaces.height);\n        }\n    }\n}\n\nconst setAvailableSpace = (matrix, widths, heights) => {\n    matrix.forEach((row, rIdx) => {\n        row.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(widths[cIdx], heights[rIdx]);\n        });\n    });\n};\n\nconst setViewSpaces = (layout, pointerType, viewSpaces) => {\n    let pointer = layout.config()[`${pointerType}Pointer`];\n    if (viewSpaces.length - 1 < pointer) {\n        pointer = 0;\n        layout.config({ [`${pointerType}Pointer`]: pointer });\n    }\n    return pointer;\n};\n\nconst paginationDetailsMap = {\n    column: {\n        maxMeasure: MAX_WIDTH_AVAIL_FOR_COL_MATRIX,\n        matrix: COLUMN_MATRIX,\n        measureType: WIDTH,\n        scrollType: HORIZONTAL\n    },\n    row: {\n        maxMeasure: MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX,\n        matrix: ROW_MATRIX,\n        measureType: HEIGHT,\n        scrollType: VERTICAL\n    }\n};\n\n/**\n * This method provides the required width/height in the different pagination stages.\n * If the pagination is holistic, then only the max width/height will be provided for layouting\n * If scroll is enabled, then the entire width/height shall be provided for layouting\n * Note: width is required for scrolling the columns while height is required for scrolling rows\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {Object} measureDetails different measure details for row/column\n * @param {number} maxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst getMatrixMeasureForPagination = (layout, measureDetails, maxMeasure, buffer) => {\n    const {\n        pagination\n    } = layout.config();\n    const {\n        matrix,\n        measureType,\n        scrollType\n    } = measureDetails;\n\n    switch (pagination) {\n    case HOLISTIC:\n        return maxMeasure;\n    default: {\n        const actualMeasure = getMatrixMeasurement(layout[matrix](), measureType) + buffer;\n\n        if (actualMeasure > maxMeasure) {\n            layout.scrollInfo({ [scrollType]: true });\n        }\n        return Math.max(maxMeasure, actualMeasure);\n    }\n    }\n};\n\n/**\n * This method uses the getMatrixMeasureForPagination function to calculate maximum measure\n * depending on the layouting algorithm used\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {string} matrixType row/column\n * @param {number} relatedMaxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst paginationMeasureGetter = (layout, matrixType, relatedMaxMeasure, buffer) =>\n    getMatrixMeasureForPagination(layout, paginationDetailsMap[matrixType], relatedMaxMeasure, buffer);\n\nconst getMatrixWidthDetails = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const {\n        width\n    } = layout.measurement();\n    const {\n        border,\n        buffer\n    } = layout.config();\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get width of row matrix\n    const rowMatrixWidth = getMatrixMeasurement(rowMatrix, WIDTH);\n\n    // Get maximum width allowed for the row matrix\n    const maxRowMatrixWidth = Math.min(rowMatrixWidth + buffer, width / 2);\n\n    // Get maximum width available for the column matrix\n    const maxWidthAvailableForColumnMatrix = width - maxRowMatrixWidth - borderWidth;\n\n    // Set width for column matrix\n    const columnMatrixWidth = paginationMeasureGetter(layout, COLUMN, maxWidthAvailableForColumnMatrix, 0);\n\n    return {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n\nconst getHeightRequiredByColMatrix = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const columnMatrix = layout.columnMatrix();\n\n    // Get maximum allowed height for colum matrix\n    const maxColumnMatrixHeight = Math.min(columnMatrix.getLogicalSpace().height, height / 2);\n\n    // Set the computed width and max height to column matrix to determine the actual height\n    // that will be taken by the column matrix\n    columnMatrix.setAvailableSpace(columnMatrixWidth, maxColumnMatrixHeight);\n\n    // Get the set of pages column view\n    const columnViewPages = columnMatrix.getViewableSpaces();\n\n    // Figuring out total space needed by current view space\n    const columnViewSpace = columnViewPages[layout.config().columnPointer];\n\n    // Getting height of column matrix\n    const columnMatrixHeight = columnViewSpace.height.primary + columnViewSpace.height.secondary;\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight\n    };\n};\n\nconst getMatrixHeightDetails = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const {\n        buffer\n    } = layout.config();\n\n    // Get actual height required by column matrix\n    const { columnMatrixHeight, maxColumnMatrixHeight } = getHeightRequiredByColMatrix(layout, columnMatrixWidth);\n\n    // Based on column height, compute max height available for row matrix\n    const maxHeightAvailableForRowMatrix = height - Math.min(maxColumnMatrixHeight, columnMatrixHeight);\n\n    // Get height for row matrix\n    const rowMatrixHeight = paginationMeasureGetter(layout, ROW, maxHeightAvailableForRowMatrix, buffer);\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    };\n};\n\nconst setValueMatrixMeasurements = (layout, rowViewableSpaces, columnViewableSpaces) => {\n    const centerMatrix = layout.centerMatrix();\n\n    const {\n        border\n    } = layout.config();\n    const matrices = layout.matrices();\n    const {\n        top,\n        bottom\n    } = matrices;\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get the heights for each cell in the row matrix\n    const rowHeights = [].concat(...rowViewableSpaces.map(e => e.rowHeights.primary));\n\n    // Get the widths for each of the row matrix cells(primary and secondary)\n    const rowWidthsPrimary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.primary));\n    const rowWidthsSecondary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.secondary));\n\n    // Get the widths for each cell in the column matrix\n    const columnWidths = [].concat(...columnViewableSpaces.map(e => e.columnWidths.primary));\n\n    // Get the widths for each of the column matrix cells(primary and secondary)\n    const columnHeightsPrimary = columnViewableSpaces[0].rowHeights.primary;\n    const columnHeightsSecondary = [].concat(...columnViewableSpaces.map(e => e.rowHeights.secondary));\n\n    // Setting the available space for each cell in the centre matrix computed throught the row and\n    // column matrices\n    centerMatrix.forEach((matrix, rIdx) => {\n        matrix.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(columnWidths[cIdx] - borderWidth, rowHeights[rIdx] - borderWidth);\n        });\n    });\n\n    // Set the heights and widths for the corner matrices namely:\n    // TOP_LEFT\n    setAvailableSpace(top[0], rowWidthsPrimary, columnHeightsPrimary);\n    // TOP_RIGHT\n    setAvailableSpace(top[2], rowWidthsSecondary, columnHeightsPrimary);\n    // BOTTOM_LEFT\n    setAvailableSpace(bottom[0], rowWidthsPrimary, columnHeightsSecondary);\n     // BOTTOM_RIGHT\n    setAvailableSpace(bottom[2], rowWidthsSecondary, columnHeightsSecondary);\n};\n\nconst bufferCondition = {\n    isScroll: true,\n    pagination: SCROLL\n};\n\nconst getBufferFromCondition = (layout, type) => {\n    const scrollInfo = layout.scrollInfo();\n    const {\n        pagination\n    } = layout.config();\n\n    const currentBufferType = {\n        pagination,\n        isScroll: scrollInfo[type]\n    };\n\n    return Object.keys(bufferCondition).every(e => bufferCondition[e] === currentBufferType[e]);\n};\n\nconst getActualBufferFromConfig = (layout) => {\n    const {\n        buffer\n    } = layout.config();\n    const [horizontalBuffer, verticalBuffer] = [HORIZONTAL, VERTICAL].map((type) => {\n        if (getBufferFromCondition(layout, type)) {\n            return buffer;\n        }\n        return 0;\n    });\n\n    return {\n        horizontalBuffer,\n        verticalBuffer\n    };\n};\n/**\n * Computes the measurements of space for all matrices in the\n * layout\n *\n * @param {Object} layout Instance of grid layout\n * @return {Object} set of measurements for the layout\n */\nexport const computeLayoutMeasurements = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n\n    // Compute the widths of the row and column matrices\n    const {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        maxWidthAvailableForColumnMatrix,\n        columnMatrixWidth\n    } = getMatrixWidthDetails(layout);\n\n    // Compute the heights of the row and column matrices\n    const {\n        columnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    } = getMatrixHeightDetails(layout, columnMatrixWidth);\n\n    const {\n        horizontalBuffer,\n        verticalBuffer\n    } = getActualBufferFromConfig(layout);\n    rowMatrix.setAvailableSpace(maxRowMatrixWidth - verticalBuffer, rowMatrixHeight - horizontalBuffer);\n\n    // Get row and columns viewable spaces\n    const rowViewableSpaces = rowMatrix.getViewableSpaces();\n    const columnViewableSpaces = columnMatrix.getViewableSpaces();\n\n    // Set view spaces for row and columns\n    setViewSpaces(layout, ROW, rowViewableSpaces);\n    setViewSpaces(layout, COLUMN, columnViewableSpaces);\n\n    // Set measures for each cell of the value matrix\n    setValueMatrixMeasurements(layout, rowViewableSpaces, columnViewableSpaces);\n\n    return {\n        rowMatrixHeight: rowMatrixHeight - horizontalBuffer,\n        rowMatrixWidth: rowMatrixWidth - verticalBuffer,\n        maxHeightAvailableForRowMatrix: maxHeightAvailableForRowMatrix - horizontalBuffer,\n\n        columnMatrixHeight,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n","/**\n * Gets view matrices based on current pointers for row and column\n *\n * @param {Object} layout instance of layout\n * @param {number} rowPointer current row pointer\n * @param {number} columnPointer current column pointer\n * @return {Object} returns the view matrix and its relevant information\n */\nexport const getViewMatrices = (layout, rowPointer, columnPointer) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const centerMatrix = layout.centerMatrix();\n    const matrices = layout.matrices();\n    const rowMatrices = rowMatrix.getViewableMatrices();\n    const columnMatrices = columnMatrix.getViewableMatrices();\n    const centralMatrixPointer = {\n        row: 0,\n        column: 0\n    };\n\n    for (let i = rowPointer - 1; i >= 0; i--) {\n        const length = Math.max(rowMatrices[i].primaryMatrix.length,\n            rowMatrices[i].secondaryMatrix.length);\n        centralMatrixPointer.row += length;\n    }\n     /* istanbul ignore next */\n    for (let i = columnPointer - 1; i >= 0; i--) {\n        const matrix = columnMatrices[i];\n        const { primaryMatrix, secondaryMatrix } = matrix;\n        const length = Math.max(primaryMatrix[0] ? primaryMatrix[0].length : 0,\n            secondaryMatrix[0] ? secondaryMatrix[0].length : 0);\n        centralMatrixPointer.column += length;\n    }\n\n    matrices.top[1] = columnMatrices[columnPointer].primaryMatrix;\n    matrices.bottom[1] = columnMatrices[columnPointer].secondaryMatrix;\n\n    matrices.center[0] = rowMatrices[rowPointer].primaryMatrix;\n    matrices.center[2] = rowMatrices[rowPointer].secondaryMatrix;\n\n    const rowMatrixLen = Math.max(matrices.center[0].length, matrices.center[2].length);\n     /* istanbul ignore next */\n    const columnMatrixLen = Math.max(matrices.top[1][0] ? matrices.top[1][0].length : 0, matrices.bottom[1][0] ?\n            matrices.bottom[1][0].length : 0);\n    matrices.center[1] = centerMatrix.slice(centralMatrixPointer.row, centralMatrixPointer.row + rowMatrixLen)\n        .map(matrix => matrix.slice(centralMatrixPointer.column, centralMatrixPointer.column + columnMatrixLen));\n\n    return {\n        matrices,\n        rowPages: rowMatrices.length,\n        columnPages: columnMatrices.length\n    };\n};\n\nconst measureSum = measureArr => measureArr.reduce((total, measure) => total + measure, 0);\n/**\n * Returns measurements of the cells of the current matrix\n *\n * @param {Object} layout instance of layout\n * @return {Object} returns the measurements for current view matrix\n */\nexport const getViewMeasurements = (layout, maxRowHeight, maxColWidth) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const {\n        columnPointer,\n        rowPointer\n    } = layout.config();\n\n    const rowSpaces = rowMatrix.getViewableSpaces()[rowPointer];\n    const colSpaces = columnMatrix.getViewableSpaces()[columnPointer];\n\n    const {\n        rowHeights,\n        width: rowMatrixWidth\n    } = rowSpaces;\n    const {\n        columnWidths,\n        height: columnMatrixHeight\n    } = colSpaces;\n\n    const { primary: leftWidth, secondary: rightWidth } = rowMatrixWidth;\n    const { primary: topHeight, secondary: bottomHeight } = columnMatrixHeight;\n\n    const centerHeight = measureSum(rowHeights.primary);\n    const centerWidth = measureSum(columnWidths.primary);\n    const viewWidth = [leftWidth, Math.min(centerWidth, maxColWidth), rightWidth];\n    const viewHeight = [topHeight, Math.min(centerHeight, maxRowHeight), bottomHeight];\n\n    return {\n        viewWidth,\n        viewHeight,\n        actualCenterMeasures: {\n            height: centerHeight,\n            width: centerWidth\n        },\n        totalMeasures: {\n            width: measureSum(viewWidth),\n            height: measureSum(viewHeight)\n        },\n        unitHeights: rowHeights,\n        unitWidths: columnWidths\n    };\n};\n","/**\n * This file declares a table that can be extended to create a Datagrid, crosstab\n * and man other visualzations that require a tabular structure.\n */\n\nimport { getUniqueId, mergeRecursive } from 'muze-utils';\nimport GenericLayout from '../generic-layout';\nimport { DEFAULT_CONFIGURATION, DEFAULT_MEASUREMENTS } from './defaults';\nimport { generateVisualMatrices } from './layout-helper';\nimport { computeLayoutMeasurements } from './computations';\nimport { getViewMeasurements, getViewMatrices } from './view-info-getter';\n/**\n * This class is used to create a tabular structure that\n * can house charts and values.\n *\n * @class GridLayout\n */\nexport default class GridLayout extends GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} matrices Set of upto 9 matrices containing the cells to be rendered\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config external configurations.\n     * @memberof GenericLayout\n     */\n    constructor (matrices, mountPoint, measurement, config) {\n        super(mountPoint, measurement, config);\n        this.matrices(matrices);\n        this.config(this.constructor.defaultConfig());\n        this._layoutId = getUniqueId();\n        this._viewInfo = this.constructor.defaultViewInfo();\n        this._scrollInfo = { horizontal: false, vertical: false };\n    }\n\n    static defaultViewInfo () {\n        return Object.assign({}, {\n            layoutDimensions: {\n                border: this.defaultConfig().border,\n                viewHeight: [0, 0, 0],\n                viewWidth: [0, 0, 0]\n            },\n            viewMatricesInfo: {\n                columnPages: 0,\n                rowPages: 0,\n                matrices: { top: [], center: [], bottom: [] }\n            }\n        });\n    }\n\n    /**\n     * Returns initial set of measurements for the grid layout\n     *\n     * @static\n     * @return {Object} Returns initial set of measurements\n     * @memberof GridLayout\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENTS;\n    }\n\n    /**\n     * Returns initialconfiguration for grid layout\n     *\n     * @static\n     * @return {Object} Returns initial configuration for grid layout\n     * @memberof GridLayout\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIGURATION;\n    }\n\n    /**\n     * This function is used to return an instance of GridLayout\n     *\n     * @return {GridLayout} Instance of grid layout.\n     * @static\n     * @memberof GridLayout\n     */\n    static create () {\n        return new GridLayout(null, null, this.defaultMeasurement(), this.defaultConfig());\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     *\n     * @param {Array} matrices Set of matrices\n     * @return {Object} Getter/Setter\n     * @memberof GridLayout\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = generateVisualMatrices(this, matrices);\n            return this;\n        }\n        return super.matrices(matrices);\n    }\n\n    /**\n     * Triggers the computations for the layout based on the matrices available\n     * This causes a reflow in the entire layout system.\n     *\n     * @return {Object} Layout instance\n     * @memberof GridLayout\n     */\n    triggerReflow () {\n        this.scrollInfo({ horizontal: false, vertical: false });\n        const {\n            maxHeightAvailableForRowMatrix,\n            maxWidthAvailableForColumnMatrix\n        } = computeLayoutMeasurements(this);\n\n        this.setViewInformation(maxHeightAvailableForRowMatrix, maxWidthAvailableForColumnMatrix);\n        return this;\n    }\n\n    gotoPage (type, pageNumber) {\n        const pageType = type.toLowerCase();\n        const { viewMatricesInfo } = this.viewInfo();\n        const totalPages = viewMatricesInfo[`${pageType}Pages`];\n        const pointer = Math.min(Math.max(1, pageNumber), totalPages);\n        this.config({\n            [`${pageType}Pointer`]: pointer - 1\n        });\n        this.setViewInformation();\n        this.renderGrid();\n        return this;\n    }\n\n    pages (type) {\n        const { viewMatricesInfo } = this.viewInfo();\n        const pageType = type.toLowerCase();\n        return {\n            totalPages: viewMatricesInfo[`${pageType}Pages`],\n            currentPage: this.config()[`${pageType}Pointer`] + 1\n        };\n    }\n\n    viewInfo (...viewInfo) {\n        if (viewInfo.length) {\n            this._viewInfo = viewInfo[0];\n            return this;\n        }\n        return this._viewInfo;\n    }\n\n    scrollInfo (...scrollInfo) {\n        if (scrollInfo.length) {\n            this._scrollInfo = mergeRecursive(this._scrollInfo, scrollInfo[0]);\n            return this;\n        }\n        return this._scrollInfo;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof GridLayout\n     */\n    setViewInformation (maxRowHeight, maxColWidth) {\n        const {\n            rowPointer,\n            columnPointer,\n            border\n        } = this.config();\n        const viewMatricesInfo = getViewMatrices(this, rowPointer, columnPointer);\n        const layoutDimensions = getViewMeasurements(this, maxRowHeight, maxColWidth);\n        layoutDimensions.border = border;\n        this.viewInfo({\n            viewMatricesInfo,\n            layoutDimensions\n        });\n        return this;\n    }\n}\n","import RowMatrix from '../visual-matrix/row-matrix';\nimport ColumnMatrix from '../visual-matrix/column-matrix';\n\nexport const generateVisualMatrices = (context, matrices) => {\n    // Set of matrices for layout is generated starting with the left matrix\n    let leftMatrix = [];\n    let rightMatrix = [];\n    let topMatrix = [];\n    let bottomMatrix = [];\n    let begColCells;\n    let endColCells;\n    const {\n        isRowSizeEqual,\n        isColumnSizeEqual,\n        gutterSpace,\n        distribution,\n        border,\n        breakPage,\n        priority\n    } = context.config();\n    const {\n        minUnitHeight,\n        minUnitWidth\n    } = context.measurement();\n    const { top, center, bottom } = matrices;\n    const [topLeft, topColumns, topRight] = top;\n    const [leftRows, valueMatrix, rightRows] = center;\n    const [bottomLeft, bottomColumns, bottomRight] = bottom;\n\n    if (leftRows.length > 0) {\n        // If no left matrix is present, context will be empty\n        leftMatrix = [...topLeft, ...leftRows, ...bottomLeft];\n    }\n    if (rightRows.length > 0) {\n        // If no right matrix is present, context will be empty\n        rightMatrix = [...topRight, ...rightRows, ...bottomRight];\n    }\n    if (topColumns.length > 0 && topColumns[0].length > 0) {\n        // If no top matrix is present, context will be empty\n        topMatrix = topColumns.map((d, i) => [...topLeft[i], ...d, ...topRight[i]]);\n    }\n    if (bottomColumns.length > 0 && bottomColumns[0].length > 0) {\n        // If no bottom matrix is present, context will be empty\n        bottomMatrix = bottomColumns.map((d, i) => [...bottomLeft[i], ...d, ...bottomRight[i]]);\n    }\n\n    context.rowMatrix(new RowMatrix([leftMatrix, rightMatrix], {\n        isDistributionEqual: isRowSizeEqual,\n        distribution: distribution.rows,\n        gutter: gutterSpace.rows,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.row,\n        breakPage: breakPage.rows.map(e => e + Math.max(topLeft.length, topRight.length)),\n        extraCellLengths: [topLeft.length, bottomLeft.length]\n    }));\n\n    if (topLeft.length > 0) {\n        begColCells = topLeft[0].length;\n    } else {\n        begColCells = bottomLeft.length > 0 ? bottomLeft[0].length : 0;\n    }\n\n    if (topRight.length > 0) {\n        endColCells = topRight[0].length;\n    } else {\n        endColCells = bottomRight.length > 0 ? bottomRight[0].length : 0;\n    }\n\n    context.columnMatrix(new ColumnMatrix([topMatrix, bottomMatrix], {\n        isDistributionEqual: isColumnSizeEqual,\n        distribution: distribution.columns,\n        gutter: gutterSpace.columns,\n        isTransposed: true,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.col,\n        breakPage: breakPage.columns,\n        extraCellLengths: [begColCells, endColCells]\n    }));\n    context.centerMatrix(valueMatrix);\n\n    return matrices;\n};\n","import {\n    TOP, BOTTOM, LEFT, RIGHT, CENTER, BLANK_BORDERS, COLUMN, ROW,\n    VIEW_INDEX, ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, MIDDLE, NO_BORDERS\n} from '../enums/constants';\n\nconst borderMap = {\n    [`${TOP}-${LEFT}`]: NO_BORDERS,\n    [`${TOP}-${MIDDLE}`]: COLUMN,\n    [`${TOP}-${RIGHT}`]: NO_BORDERS,\n    [`${CENTER}-${LEFT}`]: ROW,\n    [`${CENTER}-${MIDDLE}`]: CENTER,\n    [`${CENTER}-${RIGHT}`]: ROW,\n    [`${BOTTOM}-${LEFT}`]: NO_BORDERS,\n    [`${BOTTOM}-${MIDDLE}`]: COLUMN,\n    [`${BOTTOM}-${RIGHT}`]: NO_BORDERS\n};\n\nconst applySpecificBorder = (cells, color, type, style) => {\n    cells.style(`border-${type}`, `${style} ${color}`);\n};\n\nconst specificBorderApplier = (borderTypes, showBorders, cells, borderInfo) => {\n    const {\n        color,\n        width,\n        style\n    } = borderInfo;\n    const borderStyle = `${width}px ${style}`;\n\n    borderTypes.forEach((borderType) => {\n        applySpecificBorder(cells, showBorders[borderType] ? color : BLANK_BORDERS, borderType, borderStyle);\n    });\n};\n\nconst borderApplier = (cells, borderInfo) => {\n    const {\n       showRowBorders,\n      showColBorders,\n      showValueBorders\n  } = borderInfo;\n    return {\n        row: () => specificBorderApplier([TOP, BOTTOM], showRowBorders, cells, borderInfo),\n        column: () => specificBorderApplier([LEFT, RIGHT], showColBorders, cells, borderInfo),\n        center: () => specificBorderApplier([LEFT, RIGHT, TOP, BOTTOM], showValueBorders, cells, borderInfo)\n    };\n};\n\nexport const applyBorders = (cells, border, row, column) => {\n    const borderApplierFn = borderApplier(cells, border);\n    const borderMapVal = borderMap[`${ROW_MATRIX_INDEX[VIEW_INDEX[row]]}-${COLUMN_MATRIX_INDEX[column]}`];\n    if (borderMapVal) {\n        borderApplierFn[borderMapVal]();\n    }\n};\n","import { selectElement } from 'muze-utils';\nimport {\n     TOP, BOTTOM, ROW_SPAN, COL_SPAN, CENTER, ROW, COLUMN\n} from '../enums/constants';\n\nconst orderMaker = arr => Array.from(Array(arr.length).keys());\n\nconst nestByStack = (stack, updateArr, optionalParams = {}) => {\n    let {\n        order,\n        keyFn\n    } = optionalParams;\n    const arr = updateArr.slice();\n    const currStack = stack.slice();\n    const prevStack = currStack.slice();\n    // Order in which element are to be checked for nesting, default normal looping\n    // Order is always in the order of nest, i.e., left to right\n    order = order || Array.from(Array(arr.length).keys());\n\n    // Key function, if array of objects\n    keyFn = keyFn || (v => v);\n\n    // Return same array if stack is empty\n    if (currStack.length === 0) {\n        const newArr = [];\n        order.forEach((e) => {\n            newArr.push(arr[e]);\n        });\n        return { prevStack, currStack: arr, arr: newArr };\n    }\n\n    let arrVal = '';\n    let stackVal = '';\n    const newArr = [];\n\n    // Loop in order\n    for (let i = order.length - 1; i >= 0; i--) {\n        // Get current element index from the order given\n        const currElemIndex = order[i];\n\n        // Crete a hashmap for the hierarchy by joining strings of the array for both stack and input array\n        arrVal += keyFn(arr[currElemIndex]);\n        stackVal += keyFn(currStack[currElemIndex]);\n\n        // If the current value and value in stack is same, convert it to null\n        if (arrVal === stackVal) {\n            newArr[currElemIndex] = null;\n        } else {\n            stackVal = '';\n            // Loop from the current index in order to the last element in order to change the\n            // whole hierarchy\n            for (let j = i; j < order.length; j++) {\n                const newElem = order[j];\n                const arrElem = arr[newElem];\n\n                newArr[newElem] = arrElem;\n\n                // Reset stack to new stack\n                currStack[newElem] = arrElem;\n                stackVal = arrVal;\n            }\n        }\n    }\n    const returnArr = [];\n    order.forEach((e) => {\n        returnArr.push(newArr[e]);\n    });\n    return { prevStack, currStack, arr: returnArr };\n};\n\nconst spanCalculator = (colData, colIdx, matrix, rIdx) => {\n    // if data is not header cell then rowspan\n    // has to be 1\n    if (!colData) {\n        return () => 1;\n    }\n\n    const conditions = {\n        row: count => matrix[rIdx + count] && matrix[rIdx + count][colIdx],\n        column: count => matrix[rIdx][colIdx + count]\n    };\n\n    return (type) => {\n        let count = 1;\n        let isNull = false;\n\n        while (!isNull) {\n            if (conditions[type](count) === null) {\n                count += 1;\n            } else {\n                isNull = true;\n            }\n        }\n        return count;\n    };\n};\n\nconst maskCreator = (matrix, order) => ({\n    row: () => {\n        let stack = [];\n        return matrix.map((e) => {\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, e, { keyFn: val => val.valueOf(), order });\n\n            stack = currStack;\n            return arr;\n        });\n    },\n    column: () => {\n        let stack = [];\n        const viewMatrix = [];\n        matrix.length && matrix[0].forEach((cell, colIndex) => {\n            const hierarchy = [];\n            matrix.forEach((row) => {\n                hierarchy.push(row[colIndex]);\n            });\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, hierarchy, { keyFn: val => val.valueOf(), order });\n            stack = currStack;\n\n            matrix.forEach((row, rowIndex) => {\n                viewMatrix[rowIndex] = viewMatrix[rowIndex] || [];\n                viewMatrix[rowIndex][colIndex] = arr[rowIndex];\n            });\n        });\n        return viewMatrix;\n    }\n});\n\nconst spanGenerator = viewMatrix => ({\n    row: () => {\n        const spans = [];\n        viewMatrix.forEach((row, ridx) => {\n            spans[ridx] = spans[ridx] || [];\n            row.forEach((col, i) => {\n                if (viewMatrix[ridx][i]) {\n                    const currSpan = spanCalculator(col, i, viewMatrix, ridx)('row');\n                    currSpan && spans[ridx].push(currSpan);\n                }\n            });\n        });\n        return spans;\n    },\n    column: () => viewMatrix.map((row, ridx) => row.map((col, i) => spanCalculator(col, i, viewMatrix, ridx)('column'))\n                    .filter(col => col !== 1))\n});\n\nconst getOrder = isReverse => ({\n    row: (matrix) => {\n        if (isReverse) {\n            return orderMaker(matrix[0]).reverse();\n        }\n        return orderMaker(matrix[0]);\n    },\n    column: (matrix) => {\n        if (isReverse) {\n            return orderMaker(matrix).reverse();\n        }\n        return orderMaker(matrix);\n    }\n});\n\nconst matrixSpanGeneratorMap = {\n    [`${TOP}-1`]: {\n        orderGetter: getOrder(false)[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${BOTTOM}-1`]: {\n        orderGetter: getOrder(true)[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${CENTER}-0`]: {\n        orderGetter: getOrder(false)[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    },\n    [`${CENTER}-2`]: {\n        orderGetter: getOrder(true)[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    }\n};\n\nconst matrixSpanGenerator = (type) => {\n    const generator = matrixSpanGeneratorMap[type];\n    if (generator) {\n        return generator;\n    }\n    return {\n        orderGetter: () => null,\n        viewMatrixMaker: matrix => () => matrix,\n        spanMaker: () => () => null\n    };\n};\n\n/**\n * This function is used to set the col and row spans\n * for the matrices based on repeated/hierarchichal data\n *\n * @export\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {string} type Type of array (center, top, bottom)\n * @param {number} index Index of array in the row\n * @return {Object} containing the view matrix and their spans\n */\nexport function cellSpanMaker (matrix, type, index) {\n    let spans = null;\n    let viewMatrix = matrix;\n    const {\n        orderGetter,\n        viewMatrixMaker,\n        spanMaker\n    } = matrixSpanGenerator(`${type}-${index}`);\n\n    if (matrix.length) {\n        const order = orderGetter(matrix);\n        viewMatrix = viewMatrixMaker(matrix, order)();\n        spans = spanMaker(viewMatrix)();\n    }\n    return { viewMatrix, spans };\n}\n\nconst spaceAllocationDueToSpan = (span = 1, placeholder, config, index) => {\n    const height = placeholder.availHeight();\n    const width = placeholder.availWidth();\n    const borderWidth = config.border.width;\n    const { unitWidths } = config.dimensions;\n    const { col } = index;\n\n    return {\n        [ROW_SPAN] () {\n            placeholder.setAvailableSpace(width, height * span);\n        },\n        [COL_SPAN] () {\n            if (span > 1) {\n                let cumulativeWidth = 0;\n                for (let i = col; i < col + span; i++) {\n                    cumulativeWidth += unitWidths.primary[i] - borderWidth;\n                }\n                placeholder.setAvailableSpace(cumulativeWidth + borderWidth, height);\n            }\n            selectElement(this).style('height', `${height}px`);\n        }\n    };\n};\n\nconst spanApplier = (cells, spans, config, type) => {\n    let cellCounter = 0;\n    cells.attr(type, function (cell, colIndex) {\n        const span = spans[cell.rowIndex][colIndex];\n        const placeholder = cell.placeholder;\n        const index = {\n            row: cell.rowIndex,\n            col: cellCounter\n        };\n\n        spaceAllocationDueToSpan(span, placeholder, config, index)[type].bind(this)();\n        cellCounter += span;\n        return span;\n    });\n};\n\nconst spanApplierMap = {\n    [`${TOP}-0`]: null,\n    [`${TOP}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${TOP}-2`]: null,\n    [`${CENTER}-0`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${CENTER}-1`]: null,\n    [`${CENTER}-2`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${BOTTOM}-0`]: null,\n    [`${BOTTOM}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${BOTTOM}-2`]: null\n};\n\nexport const applySpans = (cells, spans, config, type) => {\n    const applier = spanApplierMap[type];\n    if (applier) {\n        applier(cells, spans, config);\n    }\n};\n","import { ERROR_MSG } from 'muze-utils';\n/**\n * An Interface to be implemented if the transaction support is necessary. This class ensures reactivity to\n * global properties.\n */\nexport default class TransactionSupport {\n    /**\n     * Property accessor for data member of the class. Data is passed to the system by calling this method.\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for width of the class. Width is passed as an integer.\n     */\n    width () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for height of the class. Height is passed as an integer.\n     */\n    height () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for config of the class. Config is passed as an object.\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n}\n","import { TOP, BOTTOM, LEFT, TITLE, SUB_TITLE, GROUP, LAYOUT, LEGEND } from '../constants';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const arrangeComponents = (context) => {\n    const legendConfig = context.config().legend;\n    const titleConfig = context.title()[1];\n    const subtitleConfig = context.subtitle()[1];\n    const titleLayouts = {\n        [`${TOP}-${TOP}`]: [TITLE, SUB_TITLE, GROUP],\n        [`${BOTTOM}-${BOTTOM}`]: [GROUP, SUB_TITLE, TITLE],\n        [`${TOP}-${BOTTOM}`]: [TITLE, GROUP, SUB_TITLE],\n        [`${BOTTOM}-${TOP}`]: [SUB_TITLE, GROUP, TITLE]\n    };\n    const legendLayouts = [\n        [LEGEND, LAYOUT],\n        [LAYOUT, LEGEND]\n    ];\n    const titlePosition = titleConfig.position || TOP;\n    const subtitlePosition = subtitleConfig.position || TOP;\n\n    return {\n        headers: titleLayouts[`${titlePosition}-${subtitlePosition}`],\n        legends: legendConfig.position === LEFT || legendConfig.position === TOP ?\n        legendLayouts[0] : legendLayouts[1]\n    };\n};\n","/**\n * Flag to specify whether direction is vertical.\n */\nexport const MARGIN = 'margin';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const SPACE_FIXER = 'spaceFixer';\nexport const CLASSPREFIX = 'muze';\nexport const VERTICAL_ALIGN = 'verticalAlign';\nexport const TEXT_ALIGN = 'textAlign';\nexport const IS_OFFSET = 'isOffset';\nexport const MIDDLE = 'middle';\nexport const BASELINE = 'baseline';\nexport const SHOW = 'show';\nexport const CENTER = 'center';\nexport const TEXT = 'text';\nexport const HEADER = 'header';\nexport const HEIGHT = 'height';\nexport const WIDTH = 'width';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const FIELDS = 'fields';\nexport const TRANSFORM = 'transform';\nexport const LAYER_DEF = 'layerDef';\nexport const CONFIG = 'config';\nexport const DETAIL_FIELDS = 'detailFields';\nexport const MAX_LINES = 'maxLines';\nexport const MIN_CHARS = 'minCharacters';\nexport const ROTATION = 'rotation';\n\nexport const TEXT_CELL = 'text-cell';\nexport const AXIS_CELL = 'axis-cell';\nexport const GEOM_CELL = 'geom-cell';\nexport const BLANK_CELL = 'blank-cell';\n","// eneum to refer to simple cell\nexport const SIMPLE = 'simple';\n// eneum to refer to header cell\nexport const TEXT = 'text';\n// enum to refer to axis cell\nexport const AXIS = 'axis';\n// enum to refer to visual cell\nexport const GEOM = 'geom';\n// enum to refer blank cell\nexport const BLANK = 'blank';\n","import {\n    ERROR_MSG,\n    getUniqueId,\n    mergeRecursive\n} from 'muze-utils';\nimport { SIMPLE } from './enums/cell-type';\n\n/**\n * This file declares a class that is used as an interface to create new\n * SimpleCell elements.\n * @module SimpleCell\n */\n/**\n * Base class for all table cells.\n *\n * @interface\n * @class SimpleCell\n */\nclass SimpleCell {\n\n    /**\n     * Creates an instance of SimpleCell.\n     *\n     * @param {*} config The input configuration.\n     * @memberof SimpleCell\n     */\n    constructor (config) {\n        this._id = getUniqueId();\n\n        const defConfig = mergeRecursive({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(defConfig, config || {});\n\n        this._mount = null;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     */\n    get type () {\n        return SIMPLE;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     * @return {Object} Default config for the placeholder\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the value contained by the SimpleCell.\n     *\n     * @memberof SimpleCell\n     */\n    valueOf () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a unique identifier for the instance used\n     * to control selective rendering.\n     *\n     * @memberof SimpleCell\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized representation of the instance.\n     *\n     * @memberof SimpleCell\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns an object with width and height fields\n     * specifying the space taken up by this metod.\n     *\n     * @memberof SimpleCell\n     */\n    getLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Method used to set the space available to render the SimpleCell\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @memberof SimpleCell\n     */\n    setAvailableSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    remove () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getMinMeasures (providedMinMeasure = 0) {\n        return providedMinMeasure;\n    }\n\n}\n\nexport default SimpleCell;\n","/**\n * This file exports variables that are used as defaults for\n * the placeholders\n */\nimport * as CONSTANTS from './constants';\n\n /**\n * Default Configuration for the cells\n * @return {Object} Default configuration\n */\nexport const DEFAULT_CONFIG = {\n    [CONSTANTS.MARGIN]: {\n        [CONSTANTS.LEFT]: 0,\n        [CONSTANTS.RIGHT]: 0,\n        [CONSTANTS.TOP]: 0,\n        [CONSTANTS.BOTTOM]: 0\n    },\n    [CONSTANTS.SPACE_FIXER]: 2,\n    [CONSTANTS.IS_OFFSET]: false,\n    [CONSTANTS.VERTICAL_ALIGN]: null,\n    [CONSTANTS.TEXT_ALIGN]: CONSTANTS.CENTER,\n    [CONSTANTS.SHOW]: true,\n    [CONSTANTS.MAX_LINES]: 0,\n    [CONSTANTS.MIN_CHARS]: 0,\n    [CONSTANTS.ROTATION]: null\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { GEOM, TEXT, AXIS, BLANK } from './enums/cell-type';\n\nconst DEFAULT_PROPS = {\n    mount: {},\n    availHeight: {},\n    availWidth: {},\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config, value)\n    },\n    logicalSpace: {},\n    minSpacing: {},\n    source: {}\n};\n\nconst geomProps = {\n    data: {},\n    caption: {},\n    config: {},\n    axes: {},\n    facetByFields: {},\n    fields: {},\n    transform: {},\n    layerDef: {},\n    detailFields: {}\n};\n\nconst textProps = {\n    smartText: {}\n};\nexport const PROPS = {\n    [GEOM]: mergeRecursive(geomProps, DEFAULT_PROPS),\n    [TEXT]: mergeRecursive(textProps, DEFAULT_PROPS),\n    [AXIS]: DEFAULT_PROPS,\n    [BLANK]: DEFAULT_PROPS\n};\n","/**\n * This file declares a class that represents a table cell\n * used to house an axis.\n * @module VisualCell\n */\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport { CLASSPREFIX, HEIGHT, WIDTH, AXIS_CELL, BOTTOM, TOP } from './enums/constants';\nimport SimpleCell from './simple-cell';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { AXIS } from './enums/cell-type';\nimport { PROPS } from './props';\n\n/**\n * Computes the logical space of the an axis instance within an axis cell\n *\n * @param {Object} context Required to get the needed parameters to compute axis space\n * @return {Object} Returns the logical space for axis\n */\nconst computeAxisSpace = (context) => {\n    let logicalWidth;\n    let logicalHeight;\n    const axis = context.source();\n    const {\n        spaceFixer,\n        margin\n    } = context.config();\n    const {\n        width,\n        height\n    } = axis.getLogicalSpace();\n    const {\n            show\n        } = axis.config();\n    if (show === true) {\n        logicalHeight = Math.floor(height + margin.top + margin.bottom + spaceFixer);\n        logicalWidth = Math.floor(width + margin.left + margin.right + spaceFixer);\n    } else {\n        [logicalWidth, logicalHeight] = [width, height];\n    }\n    return {\n        width: logicalWidth,\n        height: logicalHeight\n    };\n};\n\n/**\n * Represents an axis cell.\n *\n * @class Axis\n */\nclass AxisCell extends SimpleCell {\n\n    /**\n     * Creates an instance of AxisCell.\n     *\n     * @param {Object} config The input config.\n     * @memberof AxisCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._axis = null;\n        this._availHeight = null;\n        this._availWidth = null;\n        this._logicalSpace = null;\n\n        generateGetterSetters(this, PROPS[AXIS]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof AxisCell\n     */\n    get type () {\n        return AXIS;\n    }\n\n    /**\n     * This method return the value conatined by this SimpleCell.\n     *\n     * @return {SimpleAxis | ColorAxis} Instance of SimpleAxis or ColorAxis.\n     * @memberof AxisCell\n     */\n    valueOf () {\n        return this.source().id;\n    }\n\n    /**\n     * This method return the unique identififer of the axis\n     *\n     * @return {string} Id of the axis.\n     * @memberof AxisCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Retrns the serialized representation of this cell.\n     *\n     * @return {Object}Object with serializable props.\n     * @memberof AxisCell\n     */\n    serialize () {\n        return {\n            type: AXIS,\n            axis: this.source().serialize()\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof AxisCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * return the space taken up by an axis element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof AxisCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeAxisSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @return {Instance} Returns current Instance\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        const {\n            margin,\n            isOffset\n        } = this.config();\n\n        if (width || height) {\n            this.source().setAvailableSpace(width, height, margin, isOffset);\n            this.source().logicalSpace(null);\n        } else {\n            this.source().resetLogicalSpace();\n        }\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the axis inside the axis cell.\n     *\n     * @param {HTMLElement} mount The mount point.\n     * @return {Selection} node where axis mounted\n     * @memberof AxisCell\n     */\n    /* istanbul ignore next */render (mount) {\n        if (!mount) {\n            return this;\n        }\n        let actualWidth = 0;\n        let actualHeight = 0;\n        const axis = this.source();\n        const availHeight = this.availHeight();\n        const availWidth = this.availWidth();\n        const {\n            margin\n        } = this.config();\n        const {\n            top,\n            bottom,\n            left,\n            right\n        } = margin;\n        const {\n            show,\n            orientation\n        } = axis.config();\n        const wrapperDiv = makeElement(selectElement(mount), 'div', [this], `${CLASSPREFIX}-${AXIS_CELL}`);\n        const selection = makeElement(wrapperDiv, 'svg', [1], `${CLASSPREFIX}-axis-container`);\n        selection.classed(`${CLASSPREFIX}-axis-container-${orientation}`, true);\n\n        this.mount(mount);\n        if (!availWidth) {\n            selection.attr(WIDTH, `${0}px`);\n        }\n        if (!availHeight) {\n            selection.attr(HEIGHT, `${0}px`);\n        }\n        actualWidth = availWidth;\n        actualHeight = availHeight;\n        if (!show) {\n            actualWidth = (orientation === TOP || orientation === BOTTOM) ? availWidth : 0;\n            actualHeight = (orientation === TOP || orientation === BOTTOM) ? 0 : availHeight;\n        }\n        wrapperDiv.style(WIDTH, `${actualWidth}px`)\n                        .style(HEIGHT, `${actualHeight}px`)\n                        .style('margin-top', top)\n                        .style('margin-bottom', bottom)\n                        .style('margin-left', left)\n                        .style('margin-right', right);\n\n        axis.mount(selection.node());\n        return selection;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Current instance of AxisCell\n     * @memberof AxisCell\n     */\n    remove () {\n        this.source() && this.source().remove();\n        this.mount() && this.mount().remove();\n        return this;\n    }\n}\n\nexport default AxisCell;\n\n","/**\n * This file declares a class that represents a BLANK element in a  table.\n * @module VisualCell\n */\nimport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    generateGetterSetters\n    } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { CLASSPREFIX, BLANK_CELL } from './enums/constants';\nimport { BLANK } from './enums/cell-type';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { PROPS } from './props';\n\n/**\n * Represents a table haeder.\n *\n * @class BLANK\n */\nclass BlankCell extends SimpleCell {\n\n    /**\n     * Creates an instance of BLANK.\n     * @param {Object} config The input configuration.\n     * @memberof BLANK\n     */\n    constructor (config) {\n        super(config);\n\n        generateGetterSetters(this, PROPS[BLANK]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof BlankCell\n     */\n    get type () {\n        return BLANK;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof BlankCell\n     */\n    valueOf () {\n        return this.id;\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof BlankCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the BLANK cell.\n     *\n     * @return {string} The unique identifier for the BLANK.\n     * @memberof BlankCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof BLANK\n     */\n    serialize () {\n        return {\n            type: BLANK\n        };\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof BLANK\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            return {\n                width: this.width || 0,\n                height: this.height || 0\n            };\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the BLANK cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof BLANK\n     */\n    /* istanbul ignore next */render (mount) {\n        if (mount) {\n            const { style } = this.config();\n            // append span element to mount point\n            this.mount(mount);\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id]);\n            elem.classed(`${CLASSPREFIX}-${BLANK_CELL}`, true);\n            elem.style('width', `${this.availWidth()}px`);\n            elem.style('height', `${this.availHeight()}px`);\n            elem.html('');\n            // apply style on the returned element\n            if (style) {\n                applyStyle(elem, style);\n            }\n        } return this;\n    }\n\n    /**\n     * Removes the cell(Disposal)\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n\n    getMinMeasures () {\n        return 0;\n    }\n }\nexport default BlankCell;\n","/**\n * This file declares a class that represents a Text element in a  table.\n * @module VisualCell\n */\n\nimport {\n    selectElement,\n    makeElement,\n    getSmartComputedStyle,\n    generateGetterSetters\n} from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { TEXT } from './enums/cell-type';\nimport { PROPS } from './props';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { CLASSPREFIX, TOP, BOTTOM, LEFT, RIGHT, HEADER, WIDTH, TEXT_CELL } from './enums/constants';\nimport './text-cell.scss';\n\nconst setSmartText = (context) => {\n    const source = context.source();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       rotation\n   } = context.config();\n    const {\n        left,\n        right,\n        top,\n        bottom\n     } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const labelManager = context.dependencies().labelManager;\n\n    labelManager.setStyle(context._computedStyle);\n\n    !rotation && context.smartText(labelManager.getSmartText(source, availWidth, availHeight, false));\n    rotation && context.smartText(labelManager.getSmartText(source, availHeight, availWidth, true));\n\n    return context;\n};\n\n/**\n* Computes the Logical Space for the text\n*\n* @param {Object} context Required to get the needed parameters to compute text space\n* @return {Object} Logical space taken up by text\n* @memberof TextCell\n*/\nconst computeTextSpace = (context) => {\n    const { labelManager } = context.dependencies();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       show,\n       maxLines,\n       minCharacters\n   } = context.config();\n    const {\n       left,\n       right,\n       top,\n       bottom\n    } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const source = context.source();\n    const space = context.smartText();\n    const minText = new Array(minCharacters).fill('W').join('');\n    const _minTextSpace = labelManager.getOriSize(minText);\n\n    context.config({ rotation: false });\n    if (space.width > (availWidth || 0) && maxLines) {\n        space.height = space.oriTextHeight * maxLines;\n    }\n    if (availWidth && availWidth < space.width) {\n        space.width = _minTextSpace.width;\n    }\n    if (availWidth && availWidth < Math.min(_minTextSpace.width, space.oriTextWidth)) {\n        const smartSpace = labelManager.getSmartText(source, availHeight, _minTextSpace.height, true);\n        space.width = smartSpace.height;\n        space.height = smartSpace.width;\n        context.config({ rotation: true });\n        context.smartText(smartSpace);\n    }\n\n    if (show) {\n        return {\n            width: Math.ceil(space.width) + paddedWidth,\n            height: Math.ceil(space.height) + paddedHeight\n        };\n    } return {\n        width: 0,\n        height: 0\n    };\n};\n\n/**\n * Represents a table haeder.\n *\n * @class Text\n */\nclass TextCell extends SimpleCell {\n\n    /**\n     * Creates an instance of Text.\n     * @param {Object} config The input configuration.\n     * @param {string} dependencies Dependencies for the class(labelManager)\n     * @memberof Text\n     */\n    constructor (config, dependencies) {\n        super(config);\n\n        this._dependencies = dependencies;\n        this._className = this._config.className ||\n                    (this._config.type === HEADER ? `${CLASSPREFIX}-${HEADER}-cell` : `${CLASSPREFIX}-${TEXT}-cell`);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'), this._className);\n        this._dependencies.labelManager.setStyle(this._computedStyle);\n        generateGetterSetters(this, PROPS[TEXT]);\n        const space = this._dependencies.labelManager.getOriSize('w');\n        this.minSpacing({ width: Math.floor(space.width * 3 / 4), height: Math.floor(space.height / 2) });\n        setSmartText(this);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof TextCell\n     */\n    get type () {\n        return TEXT;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof TextCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the Text cell.\n     *\n     * @return {string} The unique identifier for the Text.\n     * @memberof TextCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the dependencies of the instance\n     *\n     * @return {Object} Dependencies needed by the class\n     * @memberof TextCell\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof TextCell\n     */\n    serialize () {\n        return {\n            text: this.source(),\n            type: TEXT\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof TextCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof Text\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeTextSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        setSmartText(this);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the Text cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof Text\n     */\n    render (mount) {\n        const availWidth = this.availWidth();\n        const availHeight = this.availHeight();\n        const {\n            margin,\n            show,\n            verticalAlign,\n            textAlign,\n            rotation\n        } = this.config();\n\n        this.mount(mount);\n        if (show) {\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id], `${CLASSPREFIX}-${TEXT_CELL}`);\n            const vAlign = verticalAlign || rotation ? 'middle' : 'top';\n            const {\n                width,\n                height\n            } = this.smartText();\n            const {\n                height: minHeightSpace\n            } = this.minSpacing();\n            const translation = {\n                top: width + minHeightSpace / 2,\n                middle: width / 2 + minHeightSpace,\n                bottom: minHeightSpace\n            };\n\n            container.style('vertical-align', vAlign);\n\n            // Set class name\n            elem.classed(this._className, true);\n\n            // Apply styles\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            elem.style('transform', rotation ? `translate(${height / 2}px,\n                ${translation[vAlign]}px) rotate(-90deg)` : '');\n            elem.style(WIDTH, availWidth ? `${availWidth}px` : '100%');\n            [TOP, BOTTOM, LEFT, RIGHT].forEach((type) => {\n                container.style(`margin-${type}`, `${margin[type]}px`);\n            });\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            // set the text as the innerHTML\n            this._dependencies.labelManager.setStyle(this._computedStyle);\n            elem.html(this._dependencies.labelManager.getSmartText(this.source(), availWidth, availHeight, true).text);\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\n\nexport default TextCell;\n","/**\n * This file declares a class that is used to represent a table cell\n * that houses a visual unit.\n * @module VisualCell\n */\n\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { GEOM } from './enums/cell-type';\nimport { PROPS } from './props';\nimport {\n    CLASSPREFIX, HEIGHT, WIDTH, DATA, AXES, FACET_BY_FIELDS, FIELDS, TRANSFORM, LAYER_DEF, CONFIG, GEOM_CELL,\n    DETAIL_FIELDS\n} from './enums/constants';\nimport { DEFAULT_CONFIG } from './enums/defaults';\n\n/**\n * Calculates the logical space of the cell\n *\n * @param {Object} context Required to get the needed parameters to compute unit space\n * @return {Object} Logical space taken up by the unit\n * @memberof GeomCell\n */\nconst computeGeomSpace = (context) => {\n    const config = context.source().config();\n    const { width, height } = config;\n    return {\n        width: Math.ceil(width),\n        height: Math.ceil(height + context.getCaptionSpace().height)\n    };\n};\n\n /**\n * This class represents a SimpleCell for visual unit.\n *\n * @class GeomCell\n */\nclass GeomCell extends SimpleCell {\n\n    /**\n     * Creates an instance of GeomCell.\n     * @param {Object} config The input configuration.\n     * @memberof GeomCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._unit = null;\n        this._layers = null;\n        this._axes = {};\n        this._datamodel = {};\n        this._facetByFields = {};\n        this._fields = null;\n        this._transform = null;\n        this._caption = null;\n\n        generateGetterSetters(this, PROPS[GEOM]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof GeomCell\n     */\n    get type () {\n        return GEOM;\n    }\n\n    /**\n     * This method return the value contained by this cell.\n     *\n     * @return {VisualUnit} Instance of visual unit contained by visual unit.\n     * @memberof GeomCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return the id of the\n     * visual unit housed by this cell.\n     *\n     * @return {string} The unique id of the visual unit.\n     * @memberof GeomCell\n     */\n    get id () {\n        return this.source().id();\n    }\n\n    /**\n     * This method return a serialized representation of\n     * this instance.\n     *\n     * @return {Object} Object with serializable props.\n     * @memberof GeomCell\n     */\n    serialize () {\n        return {\n            type: GEOM,\n            unit: this.source().serialize(),\n            caption: this.caption()\n        };\n    }\n\n    /**\n     * return the default configuration for the geom cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof GeomCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * Updates the model based on the changed parameters\n     *\n     * @return {Instance} return instance\n     * @memberof GeomCell\n     */\n    updateModel () {\n        const unit = this.source();\n        unit.lockModel();\n        unit.clearCaching();\n        [LAYER_DEF, TRANSFORM, AXES, FIELDS, CONFIG, DATA, AXES, FACET_BY_FIELDS, DETAIL_FIELDS].forEach((prop) => {\n            this[prop]() && unit[prop](this[prop]());\n        });\n        unit.unlockModel();\n        return this;\n    }\n\n    /**\n     * It gives the space taken by the caption of the unit\n     *\n     * @return {Object} return the space taken by caption\n     * @memberof GeomCell\n     */\n    getCaptionSpace () {\n        const caption = this.caption();\n\n        let captionSpace = { width: 0, height: 0 };\n        if (caption) {\n            captionSpace = caption.getLogicalSpace();\n        }\n        return captionSpace;\n    }\n\n    /**\n     * return the space taken up by the element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof GeomCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeGeomSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space available to\n     * render the SimpleCell.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    setAvailableSpace (width, height) {\n        const unit = this.source();\n\n        this.availWidth(width);\n        this.availHeight(height);\n        unit.lockModel();\n        unit.width(width).height(height - this.getCaptionSpace().height);\n        unit.unlockModel();\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * his method is used to render the visual unit inside the provided cell.\n     *\n     * @param {HTMLElement} mount The mountpoint in the table.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    render (mount) {\n        if (mount) {\n            this.mount(mount);\n            const availHeight = this.availHeight();\n            const availWidth = this.availWidth();\n            const caption = this.caption();\n            const wrapperDiv = makeElement(selectElement(mount), 'div', [1], `${CLASSPREFIX}-${GEOM_CELL}`);\n\n            if (caption) {\n                const captionDom = makeElement(wrapperDiv, 'div', [caption], `${CLASSPREFIX}-unit-caption`).node();\n                caption.render(captionDom);\n            }\n            const selection = makeElement(wrapperDiv, 'div', [1], `${CLASSPREFIX}-unit`);\n            wrapperDiv.style(WIDTH, `${availWidth}px`).style(HEIGHT, `${availHeight}px`);\n            selection.style(WIDTH, `${availWidth}px`)\n                            .style(HEIGHT, `${availHeight - this.getCaptionSpace().height}px`);\n            this.source().mount(selection.node());\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Object} Current instance\n     * @memberof GeomCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        this.source().remove();\n        return this;\n    }\n}\n\nexport default GeomCell;\n","import AxisCell from './axis-cell';\nimport BlankCell from './blank-cell';\nimport TextCell from './text-cell';\nimport GeomCell from './geom-cell';\nimport SimpleCell from './simple-cell';\n\nimport * as CONSTANTS from './constants';\n\nexport const DEFAULT_PLACEHOLDERS = {\n    [CONSTANTS.SIMPLE_CELL]: SimpleCell,\n    [CONSTANTS.TEXT_CELL]: TextCell,\n    [CONSTANTS.AXIS_CELL]: AxisCell,\n    [CONSTANTS.GEOM_CELL]: GeomCell,\n    [CONSTANTS.BLANK_CELL]: BlankCell\n};\n\n","export const SIMPLE_CELL = 'SimpleCell';\nexport const TEXT_CELL = 'TextCell';\nexport const AXIS_CELL = 'AxisCell';\nexport const BLANK_CELL = 'BlankCell';\nexport const GEOM_CELL = 'GeomCell';\n\n","import { DEFAULT_PLACEHOLDERS } from './defaults';\n\n/**\n * Creates a registry for the cells, which can be used for\n * setting a new cell or getting the registered cells\n *\n * @return {Object} Setters and getters for registered cells\n */\nconst cellRegistry = () => {\n    const reg = DEFAULT_PLACEHOLDERS;\n    return {\n        set: (key, def) => {\n            if (key in reg) {\n                reg[key] = def;\n            }\n            return cellRegistry;\n        },\n        get: () => reg\n    };\n};\nexport default cellRegistry;\n","import { TextCell } from '@chartshq/visual-cell';\nimport { escapeHTML } from 'muze-utils';\nimport { TOP } from '../constants';\n\n/**\n *\n *\n * @param {*} rawContent\n *\n */\nconst resolveTitleSubTitleContent = (rawContent) => {\n    if (typeof rawContent === 'function' && !rawContent._sanitize) {\n        return rawContent();\n    }\n    return escapeHTML(rawContent());\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} cellType\n * @param {*} labelManager\n * @param {*} prevCell\n *\n */\nconst headerCreator = (config, cellType, labelManager, prevCell) => {\n    let margin = {};\n    const {\n        content,\n        classPrefix,\n        maxLines\n    } = config;\n    const cell = prevCell || new TextCell(\n        {\n            type: cellType === 'title' ? 'header' : 'text',\n            className: `${classPrefix}-${cellType}-cell`\n        }, {\n            labelManager\n        })\n     .config({ maxLines }).minSpacing({ width: 0, height: 0 });\n\n    cell.source(content);\n    cell._minTickDiff = { height: 0, width: 0 };\n\n    if (config.position === TOP) {\n        margin = { top: 0, bottom: config.padding };\n    } else {\n        margin = { top: config.padding, bottom: 0 };\n    }\n    cell.config({ margin });\n\n    return {\n        height: cell.getLogicalSpace().height,\n        cell\n    };\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} type\n * @param {*} labelManager\n * @param {*} cell\n *\n */\nconst createHeading = (config, type, labelManager, prevCell) => {\n    if (!config) { return ''; }\n\n    return headerCreator(\n        config,\n        type,\n        labelManager,\n        prevCell\n    );\n};\n\n/**\n *\n *\n * @param {*} context\n */\nexport const createHeaders = (context, canvasHeight, canvasWidth) => {\n    let headerHeight = 0;\n    const headers = {};\n    const subtitle = context.subtitle();\n    const isSubtitle = resolveTitleSubTitleContent(subtitle[0]);\n\n    canvasHeight >= 200 && canvasWidth >= 200 && ['title', 'subtitle'].forEach((type) => {\n        const headerOptions = context[type]();\n        const content = resolveTitleSubTitleContent(headerOptions[0]);\n        if (content) {\n            const config = headerOptions[1];\n\n            config.width = context.width();\n            config.height = context.height();\n            config.classPrefix = context.config().classPrefix;\n            config.content = content;\n            config.padding = (type === 'title' && !isSubtitle.length) ? subtitle[1].padding : config.padding;\n\n            const { height, cell } = createHeading(config, type, context.dependencies().smartlabel,\n                context[`${type}Cell`]);\n\n            headers[`${type}Cell`] = cell;\n            context._composition[type] = cell;\n            headerHeight += height;\n        }\n    });\n    return { headerHeight, headers };\n};\n\n","import { TextCell, AxisCell } from '@chartshq/visual-cell';\nimport { getValueParser, retrieveFieldDisplayName, DataModel, getObjProp } from 'muze-utils';\nimport {\n    VERTICAL, HORIZONTAL, LEFT, RIGHT, LEGEND_TYPE_MAP, PADDING, BORDER, MARGIN\n} from '../constants';\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n *\n */\nexport const legendCreator = (canvas) => {\n    let LegendCls;\n    const dataset = [];\n    const axes = canvas.getRetinalAxes();\n\n    Object.entries(axes).forEach((axisInfo) => {\n        const scale = axisInfo[1][0];\n        const scaleType = axisInfo[0];\n        const scaleProps = canvas[scaleType]();\n\n        if (scaleProps.field && scale) {\n            const {\n                type,\n                step\n            } = scale.config();\n\n            const stepMapper = typeof step === 'boolean' ? step : false;\n            LegendCls = LEGEND_TYPE_MAP[`${type}-${stepMapper}-${scaleType}`];\n            dataset.push({\n                scale,\n                canvas,\n                fieldName: scaleProps.field,\n                title: retrieveFieldDisplayName(canvas.data(), scaleProps.field),\n                LegendCls,\n                scaleType\n            });\n        }\n    });\n\n    return dataset;\n};\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n * @param {*} measurement\n * @param {*} prevLegends\n *\n */\nexport const legendInitializer = (legendConfig, canvas, measurement, prevLegends) => {\n    const legends = [];\n    const {\n        height,\n        width,\n        headerHeight\n    } = measurement;\n    const {\n        position,\n        align\n    } = legendConfig;\n\n    const legendInfo = legendCreator(canvas);\n    const { invalidValues } = canvas.config();\n\n    const parser = getValueParser(invalidValues);\n    legendInfo.forEach((dataInfo, index) => {\n        const legendMeasures = {};\n        const {\n                LegendCls,\n                scale,\n                fieldName,\n                title: titleText,\n                scaleType\n            } = dataInfo;\n        const config = legendConfig[scaleType] || {};\n        const title = config.title || {};\n        title.text = title.text || titleText;\n        if (config.show) {\n            config.position = position;\n            config.align = align;\n            let legend = getObjProp(prevLegends[scaleType], index);\n            if (!legend) {\n                legend = LegendCls.create({\n                    labelManager: canvas._dependencies.smartlabel,\n                    cells: {\n                        AxisCell, TextCell\n                    }\n                });\n            }\n            legendMeasures.maxHeight = align === VERTICAL ? (height - headerHeight) : height * 0.2;\n            legendMeasures.maxWidth = align === HORIZONTAL ? width : width * 0.2;\n            legendMeasures.width = Math.min(legendMeasures.maxWidth, config.width);\n            legendMeasures.height = Math.min(legendMeasures.maxHeight, config.height);\n\n            [PADDING, BORDER, MARGIN].forEach((e) => {\n                legendMeasures[e] = config[e];\n            });\n            const metaData = legend.metaData();\n            if (metaData instanceof DataModel) {\n                metaData.dispose();\n            }\n            legend.scale(scale)\n                            .valueParser(parser)\n                            .title(title)\n                            .fieldName(fieldName)\n                            .config(config)\n                            .metaData(canvas.composition().visualGroup.getGroupByData().project([fieldName]))\n                            .measurement(legendMeasures)\n                            .canvasAlias(canvas.alias())\n                            .setLegendMeasures();\n\n            legends.push({ canvas, legend, scaleType });\n        }\n    });\n    return legends;\n};\n\n/**\n *\n *\n * @param {*} legends\n * @param {*} legendConfig\n * @param {*} availableHeight\n * @param {*} availableWidth\n *\n */\nexport const getLegendSpace = (legends, legendConfig, availableHeight, availableWidth) => {\n    const legendMeasures = legends.map(legendInfo => legendInfo.legend.measurement());\n    const legendSpace = { width: 0, height: 0 };\n\n    legendMeasures.forEach((space) => {\n        let height = 0;\n        let width = 0;\n        width = Math.min(space.width, space.maxWidth);\n        height = Math.min(space.height, space.maxHeight);\n\n        if (legendConfig.align === HORIZONTAL) {\n            if (legendSpace.width + width > availableWidth) {\n                legendSpace.width = availableWidth;\n                legendSpace.height += height;\n            } else {\n                legendSpace.width += width;\n                legendSpace.height = Math.max(legendSpace.height, height);\n            }\n        } else if (legendSpace.height + height > availableHeight) {\n            legendSpace.height = height;\n            legendSpace.width += width;\n        } else {\n            legendSpace.height += height;\n            legendSpace.width = Math.max(legendSpace.width, width);\n        }\n    });\n    if (legendConfig.align === HORIZONTAL) {\n        legendSpace.width = availableWidth;\n    }\n    return legendSpace;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} headerHeight\n *\n */\nexport const createLegend = (context, headerHeight, height, width) => {\n    const measurement = {\n        height,\n        width,\n        headerHeight\n    };\n    const { legend } = context.config();\n    const { show, position } = legend;\n\n    legend.classPrefix = context.config().classPrefix;\n    const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n\n    legend.show = show ? ((align === VERTICAL && width > 200) || (align === HORIZONTAL && height > 200)) : show;\n    legend.align = align;\n    return legendInitializer(legend, context, measurement, context.composition().legend || {});\n};\n","import { LayoutComponent } from '../../../../layout/src/tree-layout';\n\nexport default class MuzeComponent extends LayoutComponent {\n    getLogicalSpace () {\n        const { width, height } = this.boundBox();\n        return { width, height };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n    }\n\n    getBoundBox () {\n        return this.boundBox();\n    }\n\n    updateWrapper () {\n        throw Error('Update is not implemented');\n    }\n\n    setParams () {\n        throw Error('set params is not implemented');\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport { LEFT } from '../../constants';\n\nexport default class HeaderComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    renderHeader (container) {\n        const layoutConfig = this.params.config;\n        container = selectElement(container);\n        const { align } = layoutConfig;\n        const sel = container\n          .selectAll(`.${layoutConfig.classPrefix}-inner-container`)\n          .data([this.name]);\n        sel.exit().remove();\n        const selEnter = sel.enter().append('div');\n\n        const cont = selEnter.merge(sel);\n        cont.classed(`${layoutConfig.classPrefix}-inner-container`, true);\n        const { height, width } = this.boundBox();\n        this.component.setAvailableSpace(width, height);\n\n        this.component && this.component.render(cont.node());\n\n        cont.selectAll('div').classed(`${layoutConfig.classPrefix}-inner-content`, true);\n        cont.style('width', `${100}%`);\n\n        if (layoutConfig && this.component) {\n            cont.style('float', LEFT)\n                            .style('text-align', align);\n                            // .style(`padding-${position === TOP ? BOTTOM : TOP}`, `${padding}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderHeader(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.setParams(params);\n        this.name(params.name);\n        this.boundBox(params.component.getLogicalSpace());\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y,\n            left: conf.x,\n            width: conf.width,\n            height: conf.height });\n        this.renderAt(conf.renderAt);\n    }\n}\n","import { makeElement, selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport {\n     LEFT, RIGHT, VERTICAL, HORIZONTAL, TOP, BOTTOM, HORIZONTAL_CENTER, VERTICAL_CENTER\n} from '../../constants';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\n\nfunction defaultAlignmentHelper (position) {\n    let alignment = null;\n    const alignWith = `${ROW_MATRIX_INDEX[1]}-${COLUMN_MATRIX_INDEX[1]}`;\n    switch (position) {\n    case TOP:\n    case BOTTOM:\n        alignment = HORIZONTAL_CENTER;\n        break;\n    case LEFT:\n    case RIGHT:\n        alignment = VERTICAL_CENTER;\n        break;\n    default:\n        alignment = VERTICAL_CENTER;\n    }\n    return { alignment, alignWith };\n}\nexport default class LegendComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.config.measurement.legendSpace, 0);\n        this.setParams(params);\n    }\n\n    renderLegend (container) {\n        container = selectElement(container);\n        const sectionComponents = [];\n        const { position, classPrefix } = this.params.config;\n        const legendMount = makeElement(container, 'div', [this.components],\n                                        `${classPrefix}-inner-content`, {}, d => d);\n        legendMount.classed(`${classPrefix}-legend`, true);\n        const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n        const legWidth = this.newDimensions.width;\n        const legHeight = this.newDimensions.height;\n\n        [container, legendMount].forEach((elem) => {\n            elem.style('width', `${Math.floor(legWidth)}px`)\n                            .style('height', `${legHeight}px`)\n                            .style('float', LEFT);\n        });\n\n        if (align === VERTICAL) {\n            let sections = -1;\n            let currHeight = legHeight;\n            let currWidth = 0;\n\n            this.components.forEach((legendInfo) => {\n                const leg = legendInfo.legend;\n                if (leg.measurement().height > currHeight) {\n                    sections++;\n                    currWidth = 0;\n                    currHeight = legHeight;\n                } else {\n                    sections < 0 && sections++;\n                }\n                sectionComponents[sections] = sectionComponents[sections] || [];\n                currHeight -= Math.min(leg.measurement().height, currHeight);\n                currWidth = Math.max(Math.min(leg.measurement().width, leg.measurement().maxWidth), currWidth);\n                sectionComponents[sections].push({\n                    legend: leg,\n                    legendHeight: legHeight,\n                    legendWidth: currWidth\n                });\n            });\n\n            const mount = makeElement(legendMount, ['div'], sectionComponents, `${classPrefix}-legend-section`);\n            // mount.each((d, i) => selectElement(this).classed(`${classPrefix}-legend-section-${i}`, true));\n            mount.classed(`${classPrefix}-legend-vertical-section`, true)\n                            .style('width', d => `${d[0].legendWidth}px`);\n            makeElement(mount, ['div'], d => d, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) {\n                                d.legend.mount(this);\n                            })\n                            .style('width', d => `${d.legendWidth}px`);\n        } else {\n            const mount = makeElement(legendMount, 'div', [1], `${classPrefix}-legend-section`);\n            mount.classed(`${classPrefix}-legend-horizontal-section`, true);\n            mount.classed(`${classPrefix}-legend-section-${0}`, true)\n                            .style('width', `${legWidth}px`);\n\n            makeElement(mount, 'div', this.components, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) { d.legend.mount(this); })\n                            .style('width', d => `${d.legend.measurement().width}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderLegend(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.measurement.legendSpace);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.components = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        const { alignWith, alignment } = defaultAlignmentHelper(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith || alignWith);\n        this.alignment(params.config.alignment || alignment);\n    }\n\n}\n","import {\n    selectElement,\n    makeElement,\n    getD3Drag,\n    getEvent,\n    getWindow,\n    hasTouch\n} from 'muze-utils';\nimport './scroll-bar.scss';\nimport { WIDTH, HEIGHT } from '../../../constants';\n\nconst d3Drag = getD3Drag();\n\nconst arrowSizeMap = {\n    left: WIDTH,\n    right: WIDTH,\n    top: HEIGHT,\n    bottom: HEIGHT\n};\n\nexport const getUnitPositions = (unitMeasures, totalLength, viewLength) => {\n    let currentLen = 0;\n    const measures = unitMeasures.primary && unitMeasures.primary.length ?\n        unitMeasures.primary : unitMeasures.secondary;\n\n    return measures.map((e) => {\n        const unitPosition = currentLen * 100 / (totalLength - viewLength);\n        currentLen += e;\n        return unitPosition;\n    });\n};\n\nexport const createScrollBarArrow = (mount, type, config) => {\n    const {\n        classPrefix,\n        thickness\n    } = config;\n    const arrow = makeElement(mount, 'div', [type], `${classPrefix}-scroll-arrow-${type}`);\n\n    arrow.classed(`${classPrefix}-scroll-arrow`, true);\n    arrow.style(arrowSizeMap[type], `${thickness}px`);\n\n    const chevron = makeElement(arrow, 'div', [1], `${classPrefix}-scroll-arrow-chevron`);\n\n    chevron.attr('id', `${classPrefix}-scroll-arrow-chevron-${type}`);\n\n    return arrow;\n};\n\nexport const createScrollBarRect = (mount, config) => {\n    const {\n        classPrefix\n    } = config;\n    const rect = makeElement(mount, 'div', [1], `${classPrefix}-scroll-rect`);\n    const mover = makeElement(rect, 'div', [1], `${classPrefix}-scroll-mover`);\n\n    return { rect, mover };\n};\n\nexport const applyRectClick = (scrollMaker, moverRect) => {\n    const {\n        rect\n    } = moverRect;\n\n    rect.on('click', () => {\n        const event = getEvent();\n        scrollMaker.emptyScrollAreaClick(event);\n    });\n};\n\nconst applyMoverDrag = (scrollMaker, moverRect) => {\n    let startPos = {};\n    let moverStartPos = 0;\n    let rectStartPos = 0;\n    let endPos = {};\n    const {\n        mover,\n        rect\n    } = moverRect;\n\n    mover.call(d3Drag()\n                    .on('start', () => {\n                        const event = getEvent();\n\n                        moverStartPos = mover.node().getBoundingClientRect();\n                        rectStartPos = rect.node().getBoundingClientRect();\n                        startPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                    })\n                    .on('drag', () => {\n                        const event = getEvent();\n                        const window = getWindow();\n\n                        endPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                        const distanceMoved = {\n                            x: endPos.x - startPos.x,\n                            y: endPos.y - startPos.y\n                        };\n                        const actualPosition = {\n                            x: moverStartPos.x + distanceMoved.x - rectStartPos.x + window.pageXOffset,\n                            y: moverStartPos.y + distanceMoved.y - rectStartPos.y + window.pageYOffset\n                        };\n\n                        scrollMaker.changeMoverPosition(actualPosition);\n                    }));\n};\n\nconst applyScrollMouseDownAction = (moverRect, scrollMaker, speed) => {\n    const {\n        mover,\n        rect\n    } = moverRect;\n    const { x, y } = mover.node().getBoundingClientRect();\n    const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n    scrollMaker.changeMoverPosition({ x: x - rectX + speed, y: y - rectY + speed });\n};\n\nconst registerListenerOnArrow = (scrollMaker, moverRect, arrowType, speed) => {\n    let timer = '';\n    const arrow = scrollMaker._components[arrowType];\n    const isTouchDevice = hasTouch();\n\n    arrow.on(isTouchDevice ? 'touchstart' : 'mousedown', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        timer = setInterval(() => {\n            applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n        }, 100);\n    }).on(isTouchDevice ? 'touchend' : 'mouseup', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        clearInterval(timer);\n    }).on('click', () => {\n        applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n    });\n};\n\nexport const registerListeners = (scrollMaker) => {\n    const {\n        moverRect\n    } = scrollMaker._components;\n\n    const speed = scrollMaker.config().speed;\n\n    registerListenerOnArrow(scrollMaker, moverRect, 'prevArrow', -speed);\n    applyMoverDrag(scrollMaker, moverRect);\n    applyRectClick(scrollMaker, moverRect);\n    registerListenerOnArrow(scrollMaker, moverRect, 'nextArrow', speed);\n};\n\nexport const scrollContainerHelper = (mountPoint, config, dimensions, type) => {\n    const {\n        classPrefix\n    } = config;\n    const scrollBarContainer = makeElement(selectElement(mountPoint), 'div', [1], `#${classPrefix}-scroll-bar-${type}`);\n\n    scrollBarContainer.classed(`${classPrefix}-scroll-bar`, true);\n    scrollBarContainer.style(WIDTH, `${dimensions.width}px`);\n    scrollBarContainer.style(HEIGHT, `${dimensions.height}px`);\n    return scrollBarContainer;\n};\n\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n\n    config: {\n        sanitization: (context, value) => {\n            value = mergeRecursive(context._config, value);\n            return value;\n        }\n    },\n    manager: {},\n    unitPositions: {},\n    logicalSpace: {}\n};\n\n","import { ERROR_MSG, generateGetterSetters } from 'muze-utils';\nimport {\n    scrollContainerHelper,\n    registerListeners\n} from './helper';\nimport { PROPS } from './props';\n\nexport class ScrollMaker {\n\n    constructor () {\n        this._components = {};\n        this._logicalSpace = {};\n        this._attachedScrollAction = () => {};\n        this._config = {\n            thickness: 10,\n            speed: 2\n        };\n        this._unitPositions = null;\n\n        generateGetterSetters(this, PROPS);\n    }\n\n    static type () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    emptyScrollAreaClick () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    changeMoverPosition () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollDeltaTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    createScroll (mountPoint) {\n        const config = this.config();\n\n        return {\n            scrollBarContainer: scrollContainerHelper(mountPoint, config, this.logicalSpace(), this.constructor.type())\n        };\n    }\n\n    attachScrollAction (externalScrollAction) {\n        this._attachedScrollAction = externalScrollAction;\n        return this;\n    }\n\n    detachScrollAction () {\n        this._attachedScrollAction = () => {};\n        return this;\n    }\n\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    registerListeners () {\n        registerListeners(this);\n        return this;\n    }\n\n    remove () {\n        this._components.scrollBarContainer.remove();\n        return this;\n    }\n}\n\n","import MuzeComponent from './muze-chart-component';\nimport { HorizontalScrollMaker } from './scroll-bar-maker/horizontal-scroll-maker';\nimport { VerticalScrollMaker } from './scroll-bar-maker/vertical-scroll-maker';\n\nconst scrollMakerMap = {\n    horizontal: HorizontalScrollMaker,\n    vertical: VerticalScrollMaker\n};\n\n/**\n * Scroll Component acts as a wrapper over the scoll bars created using the respective Scroll Makers\n * This provides a consistent API for layouting using the tree layout system.\n *\n *\n * @class\n * @public\n * @module ScrollComponent\n */\nexport default class ScrollComponent extends MuzeComponent {\n\n    constructor (params) {\n        const ScrollMaker = scrollMakerMap[params.config.type];\n\n        params.component = new ScrollMaker();\n        params.component.config(params.config.scrollBarComponentConfig);\n        params.component.logicalSpace(params.dimensions);\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    manager (...manager) {\n        if (manager.length) {\n            this.component.manager(manager[0]);\n            return this;\n        }\n        return this.component.manager();\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollDeltaTo (delta) {\n        this.component.scrollDeltaTo(delta);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollTo (scrollPercentage) {\n        this.component.scrollTo(scrollPercentage);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page based on the unit index.\n     * The input is provided as a number represting the index for the unit.\n     * For vertical scroll, it's the row index that will be required.\n     * For horizontal scroll, it's the column index that will be required\n     *\n     * @public\n     *\n     * @param {number} unitIndex Index of the unit appearing in the grid\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollToUnitIndex (unitIndex) {\n        const unitPositions = this.component.unitPositions();\n        const sanitizedUnitIndex = Math.min(Math.max(0, unitIndex), unitPositions.length - 1);\n        this.component.scrollTo(unitPositions[sanitizedUnitIndex]);\n        return this;\n    }\n\n    /**\n     * Provides the positions of the units(either horizontal or vertical based on the type\n     * of scroll bar it wraps) relative to it's container. The position of the first unit starts at 0\n     *\n     *\n     * @public\n     *\n     * @return {Array} Positions of units either horizontal or vertical\n     */\n    getScrollPositionsForUnits () {\n        return this.component.unitPositions();\n    }\n\n    draw (container) {\n        this.component.createScroll(container || document.getElementById(this.renderAt()));\n        return this;\n    }\n\n    /**\n     * Can be used to attach a scroll action whenever scrolling occurs in the canvas\n     *\n     * @public\n     * @param {number} externalAction Action to be attached during scroll\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    attachScrollAction (externalAction) {\n        this.component.attachScrollAction(externalAction);\n        return this;\n    }\n\n    /**\n     * Can be used to detach the scroll action already bound to the scroll bar\n     *\n     * @public\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    detachScrollAction () {\n        this.component.detachScrollAction();\n        return this;\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.component.config(params.config.scrollBarComponentConfig);\n        this.component.logicalSpace(params.dimensions);\n        this.boundBox(this.component.getLogicalSpace());\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component || this.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    remove () {\n        this.component.remove();\n    }\n}\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { HORIZONTAL, HEIGHT, WIDTH, LEFT } from '../../../constants';\n\nexport class HorizontalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: horizontal\n     */\n    static type () {\n        return HORIZONTAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, config, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'left', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'right', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n\n        const { height, width, totalLength, viewLength, unitWidths } = this.logicalSpace();\n        const scrollBarWithouArrowLength = width - height * 2;\n\n        rect.style(WIDTH, `${dimensions.width - height * 2}px`);\n        rect.style(HEIGHT, `${100}%`);\n        mover.style(WIDTH, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(HEIGHT, `${100}%`);\n        mover.style(LEFT, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n        this.unitPositions(getUnitPositions(unitWidths, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n        let positionAdjuster = speed * 10;\n        if (event.x < x) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n        const {\n            totalLength\n         } = this.logicalSpace();\n\n        if (newPosition.x < 0) {\n            currentPos = 0;\n        } else if (newPosition.x + moverPos.width > rectStartPos.width) {\n            currentPos = rectStartPos.width - moverPos.width;\n        } else {\n            currentPos = newPosition.x;\n        }\n\n        mover.style(LEFT, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: 0, x: moverPos.x - rectStartPos.x - delta });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {HorizontalScrollMaker} Instance of the HorizontalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.width)) / 100;\n\n        this.changeMoverPosition({ y: 0, x: movement });\n        return this;\n    }\n\n}\n\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { VERTICAL, TOP, HEIGHT, WIDTH } from '../../../constants';\n\nexport class VerticalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: vertical\n     */\n    static type () {\n        return VERTICAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'top', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'bottom', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n        const { height, width, totalLength, viewLength, unitHeights } = this.logicalSpace();\n        const scrollBarWithouArrowLength = height - width * 2;\n\n        rect.style(HEIGHT, `${scrollBarWithouArrowLength}px`);\n        rect.style(WIDTH, `${100}%`);\n        mover.style(WIDTH, `${100}%`);\n        mover.style(HEIGHT, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(TOP, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n\n        this.unitPositions(getUnitPositions(unitHeights, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n        let positionAdjuster = speed * 10;\n        if (event.y < y) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const {\n            totalLength\n         } = this.logicalSpace();\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n\n        if (newPosition.y < 0) {\n            currentPos = 0;\n        } else if (newPosition.y + moverPos.height > rectStartPos.height) {\n            currentPos = rectStartPos.height - moverPos.height;\n        } else {\n            currentPos = newPosition.y;\n        }\n        mover.style(TOP, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: moverPos.y - rectStartPos.y - delta, x: 0 });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.height)) / 100;\n\n        this.changeMoverPosition({ x: 0, y: movement });\n        return this;\n    }\n\n}\n","import { makeElement } from 'muze-utils';\nimport { cellSpanMaker, applySpans } from '../../../../layout/src/grid-layout/span-maker';\nimport { applyBorders } from '../../../../layout/src/grid-layout/border-helper';\n\nimport {\n     TOP, CENTER\n} from '../../../../layout/src/enums/constants';\nimport MuzeComponent from './muze-chart-component';\nimport { WIDTH, HEIGHT, HIDDEN, OVERFLOW, AUTO, VISIBLE } from '../../constants';\n\nconst renderPlaceholders = (cells) => {\n    // Rendering content within placeholders\n    cells.each(function (cell) {\n        cell.placeholder.render(this);\n    });\n};\n\nexport default class MatrixComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.setParams(params);\n        this.className(params.config.className);\n    }\n\n    applyScroll (container) {\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const { horizontal, vertical } = this.params.config.scrollInfo;\n        container.style(OVERFLOW, VISIBLE);\n        container.style(WIDTH, AUTO);\n        container.style(HEIGHT, AUTO);\n\n        if (horizontal && column === 1) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(WIDTH, '100%');\n        }\n\n        if (vertical && row === CENTER) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(HEIGHT, '100%');\n        }\n    }\n\n    renderMatrix (mountPoint) {\n        // Creating containers for each matrix individually\n        const classPrefix = this.params.config.classPrefix;\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const dimensions = this.params.config.dimensions;\n        const border = this.params.config.border;\n\n        // Creating containers for each matrix individually\n        const containerForMatrix = makeElement(mountPoint, 'div', [1], `${classPrefix}-grid-${row}-${column + 1}`)\n            .classed(`${classPrefix}-grid-${row}`, true)\n            .classed(`${classPrefix}-grid`, true);\n\n        this.applyScroll(containerForMatrix);\n\n        const {\n            viewMatrix,\n            spans\n        } = cellSpanMaker(this.component, row, column);\n\n            // Rendering the table components\n        const { cells } = this.renderTable(containerForMatrix, `${classPrefix}-grid`, viewMatrix);\n\n        applySpans(cells, spans, { dimensions, border }, `${row}-${column}`);\n        renderPlaceholders(cells);\n\n        cells.exit().each((cell) => {\n            cell.placeholder.remove();\n        });\n\n        applyBorders(cells, border, row, column);\n    }\n\n    renderTable (mount, className, rowData) {\n        const table = makeElement(mount, 'table', ['layout'], `${className}-table`);\n        const body = makeElement(table, 'tbody', ['layout'], `${className}-body`);\n        const rows = makeElement(body, 'tr', rowData, `${className}-tr`);\n        const cells = makeElement(rows, 'td', (d, i) => d.filter(e => e !== null).map(e =>\n                                  ({ placeholder: e, rowIndex: i })), `${className}-td`, {}, key => key.placeholder.id);\n\n        return { table, body, rows, cells };\n    }\n\n    draw (container) {\n        this.renderMatrix(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(TOP);\n        this.className(params.config.className);\n    }\n}\n","import { selectElement, getEvent } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport MatrixComponent from './matrix-component';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\nimport { WHEEL_DELTA_MODIFIER } from '../../enums/constants';\n\n/**\n * Based on the type of scroll, it changes the scrollLeft/scrollTop property of the specific\n * elements based on the scroll distance provided\n *\n *\n */\nconst applyScrollAction = (elem, classPrefix, scollDistance, type) => {\n    selectElement(elem)\n                    .selectAll(`.${classPrefix}-grid`)\n                    .property(type, scollDistance);\n};\n\n/**\n * Applies the action of the scroll by actually scrolling the respective matrices based on the\n * type of scroll. It returns a function which has both the scroll methods available\n *\n * @return {Object} contains the horizontal and vertical scroll actions on the grid component\n */\nconst scrollActionApplier = (movement, context) => {\n    const classPrefix = context.params.config.classPrefix;\n\n    return {\n        horizontal: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[e][1].renderAt()}`, classPrefix, movement, 'scrollLeft'));\n        },\n        vertical: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[1][e].renderAt()}`, classPrefix, movement, 'scrollTop'));\n        }\n    };\n};\n\nexport default class GridComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.gridComponents = [];\n        this.setParams(params);\n    }\n\n    sanitizeGrid () {\n        let height = 0;\n        let width = 0;\n        const { viewMatricesInfo, layoutDimensions } = this.component.viewInfo();\n        const scrollInfo = this.component.scrollInfo();\n        const {\n            viewHeight,\n            viewWidth,\n            unitHeights,\n            unitWidths\n        } = layoutDimensions;\n\n        for (let i = 0; i < 3; i++) {\n            if (!(this.gridComponents.length && this.gridComponents[i] instanceof Array)) {\n                this.gridComponents[i] = [];\n            }\n            for (let j = 0; j < 3; j++) {\n                const matrixDim = {\n                    height: viewHeight[i],\n                    width: viewWidth[j],\n                    unitHeights,\n                    unitWidths\n                };\n                const matrix = viewMatricesInfo.matrices[`${ROW_MATRIX_INDEX[i]}`][j];\n                const matrixName = `${ROW_MATRIX_INDEX[i]}-${COLUMN_MATRIX_INDEX[j]}`;\n                const matrixConfig = {\n                    dimensions: matrixDim,\n                    border: layoutDimensions.border,\n                    classPrefix: this.params.config.classPrefix,\n                    scrollInfo,\n                    row: ROW_MATRIX_INDEX[i],\n                    column: j\n                };\n                if (this.gridComponents[i][j] instanceof MuzeComponent) {\n                    this.gridComponents[i][j].updateWrapper({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                } else {\n                    const matrixWrapper = new MatrixComponent({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                    this.gridComponents[i].push(matrixWrapper);\n                }\n                if (i === 0) {\n                    width += matrixDim.width;\n                }\n                if (j === 0) {\n                    height += matrixDim.height;\n                }\n            }\n        }\n        this.boundBox({ height, width });\n\n        this.component = this.gridComponents;\n        this.allComponents = this.gridComponents;\n    }\n\n    scrollBarManager (...manager) {\n        if (manager.length) {\n            this._scrollBarManager = manager[0];\n            return this;\n        }\n        return this._scrollBarManager;\n    }\n\n    /**\n     * Attaches a mousewheel listener to the center matrix, based on which the scrolling can occur.\n     * It uses the scroll component to change the position of the scroller, which ultimately scrolls the center matrix\n     *\n     *\n     * @return {GridComponent} Instance of the GridComponent\n     */\n    attachScrollListener () {\n        selectElement(`#${this.component[1][1].renderAt()}`)\n                        .on('wheel', () => {\n                            const event = getEvent();\n                            const {\n                                wheelDeltaX,\n                                wheelDeltaY\n                            } = event;\n\n                            // Prevent default behaviour and stop propagating\n                            event.preventDefault();\n                            event.stopPropagation();\n\n                            // Scrolling horizontally\n                            if (wheelDeltaX !== 0 && Math.abs(wheelDeltaX) > Math.abs(wheelDeltaY)) {\n                                this.scrollBarManager()\n                                    .triggerScrollBarAction('horizontal', wheelDeltaX / WHEEL_DELTA_MODIFIER);\n                            }\n\n                            // Scrolling Vertically\n                            if (wheelDeltaY !== 0 && Math.abs(wheelDeltaX) < Math.abs(wheelDeltaY)) {\n                                this.scrollBarManager()\n                                    .triggerScrollBarAction('vertical', wheelDeltaY / WHEEL_DELTA_MODIFIER);\n                            }\n                        });\n        return this;\n    }\n\n    performScrollAction (direction, movedView) {\n        scrollActionApplier(movedView, this)[direction]();\n        return this;\n    }\n\n    getBoundBox () {\n        const { top, left } = this.component[0][0].boundBox();\n        const { height, width } = this.boundBox();\n\n        return {\n            top,\n            left,\n            height,\n            width\n        };\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.className(params.config.className);\n        this.sanitizeGrid();\n        return this;\n    }\n}\n","export const SIDE_EFFECT_COMMON = 'common';\nexport const SIDE_EFFECT_INDIVIDUAL = 'individual';\nexport const TOOLTIP_CONSOLIDATED = 'consolidated';\nexport const TOOLTIP_FRAGMENTED = 'fragmented';\nexport const WHEEL_DELTA_MODIFIER = 30;\n","import { TITLE, SUB_TITLE, LEGEND, VERTICAL, HORIZONTAL, WIDTH, HEIGHT, TOP, LEFT, RIGHT } from '../constants';\nimport HeaderComponent from './components/headerComponent';\nimport LegendComponent from './components/legendComponent';\nimport ScrollComponent from './components/scroll-component';\nimport GridComponent from './components/grid-component';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG, GRID, CANVAS, LAYOUT_ALIGN } from './defaults';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, CENTER } from '../../../layout/src/enums/constants';\n\n// Mapping between types of headers and their required configs for wrapper creation\nconst headerMap = {\n    title: {\n        headerCell: 'titleCell',\n        configType: TITLE_CONFIG\n    },\n    subtitle: {\n        headerCell: 'subtitleCell',\n        configType: SUB_TITLE_CONFIG\n    }\n};\n\n/**\n * Creates the wrapper for the header, i.e., title and subtitle to be used in the tree layout\n *\n *\n * @param {string} headerType type of header: title/subtite\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createHeaderWrapper = (headerType, layoutManager, renderDetails) => {\n    let wrapper = null;\n\n    const { components, layoutConfig } = renderDetails;\n    const { headerCell, configType } = headerMap[headerType];\n    const target = { target: CANVAS };\n\n    if (components.headers && components.headers[headerCell]) {\n        let headerConfig = layoutConfig[headerType];\n        const header = components.headers[headerCell];\n\n        headerConfig = Object.assign({}, headerConfig, {\n            classPrefix: layoutConfig.classPrefix,\n            ...target,\n            alignWith: `${ROW_MATRIX_INDEX[0]}-${COLUMN_MATRIX_INDEX[1]}`,\n            alignment: LAYOUT_ALIGN.LEFT,\n            className: configType.className\n        });\n\n        if (headerConfig.align === CENTER) {\n            headerConfig.alignment = null;\n            headerConfig.alignWith = null;\n        }\n        if (headerConfig.align === RIGHT) {\n            headerConfig.alignment = RIGHT;\n        }\n\n        const wrapperParams = {\n            name: headerType,\n            component: header,\n            config: headerConfig\n        };\n\n        const existingComponent = layoutManager.getComponent(headerType);\n        if (existingComponent) {\n            wrapper = existingComponent\n                        .updateWrapper(wrapperParams);\n        } else {\n            wrapper = new HeaderComponent(wrapperParams);\n        }\n    }\n    return wrapper;\n};\n\n// Mapping between types of scrollBars and their required configs for wrapper creation\nconst scrollBarMap = config => ({\n    vertical: {\n        componentName: 'verticalScrollBar',\n        width: 'thickness',\n        height: 'layoutBasedMeasure',\n        layoutBasedMeasure: HEIGHT,\n        viewMeasure: 'viewHeight',\n        rowAlign: 1,\n        colAlign: config.align === 'right' ? 2 : 0,\n        position: config.align,\n        alignment: TOP\n    },\n    horizontal: {\n        componentName: 'horizontalScrollBar',\n        width: 'layoutBasedMeasure',\n        layoutBasedMeasure: WIDTH,\n        viewMeasure: 'viewWidth',\n        height: 'thickness',\n        rowAlign: config.align === 'top' ? 0 : 2,\n        colAlign: 1,\n        position: config.align,\n        alignment: LEFT\n    }\n});\n\n/**\n * Creates the wrapper for the scroller, i.e., horizontal and vertical to be used in the tree layout\n *\n *\n * @param {string} scrollBarType type of scrollbar: horizontal/vertical\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst createScrollBarWrapper = (scrollBarType, layoutManager, renderDetails, grid) => {\n    let scrollBarWrapper = null;\n    const { layoutConfig } = renderDetails;\n    const target = { target: CANVAS };\n    const { scrollBar } = layoutConfig;\n    const { layoutDimensions } = grid.viewInfo();\n    const {\n        actualCenterMeasures,\n        unitHeights,\n        unitWidths\n    } = layoutDimensions;\n    const {\n        componentName, layoutBasedMeasure, width, height, rowAlign, colAlign,\n        viewMeasure, position, alignment\n    } = scrollBarMap(scrollBar[scrollBarType])[scrollBarType];\n    const dimensions = {\n        thickness: scrollBar.thickness,\n        layoutBasedMeasure: layoutDimensions[viewMeasure][1]\n    };\n    const isScroll = grid.scrollInfo()[scrollBarType];\n    const totalLength = actualCenterMeasures[layoutBasedMeasure];\n    const viewLength = layoutDimensions[viewMeasure][1];\n\n    const scrollConfig = Object.assign({}, {\n        classPrefix: layoutConfig.classPrefix,\n        ...target,\n        scrollBarComponentConfig: {\n            ...scrollBar,\n            classPrefix: layoutConfig.classPrefix\n        },\n\n        type: scrollBarType,\n        alignWith: `${ROW_MATRIX_INDEX[rowAlign]}-${COLUMN_MATRIX_INDEX[colAlign]}`,\n        alignment,\n        position\n    });\n\n    const wrapperParams = {\n        name: componentName,\n        config: scrollConfig,\n        dimensions: {\n            width: dimensions[width],\n            height: dimensions[height],\n            totalLength,\n            viewLength,\n            unitHeights,\n            unitWidths\n        }\n    };\n\n    const existingComponent = layoutManager.getComponent(componentName);\n\n    if (!isScroll) {\n        existingComponent && existingComponent.remove();\n        return null;\n    }\n\n    if (existingComponent) {\n        scrollBarWrapper = existingComponent\n                                .updateWrapper(wrapperParams);\n    } else {\n        scrollBarWrapper = new ScrollComponent(wrapperParams);\n    }\n\n    return scrollBarWrapper;\n};\n\n/**\n * Creates the wrapper for the legend to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createLegendWrapper = (layoutManager, renderDetails) => {\n    let legendWrapper = null;\n    const { components, layoutConfig, measurement } = renderDetails;\n    const target = { target: CANVAS };\n\n    if (components.legends && components.legends.length) {\n        const legendConfig = { ...layoutConfig.legend, ...target, measurement };\n        const wrapperParams = {\n            name: LEGEND,\n            component: components.legends,\n            config: legendConfig\n        };\n\n        const existingComponent = layoutManager.getComponent(LEGEND);\n\n        if (existingComponent) {\n            legendWrapper = existingComponent\n                       .updateWrapper(wrapperParams);\n        } else {\n            legendWrapper = new LegendComponent(wrapperParams);\n        }\n    }\n    return legendWrapper;\n};\n\n/**\n * Creates the wrapper for the grid layout to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst gridLayoutWrapper = (layoutManager, renderDetails, grid) => {\n    let gridWrapper = null;\n    const target = { target: CANVAS };\n    const { layoutConfig } = renderDetails;\n\n    const config = {\n        ...target,\n        pagination: layoutConfig.pagination,\n        classPrefix: layoutConfig.classPrefix,\n        dimensions: { height: 0, width: 0 }\n    };\n    const wrapperParams = {\n        name: GRID,\n        component: grid,\n        config\n    };\n    const existingComponent = layoutManager.getComponent(GRID);\n    if (existingComponent) {\n        gridWrapper = existingComponent\n                    .updateWrapper(wrapperParams);\n    } else {\n        gridWrapper = new GridComponent(wrapperParams);\n    }\n    return gridWrapper;\n};\n\n/**\n * Responsible for providing the wrapper creators for every component in Muze.\n * This function, when called, returns the set of components and their respective wrappers.\n *\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {GridLayout} grid Instance of the grid layout\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers for each component\n */\nexport const componentWrapperMaker = (layoutManager, grid, renderDetails) => ({\n    title: createHeaderWrapper(TITLE, layoutManager, renderDetails),\n    subtitle: createHeaderWrapper(SUB_TITLE, layoutManager, renderDetails),\n    legend: createLegendWrapper(layoutManager, renderDetails),\n    grid: gridLayoutWrapper(layoutManager, renderDetails, grid),\n    verticalScrollBar: createScrollBarWrapper(VERTICAL, layoutManager, renderDetails, grid),\n    horizontalScrollBar: createScrollBarWrapper(HORIZONTAL, layoutManager, renderDetails, grid)\n});\n","export class ScrollManager {\n\n    constructor () {\n        this._scrollBarComponents = {};\n        this._attachedComponents = {};\n    }\n\n    scrollBarComponents (...sbc) {\n        if (sbc.length) {\n            this._scrollBarComponents = sbc[0];\n            return this;\n        }\n        return this._scrollBarComponents;\n    }\n\n    attachedComponents (...abc) {\n        if (abc.length) {\n            this._attachedComponents = abc[0];\n            return this;\n        }\n        return this._attachedComponents;\n    }\n\n    performAttachedScrollFunction (type, movedViewLength) {\n        Object.values(this.attachedComponents()).forEach((e) => {\n            e.performScrollAction(type, movedViewLength);\n        });\n    }\n\n    triggerScrollBarAction (type, delta) {\n        this.scrollBarComponents()[type] && this.scrollBarComponents()[type].scrollDeltaTo(delta);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\nimport { arrangeComponents } from './component-resolver';\nimport { createHeaders } from './title-maker';\nimport { createLegend, getLegendSpace } from './legend-maker';\nimport { componentWrapperMaker } from './component-wrapper-maker';\nimport {\n    TOP,\n    BOTTOM,\n    LEFT,\n    RIGHT,\n    TITLE,\n    SUB_TITLE,\n    LEGEND,\n    VERTICAL_SCROLL_BAR,\n    HORIZONTAL_SCROLL_BAR,\n    GRID\n} from '../constants';\nimport { ScrollManager } from './scroll-manager';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const prepareLayout = (layout, renderDetails) => {\n    const { components, layoutConfig, measurement } = renderDetails;\n    const {\n        rows,\n        columns,\n        values,\n        cornerMatrices\n    } = components;\n    const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n    } = cornerMatrices;\n    if (rows && columns) {\n        layout.measurement(measurement)\n                        .config(layoutConfig)\n                        .matrices({\n                            top: [topLeft, columns[0], topRight],\n                            center: [rows[0], values, rows[1]],\n                            bottom: [bottomLeft, columns[1], bottomRight]\n                        })\n                        .triggerReflow();\n    }\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} mount\n *\n */\nexport const getRenderDetails = (context, mount) => {\n    let layoutConfig = mergeRecursive({}, context.config());\n    // Get height width of the mount point\n    let { height, width } = mount.getBoundingClientRect();\n    const heightAttr = context.height();\n    const widthAttr = context.width();\n    const visGroup = context.composition().visualGroup;\n    const {\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority,\n        rows,\n        columns,\n        values\n    } = visGroup.placeholderInfo();\n    const {\n        minWidth,\n        minHeight,\n        classPrefix,\n        showHeaders,\n        legend,\n        pagination,\n        scrollBar\n    } = context.config();\n\n    // Get title configuration\n    const titleConfig = context.title()[1];\n     // Get subtitle configuration\n    const subtitleConfig = context.subtitle()[1];\n    // Get legend position\n    const legendPosition = legend.position;\n    // Arrange components according to config\n    const layoutArrangement = arrangeComponents(context);\n\n    height = Math.floor(height);\n    width = Math.floor(width);\n\n    const availableHeightForCanvas = Math.max(heightAttr > 0 ? heightAttr : height, minHeight);\n    const availableWidthForCanvas = Math.max(widthAttr > 0 ? widthAttr : width, minWidth);\n\n    // Create headers and determine header height\n    const { headers, headerHeight } = createHeaders(context, availableHeightForCanvas, availableWidthForCanvas);\n\n    // Create legends and determine legend space\n    const legends = createLegend(context, headerHeight, availableHeightForCanvas, availableWidthForCanvas);\n    context._composition.legend = {};\n    legends.forEach((e) => {\n        context._composition.legend[e.scaleType] = e.legend;\n    });\n\n    const legendSpace = getLegendSpace(legends, legend, availableHeightForCanvas, availableWidthForCanvas);\n    const legendWidth = (legendPosition === LEFT || legendPosition === RIGHT) ? legendSpace.width : 0;\n    const legendHeight = (legendPosition === TOP || legendPosition === BOTTOM) ? legendSpace.height : 0;\n\n    // Set components for layouting\n    const components = {\n        headers,\n        legends,\n        canvases: [context],\n        rows,\n        columns,\n        values,\n        cornerMatrices: visGroup.cornerMatrices()\n    };\n\n    const measurement = {\n        mountSpace: {\n            height,\n            width\n        },\n        headerHeight,\n        legendSpace,\n        canvasWidth: availableWidthForCanvas,\n        canvasHeight: availableHeightForCanvas,\n        width: availableWidthForCanvas - legendWidth,\n        height: availableHeightForCanvas - headerHeight - legendHeight,\n        minUnitHeight: context.minUnitHeight(),\n        minUnitWidth: context.minUnitWidth()\n    };\n    layoutConfig = mergeRecursive(layoutConfig, {\n        classPrefix,\n        showHeaders,\n        border: mergeRecursive(visGroup.metaData().border, context.config().border),\n        layoutArrangement,\n        legend,\n        buffer: scrollBar.thickness,\n        pagination,\n        title: titleConfig,\n        subtitle: subtitleConfig,\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        mount,\n        priority\n    });\n    return {\n        layoutConfig,\n        components,\n        measurement\n    };\n};\n\nconst componentIndexes = {\n    title: 0,\n    subtitle: 1,\n    legend: 2,\n    verticalScrollBar: 3,\n    horizontalScrollBar: 4,\n    grid: 5\n};\n\nconst componentNames = {\n    0: TITLE,\n    1: SUB_TITLE,\n    2: LEGEND,\n    3: VERTICAL_SCROLL_BAR,\n    4: HORIZONTAL_SCROLL_BAR,\n    5: GRID\n};\n\n/**\n * Responsible for creating a scroll manager that manages interactions between the grid\n * component and the scroll bar components\n *\n * @param {Array} componentWrappers Contains the wrappers for all the components\n * @param {Canvas} canvas Instance of the current canvas\n * @return {Array} Positions of units either horizontal or vertical\n */\nconst createScrollManager = (componentWrappers, canvas) => {\n    const {\n        horizontalScrollBar,\n        verticalScrollBar,\n        grid\n    } = componentIndexes;\n\n    const horizontalScrollWrapper = componentWrappers[horizontalScrollBar];\n    const verticalScrollWrapper = componentWrappers[verticalScrollBar];\n    const gridWrapper = componentWrappers[grid];\n    const scrollBarManager = new ScrollManager();\n    const scrollBarComponents = {};\n\n    verticalScrollWrapper && (scrollBarComponents.vertical = verticalScrollWrapper);\n    horizontalScrollWrapper && (scrollBarComponents.horizontal = horizontalScrollWrapper);\n\n    scrollBarManager\n                    .scrollBarComponents(scrollBarComponents)\n                    .attachedComponents({\n                        grid: gridWrapper\n                    });\n    canvas.composition().hScrollBar = horizontalScrollWrapper;\n    canvas.composition().vScrollBar = verticalScrollWrapper;\n\n    [horizontalScrollWrapper, verticalScrollWrapper].forEach((wrapper) => {\n        wrapper && wrapper.manager(scrollBarManager);\n    });\n\n    gridWrapper.scrollBarManager(scrollBarManager);\n};\n\nexport const renderLayout = (canvas, renderDetails) => {\n    const layoutManager = canvas._layoutManager;\n    const gridLayout = canvas.layout();\n    const {\n\n        grid\n    } = componentIndexes;\n\n    // Get the component wrappers\n    const compWrappers = componentWrapperMaker(layoutManager, gridLayout, renderDetails);\n    const componentWrappers = Object.keys(componentIndexes).map(e => compWrappers[e]);\n    const gridWrapper = componentWrappers[grid];\n    createScrollManager(componentWrappers, canvas);\n\n    componentWrappers.forEach((componentWrapper, index) => {\n        if (componentWrapper === null) {\n            const deleteElementName = componentNames[index];\n            const component = layoutManager.getComponent(deleteElementName);\n            const deleteElementId = component ? component.renderAt() : null;\n            layoutManager.removeComponent(deleteElementId);\n        }\n    });\n    layoutManager.registerComponents(componentWrappers).compute();\n    gridWrapper.attachScrollListener();\n};\n\n","import {\n    getDataModelFromIdentifiers,\n    FieldType,\n    mergeRecursive,\n    isSimpleObject,\n    CommonProps\n} from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\n\nimport { applyInteractionPolicy } from '../helper';\n\nconst defaultInteractionPolicy = (valueMatrix, firebolt) => {\n    const isMeasure = field => field.type() === FieldType.MEASURE;\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    const xFields = [].concat(...visualGroup.getFieldsFromChannel('x'));\n    const yFields = [].concat(...visualGroup.getFieldsFromChannel('y'));\n    const colDim = xFields.every(field => field.type() === FieldType.DIMENSION);\n    const fieldInf = visualGroup.resolver().getAllFields();\n    const rowFacets = fieldInf.rowFacets;\n    const colFacets = fieldInf.colFacets;\n    valueMatrix.each((cell) => {\n        const unitFireBolt = cell.valueOf().firebolt();\n        if (!(xFields.every(isMeasure) && yFields.every(isMeasure))) {\n            const facetFields = cell.valueOf().facetByFields()[0];\n            const unitColFacets = facetFields.filter(d => colFacets.findIndex(v => v.equals(d)) !== -1);\n            const unitRowFacets = facetFields.filter(d => rowFacets.findIndex(v => v.equals(d)) !== -1);\n            let propFields;\n            if (colDim) {\n                propFields = unitColFacets.map(d => `${d}`);\n            } else {\n                propFields = unitRowFacets.map(d => `${d}`);\n            }\n\n            unitFireBolt.propagateWith('*', propFields, true);\n        }\n    });\n};\n\nconst defaultCrossInteractionPolicy = {\n    behaviours: {\n        '*': (propagationPayload, context) => {\n            const propagationCanvasAlias = propagationPayload.sourceCanvas;\n            const canvasAlias = context.parentAlias();\n            return propagationCanvasAlias ? canvasAlias === propagationCanvasAlias : true;\n        }\n    },\n    sideEffects: {\n        tooltip: (propagationPayload, context) => {\n            const propagationUnit = propagationPayload.sourceUnit;\n            const propagationCanvas = propagationPayload.sourceCanvas;\n            const unitId = context.id();\n            const canvasAlias = context.parentAlias();\n            if (propagationCanvas) {\n                return propagationCanvas !== canvasAlias ? true : unitId === propagationUnit;\n            }\n            return true;\n        }\n    }\n};\n\n/**\n * This class is responsible for dispatching any behavioural action to all the visual units housed by the canvas.\n * It is created by {@link Canvas}. This class does not handle any physical actions. Physical actions get triggered\n * in {@link VisualUnit} which is managed by it's own firebolt instance. The firebolt instance of canvas only\n * propagates the action to all the visual units in it's composition.\n *\n * To get the firebolt instance of {@link Canvas}\n * ```\n *  const firebolt = canvas.firebolt();\n * ```\n *\n * @class GroupFireBolt\n * @public\n */\nexport default class GroupFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this._interactionPolicy = this.constructor.defaultInteractionPolicy();\n        this.crossInteractionPolicy(this.constructor.defaultCrossInteractionPolicy());\n    }\n\n    static defaultInteractionPolicy () {\n        return defaultInteractionPolicy;\n    }\n\n    static defaultCrossInteractionPolicy () {\n        return defaultCrossInteractionPolicy;\n    }\n\n    interactionPolicy (...policy) {\n        if (policy.length) {\n            this._interactionPolicy = policy[0] || this.constructor.defaultInteractionPolicy();\n            return this;\n        }\n        return this._interactionPolicy;\n    }\n\n    crossInteractionPolicy (...policy) {\n        if (policy.length) {\n            this._crossInteractionPolicy = mergeRecursive(mergeRecursive({},\n                this.constructor.defaultCrossInteractionPolicy()), policy[0] || {});\n            const context = this.context;\n            applyInteractionPolicy(this);\n            context._throwback.registerImmediateListener([CommonProps.MATRIX_CREATED], () => {\n                applyInteractionPolicy(this);\n            });\n            return this;\n        }\n        return this._crossInteractionPolicy;\n    }\n\n    /**\n     * Dispatches a behavioural action with a payload. It takes the name of the behavioural action and a payload\n     * object which contains the criteria aend an array of side effects which determines what side effects are\n     * going to be shown in each visual unit of the canvas. It prepares the datamodel from the given criteria\n     * and initiates a propagation from the datamodel of canvas. Then all the visual units of canvas which listens\n     * to the propagation gets informed on which rows got selected and dispatches the behavioural action sent during\n     * propagation.\n     *\n     * To dispatch a behavioural action on the canvas\n     * ```\n     *  // Get the firebolt instance of the canvas\n     *  const firebolt = canvas.firebolt();\n     *  // Dispatch a brush behaviour\n     *  firebolt.dispatchBehaviour('brush', {\n     *      // Selects all the rows with Horsepower having range between 100 and 200.\n     *      criteria: {\n     *          Horsepower: [100, 200]\n     *      }\n     *  });\n     * // On dispatch of this behavioural action, a selection box gets created and plots gets faded out which are the\n     * // default side effects mapped to this behavioural action.\n     * ```\n     *\n     * ```\n     * Additionally, it can also be passed an array of side effects in the payload.\n     *  // Dispatch a select behaviour with only crossline as side effect.\n     *  firebolt.dispatchBehaviour('select', {\n     *      criteria: {\n     *          Cylinders: ['8']\n     *      },\n     *      sideEffects: ['crossline']\n     *  });\n     * ```\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of the behavioural action\n     * @param {Object} payload Object which contains the interaction information.\n     * @param {Object | Array.<Array>} payload.criteria Identifiers by which the selection happens.\n     * @param {Array.<string|Object>} payload.sideEffects Side effects which needs to be shown.\n     *\n     * @return {GroupFireBolt} Instance of firebolt.\n     */\n    dispatchBehaviour (behaviour, payload) {\n        const propPayload = Object.assign(payload);\n        const criteria = propPayload.criteria;\n        const data = this.context.composition().visualGroup.getGroupByData();\n        const fieldsConfig = data.getFieldsConfig();\n        const model = getDataModelFromIdentifiers(data, criteria);\n        const behaviouralAction = this._actions.behavioural[behaviour];\n\n        if (behaviouralAction) {\n            const fields = isSimpleObject(criteria) ? Object.keys(criteria) : (criteria ? criteria[0] : []);\n            const validFields = fields.filter(field => field in fieldsConfig);\n            const mutates = behaviouralAction.constructor.mutates();\n            const propConfig = {\n                payload: propPayload,\n                action: behaviour,\n                criteria: model,\n                sourceId: this.context.alias(),\n                isMutableAction: mutates,\n                propagateInterpolatedValues: validFields.every(field => fieldsConfig[field].def.type ===\n                    FieldType.MEASURE)\n            };\n            data.propagate(model, propConfig, true);\n        }\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        return this;\n    }\n}\n","import GroupFireBolt from './group-firebolt';\n\nexport default GroupFireBolt;\n","export const APP_INITIAL_STATE = {\n    app: {\n        group: {},\n        units: {},\n        layers: {},\n        canvas: {}\n    },\n    local: {\n        canvas: {},\n        group: {},\n        units: {},\n        layers: {}\n    }\n};\n\n","import { GridLayout } from '@chartshq/layout';\nimport { transactor, Store, getUniqueId, selectElement, STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { RETINAL } from '../constants';\nimport TransactionSupport from '../transaction-support';\nimport { getRenderDetails, prepareLayout, renderLayout } from './layout-maker';\nimport { localOptions, canvasOptions } from './local-options';\nimport GroupFireBolt from './firebolt';\nimport options from '../options';\nimport { APP_INITIAL_STATE } from './app-state';\nimport { initCanvas,\n        setupChangeListener,\n        setLabelRotationForAxes,\n        createGroupState,\n        createLayoutManager,\n        setLayoutInfForUnits\n} from './helper';\n/**\n * Canvas is a logical component which houses a visualization by taking multiple variable in different encoding channel.\n * Canvas manages lifecycle of many other logical component and exposes one consistent interface for creation of chart.\n * Canvas is intialized from environment with settings from environment and singleton dependencies.\n *\n * To create an instance of canvas\n * ```\n *  const env = Muze();\n *  const canvas = env.canvas()\n * ```\n *\n *\n * @class\n * @public\n * @module Canvas\n */\nexport default class Canvas extends TransactionSupport {\n\n    /**\n     * Creates reactive property accessors.\n     * - data\n     * - height\n     * - width\n     * - config\n     * This configs are retrieved from options.\n     */\n    constructor (globalDependencies) {\n        super();\n\n        this._allOptions = Object.assign({}, options, localOptions);\n        this._registry = {};\n        this._composition = {};\n        this._cachedProps = {};\n        this._alias = null;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        this._composition.layout = new GridLayout();\n        this._store = new Store(APP_INITIAL_STATE);\n\n        this._throwback = new Store({\n            [CommonProps.MATRIX_CREATED]: false\n        });\n\n        // Setters and getters will be mounted on this. The object will be mutated.\n        const namespace = STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE;\n        const allOptions = Object.assign({}, options, localOptions, canvasOptions);\n\n        transactor(this, allOptions, this._store.model, {\n            namespace\n        });\n\n        this.dependencies(Object.assign({}, globalDependencies, this._dependencies));\n        this.firebolt(new GroupFireBolt(this, {\n            behavioural: behaviouralActions,\n            physical: physicalActions,\n            physicalBehaviouralMap: {}\n        }, sideEffects, behaviourEffectMap));\n        this.alias(`canvas-${getUniqueId()}`);\n        this.title('', {});\n        this.subtitle('', {});\n        this.legend({});\n        this.color({});\n        this.shape({});\n        this.size({});\n        setupChangeListener(this);\n         // init layoutManager\n        this._layoutManager = createLayoutManager();\n    }\n\n    /**\n     * Retrieves an instance of layout which is responsible for layouting. Layout is responsible for creating faceted\n     * presentation using table layout.\n     *\n     * @public\n     *\n     * @return {GridLayout} Instance of layout attached to canvas.\n     */\n    layout (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().layout;\n    }\n\n    /**\n     * Retrieves the composition for a canvas\n     *\n     * @public\n     *\n     * @return {object} Instances of the components which canvas requires to draw the full visualization.\n     *      ```\n     *          {\n     *              layout: // Instance of {@link GridLayout}\n     *              legend: // Instance of {@link Legend}\n     *              subtitle: // Instance of {@link TextCell} using which the title is rendered\n     *              title: // Instance of {@link TextCell} using which the title is rendered\n     *              visualGroup: // Instance of {@link visualGroup}\n     *          }\n     *      ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Sets or gets the alias of the canvas. Alias is a name by which the canvas can be referred.\n     *\n     * When setter\n     * @param {string} alias Name of the alias.\n     *\n     * @return {Canvas} Instance of the canvas.\n     *\n     * When getter\n     *\n     * @return {string} Alias of canvas.\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            const visualGroup = this.composition().visualGroup;\n            this._alias = params[0];\n            visualGroup && visualGroup.alias(this.alias());\n            return this;\n        }\n        return this._alias;\n    }\n\n    /**\n     * Creates an instance initiated with given settings.\n     *\n     * @param {Object} initialSettings Initial settings to be populated in the model\n     * @param {Object} regEntry newly created instance with the initial settings\n     * @param {Object} globalDependencies dependencies which will be created only once in the page\n     *\n     * @return {Object} newly created instance with the initial settings\n     */\n    static withSettings (initialSettings, regEntry, globalDependencies) {\n        const instance = new Canvas(globalDependencies);\n\n        for (const key in initialSettings) {\n            instance[key](initialSettings[key]);\n        }\n        // set registry for instance\n        instance.registry(regEntry);\n        return instance;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof Canvas\n     */\n    static formalName () {\n        return 'canvas';\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this canvas. The firebolt instance can be used to dispatch a\n     * behaviour dynamically on the canvas. This firebolt does not handle any physical actions. It is just used to\n     * propagate the action to all the visual units in it's composition.\n     *\n     * @public\n     *\n     * @return {GroupFireBolt} Instance of firebolt associated with canvas.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Registry peoperty accessor\n     *\n     * @param {Object} reg plain old javascript object keyvalue pairs. Key containing module name and value contains\n     * module definition class. The reg object has to be flat object of level 1.\n     */\n    registry (...params) {\n        if (params.length) {\n            const components = Object.assign({}, params[0].components);\n            const componentSubRegistry = Object.assign({}, params[0].componentSubRegistry);\n\n            this._registry = { components, componentSubRegistry };\n            const initedComponents = initCanvas(this);\n            // @todo is it okay to continue this tight behaviour? If not use a resolver to resolve diff component type.\n            this._composition.visualGroup = initedComponents[0];\n            createGroupState(this);\n            this.composition().visualGroup.alias(this.alias()).store(this._store);\n            return this;\n        }\n        return this._registry;\n    }\n\n    /*\n     * Prepare dependencies for top level elements\n     */\n    dependencies (...param) {\n        if (param.length) {\n            this._dependencies = param[0];\n            return this;\n        }\n        // @todo prepare dependencies here.\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     * @param {*} lifeCycles\n     *\n     * @memberof Canvas\n     */\n    lifeCycle (lifeCycles) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        if (lifeCycles) {\n            lifeCycleManager.register(lifeCycles);\n            return this;\n        }\n        return lifeCycleManager;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof Canvas\n     */\n    legend (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().legend;\n    }\n\n    /**\n     * Returns a promise for various {@link LifecycleEvents} of the various components of canvas. The promise gets\n     * resolved once the particular event gets completed.\n     *\n     * To use this,\n     * ```\n     *      canvas.once('layer.drawn').then(() => {\n     *          // Do any post drawing work here.\n     *      });\n     * ```\n     * @public\n     *\n     * @param {string} eventName Name of the lifecycle event.\n     *\n     * @return {Promise} A pending promise waiting for resolve to be called.\n     */\n    once (eventName) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        return lifeCycleManager.retrieve(eventName);\n    }\n\n    /**\n     * Internal function to trigger render, this method is cognizant of all the properties of the core modules and\n     * establish a passive reactivity. Passive reactivity is not always a bad thing :)\n     * @internal\n     */\n    render () {\n        const mount = this.mount();\n        // removeChild(mount);\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        // Get render details including arrangement and measurement\n        const renderDetails = getRenderDetails(this, mount);\n        lifeCycleManager.notify({ client: this, action: 'beforedraw' });\n        // Prepare the layout by triggering the matrix calculation\n        prepareLayout(this.layout(), renderDetails);\n\n        this._layoutManager.dimension({\n            height: renderDetails.measurement.canvasHeight,\n            width: renderDetails.measurement.canvasWidth\n        });\n\n        this._layoutManager.renderAt(mount);\n\n        // Render each component\n        renderLayout(this, renderDetails);\n\n        setLayoutInfForUnits(this);\n\n        // setLabelRotation\n        setLabelRotationForAxes(this);\n    }\n\n    /**\n     * Returns the instances of x axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the top axis and the second element represents the bottom\n     *   // axis.\n     *   [\n     *      [X1, X2],\n     *      [X3, X4]\n     *   ]\n     * ```\n     * @public\n     *\n     * @return {Array.<Array>} Instances of x axis.\n     */\n    xAxes () {\n        return this.composition().visualGroup.getAxes('x');\n    }\n\n    /**\n     * Returns the instances of y axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the left axis and the second element represents the right\n     *   // axis.\n     *   [\n     *      [Y1, Y2],\n     *      [Y3, Y4]\n     *   ]\n     * ```\n     * @public\n     * @return {Array.<Array>} Instances of y axis.\n     */\n    yAxes () {\n        return this.composition().visualGroup.getAxes('y');\n    }\n\n    /**\n     * Returns all the retinal axis of the canvas. Color, shape and size axis are combinedly called retinal axis.\n     *\n     * @public\n     * @return {Object} Instances of retinal axis.\n     *          ```\n     *              {\n     *                  color: [ColorAxis], // Array of color axis.\n     *                  shape: [ShapeAxis], // Array of shape axis.\n     *                  size: [SizeAxis] // Array of size axis.\n     *              }\n     *          ```\n     */\n    getRetinalAxes () {\n        const visualGroup = this.composition().visualGroup;\n        return visualGroup.getAxes(RETINAL);\n    }\n\n    mount (...params) {\n        if (params.length) {\n            let value = params[0];\n            if (typeof params[0] === 'string') {\n                value = selectElement(params[0]).node();\n            }\n            this._mount = value;\n            return this;\n        }\n        return this._mount;\n    }\n}\n","import { cellRegistry, SimpleCell } from '@chartshq/visual-cell';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { layerRegistry } from '@chartshq/visual-layer';\nimport { SimpleGroup, VisualGroup } from '@chartshq/visual-group';\n\nexport const COMPONENTS = {\n    VisualGroup,\n    VisualUnit\n};\nexport const SUBREGISTRIES = {\n    cellRegistry,\n    layerRegistry\n};\nexport const INTERFACES = {\n    SimpleGroup,\n    SimpleCell\n};\n\n","import { DEFAULT_LAYERS } from './defaults';\n\nexport default () => {\n    const reg = DEFAULT_LAYERS;\n    const regObj = {\n        set: (key, def) => {\n            reg[key] = def;\n            return regObj;\n        },\n        get: () => reg\n    };\n    return regObj;\n};\n","import {\n    transactor,\n    Smartlabel,\n    enableChainedTransaction,\n    LifeCycleManager,\n    DataModel,\n    makeElement,\n    getClientPoint,\n    selectElement,\n    getEvent,\n    require,\n    DateTimeFormatter\n} from 'muze-utils';\n\nimport {\n    SurrogateSideEffect,\n    SpawnableSideEffect,\n    sideEffects,\n    PersistentBehaviour,\n    GenericBehaviour,\n    VolatileBehaviour,\n    behaviouralActions,\n    GenericSideEffect\n} from '@chartshq/muze-firebolt';\nimport { layerFactory } from '@chartshq/visual-layer';\nimport pkg from '../package.json';\nimport * as operators from './operators';\nimport { actionModel as ActionModel } from './action-model';\nimport options from './options';\nimport { Canvas } from './canvas';\nimport { COMPONENTS, SUBREGISTRIES } from './default-registry';\nimport './muze.scss';\n\n// Cache singleton instances which should be included only once in a page\nconst globalCache = {};\nconst defaultRegistry = COMPONENTS;\n\nconst overrideRegistryDefinitions = (overrideRegistry, registry) => {\n    for (const prop in overrideRegistry) {\n        registry.set(prop, overrideRegistry[prop]);\n    }\n};\n\n/**\n * Entry point to renderer. Initializes an environment with settings and registries for canvas. This is a simple wrapper\n * over {@link Canvas} which enables common configuration passing to multiple such canvases.\n *\n * Everytime `muze()` is called it creates an environment. These environment supports subset of APIs of Canvas. If\n * common configuration is used to render multiple canvases then it can be set directly in the env. Like if data is\n * common across all the visulization then its better to set the data in env. When a canvas is created it receives all\n * those configuration from env.\n *\n * ```\n *  // Creates an environment\n *  const env = muze()\n *  // Set data property in environment, so that all the canvas created from the same environment gets this data\n *  // automatically\n *  env.data(dm);\n *  // Creates canvas, by default env pushes data to canvas instance\n *  const canvas = env.canvas();\n * ```\n *\n * If a property is set on both environment and canvas instance, property set on canvas instance gets more priority.\n *\n * @public\n * @module muze\n * @namespace Muze\n *\n * @return {Env} Instance of an environment\n */\nconst muze = () => {\n    // Setters and getters will be mounted on this. Object will be mutated.\n    const [env, globalStore] = transactor({}, options);\n    const components = Object.assign({}, COMPONENTS);\n    const componentSubRegistryDef = Object.assign(SUBREGISTRIES);\n    const componentSubRegistry = {};\n\n    for (const prop in componentSubRegistryDef) {\n        componentSubRegistry[prop] = componentSubRegistryDef[prop]();\n    }\n\n    // Apart form the setter getter, an instance method is injected to create real renderer instances\n    env.canvas = () => {\n        // Create a canvas instance with this settings\n        const settings = globalStore.serialize();\n        const canvas = Canvas.withSettings(settings, { /* registry */\n            components,\n            componentSubRegistry\n        }, env.globalDependencies());\n\n        // Whenever settings is changed canvas is updated\n        enableChainedTransaction(globalStore, canvas, Object.keys(settings));\n\n        return canvas;\n    };\n\n    // Global dependencies for for compositions. Only one copy of the same should be in the page\n    env.globalDependencies = () => {\n        if (!globalCache.smartlabel) {\n            globalCache.smartlabel = new Smartlabel(1, 'body');\n        }\n        return {\n            smartlabel: globalCache.smartlabel,\n            lifeCycleManager: new LifeCycleManager()\n        };\n    };\n\n    // Retrieves global settings. This getter is readonly so that user can't change this as change should happen\n    // only from setter to avoid unwanted sync issues.\n    env.settings = () => globalStore.serialize();\n\n    env.registry = (...overrideRegistry) => {\n        // Selectively copy the properties from COMPONENTS\n        if (overrideRegistry.length) {\n            for (const prop in overrideRegistry) {\n                if (prop in defaultRegistry) {\n                    components[prop] = overrideRegistry[prop];\n                }\n            }\n            return env;\n        }\n        return components;\n    };\n\n    env.cellRegistry = (...overrideRegistry) => {\n        const cellRegistry = componentSubRegistry.cellRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], cellRegistry);\n            return env;\n        }\n        return cellRegistry.get();\n    };\n\n    env.layerRegistry = (...overrideRegistry) => {\n        const layerRegistry = componentSubRegistry.layerRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], layerRegistry);\n            return env;\n        }\n        return layerRegistry.get();\n    };\n\n    return env;\n};\n\nconst SideEffects = {\n    sideEffects,\n    standards: {\n        SurrogateSideEffect,\n        SpawnableSideEffect,\n        GenericSideEffect\n    }\n};\n\nconst Behaviours = {\n    behaviouralActions,\n    standards: {\n        GenericBehaviour,\n        PersistentBehaviour,\n        VolatileBehaviour\n    }\n};\n\nmuze.DataModel = DataModel;\nmuze.version = pkg.version;\nmuze.SideEffects = SideEffects;\nmuze.ActionModel = ActionModel;\nmuze.layerFactory = layerFactory;\nmuze.Operators = operators;\nmuze.Behaviours = Behaviours;\nmuze.utils = {\n    getClientPoint,\n    getEvent,\n    makeElement,\n    selectElement,\n    DateTimeFormatter,\n    require\n};\n\nexport default muze;\n"],"sourceRoot":""}